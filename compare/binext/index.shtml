<!--#set var="TITLE" value="Creating Binary Extensions" -->
<!--#set var="KEYWORDS" value="compare, computer, languages
binary, extension" -->
<!--#include virtual="../../html/header.shtml" -->

<p>
  A number of languages offer a method of extending them in C (or
  another compiled language).  The usual motivation is to implement
  something a little faster than writing it solely in the original
  language or to link to an external binary library.

<p>
  A number of languages can also use <a
  href="http://www.swig.org/">SWIG</a> to bind to C/C++, but here
  we'll examine the facilities provided by the language itself for
  this purpose.

<p>
  In this section we'll compare how to write a binary extension to
  various languages to calculate <a
  href="../../bench/ackermann">Ackermann's function</a>.

<p>
<table align="center" border="1" cellspacing="2" cellpadding="4" bgcolor="#e0c0e0">
<tr><th bgcolor="black"><font color="white">Language</font></th>
<th bgcolor="black"><font color="white">Extension Method</font></th></tr>
<tr><td>Eiffel</td>
    <td><a href="eiffel/">SmallEiffel links directly to C</a></td></tr>
<tr><td>Java</td>
    <td><a href="java/">glues to C with JNI</a></td></tr>
<tr><td>Perl</td>
    <td><a href="perl/">glues to C with XS macro language</a></td></tr>
<tr><td>Python</td>
    <td><a href="python/">glues to C with Python API functions</a></td></tr>
<tr><td>Ruby</td>
    <td><a href="ruby/">glues to C with Ruby's simple C interface</a></td></tr>
<!--
<tr><td colspan="2" bgcolor="#e0c0c0"><small><i>
    </i></small></td></tr>
 -->
</table>


<!--#include virtual="../../html/footer.shtml" -->
