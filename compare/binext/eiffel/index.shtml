<!--#set var="TITLE" value="Creating A Binary Python Extension" -->
<!--#set var="KEYWORDS" value="compare, computer, languages
eiffel, binary, extension" -->
<!--#include virtual="../../../html/header.shtml" -->

<p>
  This is a short description of what is involved in creating a
  function in C to calculate Ackermann's function, so that it can be
  called from within an SmallEiffel program.

<p>
  SmallEiffel comes with minimal but sufficient documentation on how
  to link to external C functions.  See the SmallEiffel man pages:
  <b>external</b> and <b>compile_to_c</b>, and the examples under the
  directory <b>lib_show/</b>.

<p>
  Since SmallEiffel compiles to C first, linkage with C is as you
  would imagine very straightforward.

<p>
  The basic steps to create your Ackermann's function extension are
  this:

<ol>
  <li>Write a <a href="Ack.c">C function</a>.
  <li>In your <a href="ackermann.e">Eiffel program</a>, include an
  external declaration for the C function.
  <li>
    Now you can link to the external C function like this:
<pre>&gt; compile -clean -o ackermann -boost ackermann Ack.c
</pre>
</ol>

<!--#include virtual="../../../html/footer.shtml" -->
