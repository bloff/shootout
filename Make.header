# Language Benchmark Shootout Makefile Header
# $Id: Make.header,v 1.104 2008-03-28 21:02:29 igouy-guest Exp $

############################################################
# common definitions go here
############################################################

# get rid of this hardcoded path
BIN := /opt/shootout/shootout/bin

MINIBENCH := $(BIN)/minibench --swapok # --debug

JDKRUN := /usr/lib/j2se/1.5/bin/java

BASH := /bin/bash
BIGLOO := /usr/bin/bigloo
BIGFORTH := /usr/bin/bigforth
CHICKEN := /usr/local/bin/csc
CIAOC := /usr/bin/ciaoc
CLM := /usr/bin/clm
CMUCL := /usr/bin/lisp
CURRY := /usr/bin/cyc
CYCLONE := /usr/local/bin/cyclone
DLANG := /usr/bin/dmd
ERLC := /usr/bin/erlc
ERLANG := /usr/bin/erl
FELIX := /usr/bin/flx
FPASCAL := /usr/bin/fpc
G95 := /usr/bin/g95
GFORTRAN := /usr/bin/gfortran
GAWK := /usr/bin/gawk
GCC := /usr/bin/gcc-4.2
GCL := /usr/bin/gclcvs.notworking
GDC := /usr/bin/gdc
GFORTH := /usr/bin/gforth-fast
GHC := /usr/bin/ghc
GUILE := /usr/bin/guile
GNATC := /usr/bin/gnatmake
GNATCHOP := /usr/bin/gnatchop
GPC := /usr/bin/gpc-2.1-3.4
GPLC := /usr/bin/gplc
GROOVY := /usr/bin/groovy
GST := /usr/bin/gst
GWYDION := /usr/bin/d2c
GXX := /usr/bin/g++
HUGS := /usr/bin/runhugs
HUGSI := /usr/bin/hugs
ICC  := /opt/intel/cc/9.0/bin/icc
ICON := /usr/bin/icont
ICPP := /opt/intel/cc/9.0/bin/icpc
IFC  := /opt/intel/fc/9.0/bin/ifort
IRON := /opt/IronPython/IronPython-1.1/ipy.exe
IO := /usr/local/bin/io_static
GIJ := /usr/bin/gij-4.1
GCJ := /usr/bin/gcj-4.2
JAVA14 := /usr/lib/j2se/1.4/bin/java
JAVAC14 := /usr/lib/j2se/1.4/bin/javac
JAVA := /usr/lib/jvm/java-6-sun-1.6.0.00/bin/java
JAVAC := /usr/lib/jvm/java-6-sun-1.6.0.00/bin/javac
KAFFE := /usr/bin/kaffe
JSC := /opt/local/bin/testkjs
JAVASCRIPT := /opt/local/bin/js
JDKRUN := /usr/lib/jvm/java-6-sun-1.6.0.00/bin/java
LISAAC := /usr/bin/lisaac
LUA := /usr/bin/lua5.1
MAWK := /usr/bin/mawk
MERCURY := /usr/bin/mmake
MLTON := /usr/bin/mlton
MMC := /usr/bin/mmc
MONOC := /usr/bin/gmcs
MONORUN := /usr/bin/mono
MZC := /usr/bin/mzc
MZSCHEME := /usr/bin/mzscheme
NEKO := /usr/bin/neko
NEKOC := /usr/bin/nekoc
NEWLISP := /usr/bin/newlisp
NHC98 := /usr/bin/nhc98
NICEC := /usr/bin/nicec
OBJC := /usr/bin/gcc
OCAML := /usr/bin/ocamlopt
OCAMLB := /usr/bin/ocamlc
OCTAVE := /usr/bin/octave
OOC := /usr/bin/oo2c
OZC := /usr/bin/ozc
PARROT := /usr/bin/parrot
PERL := /usr/bin/perl
PHP := /usr/bin/php5
PIKE := /usr/bin/pike
POLY := /usr/bin/poly
POPLISP := /usr/bin/pop11.bin +clisp
POP11 := /usr/bin/pop11.bin
POPPROLOG := /usr/bin/pop11.bin +prolog
POPSML := /usr/bin/pop11.bin +pml
PYTHON := /usr/bin/python2.5
PSYCO := /usr/bin/python2.5
REGINA := /usr/bin/regina
REP := /usr/bin/rep
RUBY := /usr/bin/ruby1.8
SABLEVM := /usr/bin/sablevm
SABLEVMC := /usr/bin/jikes-sablevm
SBCL := /usr/bin/sbcl
SCALA := /usr/bin/scala
SCALAC := /usr/bin/scalac
SE := /usr/lib/SmartEiffel/bin/se
SLANG := /usr/bin/slsh
SMLNJ := /usr/bin/sml
SMLNJBUILD := /usr/bin/ml-build
SQUEAKVM := /notwork #/usr/bin/squeak
SQUEAKIM := /opt/shootout/Squeak
STALIN := /usr/bin/stalin
SWIPROLOG := /usr/bin/pl
TCC := /usr/bin/tcc
TCL  := /usr/bin/tclsh
XDS := /opt/xds_x86/bin/xc
#XDSC := /opt/xds_c/bin/xm
XEMACS := /usr/bin/xemacs
YAP := /usr/bin/yap

LANGS := $(BASH) $(BIGLOO) $(CHICKEN) $(CIAOC) $(CLM) $(CMUCL) $(CURRY) $(CYCLONE) \
	 $(DLANG) $(ERLANG) $(FELIX) $(FPASCAL) $(G95) $(GFORTRAN) \
	 $(GAWK) $(GCC) $(GCL) $(GCJ) $(GDC) $(GFORTH) $(GHC) $(GPC) $(GST) $(GUILE) \
	 $(GWYDION) $(GXX) $(HUGS) $(ICON) $(ICPP) $(IFC) $(IO) $(IRON) $(GIJ) \
	 $(JAVA14) $(JAVA) $(KAFFE) $(KJS) $(JAVASCRIPT) $(LUA) $(MAWK) $(MERCURY) \
	 $(MLTON) $(MZC) $(MZSCHEME) $(NEWLISP) $(NHC98) $(NICE) $(OO2C) \
	 $(OBJC) $(OCAML) $(OCAMLB) $(OCTAVE) $(PERL) $(PHP) $(PIKE) $(PYTHON) \
	 $(POP11) $(POPLISP) $(POPSML) $(POPPROLOG) $(PSYCO) $(REGINA) $(REP) \
	 $(RUBY) $(SABLEVM) $(SBCL) $(SLANG) $(SMLNJ) $(STALIN) $(SWIPROLOG) \
	 $(TCC) $(TCL) $(XDS) $(XEMACS)

# The SELECT_LANGS variable allows to select a subset of languages.
# It should be set to a shell expression that matches desired file extensions.
# For only one language: make test SELECT_LANGS=bash
# For several languages: make test SELECT_LANGS='{bash,gawk,guile}'
# By default all languages are considered.

SELECT_LANGS := *

JAVAOPT = -server
JREOPTS = -server

############################################################
# we define a default rule to tell user what to do 
# if they just randomly type "make" here.
############################################################
default:
	@echo "No default rule, try:"
	@echo "  make all	# do almost everything"
	@echo "  make plot	# create data and graphs"
	@echo "  make show	# \"make plot\" and then display graphs"
	@echo "  make test	# like \"make plot\", but run only one repetition of tests"
	@echo "  make clean	# remove generated/data files to prep for full re-run"
	@echo "  make report	# report which tests are written (or not)"

.EXPORT_ALL_VARIABLES:

