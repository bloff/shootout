# Language Benchmark Shootout Makefile Header
# $Id: Make.header,v 1.16 2004-06-18 09:34:00 dbr-guest Exp $

############################################################
# common definitions go here
############################################################

MINIBENCH := minibench --swapok # --debug

BASH := /bin/bash
BIGLOO := /usr/bin/bigloo
CLM := /usr/bin/clm
CMUCL := /usr/bin/lisp
ERLC := /usr/bin/erlc
ERLANG := /usr/bin/erl
GAWK := /usr/bin/gawk
GCC := /usr/bin/gcc
GCJ := /usr/bin/gcj
GFORTH := /usr/bin/gforth-fast
GHC := /usr/bin/ghc
GUILE := /usr/bin/guile
GNATC := /usr/bin/gcc
GNATB := /usr/bin/gnatbind
GNATL := /usr/bin/gnatlink
GWYDION := /usr/bin/d2c
GXX := /usr/bin/g++
ICON := /usr/bin/icont
JAVA := /usr/bin/gij
JAVAC := /usr/bin/gcj
KAFFE := /usr/bin/kaffe
LUA := /usr/bin/lua
MAWK := /usr/bin/mawk
MLTON := /usr/bin/mlton
MZC := /usr/bin/mzc
MZSCHEME := /usr/bin/mzscheme
OCAML := /usr/bin/ocamlopt
OCAMLB := /usr/bin/ocamlc
OZC := /usr/bin/ozc
PERL := /usr/bin/perl
PHP := /usr/bin/php4
PIKE := /usr/bin/pike
PYTHON := /usr/bin/python
PSYCO := /usr/bin/python
REP := /usr/bin/rep
RUBY := /usr/bin/ruby
SABLEVM := /usr/bin/sablevm
SABLEVMC := /usr/bin/jikes-sablevm
SBCL := /usr/bin/sbcl-mt
SE := /usr/bin/se-compile
SLANG := /usr/bin/slsh
SMLNJ := /usr/bin/sml
STALIN := /usr/bin/stalin
TCL  := /usr/bin/tclsh
XEMACS := /usr/bin/xemacs

LANGS := $(BASH) $(BIGLOO) $(CLM) $(CMUCL) $(ERLANG) $(GAWK) $(GCC) \
	 $(GCJ) $(GFORTH) $(GHC) $(GUILE) $(GWYDION) $(GXX) $(ICON) $(JAVA) \
	 $(KAFFE) $(LUA) $(MAWK) $(MLTON) $(MZC) $(MZSCHEME) $(OCAML) \
	 $(OCAMLB) $(PERL) $(PHP) $(PIKE) $(PYTHON) $(PSYCO) $(REP) $(RUBY) \
	 $(SABLEVM) $(SBCL) $(SLANG) $(SMLNJ) $(STALIN) $(TCL) $(XEMACS)


# The SELECT_LANGS variable allows to select a subset of languages.
# It should be set to a shell expression that matches desired file extensions.
# For only one language: make test SELECT_LANGS=bash
# For several languages: make test SELECT_LANGS='{bash,gawk,guile}'
# By default all languages are considered.

SELECT_LANGS := *

############################################################
# we define a default rule to tell user what to do 
# if they just randomly type "make" here.
############################################################
default:
	@echo "No default rule, try:"
	@echo "  make all	# do almost everything"
	@echo "  make plot	# create data and graphs"
	@echo "  make show	# \"make plot\" and then display graphs"
	@echo "  make test	# like \"make plot\", but run only one repetition of tests"
	@echo "  make clean	# remove generated/data files to prep for full re-run"
	@echo "  make report	# report which tests are written (or not)"

.EXPORT_ALL_VARIABLES:

