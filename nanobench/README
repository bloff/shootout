
	nanobench - The Computer Language Benchmarks Game

 28 Aug 2008, Isaac Gouy

	
 MOTIVATION

 Too many problems getting the old minibench Perl script to run on a 
 new Ubuntu x64 quadcore install - specifically with the GTOP wrapper.

 nanobench is written to create the data files, markup files and text
 files that have been presented through "The Computer Language Benchmarks
 Game" website over the past 4 years.

 
 REQUIREMENTS

 Linux (possibly maybe some other Unix)
 Python 2.5
 make
 cvs (possibly maybe)
 cmp
 diff
 ndiff		http://www.math.utah.edu/~beebe/software/ndiff/
 highlight	http://www.andre-simon.de/zip/download.html


 LOCAL CONFIGURATION

 1) copy, rename and modify - /shootout/nanobench/makefiles/u64q.ini
 2) copy, rename and modify - /shootout/nanobench/makefiles/u64q.programs.Makefile

 Specifically,
  ROOT DIRS 
   root is the directory where you want nanobench to put measurements and files.
   src is the directory that contains benchmark directories with source code.
   nano is the directory that contains this README file.

  SWEEP DIRS
   dat_sweep, code_sweep, log_sweep should be subdirectories of root.

  makefile should be the path to your renamed *.programs.Makefile

 3) copy, rename and modify the bash script - /shootout/nanobench
  

 Generally,
  filter the benchmarks you're interested in using ONLYDIRS
  filter the language implementations you're interested in using ONLY or IGNORE
  
  use your renamed ?.programs.Makefile to prepare or build a program before the run.


 PROGRAM OUTPUT

  1) Code directory created under root, containing the accumulated log files
  and 'highlight' markup files shown on "The Computer Language Benchmarks Game" website.

  2) Data directory created under root, containing the data.csv & ndata.csv 
  data files shown on "The Computer Language Benchmarks Game" website (they only
  have the fastest measurements from repeated runs); and a bzipped bulkdata.csv
  which contains ALL the measurements for programs which did not fail - so that's
  probably what you'll want to look at.

  3) for each source code directory, a matching directory will be created under root,
  containing
   code subdirectory - symlinks to source files and 'highlight' markup files
   data subdirectory - compressed measurement files 
   log subdirectory - log files recording each program build and run
   tmp subdirectory - files needed to be build and measure the current program 
   expected output files for various data input sizes *_out


 USAGE
 
  use the nanobench bash script to invoke nanobench with your particular *.ini file

  measurements are made when a source code file in a src subdirectory doesn't have a 
  corresponding *.dat file or the *.dat file is older.

  re-measurement can be triggered by deleting a particular *.dat file

  re-measurement can be triggered for a particular source file extension
     ./nanobench --force java

  re-measurement can be triggered for a particular benchmark
     ./nanobench --force binarytrees
  
