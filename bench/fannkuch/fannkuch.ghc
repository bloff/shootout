-- The Great Computer Language Shootout
-- http://shootout.alioth.debian.org/
-- compile with:  ghc -O2 -o fannkuch fannkuch.hs
-- contributed by Greg Buchholz

import System(getArgs)

main = do   [n] <- getArgs
            let p = permutations [1..(read n)]
            putStr $ "Pfannkuchen(" ++ n ++ ") = "
            print $ maximum $ map (flop 0) p
            
flop acc (1:xs) = acc
flop acc list@(x:xs) = flop (acc+1) mangle
    where   mangle = (reverse front) ++ back
            (front,back) = splitAt x list

permutations []         =  [[]]
permutations (x:xs)     =  [zs | ys <- permutations xs, zs <- interleave x ys ]
  where interleave x []     =  [[x]]
        interleave x (y:ys) =  [x:y:ys] ++ map (y:) (interleave x ys)