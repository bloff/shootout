"* The Computer Language Shootout
    http://shootout.alioth.debian.org/
    contributed by Paolo Bonzini *"!

'From Squeak3.9 of 7 November 2006 [latest update: #7067] on 12 April 2007 at 8:45:44 pm'!

Object subclass: #PermGenerator	instanceVariableNames: 'timesRotated perm atEnd'	classVariableNames: ''	poolDictionaries: ''	category: 'Shootout'!
Object subclass: #Tests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Shootout'!!Array methodsFor: 'benchmarking' stamp: '  11/29/2006 23:11'!pfannkuchen    | first complement a b k |    k := 0.    [ (first := self at: 1) == 1 ] whileFalse: [	k := k + 1.	complement := first + 1.	1 to: first // 2 do: [ :i |	    a := self at: i.	    b := self at: complement - i.	    self at: i put: b.	    self at: complement - i put: a.	]    ].    ^k! !!PermGenerator methodsFor: 'initialize-release' stamp: '  11/29/2006 23:06'!initialize: size    perm := (1 to: size) asArray.    timesRotated := Array new: size withAll: 0.    atEnd := false! !!PermGenerator methodsFor: 'initialize-release' stamp: '  11/29/2006 23:07'!makeNext    | temp remainder |    "Generate the next permutation."    2 to: perm size do: [ :r |	"Rotate the first r items to the left."        temp := perm at: 1.        1 to: r - 1 do: [ :i | perm at: i put: (perm at: i + 1) ].        perm at: r put: temp.        remainder := timesRotated at: r put: ((timesRotated at: r) + 1) \\ r.        remainder = 0 ifFalse: [ ^self ].	"After r rotations, the first r items are in their original positions.	 Go on rotating the first r+1 items."    ].    "We are past the final permutation."    atEnd := true! !!PermGenerator methodsFor: 'benchmarks' stamp: '  4/12/2007 20:43'!maxPfannkuchenTo: output   | max permutation check |   max := 0.   check := 0.   [self atEnd] whileFalse:      [permutation := self next.      check < 30 ifTrue:         [permutation do: [:each | output print: each].         output cr.         check := check + 1].      max := max max: permutation pfannkuchen].   ^max! !!PermGenerator methodsFor: 'accessing' stamp: '  11/29/2006 23:07'!atEnd    ^atEnd! !!PermGenerator methodsFor: 'accessing' stamp: '  11/29/2006 23:07'!next    | result |    result := perm copy.    self makeNext.    ^result! !!PermGenerator class methodsFor: 'instance creation' stamp: '  11/29/2006 23:06'!new: size    ^self new	initialize: size;	yourself! !!Tests class methodsFor: 'benchmarking' stamp: '  4/12/2007 20:41'!fannkuch: n to: output   ^(PermGenerator new: n) maxPfannkuchenTo: output! !!Tests class methodsFor: 'platform' stamp: '  4/12/2007 18:57'!arg   ^(SmalltalkImage current getSystemAttribute: 3) asInteger! !!Tests class methodsFor: 'platform' stamp: '  4/12/2007 19:03'!newline   ^Character lf! !!Tests class methodsFor: 'platform' stamp: '  4/12/2007 18:57'!stdout   ^UnixProcess stdOut! !!Tests class methodsFor: 'benchmark scripts' stamp: '  4/12/2007 20:40'!fannkuch   | n |   n := self arg.   self stdout      nextPutAll: 'Pfannkuchen(', n printString, ') = ';      nextPutAll: (self fannkuch: n to: self stdout) printString;      nextPut: self newline.! !
