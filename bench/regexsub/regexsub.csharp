/* The Great Computer Language Shootout 
 * http://shootout.alioth.debian.org/
 * 
 * contributed by Isaac Gouy */

using System;
using System.Text.RegularExpressions;

class regexsub
{

   static void Main(string[] args){
      IUB[] codes = {
          new IUB("B", "(c|g|t)")
         ,new IUB("D", "(a|g|t)")
         ,new IUB("H", "(a|c|t)")
         ,new IUB("K", "(g|t)")
         ,new IUB("M", "(a|c)")
         ,new IUB("N", "(a|c|g|t)")
         ,new IUB("R", "(a|g)")
         ,new IUB("S", "(c|g)")
         ,new IUB("V", "(a|c|g)")
         ,new IUB("W", "(a|t)")
         ,new IUB("Y", "(c|t)")
      };  


      String sequence = Console.In.ReadToEnd();
      Console.WriteLine("{0}", sequence.Length);

      // remove FASTA sequence descriptions and new-lines
      Regex r = new Regex(">.*\n|\n", RegexOptions.Compiled);
      sequence = r.Replace(sequence,"");
      Console.WriteLine("{0}", sequence.Length);

      foreach (IUB iub in codes) {
         r = new Regex(iub.code, RegexOptions.Compiled);
         sequence = r.Replace(sequence,iub.alternatives);
      }
      Console.WriteLine("{0}", sequence.Length);
   }


   struct IUB {
      public string code;
      public string alternatives;

      public IUB(string code, string alternatives) {
         this.code = code;
         this.alternatives = alternatives;
      }
   }
}

