\ The Computer Language Shootout
\ http://shootout.alioth.debian.org/
\ contributed by Bernd Paysan
\ run with "-m 64M"

include regexp.fs
include filehelp.fs
include locals.fs
include string.fs

\ helper word for regexp: Replace current pattern
\ This will be part of the next release of regexp.fs

[IFUNDEF] <<"
    0 Value >>ptr
    0 Value <<ptr
    Variable >>string
    : >>  ( addr -- addr )  dup to >>ptr ;
    : << ( run-addr addr u -- run-addr )
	<<ptr 0= IF  start$ to <<ptr  THEN
	>>string @ 0= IF  s" " >>string $!  THEN
	<<ptr >>ptr over - >>string $+!
	>>string $+! dup to <<ptr ;
    : <<"  '" parse postpone SLiteral postpone << ; immediate
    : >>string@ ( -- addr u )
	>>string $@len dup allocate throw
	swap 2dup >>string $@ drop -rot move
	>>string $off  0 to >>ptr  0 to <<ptr ;
    : >>next ( -- addr u ) <<ptr end$ over - ;
[THEN]

\ fast replacement for ="
\ this replacement will be part of the next relase of regexp.fs

: =" '" parse bounds ?DO
	]] count [[ I c@ ]] Literal <> ?LEAVE [[
    LOOP ; immediate

Variable cnt
charclass [acg] 'a +char 'c +char 'g +char
charclass [act] 'a +char 'c +char 't +char
charclass [agt] 'a +char 'g +char 't +char
charclass [cgt] 'c +char 'g +char 't +char

: remove-newlines ( addr u -- addr u' )
    BEGIN
	(( // >> {{ ` > {** .? **} || }} count #lf <> ?LEAVE <<" " ))
    WHILE
	    >>next
    REPEAT
    end$ s" " << >>string@ ;

: pat1 ( addr u -- n )  cnt off
    (( // {{ =" agggtaaa" || =" tttaccct" }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat2 ( addr u -- n )  cnt off
    (( // {{ [cgt] c? =" gggtaaa" || =" tttaccc" [acg] c? }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat3 ( addr u -- n )  cnt off
    (( // {{ ` a [act] c? =" ggtaaa" || =" tttacc" [agt] c? ` t }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat4 ( addr u -- n )  cnt off
    (( // {{ =" ag" [act] c? =" gtaaa" || =" tttac" [agt] c? =" ct" }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat5 ( addr u -- n )  cnt off
    (( // {{ =" agg" [act] c? =" taaa" || =" ttta" [agt] c? =" cct" }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat6 ( addr u -- n )  cnt off
    (( // {{ =" aggg" [acg] c? =" aaa" || =" ttt" [cgt] c? =" ccct" }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat7 ( addr u -- n )  cnt off
    (( // {{ =" agggt" [cgt] c? =" aa" || =" tt" [acg] c? =" accct" }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat8 ( addr u -- n )  cnt off
    (( // {{ =" agggta" [cgt] c? ` a || ` t [acg] c? =" taccct" }} 1 cnt +! \$ ))
    drop cnt @ ;
: pat9 ( addr u -- n )  cnt off
    (( // {{ =" agggtaa" [cgt] c? || [acg] c? =" ttaccct" }} 1 cnt +! \$ ))
    drop cnt @ ;

stdin slurp-fid dup Constant ilen
remove-newlines dup Constant clen 2Constant 'stdin
burp

.( agggtaaa|tttaccct ) 'stdin pat1 1 .r cr
.( [cgt]gggtaaa|tttaccc[acg] ) 'stdin pat2 1 .r cr
.( a[act]ggtaaa|tttacc[agt]t ) 'stdin pat3 1 .r cr
.( ag[act]gtaaa|tttac[agt]ct ) 'stdin pat4 1 .r cr
.( agg[act]taaa|ttta[agt]cct ) 'stdin pat5 1 .r cr
.( aggg[acg]aaa|ttt[cgt]ccct ) 'stdin pat6 1 .r cr
.( agggt[cgt]aa|tt[acg]accct ) 'stdin pat7 1 .r cr
.( agggta[cgt]a|t[acg]taccct ) 'stdin pat8 1 .r cr
.( agggtaa[cgt]|[acg]ttaccct ) 'stdin pat9 1 .r cr

: replace-alternatives ( addr u -- )
    BEGIN
	(( // >>
	{{ ` B <<" (c|g|t)" ||
	   ` D <<" (a|g|t)" ||
	   ` H <<" (a|c|t)" ||
	   ` K <<" (g|t)" ||
	   ` M <<" (a|c)" ||
	   ` N <<" (a|c|g|t)" ||
	   ` R <<" (a|g)" ||
	   ` S <<" (c|t)" ||
	   ` V <<" (a|c|g)" ||
	   ` W <<" (a|t)" ||
	   ` Y <<" (c|t)" }}
	))
    WHILE
	    >>next
    REPEAT
    end$ s" " << >>string@ ;

cr
ilen 1 .r cr
clen 1 .r cr

'stdin replace-alternatives dup 1 .r cr

bye
