\ The Computer Language Shootout
\ http://shootout.alioth.debian.org/
\ contributed by Bernd Paysan
\ run with "-m 64M"

include locals.fs
include string.fs
include regexp.fs
include filehelp.fs

\ helper word for regexp: Replace current pattern
\ This will be part of the next release of regexp.fs

[IFUNDEF] <<"
    0 Value >>ptr
    0 Value <<ptr
    Variable >>string
    : >>  ( addr -- addr )  dup to >>ptr ;
    : << ( run-addr addr u -- run-addr )
	<<ptr 0= IF  start$ to <<ptr  THEN
	>>string @ 0= IF  s" " >>string $!  THEN
	<<ptr >>ptr over - >>string $+!
	>>string $+! dup to <<ptr ;
    : <<"  '" parse postpone SLiteral postpone << ; immediate
    : >>string@ ( -- addr u )
	>>string $@len dup allocate throw
	swap 2dup >>string $@ drop -rot move
	>>string $off  0 to >>ptr  0 to <<ptr ;
    : >>next ( -- addr u ) <<ptr end$ over - ;
[THEN]

[IFUNDEF] s//
: s//  ]] BEGIN [[ ; immediate
: //g  ]] WHILE >>next REPEAT end$ [[
    s" " ]] SLiteral << >>string@ rot drop [[ ; immediate
[THEN]

\ fast replacement for ="
\ this replacement will be part of the next relase of regexp.fs

: =" '" parse bounds ?DO
	]] count [[ I c@ ]] Literal <> ?LEAVE [[
    LOOP ; immediate

Variable cnt1
Variable cnt2
Variable cnt3
Variable cnt4
Variable cnt5
Variable cnt6
Variable cnt7
Variable cnt8
Variable cnt9
charclass [acg] 'a +char 'c +char 'g +char
charclass [act] 'a +char 'c +char 't +char
charclass [agt] 'a +char 'g +char 't +char
charclass [cgt] 'c +char 'g +char 't +char

: remove-newlines ( addr u -- addr u' )
    s// (( // >> {{ ` > {** .? **} || }} count #lf <> ?LEAVE <<" " )) //g ;

: patcount ( addr u -- n )  cnt1 off  cnt2 off  cnt3 off  cnt4 off
    cnt5 off  cnt6 off  cnt7 off  cnt8 off  cnt9 off
    (( // {{ {{ [cgt] c? =" gggtaaa"  1 cnt2 +! ||
                ` a {{ [act] c? =" ggtaaa"  1 cnt3 +! ||
                ` g {{ [act] c? =" gtaaa"  1 cnt4 +! ||
                ` g {{ [act] c? =" taaa"  1 cnt5 +! ||
                ` g {{ [acg] c? =" aaa"  1 cnt6 +! ||
                ` t {{ [cgt] c? =" aa"  1 cnt7 +! ||
                ` a {{ [cgt] c? ` a  1 cnt8 +! ||
                ` a {{ [cgt] c?  1 cnt9 +! ||
                ` a 1 cnt1 +! }} }} }} }} }} }} }} }}
          || {{ [acg] c? =" ttaccct" 1 cnt9 +! ||
                ` t {{ [acg] c? =" taccct" 1 cnt8 +! ||
                ` t {{ [acg] c? =" accct" 1 cnt7 +! ||
                ` t {{ [cgt] c? =" ccct" 1 cnt6 +! ||
                ` a {{ [agt] c? =" cct" 1 cnt5 +! ||
                ` c {{ [agt] c? =" ct" 1 cnt4 +! ||
                ` c {{ [agt] c? ` t 1 cnt3 +! ||
                ` c {{ [acg] c? 1 cnt2 +! ||
                ` t 1 cnt1 +! }} }} }} }} }} }} }} }} }} \$ ))
    drop ;

stdin slurp-fid dup Constant ilen
remove-newlines dup Constant clen 2Constant 'stdin
burp

'stdin patcount
.( agggtaaa|tttaccct ) 'stdin cnt1 @ 1 .r cr
.( [cgt]gggtaaa|tttaccc[acg] ) 'stdin cnt2 @ 1 .r cr
.( a[act]ggtaaa|tttacc[agt]t ) 'stdin cnt3 @ 1 .r cr
.( ag[act]gtaaa|tttac[agt]ct ) 'stdin cnt4 @ 1 .r cr
.( agg[act]taaa|ttta[agt]cct ) 'stdin cnt5 @ 1 .r cr
.( aggg[acg]aaa|ttt[cgt]ccct ) 'stdin cnt6 @ 1 .r cr
.( agggt[cgt]aa|tt[acg]accct ) 'stdin cnt7 @ 1 .r cr
.( agggta[cgt]a|t[acg]taccct ) 'stdin cnt8 @ 1 .r cr
.( agggtaa[cgt]|[acg]ttaccct ) 'stdin cnt9 @ 1 .r cr

: replace-alternatives ( addr u -- )
    s// (( // >>
	{{ ` B <<" (c|g|t)" ||
	   ` D <<" (a|g|t)" ||
	   ` H <<" (a|c|t)" ||
	   ` K <<" (g|t)" ||
	   ` M <<" (a|c)" ||
	   ` N <<" (a|c|g|t)" ||
	   ` R <<" (a|g)" ||
	   ` S <<" (c|t)" ||
	   ` V <<" (a|c|g)" ||
	   ` W <<" (a|t)" ||
	   ` Y <<" (c|t)" }}
	)) //g ;

cr
ilen 1 .r cr
clen 1 .r cr

'stdin replace-alternatives dup 1 .r cr

bye
