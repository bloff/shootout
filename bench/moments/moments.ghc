-- $Id: moments.ghc,v 1.2 2004-06-30 07:28:58 bfulgham Exp $
-- http://www.bagley.org/~doug/shootout/
-- from Brian Gregor
-- with modifications by Max
-- with further modifications by JP Bernardy

import Numeric
import List(sort)

main = interact $ unlines . answers . map read . lines
        
-- compute out the answers
answers :: [Double] -> [String]
answers nums = ["n:                  " ++ show (length nums),
                "median:             " ++ (showFFloat (Just 6) (median nums n) ""),
                "mean:               " ++ (showFFloat (Just 6) mean ""),
                "average_deviation:  " ++ (showFFloat (Just 6) avg_dev ""),
                "standard_deviation: " ++ (showFFloat (Just 6) std_dev ""),
                "variance:           " ++ (showFFloat (Just 6) var ""),
                "skew:               " ++ (showFFloat (Just 6) skew ""),
                "kurtosis:           " ++ (showFFloat (Just 6) kurt "")]
    where n =  fromIntegral (length nums)
          mean = sum nums / n
          deviation = [x-mean | x <- nums] 
          avg_dev = sum (map abs deviation) / n
          var = sum [x**2 | x <- deviation] / (n-1)
          std_dev =  sqrt var
          skew = sum [x**3 | x <- deviation] / (n*var*std_dev)
          kurt = sum [x**4 | x <- deviation] / (n*var*var) - 3.0

-- calculate the median
median nums n = mid (sort nums)
    where mid x 
              | odd (length x) = x!! midpt
              | otherwise       = ((x!!(midpt-1)) + (x!!midpt)) / 2.0
          midpt = floor (n/2) 


