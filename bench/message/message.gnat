-- The Great Computer Language Shootout
-- http://shootout.alioth.debian.org
--
-- contributed by Jim Rogers

with Ada.Text_Io; use Ada.Text_Io;
with Ada.Command_Line; use Ada.Command_Line;

procedure Threads_flow is
   type Link;
   type Link_Access is access Link;
   task type Link (Next_Link : Link_Access; Num_Iter : Positive)is
      entry Receive(I : in Integer);
   end Link;
  
   task body Link is
      Val : Integer := 0;
      New_Val : Integer;
   begin
      for iter in 1..Num_Iter loop
         accept Receive(I : in Integer) do
            New_Val := I;
         end Receive;
         if Next_Link /= null then
            Val := New_Val + 1;
            Next_Link.Receive(Val);
         else
            Val := Val + New_Val + 1;
         end if;
      end loop;
      if Next_Link = null then
         Put_Line(Integer'Image(Val));
      end if;
   end Link;
   Num_Tasks : Positive := 250;
   Num_Iter  : Positive := 200;
   New_Task : Link_Access;
   Last_Task : Link_Access := null;
begin
   if Argument_Count > 0 then
      Num_Iter := Positive'Value(Argument(1));
   end if;
   for Item in 1..Num_Tasks loop
      New_Task := new Link(Last_Task, Num_Iter);
      Last_Task := New_Task;
   end loop;
   for iter in 1..Num_Iter loop
      New_Task.Receive(0);
   end loop;
end Threads_flow;
