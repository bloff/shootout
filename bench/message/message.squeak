"*  The Computer Language Shootout
   http://shootout.alioth.debian.org/
   contributed by Paolo Bonzini *"!

!Tests class methodsFor: 'benchmarking' stamp: '  11/29/2006 23:44'!message   | n tail head sum |   n := (SmalltalkImage current getSystemAttribute: 3) asInteger.   head := tail := Consumer new.   500 timesRepeat: [       head := ProducerConsumer fork: head ].   sum := 0.   n timesRepeat: [       head msg: 0.       sum := sum + tail msg ].   UnixProcess stdOut      nextPutAll: sum printString;      nextPut: Character lf! !


Object subclass: #Consumer	instanceVariableNames: 'semaphore msg'	classVariableNames: ''	poolDictionaries: ''	category: 'Shootout'!!Consumer methodsFor: 'accessing' stamp: '  11/29/2006 23:33'!msg    semaphore wait.    ^msg! !!Consumer methodsFor: 'accessing' stamp: '  11/29/2006 23:33'!msg: data    msg := data.    semaphore signal! !!Consumer methodsFor: 'accessing' stamp: '  11/29/2006 23:32'!semaphore: aSemaphore    semaphore := aSemaphore! !

Consumer class	instanceVariableNames: ''!!Consumer class methodsFor: 'instance creation' stamp: '  11/29/2006 23:33'!new    | var |    var := self basicNew.    var semaphore: Semaphore new.    ^var! !


Consumer subclass: #ProducerConsumer	instanceVariableNames: 'consumer'	classVariableNames: ''	poolDictionaries: ''	category: 'Shootout'!!ProducerConsumer methodsFor: 'accessing' stamp: '  11/29/2006 23:34'!consumer: aProcess    consumer := aProcess! !!ProducerConsumer methodsFor: 'accessing' stamp: '  11/29/2006 23:35'!fork    [ self run ] fork! !!ProducerConsumer methodsFor: 'accessing' stamp: '  11/29/2006 23:35'!run    [ consumer msg: self msg + 1 ] repeat! !


ProducerConsumer class	instanceVariableNames: ''!!ProducerConsumer class methodsFor: 'instance creation' stamp: '  11/29/2006 23:35'!fork: consumer    | proc |    proc := self new.    proc consumer: consumer.    proc fork.    ^proc! !
