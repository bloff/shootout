#!/usr/bin/mzscheme -r

(require (lib "etc.ss"))

(define (main)
  (let* ([n (string->number (vector-ref argv 0))]
	 [hash1 (make-hash-table 'equal)]
	 [hash2 (make-hash-table 'equal)]
	 [seq (build-list 10000 identity)]
	 [nseq (build-list n identity)]
	 [zero (lambda () 0)])
    (for-each (lambda (item)
		(hash-table-put! hash1 (string-append "foo_" (number->string
item)) item))
	      seq)
    (for-each (lambda (item)
		(hash-table-for-each hash1 (lambda (key value)
					     (hash-table-put! hash2 key (+
(hash-table-get hash2 key zero) value)))))
	      nseq)
    (printf "~s ~s ~s ~s~n"
	    (hash-table-get hash1 "foo_1")
	    (hash-table-get hash1 "foo_9999")
	    (hash-table-get hash2 "foo_1")
	    (hash-table-get hash2 "foo_9999"))))

(main)
