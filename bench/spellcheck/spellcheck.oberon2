(* The Great Computer Language Shootout
   http://shootout.alioth.debian.org

   contributed by Isaac Gouy (Oberon-2 novice)
*)

MODULE Spellcheck;
IMPORT SimpleHash, In, Out, Files, TextRider;

CONST
   maxWordSize = 32;

VAR
   word: ARRAY maxWordSize OF CHAR;
   result: Files.Result;
   f: Files.File;
   dictionary: SimpleHash.Hashtable;
   key: SimpleHash.ItemKey;
   item: SimpleHash.Item;

BEGIN
   f := Files.Old("Usr.Dict.Words", {Files.read}, result);
   IF result # Files.done THEN
      Out.String("Usr.Dict.Words not opened"); Out.Ln; HALT(1);
   END;   

   dictionary := SimpleHash.New(40000);	
   In.SetReader( TextRider.ConnectReader(f) );
   LOOP	
      In.Line(word);
      IF ~In.Done() THEN EXIT; END;
      
      NEW(key, maxWordSize);
      COPY(word,key^);         
      item := SimpleHash.AddKey(dictionary, key);	
   END;     
   f.Close();

   NEW(key, maxWordSize);
   In.SetReader(NIL); (* Reset to stdin *)
   LOOP	
      In.Line(key^);
      IF ~In.Done() THEN EXIT; END;
         
      IF SimpleHash.Find(dictionary, key) = NIL THEN
         Out.String(key^); Out.Ln;
      END;	
   END;      
END Spellcheck.