/* The Great Computer Language Shootout 
   contributed by Isaac Gouy (Clean novice)

   http://shootout.alioth.debian.org/
   
 NOTE: This solution is OK reading input.txt as a text file.
       It fails when reading the re-directed file from stdin.
 
       IO error: fend: not allowed for stdio and stderr   

To compile:	
   cleanIDE.exe --batch-force-build "e:\shoot\contrib\clean\spellcheck.prj"

To run:
   spellcheck.exe -con < input.txt > output.txt
*/

module spellcheck
import StdEnv, SimpleHash
  
Start world 
	# dictionary = htNew 20000
	# (dictionary,world) = readUsrDictWords world dictionary
	= checkInputWords world dictionary 

readUsrDictWords world ht
	# (openok, file, world) = fopen "Usr.Dict.Words" FReadText world
	| not openok = abort ("Cannot open Usr.Dict.Words\n")
	# ht = readWords file ht
	= (ht,world)
	
	where
	readWords f ht 
   		#! (atEnd,f) = fend f
   		| atEnd = ht
   		#! (line, f) = freadline f
   		= readWords f (htAdd line 1 ht)
   		   		
/*   		
checkInputWords world ht 
	# (openok, file, world) = fopen "input.txt" FReadText world
	| not openok = abort ("Cannot open input.txt\n")
	= missingWords file ht []
*/

checkInputWords world ht 
   # (console, world) = stdio world
	= missingWords console ht []	

missingWords f ht missing	
	#! (atEnd,f) = fend f
	| atEnd = map withNewline missing
	#! (line, f) = freadline f
	| (htHasKey line ht) = missingWords f ht missing
	= missingWords f ht [line:missing]	
	where
	withNewline s
		= if (s.[size s - 1] == '\n') s (s+++"\n")
