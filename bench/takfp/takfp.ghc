-- http://shootout.alioth.debian.org/
--
-- GHC version of floating point Tak function
-- compile with ghc -O2 -o takfp takfp.hs
-- Greg Buchholz

import System(getArgs)

main = do [num] <- getArgs
          let n = read num
          putStrLn $ show $ tak (3*n) (2*n) n

tak :: Double -> Double -> Double -> Double
tak x y z | y>=x      = z
          | otherwise = tak (tak (x-1) y z) (tak (y-1) z x) (tak (z-1) x y) 
