/* The Great Computer Language Shootout 
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy 
*/

using System;
using System.IO;
using System.Text;
using System.Collections.Specialized;

class revcomp
{
   static void Main(string[] args){
      InitializeComplements();

      StringBuilder builder = new StringBuilder();
      String line, desc = "";

      using (StreamReader s = new StreamReader(Console.OpenStandardInput())){
         using (StreamWriter w = new StreamWriter(Console.OpenStandardOutput())){
            while ((line = s.ReadLine()) != null) {
               char c = line[0];
               if (c == '>'){
                  if (desc.Length > 0){
                     WriteReverseFasta(desc, Complement(builder), w);
                     builder.Length = 0;
                  }
                  desc = line;                              
               }
               else if (c != ';'){
                  builder.Append(line.ToUpper());
               }
            }
            if (desc.Length > 0){
               WriteReverseFasta(desc, Complement(builder), w);
            }
         }
      }
   }


   static ListDictionary iubComplement = new ListDictionary();

   static void InitializeComplements(){
      iubComplement['A'] = 'T';
      iubComplement['B'] = 'V';
      iubComplement['C'] = 'G';
      iubComplement['D'] = 'H';
      iubComplement['G'] = 'C';
      iubComplement['H'] = 'D';
      iubComplement['K'] = 'M';
      iubComplement['M'] = 'K';
      iubComplement['R'] = 'Y';
      iubComplement['T'] = 'A';
      iubComplement['V'] = 'B';
      iubComplement['Y'] = 'R';
   }

   static StringBuilder Complement(StringBuilder b) { 
      object c;
      for (int i=0; i < b.Length; i++)
         if ((c = iubComplement[b[i]]) != null) b[i] = (char)c;
      return b;
   }


   static void WriteReverseFasta(String desc, StringBuilder b, StreamWriter s) { 
      const int LineLength = 60;
      s.WriteLine(desc);

      int i = 1, m = 0, n = b.Length;
      int j = n-1;
      while (i <= n){
         m += LineLength;
         if (n < m) m = n;
         while (i <= m){
            s.Write(b[j--]);
            i++;
         }
         s.WriteLine();
      }         
   }

}

