/* The Computer Language Shootout
 * http://shootout.alioth.debian.org
 * 
 * contributed by Laurent DEBACKER */

using System;
using System.Collections.Generic;
using System.IO;

public class revcomp
{
   private static char[] complements;
   
   static revcomp()
   {
      complements = new char[128];
      complements[(int)'a'] = complements[(int)'A'] = 'T';
      complements[(int)'c'] = complements[(int)'C'] = 'G';
      complements[(int)'g'] = complements[(int)'G'] = 'C';
      complements[(int)'t'] = complements[(int)'T'] = 'A';
      complements[(int)'u'] = complements[(int)'U'] = 'A';
      complements[(int)'m'] = complements[(int)'M'] = 'K';
      complements[(int)'r'] = complements[(int)'R'] = 'Y';
      complements[(int)'w'] = complements[(int)'W'] = 'W';
      complements[(int)'s'] = complements[(int)'S'] = 'S';
      complements[(int)'y'] = complements[(int)'Y'] = 'R';
      complements[(int)'k'] = complements[(int)'K'] = 'M';
      complements[(int)'v'] = complements[(int)'V'] = 'B';
      complements[(int)'h'] = complements[(int)'H'] = 'D';
      complements[(int)'d'] = complements[(int)'D'] = 'H';
      complements[(int)'b'] = complements[(int)'B'] = 'V';
      complements[(int)'n'] = complements[(int)'N'] = 'N';
   }
   
   public static void Main(string[] Arguments)
   {
      TextReader input = Console.In;
      TextWriter output = Console.Out;
      
      List<char[]> older = new List<char[]>();
      
      char[] buffer = new char[1024];
      int position = buffer.Length;
      
      for(;;)
      {
         string line = input.ReadLine();
         
         if(line == null || line[0] == '>')
         {
            if(position != buffer.Length)
            {
               int left;
               while((left = buffer.Length - position) >= 60)
               {
                  output.WriteLine(buffer, position, 60);
                  position += 60;
               }
               
               if(older.Count > 0)
               {
                  char[] cur = buffer;
                  
                  for(int i = older.Count - 1 ; i >= 0 ; --i)
                  {
                     if(left > 0) output.Write(cur, position, left);
                     cur = older[i];
                     
                     left = 60 - left;
                     output.WriteLine(cur, 0, left);
                     position = left;
                     
                     while((left = cur.Length - position) >= 60)
                     {
                        output.WriteLine(cur, position, 60);
                        position += 60;
                     }
                  }
                  
                  if(left > 0) output.WriteLine();
                  older.Clear();
               }
               else
               {
                  output.WriteLine(buffer, position, left);
               }
               position = buffer.Length;
            }
            
            if(line == null) break;
            output.WriteLine(line);
         }
         else if(line[0] != ';')
         {
            int len = line.Length, i = -1;
            
            if(position < len)
            {
               while(--position >= 0) buffer[position] = complements[(int)line[++i]];
               older.Add(buffer);
               position = buffer.Length << 1;
               buffer = new char[position];
            }
            
            while(++i < len) buffer[--position] = complements[(int)line[i]];
         }
      }
   }
}
