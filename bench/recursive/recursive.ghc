-- The Computer Language Shootout
-- http://shootout.alioth.debian.org/
--
-- Based on code contributed by:
-- Bryn Keller, Don Stewart, Einar Karttunen and Greg Buchholz 
--

import System; import Text.Printf

main = do (n,m,k) <- getArgs >>= readIO . head >>= \n -> return (n,n+2,fromIntegral (n+2))
          printf "Ack(3,%d): %d\n"     n             (ack 3 n)
          printf "Fib(%d): %d\n"       (n*4)         (fib (n*4) :: Int)
          printf "Tak(%d,%d,%d): %d\n" (m*3) (m*2) m (tak (m*3) (m*2) m :: Int)
          printf "Fib(%d): %f\n"       (n*5)         (fib (n*5) :: Double)
          printf "Tak(%d,%d,%d): %f\n" (m*3) (m*2) m (tak (k*3) (k*2) k :: Float)

ack 0 n = n+1
ack m n = ack (m-1) $ if n == 0 then 1 else ack m (n-1)

fib 0 = 1
fib 1 = 1
fib n = fib (n-2) + fib (n-1)

tak x y z = if y >= x then z else tak (tak (x-1) y z) (tak (y-1) z x) (tak (z-1) x y)

