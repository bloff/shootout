(* The Computer Language Shootout
   http://shootout.alioth.debian.org/
   contributed by Scott Cruzen
*)

fun ack 0 y = y + 1
  | ack x 0 = ack (x - 1) 1
  | ack x y = ack (x - 1) (ack x (y - 1))

fun fib 0 = 1
  | fib 1 = 1
  | fib n = fib (n - 2) + fib (n - 1)

fun fib_float n = 
   if Real.?= (n,0.0) then
      1.0
   else if Real.?= (n,1.0) then
      1.0
   else
      fib_float (n - 2.0) + fib_float (n - 1.0)

fun tak x y z =
   if y < x then
      tak (tak (x - 1.0) y z) (tak (y - 1.0) z x) (tak (z - 1.0) x y)
   else
      z

fun tak_int x y z =
   if y < x then
      tak_int (tak_int (x - 1) y z) (tak_int (y - 1) z x) (tak_int (z - 1) x y)
   else
      z

val _ =
   let
      val a = valOf (Int.fromString (hd (CommandLine.arguments())))
      val b = a - 1
      val c = 27.0 + Real.fromInt a
      val fmtreal = Real.fmt (StringCvt.FIX (SOME 1))
   in
      print (concat ["Ack(3," , Int.toString a ,"): ", Int.toString (ack 3 a) ,"\n"]);
      print (concat ["Fib(" , fmtreal c ,"): " , fmtreal (fib_float c) , "\n"]);
      print (concat ["Tak(", Int.toString (3*b), ",", Int.toString (2*b), ",",
         Int.toString b, "): ", Int.toString (tak_int (3*b) (2*b) b), "\n"]);
      print (concat ["Fib(3): " ,Int.toString (fib 3), "\n"]);
      print (concat ["Tak(3.0,2.0,1.0): " , fmtreal (tak 3.0 2.0 1.0), "\n"])
   end
