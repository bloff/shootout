% The Computer Language Shootout
% http://shootout.alioth.debian.org/ 
% contributed by Isaac Gouy (Erlang novice)

-module(recursive).
-export([main/1]).

main([Arg]) ->
    N = list_to_integer(Arg),
    io:fwrite("Ack(3,~w): ~w\n", [N, ack(3, N)]),
    io:fwrite("Fib(~.1f): ~.1f\n", [28.0+float(N), fib(28.0+float(N))]),
    M=N-1, io:fwrite("Tak(~w,~w,~w): ~w\n", [M*3,M*2,M, tak(M*3,M*2,M)]),
    io:fwrite("Fib(~w): ~w\n", [3, fib(3)]),
    io:fwrite("Tak(~.1f,~.1f,~.1f): ~.1f\n", [3.0,2.0,1.0, tak(3.0,2.0,1.0)]),
    halt(0).

ack(M,N) ->
   if 
      M == 0 -> N + 1;
      true -> 
         if
            N == 0 -> ack(M-1, 1);
            true -> ack(M-1, ack(M, N-1))
         end
   end.

fib(N) ->
   if 
      N < 2 -> 
         if 
            float(N) -> 1.0;
            true -> 1
         end;
      true -> fib(N-2) + fib(N-1)
   end.

tak(X, Y, Z) ->
   if 
      Y < X -> tak(tak(X-1,Y,Z), tak(Y-1,Z,X), tak(Z-1,X,Y));
      true -> Z
   end.
