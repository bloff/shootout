"* The Computer Language Shootout
    http://shootout.alioth.debian.org/
    contributed by Isaac Gouy
    modified by Eliot Miranda *"!

'From Squeak3.9 of 7 November 2006 [latest update: #7067] on 12 April 2007 at 9:55:06 pm'!
Object subclass: #Tests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Shootout'!!Float methodsFor: 'platform' stamp: '  4/13/2007 14:47'!asStringWithDecimalPlaces: anInteger   | precision rounded |   anInteger <= 0 ifTrue: [^ self rounded printString].   precision := Utilities floatPrecisionForDecimalPlaces: anInteger.   rounded := self roundTo: precision.   ^(rounded asScaledDecimal: anInteger) printString copyUpTo: $s! !!Float methodsFor: 'benchmarking' stamp: '  11/29/2006 21:49'!fib   ^self < 2.0 ifTrue: [1.0] ifFalse: [(self - 2.0) fib + (self - 1.0) fib]! !!Float methodsFor: 'benchmarking' stamp: '  4/12/2007 21:51'!tak: y z: z   ^y < self       ifTrue: [((self - 1.0) tak: y z: z) tak: 	    ((y - 1.0) tak: z z: self) z: ((z - 1.0) tak: self z: y)]      ifFalse: [z]! !!SmallInteger methodsFor: 'benchmarking' stamp: '  11/29/2006 21:30'!ack: aSmallInteger   ^self == 0      ifTrue: [aSmallInteger + 1]      ifFalse: [         aSmallInteger == 0            ifTrue: [self - 1 ack:  1]            ifFalse: [self - 1 ack: (self ack: aSmallInteger - 1)] ]! !!SmallInteger methodsFor: 'benchmarking' stamp: '  11/29/2006 21:31'!fib   ^self < 2 ifTrue: [1] ifFalse: [(self - 2) fib + (self - 1) fib]! !!SmallInteger methodsFor: 'benchmarking' stamp: '  4/12/2007 21:50'!tak: y z: z   ^y < self       ifTrue: [((self - 1) tak: y z: z) tak: 	    ((y - 1) tak: z z: self) z: ((z - 1) tak: self z: y)]      ifFalse: [z]! !!Tests class methodsFor: 'benchmarking' stamp: '  4/12/2007 21:54'!recursive: nArg to: output   | n |   n := nArg.   output       nextPutAll: 'Ack(3,', n printString, '): ', (3 ack: n) printString;       nextPut: Character lf;      nextPutAll: 'Fib(', ((27.0+n) asStringWithDecimalPlaces: 1), '): ',          ((27.0+n) fib asStringWithDecimalPlaces: 1);       nextPut: Character lf.   n := n - 1.   output       nextPutAll: 'Tak(', (3*n) printString, ',',         (2*n) printString, ',', n printString, '): ',           (3*n tak: 2*n z: n) printString;       nextPut: Character lf;      nextPutAll: 'Fib(3): ', 3 fib printString;      nextPut: Character lf;      nextPutAll: 'Tak(3.0,2.0,1.0): ',           ((3.0 tak: 2.0 z: 1.0) asStringWithDecimalPlaces: 1);       nextPut: Character lf.! !!Tests class methodsFor: 'platform' stamp: '  4/12/2007 18:57'!arg   ^(SmalltalkImage current getSystemAttribute: 3) asInteger! !!Tests class methodsFor: 'platform' stamp: '  4/13/2007 07:30'!postscript   SmalltalkImage current snapshot: false andQuit: true.   ^''! !!Tests class methodsFor: 'platform' stamp: '  4/12/2007 18:57'!stdout   ^UnixProcess stdOut! !!Tests class methodsFor: 'benchmark scripts' stamp: '  4/12/2007 21:52'!recursive   self recursive: self arg to: self stdout.   ^self postscript! !
