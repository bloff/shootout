#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef unsigned char boolean;

static unsigned long nsieve (unsigned long m) {
	unsigned long count = 0, i, j;
	boolean * a = (boolean *) malloc (m * sizeof (boolean));

	memset (a, 1, m);
	for (i = 2; i < m; ++i)	if (a[i]) {
		for (j = i + i; j < m; j += i) a[j] = 0;
		++count;
	}
	free (a);

	return count;
}

static void test (unsigned long n) {
	unsigned long m = 10000ul << n;
	printf ("Primes up to %8lu %8lu\n", m, nsieve (m));
}

int main (int argc, char * argv[]) {
	unsigned long n;
	char *cp;

	if (argc < 2 || (n = strtoul (argv[1], &cp, 10)) == ULONG_MAX ||
	    *argv[1] == '\0' || *cp != '\0') {
		fprintf (stderr, "usage: nsieve N\n");
		exit (2);
	}
	test (n);
	if (n >= 1) test (n - 1);
	if (n >= 2) test (n - 2);
	return 0;
}


