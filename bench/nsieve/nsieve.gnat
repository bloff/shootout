--
-- nsieve
--
-- Written by Jim Rogers
--
with Ada.Text_Io; use Ada.Text_Io;
with Ada.Command_Line; use Ada.Command_Line;

procedure Nsieve is
   package Nat_Io is new Ada.Text_Io.Integer_Io(Natural);
   use Nat_IO;
   function Sieve(M : Positive) return Natural is
      type Bool_Array is array(1..M) of Boolean;
      A : Bool_Array := (others => True);
      Count : Natural := 0;
      Test_Num : Positive;
   begin
      for Num in 2..M - 1 loop
         if A(Num) then
            Test_Num := Num + Num;
            while Test_Num < M loop
               A(Test_Num) := False;
               Test_Num := Test_Num + Num;
            end loop;
		Count := Count + 1;
         end if;
      end loop;
      return Count;
   end Sieve;
   procedure Configure(N : Positive) is
	   Max : Positive;
   begin
      if N >= 2 then
         for Pow in reverse N-2..N loop
            Max := (2**Pow) * 10000;
            Put("Primes up to ");
            Put(Item => Max, Width => 8);
            Put(Item => Sieve(Max), Width => 8);
            New_Line;
         end loop;
      end if;
   end Configure;
   N : Positive := 2;
begin
   if Argument_Count > 0 then
      N := Positive'Value(Argument(1));
   end if;
   Configure(N);
end Nsieve;
