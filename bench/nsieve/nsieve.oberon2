(* The Great Computer Language Shootout
   http://shootout.alioth.debian.org

   contributed by Isaac Gouy (Oberon-2 novice)

   To build: xc =m nsieve -lookup=*.*=.;..\include
   To run:   nsieve 9
*)

MODULE NSieve;
IMPORT Shootout,SYSTEM, Out;

TYPE
   FlagsType = ARRAY OF BOOLEAN;

VAR
   n, m: LONGINT;
   flags: POINTER TO FlagsType;


PROCEDURE NSieve(m: LONGINT; VAR isPrime: FlagsType): LONGINT;
VAR
   count, i, k: LONGINT;
BEGIN
   SYSTEM.FILL(SYSTEM.ADR(isPrime), TRUE, m);

   count := 0;
   DEC(n);
   FOR i := 2 TO m DO
      IF isPrime[i] THEN
	 INC(count);
         k := i+i;
         WHILE k <= m DO
            isPrime[k] := FALSE;
	    INC(k, i);
         END;
      END;
   END;
   RETURN count;
END NSieve;


BEGIN
   n := Shootout.Argi();
   IF n < 2 THEN n := 2; END;

   m := ASH(2, n) * 10000;
   NEW(flags, m);
   Out.String("Primes up to "); Out.Int(m,8); Out.Int(NSieve(m,flags^),8); Out.Ln;

   m := ASH(2, n-1) * 10000;
   Out.String("Primes up to "); Out.Int(m,8); Out.Int(NSieve(m,flags^),8); Out.Ln;

   m := ASH(2, n-2) * 10000;
   Out.String("Primes up to "); Out.Int(m,8); Out.Int(NSieve(m,flags^),8); Out.Ln;
END NSieve.