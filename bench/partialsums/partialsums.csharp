//   The Computer Language Shootout 
//   http://shootout.alioth.debian.org/
//   contributed by Isaac Gouy

using System;

class recursive
{
   static void Main(string[] args){
      int n = Int32.Parse(args[0]);

      double sum = 0.0; 
      for (int k=0; k<n; k++) sum += Math.Pow(2.0/3.0,k);
      Console.WriteLine("{0:f9}\t(2/3)^k", sum);

      sum = 0.0;
      for (int k=1; k<=n; k++) sum += Math.Pow(k,-0.5);
      Console.WriteLine("{0:f9}\tk^-0.5", sum);

      sum = 0.0;
      for (int k=1; k<=n; k++) sum += 1.0/(k*(k+1.0));
      Console.WriteLine("{0:f9}\t1/k(k+1)", sum);

      //  Flint Hills
      sum = 0.0;
      for (int k=1; k<=n; k++) 
         sum += 1.0/(Math.Pow(k,3.0) * Math.Pow(Math.Sin(k),2.0));
      Console.WriteLine("{0:f9}\tFlint Hills", sum);

      //  Cookson Hills
      sum = 0.0;
      for (int k=1; k<=n; k++) 
         sum += 1.0/(Math.Pow(k,3.0) * Math.Pow(Math.Cos(k),2.0));
      Console.WriteLine("{0:f9}\tCookson Hills", sum);

      //  Harmonic
      sum = 0.0;
      for (int k=1; k<=n; k++) sum += 1.0/k;
      Console.WriteLine("{0:f9}\tHarmonic", sum);

      //  Riemann Zeta
      sum = 0.0;
      for (int k=1; k<=n; k++) sum += 1.0/Math.Pow(k,2.0);
      Console.WriteLine("{0:f9}\tRiemann Zeta", sum);      

      //  Alternating Harmonic
      sum = 0.0; double a = -1.0; 
      for (int k=1; k<=n; k++) sum += (a= -a)/k;
      Console.WriteLine("{0:f9}\tAlternating Harmonic", sum);

      //  Gregory
      sum = 0.0; a = -1.0;
      for (int k=1; k<=n; k++) sum += (a= -a)/(2.0*k -1.0);
      Console.WriteLine("{0:f9}\tGregory", sum);
   }
}
