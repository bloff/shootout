/* The Computer Language Shootout
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy (Clean novice) */

module partialsums
import StdEnv, LanguageShootout

Start = 
   toStringWith 9 (twoThirds n 0.0) +++ "\t(2/3)^k\n" +++
   toStringWith 9 (k05 n 0.0) +++ "\tk^-0.5\n" +++
   toStringWith 9 (kk1 n 0.0) +++ "\t1/k(k+1)\n" +++   
   toStringWith 9 (flintHills n 0.0) +++ "\tFlint Hills\n" +++
   toStringWith 9 (cooksonHills n 0.0) +++ "\tCookson Hills\n" +++
   toStringWith 9 (harmonic n 0.0) +++ "\tHarmonic\n" +++
   toStringWith 9 (riemannZeta n 0.0) +++ "\tRiemann Zeta\n" +++
   toStringWith 9 (altHarmonic n -1.0 0.0) +++ "\tAlternating Harmonic\n" +++
   toStringWith 9 (gregory n -1.0 0.0) +++ "\tGregory\n"     
   where n = toReal argi
    
twoThirds k sum
   | k > -1.0  = twoThirds(k-1.0)(sum + ((2.0/3.0)^k))
               = sum
   
k05 k sum
   | k > 0.0   = k05(k-1.0)(sum + (k^ ~0.5))
               = sum
   
kk1 k sum
   | k > 0.0   = kk1(k-1.0)(sum + 1.0/(k*(k+1.0)))
               = sum        
  
flintHills k sum
   | k > 0.0   = flintHills(k-1.0)(sum + 1.0/((k^3.0)*((sin k)^2.0)))
               = sum
  
cooksonHills k sum
   | k > 0.0   = cooksonHills(k-1.0)(sum + 1.0/((k^3.0)*((cos k)^2.0)))
               = sum     
      
harmonic k sum
   | k > 0.0   = harmonic(k-1.0)(sum + 1.0/k)
               = sum

riemannZeta k sum
   | k > 0.0   = riemannZeta(k-1.0)(sum + 1.0/(k^2.0))
               = sum 
   
altHarmonic :: !Real !Real !Real -> Real   
altHarmonic k a sum
   | k > 0.0   = altHarmonic(k-1.0)(~a)(sum + a/k)
               = sum
   
gregory :: !Real !Real !Real -> Real   
gregory k a sum
   | k > 0.0   = gregory(k-1.0)(~a)(sum + a/(2.0*k - 1.0))
               = sum
