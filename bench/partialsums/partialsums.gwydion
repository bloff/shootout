module: partialsums
use-libraries: common-dylan, io, transcendental
use-modules: common-dylan, format-out, transcendental

// ---------------------------------------------------------------------
// The Great Computer Language Shootout
// http://shootout.alioth.debian.org/
//
// Based on D language implementation by Dave Fladebo
// 
// Contributed by Anthony Borla
// ---------------------------------------------------------------------

begin
  let n = application-arguments()[0].string-to-integer;

  let s0 = 0.0d0; let s1 = 0.0d0; let s2 = 0.0d0; let s3 = 0.0d0;
  let s4 = 0.0d0; let s5 = 0.0d0; let s6 = 0.0d0; let s7 = 0.0d0;
  let s8 = 0.0d0; let d = 0.0d0; let alt = 1.0d0; let d = 1.0d0;

  while (d <= n)
    let d2 = d * d; let d3 = d2 * d; let ds = sin(d); let dc = cos(d);

    s0 := s0 + (2.0d0 / 3.0d0) ^ (d - 1.0d0);
    s1 := s1 + 1.0d0 / sqrt(d);
    s2 := s2 + 1.0d0 / (d * (d + 1.0d0));
    s3 := s3 + 1.0d0 / (d3 * ds * ds);
    s4 := s4 + 1.0d0 / (d3 * dc * dc);
    s5 := s5 + 1.0d0 / d;
    s6 := s6 + 1.0d0 / d2;
    s7 := s7 + alt / d;
    s8 := s8 + alt / (2.0d0 * d - 1.0d0);

    alt := -alt; d := d + 1.0d0;
  end while;

  format-out("%.9f\t(2/3)^k\n", s0);
  format-out("%.9f\tk^-0.5\n", s1);
  format-out("%.9f\t1/k(k+1)\n", s2);
  format-out("%.9f\tFlint Hills\n", s3);
  format-out("%.9f\tCookson Hills\n", s4);
  format-out("%.9f\tHarmonic\n", s5);
  format-out("%.9f\tRiemann Zeta\n", s6);
  format-out("%.9f\tAlternating Harmonic\n", s7);
  format-out("%.9f\tGregory\n", s8);
end

