-- $Id: wordfreq.nhc98,v 1.1 2004-10-05 02:29:48 bfulgham Exp $
-- http://shootout.alioth.debian.org/
-- from Julian Assange
-- simplified by JP Bernardy

-- compile with:
-- ghc -O2 wordfreq.hs -o wordfreq

import Char(toLower,isAlpha)
import Data.FiniteMap(fmToList,emptyFM,addToFM_C)
import Data.List(sortBy, foldl')

main = interact $ unlines . map pretty . sortBy myCompare . fmToList . makemap . words . map normalize
    where pretty (w,n) = pad 7 (show n) ++ " " ++ w
	      where pad n s = replicate (n - length s) ' ' ++ s
	  myCompare (w0,n0) (w1,n1) = compare (n1,w1) (n0,w0)
	  makemap = foldl' addFM emptyFM
	      where addFM fm x = addToFM_C (+) fm x (1::Int)
	  normalize x = if isAlpha x then toLower x else ' '
