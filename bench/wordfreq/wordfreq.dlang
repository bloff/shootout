/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Dave Fladebo
   compile: dmd -O -inline -release wordfreq.d
*/

import std.ctype, std.stream, std.stdio;

void main()
{
    int[char[]] words;
    char[4096]  buffer;
    char[]      text;
    bool        inword;
    int         nread, chrpos, wstart, maxword;

    while((nread = std.stream.stdin.readBlock(buffer, buffer.length)) > 0)
    {
        for(int idx = 0; idx < nread; idx++)
        {
            char chr = buffer[idx];
            if(chrpos >= text.length) text.length = text.length * 2 + 1;
            if(!isalpha(chr))
            {
                if(inword)
                {
                    words[text[wstart..chrpos]]++;
                    if(chrpos - wstart > maxword) maxword = chrpos - wstart;
                    inword = false;
                }
                text[chrpos] = chr;
            }
            else
            {
                if(!inword)
                {
                    inword = true;
                    wstart = chrpos;
                }
                text[chrpos] = chr < 'a' ? chr + ('a' - 'A') : chr;
            }
            chrpos++;
        }
    }

    int[char[]] data;
    char[] str = new char[maxword + 16];
    foreach(char[] word, int val; words)
    {
        int len = sprintf(str,"%7d %.*s", val, word);
        data[str[0..len].dup] = val;
    }

    char[][] keys = data.keys;
    foreach(char[] key; keys.sort.reverse)
    {
        writefln(key);
    }
}
