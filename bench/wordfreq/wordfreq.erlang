%%% -*- mode: erlang -*-
%%% $Id: wordfreq.erlang,v 1.3 2004-08-18 06:00:32 bfulgham Exp $
%%% http://shootout.alioth.debian.org/
%%%
%%% Contributed by Bengt Kleberg (Erlang Guru!)

-module(wordfreq).
-export([main/0, main/1]).

%% ignore program argument
main() -> main(['1']).
main(_Args) ->
    Table = ets:new(freqtab, [set]),
    {ok, Split_regexp} = regexp:parse("[^A-Za-z]*"),
    insert_input(io:get_line(''), Split_regexp, Table),
    List = sort( Table ),
    print( List ),
    halt().

insert_input(eof, _Split_regexp, _Table) -> ok;
insert_input(Line, Split_regexp, Table) ->
    {ok, Words} = regexp:split(Line, Split_regexp),
    Fun = fun ("") -> ok;   % ignore empty words
              (Word) ->
	          Lower = httpd_util:to_lower(Word),
		  update_count(Table, Lower)
	  end,
    lists:foreach(Fun, Words),
    insert_input(io:get_line(''), Split_regexp, Table).

print( List ) ->
    Fun = fun ({Word, Count}) ->
               io:format("~7w ~s~n", [Count, Word])
	  end,
    lists:foreach(Fun, List).

sort( Table ) ->
    Fun = fun ({Word1, Count1}, {_Word2, Count2}) when (Count1 > Count2) ->
                  true;
              ({Word1, Count}, {Word2, Count}) when (Word1 > Word2) ->
                  true;
              (_A, _B) ->
                  false
           end,
    lists:sort(Fun, ets:tab2list(Table)).

update_count(Table, Word) ->
    case (catch ets:update_counter(Table, Word, 1)) of
        {'EXIT', {badarg, _}} ->
	    true = ets:insert(Table, {Word, 1});
	_Integer ->
	    ok
    end.
