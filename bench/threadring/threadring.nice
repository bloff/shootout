/* The Computer Language Benchmarks Game
 * http://shootout.alioth.debian.org/
 * contributed by Isaac Gouy
 */

import java.util.concurrent.*;

let int numberOfThreads = 503;

let NamedThread[] threadRing = 
   fill(new NamedThread[numberOfThreads], int i => new NamedThread(name: i+1));

void main(String[] args){
   for (t : threadRing) t.start();
   threadRing[0].takeToken( Integer.parseInt(args[0]) );
}


class NamedThread extends Thread { 
   int name;
   private int token = 0;
   private Semaphore sem = new Semaphore(0);

   override void run() {
      var x = 0;
      while ((x = this.waitToken()) > 0){
         this.nextThread().takeToken(x-1);
      }
      println(name);
      System.exit(0);
   }

   int waitToken() {
      sem.acquire();
      return token;
   }

   void takeToken(int x) {
      token = x;
      sem.release();
   }

   NamedThread nextThread() = threadRing[ name % numberOfThreads ];
}

