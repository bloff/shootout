-- The Computer Language Benchmarks Game
-- http://shootout.alioth.debian.org/
-- Contributed by Francois Fabien on April 24, 2011.
--  (modified from Jacob Sparre Andersen).
-- Compile with:
--    gnatmake -gnatEpVn -O3 threadring.adb
--
pragma Restrictions (No_Abort_Statements);
pragma Restrictions (Max_Asynchronous_Select_Nesting => 0);

with Ada.Text_IO, Ada.Command_Line;

procedure Threadring is
   Ring_Size : constant := 503;
   type Ring_Index is mod Ring_Size;

   package Ring_Text_IO is new Ada.Text_IO.Modular_IO (Ring_Index);

   task type Node is
      entry Initialize (Identifier : in Ring_Index);
      entry Take (Token : in Integer);
   end Node;

   type Node_Ring is array (Ring_Index) of Node;
   Nodes : Node_Ring;

   task body Node is
      ID          : Ring_Index;
      Local_Token : Integer;
   begin
      accept Initialize (Identifier : in Ring_Index) do
         ID := Identifier;
      end Initialize;

      loop
         accept Take (Token : in Integer) do
            Local_Token := Token;
         end Take;
         Local_Token := Local_Token - 1;
         Nodes (ID + 1).Take (Local_Token);
         exit when Local_Token < 0;
      end loop;

      if Local_Token = -1 then
         Ring_Text_IO.Put (ID, Width => 0);
         Ada.Text_IO.New_Line;
      end if;
   end Node;

begin
   for ID in Nodes'Range loop
      Nodes (ID).Initialize (Identifier => ID);
   end loop;
   Nodes (1).Take (Natural'Value (Ada.Command_Line.Argument (1)));
end Threadring;
