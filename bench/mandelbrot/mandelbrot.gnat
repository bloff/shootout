-- The Great Computer Language Shootout
-- http://shootout.alioth.debian.org
--
-- contributed by Jim Rogers

with Ada.Text_Io; use Ada.Text_Io;
with Ada.Command_Line; use Ada.Command_Line;
with Interfaces; use Interfaces;

procedure Mandlebrot is
   package Int_Io is new Ada.Text_Io.Integer_Io(Integer);
   use Int_Io;
   
   Width, Height : Positive := 400;
   Bit_Num : Natural := 0;
   Byte_Acc : Unsigned_8 := 0;
   Iter : constant := 50;
   Limit : Long_Float := 2.0;
   Zr, Zi, Cr, Ci, Tr, Ti : Long_Float;
begin
   if Argument_Count > 0 then
      Width := Positive'Value(Argument(1));
   end if;
   
   Height := Width;
   
   Put_Line("P4");
   Put(Item => Width, Width => 0);
   Put(" ");
   Put(Item => Height, Width => 0);
   New_Line;
   
   for Y in 1..Height loop
      for X in 1..Width loop
         Zr := 0.0;
         Zi := 0.0;
         Cr := 2.0 * Long_Float(X / Width) - 1.5;
         Ci := 2.0 * Long_Float(Y / Height) - 1.0;
         for I in 1..Iter loop
            Tr := Zr*Zr - Zi*Zi + Cr;
            Ti := 2.0*Zr*Zi + Ci;
            Zr := Tr;
            Zi := Ti;
            exit when Zr*Zr + Zi*Zi > Limit*Limit;
         end loop;
         if Zr*Zr + Zi*Zi > Limit*Limit then
            Byte_Acc := Shift_Left(Byte_Acc, 1) or 16#00#;
         else
            Byte_Acc := Shift_Left(Byte_Acc, 1) or 16#01#;
         end if;
         Bit_Num := Bit_Num + 1;
         if Bit_Num = 8 then
            Put(Character'Val(Byte_Acc));
            Byte_Acc := 0;
            Bit_Num := 0;
         elsif X = Width - 1 then
            Byte_Acc := Shift_Left(Byte_Acc, 8 - Width mod 8);
            Put(Character'Val(Byte_Acc));
            Byte_Acc := 0;
            Bit_Num := 0;
         end if;
      end loop;
   end loop;      
end Mandlebrot;
