;;; -*- mode: lisp -*-
;;; $Id: sieve.cmucl,v 1.1 2004-05-19 18:12:27 bfulgham Exp $
;;; http://www.bagley.org/~doug/shootout/
;;; from Paul Foley

(declaim (optimize (speed 3) (safety 0) (debug 0) (space 0) (compilation-speed 0)))
(defun main ()
  (let ((n (parse-integer (or (car (last ext:*command-line-strings*)) "1")))
        (flags (make-array 8193 :element-type 'fixnum :initial-element 1)))
    (loop repeat n of-type fixnum for count of-type fixnum = 0 then 0 do
       (loop for i fixnum from 2 upto 8192 do
          (unless (zerop (aref flags i))
            (loop for k fixnum from (* 2 i) upto 8192 by i do
                  (setf (aref flags k) 0))
            (incf count)))
       finally (format t "Count: ~D~%" count))))
