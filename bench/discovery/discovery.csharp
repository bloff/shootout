/* The Great Computer Language Shootout 
 * http://shootout.alioth.debian.org/
 * 
 * contributed by Isaac Gouy */

using System;
using System.Text.RegularExpressions;

class discovery
{
   static void Main(string[] args){
      string[] variants = {
          "agggtaaa|tttaccct"
         ,"[cgt]gggtaaa|tttaccc[acg]"
         ,"a[act]ggtaaa|tttacc[agt]t"
         ,"ag[act]gtaaa|tttac[agt]ct"
         ,"agg[act]taaa|ttta[agt]cct"
         ,"aggg[acg]aaa|ttt[cgt]ccct"
         ,"agggt[cgt]aa|tt[acg]accct"
         ,"agggta[cgt]a|t[acg]taccct"
         ,"agggtaa[cgt]|[acg]ttaccct"
         };           
            
      String sequence = Console.In.ReadToEnd();
      Match m;

      foreach (string v in variants){
         int count = 0;
         Regex r = new Regex(v, RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled);

         for (m = r.Match(sequence); m.Success; m = m.NextMatch()) count++;
         Console.WriteLine("{0} {1}", v, count);
      }
   }
}

