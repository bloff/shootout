/*
 * The Computer Language Benchmarks Game
 * http://shootout.alioth.debian.org/
 *
 * adapted from a Java program by Klaus Friedel
 * contributed by Isaac Gouy
 */

void main(String[] args){
   let int numberOfThreads = 503;
   var numberOfMessagesToSend = Integer.parseInt(args[0]);

   ?MessageThread first = null;
   ?MessageThread last = null;

   for (int i = numberOfThreads; i > 0 ; i--) {
      first = new MessageThread(id: i, next: first);
      if (last == null) last = first;
   }
   if (last != null) last.next = first;

   if (first != null) first.take(numberOfMessagesToSend);
}



class MessageThread extends Thread {
   int id;
   ?MessageThread next;
   private boolean started = false;
   private MessageBox messageBox = new MessageBox();

   override void run() {
      let nextThread = next;

      if (nextThread != null){
         var int m = 0;
         while ((m = messageBox.message()) > 0) 
            nextThread.take(m-1);

         if (m == 0) println(id);

         //nextThread.take(m-1); // gentle exit
         System.exit(0);       // brutal exit
      }
   }

   void take(int message) {
      if (!started) {
         this.start();
         started = true;
      }
      messageBox.set(message);
   }
}


class MessageBox {
   private boolean empty = true;
   private int contents = 0;

   void set(int message){ 
      synchronized (this) {
         contents = message;
         empty = false;
         this.notify();     
      }
   }

   int message(){
      synchronized (this) {
         while (empty) this.wait();
         empty = true;
         return contents;          
      }
   }
}

