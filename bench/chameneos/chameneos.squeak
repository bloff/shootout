"*  The Computer Language Shootout
   http://shootout.alioth.debian.org/
   contributed by Paolo Bonzini *"!

Object subclass: #Chameleon	instanceVariableNames: 'meetings color semaphore waitingForPair'	classVariableNames: ''	poolDictionaries: ''	category: 'Shootout'!!Chameleon methodsFor: 'initialize-release' stamp: '  11/29/2006 23:52'!initialize    meetings := 0.    waitingForPair := Semaphore new.    semaphore := Semaphore new! !!Chameleon methodsFor: 'changing colours' stamp: '  11/29/2006 23:53'!color: c    color := c! !!Chameleon methodsFor: 'changing colours' stamp: '  11/29/2006 23:53'!fade    color := #faded.    waitingForPair signal.    semaphore signal! !!Chameleon methodsFor: 'changing colours' stamp: '  11/29/2006 23:54'!met: other    | newColor |    meetings := meetings + 1.    color == #red ifTrue: [	newColor := other == #yellow ifTrue: [ #blue ] ifFalse: [ #yellow ] ].    color == #yellow ifTrue: [	newColor := other == #red ifTrue: [ #blue ] ifFalse: [ #red ] ].    color == #blue ifTrue: [	newColor := other == #red ifTrue: [ #yellow ] ifFalse: [ #red ] ].    color := newColor.    waitingForPair signal! !!Chameleon methodsFor: 'running' stamp: '  11/29/2006 23:54'!fork: meetingPlace    ^[ self run: meetingPlace ] fork! !!Chameleon methodsFor: 'running' stamp: '  11/29/2006 23:54'!run: meetingPlace    [ color == #faded ] whileFalse: [	meetingPlace reachedBy: self.	waitingForPair wait ]! !!Chameleon methodsFor: 'accessing' stamp: '  11/29/2006 23:52'!color    ^color! !!Chameleon methodsFor: 'accessing' stamp: '  11/29/2006 23:53'!meetings    ^meetings! !!Chameleon methodsFor: 'accessing' stamp: '  11/29/2006 23:53'!wait    semaphore wait! !

Chameleon class	instanceVariableNames: ''!!Chameleon class methodsFor: 'instance creation' stamp: '  11/29/2006 23:55'!color: c    ^self new	initialize;	color: c! !


Object subclass: #MeetingPlace	instanceVariableNames: 'mutex first total max'	classVariableNames: ''	poolDictionaries: ''	category: 'Shootout'!!MeetingPlace methodsFor: 'running' stamp: '  11/29/2006 23:56'!max: maxMeetings    max := maxMeetings! !!MeetingPlace methodsFor: 'running' stamp: '  11/29/2006 23:56'!organizeMeetingWith: second    total >= max	ifTrue: [	    first fade.	    second fade ]	ifFalse: [	    first met: second color.	    second met: first color ].    total := total + 1! !!MeetingPlace methodsFor: 'running' stamp: '  11/29/2006 23:56'!reachedBy: chameleon    mutex critical: [	first isNil	    ifTrue: [ first := chameleon ]	    ifFalse: [ self organizeMeetingWith: chameleon. first := nil ] ]! !!MeetingPlace methodsFor: 'initialize-release' stamp: '  11/29/2006 23:55'!initialize    mutex := Semaphore forMutualExclusion.    total := 0! !

MeetingPlace class	instanceVariableNames: ''!!MeetingPlace class methodsFor: 'instance creation' stamp: '  11/29/2006 23:57'!forMeetings: maxMeetings    ^super new	initialize;	max: maxMeetings;	yourself! !


!Tests class methodsFor: 'benchmarking' stamp: '  11/30/2006 00:01'!chameneos   | c1 c2 c3 c4 mp |   c1 := Chameleon color: #blue.   c2 := Chameleon color: #red.   c3 := Chameleon color: #yellow.   c4 := Chameleon color: #blue.   mp := MeetingPlace forMeetings: (Smalltalk getSystemAttribute: 3) asInteger.   c1 fork: mp.   c2 fork: mp.   c3 fork: mp.   c4 fork: mp.   c1 wait.   c2 wait.   c3 wait.   c4 wait.   (FileStream fileNamed: '/dev/stdout')      nextPutAll: (c1 meetings + c2 meetings + c3 meetings + c4 meetings) printString;      nextPut: Character lf! !
