(* 
 * $Id: matrixnorm.ocaml,v 1.2 2005-03-31 10:40:08 bfulgham Exp $
 * The Great Computer Language Shootout
 * http://shootout.alioth.debian.org/
 * 
 * Contributed by Sebastien Loisel
 *)

let eval_A i j = 1.0 /. (float_of_int ((i+j)*(i+j+1)/2+i+1))
let eval_A_times_u u v =
  for i = 0 to (Array.length v) - 1 do
    v.(i) <- 0.0 ;
    for j = 0 to (Array.length u) - 1 do
      v.(i) <- v.(i) +. (eval_A i j) *. u.(j)
    done
  done
let eval_At_times_u u v =
  for i = 0 to (Array.length v)-1 do
    v.(i)<-0.0 ;
    for j = 0 to (Array.length u)-1 do
      v.(i)<-v.(i) +. (eval_A j i) *. u.(j)
    done
  done
let print_array u =
  for i = 0 to (Array.length u)-1 do
    Printf.printf " %f" u.(i)
  done;
  Printf.printf "\n"

let eval_AtA_times_u u v =
  let w = Array.create (Array.length u) 0.0 in
  eval_A_times_u u w; eval_At_times_u w v

let n= if Array.length Sys.argv > 1 then int_of_string Sys.argv.(1) else 2000
let u = Array.create n 1.0
let v = Array.create n 0.0 ;;

for i = 0 to 9 do
  eval_AtA_times_u u v; eval_AtA_times_u v u
done;;

let vv = ref 0.0
let vBv = ref 0.0 ;;

for i=0 to n-1 do
  vv := !vv +. v.(i) *. v.(i);
  vBv := !vBv +. u.(i) *. v.(i)
done;;

Printf.printf "%0.9f\n" (sqrt (!vBv /. !vv));;
