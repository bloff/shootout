#!/usr/bin/mzscheme -r

(define (sequence start stop)
  (if (> start stop)
      '()
      (cons start (sequence (+ start 1) stop))))

(define (main)
  (let* ([n (string->number (vector-ref argv 0))]
	 [hash (make-hash-table 'equal)]
	 [accum 0]
	 [seq (sequence 1 n)]
	 [revseq (reverse seq)]
	 [false (lambda () #f)])
    (for-each (lambda (item)
		(hash-table-put! hash (number->string item 16) item))
	      seq)
    (for-each (lambda (item)
		(when (hash-table-get hash (number->string item) false)
		      (set! accum (+ accum 1))))
	      revseq)
    (printf "~s~n" accum)))

(main)
