(*
 * The Great Computer Language Shootout
 * http://shootout.alioth.debian.org
 *
 * contributed by Isaac Gouy (Oberon-2 novice)
 * oo2c-ified by Brent Fulgham (Oberon-2 novice)
 *
 * To build: oo2c -M hash
 * To run:   hash 80000
 *)

MODULE Hash;
   (* Set the heap bytes big enough for n=80000 *)

IMPORT LangShootout, ADT:Dictionary, ADT:StringBuffer, Object:Boxed, Out;

CONST
  Digits = "0123456789abcdef";

VAR
  n, i, count: LONGINT;
  table: Dictionary.Dictionary;
  item: Dictionary.Value;
  key: Dictionary.Key;

PROCEDURE IntToString (x, r: LONGINT; digs[NO_COPY]: ARRAY OF CHAR): STRING;
VAR
  buffer: StringBuffer.StringBuffer;
  i: LONGINT;
BEGIN
  buffer := NEW(StringBuffer.StringBuffer, 100);
  i := 0;
  REPEAT
    buffer.AppendLatin1Char( digs[x MOD r] );
    x := x DIV r;
    INC(i);
  UNTIL (x = 0);
  RETURN buffer.ToString();
END IntToString;

BEGIN
   n := LangShootout.IntArgs();
   table := Dictionary.New();

   FOR i := 1 TO n DO
      key := IntToString(i, 16, Digits);
      item := Boxed.NewLongInt(1);
      table.Set(key, item);
   END;

   count := 0;
   FOR i := n TO 1 BY -1 DO
      key := IntToString(i, 10, Digits);
      IF table.HasKey(key) # FALSE THEN INC(count); END;
   END;
   Out.Int(count, 1); Out.Ln;
END Hash.
