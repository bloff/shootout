(* The Great Computer Language Shootout
   http://shootout.alioth.debian.org

   contributed by Isaac Gouy (Oberon-2 novice)
*)

MODULE Hash;
IMPORT LangShootout, SimpleHash, Out;

CONST
   BufferSize = 16;

VAR
   buffer: ARRAY BufferSize OF CHAR;
   n, i, count: LONGINT;
   table: SimpleHash.Hashtable;
   item: SimpleHash.Item;
   key: SimpleHash.ItemKey;
   Digits: ARRAY 16 OF CHAR; 


PROCEDURE IntToString(x, r: LONGINT): SimpleHash.ItemKey;
VAR
   s: SimpleHash.ItemKey;
   i, j: LONGINT;
BEGIN
   i := 0;
   REPEAT buffer[i] := Digits[x MOD r]; x := x DIV r; INC(i); UNTIL x = 0;
   NEW(s, i);
   j := 0;
   REPEAT DEC(i); s[j] := buffer[i]; INC(j); UNTIL i = 0;
   RETURN s;
END IntToString;

PROCEDURE InitDigits();
BEGIN
   Digits[0] := "0"; Digits[1] := "1"; Digits[2] := "2"; Digits[3] := "3";
   Digits[4] := "4"; Digits[5] := "5"; Digits[6] := "6"; Digits[7] := "7";
   Digits[8] := "8"; Digits[9] := "9"; Digits[10] := "a"; Digits[11] := "b";      
   Digits[12] := "c"; Digits[13] := "d"; Digits[14] := "e"; Digits[15] := "f"; 
END InitDigits;


BEGIN
   InitDigits(); 
   n := LangShootout.Argi();
   table := SimpleHash.New(n);

   FOR i := 1 TO n DO
      key := IntToString(i,16);
      item := SimpleHash.AddKey(table, key);
      item.value := i; 	
   END;

   count := 0;
   FOR i := n TO 1 BY -1 DO
      key := IntToString(i,10);
      IF SimpleHash.Find(table, key) # NIL THEN INC(count); END;
   END;
   Out.Int(count, 1); Out.Ln;
END Hash.
