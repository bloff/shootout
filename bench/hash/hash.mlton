(* -*- mode: sml -*-
 * $Id: hash.mlton,v 1.2 2004-06-17 03:38:44 sweeks Exp $
 * http://www.bagley.org/~doug/shootout/
 *)

fun hashtest n =
   let
      val hx = HashTable.new {equals = op =,
			      hash = String.hash,
			      size = n}
      fun doinserts (i, n) =
	 if i = n
	    then ()
	 else
	    let
	       val _ = HashTable.insert (hx, Int.fmt StringCvt.HEX i, i)
	    in
	       doinserts (i+1, n)
	    end
      fun dolookups (i, c) =
	 if i = 0
	    then c
	 else dolookups (i - 1,
			 if isSome (HashTable.peek (hx, Int.toString i))
			    then c + 1
			 else c)
   in
      doinserts (0, n)
      ; dolookups (n, 0)
   end

fun atoi s = case Int.fromString s of SOME num => num | NONE => 0;

fun main(name, args) = 
    let
	val arg = hd(args @ ["1"])
	val num = atoi arg
	val result = hashtest num
    in
	print (Int.toString result) ; print "\n" ;
	OS.Process.success
    end;

val _ = main( CommandLine.name(), CommandLine.arguments() );


