-- $Id: fibo.ghc,v 1.2 2004-06-30 07:28:57 bfulgham Exp $
-- http://www.bagley.org/~doug/shootout/
--
import System(getArgs)

main = do [number] <- getArgs
          print $ fib (read number)

fib :: Int -> Int
fib 0 = 1
fib 1 = 1
fib n = fib (n-2) + fib (n-1)

----------------------------------------------------------------
-- The "Canonical" version a real Haskeller would use:
----------------------------------------------------------------
--main = do [number] <- getArgs
--          print (fibs !! read number)
--
--fibs = (1::Int):1:zipWith (+) fibs (tail fibs)
--
----------------------------------------------------------------
-- "Real World" Command Line Argument Processing
----------------------------------------------------------------
--import System(getArgs, getProgName, exitWith, ExitCode(..))
--
--main = do
--       arg <- getArgs
--       case arg of
--         [number] -> putStrLn (show (fib (read number)))
--         _        -> do
--                     progname <- getProgName
--                     putStrLn ("Usage: " ++ progname ++ " number")
--                     exitWith (ExitFailure 1)


