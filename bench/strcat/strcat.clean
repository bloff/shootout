module strcat

import StdEnv, ArgEnv

loop :: !Int *String -> *String
loop 0 s = s
loop i s = loop (i-1) (s +++. "hello\n")

Start
//	= toString (size s) +++ "\n"
	= toString (size s`) +++ "\n"
where
  s = loop n ""
  n = toInt (select getCommandLine 1)
  s`	= cat (repeatn n "hello\n")

//

cat :: ![String] -> String
/*
cat [h]   = h
cat [h:t] = h +++. cat t
cat []    = ""
*/
cat l
	# s = sizelist l
	# a = createArray s ' '
	# (_,a) = copylist l a 0
	= a
where
	sizelist [] = 0
	sizelist [h:t] = size h + sizelist t
	
	copylist [] a i = (i,a)
	copylist [h:t] a i
		# (i,a) = scopy (size h) i 0 a h
		= copylist t a i

scopy ::
	!Int		// end of copy source index
	!Int		// current target index
	!Int		// current source index
	!*{#Char}	// target string
	!{#Char}	// source string
	-> (!Int,!.{#Char})
scopy n i j s h
	| j >= n = (i,s)
	#! s = {s & [i] = h.[j]}
	= scopy n (i+1) (j+1) s h
