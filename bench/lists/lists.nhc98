-- $Id: lists.nhc98,v 1.2 2004-10-06 07:26:51 bfulgham Exp $
-- http://shootout.alioth.debian.org/

module Main(main) where

import System(getArgs)
import Prelude

size = 10000

-- `seq`s below force evaluation of isok1 and isok2
test = isok1 `seq` length l3
  where single x = [x]
        l1 = [1..size] 
        l2 = l1
        l3 = foldl (++) [] (map single l2)
        l2' = foldr (++) [] (map single l3)
        l1' = reverse l1
        isok1 = head l1' == size
        isok2 = l1' == l2'

testMe :: Int -> Int
testMe 1 = test
testMe n = test `seq` testMe (n - 1)

main = do ~[s] <- getArgs
          putStrLn . show . testMe . read $ s
