-- $Id: nestedloop.ghc,v 1.2 2004-06-30 07:29:01 bfulgham Exp $
-- http://www.bagley.org/~doug/shootout/
-- from Brian Gregor
-- shortened by JP Bernardy

import System(getArgs)

main = do [number] <- getArgs
	  let n :: Int = read number
          putStrLn (show (loopA n n 0))
    where loopA 0 m x = x
	  loopA n m x = loopA (n-1) m (loopB m m x)

	  loopB 0 m x = x
	  loopB n m x = loopB (n-1) m (loopC m m x)

	  loopC 0 m x = x
	  loopC n m x = loopC (n-1) m (loopD m m x)

	  loopD 0 m x = x
	  loopD n m x = loopD (n-1) m (loopE m m x)

	  loopE 0 m x = x
	  loopE n m x = loopE (n-1) m (loopF m x)

	  loopF 0 x = x
	  loopF n x = loopF (n-1) (x+1)

