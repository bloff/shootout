#!/usr/bin/python
# $Id: matrix.python-2.python,v 1.2 2005-03-06 05:21:24 bfulgham Exp $
# http://shootout.alioth.debian.org/

# This program based on the original from:
# "The What, Why, Who, and Where of Python" By Aaron R. Watters
# http://www.networkcomputing.com/unixworld/tutorial/005/005.html

# modified to pass rows and cols, and avoid matrix size checks
# and added one optimization to reduce subscripted references in
# inner loop.
#
# Enhanced by Tupteq

import sys

size = 30

def mkmatrix(rows, cols):
    xrc = xrange(cols)
    return [[i * cols + j + 1 for j in xrc] for i in xrange(rows)]

def mmult(rows, cols, m1, m2):
    xrc = xrange(cols)
    m3 = [None] * rows
    for i in xrange(rows):
        m3i = m3[i] = [0] * cols
        m1i = m1[i]
        for j in xrc:
            val = 0
            for k in xrc:
                val += m1i[k] * m2[k][j]
            m3i[j] = val

    return m3

def main():
    iter = int(sys.argv[1])
    m1 = mkmatrix(size, size)
    m2 = mkmatrix(size, size)
    for i in xrange(iter):
        mm = mmult(size, size, m1, m2)
    print mm[0][0], mm[2][3], mm[3][2], mm[4][4]

main()
