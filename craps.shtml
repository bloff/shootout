<!--#set var="TITLE" value="Computer Language Shootout Scorecard" -->
<!--#set var="KEYWORDS" value="performance, benchmark, computer,
algorithms, languages, compare, cpu, memory, lines of code" --> 
<!--#include virtual="html/header.shtml" -->
<!--#include virtual="nav.html" -->

<h4>Which languages is best?  Here's the Shootout Scorecard!</h4>
<p>
  Warning!  This page is <i><b>just for fun</b></i> :-)
<p>
  <b>Please bear in mind that this is a work in progress, if you come
  back tomorrow, everything may be different.</b>
<p>
  Some people have suggested that I summarize the results, or declare
  a winner.  In order to satisfy this request, I have come up with a
  unique and subtle quantification system to score languages on their
  overall performance, which I call the <i><b>Completely Random and
  Arbitrary Point System!</i></b>, or
  <i><b>CRAPS!<sup><small>[TM]</small></sup></b></i>, for short.  (See
  bottom of page for a brief description of this analytical marvel).
<p>
  The scores in the Scores table can reflect CPU, Memory and/or Lines
  of Code (LOC).  The lower a language's measured CPU, Memory, or LOC
  is for a test, the more points it gets.  But the language doesn't
  get any points if it is missing an entry for a test (an incentive
  to complete all tests :-).  You can choose a multiplier for any of
  CPU, Memory and LOC scores below.  By default, we just show the CPU
  score alone.  Also, each test is weighted, because some tests are
  more important than others (the default weights in the table below
  reflect my personal preferences).  But you can change the weights
  and the multipliers however you like, because after all, benchmark
  results should reflect the priorities of the person viewing them.
<p>
  Once you have selected the weights and multipliers to your satisfaction,
  you can recalulate the scores and use the resulting URL on your language
  advocacy page as the final proof of your favorite language's supremacy!
  Think of the glory.
<p>
  Of course, it's also possible that my results are <a
  href="method.shtml#flaws">flawed</a>, and playing with this silly
  CGI is just a waste of time.
<br>

<!--#include virtual="craps.pl?$QUERY_STRING" -->

<br>
<p>
  The <b>CRAPS!</b> point system works thusly:
<ul>
<li>
  For each test, add the max and min CPU, this is the base score.
  (We do the same for Memory and LOC scores).
<li>
  For each language, subtract its CPU from the base score, normalize
  to between 0 and 10 then multiply by the weight of the test (a
  number between 0 and 5), this is the language's score for that
  test.  If a language does not have an entry for a test its score
  is zero.  (Again we do the same for Memory and LOC).
<li>
  Then the CPU/Memory/LOC scores are multiplied by their respective
  Mulipliers and the resulting scores are added together to the get
  final score.
<li>
  Add up all the scores for each language for each test, and put them
  on this nice web page.
<li>
  And the result is <b>CRAPS!</b>.
</ul>

<!--#include virtual="html/footer.shtml" -->
