<span class="slc">-- $Id: objinst-lua.code,v 1.9 2007-05-18 03:09:57 bfulgham Exp $</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- contributed by Roberto Ierusalimschy</span>

<span class="slc">--------------------------------------------------------------</span>
<span class="slc">-- Toggle class</span>
<span class="slc">--------------------------------------------------------------</span>

Toggle <span class="sym">= {}</span>

<span class="kwa">function</span> Toggle<span class="sym">:</span><span class="kwd">value</span> <span class="sym">()</span>
  <span class="kwa">return</span> self<span class="sym">.</span>state
<span class="kwa">end</span>

<span class="kwa">function</span> Toggle<span class="sym">:</span><span class="kwd">activate</span> <span class="sym">()</span>
  self<span class="sym">.</span>state <span class="sym">=</span> <span class="kwa">not</span> self<span class="sym">.</span>state
  <span class="kwa">return</span> self
<span class="kwa">end</span>

<span class="kwa">function</span> Toggle<span class="sym">:</span><span class="kwd">new</span> <span class="sym">(</span>start_state<span class="sym">)</span>
  <span class="kwa">local</span> o <span class="sym">= {</span>state <span class="sym">=</span> start_state<span class="sym">}</span>
  self<span class="sym">.</span>__index <span class="sym">=</span> self
  <span class="kwd">setmetatable</span><span class="sym">(</span>o<span class="sym">,</span> self<span class="sym">)</span>
  <span class="kwa">return</span> o
<span class="kwa">end</span>

<span class="slc">--------------------------------------------------------------</span>
<span class="slc">-- NthToggle class</span>
<span class="slc">--------------------------------------------------------------</span>

NthToggle <span class="sym">=</span> Toggle<span class="sym">:</span><span class="kwd">new</span><span class="sym">()</span>

<span class="kwa">function</span> NthToggle<span class="sym">:</span><span class="kwd">activate</span> <span class="sym">()</span>
  self<span class="sym">.</span>counter <span class="sym">=</span> self<span class="sym">.</span>counter <span class="sym">+</span> <span class="num">1</span>
  <span class="kwa">if</span> self<span class="sym">.</span>counter <span class="sym">&gt;=</span> self<span class="sym">.</span>count_max <span class="kwa">then</span>
    self<span class="sym">.</span>state <span class="sym">=</span> <span class="kwa">not</span> self<span class="sym">.</span>state
    self<span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0</span>
  <span class="kwa">end</span>
  <span class="kwa">return</span> self
<span class="kwa">end</span>

<span class="kwa">function</span> NthToggle<span class="sym">:</span><span class="kwd">new</span> <span class="sym">(</span>start_state<span class="sym">,</span> max_counter<span class="sym">)</span>
  <span class="kwa">local</span> o <span class="sym">=</span> Toggle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>self<span class="sym">,</span> start_state<span class="sym">)</span>
  o<span class="sym">.</span>count_max <span class="sym">=</span> max_counter
  o<span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0</span>
  <span class="kwa">return</span> o
<span class="kwa">end</span>

<span class="slc">-----------------------------------------------------------</span>
<span class="slc">-- main</span>
<span class="slc">-----------------------------------------------------------</span>
<span class="kwa">function</span> <span class="kwd">main</span> <span class="sym">()</span>
    <span class="kwa">local</span> N <span class="sym">=</span> <span class="kwb">tonumber</span><span class="sym">((</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span> <span class="kwa">or</span> <span class="num">1</span>
    <span class="kwa">local</span> toggle <span class="sym">=</span> Toggle<span class="sym">:</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span><span class="num">5</span> <span class="kwa">do</span>
      toggle<span class="sym">:</span><span class="kwd">activate</span><span class="sym">()</span>
      <span class="kwb">print</span><span class="sym">(</span>toggle<span class="sym">:</span><span class="kwd">value</span><span class="sym">()</span> <span class="kwa">and</span> <span class="str">&quot;true&quot;</span> <span class="kwa">or</span> <span class="str">&quot;false&quot;</span><span class="sym">)</span>
    <span class="kwa">end</span>
    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>N <span class="kwa">do</span>
      toggle <span class="sym">=</span> Toggle<span class="sym">:</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
    <span class="kwa">end</span>

    <span class="kwb">print</span><span class="sym">(</span><span class="str">&quot;&quot;</span><span class="sym">)</span>

    <span class="kwa">local</span> ntoggle <span class="sym">=</span> NthToggle<span class="sym">:</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)</span>
    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span><span class="num">8</span> <span class="kwa">do</span>
      ntoggle<span class="sym">:</span><span class="kwd">activate</span><span class="sym">()</span>
      <span class="kwb">print</span><span class="sym">(</span>ntoggle<span class="sym">:</span><span class="kwd">value</span><span class="sym">()</span> <span class="kwa">and</span> <span class="str">&quot;true&quot;</span> <span class="kwa">or</span> <span class="str">&quot;false&quot;</span><span class="sym">)</span>
    <span class="kwa">end</span>
    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>N <span class="kwa">do</span>
      ntoggle <span class="sym">=</span> NthToggle<span class="sym">:</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)</span>
    <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwd">main</span><span class="sym">()</span>


