<span class="line">    1 </span><span class="slc">-- $Id: objinst-lua.code,v 1.3 2004-11-11 07:14:03 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- contributed by Roberto Ierusalimschy
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="slc">--------------------------------------------------------------
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">-- Toggle class
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">--------------------------------------------------------------
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span>Toggle <span class="sym">= {}
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span><span class="kwa">function</span> Toggle<span class="sym">:</span>value <span class="sym">()
</span><span class="line">   12 </span><span class="sym"></span>  <span class="kwa">return</span> self.state
<span class="line">   13 </span><span class="kwa">end
</span><span class="line">   14 </span><span class="kwa">
</span><span class="line">   15 </span><span class="kwa">function</span> Toggle<span class="sym">:</span>activate <span class="sym">()
</span><span class="line">   16 </span><span class="sym"></span>  self.state <span class="sym">=</span> <span class="kwa">not</span> self.state
<span class="line">   17 </span>  <span class="kwa">return</span> self
<span class="line">   18 </span><span class="kwa">end
</span><span class="line">   19 </span><span class="kwa">
</span><span class="line">   20 </span><span class="kwa">function</span> Toggle<span class="sym">:</span>new <span class="sym">(</span>start_state<span class="sym">)
</span><span class="line">   21 </span><span class="sym"></span>  <span class="kwa">local</span> o <span class="sym">= {</span>state <span class="sym">=</span> start_state<span class="sym">}
</span><span class="line">   22 </span><span class="sym"></span>  self.__index <span class="sym">=</span> self
<span class="line">   23 </span>  setmetatable<span class="sym">(</span>o<span class="sym">,</span> self<span class="sym">)
</span><span class="line">   24 </span><span class="sym"></span>  <span class="kwa">return</span> o
<span class="line">   25 </span><span class="kwa">end
</span><span class="line">   26 </span><span class="kwa">
</span><span class="line">   27 </span><span class="kwa"></span><span class="slc">--------------------------------------------------------------
</span><span class="line">   28 </span><span class="slc"></span><span class="slc">-- NthToggle class
</span><span class="line">   29 </span><span class="slc"></span><span class="slc">--------------------------------------------------------------
</span><span class="line">   30 </span><span class="slc"></span>
<span class="line">   31 </span>NthToggle <span class="sym">=</span> Toggle<span class="sym">:</span>new<span class="sym">()
</span><span class="line">   32 </span><span class="sym">
</span><span class="line">   33 </span><span class="sym"></span><span class="kwa">function</span> NthToggle<span class="sym">:</span>activate <span class="sym">()
</span><span class="line">   34 </span><span class="sym"></span>  self.counter <span class="sym">=</span> self.counter <span class="sym">+</span> <span class="num">1
</span><span class="line">   35 </span><span class="num"></span>  <span class="kwa">if</span> self.counter <span class="sym">&gt;=</span> self.count_max <span class="kwa">then
</span><span class="line">   36 </span><span class="kwa"></span>    self.state <span class="sym">=</span> <span class="kwa">not</span> self.state
<span class="line">   37 </span>    self.counter <span class="sym">=</span> <span class="num">0
</span><span class="line">   38 </span><span class="num"></span>  <span class="kwa">end
</span><span class="line">   39 </span><span class="kwa">  return</span> self
<span class="line">   40 </span><span class="kwa">end
</span><span class="line">   41 </span><span class="kwa">
</span><span class="line">   42 </span><span class="kwa">function</span> NthToggle<span class="sym">:</span>new <span class="sym">(</span>start_state<span class="sym">,</span> max_counter<span class="sym">)
</span><span class="line">   43 </span><span class="sym"></span>  <span class="kwa">local</span> o <span class="sym">=</span> Toggle.new<span class="sym">(</span>self<span class="sym">,</span> start_state<span class="sym">)
</span><span class="line">   44 </span><span class="sym"></span>  o.count_max <span class="sym">=</span> max_counter
<span class="line">   45 </span>  o.counter <span class="sym">=</span> <span class="num">0
</span><span class="line">   46 </span><span class="num"></span>  <span class="kwa">return</span> o
<span class="line">   47 </span><span class="kwa">end
</span><span class="line">   48 </span><span class="kwa">
</span><span class="line">   49 </span><span class="kwa"></span><span class="slc">-----------------------------------------------------------
</span><span class="line">   50 </span><span class="slc"></span><span class="slc">-- main
</span><span class="line">   51 </span><span class="slc"></span><span class="slc">-----------------------------------------------------------
</span><span class="line">   52 </span><span class="slc"></span><span class="kwa">function</span> main <span class="sym">()
</span><span class="line">   53 </span><span class="sym"></span>    <span class="kwa">local</span> N <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">((</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span> <span class="kwa">or</span> <span class="num">1
</span><span class="line">   54 </span><span class="num"></span>    <span class="kwa">local</span> toggle <span class="sym">=</span> Toggle<span class="sym">:</span>new<span class="sym">(</span><span class="num">1</span><span class="sym">)
</span><span class="line">   55 </span><span class="sym"></span>    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span><span class="num">5</span> <span class="kwa">do
</span><span class="line">   56 </span><span class="kwa"></span>      toggle<span class="sym">:</span>activate<span class="sym">()
</span><span class="line">   57 </span><span class="sym"></span>      <span class="kwa">print</span><span class="sym">(</span>toggle<span class="sym">:</span>value<span class="sym">()</span> <span class="kwa">and</span> <span class="str">&quot;true&quot;</span> <span class="kwa">or</span> <span class="str">&quot;false&quot;</span><span class="sym">)
</span><span class="line">   58 </span><span class="sym"></span>    <span class="kwa">end
</span><span class="line">   59 </span><span class="kwa">    for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>N <span class="kwa">do
</span><span class="line">   60 </span><span class="kwa"></span>      toggle <span class="sym">=</span> Toggle<span class="sym">:</span>new<span class="sym">(</span><span class="num">1</span><span class="sym">)
</span><span class="line">   61 </span><span class="sym"></span>    <span class="kwa">end
</span><span class="line">   62 </span><span class="kwa">
</span><span class="line">   63 </span><span class="kwa">    print</span><span class="sym">(</span><span class="str">&quot;&quot;</span><span class="sym">)
</span><span class="line">   64 </span><span class="sym">
</span><span class="line">   65 </span><span class="sym"></span>    <span class="kwa">local</span> ntoggle <span class="sym">=</span> NthToggle<span class="sym">:</span>new<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span><span class="line">   66 </span><span class="sym"></span>    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span><span class="num">8</span> <span class="kwa">do
</span><span class="line">   67 </span><span class="kwa"></span>      ntoggle<span class="sym">:</span>activate<span class="sym">()
</span><span class="line">   68 </span><span class="sym"></span>      <span class="kwa">print</span><span class="sym">(</span>ntoggle<span class="sym">:</span>value<span class="sym">()</span> <span class="kwa">and</span> <span class="str">&quot;true&quot;</span> <span class="kwa">or</span> <span class="str">&quot;false&quot;</span><span class="sym">)
</span><span class="line">   69 </span><span class="sym"></span>    <span class="kwa">end
</span><span class="line">   70 </span><span class="kwa">    for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>N <span class="kwa">do
</span><span class="line">   71 </span><span class="kwa"></span>      ntoggle <span class="sym">=</span> NthToggle<span class="sym">:</span>new<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span><span class="line">   72 </span><span class="sym"></span>    <span class="kwa">end
</span><span class="line">   73 </span><span class="kwa">end
</span><span class="line">   74 </span><span class="kwa">
</span><span class="line">   75 </span><span class="kwa"></span>main<span class="sym">()
</span><span class="line">   76 </span><span class="sym">
</span><span class="line">   77 </span><span class="sym"></span>
