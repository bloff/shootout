<span class="line">    1 </span><span class="slc">-- $Id: regexmatch-ghc.code,v 1.3 2004-11-11 07:14:05 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- By Ray Racine (Haskell newbie)
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">-- Usage for 10 iterations:: regexp 10 &lt; Input.txt
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="kwa">import</span> Control.Monad
<span class="line">    7 </span><span class="kwa">import</span> Data.Maybe
<span class="line">    8 </span><span class="kwa">import</span> System <span class="sym">(</span>getArgs<span class="sym">)
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">import</span> RegexString <span class="sym">(</span>matchRegex<span class="sym">,</span> mkRegex<span class="sym">)
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span>phoneMatch <span class="sym">=</span> matchRegex $ mkRegex regex
<span class="line">   12 </span>             <span class="kwa">where</span> regex <span class="sym">=
</span><span class="line">   13 </span><span class="sym"></span>                       <span class="str">&quot;(^|[^0-9\\(]+)&quot;</span> <span class="sym">++
</span><span class="line">   14 </span><span class="sym"></span>                       <span class="str">&quot;(&quot;</span> <span class="sym">++
</span><span class="line">   15 </span><span class="sym"></span>                       <span class="str">&quot;\\(([0-9][0-9][0-9])\\)&quot;</span> <span class="sym">++
</span><span class="line">   16 </span><span class="sym"></span>                       <span class="str">&quot;|&quot;</span> <span class="sym">++
</span><span class="line">   17 </span><span class="sym"></span>                       <span class="str">&quot;([0-9][0-9][0-9])&quot;</span> <span class="sym">++
</span><span class="line">   18 </span><span class="sym"></span>                       <span class="str">&quot;)&quot;</span> <span class="sym">++
</span><span class="line">   19 </span><span class="sym"></span>                       <span class="str">&quot; &quot;</span> <span class="sym">++
</span><span class="line">   20 </span><span class="sym"></span>                       <span class="str">&quot;([0-9][0-9][0-9])&quot;</span> <span class="sym">++
</span><span class="line">   21 </span><span class="sym"></span>                       <span class="str">&quot;[ -]&quot;</span>  <span class="sym">++
</span><span class="line">   22 </span><span class="sym"></span>                       <span class="str">&quot;([0-9][0-9][0-9][0-9])&quot;</span> <span class="sym">++
</span><span class="line">   23 </span><span class="sym"></span>                       <span class="str">&quot;($|[^0-9])&quot;</span>
<span class="line">   24 </span>
<span class="line">   25 </span>canonicalPhone matchGrps <span class="sym">=</span> <span class="str">&quot;(&quot;</span> <span class="sym">++</span> areacode <span class="sym">++</span> <span class="str">&quot;) &quot;</span> <span class="sym">++</span> phnum
<span class="line">   26 </span>                           <span class="kwa">where</span> areacode <span class="sym">=</span> <span class="kwa">let</span> <span class="sym">(</span>_<span class="sym">,</span>b<span class="sym">) =</span> splitAt <span class="num">2</span> matchGrps <span class="kwa">in
</span><span class="line">   27 </span><span class="kwa"></span>                                            <span class="sym">(</span>head b<span class="sym">) ++ (</span>head . tail $ b<span class="sym">)
</span><span class="line">   28 </span><span class="sym"></span>                                 phnum <span class="sym">=</span> <span class="kwa">let</span> <span class="sym">(</span>_<span class="sym">,</span>b<span class="sym">) =</span> splitAt <span class="num">4</span> matchGrps <span class="kwa">in
</span><span class="line">   29 </span><span class="kwa"></span>                                         <span class="sym">(</span>head b<span class="sym">) ++</span> <span class="str">&quot;-&quot;</span> <span class="sym">++ (</span>head . tail<span class="sym">)</span> b
<span class="line">   30 </span>
<span class="line">   31 </span>matches l <span class="sym">=</span> return $ concatMap <span class="sym">(</span>fun . phoneMatch<span class="sym">)</span> l
<span class="line">   32 </span>    <span class="kwa">where</span> fun Nothing <span class="sym">= []
</span><span class="line">   33 </span><span class="sym"></span>          fun <span class="sym">(</span>Just v<span class="sym">)= [</span>canonicalPhone v<span class="sym">]
</span><span class="line">   34 </span><span class="sym">
</span><span class="line">   35 </span><span class="sym"></span>main <span class="sym">=</span> <span class="kwa">do</span> <span class="sym">[</span>num<span class="sym">] &lt;-</span> getArgs
<span class="line">   36 </span>          lined <span class="sym">&lt;-</span> getContents <span class="sym">&gt;&gt;=</span> return . lines
<span class="line">   37 </span>          foldM <span class="sym">(</span>\n _ <span class="sym">-&gt;</span> matches lined <span class="sym">&gt;&gt;=</span> \v <span class="sym">-&gt;</span> n `seq` return $ n <span class="sym">+</span> length v<span class="sym">)</span> <span class="num">0</span> <span class="sym">[</span><span class="num">2</span>..<span class="sym">(</span>read num<span class="sym">)]
</span><span class="line">   38 </span><span class="sym"></span>          matches lined <span class="sym">&gt;&gt;=</span> foldM_ <span class="sym">(</span>\n v <span class="sym">-&gt;</span> putStrLn <span class="sym">(</span>show n <span class="sym">++</span> <span class="str">&quot;: &quot;</span> <span class="sym">++</span> v<span class="sym">) &gt;&gt;</span> return <span class="sym">(</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">))</span> <span class="num">1</span>
