<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/bin/bash
# -*- mode: lisp -*-
PROG=${0%.jl}
[ \! -f $PROG.jlc -o $0 -nt $PROG.jlc ] &amp;&amp;
    rep --batch --no-rc -l compiler -f compile-batch $0
exec rep <B><FONT COLOR="#BC8F8F">&quot;$PROG.jlc&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$@&quot;</FONT></B>
!#

<I><FONT COLOR="#B22222">;;; $Id: ackermann-rep.code,v 1.2 2004-11-08 08:15:12 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(define-structure main ()
  (open rep rep.system)

  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">ack</FONT></B> M N)
    (<B><FONT COLOR="#A020F0">cond</FONT></B> ((= M 0) (+ N 1))
	  ((= N 0) (ack (- M 1) 1))
	  (t (ack (- M 1) (ack M (- N 1))))))
  
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((arg (get-command-line-option <B><FONT COLOR="#BC8F8F">&quot;--num&quot;</FONT></B> t))
	 (n (<B><FONT COLOR="#A020F0">if</FONT></B> arg (read-from-string arg) 1)))
    (max-lisp-depth 2500)
    (format standard-output <B><FONT COLOR="#BC8F8F">&quot;Ack(3,%d): %d\n&quot;</FONT></B> n (ack 3 n))))</pre></td></tr></table>
