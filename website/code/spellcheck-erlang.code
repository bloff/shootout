<span class="slc">%%% -*- mode: erlang -*-</span>
<span class="slc">%%% $Id: spellcheck-erlang.code,v 1.18 2006-09-20 05:52:39 bfulgham Exp $</span>
<span class="slc">%%% http://shootout.alioth.debian.org/</span>
<span class="slc">%%%</span>
<span class="slc">%%% New (speedy) implementation by Bengt Kleberg.</span>

<span class="sym">-</span><span class="kwd">module</span><span class="sym">(</span>spellcheck<span class="sym">)</span>.
<span class="sym">-</span><span class="kwd">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

<span class="kwd">main</span><span class="sym">() -&gt;</span> <span class="kwd">main</span><span class="sym">([</span><span class="str">'1'</span><span class="sym">])</span>.
<span class="kwd">main</span><span class="sym">(</span>_Args<span class="sym">) -&gt;</span>
	Dict <span class="sym">=</span> <span class="kwd">load_dict</span><span class="sym">(),</span>
	<span class="kwd">spell</span><span class="sym">(</span> io<span class="sym">:</span><span class="kwd">fread</span><span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~s&quot;</span><span class="sym">),</span> Dict <span class="sym">),</span>
	<span class="kwb">halt</span><span class="sym">()</span>.

<span class="kwd">load_dict</span><span class="sym">() -&gt;</span>
	Dict <span class="sym">=</span> ets<span class="sym">:</span><span class="kwd">new</span><span class="sym">(</span>i_am_a_carrot<span class="sym">, [</span>set<span class="sym">]),</span>
	<span class="sym">{</span>ok<span class="sym">,</span> Binary<span class="sym">} =</span> file<span class="sym">:</span><span class="kwd">read_file</span><span class="sym">(</span><span class="str">&quot;Usr.Dict.Words&quot;</span><span class="sym">),</span>
	Fun <span class="sym">=</span> <span class="kwa">fun</span><span class="sym">(</span> Word <span class="sym">) -&gt;</span>
		ets<span class="sym">:</span><span class="kwd">insert</span><span class="sym">(</span>Dict<span class="sym">, {</span>Word<span class="sym">,</span> <span class="num">1</span><span class="sym">})</span>
	<span class="kwa">end</span><span class="sym">,</span>
	lists<span class="sym">:</span><span class="kwd">foreach</span><span class="sym">(</span> Fun<span class="sym">,</span> string<span class="sym">:</span><span class="kwd">tokens</span><span class="sym">(</span>erlang<span class="sym">:</span><span class="kwb">binary_to_list</span><span class="sym">(</span> Binary <span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">) ),</span>
	Dict.

<span class="kwd">spell</span><span class="sym">(</span>eof<span class="sym">,</span> _Dict<span class="sym">) -&gt;</span>
	ok<span class="sym">;</span>
<span class="kwd">spell</span><span class="sym">({</span>ok<span class="sym">, [</span>Word<span class="sym">]},</span> Dict<span class="sym">) -&gt;</span>
	<span class="kwa">case</span> ets<span class="sym">:</span><span class="kwd">lookup</span><span class="sym">(</span>Dict<span class="sym">,</span> Word<span class="sym">)</span> <span class="kwa">of</span>
		<span class="sym">[] -&gt;</span> io<span class="sym">:</span><span class="kwd">format</span><span class="sym">(</span><span class="str">&quot;~s~n&quot;</span><span class="sym">,[</span>Word<span class="sym">]);</span>
		_Entry  <span class="sym">-&gt;</span> ok
	<span class="kwa">end</span><span class="sym">,</span>
	<span class="kwd">spell</span><span class="sym">(</span> io<span class="sym">:</span><span class="kwd">fread</span><span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~s&quot;</span><span class="sym">),</span> Dict <span class="sym">)</span>.

