<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="line">    2 </span><span class="sym">-</span>e main <span class="sym">-</span>s
<span class="line">    3 </span><span class="sym">!</span>#
<span class="line">    4 </span>
<span class="line">    5 </span><span class="slc">;;; $Id: except-guile.code,v 1.3 2004-11-11 07:13:57 bfulgham Exp $
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    7 </span><span class="slc"></span>
<span class="line">    8 </span><span class="sym">(</span>use<span class="sym">-</span>modules <span class="sym">(</span>ice<span class="num">-9</span> format<span class="sym">))
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym">(</span>define HI <span class="num">0</span><span class="sym">)
</span><span class="line">   11 </span><span class="sym">(</span>define LO <span class="num">0</span><span class="sym">)
</span><span class="line">   12 </span><span class="sym">
</span><span class="line">   13 </span><span class="sym">(</span>define <span class="sym">(</span>some_fun n<span class="sym">)
</span><span class="line">   14 </span><span class="sym">  (</span>catch #t
<span class="line">   15 </span>         <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">() (</span>hi_fun n<span class="sym">))
</span><span class="line">   16 </span><span class="sym">         (</span><span class="kwa">lambda</span> args #f<span class="sym">)))
</span><span class="line">   17 </span><span class="sym">
</span><span class="line">   18 </span><span class="sym">(</span>define <span class="sym">(</span>hi_fun n<span class="sym">)
</span><span class="line">   19 </span><span class="sym">  (</span>catch <span class="str">'Hi_Exception
</span><span class="line">   20 </span><span class="str">         (lambda () (lo_fun n))
</span><span class="line">   21 </span><span class="str">         (lambda args (set! HI (+ HI 1)))))
</span><span class="line">   22 </span><span class="str">
</span><span class="line">   23 </span><span class="str">(define (lo_fun n)
</span><span class="line">   24 </span><span class="str">  (catch '</span>Lo_Exception
<span class="line">   25 </span>         <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">() (</span>blowup n<span class="sym">))
</span><span class="line">   26 </span><span class="sym">         (</span><span class="kwa">lambda</span> args <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> LO <span class="sym">(+</span> LO <span class="num">1</span><span class="sym">)))))
</span><span class="line">   27 </span><span class="sym">
</span><span class="line">   28 </span><span class="sym">(</span>define <span class="sym">(</span>blowup n<span class="sym">)
</span><span class="line">   29 </span><span class="sym">  (</span><span class="kwa">if</span> <span class="sym">(=</span> <span class="num">0</span> <span class="sym">(</span>modulo n <span class="num">2</span><span class="sym">))
</span><span class="line">   30 </span><span class="sym">      (</span>throw <span class="str">'Hi_Exception)
</span><span class="line">   31 </span><span class="str">      (throw '</span>Lo_Exception<span class="sym">)))
</span><span class="line">   32 </span><span class="sym">
</span><span class="line">   33 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">   34 </span><span class="sym">  (</span>let<span class="sym">* ((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">)))
</span><span class="line">   35 </span><span class="sym">    (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))
</span><span class="line">   36 </span><span class="sym">        ((=</span> i n<span class="sym">))
</span><span class="line">   37 </span><span class="sym">      (</span>some_fun i<span class="sym">)))
</span><span class="line">   38 </span><span class="sym">  (</span>display <span class="sym">(</span>format <span class="str">&quot;Exceptions: HI=~D / LO=~D</span><span class="esc">\n</span><span class="str">&quot;</span> HI LO<span class="sym">)))
</span><span class="line">   39 </span><span class="sym"></span>
