<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/bin/bash
# -*- mode: lisp -*-
PROG=${0%.jl}
[ \! -f $PROG.jlc -o $0 -nt $PROG.jlc ] &amp;&amp;
    rep --batch --no-rc -l compiler -f compile-batch $0
exec rep <B><FONT COLOR="#BC8F8F">&quot;$PROG.jlc&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$@&quot;</FONT></B>
!#

<I><FONT COLOR="#B22222">;;; $Id: hash2-rep.code,v 1.2 2004-11-08 08:15:14 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(define-structure main ()
  (open rep
	rep.system
	rep.data.tables)
  
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((arg (get-command-line-option <B><FONT COLOR="#BC8F8F">&quot;--num&quot;</FONT></B> t))
	 (n (<B><FONT COLOR="#A020F0">if</FONT></B> arg (read-from-string arg) 1))
	 (hash1 (make-table string-hash eq-hash))
	 (hash2 (make-table string-hash eq-hash)))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	((= i 10000))
      (table-set hash1 (concat <B><FONT COLOR="#BC8F8F">&quot;foo_&quot;</FONT></B> (number-&gt;string i 10)) i))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	((= i n))
      (table-walk (<B><FONT COLOR="#A020F0">lambda</FONT></B> (key val)
		    (table-set hash2 key (+ val (<B><FONT COLOR="#A020F0">or</FONT></B> (table-ref hash2 key) 0))))
		  hash1))
    (format standard-output <B><FONT COLOR="#BC8F8F">&quot;%d %d %d %d\n&quot;</FONT></B>
	    (table-ref hash1 <B><FONT COLOR="#BC8F8F">&quot;foo_1&quot;</FONT></B>)
	    (table-ref hash1 <B><FONT COLOR="#BC8F8F">&quot;foo_9999&quot;</FONT></B>)
	    (table-ref hash2 <B><FONT COLOR="#BC8F8F">&quot;foo_1&quot;</FONT></B>)
	    (table-ref hash2 <B><FONT COLOR="#BC8F8F">&quot;foo_9999&quot;</FONT></B>))))

</pre></td></tr></table>
