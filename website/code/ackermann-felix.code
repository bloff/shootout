<span class="slc">//</span>
<span class="slc">// Contributed by John Skaller</span>
<span class="slc">//</span>
<span class="kwa">include</span> <span class="str">&quot;std&quot;</span><span class="sym">;</span>
n <span class="sym">:=</span> atoi<span class="sym">(</span>System<span class="sym">::</span>argv <span class="num">1</span><span class="sym">);</span>
<span class="kwa">fun</span> ack<span class="sym">(</span>x<span class="sym">:</span><span class="kwb">int</span><span class="sym">,</span>y<span class="sym">:</span><span class="kwb">int</span><span class="sym">):</span><span class="kwb">int</span> <span class="sym">=&gt;</span>
  <span class="kwa">if</span> x <span class="sym">==</span> <span class="num">0</span> <span class="kwa">then</span> y <span class="sym">+</span> <span class="num">1</span>
  <span class="kwa">elif</span> y <span class="sym">==</span> <span class="num">0</span> <span class="kwa">then</span> ack<span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
  <span class="kwa">else</span> ack<span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> ack<span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">-</span><span class="num">1</span><span class="sym">))</span>
  <span class="kwa">endif</span>
<span class="sym">;</span>

v <span class="sym">:=</span> ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span>n<span class="sym">);</span>
<span class="kwa">print</span> <span class="str">&quot;Ack(3,&quot;</span><span class="sym">;</span> <span class="kwa">print</span> n<span class="sym">;</span> <span class="kwa">print</span> <span class="str">&quot;): &quot;</span><span class="sym">;</span> <span class="kwa">print</span> v<span class="sym">;</span> <span class="kwa">endl</span><span class="sym">;</span>


