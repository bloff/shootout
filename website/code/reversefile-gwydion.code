<span class="kwb">module</span><span class="sym">:</span>         reversefile
<span class="kwb">synopsis</span><span class="sym">:</span>       implementation of <span class="str">&quot;Reverse A File&quot;</span> benchmark
<span class="kwb">author</span><span class="sym">:</span>         Andreas Bogk
<span class="kwb">copyright</span><span class="sym">:</span>      public <span class="kwa">domain</span>
<span class="kwa">use</span><span class="sym">-</span>libraries<span class="sym">:</span>  common<span class="sym">-</span>dylan<span class="sym">,</span> io
<span class="kwa">use</span><span class="sym">-</span>modules<span class="sym">:</span>    common<span class="sym">-</span>dylan<span class="sym">,</span> standard<span class="sym">-</span>io<span class="sym">,</span> streams

<span class="kwa">begin</span>
  <span class="kwa">let</span> lines <span class="sym">=</span> #<span class="sym">();</span>
  <span class="kwa">let</span> line <span class="sym">=</span> #f<span class="sym">;</span>
  <span class="kwa">while</span> <span class="sym">(</span>line <span class="sym">:=</span> read<span class="sym">-</span><span class="kwd">line</span><span class="sym">(*</span>standard<span class="sym">-</span>input<span class="sym">*,</span> on<span class="sym">-</span><span class="kwa">end</span><span class="sym">-</span>of<span class="sym">-</span>stream<span class="sym">:</span> #f<span class="sym">))</span>
    lines <span class="sym">:=</span> add<span class="sym">!(</span>lines<span class="sym">,</span> line<span class="sym">);</span> <span class="slc">// utilize the fact that lists are automatically built reversed</span>
  <span class="kwa">end while</span><span class="sym">;</span>
  <span class="kwd">do</span><span class="sym">(</span><span class="kwd">curry</span><span class="sym">(</span>write<span class="sym">-</span>line<span class="sym">, *</span>standard<span class="sym">-</span>output<span class="sym">*),</span> lines<span class="sym">);</span>
<span class="kwa">end</span><span class="sym">;</span>
