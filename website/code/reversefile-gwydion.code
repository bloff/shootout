<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
module:         reversefile
synopsis:       implementation of <B><FONT COLOR="#BC8F8F">&quot;Reverse A File&quot;</FONT></B> benchmark
author:         Andreas Bogk
copyright:      public <B><FONT COLOR="#5F9EA0">domain</FONT></B>
use-libraries:  common-dylan, io
use-modules:    common-dylan, standard-io, streams

<B><FONT COLOR="#A020F0">begin</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B> lines = #();
  <B><FONT COLOR="#A020F0">let</FONT></B> line = #f;
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">while </FONT></I></B></FONT></B>(line <B><FONT COLOR="#5F9EA0">:</FONT></B>= <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">read-line</FONT></I></B></FONT></B>(*standard-input*, <B><FONT COLOR="#5F9EA0">on-end-of-stream:</FONT></B> #f))
    lines <B><FONT COLOR="#5F9EA0">:</FONT></B>= <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">add!</FONT></I></B></FONT></B>(lines, line); <I><FONT COLOR="#B22222">// utilize the fact that lists are automatically built reversed
</FONT></I>  <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">while</FONT></B>;
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">do</FONT></I></B></FONT></B>(<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">curry</FONT></I></B></FONT></B>(write-line, *standard-output*), lines);
<B><FONT COLOR="#A020F0">end</FONT></B>;</pre></td></tr></table>
