<span class="line">    1 </span><span class="slc">-- -*- mode: eiffel -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: except-se.code,v 1.4 2004-11-13 07:41:34 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">-- from: Friedrich Dominicus
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="slc">-- &lt;LOC-OFF&gt;
</span><span class="line">    7 </span><span class="slc"></span><span class="kwa">indexing
</span><span class="line">    8 </span><span class="kwa"></span>        description<span class="sym">:</span> <span class="str">&quot;Eiffel implementation of the Exceptions &quot;</span>
<span class="line">    9 </span>                 <span class="str">&quot;in the shootout examples&quot;</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym"></span>        note<span class="sym">:</span> <span class="str">&quot;Tested with SmallEiffel and ISE-Eiffel&quot;</span>
<span class="line">   11 </span><span class="slc">-- &lt;LOC-ON&gt;
</span><span class="line">   12 </span><span class="slc"></span>
<span class="line">   13 </span><span class="kwa">class
</span><span class="line">   14 </span><span class="kwa"></span>        EXCEPT
<span class="line">   15 </span>
<span class="line">   16 </span><span class="kwa">inherit
</span><span class="line">   17 </span><span class="kwa"></span>    ARGUMENTS
<span class="line">   18 </span>creation
<span class="line">   19 </span>
<span class="line">   20 </span>        make
<span class="line">   21 </span>
<span class="line">   22 </span><span class="kwa">feature</span> <span class="slc">-- Initialization
</span><span class="line">   23 </span><span class="slc"></span>
<span class="line">   24 </span>    high<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>    low<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span>    high_exception<span class="sym">:</span> STRING <span class="kwa">is</span> <span class="str">&quot;high_exception&quot;</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>    low_exception<span class="sym">:</span> STRING <span class="kwa">is</span> <span class="str">&quot;low_exception&quot;</span><span class="sym">;
</span><span class="line">   29 </span><span class="sym">
</span><span class="line">   30 </span><span class="sym"></span>    run_n<span class="sym">,</span> outer_i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym">
</span><span class="line">   32 </span><span class="sym">
</span><span class="line">   33 </span><span class="sym"></span>    exc<span class="sym">:</span> EXCEPTIONS<span class="sym">;
</span><span class="line">   34 </span><span class="sym">
</span><span class="line">   35 </span><span class="sym"></span>        make <span class="kwa">is
</span><span class="line">   36 </span><span class="kwa">        do
</span><span class="line">   37 </span><span class="kwa">            create</span> exc<span class="sym">;
</span><span class="line">   38 </span><span class="sym"></span>            <span class="kwa">if</span> argument_count <span class="sym">/=</span> <span class="num">1</span> <span class="kwa">then
</span><span class="line">   39 </span><span class="kwa"></span>                io.put_string<span class="sym">(</span><span class="str">&quot;exception_test &lt;integer&gt;%N&quot;</span><span class="sym">);
</span><span class="line">   40 </span><span class="sym"></span>                exc.die<span class="sym">(</span><span class="num">1</span><span class="sym">);
</span><span class="line">   41 </span><span class="sym"></span>            <span class="kwa">end</span><span class="sym">;
</span><span class="line">   42 </span><span class="sym"></span>            <span class="kwa">if</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.is_integer <span class="kwa">then
</span><span class="line">   43 </span><span class="kwa"></span>                run_n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer<span class="sym">;
</span><span class="line">   44 </span><span class="sym"></span>            <span class="kwa">else
</span><span class="line">   45 </span><span class="kwa"></span>                io.put_string<span class="sym">(</span><span class="str">&quot;Argument wasn't an integer, giving up%N&quot;</span><span class="sym">);
</span><span class="line">   46 </span><span class="sym"></span>                exc.die<span class="sym">(</span><span class="num">1</span><span class="sym">);
</span><span class="line">   47 </span><span class="sym"></span>            <span class="kwa">end</span><span class="sym">;
</span><span class="line">   48 </span><span class="sym"></span>            outer_i <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   49 </span><span class="sym"></span>            some_fun<span class="sym">(</span>run_n<span class="sym">);
</span><span class="line">   50 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   51 </span><span class="sym">
</span><span class="line">   52 </span><span class="sym"></span>    some_fun<span class="sym">(</span>n<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">)</span> <span class="kwa">is
</span><span class="line">   53 </span><span class="kwa">        do
</span><span class="line">   54 </span><span class="kwa">            from
</span><span class="line">   55 </span><span class="kwa">            invariant
</span><span class="line">   56 </span><span class="kwa"></span>                i_in_bounds<span class="sym">:</span> outer_i <span class="sym">&gt;=</span> <span class="num">1</span> <span class="kwa">and then</span> outer_i <span class="sym">&lt;=</span> n <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   57 </span><span class="sym"></span>            variant
<span class="line">   58 </span>                really_decreasing<span class="sym">:</span> n <span class="sym">-</span> outer_i <span class="sym">+</span> <span class="num">1
</span><span class="line">   59 </span><span class="num"></span>            until outer_i <span class="sym">&gt;</span> run_n
<span class="line">   60 </span>            <span class="kwa">loop
</span><span class="line">   61 </span><span class="kwa"></span>                high_fun<span class="sym">(</span>outer_i<span class="sym">);
</span><span class="line">   62 </span><span class="sym"></span>                <span class="slc">-- an exception should be raised somwehere below
</span><span class="line">   63 </span><span class="slc"></span>                <span class="slc">-- `high_fun' in the call chain
</span><span class="line">   64 </span><span class="slc"></span>                exc.raise<span class="sym">(</span><span class="str">&quot;should not come here%N&quot;</span><span class="sym">)
</span><span class="line">   65 </span><span class="sym"></span>                <span class="slc">-- outer_i := outer_i + 1
</span><span class="line">   66 </span><span class="slc"></span>            <span class="kwa">end</span><span class="sym">;
</span><span class="line">   67 </span><span class="sym"></span>            io.put_string<span class="sym">(</span><span class="str">&quot;Exceptions: HI=&quot;</span><span class="sym">);
</span><span class="line">   68 </span><span class="sym"></span>            io.put_integer<span class="sym">(</span>high<span class="sym">);
</span><span class="line">   69 </span><span class="sym"></span>            io.put_string<span class="sym">(</span><span class="str">&quot; / LO=&quot;</span><span class="sym">);
</span><span class="line">   70 </span><span class="sym"></span>            io.put_integer<span class="sym">(</span>low<span class="sym">);
</span><span class="line">   71 </span><span class="sym"></span>            io.put_character<span class="sym">(</span><span class="str">'%N'</span><span class="sym">);
</span><span class="line">   72 </span><span class="sym"></span>        <span class="kwa">rescue
</span><span class="line">   73 </span><span class="kwa"></span>            outer_i <span class="sym">:=</span> outer_i <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   74 </span><span class="sym"></span>            <span class="kwa">retry</span><span class="sym">;
</span><span class="line">   75 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   76 </span><span class="sym">
</span><span class="line">   77 </span><span class="sym">
</span><span class="line">   78 </span><span class="sym"></span>    high_fun <span class="sym">(</span>i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">)</span> <span class="kwa">is
</span><span class="line">   79 </span><span class="kwa">        do
</span><span class="line">   80 </span><span class="kwa"></span>            low_fun<span class="sym">(</span>i<span class="sym">);
</span><span class="line">   81 </span><span class="sym"></span>        <span class="kwa">rescue
</span><span class="line">   82 </span><span class="kwa">            if</span> exc.developer_exception_name.is_equal<span class="sym">(</span>high_exception<span class="sym">)
</span><span class="line">   83 </span><span class="sym"></span><span class="kwa">then
</span><span class="line">   84 </span><span class="kwa"></span>                high <span class="sym">:=</span> high <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   85 </span><span class="sym"></span>            <span class="kwa">end
</span><span class="line">   86 </span><span class="kwa">        end</span><span class="sym">;
</span><span class="line">   87 </span><span class="sym">
</span><span class="line">   88 </span><span class="sym">
</span><span class="line">   89 </span><span class="sym"></span>    low_fun <span class="sym">(</span>i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">)</span> <span class="kwa">is
</span><span class="line">   90 </span><span class="kwa">        do
</span><span class="line">   91 </span><span class="kwa"></span>            <span class="slc">-- exc.catch(exc.Developer_exception);
</span><span class="line">   92 </span><span class="slc"></span>            blow_up<span class="sym">(</span>i<span class="sym">);
</span><span class="line">   93 </span><span class="sym"></span>        <span class="kwa">rescue
</span><span class="line">   94 </span><span class="kwa">            if</span> exc.developer_exception_name.is_equal<span class="sym">(</span>low_exception<span class="sym">)</span> <span class="kwa">then
</span><span class="line">   95 </span><span class="kwa"></span>                low <span class="sym">:=</span> low <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   96 </span><span class="sym"></span>            <span class="kwa">end
</span><span class="line">   97 </span><span class="kwa">        end</span><span class="sym">;
</span><span class="line">   98 </span><span class="sym">
</span><span class="line">   99 </span><span class="sym">
</span><span class="line">  100 </span><span class="sym"></span>    blow_up <span class="sym">(</span>i <span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">)</span> <span class="kwa">is
</span><span class="line">  101 </span><span class="kwa">        do
</span><span class="line">  102 </span><span class="kwa">            if</span> <span class="sym">((</span>i \\ <span class="num">2</span><span class="sym">) =</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">then
</span><span class="line">  103 </span><span class="kwa"></span>                exc.raise<span class="sym">(</span>low_exception<span class="sym">);
</span><span class="line">  104 </span><span class="sym"></span>            <span class="kwa">else
</span><span class="line">  105 </span><span class="kwa"></span>                exc.raise<span class="sym">(</span>high_exception<span class="sym">);
</span><span class="line">  106 </span><span class="sym"></span>            <span class="kwa">end</span><span class="sym">;
</span><span class="line">  107 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">  108 </span><span class="sym">
</span><span class="line">  109 </span><span class="sym"></span><span class="kwa">end</span> <span class="slc">-- class EXCEPT</span>
