<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- -*- mode: eiffel -*-
</FONT></I><I><FONT COLOR="#B22222">-- $Id: except-se.code,v 1.2 2004-11-08 08:15:13 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222">-- from: Friedrich Dominicus
</FONT></I>
<I><FONT COLOR="#B22222">-- &lt;LOC-OFF&gt;
</FONT></I><B><FONT COLOR="#A020F0">indexing</FONT></B>
<B><FONT COLOR="#5F9EA0">	description: </FONT></B><B><FONT COLOR="#BC8F8F">&quot;Eiffel implementation of the Exceptions &quot;</FONT></B>
                 <B><FONT COLOR="#BC8F8F">&quot;in the shootout examples&quot;</FONT></B>;
<B><FONT COLOR="#5F9EA0">	note: </FONT></B><B><FONT COLOR="#BC8F8F">&quot;Tested with SmallEiffel and ISE-Eiffel&quot;</FONT></B>
<I><FONT COLOR="#B22222">-- &lt;LOC-ON&gt;
</FONT></I>
<B><FONT COLOR="#A020F0">class</FONT></B>
	EXCEPT

<B><FONT COLOR="#A020F0">inherit</FONT></B> 
    <B><FONT COLOR="#228B22">ARGUMENTS</FONT></B>
<B><FONT COLOR="#A020F0">creation</FONT></B>

	make

<B><FONT COLOR="#A020F0">feature</FONT></B> <I><FONT COLOR="#B22222">-- Initialization
</FONT></I>
<B><FONT COLOR="#5F9EA0">    high: </FONT></B><B><FONT COLOR="#228B22">INTEGER</FONT></B>;
<B><FONT COLOR="#5F9EA0">    low: </FONT></B><B><FONT COLOR="#228B22">INTEGER</FONT></B>;

<B><FONT COLOR="#5F9EA0">    high_exception: </FONT></B><B><FONT COLOR="#228B22">STRING</FONT></B> <B><FONT COLOR="#A020F0">is</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;high_exception&quot;</FONT></B>;
<B><FONT COLOR="#5F9EA0">    low_exception: </FONT></B><B><FONT COLOR="#228B22">STRING</FONT></B> <B><FONT COLOR="#A020F0">is</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;low_exception&quot;</FONT></B>;

<B><FONT COLOR="#5F9EA0">    run_n, outer_i: </FONT></B><B><FONT COLOR="#228B22">INTEGER</FONT></B>;
    

<B><FONT COLOR="#5F9EA0">    exc: </FONT></B><B><FONT COLOR="#228B22">EXCEPTIONS</FONT></B>;
    
<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">	make</FONT></I></B></FONT></B> <B><FONT COLOR="#A020F0">is</FONT></B>
        <B><FONT COLOR="#A020F0">do</FONT></B>
            <B><FONT COLOR="#A020F0">create</FONT></B> exc;
            <B><FONT COLOR="#A020F0">if</FONT></B> argument_count <B><FONT COLOR="#5F9EA0">/=</FONT></B> 1 <B><FONT COLOR="#A020F0">then</FONT></B>
                io.put_string(<B><FONT COLOR="#BC8F8F">&quot;exception_test &lt;integer&gt;%N&quot;</FONT></B>);
                exc.die(1);
            <B><FONT COLOR="#A020F0">end</FONT></B>;
            <B><FONT COLOR="#A020F0">if</FONT></B> argument(1).is_integer <B><FONT COLOR="#A020F0">then</FONT></B>
                run_n <B><FONT COLOR="#5F9EA0">:=</FONT></B> argument(1).to_integer;
            <B><FONT COLOR="#A020F0">else</FONT></B>
                io.put_string(<B><FONT COLOR="#BC8F8F">&quot;Argument wasn't an integer, giving up%N&quot;</FONT></B>);
                exc.die(1);
            <B><FONT COLOR="#A020F0">end</FONT></B>;
            outer_i <B><FONT COLOR="#5F9EA0">:=</FONT></B> 1;
            some_fun(run_n);
        <B><FONT COLOR="#A020F0">end</FONT></B>;
    
<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">    some_fun</FONT></I></B></FONT></B>(n<B><FONT COLOR="#228B22">: INTEGER</FONT></B>)<B><FONT COLOR="#228B22"></FONT></B><B><FONT COLOR="#A020F0"> is</FONT></B>
        <B><FONT COLOR="#A020F0">do</FONT></B>
            <B><FONT COLOR="#A020F0">from</FONT></B> 
            <B><FONT COLOR="#A020F0">invariant</FONT></B>
<B><FONT COLOR="#5F9EA0">                i_in_bounds: </FONT></B>outer_i <B><FONT COLOR="#5F9EA0">&gt;=</FONT></B> 1 <B><FONT COLOR="#A020F0">and</FONT></B> <B><FONT COLOR="#A020F0">then</FONT></B> outer_i <B><FONT COLOR="#5F9EA0">&lt;=</FONT></B> n + 1;
            variant
<B><FONT COLOR="#5F9EA0">                really_decreasing: </FONT></B>n - outer_i + 1
            <B><FONT COLOR="#A020F0">until</FONT></B> outer_i &gt; run_n
            <B><FONT COLOR="#A020F0">loop</FONT></B>
                high_fun(outer_i);
                <I><FONT COLOR="#B22222">-- an exception should be raised somwehere below
</FONT></I>                <I><FONT COLOR="#B22222">-- `high_fun' in the call chain
</FONT></I>                exc.raise(<B><FONT COLOR="#BC8F8F">&quot;should not come here%N&quot;</FONT></B>)
                <I><FONT COLOR="#B22222">-- outer_i := outer_i + 1
</FONT></I>            <B><FONT COLOR="#A020F0">end</FONT></B>;
            io.put_string(<B><FONT COLOR="#BC8F8F">&quot;Exceptions: HI=&quot;</FONT></B>);
            io.put_integer(high);
            io.put_string(<B><FONT COLOR="#BC8F8F">&quot; / LO=&quot;</FONT></B>);
            io.put_integer(low);
            io.put_character('%N');
        <B><FONT COLOR="#A020F0">rescue</FONT></B>
            outer_i <B><FONT COLOR="#5F9EA0">:=</FONT></B> outer_i + 1;
            <B><FONT COLOR="#A020F0">retry</FONT></B>;
        <B><FONT COLOR="#A020F0">end</FONT></B>;
    
    
<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">    high_fun </FONT></I></B></FONT></B>(i<B><FONT COLOR="#228B22">: INTEGER</FONT></B>)<B><FONT COLOR="#228B22"></FONT></B><B><FONT COLOR="#A020F0"> is</FONT></B>
        <B><FONT COLOR="#A020F0">do</FONT></B>
            low_fun(i);
        <B><FONT COLOR="#A020F0">rescue</FONT></B>
            <B><FONT COLOR="#A020F0">if</FONT></B> exc.developer_exception_name.is_equal(high_exception)
<B><FONT COLOR="#A020F0">then</FONT></B>
                high <B><FONT COLOR="#5F9EA0">:=</FONT></B> high + 1;
            <B><FONT COLOR="#A020F0">end</FONT></B>
        <B><FONT COLOR="#A020F0">end</FONT></B>;
    
    
<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">    low_fun </FONT></I></B></FONT></B>(i<B><FONT COLOR="#228B22">: INTEGER</FONT></B>)<B><FONT COLOR="#228B22"></FONT></B><B><FONT COLOR="#A020F0"> is</FONT></B>
        <B><FONT COLOR="#A020F0">do</FONT></B>
            <I><FONT COLOR="#B22222">-- exc.catch(exc.Developer_exception);
</FONT></I>            blow_up(i);
        <B><FONT COLOR="#A020F0">rescue</FONT></B>
            <B><FONT COLOR="#A020F0">if</FONT></B> exc.developer_exception_name.is_equal(low_exception) <B><FONT COLOR="#A020F0">then</FONT></B>
                low <B><FONT COLOR="#5F9EA0">:=</FONT></B> low + 1;
            <B><FONT COLOR="#A020F0">end</FONT></B>
        <B><FONT COLOR="#A020F0">end</FONT></B>;
    

<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">    blow_up </FONT></I></B></FONT></B>(i <B><FONT COLOR="#228B22">: INTEGER</FONT></B>)<B><FONT COLOR="#228B22"></FONT></B><B><FONT COLOR="#A020F0"> is</FONT></B>
        <B><FONT COLOR="#A020F0">do</FONT></B>
            <B><FONT COLOR="#A020F0">if</FONT></B> ((i \\ 2) <B><FONT COLOR="#5F9EA0">=</FONT></B> 0) <B><FONT COLOR="#A020F0">then</FONT></B>
                exc.raise(low_exception);
            <B><FONT COLOR="#A020F0">else</FONT></B>
                exc.raise(high_exception);
            <B><FONT COLOR="#A020F0">end</FONT></B>;
        <B><FONT COLOR="#A020F0">end</FONT></B>;

<B><FONT COLOR="#A020F0">end</FONT></B> <I><FONT COLOR="#B22222">-- class EXCEPT
</FONT></I></pre></td></tr></table>
