#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="sym">-</span>e main <span class="sym">-</span>s
<span class="sym">!</span>#

<span class="slc">;;; $Id: spellcheck-guile.code,v 1.6 2005-11-06 23:11:40 bfulgham Exp $</span>
<span class="slc">;;; http://www.bagley.org/~doug/shootout/</span>

<span class="sym">(</span>use<span class="sym">-</span>modules <span class="sym">(</span>ice<span class="sym">-</span><span class="num">9</span> format<span class="sym">))</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))</span>
	<span class="sym">(</span>dict <span class="sym">(</span>make<span class="sym">-</span>hash<span class="sym">-</span>table <span class="num">10000</span><span class="sym">)))</span>
    <span class="sym">(</span>with<span class="sym">-</span>input<span class="sym">-</span>from<span class="sym">-</span>file <span class="str">&quot;Usr.Dict.Words&quot;</span>
      <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">()</span>
	<span class="sym">(</span>let loop <span class="sym">((</span><span class="kwa">line</span> <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">)))</span>
	  <span class="sym">(</span><span class="kwa">cond</span> <span class="sym">((</span>eof<span class="sym">-</span>object? <span class="kwa">line</span><span class="sym">)</span> #f<span class="sym">)</span>
		<span class="sym">(</span>else
		 <span class="sym">(</span>hash<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> dict <span class="kwa">line</span> #t<span class="sym">)</span>
		 <span class="sym">(</span>loop <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">)))))))</span>
    <span class="sym">(</span>let loop <span class="sym">((</span>word <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">)))</span>
      <span class="sym">(</span><span class="kwa">cond</span> <span class="sym">((</span>eof<span class="sym">-</span>object? word<span class="sym">)</span> #f<span class="sym">)</span>
	    <span class="sym">(</span>else
	     <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">not</span> <span class="sym">(</span>hash<span class="sym">-</span>ref dict word<span class="sym">))</span>
		 <span class="sym">(</span>display <span class="sym">(</span>format <span class="str">&quot;~A</span><span class="esc">\n</span><span class="str">&quot;</span> word<span class="sym">)))</span>
	     <span class="sym">(</span>loop <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">)))))))</span>

