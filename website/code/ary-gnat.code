<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: ary-gnat.code,v 1.1 2004-11-02 08:52:29 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">-- Ada 95 code by C.C.
</FONT></I><I><FONT COLOR="#B22222">-- Revised with suggestions by James S. Rogers
</FONT></I>
<B><FONT COLOR="#A020F0">with</FONT></B> Text_IO, Ada.Command_Line, Ada.Strings.Fixed;

<B><FONT COLOR="#A020F0">procedure</FONT></B> Ary <B><FONT COLOR="#A020F0">is</FONT></B>
   <B><FONT COLOR="#A020F0">function</FONT></B> L_Trim (Source : String; Side : Ada.Strings.Trim_End :=
               Ada.Strings.Left) <B><FONT COLOR="#A020F0">return</FONT></B> String <B><FONT COLOR="#A020F0">renames</FONT></B> Ada.Strings.Fixed.Trim;
   N        : Positive := 1;
<B><FONT COLOR="#A020F0">begin</FONT></B>
   <B><FONT COLOR="#A020F0">begin</FONT></B>
      N := Positive'Value (Ada.Command_Line.Argument (1));
   <B><FONT COLOR="#A020F0">exception</FONT></B>
      <B><FONT COLOR="#A020F0">when</FONT></B> Constraint_Error =&gt; <B><FONT COLOR="#A020F0">null</FONT></B>;
   <B><FONT COLOR="#A020F0">end</FONT></B>;
   <B><FONT COLOR="#A020F0">declare</FONT></B>
      <B><FONT COLOR="#A020F0">pragma</FONT></B> suppress (All_Checks);
      <B><FONT COLOR="#A020F0">type</FONT></B> Vect <B><FONT COLOR="#A020F0">is</FONT></B> <B><FONT COLOR="#A020F0">array</FONT></B> (1 .. N) <B><FONT COLOR="#A020F0">of</FONT></B> Integer;
      X : Vect;
      Y : Vect := (Others =&gt; 0);
   <B><FONT COLOR="#A020F0">begin</FONT></B>
      <B><FONT COLOR="#A020F0">for</FONT></B> K <B><FONT COLOR="#A020F0">in</FONT></B> Vect'Range <B><FONT COLOR="#A020F0">loop</FONT></B>
         X (K) := K;
      <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">loop</FONT></B>;

      <B><FONT COLOR="#A020F0">for</FONT></B> Iter <B><FONT COLOR="#A020F0">in</FONT></B> 1 .. 1000 <B><FONT COLOR="#A020F0">loop</FONT></B>
         <B><FONT COLOR="#A020F0">for</FONT></B> K <B><FONT COLOR="#A020F0">in</FONT></B> <B><FONT COLOR="#A020F0">reverse</FONT></B> Vect'Range <B><FONT COLOR="#A020F0">loop</FONT></B>
	    Y(K) := Y(K) + X(K);
         <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">loop</FONT></B>;
      <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">loop</FONT></B>;
      Text_IO.Put_Line (L_Trim (Integer'Image (Y (1))) &amp;
               Integer'Image (Y (N)));
   <B><FONT COLOR="#A020F0">end</FONT></B>;
<B><FONT COLOR="#A020F0">end</FONT></B> Ary;</pre></td></tr></table>
