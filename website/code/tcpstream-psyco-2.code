<span class="slc">#!/usr/bin/python -OO</span>
<span class="slc"># The Computer Language Shootout Benchmarks</span>
<span class="slc"># http://shootout.alioth.debian.org</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Kevin Carson</span>

<span class="kwc">from</span> sys <span class="kwc">import</span> argv<span class="sym">,</span> stdout
<span class="kwc">from</span> socket <span class="kwc">import</span> socket<span class="sym">,</span> gethostbyname<span class="sym">,</span> \
    AF_INET<span class="sym">,</span> SOCK_STREAM<span class="sym">,</span> SOL_SOCKET<span class="sym">,</span> SO_REUSEADDR
<span class="kwc">from</span> os <span class="kwc">import</span> fork<span class="sym">,</span> wait<span class="sym">,</span> _exit
<span class="kwc">import</span> psyco

psyco<span class="sym">.</span><span class="kwd">full</span><span class="sym">()</span>


<span class="kwb">def</span> <span class="kwd">server</span><span class="sym">(</span>msg_count<span class="sym">,</span> msg_mult<span class="sym">,</span> reply_size<span class="sym">,</span> request_size<span class="sym">) :</span>
    s <span class="sym">=</span> <span class="kwd">socket</span><span class="sym">(</span>AF_INET<span class="sym">,</span> SOCK_STREAM<span class="sym">)</span>
    s<span class="sym">.</span><span class="kwd">setsockopt</span><span class="sym">(</span>SOL_SOCKET<span class="sym">,</span> SO_REUSEADDR<span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
    s<span class="sym">.</span><span class="kwd">bind</span><span class="sym">((</span><span class="kwd">gethostbyname</span><span class="sym">(</span><span class="str">'localhost'</span><span class="sym">),</span> <span class="num">11000</span><span class="sym">))</span>
    s<span class="sym">.</span><span class="kwd">listen</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
    sc<span class="sym">,</span> addr <span class="sym">=</span> s<span class="sym">.</span><span class="kwd">accept</span><span class="sym">()</span>
    reply <span class="sym">=</span> <span class="str">&quot; &quot;</span> <span class="sym">*</span> reply_size
    screcv <span class="sym">=</span> sc<span class="sym">.</span>recv
    scsendall <span class="sym">=</span> sc<span class="sym">.</span>sendall

    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>msg_count <span class="sym">*</span> msg_mult<span class="sym">) :</span>
        request <span class="sym">=</span> <span class="kwd">screcv</span><span class="sym">(</span>request_size<span class="sym">)</span>
        <span class="kwd">scsendall</span><span class="sym">(</span>reply<span class="sym">)</span>

    sc<span class="sym">.</span><span class="kwd">close</span><span class="sym">()</span>
    s<span class="sym">.</span><span class="kwd">close</span><span class="sym">()</span>


<span class="kwb">def</span> <span class="kwd">client</span><span class="sym">(</span>msg_count<span class="sym">,</span> msg_mult<span class="sym">,</span> reply_size<span class="sym">,</span> request_size<span class="sym">) :</span>
    s <span class="sym">=</span> <span class="kwd">socket</span><span class="sym">(</span>AF_INET<span class="sym">,</span> SOCK_STREAM<span class="sym">)</span>
    <span class="kwb">while</span> s<span class="sym">.</span><span class="kwd">connect_ex</span><span class="sym">((</span><span class="kwd">gethostbyname</span><span class="sym">(</span><span class="str">'localhost'</span><span class="sym">),</span> <span class="num">11000</span><span class="sym">)) !=</span> <span class="num">0</span> <span class="sym">:</span> <span class="kwb">pass</span>
    request <span class="sym">=</span> <span class="str">&quot; &quot;</span> <span class="sym">*</span> request_size
    srecv <span class="sym">=</span> s<span class="sym">.</span>recv
    ssend <span class="sym">=</span> s<span class="sym">.</span>send

    replies <span class="sym">=</span> bytes <span class="sym">=</span> <span class="num">0</span>
    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>msg_count <span class="sym">*</span> msg_mult<span class="sym">) :</span>
        <span class="kwd">ssend</span><span class="sym">(</span>request<span class="sym">)</span>
        byte_count <span class="sym">=</span> <span class="num">0</span>
        <span class="kwb">while</span> byte_count <span class="sym">&lt;</span> reply_size <span class="sym">:</span>
            reply <span class="sym">=</span> <span class="kwd">srecv</span><span class="sym">(</span>reply_size<span class="sym">)</span>
            byte_count <span class="sym">+=</span> <span class="kwa">len</span><span class="sym">(</span>reply<span class="sym">)</span>
        bytes <span class="sym">+=</span> byte_count
        replies <span class="sym">+=</span> <span class="num">1</span>

    s<span class="sym">.</span><span class="kwd">close</span><span class="sym">()</span>
    <span class="kwb">print</span> <span class="str">&quot;replies: %d</span><span class="esc">\t</span><span class="str">bytes: %d&quot;</span> <span class="sym">% (</span>replies<span class="sym">,</span> bytes<span class="sym">)</span>
    stdout<span class="sym">.</span><span class="kwd">flush</span><span class="sym">()</span>


M <span class="sym">=</span> <span class="num">1</span>
reply_size <span class="sym">=</span> <span class="num">409600</span>
request_size <span class="sym">=</span> <span class="num">64</span>

N <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>

child_pid <span class="sym">=</span> <span class="kwd">fork</span><span class="sym">()</span>

<span class="kwb">if</span> child_pid <span class="sym">==</span> <span class="num">0</span> <span class="sym">:</span>
    <span class="kwd">client</span><span class="sym">(</span>N<span class="sym">,</span> M<span class="sym">,</span> reply_size<span class="sym">,</span> request_size<span class="sym">)</span>
    <span class="kwd">_exit</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>

<span class="kwb">else</span> <span class="sym">:</span>
    <span class="kwd">server</span><span class="sym">(</span>N<span class="sym">,</span> M<span class="sym">,</span> reply_size<span class="sym">,</span> request_size<span class="sym">)</span>
    <span class="kwd">wait</span><span class="sym">()</span>
