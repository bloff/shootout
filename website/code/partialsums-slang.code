<span class="dir">#!/usr/bin/env slsh</span>
<span class="sym">%</span> The Computer Language Shootout Benchmarks
<span class="sym">%</span> http<span class="sym">:</span><span class="slc">//shootout.alioth.debian.org/</span>
<span class="sym">%</span>
<span class="sym">%</span> contributed by John E<span class="sym">.</span> Davis

define <span class="kwd">slsh_main</span> <span class="sym">()</span>
<span class="sym">{</span>
   variable n <span class="sym">=</span> <span class="num">25000</span><span class="sym">;</span> <span class="kwa">if</span> <span class="sym">(</span>__argc <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="kwd">integer</span> <span class="sym">(</span>__argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);</span>
   variable s0<span class="sym">=</span><span class="num">1.0</span><span class="sym">,</span>s1<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span>s2<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span>s3<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span>s4<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span>s5<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span>s6<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span>s7<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span>s8<span class="sym">=</span><span class="num">0.0</span><span class="sym">;</span>
   variable k <span class="sym">=</span> <span class="num">1</span><span class="sym">,</span> dn <span class="sym">=</span> <span class="num">4096</span><span class="sym">;</span>
   variable sgn <span class="sym">=</span> <span class="num">1</span><span class="sym">[</span>Int_Type<span class="sym">[</span>dn<span class="sym">]];</span> sgn<span class="sym">[[</span><span class="num">1</span><span class="sym">::</span><span class="num">2</span><span class="sym">]] = -</span><span class="num">1</span><span class="sym">;</span>
   <span class="kwa">while</span> <span class="sym">(</span>k <span class="sym">&lt;=</span> n<span class="sym">)</span>
     <span class="sym">{</span>
	variable k1 <span class="sym">=</span> k <span class="sym">+</span> dn<span class="sym">;</span>
	<span class="kwa">if</span> <span class="sym">(</span>k1 <span class="sym">&gt;</span> n<span class="sym">)</span>
	  <span class="sym">{</span>
	     k1 <span class="sym">=</span> n <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
	     sgn <span class="sym">=</span> sgn<span class="sym">[[:</span>n<span class="sym">-</span>k<span class="sym">]];</span>
	  <span class="sym">}</span>
	variable kd <span class="sym">= [</span>k<span class="sym">:</span>k1<span class="sym">-</span><span class="num">1</span><span class="sym">]*</span><span class="num">1.0</span><span class="sym">,</span> kd2 <span class="sym">=</span> kd<span class="sym">*</span>kd<span class="sym">,</span> kd3 <span class="sym">=</span> kd<span class="sym">*</span>kd2<span class="sym">;</span>
	s0 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">((</span><span class="num">2.0</span><span class="sym">/</span><span class="num">3.0</span><span class="sym">)</span>^kd<span class="sym">);</span>
	s1 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span><span class="num">1.0</span><span class="sym">/</span><span class="kwd">sqrt</span><span class="sym">(</span>kd<span class="sym">));</span>
	s2 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span><span class="num">1.0</span><span class="sym">/(</span>kd2<span class="sym">+</span>kd<span class="sym">));</span>
	variable sk <span class="sym">=</span> <span class="kwd">sin</span><span class="sym">(</span>kd<span class="sym">);</span>
	s3 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span><span class="num">1.0</span><span class="sym">/(</span>kd3<span class="sym">*</span>sk<span class="sym">*</span>sk<span class="sym">));</span>
	variable ck <span class="sym">=</span> <span class="kwd">cos</span><span class="sym">(</span>kd<span class="sym">);</span>
	s4 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span><span class="num">1.0</span><span class="sym">/(</span>kd3<span class="sym">*</span>ck<span class="sym">*</span>ck<span class="sym">));</span>
	s5 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span><span class="num">1.0</span><span class="sym">/</span>kd<span class="sym">);</span>
	s6 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span><span class="num">1.0</span><span class="sym">/</span>kd2<span class="sym">);</span>
	s7 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span>sgn<span class="sym">/</span>kd<span class="sym">);</span>
	s8 <span class="sym">+=</span> <span class="kwd">sum</span> <span class="sym">(</span>sgn<span class="sym">/(</span><span class="num">2.0</span><span class="sym">*</span><span class="kwd">__tmp</span><span class="sym">(</span>kd<span class="sym">)-</span><span class="num">1.0</span><span class="sym">));</span>
	k <span class="sym">=</span> k1<span class="sym">;</span>
     <span class="sym">}</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">(2/3)^k</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s0<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">k^-0.5</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s1<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">1/k(k+1)</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s2<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Flint Hills</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s3<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Cookson Hills</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s4<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Harmonic</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s5<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Riemann Zeta</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s6<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Alternating Harmonic</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s7<span class="sym">);</span>
   <span class="sym">() =</span> <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Gregory</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s8<span class="sym">);</span>
<span class="sym">}</span>

