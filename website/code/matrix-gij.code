<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">// $Id: matrix-gij.code,v 1.2 2004-11-08 08:15:15 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">// http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222">// modified to use a little less memory by Thomas Holenstein
</FONT></I>
<B><FONT COLOR="#A020F0">import</FONT></B> java.io.*;
<B><FONT COLOR="#A020F0">import</FONT></B> java.util.*;

<B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">class</FONT></B> matrix {
    <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> SIZE = 30;

    <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> main(String args[]) {
	<B><FONT COLOR="#A020F0">int</FONT></B> n = Integer.parseInt(args[0]);
	<B><FONT COLOR="#A020F0">int</FONT></B> m1[][] = mkmatrix(SIZE, SIZE);
	<B><FONT COLOR="#A020F0">int</FONT></B> m2[][] = mkmatrix(SIZE, SIZE);
	<B><FONT COLOR="#A020F0">int</FONT></B> mm[][] = <B><FONT COLOR="#A020F0">new</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B>[SIZE][SIZE];
	<B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> i=0; i&lt;n; i++) {
	    mmult(SIZE, SIZE, m1, m2, mm);
	}
	System.out.print(mm[0][0]);
	System.out.print(<B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>);
	System.out.print(mm[2][3]);
	System.out.print(<B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>);
	System.out.print(mm[3][2]);
	System.out.print(<B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>);
	System.out.println(mm[4][4]);
    }

    <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B>[][] mkmatrix (<B><FONT COLOR="#A020F0">int</FONT></B> rows, <B><FONT COLOR="#A020F0">int</FONT></B> cols) {
	<B><FONT COLOR="#A020F0">int</FONT></B> count = 1;
	<B><FONT COLOR="#A020F0">int</FONT></B> m[][] = <B><FONT COLOR="#A020F0">new</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B>[rows][cols];
	<B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> i=0; i&lt;rows; i++) {
	    <B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> j=0; j&lt;cols; j++) {
		m[i][j] = count++;
	    }
	}
	<B><FONT COLOR="#A020F0">return</FONT></B>(m);
    }

    <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> mmult (<B><FONT COLOR="#A020F0">int</FONT></B> rows, <B><FONT COLOR="#A020F0">int</FONT></B> cols, 
	                      <B><FONT COLOR="#A020F0">int</FONT></B>[][] m1, <B><FONT COLOR="#A020F0">int</FONT></B>[][] m2, <B><FONT COLOR="#A020F0">int</FONT></B>[][] m3) {
	<B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> i=0; i&lt;rows; i++) {
	    <B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> j=0; j&lt;cols; j++) {
		<B><FONT COLOR="#A020F0">int</FONT></B> val = 0;
		<B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> k=0; k&lt;cols; k++) {
		    val += m1[i][k] * m2[k][j];
		}
		m3[i][j] = val;
	    }
	}
    }
}</pre></td></tr></table>
