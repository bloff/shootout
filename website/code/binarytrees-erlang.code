<span class="slc">% The Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% contributed by Isaac Gouy (Erlang novice)</span>

<span class="sym">-</span><span class="kwd">module</span><span class="sym">(</span>binarytrees<span class="sym">)</span>.
<span class="sym">-</span><span class="kwd">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

<span class="sym">-</span><span class="kwd">define</span><span class="sym">(</span>Min<span class="sym">,</span><span class="num">4</span><span class="sym">)</span>.

<span class="kwd">main</span><span class="sym">([</span>Arg<span class="sym">]) -&gt;</span>
   N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span>Arg<span class="sym">),</span>
   Max <span class="sym">=</span> lists<span class="sym">:</span><span class="kwd">max</span><span class="sym">([</span>?Min<span class="sym">+</span><span class="num">2</span><span class="sym">,</span>N<span class="sym">]),</span>

   Stretch <span class="sym">=</span> Max <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span>
   io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;stretch tree of depth ~w</span><span class="esc">\t</span> <span class="str">check: ~w~n&quot;</span><span class="sym">,</span>
      <span class="sym">[</span> Stretch<span class="sym">,</span> <span class="kwd">itemCheck</span><span class="sym">(</span><span class="kwd">bottomUp</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>Stretch<span class="sym">)) ]),</span>

   LongLivedTree <span class="sym">=</span> <span class="kwd">bottomUp</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>Max<span class="sym">),</span>
   <span class="kwd">depthLoop</span><span class="sym">(</span>?Min<span class="sym">,</span>Max<span class="sym">),</span>

   io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;long lived tree of depth ~w</span><span class="esc">\t</span> <span class="str">check: ~w~n&quot;</span><span class="sym">,</span>
      <span class="sym">[</span> Max<span class="sym">,</span> <span class="kwd">itemCheck</span><span class="sym">(</span>LongLivedTree<span class="sym">) ]),</span>

   <span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.


<span class="kwd">depthLoop</span><span class="sym">(</span>D<span class="sym">,</span>M<span class="sym">)</span> <span class="kwa">when</span> D <span class="sym">&gt;</span> M <span class="sym">-&gt;</span> ok<span class="sym">;</span>
<span class="kwd">depthLoop</span><span class="sym">(</span>D<span class="sym">,</span>M<span class="sym">) -&gt;</span>
   N <span class="sym">=</span> <span class="num">1</span> <span class="kwd">bsl</span> <span class="sym">(</span>M<span class="sym">-</span>D <span class="sym">+</span> ?Min<span class="sym">),</span>
   io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;~w</span><span class="esc">\t</span> <span class="str">trees of depth ~w</span><span class="esc">\t</span> <span class="str">check: ~w~n&quot;</span><span class="sym">,</span>
      <span class="sym">[</span> <span class="num">2</span><span class="sym">*</span>N<span class="sym">,</span> D<span class="sym">,</span> <span class="kwd">sumLoop</span><span class="sym">(</span>N<span class="sym">,</span>D<span class="sym">,</span><span class="num">0</span><span class="sym">) ]),</span>
   <span class="kwd">depthLoop</span> <span class="sym">(</span>D<span class="sym">+</span><span class="num">2</span><span class="sym">,</span>M<span class="sym">)</span>.

<span class="kwd">sumLoop</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>_<span class="sym">,</span>Sum<span class="sym">) -&gt;</span> Sum<span class="sym">;</span>
<span class="kwd">sumLoop</span><span class="sym">(</span>N<span class="sym">,</span>D<span class="sym">,</span>Sum<span class="sym">) -&gt;</span>
   <span class="kwd">sumLoop</span><span class="sym">(</span>N<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>D<span class="sym">,</span> Sum <span class="sym">+</span> <span class="kwd">itemCheck</span><span class="sym">(</span><span class="kwd">bottomUp</span><span class="sym">(</span>N<span class="sym">,</span>D<span class="sym">)) +</span> <span class="kwd">itemCheck</span><span class="sym">(</span><span class="kwd">bottomUp</span><span class="sym">(-</span><span class="num">1</span><span class="sym">*</span>N<span class="sym">,</span>D<span class="sym">)))</span>.

<span class="kwd">bottomUp</span><span class="sym">(</span>I<span class="sym">,</span><span class="num">0</span><span class="sym">) -&gt; {</span>I<span class="sym">,</span> nil<span class="sym">,</span> nil<span class="sym">};</span>
<span class="kwd">bottomUp</span><span class="sym">(</span>I<span class="sym">,</span>D<span class="sym">) -&gt; {</span>I<span class="sym">,</span> <span class="kwd">bottomUp</span><span class="sym">(</span><span class="num">2</span><span class="sym">*</span>I<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>D<span class="sym">-</span><span class="num">1</span><span class="sym">),</span> <span class="kwd">bottomUp</span><span class="sym">(</span><span class="num">2</span><span class="sym">*</span>I<span class="sym">,</span>D<span class="sym">-</span><span class="num">1</span><span class="sym">)}</span>.

<span class="kwd">itemCheck</span><span class="sym">(</span>nil<span class="sym">) -&gt;</span> <span class="num">0</span><span class="sym">;</span>
<span class="kwd">itemCheck</span><span class="sym">({</span>I<span class="sym">,</span>Left<span class="sym">,</span>Right<span class="sym">}) -&gt;</span>
   I <span class="sym">+</span> <span class="kwd">itemCheck</span><span class="sym">(</span>Left<span class="sym">) -</span> <span class="kwd">itemCheck</span><span class="sym">(</span>Right<span class="sym">)</span>.
