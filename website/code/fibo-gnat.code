<span class="line">    1 </span><span class="slc">-- $Id: fibo-gnat.code,v 1.3 2004-11-11 07:13:57 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- http://dada.perl.it/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- Ada 95 code by C.C.
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">with</span> Ada.Command_Line<span class="sym">,</span> Ada.Text_IO<span class="sym">,</span> Ada.Integer_Text_IO<span class="sym">;
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">procedure</span> Fibo <span class="kwa">is
</span><span class="line">    8 </span><span class="kwa">   function</span> Fib <span class="sym">(</span>N <span class="sym">:</span> <span class="kwb">Natural</span><span class="sym">)</span> <span class="kwa">return</span> <span class="kwb">Integer</span> <span class="kwa">is
</span><span class="line">    9 </span><span class="kwa"></span>      L        <span class="sym">:</span> <span class="kwb">Integer</span> <span class="sym">:=</span> N <span class="num">- 1</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym"></span>      <span class="kwa">pragma</span> Suppress <span class="sym">(</span>Range_Check<span class="sym">,</span> On <span class="sym">=&gt;</span> L<span class="sym">);
</span><span class="line">   11 </span><span class="sym"></span>   <span class="kwa">begin
</span><span class="line">   12 </span><span class="kwa">      if</span> L <span class="sym">&lt;=</span> <span class="num">0</span> <span class="kwa">then
</span><span class="line">   13 </span><span class="kwa">         return</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym"></span>      <span class="kwa">else
</span><span class="line">   15 </span><span class="kwa">         return</span> Fib <span class="sym">(</span>N <span class="num">- 2</span><span class="sym">) +</span> Fib <span class="sym">(</span>L<span class="sym">);
</span><span class="line">   16 </span><span class="sym"></span>      <span class="kwa">end if</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>   <span class="kwa">end</span> Fib<span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>   N        <span class="sym">:</span> <span class="kwb">Natural</span> <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   20 </span><span class="kwa">   begin
</span><span class="line">   21 </span><span class="kwa"></span>      N <span class="sym">:=</span> <span class="kwb">Natural</span><span class="sym">'</span>Value <span class="sym">(</span>Ada.Command_Line.Argument <span class="sym">(</span><span class="num">1</span><span class="sym">));
</span><span class="line">   22 </span><span class="sym"></span>   <span class="kwa">exception
</span><span class="line">   23 </span><span class="kwa">      when</span> Constraint_Error <span class="sym">=&gt;</span> <span class="kwa">null</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym"></span>   <span class="kwa">end</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>   Ada.Integer_Text_IO.Put <span class="sym">(</span>Item <span class="sym">=&gt;</span> Fib <span class="sym">(</span>N<span class="sym">),</span> Width <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">);
</span><span class="line">   26 </span><span class="sym"></span>   Ada.Text_IO.New_Line<span class="sym">;
</span><span class="line">   27 </span><span class="sym"></span><span class="kwa">end</span> Fibo<span class="sym">;</span>
