<span class="dir">#!/usr/bin/pike</span>
<span class="slc">// -*- mode: pike -*-</span>
<span class="slc">// $Id: wc-pike.code,v 1.7 2005-12-31 16:46:07 bfulgham Exp $</span>
<span class="slc">// http://www.bagley.org/~doug/shootout/</span>
<span class="slc">// from Per Hedbor, optimized by David Hedbor</span>

enum State <span class="sym">{</span> Outside<span class="sym">,</span> Inside <span class="sym">};</span>

<span class="kwb">void</span> <span class="kwd">main</span><span class="sym">() {</span>
    <span class="kwb">int</span> nl <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nw <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nc <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> <span class="slc">// line, word and character counters</span>
    <span class="kwb">int</span> sl<span class="sym">;</span> <span class="slc">// Size of input</span>

    State state <span class="sym">=</span> Outside<span class="sym">;</span> <span class="slc">// Inside or outside word</span>

    <span class="kwb">string</span> buf<span class="sym">;</span>
    <span class="kwb">string</span> rest<span class="sym">=</span><span class="str">&quot;&quot;</span><span class="sym">;</span>
    <span class="kwb">array</span> l<span class="sym">;</span>
    do <span class="sym">{</span>
	buf <span class="sym">=</span> <span class="kwa">replace</span><span class="sym">(</span>Stdio.stdin.<span class="kwd">read</span><span class="sym">(</span> <span class="num">4196</span> <span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span><span class="sym">,</span> <span class="str">&quot; &quot;</span><span class="sym">);</span>
	<span class="kwd">if</span><span class="sym">(</span><span class="kwa">strlen</span><span class="sym">(</span>buf<span class="sym">)) {</span>
	    nc <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>buf<span class="sym">);</span>
	    l <span class="sym">= (</span>rest<span class="sym">+</span> buf<span class="sym">) /</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
	    nl <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>l<span class="sym">)-</span><span class="num">1</span><span class="sym">;</span>
	    <span class="kwd">foreach</span><span class="sym">(</span>l<span class="sym">[</span>..<span class="kwa">sizeof</span><span class="sym">(</span>l<span class="sym">)-</span><span class="num">2</span><span class="sym">],</span> rest<span class="sym">) {</span>
		nw <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>rest <span class="sym">/</span> <span class="str">&quot; &quot;</span> <span class="sym">- ({</span><span class="str">&quot;&quot;</span><span class="sym">}));</span>
	    <span class="sym">}</span>
	    <span class="kwd">if</span><span class="sym">(</span><span class="kwa">sizeof</span><span class="sym">(</span>l<span class="sym">)&gt;</span><span class="num">1</span><span class="sym">) {</span>
		rest <span class="sym">=</span> l<span class="sym">[-</span><span class="num">1</span><span class="sym">];</span>
	    <span class="sym">}</span> <span class="slc">//else rest=&quot;&quot;;</span>
	<span class="sym">}</span> else <span class="sym">{</span>
	    nw <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>rest <span class="sym">/</span> <span class="str">&quot; &quot;</span> <span class="sym">- ({</span><span class="str">&quot;&quot;</span><span class="sym">}));</span>
	    break<span class="sym">;</span>
	<span class="sym">}</span>
    <span class="sym">}</span> <span class="kwd">while</span><span class="sym">(</span> <span class="num">1</span> <span class="sym">);</span>
    <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> nl<span class="sym">,</span> nw<span class="sym">,</span> nc<span class="sym">);</span>
<span class="sym">}</span>
