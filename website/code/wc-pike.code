<span class="line">    1 </span><span class="dir">#!/usr/bin/pike
</span><span class="line">    2 </span><span class="dir"></span><span class="slc">// -*- mode: pike -*-
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// $Id: wc-pike.code,v 1.3 2004-11-11 07:14:20 bfulgham Exp $
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">// from Per Hedbor, optimized by David Hedbor
</span><span class="line">    6 </span><span class="slc"></span>
<span class="line">    7 </span>enum State <span class="sym">{</span> Outside<span class="sym">,</span> Inside <span class="sym">};
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym"></span><span class="kwb">void</span> main<span class="sym">() {
</span><span class="line">   10 </span><span class="sym"></span>    <span class="kwb">int</span> nl <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nw <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nc <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> <span class="slc">// line, word and character counters
</span><span class="line">   11 </span><span class="slc"></span>    <span class="kwb">int</span> sl<span class="sym">;</span> <span class="slc">// Size of input
</span><span class="line">   12 </span><span class="slc"></span>
<span class="line">   13 </span>    State state <span class="sym">=</span> Outside<span class="sym">;</span> <span class="slc">// Inside or outside word
</span><span class="line">   14 </span><span class="slc"></span>
<span class="line">   15 </span>    <span class="kwb">string</span> buf<span class="sym">;
</span><span class="line">   16 </span><span class="sym"></span>    <span class="kwb">string</span> rest<span class="sym">=</span><span class="str">&quot;&quot;</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwb">array</span> l<span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>    do <span class="sym">{
</span><span class="line">   19 </span><span class="sym"></span>        buf <span class="sym">=</span> <span class="kwa">replace</span><span class="sym">(</span>Stdio.stdin.read<span class="sym">(</span> <span class="num">4196</span> <span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span><span class="sym">,</span> <span class="str">&quot; &quot;</span><span class="sym">);
</span><span class="line">   20 </span><span class="sym"></span>        if<span class="sym">(</span><span class="kwa">strlen</span><span class="sym">(</span>buf<span class="sym">)) {
</span><span class="line">   21 </span><span class="sym"></span>            nc <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>buf<span class="sym">);
</span><span class="line">   22 </span><span class="sym"></span>            l <span class="sym">= (</span>rest<span class="sym">+</span> buf<span class="sym">) /</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>            nl <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>l<span class="sym">)-</span><span class="num">1</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym"></span>            foreach<span class="sym">(</span>l<span class="sym">[</span>..<span class="kwa">sizeof</span><span class="sym">(</span>l<span class="sym">)-</span><span class="num">2</span><span class="sym">],</span> rest<span class="sym">) {
</span><span class="line">   25 </span><span class="sym"></span>                nw <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>rest <span class="sym">/</span> <span class="str">&quot; &quot;</span> <span class="sym">- ({</span><span class="str">&quot;&quot;</span><span class="sym">}));
</span><span class="line">   26 </span><span class="sym">            }
</span><span class="line">   27 </span><span class="sym"></span>            if<span class="sym">(</span><span class="kwa">sizeof</span><span class="sym">(</span>l<span class="sym">)&gt;</span><span class="num">1</span><span class="sym">) {
</span><span class="line">   28 </span><span class="sym"></span>                rest <span class="sym">=</span> l<span class="sym">[-</span><span class="num">1</span><span class="sym">];
</span><span class="line">   29 </span><span class="sym">            }</span> <span class="slc">//else rest=&quot;&quot;;
</span><span class="line">   30 </span><span class="slc"></span>        <span class="sym">}</span> else <span class="sym">{
</span><span class="line">   31 </span><span class="sym"></span>            nw <span class="sym">+=</span> <span class="kwa">sizeof</span><span class="sym">(</span>rest <span class="sym">/</span> <span class="str">&quot; &quot;</span> <span class="sym">- ({</span><span class="str">&quot;&quot;</span><span class="sym">}));
</span><span class="line">   32 </span><span class="sym"></span>            break<span class="sym">;
</span><span class="line">   33 </span><span class="sym">        }
</span><span class="line">   34 </span><span class="sym">    }</span> while<span class="sym">(</span> <span class="num">1</span> <span class="sym">);
</span><span class="line">   35 </span><span class="sym"></span>    <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> nl<span class="sym">,</span> nw<span class="sym">,</span> nc<span class="sym">);
</span><span class="line">   36 </span><span class="sym">}</span>
