<span class="slc">;;;; -Ob</span>



<span class="sym">(</span>declare <span class="sym">(</span>fixnum<span class="sym">) (</span>disable<span class="sym">-</span>interrupts<span class="sym">))</span>



<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>

  <span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">null</span>? args<span class="sym">)</span>

               <span class="num">1</span>

               <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">car</span> args<span class="sym">))))</span>

	<span class="sym">(</span>count <span class="num">0</span><span class="sym">)</span>

	<span class="sym">(</span>flags <span class="sym">(</span>make<span class="sym">-</span>vector <span class="num">8192</span><span class="sym">)))</span>

    <span class="sym">(</span>let loop <span class="sym">((</span>iter n<span class="sym">))</span>

      <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(&gt;</span> iter <span class="num">0</span><span class="sym">)</span>

	  <span class="sym">(</span>begin

            <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">))) ((&gt;=</span> i <span class="num">8192</span><span class="sym">)) (</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> flags i #t<span class="sym">))</span>

            <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> count <span class="num">0</span><span class="sym">)</span>

            <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">2</span> <span class="sym">(+</span> <span class="num">1</span> i<span class="sym">)))</span>

              <span class="sym">((&gt;=</span> i <span class="num">8192</span><span class="sym">))</span>

              <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>vector<span class="sym">-</span>ref flags i<span class="sym">)</span>

                  <span class="sym">(</span>begin

                    <span class="sym">(</span>do <span class="sym">((</span>k <span class="sym">(+</span> i i<span class="sym">) (+</span> k i<span class="sym">)))</span>

                      <span class="sym">((&gt;=</span> k <span class="num">8192</span><span class="sym">))</span>

                      <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> flags k #f<span class="sym">))</span>

                    <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> count <span class="sym">(+</span> <span class="num">1</span> count<span class="sym">)))))</span>

	    <span class="sym">(</span>loop <span class="sym">(-</span> iter <span class="num">1</span><span class="sym">)))))</span>

    <span class="sym">(</span><span class="kwa">print</span> <span class="str">&quot;Count: &quot;</span> count<span class="sym">) ) )</span>



<span class="sym">(</span>main <span class="sym">(</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>arguments<span class="sym">))</span>

