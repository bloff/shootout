<span class="slc"># The Computer Language Benchmarks game</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by David Pyke</span>
<span class="slc"># tweaked by Danny Sauer</span>
<span class="slc"># optimized by Steffen Mueller</span>
<span class="slc"># tweaked by Kuang-che Wu</span>

<span class="kwa">use</span> strict<span class="sym">;</span>
<span class="kwa">use</span> warnings<span class="sym">;</span>
<span class="kwa">use</span> constant IM <span class="sym">=&gt;</span> <span class="num">139968</span><span class="sym">;</span>
<span class="kwa">use</span> constant IA <span class="sym">=&gt;</span> <span class="num">3877</span><span class="sym">;</span>
<span class="kwa">use</span> constant IC <span class="sym">=&gt;</span> <span class="num">29573</span><span class="sym">;</span>

<span class="kwa">use</span> constant LINELENGTH <span class="sym">=&gt;</span> <span class="num">60</span><span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">$LAST</span> <span class="sym">=</span> <span class="num">42</span><span class="sym">;</span>
<span class="kwa">sub</span> gen_random <span class="sym">{</span>
    <span class="kwa">return</span> map <span class="sym">{( (</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">] * (</span><span class="kwb">$LAST</span> <span class="sym">= (</span><span class="kwb">$LAST</span> <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">)</span> % IM<span class="sym">)) /</span> IM <span class="sym">)}</span> <span class="num">1</span>..<span class="sym">(</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">1</span><span class="sym">]||</span><span class="num">1</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">sub</span> makeCumulative <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$genelist</span> <span class="sym">=</span> shift<span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$cp</span> <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>

    <span class="kwb">$_</span><span class="sym">-&gt;[</span><span class="num">1</span><span class="sym">] =</span> <span class="kwb">$cp</span> <span class="sym">+=</span> <span class="kwb">$_</span><span class="sym">-&gt;[</span><span class="num">1</span><span class="sym">]</span> <span class="kwa">foreach</span> &#64;<span class="kwb">$genelist</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">sub</span> selectRandom <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$genelist</span> <span class="sym">=</span> shift<span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$number</span> <span class="sym">=</span> shift <span class="sym">||</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">&#64;r</span> <span class="sym">=</span> <span class="kwd">gen_random</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwb">$number</span><span class="sym">);</span>

    <span class="kwc">my</span> <span class="kwb">$s</span><span class="sym">;</span>
    <span class="kwa">foreach</span> <span class="kwc">my</span> <span class="kwb">$r</span> <span class="sym">(</span><span class="kwb">&#64;r</span><span class="sym">) {</span>
        <span class="kwa">foreach</span> <span class="sym">(</span>&#64;<span class="kwb">$genelist</span><span class="sym">){</span>
            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$r</span> <span class="sym">&lt;</span> <span class="kwb">$_</span><span class="sym">-&gt;[</span><span class="num">1</span><span class="sym">]) {</span> <span class="kwb">$s</span> .<span class="sym">=</span> <span class="kwb">$_</span><span class="sym">-&gt;[</span><span class="num">0</span><span class="sym">];</span> <span class="kwa">last</span><span class="sym">; }</span>
        <span class="sym">}</span>
    <span class="sym">}</span>

    <span class="kwa">return</span> <span class="kwb">$s</span><span class="sym">;</span>
<span class="sym">}</span>


<span class="kwa">sub</span> makeRandomFasta <span class="sym">{</span>
    <span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$id</span><span class="sym">,</span> <span class="kwb">$desc</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">,</span> <span class="kwb">$genelist</span><span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>

    print <span class="str">&quot;&gt;&quot;</span><span class="sym">,</span> <span class="kwb">$id</span><span class="sym">,</span> <span class="str">&quot; &quot;</span><span class="sym">,</span> <span class="kwb">$desc</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>

    <span class="slc"># print whole lines</span>
    <span class="kwa">foreach</span> <span class="sym">(</span><span class="num">1</span> .. <span class="kwd">int</span><span class="sym">(</span><span class="kwb">$n</span> <span class="sym">/</span> LINELENGTH<span class="sym">) ){</span>
        print <span class="kwd">selectRandom</span><span class="sym">(</span><span class="kwb">$genelist</span><span class="sym">,</span> LINELENGTH<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
    <span class="sym">}</span>
    <span class="slc"># print remaining line (if required)</span>
    <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$n</span> % LINELENGTH<span class="sym">){</span>
        print <span class="kwd">selectRandom</span><span class="sym">(</span><span class="kwb">$genelist</span><span class="sym">,</span> <span class="kwb">$n</span> % LINELENGTH<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">sub</span> makeRepeatFasta <span class="sym">{</span>
    <span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$id</span><span class="sym">,</span> <span class="kwb">$desc</span><span class="sym">,</span> <span class="kwb">$s</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>

    print <span class="str">&quot;&gt;&quot;</span><span class="sym">,</span> <span class="kwb">$id</span><span class="sym">,</span> <span class="str">&quot; &quot;</span><span class="sym">,</span> <span class="kwb">$desc</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>

    <span class="kwc">my</span> <span class="kwb">$r</span> <span class="sym">=</span> length <span class="kwb">$s</span><span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$ss</span> <span class="sym">=</span> <span class="kwb">$s</span> . <span class="kwb">$s</span> . <span class="kwd">substr</span><span class="sym">(</span><span class="kwb">$s</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="kwb">$n</span> % <span class="kwb">$r</span><span class="sym">);</span>
    <span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$j</span><span class="sym">(</span><span class="num">0</span>..<span class="kwd">int</span><span class="sym">(</span><span class="kwb">$n</span> <span class="sym">/</span> LINELENGTH<span class="sym">)-</span><span class="num">1</span><span class="sym">) {</span>
	<span class="kwc">my</span> <span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$j</span><span class="sym">*</span>LINELENGTH % <span class="kwb">$r</span><span class="sym">;</span>
	print <span class="kwd">substr</span><span class="sym">(</span><span class="kwb">$ss</span><span class="sym">,</span> <span class="kwb">$i</span><span class="sym">,</span> LINELENGTH<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
    <span class="sym">}</span>
    <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$n</span> % LINELENGTH<span class="sym">) {</span>
	print <span class="kwd">substr</span><span class="sym">(</span><span class="kwb">$ss</span><span class="sym">, -(</span><span class="kwb">$n</span> % LINELENGTH<span class="sym">)),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>


<span class="kwc">my</span> <span class="kwb">$iub</span> <span class="sym">= [</span>
    <span class="sym">[</span> <span class="str">'a'</span><span class="sym">,</span> <span class="num">0.27</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'c'</span><span class="sym">,</span> <span class="num">0.12</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'g'</span><span class="sym">,</span> <span class="num">0.12</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'t'</span><span class="sym">,</span> <span class="num">0.27</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'B'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'D'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'H'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'K'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'M'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'N'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'R'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'S'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'V'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'W'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'Y'</span><span class="sym">,</span> <span class="num">0.02</span> <span class="sym">]</span>
<span class="sym">];</span>

<span class="kwc">my</span> <span class="kwb">$homosapiens</span> <span class="sym">= [</span>
    <span class="sym">[</span> <span class="str">'a'</span><span class="sym">,</span> <span class="num">0.3029549426680</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'c'</span><span class="sym">,</span> <span class="num">0.1979883004921</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'g'</span><span class="sym">,</span> <span class="num">0.1975473066391</span> <span class="sym">],</span>
    <span class="sym">[</span> <span class="str">'t'</span><span class="sym">,</span> <span class="num">0.3015094502008</span> <span class="sym">]</span>
<span class="sym">];</span>

<span class="kwc">my</span> <span class="kwb">$alu</span> <span class="sym">=</span>
    <span class="str">'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</span> .
    <span class="str">'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</span> .
    <span class="str">'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</span> .
    <span class="str">'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</span> .
    <span class="str">'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</span> .
    <span class="str">'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</span> .
    <span class="str">'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</span><span class="sym">;</span>

<span class="slc">######################################################################</span>
<span class="slc">#main</span>

<span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">= (</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">1000</span><span class="sym">) ;</span>

<span class="kwd">makeCumulative</span><span class="sym">(</span><span class="kwb">$iub</span><span class="sym">);</span>
<span class="kwd">makeCumulative</span><span class="sym">(</span><span class="kwb">$homosapiens</span><span class="sym">);</span>

<span class="kwd">makeRepeatFasta</span> <span class="sym">(</span><span class="str">'ONE'</span><span class="sym">,</span> <span class="str">'Homo sapiens alu'</span><span class="sym">,</span> <span class="kwb">$alu</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">*</span><span class="num">2</span><span class="sym">);</span>
<span class="kwd">makeRandomFasta</span> <span class="sym">(</span><span class="str">'TWO'</span><span class="sym">,</span> <span class="str">'IUB ambiguity codes'</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">*</span><span class="num">3</span><span class="sym">,</span> <span class="kwb">$iub</span><span class="sym">);</span>
<span class="kwd">makeRandomFasta</span> <span class="sym">(</span><span class="str">'THREE'</span><span class="sym">,</span> <span class="str">'Homo sapiens frequency'</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">*</span><span class="num">5</span><span class="sym">,</span> <span class="kwb">$homosapiens</span><span class="sym">);</span>

