<span class="slc">#!/usr/bin/ruby
</span><span class="slc"># -*- mode: ruby -*-
</span><span class="slc"># $Id: prodcons-ruby.code,v 1.5 2005-04-04 14:56:55 bfulgham Exp $
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span>
require <span class="str">'thread'</span>

<span class="kwa">def</span> main<span class="sym">(</span>n<span class="sym">)
</span>    mutex = Mutex.new
    access = ConditionVariable.new
    count = <span class="kwa">data</span> = consumed = produced = <span class="num">0
</span>    consumer = Thread.new <span class="kwa">do
</span>	i = <span class="num">0
</span>	loop <span class="kwa">do
</span>	    mutex.synchronize <span class="sym">{
</span>		<span class="kwa">while</span> count == <span class="num">0</span> <span class="kwa">do</span> access.wait<span class="sym">(</span>mutex<span class="sym">)</span> <span class="kwa">end
</span>		i = <span class="kwa">data
</span>		count = <span class="num">0
</span>		access.signal
	    <span class="sym">}
</span>	    consumed <span class="sym">+</span>= <span class="num">1
</span>	    <span class="kwa">if</span> i == n <span class="kwa">then break end
	end
    end
</span>    producer = Thread.new <span class="kwa">do
	for</span> i <span class="kwa">in</span> <span class="num">1</span> .. n <span class="kwa">do
</span>	    mutex.synchronize <span class="sym">{
</span>		<span class="kwa">while</span> count == <span class="num">1</span> <span class="kwa">do</span> access.wait<span class="sym">(</span>mutex<span class="sym">)</span> <span class="kwa">end
		data</span> = i
		count = <span class="num">1
</span>		access.signal
	    <span class="sym">}
</span>	    produced <span class="sym">+</span>= <span class="num">1
</span>	<span class="kwa">end
    end
</span>    producer.join
    consumer.join
    puts <span class="str">&quot;#{produced} #{consumed}&quot;</span>
<span class="kwa">end

</span>main<span class="sym">(</span>Integer<span class="sym">(</span><span class="kwa">ARGV</span>.shift <span class="sym">||</span> <span class="num">1</span><span class="sym">))</span>
