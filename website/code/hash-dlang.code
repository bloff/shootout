<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   http://www.bagley.org/~doug/shootout/

   converted to D by Dave Fladebo
   compile: dmd -O -inline -release hash.d
*/</span>

import std<span class="sym">.</span>stdio<span class="sym">,</span> std<span class="sym">.</span>string<span class="sym">;

</span><span class="kwb">void</span> main<span class="sym">(</span><span class="kwb">char</span><span class="sym">[][]</span> args<span class="sym">)
{
</span>    <span class="kwb">int</span> n <span class="sym">=</span> args<span class="sym">.</span>length <span class="sym">&gt;</span> <span class="num">1</span> ? atoi<span class="sym">(</span>args<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">;

</span>    <span class="kwb">char</span><span class="sym">[</span><span class="num">32</span><span class="sym">]</span>    str<span class="sym">;
</span>    <span class="kwb">int</span><span class="sym">[</span><span class="kwb">char</span><span class="sym">[]]</span> X<span class="sym">;

</span>    <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span> i <span class="sym">&lt;=</span> n<span class="sym">;</span> i<span class="sym">++) {
</span>        <span class="kwb">int</span> len <span class="sym">=</span> sprintf<span class="sym">(</span>str<span class="sym">,</span><span class="str">&quot;%x&quot;</span><span class="sym">,</span>i<span class="sym">);
</span>        X<span class="sym">[</span>str<span class="sym">[</span><span class="num">0</span><span class="sym">..</span>len<span class="sym">].</span>dup<span class="sym">] =</span> i<span class="sym">;
    }

</span>    <span class="kwb">int</span> c<span class="sym">;
</span>    <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> n<span class="sym">;</span> i <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">;</span> i<span class="sym">--) {
</span>        <span class="kwb">int</span> len <span class="sym">=</span> sprintf<span class="sym">(</span>str<span class="sym">,</span><span class="str">&quot;%d&quot;</span><span class="sym">,</span>i<span class="sym">);
</span>        <span class="kwa">if</span><span class="sym">(</span>str<span class="sym">[</span><span class="num">0</span><span class="sym">..</span>len<span class="sym">]</span> in X<span class="sym">)</span> c<span class="sym">++;
    }

</span>    writefln<span class="sym">(</span>c<span class="sym">);
}</span>
