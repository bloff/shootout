<span class="slc">## The Computer Language Shootout</span>
<span class="slc">## http://shootout.alioth.debian.org/</span>
<span class="slc">##</span>
<span class="slc">## Contributed by Mark Smithfield</span>
<span class="slc">##</span>
<span class="slc">## $Id: message-tcl-2.code,v 1.3 2006-09-20 05:51:56 bfulgham Exp $</span>

<span class="kwa">proc</span> bump <span class="sym">{</span> next_thread msg <span class="sym">} {</span>
	<span class="kwa">if</span> <span class="sym">{</span> <span class="kwb">$next_thread</span> <span class="sym">==</span> <span class="num">0</span>  <span class="sym">} {</span> <span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$msg</span><span class="sym">} }</span> else <span class="sym">{</span>
		<span class="kwb">$next_thread</span> <span class="kwa">eval</span> <span class="sym">[</span><span class="kwa">list</span> bump <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$msg</span><span class="sym">+</span><span class="num">1</span><span class="sym">}]]</span>
	<span class="sym">}</span>
<span class="sym">}</span>
<span class="kwa">set</span> N <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]</span>
<span class="kwa">interp</span> recursionlimit <span class="sym">{}</span> <span class="num">1024</span>
<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="num">500</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span>
	<span class="kwa">interp</span> create thread<span class="sym">-</span><span class="kwb">$i</span>
	<span class="kwa">interp</span> alias thread<span class="sym">-</span><span class="kwb">$i</span> bump <span class="sym">{}</span> bump thread<span class="sym">-[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$i</span><span class="sym">+</span><span class="num">1</span><span class="sym">}]</span>
<span class="sym">}</span>
<span class="kwa">interp</span> alias thread<span class="sym">-[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$i</span><span class="sym">-</span><span class="num">1</span><span class="sym">}]</span> bump <span class="sym">{}</span> bump <span class="num">0</span>
<span class="kwa">set</span> cc <span class="num">0</span>
<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="kwb">$N</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span><span class="kwa">incr</span> cc <span class="sym">[</span>bump thread<span class="sym">-</span><span class="num">0 0</span><span class="sym">]}</span>
<span class="kwa">puts</span> <span class="kwb">$cc</span>
