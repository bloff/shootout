<span class="line">    1 </span><span class="com">/* The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="com">     http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="com">    contributed by Isaac Gouy
</span><span class="line">    4 </span><span class="com"> 
</span><span class="line">    5 </span><span class="com"> To compile:
</span><span class="line">    6 </span><span class="com">            nicec --sourcepath=.. -d=. -a random.jar random
</span><span class="line">    7 </span><span class="com"> 
</span><span class="line">    8 </span><span class="com"> To run:
</span><span class="line">    9 </span><span class="com">    java -ea -jar random.jar 900000
</span><span class="line">   10 </span><span class="com"> */</span>
<span class="line">   11 </span>
<span class="line">   12 </span>
<span class="line">   13 </span>   <span class="kwa">import</span> java<span class="sym">.</span>text<span class="sym">.*;
</span><span class="line">   14 </span><span class="sym"> 
</span><span class="line">   15 </span><span class="sym"> </span><span class="kwa">import</span> ackermann<span class="sym">;</span> <span class="slc">// reuse toSinglePositiveInt 
</span><span class="line">   16 </span><span class="slc"></span>
<span class="line">   17 </span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span><span class="line">   18 </span><span class="sym"> </span>   var n <span class="sym">=</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">);
</span><span class="line">   19 </span><span class="sym"> </span>   var result <span class="sym">=</span> <span class="num">0.0d</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym"> 
</span><span class="line">   21 </span><span class="sym"> </span>   <span class="kwa">while</span> <span class="sym">(</span>n<span class="sym">-- &gt;</span> <span class="num">0</span><span class="sym">)</span> result <span class="sym">=</span> gen_random<span class="sym">(</span><span class="num">100.0</span><span class="sym">);
</span><span class="line">   22 </span><span class="sym"> 
</span><span class="line">   23 </span><span class="sym"> </span>   println<span class="sym">(</span>floatFormat<span class="sym">(</span><span class="num">9</span><span class="sym">).</span>format<span class="sym">(</span>result<span class="sym">));
</span><span class="line">   24 </span><span class="sym"> }
</span><span class="line">   25 </span><span class="sym"> 
</span><span class="line">   26 </span><span class="sym"> 
</span><span class="line">   27 </span><span class="sym"> </span><span class="kwa">let</span> <span class="kwb">int</span> IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym"> </span><span class="kwa">let</span> <span class="kwb">int</span> IA <span class="sym">=</span> <span class="num">3877</span><span class="sym">;
</span><span class="line">   29 </span><span class="sym"> </span><span class="kwa">let</span> <span class="kwb">int</span> IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"> </span>var <span class="kwb">int</span> seed <span class="sym">=</span> <span class="num">42</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym"> 
</span><span class="line">   32 </span><span class="sym"> 
</span><span class="line">   33 </span><span class="sym"> </span><span class="kwb">double</span> gen_random<span class="sym">(</span><span class="kwb">double</span> max<span class="sym">) {
</span><span class="line">   34 </span><span class="sym">         </span>   seed <span class="sym">= (</span>seed <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">) %</span> IM<span class="sym">;
</span><span class="line">   35 </span><span class="sym"> </span>   <span class="kwa">return</span><span class="sym">(</span> max <span class="sym">*</span> seed <span class="sym">/</span> IM <span class="sym">);
</span><span class="line">   36 </span><span class="sym"> }
</span><span class="line">   37 </span><span class="sym"> 
</span><span class="line">   38 </span><span class="sym"> 
</span><span class="line">   39 </span><span class="sym"> </span><span class="kwc">NumberFormat</span> floatFormat<span class="sym">(</span><span class="kwb">int</span> digits<span class="sym">){
</span><span class="line">   40 </span><span class="sym"> </span>   <span class="kwa">let</span> f <span class="sym">=</span> <span class="kwc">NumberFormat</span><span class="sym">.</span>getInstance<span class="sym">();
</span><span class="line">   41 </span><span class="sym"> </span>   f<span class="sym">.</span>setGroupingUsed<span class="sym">(</span>false<span class="sym">);
</span><span class="line">   42 </span><span class="sym"> </span>   f<span class="sym">.</span>setMaximumFractionDigits<span class="sym">(</span>digits<span class="sym">);
</span><span class="line">   43 </span><span class="sym"> </span>   f<span class="sym">.</span>setMinimumFractionDigits<span class="sym">(</span>digits<span class="sym">);
</span><span class="line">   44 </span><span class="sym"> </span>   <span class="kwa">return</span> f<span class="sym">;
</span><span class="line">   45 </span><span class="sym"> }</span>  
