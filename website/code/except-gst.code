<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<B><FONT COLOR="#BC8F8F">&quot;  The Great Computer Language Shootout
   contributed by Paolo Bonzini

   To run: gst -QI /usr/local/share/smalltalk/gst.im except.st -a 20000
&quot;</FONT></B>

Notification subclass: <I><FONT COLOR="#B22222">#MyException
</FONT></I>   instanceVariableNames: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   classVariableNames: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   poolDictionaries: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   category: <B><FONT COLOR="#BC8F8F">'testing'</FONT></B>!

MyException class instanceVariableNames: <B><FONT COLOR="#BC8F8F">'count'</FONT></B>!

!MyException class methodsFor: <B><FONT COLOR="#BC8F8F">'counting'</FONT></B>!

count
   ^count!
	
increment
   count := count + 1!

initialize
   count := 0! !
	
MyException subclass: <I><FONT COLOR="#B22222">#LoException
</FONT></I>   instanceVariableNames: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   classVariableNames: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   poolDictionaries: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   category: <B><FONT COLOR="#BC8F8F">'testing'</FONT></B>!

MyException subclass: <I><FONT COLOR="#B22222">#HiException
</FONT></I>   instanceVariableNames: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   classVariableNames: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   poolDictionaries: <B><FONT COLOR="#BC8F8F">''</FONT></B>
   category: <B><FONT COLOR="#BC8F8F">'testing'</FONT></B>!

LoException initialize.
HiException initialize!

!SmallInteger methodsFor: <B><FONT COLOR="#BC8F8F">'testing'</FONT></B>!

someFunction
   ^self hiFunction!
	
hiFunction
   ^[ self loFunction ] on: HiException <B><FONT COLOR="#A020F0">do</FONT></B>: [ :ex | ex class increment ]!
	
loFunction
   ^[ self blowup ] on: LoException <B><FONT COLOR="#A020F0">do</FONT></B>: [ :ex | ex class increment ]!
	
blowup
   ^(self odd ifTrue: [ HiException ] ifFalse: [ LoException ]) signal: self! !

| n |
n := Smalltalk arguments isEmpty
   ifTrue: [ 20000 ]
   ifFalse: [ 1 max: Smalltalk arguments first asInteger ].

1 to: n <B><FONT COLOR="#A020F0">do</FONT></B>: [ :<B><FONT COLOR="#A020F0">each</FONT></B> | <B><FONT COLOR="#A020F0">each</FONT></B> someFunction ].

(<B><FONT COLOR="#BC8F8F">'Exceptions: HI=%1 / LO=%2'</FONT></B>
   bindWith: HiException count with: LoException count) displayNl !</pre></td></tr></table>
