<span class="line">    1 </span><span class="slc">// $Id: except-kaffe.code,v 1.3 2004-11-11 07:13:57 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// Collection class code is from my friend Phil Chu, Thanks Phil!
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">import</span> java<span class="sym">.</span>text<span class="sym">.*;
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">class</span> Lo_Exception <span class="kwa">extends</span> <span class="kwc">Exception</span> <span class="sym">{
</span><span class="line">   10 </span><span class="sym"></span>    <span class="kwb">int</span> num <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwa">public</span> Lo_Exception<span class="sym">(</span><span class="kwb">int</span> num<span class="sym">) {
</span><span class="line">   12 </span><span class="sym"></span>        <span class="kwa">this</span><span class="sym">.</span>num <span class="sym">=</span> num<span class="sym">;
</span><span class="line">   13 </span><span class="sym">    }
</span><span class="line">   14 </span><span class="sym"></span>    <span class="kwa">public</span> <span class="kwc">String</span> toString<span class="sym">() {
</span><span class="line">   15 </span><span class="sym"></span>        <span class="kwa">return</span> <span class="str">&quot;Lo_Exception, num = &quot;</span> <span class="sym">+</span> <span class="kwa">this</span><span class="sym">.</span>num<span class="sym">;
</span><span class="line">   16 </span><span class="sym">    }
</span><span class="line">   17 </span><span class="sym">}
</span><span class="line">   18 </span><span class="sym">
</span><span class="line">   19 </span><span class="sym"></span><span class="kwa">class</span> Hi_Exception <span class="kwa">extends</span> <span class="kwc">Exception</span> <span class="sym">{
</span><span class="line">   20 </span><span class="sym"></span>    <span class="kwb">int</span> num <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   21 </span><span class="sym"></span>    <span class="kwa">public</span> Hi_Exception<span class="sym">(</span><span class="kwb">int</span> num<span class="sym">) {
</span><span class="line">   22 </span><span class="sym"></span>        <span class="kwa">this</span><span class="sym">.</span>num <span class="sym">=</span> num<span class="sym">;
</span><span class="line">   23 </span><span class="sym">    }
</span><span class="line">   24 </span><span class="sym"></span>    <span class="kwa">public</span> <span class="kwc">String</span> toString<span class="sym">() {
</span><span class="line">   25 </span><span class="sym"></span>        <span class="kwa">return</span> <span class="str">&quot;Hi_Exception, num = &quot;</span> <span class="sym">+</span> <span class="kwa">this</span><span class="sym">.</span>num<span class="sym">;
</span><span class="line">   26 </span><span class="sym">    }
</span><span class="line">   27 </span><span class="sym">}
</span><span class="line">   28 </span><span class="sym">
</span><span class="line">   29 </span><span class="sym"></span><span class="kwa">public class</span> except <span class="sym">{
</span><span class="line">   30 </span><span class="sym"></span>    <span class="kwa">static</span> <span class="kwb">int</span> Lo <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwa">static</span> <span class="kwb">int</span> Hi <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   32 </span><span class="sym">
</span><span class="line">   33 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[])</span> <span class="kwa">throws</span> <span class="kwc">IOException</span> <span class="sym">{
</span><span class="line">   34 </span><span class="sym"></span>        <span class="kwb">int</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   35 </span><span class="sym">
</span><span class="line">   36 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   37 </span><span class="sym"></span>            some_function<span class="sym">(</span>i<span class="sym">);
</span><span class="line">   38 </span><span class="sym">        }
</span><span class="line">   39 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="str">&quot;Exceptions: HI=&quot;</span> <span class="sym">+</span> Hi <span class="sym">+</span> <span class="str">&quot; / LO=&quot;</span> <span class="sym">+</span> Lo<span class="sym">);
</span><span class="line">   40 </span><span class="sym">    }
</span><span class="line">   41 </span><span class="sym">
</span><span class="line">   42 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> some_function<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">) {
</span><span class="line">   43 </span><span class="sym"></span>        <span class="kwa">try</span> <span class="sym">{
</span><span class="line">   44 </span><span class="sym"></span>            hi_function<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   45 </span><span class="sym">        }</span> <span class="kwa">catch</span> <span class="sym">(</span><span class="kwc">Exception</span> e<span class="sym">) {
</span><span class="line">   46 </span><span class="sym"></span>            <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="str">&quot;We shouldn't get here: &quot;</span> <span class="sym">+</span> e<span class="sym">);
</span><span class="line">   47 </span><span class="sym">        }
</span><span class="line">   48 </span><span class="sym">    }
</span><span class="line">   49 </span><span class="sym">
</span><span class="line">   50 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> hi_function<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)</span> <span class="kwa">throws</span> Hi_Exception<span class="sym">,</span> Lo_Exception <span class="sym">{
</span><span class="line">   51 </span><span class="sym"></span>        <span class="kwa">try</span> <span class="sym">{
</span><span class="line">   52 </span><span class="sym"></span>            lo_function<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   53 </span><span class="sym">        }</span> <span class="kwa">catch</span> <span class="sym">(</span>Hi_Exception e<span class="sym">) {
</span><span class="line">   54 </span><span class="sym"></span>            Hi<span class="sym">++;
</span><span class="line">   55 </span><span class="sym">        }
</span><span class="line">   56 </span><span class="sym">    }
</span><span class="line">   57 </span><span class="sym">
</span><span class="line">   58 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> lo_function<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)</span> <span class="kwa">throws</span> Hi_Exception<span class="sym">,</span> Lo_Exception <span class="sym">{
</span><span class="line">   59 </span><span class="sym"></span>        <span class="kwa">try</span> <span class="sym">{
</span><span class="line">   60 </span><span class="sym"></span>            blowup<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   61 </span><span class="sym">        }</span> <span class="kwa">catch</span> <span class="sym">(</span>Lo_Exception e<span class="sym">) {
</span><span class="line">   62 </span><span class="sym"></span>            Lo<span class="sym">++;
</span><span class="line">   63 </span><span class="sym">        }
</span><span class="line">   64 </span><span class="sym">    }
</span><span class="line">   65 </span><span class="sym">
</span><span class="line">   66 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> blowup<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)</span> <span class="kwa">throws</span> Hi_Exception<span class="sym">,</span> Lo_Exception <span class="sym">{
</span><span class="line">   67 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">((</span>n <span class="sym">%</span> <span class="num">2</span><span class="sym">) ==</span> <span class="num">0</span><span class="sym">) {
</span><span class="line">   68 </span><span class="sym"></span>            <span class="kwa">throw new</span> Lo_Exception<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   69 </span><span class="sym">        }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   70 </span><span class="sym"></span>            <span class="kwa">throw new</span> Hi_Exception<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   71 </span><span class="sym">        }
</span><span class="line">   72 </span><span class="sym">    }
</span><span class="line">   73 </span><span class="sym">}</span>
