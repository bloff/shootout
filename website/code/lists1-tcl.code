<span class="line">    1 </span><span class="slc">#!/usr/bin/tclsh
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: lists1-tcl.code,v 1.4 2004-11-13 07:41:54 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc"># based on code from Kristoffer Lawson and Tom Wilkason
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="kwa">proc</span> K <span class="sym">{</span>a b<span class="sym">} {</span><span class="kwa">set</span> a<span class="sym">}
</span><span class="line">    7 </span><span class="sym">
</span><span class="line">    8 </span><span class="sym"></span><span class="kwa">proc</span> ldelete <span class="sym">{</span>listName index<span class="sym">} {
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwa">upvar</span> <span class="kwb">$listName</span> <span class="kwa">list
</span><span class="line">   10 </span><span class="kwa"></span>    <span class="sym">;</span><span class="slc"># Replace a deletion with null, much faster
</span><span class="line">   11 </span><span class="slc"></span>    <span class="kwa">set list</span> <span class="sym">[</span><span class="kwa">lreplace</span> <span class="sym">[</span>K <span class="kwb">$list</span> <span class="sym">[</span><span class="kwa">set list</span> <span class="sym">{}]]</span> <span class="kwb">$index $index</span><span class="sym">]
</span><span class="line">   12 </span><span class="sym">}
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span><span class="kwa">proc</span> lreverse <span class="sym">{</span>_list<span class="sym">} {
</span><span class="line">   15 </span><span class="sym"></span>    <span class="kwa">upvar</span> <span class="kwb">$_list</span> List
<span class="line">   16 </span>    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{[</span><span class="kwa">llength</span> <span class="kwb">$List</span><span class="sym">] -</span> <span class="num">1</span><span class="sym">}]} {</span><span class="kwb">$i</span> <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">} {</span><span class="kwa">incr</span> i <span class="num">-1</span><span class="sym">} {
</span><span class="line">   17 </span><span class="sym"></span>        <span class="kwa">lappend</span> Li1r <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$List $i</span><span class="sym">]
</span><span class="line">   18 </span><span class="sym">    }
</span><span class="line">   19 </span><span class="sym"></span>    <span class="kwa">set</span> List <span class="kwb">$Li1r
</span><span class="line">   20 </span><span class="kwb"></span>    <span class="kwa">unset</span> Li1r
<span class="line">   21 </span><span class="sym">}
</span><span class="line">   22 </span><span class="sym">
</span><span class="line">   23 </span><span class="sym"></span><span class="kwa">proc</span> member <span class="sym">{</span>target _list<span class="sym">} {
</span><span class="line">   24 </span><span class="sym"></span>    <span class="kwa">upvar</span> <span class="kwb">$_list</span> List
<span class="line">   25 </span>    <span class="kwa">foreach</span> <span class="sym">{</span>item<span class="sym">}</span> <span class="kwb">$List</span> <span class="sym">{
</span><span class="line">   26 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$item</span> <span class="sym">==</span> <span class="kwb">$target</span><span class="sym">} {
</span><span class="line">   27 </span><span class="sym"></span>            <span class="kwa">puts</span> <span class="str">&quot;true&quot;</span>
<span class="line">   28 </span>            <span class="kwa">return
</span><span class="line">   29 </span><span class="kwa"></span>        <span class="sym">}
</span><span class="line">   30 </span><span class="sym">    }
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwa">puts</span> <span class="str">&quot;false&quot;</span>
<span class="line">   32 </span><span class="sym">}
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym"></span><span class="kwa">proc</span> main <span class="sym">{</span>args<span class="sym">} {
</span><span class="line">   35 </span><span class="sym"></span>    <span class="kwa">global</span> argv
<span class="line">   36 </span>    <span class="kwa">set</span> N <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]
</span><span class="line">   37 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$N</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">} {
</span><span class="line">   38 </span><span class="sym"></span>        <span class="kwa">set</span> N <span class="num">1
</span><span class="line">   39 </span><span class="num"></span>    <span class="sym">}
</span><span class="line">   40 </span><span class="sym">
</span><span class="line">   41 </span><span class="sym"></span>    <span class="slc"># create list (A) of integers from 1 through N
</span><span class="line">   42 </span><span class="slc"></span>    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">1</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;=</span> <span class="kwb">$N</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span><span class="kwa">lappend</span> A <span class="kwb">$i</span><span class="sym">}
</span><span class="line">   43 </span><span class="sym">
</span><span class="line">   44 </span><span class="sym"></span>    <span class="slc"># move each individual item from A to B, in a loop, reversing order
</span><span class="line">   45 </span><span class="slc"></span>    <span class="kwa">foreach</span> <span class="sym">{</span>item<span class="sym">}</span> <span class="kwb">$A</span> <span class="sym">{
</span><span class="line">   46 </span><span class="sym"></span>        <span class="kwa">lappend</span> B <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$A</span> end<span class="sym">]
</span><span class="line">   47 </span><span class="sym"></span>        ldelete A end
<span class="line">   48 </span>    <span class="sym">}
</span><span class="line">   49 </span><span class="sym">
</span><span class="line">   50 </span><span class="sym"></span>    <span class="slc"># print first 2 elements of B
</span><span class="line">   51 </span><span class="slc"></span>    <span class="kwa">puts</span> <span class="str">&quot;[lindex $B 0] [lindex $B 1]&quot;</span>
<span class="line">   52 </span>
<span class="line">   53 </span>    <span class="slc"># reverse B (can be done in place)
</span><span class="line">   54 </span><span class="slc"></span>    lreverse B
<span class="line">   55 </span>
<span class="line">   56 </span>    <span class="slc"># is 0 a member of B?
</span><span class="line">   57 </span><span class="slc"></span>    member <span class="num">0</span> B
<span class="line">   58 </span>
<span class="line">   59 </span>    <span class="slc"># is N a member of B?
</span><span class="line">   60 </span><span class="slc"></span>    member <span class="kwb">$N</span> B
<span class="line">   61 </span>
<span class="line">   62 </span>    <span class="slc"># filter values from B to A that are less than N/2, preserving order
</span><span class="line">   63 </span><span class="slc"></span>    <span class="kwa">set</span> mid <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$N</span> <span class="sym">/</span> <span class="num">2</span><span class="sym">}]
</span><span class="line">   64 </span><span class="sym"></span>    <span class="kwa">foreach</span> <span class="sym">{</span>item<span class="sym">}</span> <span class="kwb">$B</span> <span class="sym">{
</span><span class="line">   65 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$item</span> <span class="sym">&lt;</span> <span class="kwb">$mid</span><span class="sym">} {
</span><span class="line">   66 </span><span class="sym"></span>            <span class="kwa">lappend</span> A <span class="kwb">$item
</span><span class="line">   67 </span><span class="kwb"></span>        <span class="sym">}
</span><span class="line">   68 </span><span class="sym">    }
</span><span class="line">   69 </span><span class="sym">
</span><span class="line">   70 </span><span class="sym"></span>    <span class="slc"># print first ten items of A
</span><span class="line">   71 </span><span class="slc"></span>    <span class="kwa">puts</span> <span class="sym">[</span><span class="kwa">lrange</span> <span class="kwb">$A</span> <span class="num">0 9</span><span class="sym">]
</span><span class="line">   72 </span><span class="sym">
</span><span class="line">   73 </span><span class="sym"></span>    <span class="slc"># print sum of items in A that are less than 1000
</span><span class="line">   74 </span><span class="slc"></span>    <span class="kwa">set</span> sum <span class="num">0
</span><span class="line">   75 </span><span class="num"></span>    <span class="kwa">foreach</span> <span class="sym">{</span>item<span class="sym">}</span> <span class="kwb">$A</span> <span class="sym">{
</span><span class="line">   76 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$item</span> <span class="sym">&lt;</span> <span class="num">1000</span><span class="sym">} {
</span><span class="line">   77 </span><span class="sym"></span>            <span class="kwa">incr</span> sum <span class="kwb">$item
</span><span class="line">   78 </span><span class="kwb"></span>        <span class="sym">}
</span><span class="line">   79 </span><span class="sym">    }
</span><span class="line">   80 </span><span class="sym"></span>    <span class="kwa">puts</span> <span class="kwb">$sum
</span><span class="line">   81 </span><span class="kwb">
</span><span class="line">   82 </span><span class="kwb"></span>    <span class="slc"># append B to end of A
</span><span class="line">   83 </span><span class="slc"></span>    <span class="kwa">foreach</span> <span class="sym">{</span>item<span class="sym">}</span> <span class="kwb">$B</span> <span class="sym">{
</span><span class="line">   84 </span><span class="sym"></span>        <span class="kwa">lappend</span> A <span class="kwb">$item
</span><span class="line">   85 </span><span class="kwb"></span>    <span class="sym">}
</span><span class="line">   86 </span><span class="sym">
</span><span class="line">   87 </span><span class="sym"></span>    <span class="slc"># print length and last element of A
</span><span class="line">   88 </span><span class="slc"></span>    <span class="kwa">puts</span> <span class="str">&quot;[llength $A] [lindex $A end]&quot;</span>
<span class="line">   89 </span><span class="sym">}
</span><span class="line">   90 </span><span class="sym">
</span><span class="line">   91 </span><span class="sym"></span>main
