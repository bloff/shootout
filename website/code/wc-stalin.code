<span class="slc">;;; $Id: wc-stalin.code,v 1.6 2006-09-20 05:52:47 bfulgham Exp $</span>
<span class="slc">;;; http://www.bagley.org/~doug/shootout/</span>
<span class="slc">;;; based on code from Bengt Kleberg</span>

<span class="sym">(</span>include <span class="str">&quot;QobiScheme&quot;</span><span class="sym">)</span>

<span class="slc">; x is a character</span>
<span class="slc">; nl is number of newlines</span>
<span class="slc">; nw is number of words</span>
<span class="slc">; nc in number of chsracters</span>

<span class="sym">(</span>define wcport
  <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>port<span class="sym">)</span>
    <span class="sym">(</span>letrec <span class="sym">((</span>wc <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>x nl nw nc inword<span class="sym">)</span>
		   <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>eof<span class="sym">-</span>object? x<span class="sym">)</span>
		       <span class="sym">(</span>begin <span class="sym">(</span>display nl<span class="sym">) (</span>display <span class="str">&quot; &quot;</span><span class="sym">) (</span>display nw<span class="sym">)</span>
			      <span class="sym">(</span>display <span class="str">&quot; &quot;</span><span class="sym">) (</span>display nc<span class="sym">) (</span>newline<span class="sym">))</span>
		       <span class="sym">(</span>let <span class="sym">((</span>new<span class="sym">-</span>nl <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>char<span class="sym">=</span>? x #\newline<span class="sym">) (+</span> nl <span class="num">1</span><span class="sym">)</span> nl<span class="sym">)))</span>
			 <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>char<span class="sym">-</span>whitespace? x<span class="sym">)</span>
			     <span class="sym">(</span>wc <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span>char port<span class="sym">)</span> new<span class="sym">-</span>nl <span class="sym">(</span><span class="kwa">if</span> inword <span class="sym">(+</span> nw <span class="num">1</span><span class="sym">)</span> nw<span class="sym">) (+</span> nc <span class="num">1</span><span class="sym">)</span> #f<span class="sym">)</span>
			     <span class="sym">(</span>wc <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span>char port<span class="sym">)</span> new<span class="sym">-</span>nl nw <span class="sym">(+</span> nc <span class="num">1</span><span class="sym">)</span> #t<span class="sym">)))))))</span>
      <span class="sym">(</span>wc <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span>char port<span class="sym">)</span> <span class="num">0 0 0</span> #f<span class="sym">))))</span>

<span class="sym">(</span>wcport <span class="sym">(</span>current<span class="sym">-</span>input<span class="sym">-</span>port<span class="sym">))</span>
