<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/mzscheme -r

(require (lib <B><FONT COLOR="#BC8F8F">&quot;etc.ss&quot;</FONT></B>))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B>)
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ([n (string-&gt;number (vector-ref argv 0))]
	 [hash1 (make-hash-table 'equal)]
	 [hash2 (make-hash-table 'equal)]
	 [seq (build-list 10000 identity)]
	 [nseq (build-list n identity)]
	 [zero (<B><FONT COLOR="#A020F0">lambda</FONT></B> () 0)])
    (for-each (<B><FONT COLOR="#A020F0">lambda</FONT></B> (item)
		(hash-table-put! hash1 (string-append <B><FONT COLOR="#BC8F8F">&quot;foo_&quot;</FONT></B> (number-&gt;string
item)) item))
	      seq)
    (for-each (<B><FONT COLOR="#A020F0">lambda</FONT></B> (item)
		(hash-table-for-each hash1 (<B><FONT COLOR="#A020F0">lambda</FONT></B> (key value)
					     (hash-table-put! hash2 key (+
(hash-table-get hash2 key zero) value)))))
	      nseq)
    (printf <B><FONT COLOR="#BC8F8F">&quot;~s ~s ~s ~s~n&quot;</FONT></B>
	    (hash-table-get hash1 <B><FONT COLOR="#BC8F8F">&quot;foo_1&quot;</FONT></B>)
	    (hash-table-get hash1 <B><FONT COLOR="#BC8F8F">&quot;foo_9999&quot;</FONT></B>)
	    (hash-table-get hash2 <B><FONT COLOR="#BC8F8F">&quot;foo_1&quot;</FONT></B>)
	    (hash-table-get hash2 <B><FONT COLOR="#BC8F8F">&quot;foo_9999&quot;</FONT></B>))))

(main)</pre></td></tr></table>
