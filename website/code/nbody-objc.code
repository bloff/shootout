<span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Josh Goldfoot</span>
<span class="com">   based on the C# by Isaac Guoy</span>
<span class="com">   use -std=gnu99 in gcc's arguments</span>
<span class="com">*/</span>

<span class="dir">#include &lt;math.h&gt;</span>
<span class="dir">#include &lt;objc/Object.h&gt;</span>
<span class="dir">#include &lt;stdio.h&gt;</span>
<span class="dir">#include &lt;stdlib.h&gt;</span>

<span class="kwb">const double</span> PI <span class="sym">=</span> <span class="num">3.141592653589793</span><span class="sym">;</span>
<span class="kwb">const double</span> SOLAR_MASS <span class="sym">=</span> <span class="num">39.478417604357432</span><span class="sym">;</span> <span class="slc">// 4 * PI * PI;</span>
<span class="kwb">const double</span> DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span><span class="sym">;</span>

<span class="kwa">&#64;interface</span> Body <span class="sym">:</span> Object <span class="sym">{</span>
    <span class="kwa">&#64;public</span>
    <span class="kwb">double</span> x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">,</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> mass<span class="sym">;</span>
<span class="sym">}</span>
<span class="sym">-</span>offsetMomentum <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> px <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> py <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> pz<span class="sym">;</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;interface</span> Jupiter <span class="sym">:</span> Body <span class="sym">{</span>
<span class="sym">}</span>
<span class="sym">-</span>init<span class="sym">;</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;interface</span> Saturn <span class="sym">:</span> Body <span class="sym">{</span>
<span class="sym">}</span>
<span class="sym">-</span>init<span class="sym">;</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;interface</span> Uranus <span class="sym">:</span> Body <span class="sym">{</span>
<span class="sym">}</span>
<span class="sym">-</span>init<span class="sym">;</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;interface</span> Neptune <span class="sym">:</span> Body <span class="sym">{</span>
<span class="sym">}</span>
<span class="sym">-</span>init<span class="sym">;</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;interface</span> Sun <span class="sym">:</span> Body <span class="sym">{</span>
<span class="sym">}</span>
<span class="sym">-</span>init<span class="sym">;</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;interface</span> NBodySystem <span class="sym">:</span> Object <span class="sym">{</span>
    Body<span class="sym">**</span> bodies<span class="sym">;</span>
<span class="sym">}</span>
<span class="sym">-</span>init<span class="sym">;</span>
<span class="sym">-</span>advance <span class="sym">: (</span><span class="kwb">int</span><span class="sym">)</span> n <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> dt<span class="sym">;</span>
<span class="sym">-(</span><span class="kwb">double</span><span class="sym">)</span> energy<span class="sym">;</span>
<span class="kwa">&#64;end</span>

<span class="kwa">&#64;implementation</span> Body
<span class="sym">-</span>offsetMomentum <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> px <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> py <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> pz <span class="sym">{</span>
    vx <span class="sym">= -</span>px <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
    vy <span class="sym">= -</span>py <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
    vz <span class="sym">= -</span>pz <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;implementation</span> Jupiter
<span class="sym">-</span>init <span class="sym">{</span>
    x <span class="sym">=</span> <span class="num">4.84143144246472090e+00</span><span class="sym">;</span>
    y <span class="sym">= -</span><span class="num">1.16032004402742839e+00</span><span class="sym">;</span>
    z <span class="sym">= -</span><span class="num">1.03622044471123109e-01</span><span class="sym">;</span>
    vx <span class="sym">=</span> <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vy <span class="sym">=</span> <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vz <span class="sym">= -</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    mass <span class="sym">=</span> <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;implementation</span> Saturn
<span class="sym">-</span>init <span class="sym">{</span>
    x <span class="sym">=</span> <span class="num">8.34336671824457987e+00</span><span class="sym">;</span>
    y <span class="sym">=</span> <span class="num">4.12479856412430479e+00</span><span class="sym">;</span>
    z <span class="sym">= -</span><span class="num">4.03523417114321381e-01</span><span class="sym">;</span>
    vx <span class="sym">= -</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vy <span class="sym">=</span> <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vz <span class="sym">=</span> <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    mass <span class="sym">=</span> <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;implementation</span> Uranus
<span class="sym">-</span>init <span class="sym">{</span>
    x <span class="sym">=</span> <span class="num">1.28943695621391310e+01</span><span class="sym">;</span>
    y <span class="sym">= -</span><span class="num">1.51111514016986312e+01</span><span class="sym">;</span>
    z <span class="sym">= -</span><span class="num">2.23307578892655734e-01</span><span class="sym">;</span>
    vx <span class="sym">=</span> <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vy <span class="sym">=</span> <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vz <span class="sym">= -</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    mass <span class="sym">=</span> <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;implementation</span> Neptune
<span class="sym">-</span>init <span class="sym">{</span>
    x <span class="sym">=</span> <span class="num">1.53796971148509165e+01</span><span class="sym">;</span>
    y <span class="sym">= -</span><span class="num">2.59193146099879641e+01</span><span class="sym">;</span>
    z <span class="sym">=</span> <span class="num">1.79258772950371181e-01</span><span class="sym">;</span>
    vx <span class="sym">=</span> <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vy <span class="sym">=</span> <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    vz <span class="sym">= -</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;</span>
    mass <span class="sym">=</span> <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;implementation</span> Sun
<span class="sym">-</span>init <span class="sym">{</span>
    mass <span class="sym">=</span> SOLAR_MASS<span class="sym">;</span>
    x <span class="sym">=</span> y <span class="sym">=</span> z <span class="sym">=</span> vx <span class="sym">=</span> vy <span class="sym">=</span> vz <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="kwa">&#64;end</span>
<span class="kwa">&#64;implementation</span> NBodySystem
<span class="sym">-</span>init <span class="sym">{</span>
    <span class="kwb">double</span> px<span class="sym">,</span> py<span class="sym">,</span> pz<span class="sym">;</span>
    bodies <span class="sym">= (</span>Body<span class="sym">**)</span> <span class="kwd">malloc</span><span class="sym">(</span><span class="num">5</span> <span class="sym">*</span> <span class="kwa">sizeof</span><span class="sym">(</span>Body<span class="sym">*));</span>
    bodies<span class="sym">[</span><span class="num">0</span><span class="sym">] = [[</span>Sun alloc<span class="sym">]</span> init<span class="sym">];</span>
    bodies<span class="sym">[</span><span class="num">1</span><span class="sym">] = [[</span>Jupiter alloc<span class="sym">]</span> init<span class="sym">];</span>
    bodies<span class="sym">[</span><span class="num">2</span><span class="sym">] = [[</span>Saturn alloc<span class="sym">]</span> init<span class="sym">];</span>
    bodies<span class="sym">[</span><span class="num">3</span><span class="sym">] = [[</span>Uranus alloc<span class="sym">]</span> init<span class="sym">];</span>
    bodies<span class="sym">[</span><span class="num">4</span><span class="sym">] = [[</span>Neptune alloc<span class="sym">]</span> init<span class="sym">];</span>
    px <span class="sym">=</span> py <span class="sym">=</span> pz <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
    <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">5</span><span class="sym">;</span> i<span class="sym">++) {</span>
        px <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass<span class="sym">;</span>
        py <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass<span class="sym">;</span>
        pz <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass<span class="sym">;</span>
    <span class="sym">}</span>
    <span class="sym">[</span>bodies<span class="sym">[</span><span class="num">0</span><span class="sym">]</span> offsetMomentum <span class="sym">:</span> px <span class="sym">:</span> py <span class="sym">:</span> pz<span class="sym">];</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="sym">-</span>advance <span class="sym">: (</span><span class="kwb">int</span><span class="sym">)</span> n <span class="sym">: (</span><span class="kwb">double</span><span class="sym">)</span> dt <span class="sym">{</span>
    <span class="kwb">double</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">,</span> mag<span class="sym">;</span>
    <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> count <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> count <span class="sym">&lt;</span> n<span class="sym">;</span> count<span class="sym">++) {</span>
        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">5</span><span class="sym">;</span> i<span class="sym">++) {</span>
            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> <span class="num">5</span><span class="sym">;</span> j<span class="sym">++) {</span>
                dx <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>x <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>x<span class="sym">;</span>
                dy <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>y <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>y<span class="sym">;</span>
                dz <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>z <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>z<span class="sym">;</span>

                distance <span class="sym">=</span> <span class="kwd">sqrt</span><span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);</span>
                mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">);</span>

                bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vx <span class="sym">-=</span> dx <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
                bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vy <span class="sym">-=</span> dy <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
                bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vz <span class="sym">-=</span> dz <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>

                bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>vx <span class="sym">+=</span> dx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
                bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>vy <span class="sym">+=</span> dy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
                bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>vz <span class="sym">+=</span> dz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
            <span class="sym">}</span>
        <span class="sym">}</span>
        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">5</span><span class="sym">;</span> i<span class="sym">++) {</span>
            bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>x <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vx<span class="sym">;</span>
            bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>y <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vy<span class="sym">;</span>
            bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>z <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vz<span class="sym">;</span>
        <span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">return self</span><span class="sym">;</span>
<span class="sym">}</span>
<span class="sym">-(</span><span class="kwb">double</span><span class="sym">)</span> energy <span class="sym">{</span>
    <span class="kwb">double</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">;</span>
    <span class="kwb">double</span> e <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>

    <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">5</span><span class="sym">;</span> i<span class="sym">++) {</span>
     e <span class="sym">+=</span> <span class="num">0.5</span> <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass <span class="sym">*</span>
        <span class="sym">(</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vx
        <span class="sym">+</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vy
        <span class="sym">+</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>vz <span class="sym">);</span>

     <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> <span class="num">5</span><span class="sym">;</span> j<span class="sym">++) {</span>
        dx <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>x <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>x<span class="sym">;</span>
        dy <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>y <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>y<span class="sym">;</span>
        dz <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>z <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>z<span class="sym">;</span>

        distance <span class="sym">=</span> <span class="kwd">sqrt</span><span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);</span>
        e <span class="sym">-= (</span>bodies<span class="sym">[</span>i<span class="sym">]-&gt;</span>mass <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">]-&gt;</span>mass<span class="sym">) /</span> distance<span class="sym">;</span>
     <span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">return</span> e<span class="sym">;</span>
<span class="sym">}</span>
<span class="kwa">&#64;end</span>

<span class="kwb">int</span> <span class="kwd">main</span> <span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span> argv<span class="sym">[]) {</span>
    <span class="kwb">int</span> n <span class="sym">= (</span>argc<span class="sym">&gt;</span><span class="num">1</span><span class="sym">)</span> ? <span class="kwd">atoi</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1000</span><span class="sym">;</span>
    NBodySystem<span class="sym">*</span> sys <span class="sym">= [[</span>NBodySystem alloc<span class="sym">]</span> init<span class="sym">];</span>
    <span class="kwd">printf</span> <span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, [</span>sys energy<span class="sym">]);</span>
    <span class="sym">[</span>sys advance <span class="sym">:</span> n <span class="sym">:</span> <span class="num">0.01</span><span class="sym">];</span>
    <span class="kwd">printf</span> <span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, [</span>sys energy<span class="sym">]);</span>
<span class="sym">}</span>



