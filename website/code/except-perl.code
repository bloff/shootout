<span class="line">    1 </span><span class="slc">#!/usr/bin/perl
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: except-perl.code,v 1.4 2004-11-13 07:41:32 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">use</span> integer<span class="sym">;
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym"></span><span class="kwc">my</span> <span class="kwb">$HI</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym"></span><span class="kwc">my</span> <span class="kwb">$LO</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">    9 </span><span class="sym"></span><span class="kwc">my</span> <span class="kwb">$NUM</span> <span class="sym">=</span> <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">];
</span><span class="line">   10 </span><span class="sym"></span><span class="kwb">$NUM</span> <span class="sym">=</span> <span class="num">1</span> <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$NUM</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">);
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym"></span><span class="kwa">package</span> Lo_Exception<span class="sym">;
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span><span class="kwa">sub</span> new <span class="sym">{
</span><span class="line">   15 </span><span class="sym"></span>    bless<span class="sym">({</span>Val <span class="sym">=&gt;</span> shift<span class="sym">},</span> __PACKAGE__<span class="sym">);
</span><span class="line">   16 </span><span class="sym">}
</span><span class="line">   17 </span><span class="sym">
</span><span class="line">   18 </span><span class="sym"></span><span class="kwa">package</span> Hi_Exception<span class="sym">;
</span><span class="line">   19 </span><span class="sym">
</span><span class="line">   20 </span><span class="sym"></span><span class="kwa">sub</span> new <span class="sym">{
</span><span class="line">   21 </span><span class="sym"></span>    bless<span class="sym">({</span>Val <span class="sym">=&gt;</span> shift<span class="sym">},</span> __PACKAGE__<span class="sym">);
</span><span class="line">   22 </span><span class="sym">}
</span><span class="line">   23 </span><span class="sym">
</span><span class="line">   24 </span><span class="sym"></span><span class="kwa">package</span> main<span class="sym">;
</span><span class="line">   25 </span><span class="sym">
</span><span class="line">   26 </span><span class="sym"></span><span class="kwa">sub</span> some_function <span class="sym">{
</span><span class="line">   27 </span><span class="sym"></span>    <span class="kwc">my</span> <span class="kwb">$num</span> <span class="sym">=</span> shift<span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>    eval <span class="sym">{
</span><span class="line">   29 </span><span class="sym">        &amp;</span>hi_function<span class="sym">(</span><span class="kwb">$num</span><span class="sym">);
</span><span class="line">   30 </span><span class="sym">    };
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$</span>&#64;<span class="sym">) {
</span><span class="line">   32 </span><span class="sym"></span>        die <span class="str">&quot;We shouldn't get here ($&#64;)&quot;</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym">    }
</span><span class="line">   34 </span><span class="sym">}
</span><span class="line">   35 </span><span class="sym">
</span><span class="line">   36 </span><span class="sym"></span><span class="kwa">sub</span> hi_function <span class="sym">{
</span><span class="line">   37 </span><span class="sym"></span>    <span class="kwc">my</span> <span class="kwb">$num</span> <span class="sym">=</span> shift<span class="sym">;
</span><span class="line">   38 </span><span class="sym"></span>    eval <span class="sym">{
</span><span class="line">   39 </span><span class="sym">        &amp;</span>lo_function<span class="sym">(</span><span class="kwb">$num</span><span class="sym">);
</span><span class="line">   40 </span><span class="sym">    };
</span><span class="line">   41 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>ref<span class="sym">(</span><span class="kwb">$</span>&#64;<span class="sym">)</span> <span class="kwa">eq</span> <span class="str">&quot;Hi_Exception&quot;</span><span class="sym">) {
</span><span class="line">   42 </span><span class="sym"></span>        <span class="kwb">$HI</span><span class="sym">++;</span>                <span class="slc"># handle
</span><span class="line">   43 </span><span class="slc"></span>    <span class="sym">}</span> <span class="kwa">elsif</span> <span class="sym">(</span><span class="kwb">$</span>&#64;<span class="sym">) {
</span><span class="line">   44 </span><span class="sym"></span>        die <span class="kwb">$</span>&#64;<span class="sym">;</span>                <span class="slc"># rethrow
</span><span class="line">   45 </span><span class="slc"></span>    <span class="sym">}
</span><span class="line">   46 </span><span class="sym">}
</span><span class="line">   47 </span><span class="sym">
</span><span class="line">   48 </span><span class="sym"></span><span class="kwa">sub</span> lo_function <span class="sym">{
</span><span class="line">   49 </span><span class="sym"></span>    <span class="kwc">my</span> <span class="kwb">$num</span> <span class="sym">=</span> shift<span class="sym">;
</span><span class="line">   50 </span><span class="sym"></span>    eval <span class="sym">{
</span><span class="line">   51 </span><span class="sym">        &amp;</span>blowup<span class="sym">(</span><span class="kwb">$num</span><span class="sym">);
</span><span class="line">   52 </span><span class="sym">    };
</span><span class="line">   53 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>ref<span class="sym">(</span><span class="kwb">$</span>&#64;<span class="sym">)</span> <span class="kwa">eq</span> <span class="str">&quot;Lo_Exception&quot;</span><span class="sym">) {
</span><span class="line">   54 </span><span class="sym"></span>        <span class="kwb">$LO</span><span class="sym">++;</span>                <span class="slc"># handle
</span><span class="line">   55 </span><span class="slc"></span>    <span class="sym">}</span> <span class="kwa">elsif</span> <span class="sym">(</span><span class="kwb">$</span>&#64;<span class="sym">) {
</span><span class="line">   56 </span><span class="sym"></span>        die <span class="kwb">$</span>&#64;<span class="sym">;</span>                <span class="slc"># rethrow
</span><span class="line">   57 </span><span class="slc"></span>    <span class="sym">}
</span><span class="line">   58 </span><span class="sym">}
</span><span class="line">   59 </span><span class="sym">
</span><span class="line">   60 </span><span class="sym"></span><span class="kwa">sub</span> blowup <span class="sym">{
</span><span class="line">   61 </span><span class="sym"></span>    <span class="kwc">my</span> <span class="kwb">$num</span> <span class="sym">=</span> shift<span class="sym">;
</span><span class="line">   62 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$num</span> % <span class="num">2</span><span class="sym">) {
</span><span class="line">   63 </span><span class="sym"></span>        die Lo_Exception<span class="sym">-&gt;</span>new<span class="sym">(</span>Num <span class="sym">=&gt;</span> <span class="kwb">$num</span><span class="sym">);
</span><span class="line">   64 </span><span class="sym">    }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   65 </span><span class="sym"></span>        die Hi_Exception<span class="sym">-&gt;</span>new<span class="sym">(</span>Num <span class="sym">=&gt;</span> <span class="kwb">$num</span><span class="sym">);
</span><span class="line">   66 </span><span class="sym">    }
</span><span class="line">   67 </span><span class="sym">}
</span><span class="line">   68 </span><span class="sym">
</span><span class="line">   69 </span><span class="sym"></span><span class="kwb">$NUM</span> <span class="sym">=</span> <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">];
</span><span class="line">   70 </span><span class="sym"></span><span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$NUM</span><span class="sym">--) {
</span><span class="line">   71 </span><span class="sym">    &amp;</span>some_function<span class="sym">(</span><span class="kwb">$NUM</span><span class="sym">);
</span><span class="line">   72 </span><span class="sym">}
</span><span class="line">   73 </span><span class="sym"></span>print <span class="str">&quot;Exceptions: HI=$HI / LO=$LO</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
