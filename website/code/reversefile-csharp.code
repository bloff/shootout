<span class="line">    1 </span><span class="slc">// $Id: reversefile-csharp.code,v 1.3 2004-11-11 07:14:06 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">//
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">// This is a straightforward *alternative* C# implementation.
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">// It'll be interesting to compare it to a fast C# implementation.
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">//
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">// contributed by Isaac Gouy
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="kwa">using</span> System<span class="sym">;
</span><span class="line">   10 </span><span class="sym"></span><span class="kwa">using</span> System<span class="sym">.</span>Collections<span class="sym">;
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym"></span><span class="kwc">class</span> reversefile
<span class="line">   13 </span><span class="sym">{
</span><span class="line">   14 </span><span class="sym">    [</span>STAThread<span class="sym">]
</span><span class="line">   15 </span><span class="sym"></span>    <span class="kwb">static void</span> Main<span class="sym">(</span>string<span class="sym">[]</span> args<span class="sym">)
</span><span class="line">   16 </span><span class="sym">    {
</span><span class="line">   17 </span><span class="sym"></span>        Stack lines <span class="sym">=</span> <span class="kwa">new</span> Stack<span class="sym">();
</span><span class="line">   18 </span><span class="sym"></span>        String line<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">( (</span>line <span class="sym">=</span> Console<span class="sym">.</span>ReadLine<span class="sym">()) !=</span> null <span class="sym">)</span> lines<span class="sym">.</span>Push<span class="sym">(</span>line<span class="sym">);
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym"></span>        System<span class="sym">.</span>Collections<span class="sym">.</span>IEnumerator items <span class="sym">=</span> lines<span class="sym">.</span>GetEnumerator<span class="sym">();
</span><span class="line">   22 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">(</span> items<span class="sym">.</span>MoveNext<span class="sym">() ) {
</span><span class="line">   23 </span><span class="sym"></span>            Console<span class="sym">.</span>WriteLine<span class="sym">(</span> items<span class="sym">.</span>Current <span class="sym">);
</span><span class="line">   24 </span><span class="sym">        }
</span><span class="line">   25 </span><span class="sym">    }
</span><span class="line">   26 </span><span class="sym">}</span>
