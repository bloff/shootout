<span class="line">    1 </span><span class="slc">%%% -*- mode: erlang -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%%% $Id: sumcol-hipe.code,v 1.3 2004-11-11 07:14:19 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%%% http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">%%%
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">%%% Contributed by Bengt Kleberg (Erlang Guru!)
</span><span class="line">    6 </span><span class="slc"></span>
<span class="line">    7 </span><span class="sym">-</span>module<span class="sym">(</span>sumcol<span class="sym">)</span>.
<span class="line">    8 </span><span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.
<span class="line">    9 </span>
<span class="line">   10 </span><span class="slc">%% get the program argument, which is how many test iterations to run
</span><span class="line">   11 </span><span class="slc"></span><span class="slc">%% for this test, we ignore this parameter
</span><span class="line">   12 </span><span class="slc"></span>main<span class="sym">() -&gt;</span> main<span class="sym">([</span><span class="str">'1'</span><span class="sym">])</span>.
<span class="line">   13 </span>main<span class="sym">(</span>_Args<span class="sym">) -&gt;
</span><span class="line">   14 </span><span class="sym"></span>    Sum <span class="sym">=</span> sumcol<span class="sym">(</span> io<span class="sym">:</span>fread<span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~d&quot;</span><span class="sym">),</span> <span class="num">0</span><span class="sym">),
</span><span class="line">   15 </span><span class="sym"></span>    io<span class="sym">:</span>format<span class="sym">(</span> <span class="str">&quot;~w~n&quot;</span><span class="sym">, [</span>Sum<span class="sym">] ),
</span><span class="line">   16 </span><span class="sym"></span>    <span class="kwb">halt</span><span class="sym">()</span>.
<span class="line">   17 </span>
<span class="line">   18 </span>sumcol<span class="sym">(</span>eof<span class="sym">,</span> Sum<span class="sym">) -&gt;</span>    Sum<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>sumcol<span class="sym">({</span>ok<span class="sym">, [</span>Integer<span class="sym">]},</span> Sum<span class="sym">) -&gt;
</span><span class="line">   20 </span><span class="sym"></span>    sumcol<span class="sym">(</span> io<span class="sym">:</span>fread<span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~d&quot;</span><span class="sym">),</span> Sum <span class="sym">+</span> Integer<span class="sym">)</span>.
<span class="line">   21 </span>
