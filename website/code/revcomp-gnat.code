<span class="slc">-- $Id: revcomp-gnat.code,v 1.1 2005-03-21 03:34:33 bfulgham Exp $
</span><span class="slc">-- http://dada.perl.it/shootout/
</span><span class="slc">-- Contributed by Pascal Obry on 2005/03/19
</span>
<span class="kwa">with</span> Ada.Strings.Fixed<span class="sym">;</span>       <span class="kwa">use</span> Ada.Strings.Fixed<span class="sym">;
</span><span class="kwa">with</span> Ada.Strings.Maps<span class="sym">;</span>        <span class="kwa">use</span> Ada.Strings.Maps<span class="sym">;
</span><span class="kwa">with</span> Ada.Text_IO<span class="sym">;</span>             <span class="kwa">use</span> Ada.Text_IO<span class="sym">;
</span><span class="kwa">with</span> Ada.Strings.Unbounded<span class="sym">;</span>   <span class="kwa">use</span> Ada.Strings.Unbounded<span class="sym">;

</span><span class="kwa">procedure</span> Reverse_Complement <span class="kwa">is

</span>   Line_Length <span class="sym">:</span> <span class="kwa">constant</span> <span class="sym">:=</span> <span class="num">60</span><span class="sym">;

</span>   Comp_Values <span class="sym">:</span> <span class="kwa">constant</span> Character_Mapping <span class="sym">:=
</span>     To_Mapping
       <span class="sym">(</span>From <span class="sym">=&gt;</span> <span class="str">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="sym">,
</span>        To   <span class="sym">=&gt;</span> <span class="str">&quot;TVGHEFCDIJMLKNOPQYSAUBWXRZTVGHEFCDIJMLKNOPQYSAUBWXRZ&quot;</span><span class="sym">);

</span>   <span class="kwa">procedure</span> Write_Reverse_Fasta
     <span class="sym">(</span>Desc <span class="sym">:</span> <span class="kwa">in</span> <span class="kwb">String</span><span class="sym">;</span> Str <span class="sym">:</span> <span class="kwa">in</span> Unbounded_String<span class="sym">)
</span>   <span class="kwa">is
</span>      S <span class="sym">:</span> <span class="kwb">String</span>  <span class="sym">:=</span> To_String <span class="sym">(</span>Str<span class="sym">);
</span>      I <span class="sym">:</span> <span class="kwb">Integer</span> <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span>      M <span class="sym">:</span> <span class="kwb">Integer</span> <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span>      J <span class="sym">:</span> <span class="kwb">Integer</span> <span class="sym">:=</span> S<span class="sym">'</span>Last<span class="sym">;
</span>   <span class="kwa">begin
</span>      Translate <span class="sym">(</span>S<span class="sym">,</span> Comp_Values<span class="sym">);
</span>      Put_Line <span class="sym">(</span>Desc<span class="sym">);

</span>      <span class="kwa">while</span> I <span class="sym">&lt;=</span> S<span class="sym">'</span>Last <span class="kwa">loop
</span>         M <span class="sym">:=</span> M <span class="sym">+</span> Line_length<span class="sym">;
</span>         <span class="kwa">if</span> S<span class="sym">'</span>Last <span class="sym">&lt;</span> M <span class="kwa">then
</span>            M <span class="sym">:=</span> S<span class="sym">'</span>Last<span class="sym">;
</span>         <span class="kwa">end if</span><span class="sym">;

</span>         <span class="kwa">while</span> I <span class="sym">&lt;=</span> M <span class="kwa">loop
</span>            Put <span class="sym">(</span>S <span class="sym">(</span>J<span class="sym">));
</span>            J <span class="sym">:=</span> J <span class="num">- 1</span><span class="sym">;
</span>            I <span class="sym">:=</span> I <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span>         <span class="kwa">end loop</span><span class="sym">;
</span>         New_Line<span class="sym">;
</span>      <span class="kwa">end loop</span><span class="sym">;
</span>   <span class="kwa">end</span> Write_Reverse_Fasta<span class="sym">;

</span>   Line <span class="sym">:</span> <span class="kwb">String</span> <span class="sym">(</span><span class="num">1</span> .. Line_Length<span class="sym">);
</span>   Last <span class="sym">:</span> <span class="kwb">Natural</span><span class="sym">;

</span>   Desc <span class="sym">:</span> Unbounded_String<span class="sym">;
</span>   Str  <span class="sym">:</span> Unbounded_String<span class="sym">;
</span><span class="kwa">begin
   while not</span> End_Of_File <span class="kwa">loop
</span>      Get_Line <span class="sym">(</span>Line<span class="sym">,</span> Last<span class="sym">);

</span>      <span class="kwa">if</span> Line <span class="sym">(</span><span class="num">1</span><span class="sym">) = '&gt;'</span> <span class="kwa">then
         if</span> Desc <span class="sym">/=</span> Null_Unbounded_String <span class="kwa">then
</span>            Write_Reverse_Fasta <span class="sym">(</span>To_String <span class="sym">(</span>Desc<span class="sym">),</span> Str<span class="sym">);
</span>            Str <span class="sym">:=</span> Null_Unbounded_String<span class="sym">;
</span>         <span class="kwa">end if</span><span class="sym">;

</span>         Desc <span class="sym">:=</span> To_Unbounded_String <span class="sym">(</span>Line <span class="sym">(</span><span class="num">1</span> .. Last<span class="sym">));

</span>      <span class="kwa">elsif</span> Line <span class="sym">(</span><span class="num">1</span><span class="sym">) /= ';'</span> <span class="kwa">then
</span>         Append <span class="sym">(</span>Str<span class="sym">,</span> Line <span class="sym">(</span><span class="num">1</span> .. Last<span class="sym">));
</span>      <span class="kwa">end if</span><span class="sym">;
</span>   <span class="kwa">end loop</span><span class="sym">;

</span>   <span class="kwa">if</span> Desc <span class="sym">/=</span> Null_Unbounded_String <span class="kwa">then
</span>      Write_Reverse_Fasta <span class="sym">(</span>To_String <span class="sym">(</span>Desc<span class="sym">),</span> Str<span class="sym">);
</span>   <span class="kwa">end if</span><span class="sym">;
</span><span class="kwa">end</span> Reverse_Complement<span class="sym">;
</span>
