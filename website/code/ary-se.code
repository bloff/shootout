<span class="line">    1 </span><span class="slc">-- -*- mode: eiffel -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: ary-se.code,v 1.4 2004-11-13 07:41:28 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="slc">-- Friedrich Dominicus points out that it is about twice as fast
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">-- when we substitute NATIVE_ARRAY for ARRAY.  I've commented out
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">-- my original code below and now use NATIVE_ARRAY.
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="kwa">class</span> ARY
<span class="line">   10 </span>
<span class="line">   11 </span>creation make
<span class="line">   12 </span>
<span class="line">   13 </span><span class="kwa">feature
</span><span class="line">   14 </span><span class="kwa">
</span><span class="line">   15 </span><span class="kwa"></span>   make <span class="kwa">is
</span><span class="line">   16 </span><span class="kwa">
</span><span class="line">   17 </span><span class="kwa">      local
</span><span class="line">   18 </span><span class="kwa"></span>         x<span class="sym">:</span> NATIVE_ARRAY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">];
</span><span class="line">   19 </span><span class="sym"></span>         y<span class="sym">:</span> NATIVE_ARRAY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">];
</span><span class="line">   20 </span><span class="sym"></span><span class="slc">--         x: ARRAY[INTEGER];
</span><span class="line">   21 </span><span class="slc"></span><span class="slc">--         y: ARRAY[INTEGER];
</span><span class="line">   22 </span><span class="slc"></span>         i<span class="sym">,</span>k<span class="sym">,</span>n<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>      <span class="kwa">do
</span><span class="line">   24 </span><span class="kwa">         if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then
</span><span class="line">   25 </span><span class="kwa"></span>            n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
<span class="line">   26 </span>         <span class="kwa">else
</span><span class="line">   27 </span><span class="kwa"></span>            n <span class="sym">:=</span> <span class="num">1
</span><span class="line">   28 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   29 </span><span class="kwa">
</span><span class="line">   30 </span><span class="kwa"></span>         x <span class="sym">:=</span> x.calloc<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   31 </span><span class="sym"></span>         y <span class="sym">:=</span> y.calloc<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   32 </span><span class="sym"></span><span class="slc">--         !!x.make(0,n)
</span><span class="line">   33 </span><span class="slc"></span><span class="slc">--         !!y.make(0,n)
</span><span class="line">   34 </span><span class="slc"></span>
<span class="line">   35 </span>         <span class="kwa">from
</span><span class="line">   36 </span><span class="kwa"></span>            i <span class="sym">:=</span> <span class="num">0
</span><span class="line">   37 </span><span class="num"></span>         until
<span class="line">   38 </span>            i <span class="sym">=</span> n
<span class="line">   39 </span>         <span class="kwa">loop
</span><span class="line">   40 </span><span class="kwa"></span>            x.put<span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> i<span class="sym">)
</span><span class="line">   41 </span><span class="sym"></span>            i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span><span class="line">   42 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   43 </span><span class="kwa">         from
</span><span class="line">   44 </span><span class="kwa"></span>            k <span class="sym">:=</span> <span class="num">0
</span><span class="line">   45 </span><span class="num"></span>         until
<span class="line">   46 </span>            k <span class="sym">=</span> <span class="num">1000
</span><span class="line">   47 </span><span class="num"></span>         <span class="kwa">loop
</span><span class="line">   48 </span><span class="kwa">            from
</span><span class="line">   49 </span><span class="kwa"></span>               i <span class="sym">:=</span> n<span class="num">-1
</span><span class="line">   50 </span><span class="num"></span>            until
<span class="line">   51 </span>               i <span class="sym">&lt;</span> <span class="num">0
</span><span class="line">   52 </span><span class="num"></span>            <span class="kwa">loop
</span><span class="line">   53 </span><span class="kwa"></span>               y.put<span class="sym">(</span>x.item<span class="sym">(</span>i<span class="sym">) +</span> y.item<span class="sym">(</span>i<span class="sym">),</span>i<span class="sym">)
</span><span class="line">   54 </span><span class="sym"></span>               i <span class="sym">:=</span> i <span class="num">- 1
</span><span class="line">   55 </span><span class="num"></span>            <span class="kwa">end
</span><span class="line">   56 </span><span class="kwa"></span>            k <span class="sym">:=</span> k <span class="sym">+</span> <span class="num">1
</span><span class="line">   57 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   58 </span><span class="kwa">
</span><span class="line">   59 </span><span class="kwa"></span>         std_output.put_integer<span class="sym">(</span>y.item<span class="sym">(</span><span class="num">0</span><span class="sym">))
</span><span class="line">   60 </span><span class="sym"></span>         std_output.put_character<span class="sym">(</span><span class="str">' '</span><span class="sym">)
</span><span class="line">   61 </span><span class="sym"></span>         std_output.put_integer<span class="sym">(</span>y.item<span class="sym">(</span>n<span class="num">-1</span><span class="sym">))
</span><span class="line">   62 </span><span class="sym"></span>         std_output.put_character<span class="sym">(</span><span class="str">'%N'</span><span class="sym">)
</span><span class="line">   63 </span><span class="sym"></span>      <span class="kwa">end
</span><span class="line">   64 </span><span class="kwa">end</span>
