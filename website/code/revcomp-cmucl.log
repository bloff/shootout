BUILD COMMANDS FOR: revcomp.cmucl

Sun Jan 14 01:20:48 PST 2007

CMUCL built with: /usr/bin/lisp -noinit -batch -eval '(load "revcomp.cmucl_compile")'
### START revcomp.cmucl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(asdf:operate 'asdf:load-op 'cl-ppcre)
(compile-file "revcomp.cmucl" :block-compile t  :entry-points '(main))
(quit)
### END revcomp.cmucl_compile

; Loading #P"/opt/shootout/shootout/bench/revcomp/tmp/revcomp.cmucl_compile".
; loading system definition from /usr/share/common-lisp/systems/cl-ppcre.asd
; into #<The ASDF0 package>
;; Loading #P"/usr/share/common-lisp/source/cl-ppcre/cl-ppcre.asd".
; registering #<SYSTEM #:CL-PPCRE {5812B2B5}> as CL-PPCRE
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/packages.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/specials.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/util.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/errors.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/lexer.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/parser.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/regex-class.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/convert.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/optimize.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/closures.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/repetition-closures.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/scanner.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/api.x86f".
; [GC threshold exceeded with 12,011,912 bytes in use.  Commencing GC.]
; [GC completed with 1,596,928 bytes retained and 10,414,984 bytes freed.]
; [GC will next occur when at least 13,596,928 bytes are in use.]

; Python version 1.1, VM version Intel x86 on 14 JAN 07 01:20:49 am.
; Compiling: /opt/shootout/shootout/bench/revcomp/tmp/revcomp.cmucl 14 JAN 07 01:20:48 am

; Converted MAIN.
; Compiling DEFCONSTANT +LUT+: 
; Compiling DEFUN MAIN: 

; 
; 
; File: /opt/shootout/shootout/bench/revcomp/tmp/revcomp.cmucl

; In: DEFUN MAIN

;   (= BYTE 10)
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a FLOAT.
; 
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a (COMPLEX DOUBLE-DOUBLE-FLOAT).
; 
; Note: Unable to open code because:
;     Operands might not be the same type.
; 
;   (INCF EOD)
; --> LET* 
; ==>
;   (+ EOD #:G38)
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a FLOAT.
; 
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a (COMPLEX DOUBLE-DOUBLE-FLOAT).
; 
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a NUMBER, not a DOUBLE-DOUBLE-FLOAT.
; 
;   (AREF CHUNK I)
; --> LET* 
; ==>
;   (KERNEL:DATA-VECTOR-REF ARRAY KERNEL:INDEX)
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a VECTOR, not a SIMPLE-ARRAY.
; 
;   (INCF EOD)
; --> LET* 
; ==>
;   (+ EOD #:G38)
; Note: Forced to do GENERIC-+ (cost 10).
;     Unable to do inline fixnum arithmetic (cost 1) because:
;     The first argument is a NUMBER, not a FIXNUM.
;     The result is a NUMBER, not a FIXNUM.
;     Unable to do inline fixnum arithmetic (cost 2) because:
;     The first argument is a NUMBER, not a FIXNUM.
;     The result is a NUMBER, not a FIXNUM.
;     etc.
; 
;   (AREF CHUNK I)
; --> LET* 
; ==>
;   (KERNEL:DATA-VECTOR-REF ARRAY KERNEL:INDEX)
; Note: Forced to do full call.
;     Unable to do inline array access (cost 5) because:
;     The first argument is a VECTOR, not a (SIMPLE-ARRAY
;                                            (COMPLEX SINGLE-FLOAT) (*)).
;     The result is a T, not a (COMPLEX SINGLE-FLOAT).
;     Unable to do inline array access (cost 5) because:
;     The first argument is a VECTOR, not a (SIMPLE-ARRAY SINGLE-FLOAT (*)).
;     The result is a T, not a SINGLE-FLOAT.
;     etc.
; 
; Byte Compiling Top-Level Form: 
; Byte Compiling Top-Level Form: 

; Compilation unit finished.
;   13 notes


; revcomp.x86f written.
; Compilation finished in 0:00:00.
### START revcomp.cmucl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(setq *gc-verbose* nil)
(load "revcomp.x86f" :verbose nil :print nil)
(main) (quit)
### END revcomp.cmucl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/lisp -noinit -batch -eval '(load "revcomp.cmucl_run" :verbose nil :print nil)' %A
************************************************************
*   TEST (revcomp.cmucl_run) FAILED - ERROR:  revcomp.cmucl_out differs from Output.25000
************************************************************
-rw-r--r-- 1 brent brent     18 2007-01-13 23:57 Output.25000
-rw-r--r-- 1 brent brent 254245 2007-01-14 01:20 revcomp.cmucl_out


PROGRAM OUTPUT
==============
>ONE Homo sapiens alu
GATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGG
CCTTTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGG
CTCACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAG
CTGGGATTACAGGCGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGG
GGTTTCACCATGTTGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCT
CGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACG
GAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCT
CCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGG
CGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGT
TGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAG
TGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTG
TCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCGCCTCCCGGGT
TCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGCGCCACCAC
GCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGGCCAGGCTGGT
CTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACA
GGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGG
AGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTC
CTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGCGCCACCACGCCCGGCTAATTT
TTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGGCCAGGCTGGTCTCGAACTCCTGA
CCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACC
GCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGC
GATCTCGGCTCACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTC
CCGAGTAGCTGGGATTACAGGCGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGT
AGAGACGGGGTTTCACCATGTTGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCC
GCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTT
TTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCAC
TGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGG
ATTACAGGCGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTT
CACCATGTTGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCC
TCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTC
TCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCGCC
TCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGC
GCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGGCC
AGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTG
GGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTGTCGCC
CAGGCTGGAGTGCAGTGGCGCGATCTCGGCTCACTGCAACCTCCGCCTCCCGGGTTCAAG
CGATTCTCCTGCCTCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGCGCCACCACGCCCG
GCTAATTTTTGTATTTTTAGTAGAGACGGGGTTTCACCATGTTGGCCAGGCTGGTCTCGA
ACTCCTGACCTCAGGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGT
GAGCCACCGCGCCCGGCCTTTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGC
AGTGGCGCGATCTCGGCTCACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCC
TCAGCCTCCCGAGTAGCTGGGATTACAGGCGCGCGCCACCACGCCCGGCTAATTTTTGTA
TTTTTAGTAGAGACGGGGTTTCACCATGTTGGCCAGGCTGGTCTCGAACTCCTGACCTCA
GGTGATCCGCCCGCCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCC
CGGCCTTTTTGAGACGGAGTCTCGCTCTGTCGCCCAGGCTGGAGTGCAGTGGCGCGATCT
CGGCTCACTGCAACCTCCGCCTCCCGGGTTCAAGCGATTCTCCTGCCTCAGCCTCCCGAG
TAGCTGGGATTACAGGCGCGCGCCACCACGCCCGGCTAATTTTTGTATTTTTAGTAGAGA
CGGGGTTTCACCATGTTGGCCAGGCTGGTCTCGAACTCCTGACCTCAGGTGATCCGCCCG
CCTCGGCCTCCCAAAGTGCTGGGATTACAGGCGTGAGCCACCGCGCCCGGCCTTTTTGAG
===================================
!!! Note: Truncated to 50 lines !!!
===================================
