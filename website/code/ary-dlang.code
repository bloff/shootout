<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   this program is modified from:</span>
<span class="com">     http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html</span>
<span class="com">   Timing Trials, or, the Trials of Timing: Experiments with Scripting</span>
<span class="com">   and User-Interface Languages&lt;/a&gt; by Brian W. Kernighan and</span>
<span class="com">   Christopher J. Van Wyk.</span>
<span class="com"></span>
<span class="com">   converted to D by Dave Fladebo</span>
<span class="com">   compile: dmd -O -inline -release ary.d</span>
<span class="com">*/</span>

import std<span class="sym">.</span>stdio<span class="sym">,</span> std<span class="sym">.</span>string<span class="sym">;</span>

<span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">char</span><span class="sym">[][]</span> args<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwb">int</span> n <span class="sym">=</span> args<span class="sym">.</span>length <span class="sym">&gt;</span> <span class="num">1</span> ? atoi<span class="sym">(</span>args<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">;</span>

    <span class="kwb">int</span><span class="sym">[]</span> x<span class="sym">,</span> y<span class="sym">;</span>
    x<span class="sym">.</span>length <span class="sym">=</span> y<span class="sym">.</span>length <span class="sym">=</span> n<span class="sym">;</span>

    foreach<span class="sym">(</span><span class="kwb">int</span> i<span class="sym">,</span> inout <span class="kwb">int</span> xi<span class="sym">;</span> x<span class="sym">)</span>
    <span class="sym">{</span>
        xi <span class="sym">=</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> k <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> k <span class="sym">&lt;</span> <span class="num">1000</span><span class="sym">;</span> k<span class="sym">++)</span>
    <span class="sym">{</span>
        <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> n <span class="sym">-</span> <span class="num">1</span><span class="sym">;</span> i <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">;</span> i<span class="sym">--)</span>
        <span class="sym">{</span>
            y<span class="sym">[</span>i<span class="sym">] +=</span> x<span class="sym">[</span>i<span class="sym">];</span>
        <span class="sym">}</span>
    <span class="sym">}</span>

    writefln<span class="sym">(</span>y<span class="sym">[</span><span class="num">0</span><span class="sym">],</span><span class="str">&quot; &quot;</span><span class="sym">,</span>y<span class="sym">[</span>y<span class="sym">.</span>length <span class="sym">-</span> <span class="num">1</span><span class="sym">]);</span>

    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>
