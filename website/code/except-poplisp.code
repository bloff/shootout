<span class="slc">;;; -*- mode: lisp -*-
</span><span class="slc">;;; $Id: except-poplisp.code,v 1.6 2005-05-15 05:34:01 bfulgham Exp $
</span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="slc">;;; From: Friedrich Dominicus
</span>
<span class="sym">(</span>defparameter <span class="sym">*</span>hi<span class="sym">*</span> <span class="num">0</span><span class="sym">)
(</span>defparameter <span class="sym">*</span>lo<span class="sym">*</span> <span class="num">0</span><span class="sym">)

(</span><span class="kwa">defun</span> some<span class="sym">-</span>fun <span class="sym">(</span>n<span class="sym">)
  (</span>catch t
    <span class="sym">(</span>hi<span class="sym">-</span>fun n<span class="sym">)))

(</span><span class="kwa">defun</span> hi<span class="sym">-</span>fun <span class="sym">(</span>n<span class="sym">)
  (</span>catch <span class="str">'Hi_Exception
    (lo-fun n)))

(defun lo-fun (n)
  (catch '</span>Lo_Exception
    <span class="sym">(</span>blow<span class="sym">-</span>up n<span class="sym">)))

(</span><span class="kwa">defun</span> blow<span class="sym">-</span>up <span class="sym">(</span>n<span class="sym">)
  (</span><span class="kwa">if</span> <span class="sym">(</span>evenp n<span class="sym">)
      (</span>throw <span class="str">'Hi_Exception (setf *hi* (1+ *hi*)))
    (throw '</span>Lo_Exception <span class="sym">(</span>setf <span class="sym">*</span>lo<span class="sym">* (</span><span class="num">1</span><span class="sym">+ *</span>lo<span class="sym">*)))))

  (</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> pop11<span class="sym">::</span>poparglist<span class="sym">)</span> <span class="str">&quot;1&quot;</span><span class="sym">))))
  (</span>setf <span class="sym">*</span>hi<span class="sym">*</span> <span class="num">0
</span>	<span class="sym">*</span>lo<span class="sym">*</span> <span class="num">0</span><span class="sym">)
  (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))
      ((=</span> i n<span class="sym">))
    (</span>some<span class="sym">-</span>fun i<span class="sym">)))
  (</span>format t <span class="str">&quot;Exceptions: HI=~A / LO=~A~%&quot;</span> <span class="sym">*</span>hi<span class="sym">* *</span>lo<span class="sym">*)</span>
