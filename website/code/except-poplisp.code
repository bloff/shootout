<span class="line">    1 </span><span class="slc">;;; -*- mode: lisp -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: except-poplisp.code,v 1.4 2004-11-13 07:41:32 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">;;; From: Friedrich Dominicus
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="sym">(</span>defparameter <span class="sym">*</span>hi<span class="sym">*</span> <span class="num">0</span><span class="sym">)
</span><span class="line">    7 </span><span class="sym">(</span>defparameter <span class="sym">*</span>lo<span class="sym">*</span> <span class="num">0</span><span class="sym">)
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym">(</span><span class="kwa">defun</span> some<span class="sym">-</span>fun <span class="sym">(</span>n<span class="sym">)
</span><span class="line">   10 </span><span class="sym">  (</span>catch t
<span class="line">   11 </span>    <span class="sym">(</span>hi<span class="sym">-</span>fun n<span class="sym">)))
</span><span class="line">   12 </span><span class="sym">
</span><span class="line">   13 </span><span class="sym">(</span><span class="kwa">defun</span> hi<span class="sym">-</span>fun <span class="sym">(</span>n<span class="sym">)
</span><span class="line">   14 </span><span class="sym">  (</span>catch <span class="str">'Hi_Exception
</span><span class="line">   15 </span><span class="str">    (lo-fun n)))
</span><span class="line">   16 </span><span class="str">
</span><span class="line">   17 </span><span class="str">(defun lo-fun (n)
</span><span class="line">   18 </span><span class="str">  (catch '</span>Lo_Exception
<span class="line">   19 </span>    <span class="sym">(</span>blow<span class="sym">-</span>up n<span class="sym">)))
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym">(</span><span class="kwa">defun</span> blow<span class="sym">-</span>up <span class="sym">(</span>n<span class="sym">)
</span><span class="line">   22 </span><span class="sym">  (</span><span class="kwa">if</span> <span class="sym">(</span>evenp n<span class="sym">)
</span><span class="line">   23 </span><span class="sym">      (</span>throw <span class="str">'Hi_Exception (setf *hi* (1+ *hi*)))
</span><span class="line">   24 </span><span class="str">    (throw '</span>Lo_Exception <span class="sym">(</span>setf <span class="sym">*</span>lo<span class="sym">* (</span><span class="num">1</span><span class="sym">+ *</span>lo<span class="sym">*)))))
</span><span class="line">   25 </span><span class="sym">
</span><span class="line">   26 </span><span class="sym">  (</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> pop11<span class="sym">::</span>poparglist<span class="sym">)</span> <span class="str">&quot;1&quot;</span><span class="sym">))))
</span><span class="line">   27 </span><span class="sym">  (</span>setf <span class="sym">*</span>hi<span class="sym">*</span> <span class="num">0
</span><span class="line">   28 </span><span class="num"></span>        <span class="sym">*</span>lo<span class="sym">*</span> <span class="num">0</span><span class="sym">)
</span><span class="line">   29 </span><span class="sym">  (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))
</span><span class="line">   30 </span><span class="sym">      ((=</span> i n<span class="sym">))
</span><span class="line">   31 </span><span class="sym">    (</span>some<span class="sym">-</span>fun i<span class="sym">)))
</span><span class="line">   32 </span><span class="sym">  (</span>format t <span class="str">&quot;Exceptions: HI=~A / LO=~A~%&quot;</span> <span class="sym">*</span>hi<span class="sym">* *</span>lo<span class="sym">*)</span>
