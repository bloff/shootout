<span class="sym">%</span> takfp<span class="sym">.</span>slang
<span class="sym">%</span>
<span class="sym">%</span> Contributed by John E<span class="sym">.</span> Davis
<span class="sym">%</span>

<span class="kwb">static</span> define <span class="kwd">tak</span> <span class="sym">();</span>
<span class="kwb">static</span> define <span class="kwd">tak</span> <span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">)</span>
<span class="sym">{</span>
	<span class="kwa">if</span> <span class="sym">(</span>y <span class="sym">&gt;=</span> x<span class="sym">)</span> <span class="kwa">return</span> z<span class="sym">;</span>
	<span class="kwa">return</span> <span class="kwd">tak</span><span class="sym">(</span><span class="kwd">tak</span><span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> <span class="kwd">tak</span><span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> <span class="kwd">tak</span><span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">));</span>
<span class="sym">}</span>

<span class="kwc">public</span> define <span class="kwd">slsh_main</span> <span class="sym">()</span>
<span class="sym">{</span>
	variable n <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
	<span class="kwa">if</span> <span class="sym">(</span>__argc <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="kwd">integer</span> <span class="sym">(</span>__argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);</span>

	<span class="sym">() =</span> <span class="kwd">fprintf</span><span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;%.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">tak</span><span class="sym">(</span>n<span class="sym">*</span><span class="num">3.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">2.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">1.0</span><span class="sym">));</span>
	<span class="kwa">return</span> <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="sym">%</span> vim<span class="sym">:</span> ts<span class="sym">=</span><span class="num">4</span> ft<span class="sym">=</span>slang
