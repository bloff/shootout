<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<B><FONT COLOR="#BC8F8F">&quot;  The Great Computer Language Shootout
   contributed by Isaac Gouy &amp; Paolo Bonzini

   To run: gst -QI /usr/local/share/smalltalk/gst.im wordfreq.st &lt; input.txt
&quot;</FONT></B>


!Bag methodsFor: <B><FONT COLOR="#BC8F8F">'extracting items'</FONT></B>!
sortedByValueAndKey
   | assocs |
   assocs := (SortedCollection <B><FONT COLOR="#A020F0">new</FONT></B>: contents size) sortBlock: [:a :b| 
      a value = b value ifTrue: [a key &gt; b key] ifFalse: [a value &gt; b value] ].

   contents keysAndValuesDo: [:key :value| assocs add: key -&gt; value].
   ^assocs ! !


| stream wordCounts |
stream := FileStream stdin bufferSize: 4096.
wordCounts := Bag <B><FONT COLOR="#A020F0">new</FONT></B>.

[stdin atEnd] whileFalse: [
   (stream nextLine collect: [:<B><FONT COLOR="#A020F0">each</FONT></B>|
      <B><FONT COLOR="#A020F0">each</FONT></B> isLetter ifTrue: [<B><FONT COLOR="#A020F0">each</FONT></B> asLowercase] ifFalse: [$ ]])
         subStrings <B><FONT COLOR="#A020F0">do</FONT></B>: [:word| wordCounts add: word]
].

wordCounts sortedByValueAndKey <B><FONT COLOR="#A020F0">do</FONT></B>: [:<B><FONT COLOR="#A020F0">each</FONT></B>| | number |
   number := <B><FONT COLOR="#A020F0">each</FONT></B> value printString.
   (7 - number size) timesRepeat: [stdout nextPut: $ ]. 
   stdout nextPutAll: number; nextPutAll: <B><FONT COLOR="#BC8F8F">' '</FONT></B>; nextPutAll: <B><FONT COLOR="#A020F0">each</FONT></B> key; nl.
] !</pre></td></tr></table>
