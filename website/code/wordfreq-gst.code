<span class="str">&quot;  The Great Computer Language Shootout</span>
<span class="str">   contributed by Isaac Gouy &amp; Paolo Bonzini</span>
<span class="str"></span>
<span class="str">   To run: gst -QI /usr/share/gnu-smalltalk/gst.im wordfreq.st &lt; input.txt</span>
<span class="str">&quot;</span>

<span class="sym">!</span>Bag methodsFor<span class="sym">:</span> <span class="str">'extracting items'</span><span class="sym">!</span>

sortedByValueAndKey
   <span class="sym">|</span> assocs <span class="sym">|</span>
   assocs <span class="sym">:= (</span>SortedCollection new<span class="sym">:</span> contents size<span class="sym">)</span> sortBlock<span class="sym">: [:</span>a <span class="sym">:</span>b<span class="sym">|</span>
   a value <span class="sym">=</span> b value ifTrue<span class="sym">: [</span>a key <span class="sym">&gt;</span> b key<span class="sym">]</span> ifFalse<span class="sym">: [</span>a value <span class="sym">&gt;</span> b value<span class="sym">] ]</span>.

   contents keysAndValuesDo<span class="sym">: [:</span>key <span class="sym">:</span>value<span class="sym">|</span> assocs add<span class="sym">:</span> key <span class="sym">-&gt;</span> value<span class="sym">]</span>.
   ^assocs <span class="sym">! !</span>


<span class="sym">|</span> stream wordCounts <span class="sym">|</span>
stream <span class="sym">:=</span> FileStream stdin bufferSize<span class="sym">:</span> <span class="num">4096</span>.
wordCounts <span class="sym">:=</span> Bag new.

<span class="sym">[</span>stdin atEnd<span class="sym">]</span> whileFalse<span class="sym">: [</span>
   <span class="sym">(</span>stream nextLine collect<span class="sym">: [:</span>each<span class="sym">|</span>
      each isLetter ifTrue<span class="sym">: [</span>each asLowercase<span class="sym">]</span> ifFalse<span class="sym">: [$ ]])</span>
         subStrings <span class="kwa">do</span><span class="sym">: [:</span>word<span class="sym">|</span> wordCounts add<span class="sym">:</span> word<span class="sym">]</span>
<span class="sym">]</span>.

wordCounts sortedByValueAndKey <span class="kwa">do</span><span class="sym">: [:</span>each<span class="sym">| |</span> number <span class="sym">|</span>
   number <span class="sym">:=</span> each value printString.
   <span class="sym">(</span><span class="num">7</span> <span class="sym">-</span> number size<span class="sym">)</span> timesRepeat<span class="sym">: [</span>stdout nextPut<span class="sym">: $ ]</span>.
   stdout nextPutAll<span class="sym">:</span> number<span class="sym">;</span> nextPutAll<span class="sym">:</span> <span class="str">' '</span><span class="sym">;</span> nextPutAll<span class="sym">:</span> each key<span class="sym">;</span> nl.
<span class="sym">] !</span>
