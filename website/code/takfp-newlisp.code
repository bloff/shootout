#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>newlisp <span class="sym">-</span>s100000
<span class="slc">;;; -*- mode: lisp -*-
</span><span class="slc">;;; $Id: takfp-newlisp.code,v 1.1 2004-12-05 21:22:46 bfulgham Exp $
</span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="slc">;;; Contributed by Brent Fulgham
</span>
<span class="sym">(</span>define <span class="sym">(</span>tak x y z<span class="sym">)
  (</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">not</span> <span class="sym">(&lt;</span> y x<span class="sym">))
</span>      z
      <span class="sym">(</span>tak <span class="sym">(</span>tak <span class="sym">(-</span> x <span class="num">1</span><span class="sym">)</span> y z<span class="sym">) (</span>tak <span class="sym">(-</span> y <span class="num">1</span><span class="sym">)</span> z x<span class="sym">) (</span>tak <span class="sym">(-</span> z <span class="num">1</span><span class="sym">)</span> x y<span class="sym">))))

(</span><span class="kwa">defun</span> main <span class="sym">()
  (</span><span class="kwa">set</span> <span class="str">'n (integer (last (main-args))))
  (println
    (format &quot;%.1f&quot; (tak (* n 3.0) (* n 2.0) (* n 1.0) ))))

(main)
(exit)</span>
