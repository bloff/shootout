<span class="slc">// The Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">// by bearophile, Jan 24 2006</span>
<span class="slc">// converted to C++ by Greg Buchholz</span>
<span class="slc">// Compile with: -O3 -fomit-frame-pointer</span>

<span class="dir">#include&lt;cstdio&gt;</span>
<span class="dir">#include&lt;cstdlib&gt;</span>

<span class="kwc">template</span><span class="sym">&lt;</span><span class="kwc">class</span> N<span class="sym">&gt;</span> N <span class="kwd">Ack</span><span class="sym">(</span>N x<span class="sym">,</span> N y<span class="sym">) {</span>
   <span class="kwa">return</span> <span class="sym">(</span>x <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> ? y<span class="sym">+</span><span class="num">1</span> <span class="sym">: ((</span>y <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> ? <span class="kwd">Ack</span><span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">) :</span> <span class="kwd">Ack</span><span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="kwd">Ack</span><span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">-</span><span class="num">1</span><span class="sym">)));</span>
<span class="sym">}</span>

<span class="kwc">template</span><span class="sym">&lt;</span><span class="kwc">class</span> N<span class="sym">&gt;</span> N <span class="kwd">Fib</span><span class="sym">(</span>N n<span class="sym">) {</span> <span class="kwa">return</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> <span class="kwd">Fib</span><span class="sym">(</span>n<span class="sym">-</span><span class="num">2</span><span class="sym">) +</span> <span class="kwd">Fib</span><span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">); }</span>

<span class="kwc">template</span><span class="sym">&lt;</span><span class="kwc">class</span> N<span class="sym">&gt;</span> N <span class="kwd">Tak</span><span class="sym">(</span>N x<span class="sym">,</span> N y<span class="sym">,</span> N z<span class="sym">) {</span>
    <span class="kwa">return</span> <span class="sym">(</span>y <span class="sym">&lt;</span> x<span class="sym">)</span> ? <span class="kwd">Tak</span><span class="sym">(</span><span class="kwd">Tak</span><span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">),</span> <span class="kwd">Tak</span><span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> z<span class="sym">,</span> x<span class="sym">),</span> <span class="kwd">Tak</span><span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">)) :</span> z<span class="sym">;</span>
<span class="sym">}</span>

<span class="kwb">int</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">**</span>argv<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwb">int</span> n <span class="sym">=</span> <span class="kwd">atoi</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) -</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Ack(3,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
    <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Fib(%.1f): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">28.0</span><span class="sym">+</span>n<span class="sym">,</span> <span class="kwd">Fib</span><span class="sym">(</span><span class="num">28.0</span><span class="sym">+</span>n<span class="sym">));</span>
    <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Tak(%d,%d,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span> <span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span> n<span class="sym">,</span> <span class="kwd">Tak</span><span class="sym">(</span><span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span> <span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span> n<span class="sym">));</span>
    <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Fib(3): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">Fib</span><span class="sym">(</span><span class="num">3</span><span class="sym">));</span>
    <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">Tak</span><span class="sym">(</span><span class="num">3.0</span><span class="sym">,</span> <span class="num">2.0</span><span class="sym">,</span> <span class="num">1.0</span><span class="sym">));</span>
    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>

