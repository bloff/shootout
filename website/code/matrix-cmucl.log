BUILD COMMANDS FOR: matrix.cmucl

Tue Mar  8 21:21:02 PST 2005

CMUCL built with: /usr/bin/lisp -noinit -batch -eval '(load "matrix.cmucl_compile")'
### START matrix.cmucl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(compile-file "matrix.cmucl" :block-compile t  :entry-points '(main))
(quit)
### END matrix.cmucl_compile

; Loading #p"/opt/shootout/shootout/bench/matrix/tmp/matrix.cmucl_compile".

; Python version 1.1, VM version Intel x86 on 08 MAR 05 09:21:02 pm.
; Compiling: /opt/shootout/shootout/bench/matrix/tmp/matrix.cmucl 08 MAR 05 09:21:02 pm

; Converted MATMUL.
; Converted MAIN.
; Converted MAKE-MATRIX.
; Compiling DEFUN MAIN: 

; 
; 
; File: /opt/shootout/shootout/bench/matrix/tmp/matrix.cmucl

; In: DEFUN MAIN

;   (LOOP REPEAT N DO (MATMUL M1 M2 M3 30 ...))
; --> BLOCK LET ANSI-LOOP::LOOP-BODY TAGBODY WHEN COND IF MINUSP < DECF LET* 
; ==>
;   (- #:G15 1)
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a REAL, not a FLOAT.
; 
; --> BLOCK LET ANSI-LOOP::LOOP-BODY TAGBODY WHEN COND IF MINUSP 
; ==>
;   (< (DECF #:G15) 0)
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a REAL, not a FLOAT.
; 
; --> BLOCK LET ANSI-LOOP::LOOP-BODY TAGBODY WHEN COND IF MINUSP < DECF LET* 
; ==>
;   (- #:G15 1)
; Note: Forced to do GENERIC-- (cost 10).
;     Unable to do inline fixnum arithmetic (cost 1) because:
;     The first argument is a REAL, not a FIXNUM.
;     The result is a REAL, not a FIXNUM.
;     Unable to do inline fixnum arithmetic (cost 2) because:
;     The first argument is a REAL, not a FIXNUM.
;     The result is a REAL, not a FIXNUM.
;     etc.
; 
; --> BLOCK LET ANSI-LOOP::LOOP-BODY TAGBODY WHEN COND IF MINUSP 
; ==>
;   (< (DECF #:G15) 0)
; Note: Forced to do GENERIC-< (cost 10).
;     Unable to do inline fixnum comparison (cost 3) because:
;     The first argument is a REAL, not a FIXNUM.
;     Unable to do inline fixnum comparison (cost 4) because:
;     The first argument is a REAL, not a FIXNUM.
;     etc.
; 
;   (FORMAT T "~A ~A ~A ~A~%" (AREF MM 0 0) (AREF MM 2 3) ...)
; --> FORMAT FORMATTER FUNCTION BLOCK 
; ==>
;   (PRINC #:FORMAT-ARG-60 STREAM)
; Note: Doing unsigned word to integer coercion (cost 20).
; 
; ==>
;   (PRINC #:FORMAT-ARG-61 STREAM)
; Note: Doing unsigned word to integer coercion (cost 20).
; 
; ==>
;   (PRINC #:FORMAT-ARG-62 STREAM)
; Note: Doing unsigned word to integer coercion (cost 20).
; 
; ==>
;   (PRINC #:FORMAT-ARG-63 STREAM)
; Note: Doing unsigned word to integer coercion (cost 20).
; 
; Byte Compiling Top-Level Form: 

; Compilation unit finished.
;   8 notes


; matrix.x86f written.
; Compilation finished in 0:00:00.
### START matrix.cmucl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(setq *gc-verbose* nil)
(load "matrix.x86f" :verbose nil :print nil)
(main) (quit)
### END matrix.cmucl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/lisp -noinit -batch -eval '(load "matrix.cmucl_run" :verbose nil :print nil)' %A


PROGRAM OUTPUT
==============
270165 1061760 1453695 1856025
