<span class="slc"># ----------------------------------------------------------------------</span>
<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Based on D language implementation by Dave Fladebo</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Anthony Borla</span>
<span class="slc"># ----------------------------------------------------------------------</span>

n = <span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">.</span>shift <span class="sym">||</span> <span class="num">1</span>)<span class="sym">.</span>to_i

sum = Array<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">9</span><span class="sym">,</span> <span class="num">0.0</span>) <span class="sym">;</span> alt = <span class="num">1.0</span> <span class="sym">;</span> d = <span class="num">1.0</span>

n<span class="sym">.</span>times <span class="kwa">do</span>
  d2 = d <span class="sym">*</span> d <span class="sym">;</span> d3 = d2 <span class="sym">*</span> d <span class="sym">;</span> ds = Math<span class="sym">.</span><span class="kwd">sin</span><span class="sym">(</span>d) <span class="sym">;</span> dc = Math<span class="sym">.</span><span class="kwd">cos</span><span class="sym">(</span>d)

  sum<span class="sym">[</span><span class="num">0</span><span class="sym">] +</span>= <span class="sym">(</span><span class="num">2</span> <span class="sym">/</span> <span class="num">3.0</span>) <span class="sym">** (</span>d <span class="sym">-</span> <span class="num">1.0</span>)
  sum<span class="sym">[</span><span class="num">1</span><span class="sym">] +</span>= <span class="num">1</span> <span class="sym">/</span> Math<span class="sym">.</span><span class="kwd">sqrt</span><span class="sym">(</span>d)
  sum<span class="sym">[</span><span class="num">2</span><span class="sym">] +</span>= <span class="num">1</span> <span class="sym">/ (</span>d <span class="sym">* (</span>d <span class="sym">+</span> <span class="num">1</span>))
  sum<span class="sym">[</span><span class="num">3</span><span class="sym">] +</span>= <span class="num">1</span> <span class="sym">/ (</span>d3 <span class="sym">*</span> ds <span class="sym">*</span> ds)
  sum<span class="sym">[</span><span class="num">4</span><span class="sym">] +</span>= <span class="num">1</span> <span class="sym">/ (</span>d3 <span class="sym">*</span> dc <span class="sym">*</span> dc)
  sum<span class="sym">[</span><span class="num">5</span><span class="sym">] +</span>= <span class="num">1</span> <span class="sym">/</span> d
  sum<span class="sym">[</span><span class="num">6</span><span class="sym">] +</span>= <span class="num">1</span> <span class="sym">/ (</span>d2)
  sum<span class="sym">[</span><span class="num">7</span><span class="sym">] +</span>= alt <span class="sym">/</span> d
  sum<span class="sym">[</span><span class="num">8</span><span class="sym">] +</span>= alt <span class="sym">/ (</span><span class="num">2</span> <span class="sym">*</span> d <span class="sym">-</span> <span class="num">1</span>)

  alt = <span class="sym">-</span>alt <span class="sym">;</span> d <span class="sym">+</span>= <span class="num">1.0</span>
<span class="kwa">end</span>

<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">(2/3)</span>^k\n<span class="str">&quot;, sum[0])</span>
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">k^-0.5</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">[</span><span class="num">1</span><span class="sym">]</span>)
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">1/k(k+1)</span>\n<span class="str">&quot;, sum[2])</span>
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Flint Hills</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">[</span><span class="num">3</span><span class="sym">]</span>)
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Cookson Hills</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">[</span><span class="num">4</span><span class="sym">]</span>)
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Harmonic</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">[</span><span class="num">5</span><span class="sym">]</span>)
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Riemann Zeta</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">[</span><span class="num">6</span><span class="sym">]</span>)
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Alternating Harmonic</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">[</span><span class="num">7</span><span class="sym">]</span>)
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Gregory</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">[</span><span class="num">8</span><span class="sym">]</span>)

