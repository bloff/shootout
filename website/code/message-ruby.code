<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Jesse Millikan</span>

require <span class="str">'thread'</span>

N = <span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">].</span>to_i
next_q = last_q = SizedQueue<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span>)

<span class="num">500</span><span class="sym">.</span>times <span class="sym">{</span>
 q = SizedQueue<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span>)
 q2 = next_q
 Thread<span class="sym">.</span>new<span class="sym">{</span>
  i = N
  <span class="kwa">while</span> i <span class="sym">&gt;</span> <span class="num">0</span>
   q2<span class="sym">.</span><span class="kwd">push</span><span class="sym">(</span>q<span class="sym">.</span>pop<span class="sym">+</span><span class="num">1</span>)
   i <span class="sym">-</span>= <span class="num">1</span>
  <span class="kwa">end</span>
 <span class="sym">}</span>
 next_q = q
<span class="sym">}</span>

Thread<span class="sym">.</span>new<span class="sym">{</span>N<span class="sym">.</span>times<span class="sym">{</span>next_q<span class="sym">.</span><span class="kwd">push</span><span class="sym">(</span><span class="num">0</span>)<span class="sym">}}</span>

t = <span class="num">0</span>
N<span class="sym">.</span>times<span class="sym">{</span>t<span class="sym">+</span>=last_q<span class="sym">.</span>pop<span class="sym">}</span>
puts t

