<span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">--
</span><span class="slc">-- GHC version of floating point Tak function
</span><span class="slc">-- compile with ghc -O2 -o takfp takfp.hs
</span><span class="slc">-- Greg Buchholz
</span>
<span class="kwa">import</span> System<span class="sym">(</span>getArgs<span class="sym">)

</span>main <span class="sym">=</span> <span class="kwa">do</span> <span class="sym">[</span>num<span class="sym">] &lt;-</span> getArgs
          <span class="kwa">let</span> n <span class="sym">=</span> read num
          putStrLn $ show $ tak <span class="sym">(</span><span class="num">3</span><span class="sym">*</span>n<span class="sym">) (</span><span class="num">2</span><span class="sym">*</span>n<span class="sym">)</span> n

tak <span class="sym">::</span> <span class="kwb">Double</span> <span class="sym">-&gt;</span> <span class="kwb">Double</span> <span class="sym">-&gt;</span> <span class="kwb">Double</span> <span class="sym">-&gt;</span> <span class="kwb">Double
</span>tak x y z <span class="sym">|</span> y<span class="sym">&gt;=</span>x      <span class="sym">=</span> z
          <span class="sym">|</span> otherwise <span class="sym">=</span> tak <span class="sym">(</span>tak <span class="sym">(</span>x<span class="num">-1</span><span class="sym">)</span> y z<span class="sym">) (</span>tak <span class="sym">(</span>y<span class="num">-1</span><span class="sym">)</span> z x<span class="sym">) (</span>tak <span class="sym">(</span>z<span class="num">-1</span><span class="sym">)</span> x y<span class="sym">)</span>
