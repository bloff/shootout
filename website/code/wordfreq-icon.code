<span class="line">    1 </span><span class="slc"># -*- mode: icon -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: wordfreq-icon.code,v 1.3 2004-11-11 07:14:23 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)
</span><span class="line">    6 </span><span class="sym"></span>    <span class="kwa">local</span> wcount<span class="sym">,</span> buckets<span class="sym">,</span> w<span class="sym">,</span> c<span class="sym">,</span> pair<span class="sym">,</span> wl
<span class="line">    7 </span>
<span class="line">    8 </span>    wcount <span class="sym">:=</span> <span class="kwb">table</span><span class="sym">(</span><span class="num">0</span><span class="sym">)
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwa">every</span> wcount<span class="sym">[</span>words<span class="sym">()] +:=</span> <span class="num">1
</span><span class="line">   10 </span><span class="num">
</span><span class="line">   11 </span><span class="num"></span>    buckets <span class="sym">:=</span> <span class="kwb">table</span><span class="sym">()
</span><span class="line">   12 </span><span class="sym"></span>    <span class="kwa">every</span> w <span class="sym">:=</span> key<span class="sym">(</span>wcount<span class="sym">)</span> <span class="kwa">do</span> <span class="sym">{
</span><span class="line">   13 </span><span class="sym"></span>        c <span class="sym">:=</span> wcount<span class="sym">[</span>w<span class="sym">]
</span><span class="line">   14 </span><span class="sym">        /</span> buckets<span class="sym">[</span>c<span class="sym">] :=</span> <span class="kwb">list</span><span class="sym">()
</span><span class="line">   15 </span><span class="sym"></span>        push<span class="sym">(</span>buckets<span class="sym">[</span>c<span class="sym">],</span> w<span class="sym">)
</span><span class="line">   16 </span><span class="sym">    }
</span><span class="line">   17 </span><span class="sym"></span>    buckets <span class="sym">:=</span> sort<span class="sym">(</span>buckets<span class="sym">,</span><span class="num">1</span><span class="sym">)
</span><span class="line">   18 </span><span class="sym"></span>    <span class="kwa">while</span> pair <span class="sym">:=</span> pull<span class="sym">(</span>buckets<span class="sym">)</span> <span class="kwa">do</span> <span class="sym">{
</span><span class="line">   19 </span><span class="sym"></span>         c <span class="sym">:=</span> pair<span class="sym">[</span><span class="num">1</span><span class="sym">]
</span><span class="line">   20 </span><span class="sym"></span>         wl <span class="sym">:=</span> sort<span class="sym">(</span>pair<span class="sym">[</span><span class="num">2</span><span class="sym">],</span><span class="num">1</span><span class="sym">)
</span><span class="line">   21 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">(</span>write<span class="sym">(</span>right<span class="sym">(</span>c<span class="sym">,</span><span class="num">7</span><span class="sym">),</span> <span class="str">&quot; &quot;</span><span class="sym">,</span> pull<span class="sym">(</span>wl<span class="sym">)))
</span><span class="line">   22 </span><span class="sym">    }
</span><span class="line">   23 </span><span class="sym"></span><span class="kwa">end
</span><span class="line">   24 </span><span class="kwa">
</span><span class="line">   25 </span><span class="kwa">procedure</span> words<span class="sym">()
</span><span class="line">   26 </span><span class="sym"></span>    <span class="kwa">local</span> line<span class="sym">,</span> word
<span class="line">   27 </span>    <span class="kwa">while</span> line <span class="sym">:=</span> read<span class="sym">()</span> <span class="kwa">do</span> <span class="sym">{
</span><span class="line">   28 </span><span class="sym"></span>        line <span class="sym">:=</span> map<span class="sym">(</span>line<span class="sym">)
</span><span class="line">   29 </span><span class="sym"></span>        line ? <span class="kwa">while</span> tab<span class="sym">(</span>upto<span class="sym">(</span><span class="kwa">&amp;letters</span><span class="sym">))</span> <span class="kwa">do</span> <span class="sym">{
</span><span class="line">   30 </span><span class="sym"></span>            word <span class="sym">:=</span> tab<span class="sym">(</span>many<span class="sym">(</span><span class="kwa">&amp;letters</span><span class="sym">))
</span><span class="line">   31 </span><span class="sym"></span>            <span class="kwa">suspend</span><span class="sym">(</span>word<span class="sym">)
</span><span class="line">   32 </span><span class="sym">        }
</span><span class="line">   33 </span><span class="sym">    }
</span><span class="line">   34 </span><span class="sym"></span><span class="kwa">end</span>
