<span class="slc"># -*- mode: icon -*-</span>
<span class="slc"># $Id: wordfreq-icon.code,v 1.6 2006-02-15 07:29:48 bfulgham Exp $</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>

<span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)</span>
    <span class="kwa">local</span> wcount<span class="sym">,</span> buckets<span class="sym">,</span> w<span class="sym">,</span> c<span class="sym">,</span> pair<span class="sym">,</span> wl

    wcount <span class="sym">:=</span> <span class="kwb">table</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>
    <span class="kwa">every</span> wcount<span class="sym">[</span>words<span class="sym">()] +:=</span> <span class="num">1</span>

    buckets <span class="sym">:=</span> <span class="kwb">table</span><span class="sym">()</span>
    <span class="kwa">every</span> w <span class="sym">:=</span> key<span class="sym">(</span>wcount<span class="sym">)</span> <span class="kwa">do</span> <span class="sym">{</span>
	c <span class="sym">:=</span> wcount<span class="sym">[</span>w<span class="sym">]</span>
	<span class="sym">/</span> buckets<span class="sym">[</span>c<span class="sym">] :=</span> <span class="kwb">list</span><span class="sym">()</span>
	push<span class="sym">(</span>buckets<span class="sym">[</span>c<span class="sym">],</span> w<span class="sym">)</span>
    <span class="sym">}</span>
    buckets <span class="sym">:=</span> sort<span class="sym">(</span>buckets<span class="sym">,</span><span class="num">1</span><span class="sym">)</span>
    <span class="kwa">while</span> pair <span class="sym">:=</span> pull<span class="sym">(</span>buckets<span class="sym">)</span> <span class="kwa">do</span> <span class="sym">{</span>
 	c <span class="sym">:=</span> pair<span class="sym">[</span><span class="num">1</span><span class="sym">]</span>
 	wl <span class="sym">:=</span> sort<span class="sym">(</span>pair<span class="sym">[</span><span class="num">2</span><span class="sym">],</span><span class="num">1</span><span class="sym">)</span>
	<span class="kwa">while</span> <span class="sym">(</span>write<span class="sym">(</span>right<span class="sym">(</span>c<span class="sym">,</span><span class="num">7</span><span class="sym">),</span> <span class="str">&quot; &quot;</span><span class="sym">,</span> pull<span class="sym">(</span>wl<span class="sym">)))</span>
    <span class="sym">}</span>
<span class="kwa">end</span>

<span class="kwa">procedure</span> words<span class="sym">()</span>
    <span class="kwa">local</span> line<span class="sym">,</span> word
    <span class="kwa">while</span> line <span class="sym">:=</span> read<span class="sym">()</span> <span class="kwa">do</span> <span class="sym">{</span>
	line <span class="sym">:=</span> map<span class="sym">(</span>line<span class="sym">)</span>
	line ? <span class="kwa">while</span> tab<span class="sym">(</span>upto<span class="sym">(</span><span class="kwa">&amp;letters</span><span class="sym">))</span> <span class="kwa">do</span> <span class="sym">{</span>
	    word <span class="sym">:=</span> tab<span class="sym">(</span>many<span class="sym">(</span><span class="kwa">&amp;letters</span><span class="sym">))</span>
	    <span class="kwa">suspend</span><span class="sym">(</span>word<span class="sym">)</span>
	<span class="sym">}</span>
    <span class="sym">}</span>
<span class="kwa">end</span>
