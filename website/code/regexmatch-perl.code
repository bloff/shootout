<span class="line">    1 </span><span class="slc">#!/usr/bin/perl
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: regexmatch-perl.code,v 1.3 2004-11-11 07:14:05 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">use</span> strict<span class="sym">;
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym"></span><span class="kwc">my</span> <span class="kwb">$re</span> <span class="sym">=</span> qr<span class="sym">{
</span><span class="line">    8 </span><span class="sym">    (</span>?<span class="sym">:</span> ^ <span class="sym">| [</span>^\d\<span class="sym">(])</span>                <span class="slc"># must be preceeded by non-digit
</span><span class="line">    9 </span><span class="slc"></span>    <span class="sym">(</span> \<span class="sym">( )</span>?                        <span class="slc"># match 1: possible initial left paren
</span><span class="line">   10 </span><span class="slc"></span>    <span class="sym">(</span>\d\d\d<span class="sym">)</span>                        <span class="slc"># match 2: area code is 3 digits
</span><span class="line">   11 </span><span class="slc"></span>    <span class="sym">(</span>?<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> \<span class="sym">) )</span>                        <span class="slc"># if match1 then match right paren
</span><span class="line">   12 </span><span class="slc"></span>    <span class="sym">[ ]</span>                                <span class="slc"># area code followed by one space
</span><span class="line">   13 </span><span class="slc"></span>    <span class="sym">(</span>\d\d\d<span class="sym">)</span>                        <span class="slc"># match 3: prefix of 3 digits
</span><span class="line">   14 </span><span class="slc"></span>    <span class="sym">[ -]</span>                        <span class="slc"># separator is either space or dash
</span><span class="line">   15 </span><span class="slc"></span>    <span class="sym">(</span>\d\d\d\d<span class="sym">)</span>                        <span class="slc"># match 4: last 4 digits
</span><span class="line">   16 </span><span class="slc"></span>    \D                                <span class="slc"># must be followed by a non-digit
</span><span class="line">   17 </span><span class="slc"></span><span class="sym">}</span>x<span class="sym">;
</span><span class="line">   18 </span><span class="sym">
</span><span class="line">   19 </span><span class="sym"></span><span class="kwc">my</span> <span class="kwb">$NUM</span> <span class="sym">=</span> <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">];
</span><span class="line">   20 </span><span class="sym"></span><span class="kwb">$NUM</span> <span class="sym">=</span> <span class="num">1</span> <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$NUM</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">);
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span><span class="kwc">my</span> &#64;phones <span class="sym">= &lt;</span>STDIN<span class="sym">&gt;;
</span><span class="line">   23 </span><span class="sym"></span><span class="kwc">my</span> <span class="kwb">$count</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym"></span><span class="kwc">my</span> <span class="kwb">$num</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span><span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$NUM</span><span class="sym">--) {
</span><span class="line">   26 </span><span class="sym"></span>    <span class="kwa">foreach</span> <span class="sym">(</span>&#64;phones<span class="sym">) {
</span><span class="line">   27 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">(/</span><span class="kwb">$re</span><span class="sym">/</span>o<span class="sym">) {
</span><span class="line">   28 </span><span class="sym"></span>            <span class="kwb">$num</span> <span class="sym">=</span> <span class="str">&quot;($2) $3-$4&quot;</span><span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">(</span><span class="num">0</span> <span class="sym">==</span> <span class="kwb">$NUM</span><span class="sym">) {
</span><span class="line">   30 </span><span class="sym"></span>                <span class="kwb">$count</span><span class="sym">++;
</span><span class="line">   31 </span><span class="sym"></span>                print <span class="str">&quot;$count: $num</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   32 </span><span class="sym">            }
</span><span class="line">   33 </span><span class="sym">        }
</span><span class="line">   34 </span><span class="sym">    }
</span><span class="line">   35 </span><span class="sym">}</span>
