<span class="line">    1 </span><span class="slc">#!/usr/bin/tclsh
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: heapsort-tcl.code,v 1.3 2004-11-11 07:13:59 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc"># sped up by Miguel Sofer's function generator
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="kwa">set</span> IM <span class="num">139968
</span><span class="line">    7 </span><span class="num"></span><span class="kwa">set</span> IA   <span class="num">3877
</span><span class="line">    8 </span><span class="num"></span><span class="kwa">set</span> IC  <span class="num">29573
</span><span class="line">    9 </span><span class="num">
</span><span class="line">   10 </span><span class="num"></span><span class="kwa">set</span> last <span class="num">42
</span><span class="line">   11 </span><span class="num">
</span><span class="line">   12 </span><span class="num"></span><span class="kwa">proc</span> make_gen_random <span class="sym">{} {
</span><span class="line">   13 </span><span class="sym"></span>    <span class="kwa">global</span> IM IA IC
<span class="line">   14 </span>    <span class="kwa">set</span> params <span class="sym">[</span><span class="kwa">list</span> IM <span class="kwb">$IM</span> IA <span class="kwb">$IA</span> IC <span class="kwb">$IC</span><span class="sym">]
</span><span class="line">   15 </span><span class="sym"></span>    <span class="kwa">set</span> body <span class="sym">[</span><span class="kwa">string</span> map <span class="kwb">$params</span> <span class="sym">{
</span><span class="line">   16 </span><span class="sym"></span>        <span class="kwa">global</span> last
<span class="line">   17 </span>        <span class="kwa">expr</span> <span class="sym">{(</span><span class="kwb">$max</span> <span class="sym">* [</span><span class="kwa">set</span> last <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{(</span><span class="kwb">$last</span> <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">) %</span> IM<span class="sym">}]]) /</span> IM<span class="sym">}
</span><span class="line">   18 </span><span class="sym">    }]
</span><span class="line">   19 </span><span class="sym"></span>    <span class="kwa">proc</span> gen_random <span class="sym">{</span>max<span class="sym">}</span> <span class="kwb">$body
</span><span class="line">   20 </span><span class="kwb"></span><span class="sym">}
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span><span class="kwa">proc</span> heapsort <span class="sym">{</span>n ra_name<span class="sym">} {
</span><span class="line">   23 </span><span class="sym"></span>    <span class="kwa">upvar</span> <span class="kwb">$ra_name</span> ra
<span class="line">   24 </span>
<span class="line">   25 </span>    <span class="kwa">set</span> j <span class="num">0
</span><span class="line">   26 </span><span class="num"></span>    <span class="kwa">set</span> i <span class="num">0
</span><span class="line">   27 </span><span class="num"></span>    <span class="kwa">set</span> rra <span class="num">0.0
</span><span class="line">   28 </span><span class="num"></span>    <span class="kwa">set</span> l <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{(</span><span class="kwb">$n</span> <span class="sym">&gt;&gt;</span> <span class="num">1</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">}]
</span><span class="line">   29 </span><span class="sym"></span>    <span class="kwa">set</span> ir <span class="kwb">$n
</span><span class="line">   30 </span><span class="kwb"></span>    <span class="kwa">while</span> <span class="num">1</span> <span class="sym">{
</span><span class="line">   31 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$l</span> <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">} {
</span><span class="line">   32 </span><span class="sym"></span>            <span class="kwa">incr</span> l <span class="num">-1
</span><span class="line">   33 </span><span class="num"></span>            <span class="kwa">set</span> rra <span class="kwb">$ra</span><span class="sym">(</span><span class="kwb">$l</span><span class="sym">)
</span><span class="line">   34 </span><span class="sym">        }</span> else <span class="sym">{
</span><span class="line">   35 </span><span class="sym"></span>            <span class="kwa">set</span> rra <span class="kwb">$ra</span><span class="sym">(</span><span class="kwb">$ir</span><span class="sym">)
</span><span class="line">   36 </span><span class="sym"></span>            <span class="kwa">set</span> ra<span class="sym">(</span><span class="kwb">$ir</span><span class="sym">)</span> <span class="kwb">$ra</span><span class="sym">(</span><span class="num">1</span><span class="sym">)
</span><span class="line">   37 </span><span class="sym"></span>            <span class="kwa">incr</span> ir <span class="num">-1
</span><span class="line">   38 </span><span class="num"></span>            <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$ir</span> <span class="sym">==</span> <span class="num">1</span><span class="sym">} {
</span><span class="line">   39 </span><span class="sym"></span>                <span class="kwa">set</span> ra<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwb">$rra
</span><span class="line">   40 </span><span class="kwb"></span>                <span class="kwa">return
</span><span class="line">   41 </span><span class="kwa"></span>            <span class="sym">}
</span><span class="line">   42 </span><span class="sym">        }
</span><span class="line">   43 </span><span class="sym"></span>        <span class="kwa">set</span> i <span class="kwb">$l
</span><span class="line">   44 </span><span class="kwb"></span>        <span class="kwa">set</span> j <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$l</span> <span class="sym">&lt;&lt;</span> <span class="num">1</span><span class="sym">}]
</span><span class="line">   45 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">{</span><span class="kwb">$j</span> <span class="sym">&lt;=</span> <span class="kwb">$ir</span><span class="sym">} {
</span><span class="line">   46 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">{(</span><span class="kwb">$j</span> <span class="sym">&lt;</span> <span class="kwb">$ir</span><span class="sym">) &amp;&amp; (</span><span class="kwb">$ra</span><span class="sym">(</span><span class="kwb">$j</span><span class="sym">) &lt;</span> <span class="kwb">$ra</span><span class="sym">([</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$j</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">}]))} {
</span><span class="line">   47 </span><span class="sym"></span>                <span class="kwa">incr</span> j
<span class="line">   48 </span>            <span class="sym">}
</span><span class="line">   49 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$rra</span> <span class="sym">&lt;</span> <span class="kwb">$ra</span><span class="sym">(</span><span class="kwb">$j</span><span class="sym">)} {
</span><span class="line">   50 </span><span class="sym"></span>                <span class="kwa">set</span> ra<span class="sym">(</span><span class="kwb">$i</span><span class="sym">)</span> <span class="kwb">$ra</span><span class="sym">(</span><span class="kwb">$j</span><span class="sym">)
</span><span class="line">   51 </span><span class="sym"></span>                <span class="kwa">set</span> i <span class="kwb">$j
</span><span class="line">   52 </span><span class="kwb"></span>                <span class="kwa">set</span> j <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$j</span> <span class="sym">+</span> <span class="kwb">$i</span><span class="sym">}]
</span><span class="line">   53 </span><span class="sym">            }</span> else <span class="sym">{
</span><span class="line">   54 </span><span class="sym"></span>                <span class="kwa">set</span> j <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$ir</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">}]
</span><span class="line">   55 </span><span class="sym">            }
</span><span class="line">   56 </span><span class="sym">        }
</span><span class="line">   57 </span><span class="sym"></span>        <span class="kwa">set</span> ra<span class="sym">(</span><span class="kwb">$i</span><span class="sym">)</span> <span class="kwb">$rra
</span><span class="line">   58 </span><span class="kwb"></span>    <span class="sym">}
</span><span class="line">   59 </span><span class="sym">}
</span><span class="line">   60 </span><span class="sym">
</span><span class="line">   61 </span><span class="sym"></span><span class="kwa">proc</span> main <span class="sym">{} {
</span><span class="line">   62 </span><span class="sym"></span>    <span class="kwa">global</span> argv
<span class="line">   63 </span>    <span class="kwa">set</span> n <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]
</span><span class="line">   64 </span><span class="sym"></span>    make_gen_random
<span class="line">   65 </span>
<span class="line">   66 </span>    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">1</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;=</span> <span class="kwb">$n</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {
</span><span class="line">   67 </span><span class="sym"></span>        <span class="kwa">set</span> ary<span class="sym">(</span><span class="kwb">$i</span><span class="sym">) [</span>gen_random <span class="num">1.0</span><span class="sym">]
</span><span class="line">   68 </span><span class="sym">    }
</span><span class="line">   69 </span><span class="sym"></span>    heapsort <span class="kwb">$n</span> ary
<span class="line">   70 </span>    <span class="kwa">puts</span> <span class="sym">[</span><span class="kwa">format</span> <span class="str">&quot;%.10f&quot;</span> <span class="kwb">$ary</span><span class="sym">(</span><span class="kwb">$n</span><span class="sym">)]
</span><span class="line">   71 </span><span class="sym">}
</span><span class="line">   72 </span><span class="sym">
</span><span class="line">   73 </span><span class="sym"></span>main
