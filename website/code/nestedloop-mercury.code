<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
% ---------------------------------------------------------------------------- %
% nestedloop.m
% Ralph Becket &lt;rbeck@microsoft.com&gt;
% Tue Jan  9 13:36:26 GMT 2001
% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix
%
% ---------------------------------------------------------------------------- %

:- module mytest.

:- <B><FONT COLOR="#A020F0">interface</FONT></B>.

:- import_module io.



:- pred main(io__state, io__state).
:- mode main(di, uo) <B><FONT COLOR="#A020F0">is</FONT></B> det.



:- <B><FONT COLOR="#A020F0">implementation</FONT></B>.

:- import_module list, int, std_util, <B><FONT COLOR="#A020F0">string</FONT></B>, require.



main --&gt;
    io__command_line_arguments(ArgV),
    (   <I><FONT COLOR="#B22222">{ ArgV = [],        N = 1 }</FONT></I>
    ;   <I><FONT COLOR="#B22222">{ ArgV = [Arg],     N = string__det_to_int(Arg) }</FONT></I>
    ;   <I><FONT COLOR="#B22222">{ ArgV = [_,_|_],   error(&quot;usage: nestedloop [N]&quot;) }</FONT></I>
    ),
    io__write_int(nested_loop(N)),
    io__nl.



:- func nested_loop(int) = int.

nested_loop(N) =
    loop(N, loop(N, loop(N, loop(N, loop(N, loop(N, plus(1)))))), 0).



:- func loop(int, func(int) = int, int) = int.

loop(I, Fn, X) = ( <B><FONT COLOR="#A020F0">if</FONT></B> I &gt; 0 <B><FONT COLOR="#A020F0">then</FONT></B> loop(I - 1, Fn, Fn(X)) <B><FONT COLOR="#A020F0">else</FONT></B> X ).</pre></td></tr></table>
