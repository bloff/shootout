<span class="line">    1 </span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">% nestedloop.m
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">% Ralph Becket &lt;rbeck&#64;microsoft.com&gt;
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">% Tue Jan  9 13:36:26 GMT 2001
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">%
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="sym">:-</span> module mytest.
<span class="line">   10 </span>
<span class="line">   11 </span><span class="sym">:-</span> interface.
<span class="line">   12 </span>
<span class="line">   13 </span><span class="sym">:-</span> import_module io.
<span class="line">   14 </span>
<span class="line">   15 </span>
<span class="line">   16 </span>
<span class="line">   17 </span><span class="sym">:-</span> pred main<span class="sym">(</span>io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="line">   18 </span><span class="sym">:-</span> mode main<span class="sym">(</span>di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   19 </span>
<span class="line">   20 </span>
<span class="line">   21 </span>
<span class="line">   22 </span><span class="sym">:-</span> implementation.
<span class="line">   23 </span>
<span class="line">   24 </span><span class="sym">:-</span> import_module list<span class="sym">,</span> int<span class="sym">,</span> std_util<span class="sym">,</span> string<span class="sym">,</span> require.
<span class="line">   25 </span>
<span class="line">   26 </span>
<span class="line">   27 </span>
<span class="line">   28 </span>main <span class="sym">--&gt;
</span><span class="line">   29 </span><span class="sym"></span>    io__command_line_arguments<span class="sym">(</span>ArgV<span class="sym">),
</span><span class="line">   30 </span><span class="sym">    (   {</span> ArgV <span class="sym">= [],</span>        N <span class="sym">=</span> <span class="num">1</span> <span class="sym">}
</span><span class="line">   31 </span><span class="sym">    ;   {</span> ArgV <span class="sym">= [</span>Arg<span class="sym">],</span>     N <span class="sym">=</span> string__det_to_int<span class="sym">(</span>Arg<span class="sym">) }
</span><span class="line">   32 </span><span class="sym">    ;   {</span> ArgV <span class="sym">= [</span>_<span class="sym">,</span>_<span class="sym">|</span>_<span class="sym">],</span>   error<span class="sym">(</span><span class="str">&quot;usage: nestedloop [N]&quot;</span><span class="sym">) }
</span><span class="line">   33 </span><span class="sym">    ),
</span><span class="line">   34 </span><span class="sym"></span>    io__write_int<span class="sym">(</span>nested_loop<span class="sym">(</span>N<span class="sym">)),
</span><span class="line">   35 </span><span class="sym"></span>    io__nl.
<span class="line">   36 </span>
<span class="line">   37 </span>
<span class="line">   38 </span>
<span class="line">   39 </span><span class="sym">:-</span> func nested_loop<span class="sym">(</span>int<span class="sym">) =</span> int.
<span class="line">   40 </span>
<span class="line">   41 </span>nested_loop<span class="sym">(</span>N<span class="sym">) =
</span><span class="line">   42 </span><span class="sym"></span>    loop<span class="sym">(</span>N<span class="sym">,</span> loop<span class="sym">(</span>N<span class="sym">,</span> loop<span class="sym">(</span>N<span class="sym">,</span> loop<span class="sym">(</span>N<span class="sym">,</span> loop<span class="sym">(</span>N<span class="sym">,</span> loop<span class="sym">(</span>N<span class="sym">,</span> plus<span class="sym">(</span><span class="num">1</span><span class="sym">)))))),</span> <span class="num">0</span><span class="sym">)</span>.
<span class="line">   43 </span>
<span class="line">   44 </span>
<span class="line">   45 </span>
<span class="line">   46 </span><span class="sym">:-</span> func loop<span class="sym">(</span>int<span class="sym">,</span> func<span class="sym">(</span>int<span class="sym">) =</span> int<span class="sym">,</span> int<span class="sym">) =</span> int.
<span class="line">   47 </span>
<span class="line">   48 </span>loop<span class="sym">(</span>I<span class="sym">,</span> Fn<span class="sym">,</span> X<span class="sym">) = (</span> if I <span class="sym">&gt;</span> <span class="num">0</span> then loop<span class="sym">(</span>I <span class="num">- 1</span><span class="sym">,</span> Fn<span class="sym">,</span> Fn<span class="sym">(</span>X<span class="sym">))</span> else X <span class="sym">)</span>.
