<span class="line">    1 </span><span class="com">(* The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="com">    http://shootout.alioth.debian.org
</span><span class="line">    3 </span><span class="com"> 
</span><span class="line">    4 </span><span class="com">    contributed by Isaac Gouy (Oberon-2 novice)
</span><span class="line">    5 </span><span class="com"> 
</span><span class="line">    6 </span><span class="com"> 
</span><span class="line">    7 </span><span class="com"> See:
</span><span class="line">    8 </span><span class="com"> OBJECT-ORIENTED PROGRAMMING IN OBERON-2
</span><span class="line">    9 </span><span class="com"> http://www.cas.mcmaster.ca/~kahl/SE3E03/2002/Oberon2/Oberon2.OOP.pdf
</span><span class="line">   10 </span><span class="com"> *)</span>
<span class="line">   11 </span>
<span class="line">   12 </span>  <span class="kwa">MODULE</span> Objinst<span class="sym">;
</span><span class="line">   13 </span><span class="sym"> </span><span class="kwa">IMPORT</span> LangShootout<span class="sym">,</span> Out<span class="sym">;
</span><span class="line">   14 </span><span class="sym"> 
</span><span class="line">   15 </span><span class="sym"> </span><span class="kwa">TYPE
</span><span class="line">   16 </span><span class="kwa"> </span>   ToggleDesc <span class="sym">=</span> <span class="kwa">RECORD
</span><span class="line">   17 </span><span class="kwa"> </span>      state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"> 
</span><span class="line">   20 </span><span class="sym"> </span>   Toggle <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> ToggleDesc<span class="sym">;
</span><span class="line">   21 </span><span class="sym"> 
</span><span class="line">   22 </span><span class="sym"> 
</span><span class="line">   23 </span><span class="sym"> </span>   NthToggleDesc <span class="sym">=</span> <span class="kwa">RECORD</span> <span class="sym">(</span>ToggleDesc<span class="sym">)
</span><span class="line">   24 </span><span class="sym"> </span>      countMax<span class="sym">,</span> counter<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   26 </span><span class="sym"> 
</span><span class="line">   27 </span><span class="sym"> </span>   NthToggle <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> NthToggleDesc<span class="sym">;
</span><span class="line">   28 </span><span class="sym"> 
</span><span class="line">   29 </span><span class="sym"> </span><span class="kwa">VAR
</span><span class="line">   30 </span><span class="kwa"> </span>   n<span class="sym">,</span> i<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym"> </span>   toggle<span class="sym">:</span> Toggle<span class="sym">;
</span><span class="line">   32 </span><span class="sym"> </span>   ntoggle<span class="sym">:</span> NthToggle<span class="sym">;
</span><span class="line">   33 </span><span class="sym"> 
</span><span class="line">   34 </span><span class="sym"> 
</span><span class="line">   35 </span><span class="sym"> </span><span class="kwa">PROCEDURE</span> NewToggle<span class="sym">(</span>state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">):</span> Toggle<span class="sym">;
</span><span class="line">   36 </span><span class="sym"> </span><span class="kwa">VAR</span> t<span class="sym">:</span> Toggle<span class="sym">;
</span><span class="line">   37 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   38 </span><span class="kwa">    NEW</span><span class="sym">(</span>t<span class="sym">);</span> t<span class="sym">.</span>state <span class="sym">:=</span> state<span class="sym">;
</span><span class="line">   39 </span><span class="sym"> </span>   <span class="kwa">RETURN</span> t<span class="sym">;
</span><span class="line">   40 </span><span class="sym"> </span><span class="kwa">END</span> NewToggle<span class="sym">;
</span><span class="line">   41 </span><span class="sym"> 
</span><span class="line">   42 </span><span class="sym"> </span><span class="kwa">PROCEDURE</span> <span class="sym">(</span>t<span class="sym">:</span>Toggle<span class="sym">)</span> Activate<span class="sym">();
</span><span class="line">   43 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   44 </span><span class="kwa"> </span>   t<span class="sym">.</span>state <span class="sym">:=</span> ~t<span class="sym">.</span>state<span class="sym">;
</span><span class="line">   45 </span><span class="sym"> </span><span class="kwa">END</span> Activate<span class="sym">;
</span><span class="line">   46 </span><span class="sym"> 
</span><span class="line">   47 </span><span class="sym"> </span><span class="kwa">PROCEDURE</span> <span class="sym">(</span>t<span class="sym">:</span>Toggle<span class="sym">)</span> Value<span class="sym">():</span> <span class="kwb">BOOLEAN</span><span class="sym">;
</span><span class="line">   48 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   49 </span><span class="kwa">    RETURN</span> t<span class="sym">.</span>state<span class="sym">;
</span><span class="line">   50 </span><span class="sym"> </span><span class="kwa">END</span> Value<span class="sym">;
</span><span class="line">   51 </span><span class="sym"> 
</span><span class="line">   52 </span><span class="sym"> 
</span><span class="line">   53 </span><span class="sym"> </span><span class="kwa">PROCEDURE</span> NewNthToggle<span class="sym">(</span>state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span> countMax<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">):</span> NthToggle<span class="sym">;
</span><span class="line">   54 </span><span class="sym"> </span><span class="kwa">VAR</span> t<span class="sym">:</span> NthToggle<span class="sym">;
</span><span class="line">   55 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   56 </span><span class="kwa">    NEW</span><span class="sym">(</span>t<span class="sym">);
</span><span class="line">   57 </span><span class="sym"> </span>   t<span class="sym">.</span>counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   58 </span><span class="sym"> </span>   t<span class="sym">.</span>state <span class="sym">:=</span> state<span class="sym">;
</span><span class="line">   59 </span><span class="sym"> </span>   t<span class="sym">.</span>countMax <span class="sym">:=</span> countMax<span class="sym">;
</span><span class="line">   60 </span><span class="sym"> </span>   <span class="kwa">RETURN</span> t<span class="sym">;
</span><span class="line">   61 </span><span class="sym"> </span><span class="kwa">END</span> NewNthToggle<span class="sym">;
</span><span class="line">   62 </span><span class="sym"> 
</span><span class="line">   63 </span><span class="sym"> </span><span class="kwa">PROCEDURE</span> <span class="sym">(</span>t<span class="sym">:</span>NthToggle<span class="sym">)</span> Activate<span class="sym">();
</span><span class="line">   64 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   65 </span><span class="kwa">    INC</span><span class="sym">(</span>t<span class="sym">.</span>counter<span class="sym">);
</span><span class="line">   66 </span><span class="sym"> </span>   <span class="kwa">IF</span> t<span class="sym">.</span>counter <span class="sym">&gt;=</span> t<span class="sym">.</span>countMax <span class="kwa">THEN
</span><span class="line">   67 </span><span class="kwa"> </span>      t<span class="sym">.</span>state <span class="sym">:=</span> ~t<span class="sym">.</span>state<span class="sym">;
</span><span class="line">   68 </span><span class="sym"> </span>      t<span class="sym">.</span>counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   69 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   70 </span><span class="sym"> </span><span class="kwa">END</span> Activate<span class="sym">;
</span><span class="line">   71 </span><span class="sym"> 
</span><span class="line">   72 </span><span class="sym"> 
</span><span class="line">   73 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   74 </span><span class="kwa"> </span>   n <span class="sym">:=</span> LangShootout<span class="sym">.</span>Argi<span class="sym">();
</span><span class="line">   75 </span><span class="sym"> 
</span><span class="line">   76 </span><span class="sym"> </span>   toggle <span class="sym">:=</span> NewToggle<span class="sym">(</span>TRUE<span class="sym">);
</span><span class="line">   77 </span><span class="sym"> </span>   FOR i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">TO</span> <span class="num">5</span> <span class="kwa">DO
</span><span class="line">   78 </span><span class="kwa"> </span>      toggle<span class="sym">.</span>Activate<span class="sym">();
</span><span class="line">   79 </span><span class="sym"> </span>      <span class="kwa">IF</span> toggle<span class="sym">.</span>Value<span class="sym">()</span> <span class="kwa">THEN</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;true&quot;</span><span class="sym">);
</span><span class="line">   80 </span><span class="sym"> </span>                        <span class="kwa">ELSE</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;false&quot;</span><span class="sym">);</span> <span class="kwa">END</span><span class="sym">;
</span><span class="line">   81 </span><span class="sym"> </span>      Out<span class="sym">.</span>Ln<span class="sym">;
</span><span class="line">   82 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   83 </span><span class="sym"> 
</span><span class="line">   84 </span><span class="sym"> </span>   FOR i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">TO</span> n <span class="kwa">DO</span> toggle <span class="sym">:=</span> NewToggle<span class="sym">(</span>TRUE<span class="sym">);</span> <span class="kwa">END</span><span class="sym">;
</span><span class="line">   85 </span><span class="sym"> 
</span><span class="line">   86 </span><span class="sym"> </span>   Out<span class="sym">.</span>Ln<span class="sym">;
</span><span class="line">   87 </span><span class="sym"> </span>   ntoggle <span class="sym">:=</span> NewNthToggle<span class="sym">(</span>TRUE<span class="sym">,</span><span class="num">3</span><span class="sym">);
</span><span class="line">   88 </span><span class="sym"> </span>   FOR i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">TO</span> <span class="num">8</span> <span class="kwa">DO
</span><span class="line">   89 </span><span class="kwa"> </span>      ntoggle<span class="sym">.</span>Activate<span class="sym">();
</span><span class="line">   90 </span><span class="sym"> </span>      <span class="kwa">IF</span> ntoggle<span class="sym">.</span>Value<span class="sym">()</span> <span class="kwa">THEN</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;true&quot;</span><span class="sym">);
</span><span class="line">   91 </span><span class="sym"> </span>                         <span class="kwa">ELSE</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;false&quot;</span><span class="sym">);</span> <span class="kwa">END</span><span class="sym">;
</span><span class="line">   92 </span><span class="sym"> </span>      Out<span class="sym">.</span>Ln<span class="sym">;
</span><span class="line">   93 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   94 </span><span class="sym"> </span>   FOR i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">TO</span> n <span class="kwa">DO</span> ntoggle <span class="sym">:=</span> NewNthToggle<span class="sym">(</span>TRUE<span class="sym">,</span><span class="num">3</span><span class="sym">);</span> <span class="kwa">END</span><span class="sym">;
</span><span class="line">   95 </span><span class="sym"> </span><span class="kwa">END</span> Objinst<span class="sym">.</span> 
