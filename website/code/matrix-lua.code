<span class="slc">-- $Id: matrix-lua.code,v 1.9 2006-09-20 05:51:53 bfulgham Exp $</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- with help from Roberto Ierusalimschy</span>

<span class="kwa">local</span> n <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">((</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">or</span> <span class="num">1</span><span class="sym">)</span>

<span class="kwa">local</span> size <span class="sym">=</span> <span class="num">30</span>

<span class="kwa">function</span> mkmatrix<span class="sym">(</span>rows<span class="sym">,</span> cols<span class="sym">)</span>
    <span class="kwa">local</span> count <span class="sym">=</span> <span class="num">1</span>
    <span class="kwa">local</span> mx <span class="sym">= {}</span>
    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>rows <span class="kwa">do</span>
	<span class="kwa">local</span> row <span class="sym">= {}</span>
	<span class="kwa">for</span> j<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>cols <span class="kwa">do</span>
	    row<span class="sym">[</span>j<span class="sym">] =</span> count
	    count <span class="sym">=</span> count <span class="sym">+</span> <span class="num">1</span>
	<span class="kwa">end</span>
	mx<span class="sym">[</span>i<span class="sym">] =</span> row
    <span class="kwa">end</span>
    <span class="kwa">return</span><span class="sym">(</span>mx<span class="sym">)</span>
<span class="kwa">end</span>

<span class="kwa">function</span> mmult<span class="sym">(</span>rows<span class="sym">,</span> cols<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">)</span>
    <span class="kwa">local</span> m3 <span class="sym">= {}</span>
    <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>rows <span class="kwa">do</span>
        <span class="kwa">local</span> m3i <span class="sym">= {}</span>
        m3<span class="sym">[</span>i<span class="sym">] =</span> m3i
        <span class="kwa">local</span> m1i <span class="sym">=</span> m1<span class="sym">[</span>i<span class="sym">]</span>              <span class="slc">-- &quot;cache&quot; m1[i]</span>
        <span class="kwa">for</span> j<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>cols <span class="kwa">do</span>
            <span class="kwa">local</span> rowj <span class="sym">=</span> <span class="num">0</span>
            <span class="kwa">for</span> k<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>cols <span class="kwa">do</span>
                rowj <span class="sym">=</span> rowj <span class="sym">+</span> m1i<span class="sym">[</span>k<span class="sym">] *</span> m2<span class="sym">[</span>k<span class="sym">][</span>j<span class="sym">]</span>
            <span class="kwa">end</span>
            m3i<span class="sym">[</span>j<span class="sym">] =</span> rowj
        <span class="kwa">end</span>
    <span class="kwa">end</span>
    <span class="kwa">return</span><span class="sym">(</span>m3<span class="sym">)</span>
<span class="kwa">end</span>

<span class="kwa">local</span> m1 <span class="sym">=</span> mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">)</span>
<span class="kwa">local</span> m2 <span class="sym">=</span> mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">)</span>
<span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>n <span class="kwa">do</span>
    mm <span class="sym">=</span> mmult<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">)</span>
<span class="kwa">end</span>
io.<span class="kwa">write</span><span class="sym">(</span><span class="kwb">string</span>.<span class="kwa">format</span><span class="sym">(</span><span class="str">&quot;%d %d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> mm<span class="sym">[</span><span class="num">1</span><span class="sym">][</span><span class="num">1</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">3</span><span class="sym">][</span><span class="num">4</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">4</span><span class="sym">][</span><span class="num">3</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">5</span><span class="sym">][</span><span class="num">5</span><span class="sym">]))</span>
