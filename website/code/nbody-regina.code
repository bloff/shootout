<span class="com">/* ------------------------------------------------------------------ */</span>
<span class="com">/* The Great Computer Language Shootout                               */</span>
<span class="com">/* http://shootout.alioth.debian.org/                                 */</span>
<span class="com">/*                                                                    */</span>
<span class="com">/* This version uses the CRT's 'sqrt' function rather than a native   */</span>
<span class="com">/* REXX 'sqrt' subroutine with a consequent performance improvement   */</span>
<span class="com">/* of about 50%.                                                      */</span>
<span class="com">/*                                                                    */</span>
<span class="com">/* Contributed by Anthony Borla                                       */</span>
<span class="com">/* ------------------------------------------------------------------ */</span>

numeric digits <span class="num">14</span>

NULL <span class="sym">=</span> <span class="str">&quot;&quot;</span>
PI <span class="sym">=</span> <span class="num">3.141592653589793</span> <span class="sym">;</span> SOLAR_MASS <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> PI <span class="sym">*</span> PI <span class="sym">;</span> DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span>

constants <span class="sym">=</span> <span class="str">&quot;NULL PI SOLAR_MASS DAYS_PER_YEAR&quot;</span>

BODIES<span class="sym">.</span>list <span class="sym">=</span> <span class="str">&quot;SUN JUPITER SATURN URANUS NEPTUNE&quot;</span>

BODIES<span class="sym">.</span>sun<span class="sym">.</span>x <span class="sym">=</span> <span class="num">0.0</span>
BODIES<span class="sym">.</span>sun<span class="sym">.</span>y <span class="sym">=</span> <span class="num">0.0</span>
BODIES<span class="sym">.</span>sun<span class="sym">.</span>z <span class="sym">=</span> <span class="num">0.0</span>
BODIES<span class="sym">.</span>sun<span class="sym">.</span>vx <span class="sym">=</span> <span class="num">0.0</span>
BODIES<span class="sym">.</span>sun<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">0.0</span>
BODIES<span class="sym">.</span>sun<span class="sym">.</span>vz <span class="sym">=</span> <span class="num">0.0</span>
BODIES<span class="sym">.</span>sun<span class="sym">.</span>mass <span class="sym">=</span> SOLAR_MASS

BODIES<span class="sym">.</span>jupiter<span class="sym">.</span>x <span class="sym">=</span> <span class="num">4.84143144246472090e+00</span>
BODIES<span class="sym">.</span>jupiter<span class="sym">.</span>y <span class="sym">= -</span><span class="num">1.16032004402742839e+00</span>
BODIES<span class="sym">.</span>jupiter<span class="sym">.</span>z <span class="sym">= -</span><span class="num">1.03622044471123109e-01</span>
BODIES<span class="sym">.</span>jupiter<span class="sym">.</span>vx <span class="sym">=</span> <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>jupiter<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>jupiter<span class="sym">.</span>vz <span class="sym">= -</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>jupiter<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> SOLAR_MASS

BODIES<span class="sym">.</span>saturn<span class="sym">.</span>x <span class="sym">=</span> <span class="num">8.34336671824457987e+00</span>
BODIES<span class="sym">.</span>saturn<span class="sym">.</span>y <span class="sym">=</span> <span class="num">4.12479856412430479e+00</span>
BODIES<span class="sym">.</span>saturn<span class="sym">.</span>z <span class="sym">= -</span><span class="num">4.03523417114321381e-01</span>
BODIES<span class="sym">.</span>saturn<span class="sym">.</span>vx <span class="sym">= -</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>saturn<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>saturn<span class="sym">.</span>vz <span class="sym">=</span> <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>saturn<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> SOLAR_MASS

BODIES<span class="sym">.</span>uranus<span class="sym">.</span>x <span class="sym">=</span> <span class="num">1.28943695621391310e+01</span>
BODIES<span class="sym">.</span>uranus<span class="sym">.</span>y <span class="sym">= -</span><span class="num">1.51111514016986312e+01</span>
BODIES<span class="sym">.</span>uranus<span class="sym">.</span>z <span class="sym">= -</span><span class="num">2.23307578892655734e-01</span>
BODIES<span class="sym">.</span>uranus<span class="sym">.</span>vx <span class="sym">=</span> <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>uranus<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>uranus<span class="sym">.</span>vz <span class="sym">= -</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>uranus<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> SOLAR_MASS

BODIES<span class="sym">.</span>neptune<span class="sym">.</span>x <span class="sym">=</span> <span class="num">1.53796971148509165e+01</span>
BODIES<span class="sym">.</span>neptune<span class="sym">.</span>y <span class="sym">= -</span><span class="num">2.59193146099879641e+01</span>
BODIES<span class="sym">.</span>neptune<span class="sym">.</span>z <span class="sym">=</span> <span class="num">1.79258772950371181e-01</span>
BODIES<span class="sym">.</span>neptune<span class="sym">.</span>vx <span class="sym">=</span> <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>neptune<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>neptune<span class="sym">.</span>vz <span class="sym">= -</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> DAYS_PER_YEAR
BODIES<span class="sym">.</span>neptune<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> SOLAR_MASS

<span class="com">/* ----------------------------- */</span>

call initSqrt

<span class="com">/* ----------------------------- */</span>

N <span class="sym">=</span> <span class="kwd">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) ;</span> <span class="kwa">if</span> <span class="kwd">DATATYPE</span><span class="sym">(</span>N<span class="sym">)</span> \= <span class="str">'NUM'</span> <span class="sym">|</span> N <span class="sym">&lt;</span> <span class="num">1</span> then <span class="sym">;</span> N <span class="sym">=</span> <span class="num">1000</span>

call offsetMomentum

say <span class="kwd">FORMAT</span><span class="sym">(</span><span class="kwd">energy</span><span class="sym">(),,</span><span class="num">9</span><span class="sym">)</span>

<span class="kwa">do</span> N <span class="sym">;</span> call advance <span class="num">0.01</span> <span class="sym">;</span> end

say <span class="kwd">FORMAT</span><span class="sym">(</span><span class="kwd">energy</span><span class="sym">(),,</span><span class="num">9</span><span class="sym">)</span>

exit <span class="num">0</span>

<span class="com">/* ----------------------------- */</span>

advance <span class="sym">:</span> procedure <span class="kwd">expose</span> <span class="sym">(</span>constants<span class="sym">)</span> BODIES<span class="sym">.</span>
  bodylist <span class="sym">=</span> BODIES<span class="sym">.</span>list <span class="sym">;</span> dt <span class="sym">=</span> <span class="kwd">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>

  <span class="kwa">do while</span> bodylist <span class="sym">&lt;&gt;</span> NULL
    parse var bodylist body bodylist
    nextbodylist <span class="sym">=</span> bodylist

    <span class="kwa">do while</span> nextbodylist <span class="sym">&lt;&gt;</span> NULL
      parse var nextbodylist nextbody nextbodylist

      dx <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>x <span class="sym">-</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>x
      dy <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>y <span class="sym">-</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>y
      dz <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>z <span class="sym">-</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>z

      distance <span class="sym">=</span> <span class="kwd">sqrt</span><span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)</span>
      mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)</span>

      BODIES<span class="sym">.</span>body<span class="sym">.</span>vx <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vx <span class="sym">-</span> dx <span class="sym">*</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>mass <span class="sym">*</span> mag
      BODIES<span class="sym">.</span>body<span class="sym">.</span>vy <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vy <span class="sym">-</span> dy <span class="sym">*</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>mass <span class="sym">*</span> mag
      BODIES<span class="sym">.</span>body<span class="sym">.</span>vz <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vz <span class="sym">-</span> dz <span class="sym">*</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>mass <span class="sym">*</span> mag

      BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>vx <span class="sym">=</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>vx <span class="sym">+</span> dx <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>mass <span class="sym">*</span> mag
      BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>vy <span class="sym">=</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>vy <span class="sym">+</span> dy <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>mass <span class="sym">*</span> mag
      BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>vz <span class="sym">=</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>vz <span class="sym">+</span> dz <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>mass <span class="sym">*</span> mag
    end
  end

  bodylist <span class="sym">=</span> BODIES<span class="sym">.</span>list

  <span class="kwa">do while</span> bodylist <span class="sym">&lt;&gt;</span> NULL
    parse var bodylist body bodylist
    BODIES<span class="sym">.</span>body<span class="sym">.</span>x <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>x <span class="sym">+</span> dt <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vx
    BODIES<span class="sym">.</span>body<span class="sym">.</span>y <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>y <span class="sym">+</span> dt <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vy
    BODIES<span class="sym">.</span>body<span class="sym">.</span>z <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>z <span class="sym">+</span> dt <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vz
  end

  <span class="kwa">return</span>

<span class="com">/* ----------------------------- */</span>

energy <span class="sym">:</span> procedure <span class="kwd">expose</span> <span class="sym">(</span>constants<span class="sym">)</span> BODIES<span class="sym">.</span>
  e <span class="sym">=</span> <span class="num">0.0</span> <span class="sym">;</span> bodylist <span class="sym">=</span> BODIES<span class="sym">.</span>list

  <span class="kwa">do while</span> bodylist <span class="sym">&lt;&gt;</span> NULL
    parse var bodylist body bodylist
    e <span class="sym">=</span> e <span class="sym">+</span> <span class="num">0.5</span> <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>mass <span class="sym">* (</span>BODIES<span class="sym">.</span>body<span class="sym">.</span>vx <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vx <span class="sym">+</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vy <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vy <span class="sym">+</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vz <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vz<span class="sym">)</span>
    nextbodylist <span class="sym">=</span> bodylist

    <span class="kwa">do while</span> nextbodylist <span class="sym">&lt;&gt;</span> NULL
      parse var nextbodylist nextbody nextbodylist
      dx <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>x <span class="sym">-</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>x
      dy <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>y <span class="sym">-</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>y
      dz <span class="sym">=</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>z <span class="sym">-</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>z
      distance <span class="sym">=</span> <span class="kwd">sqrt</span><span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)</span>
      e <span class="sym">=</span> e <span class="sym">- (</span>BODIES<span class="sym">.</span>body<span class="sym">.</span>mass <span class="sym">*</span> BODIES<span class="sym">.</span>nextbody<span class="sym">.</span>mass<span class="sym">) /</span> distance
    end
  end

  <span class="kwa">return</span> e

<span class="com">/* ----------------------------- */</span>

offsetMomentum <span class="sym">:</span> procedure <span class="kwd">expose</span> <span class="sym">(</span>constants<span class="sym">)</span> BODIES<span class="sym">.</span>
  px <span class="sym">=</span> <span class="num">0.0</span> <span class="sym">;</span> py <span class="sym">=</span> <span class="num">0.0</span> <span class="sym">;</span> pz <span class="sym">=</span> <span class="num">0.0</span> <span class="sym">;</span> bodylist <span class="sym">=</span> BODIES<span class="sym">.</span>list

  <span class="kwa">do while</span> bodylist <span class="sym">&lt;&gt;</span> NULL
    parse var bodylist body bodylist
    px <span class="sym">=</span> px <span class="sym">+</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vx <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>mass
    py <span class="sym">=</span> py <span class="sym">+</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vy <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>mass
    pz <span class="sym">=</span> pz <span class="sym">+</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>vz <span class="sym">*</span> BODIES<span class="sym">.</span>body<span class="sym">.</span>mass
  end

  BODIES<span class="sym">.</span>sun<span class="sym">.</span>vx <span class="sym">= -(</span>px <span class="sym">/</span> SOLAR_MASS<span class="sym">)</span>
  BODIES<span class="sym">.</span>sun<span class="sym">.</span>vy <span class="sym">= -(</span>py <span class="sym">/</span> SOLAR_MASS<span class="sym">)</span>
  BODIES<span class="sym">.</span>sun<span class="sym">.</span>vz <span class="sym">= -(</span>pz <span class="sym">/</span> SOLAR_MASS<span class="sym">)</span>

  <span class="kwa">return</span>

<span class="com">/* ----------------------------- */</span>

initSqrt <span class="sym">:</span> procedure
  sqrt<span class="sym">.</span>calltype <span class="sym">=</span> <span class="str">'cdecl as function with parameters'</span>
  sqrt<span class="sym">.</span><span class="kwa">return</span><span class="sym">.</span>type <span class="sym">=</span> <span class="str">'float64'</span>
  sqrt<span class="sym">.</span><span class="kwa">return</span><span class="sym">.</span>name <span class="sym">=</span> <span class="str">'return value'</span>

  sqrt<span class="num">.0</span> <span class="sym">=</span> <span class="num">1</span>

  sqrt<span class="num">.1</span><span class="sym">.</span>type <span class="sym">=</span> <span class="str">'float64'</span>
  sqrt<span class="num">.1</span><span class="sym">.</span>name <span class="sym">=</span> <span class="str">'number'</span>

  err <span class="sym">=</span> <span class="kwd">rxFuncDefine</span><span class="sym">(</span><span class="str">'sqrt'</span><span class="sym">,</span> <span class="str">'libm.so.6'</span><span class="sym">,</span> <span class="str">'sqrt'</span><span class="sym">,</span> <span class="str">'sqrt.'</span><span class="sym">)</span>

  <span class="kwa">if</span> err \= <span class="num">0</span> then
    say <span class="str">&quot;Error registering function 'sqrt'&quot;</span>

  <span class="kwa">return</span>
