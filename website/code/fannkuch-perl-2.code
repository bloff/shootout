<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># Initial port from C by Steve Clark</span>
<span class="slc"># Rewrite by Kalev Soikonen</span>

<span class="kwa">sub</span> fannkuch <span class="sym">{</span>
    <span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$n</span><span class="sym">) =</span> shift<span class="sym">;</span>
    <span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$iter</span><span class="sym">,</span> <span class="kwb">$flips</span><span class="sym">,</span> <span class="kwb">$maxflips</span><span class="sym">,</span> <span class="kwb">$i</span><span class="sym">);</span>
    <span class="kwc">my</span> <span class="sym">(</span><span class="kwb">&#64;q</span><span class="sym">,</span> <span class="kwb">&#64;p</span><span class="sym">,</span> <span class="kwb">&#64;count</span><span class="sym">);</span>

    <span class="kwb">$iter</span> <span class="sym">=</span> <span class="kwb">$maxflips</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
    <span class="kwb">&#64;p</span> <span class="sym">=</span> <span class="kwb">&#64;count</span> <span class="sym">= (</span><span class="num">1</span>..<span class="kwb">$n</span><span class="sym">);</span>

    TRY<span class="sym">:</span> <span class="kwa">while</span> <span class="sym">(</span><span class="num">1</span><span class="sym">) {</span>
	print <span class="kwb">&#64;p</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$iter</span><span class="sym">++ &lt;</span> <span class="num">30</span><span class="sym">);</span>

<span class="slc">#	splice &#64;count, 0, $i, (1..$i);</span>

	<span class="kwb">$flips</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
	<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">&#64;q</span> <span class="sym">=</span> <span class="kwb">&#64;p</span><span class="sym">;</span> <span class="kwb">$q</span><span class="sym">[</span><span class="num">0</span><span class="sym">] !=</span> <span class="num">1</span><span class="sym">; ) {</span>
	    unshift <span class="kwb">&#64;q</span><span class="sym">,</span> reverse splice <span class="kwb">&#64;q</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="kwb">$q</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
	    <span class="kwb">$flips</span><span class="sym">++;</span>
	<span class="sym">}</span>
	<span class="kwb">$maxflips</span> <span class="sym">=</span> <span class="kwb">$flips</span> <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$flips</span> <span class="sym">&gt;</span> <span class="kwb">$maxflips</span><span class="sym">);</span>

	<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span> <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span> <span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++) {</span>
	    splice <span class="kwb">&#64;p</span><span class="sym">,</span> <span class="kwb">$i</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> shift <span class="kwb">&#64;p</span><span class="sym">;</span>
	    <span class="kwa">next</span> TRY <span class="kwa">if</span> <span class="sym">(--</span><span class="kwb">$count</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]);</span>
	    <span class="kwb">$count</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
	<span class="sym">}</span>
	<span class="kwa">return</span> <span class="kwb">$maxflips</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">for</span> <span class="sym">(</span>shift <span class="sym">||</span> <span class="num">7</span><span class="sym">) {</span>
    print <span class="str">&quot;Pfannkuchen($_) = &quot;</span>.<span class="kwd">fannkuch</span><span class="sym">(</span><span class="kwb">$_</span><span class="sym">)</span>.<span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
<span class="sym">}</span>

