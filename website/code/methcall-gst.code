<span class="str">&quot;  The Great Computer Language Shootout</span>
<span class="str">   contributed by Isaac Gouy</span>
<span class="str"></span>
<span class="str">   To run: gst -QI /usr/share/gnu-smalltalk/gst.im methcall.st -a 1000000</span>
<span class="str">&quot;</span>

Object subclass<span class="sym">:</span> <span class="slc">#Toggle</span>
instanceVariableNames<span class="sym">:</span> <span class="str">'state'</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!</span>

<span class="sym">!</span>Toggle class methodsFor<span class="sym">:</span> <span class="str">'instance creation'</span><span class="sym">!</span>

new<span class="sym">:</span> aBoolean
   ^self basicNew initialize<span class="sym">:</span> aBoolean <span class="sym">! !</span>

<span class="sym">!</span>Toggle methodsFor<span class="sym">:</span> <span class="str">'private'</span><span class="sym">!</span>

initialize<span class="sym">:</span> aBoolean
   state <span class="sym">:=</span> aBoolean <span class="sym">! !</span>

<span class="sym">!</span>Toggle methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!</span>

activate
   state <span class="sym">:=</span> state <span class="kwa">not</span> <span class="sym">!</span>

state
   ^state <span class="sym">! !</span>


Toggle subclass<span class="sym">:</span> <span class="slc">#NToggle</span>
instanceVariableNames<span class="sym">:</span> <span class="str">'trigger count'</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!</span>

<span class="sym">!</span>NToggle class methodsFor<span class="sym">:</span> <span class="str">'instance creation'</span><span class="sym">!</span>

new<span class="sym">:</span> aBoolean withTrigger<span class="sym">:</span> anInteger
   ^<span class="sym">(</span>super new<span class="sym">:</span> aBoolean<span class="sym">)</span> withTrigger<span class="sym">:</span> anInteger <span class="sym">! !</span>

<span class="sym">!</span>NToggle methodsFor<span class="sym">:</span> <span class="str">'private'</span><span class="sym">!</span>

withTrigger<span class="sym">:</span> anInteger
   trigger <span class="sym">:=</span> anInteger.
   count <span class="sym">:=</span> <span class="num">0</span> <span class="sym">! !</span>

<span class="sym">!</span>NToggle methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!</span>

activate
   <span class="str">&quot;Toggle and answer the receiver&quot;</span>
   <span class="sym">(</span>count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1</span><span class="sym">) &gt;=</span> trigger ifTrue<span class="sym">: [</span>
      state <span class="sym">:=</span> state <span class="kwa">not</span>.
      count <span class="sym">:=</span> <span class="num">0</span>
   <span class="sym">] ! !</span>


<span class="sym">|</span> n toggle ntoggle value <span class="sym">|</span>
n <span class="sym">:=</span> Smalltalk arguments first asInteger.
toggle <span class="sym">:=</span> Toggle new<span class="sym">:</span> true.
n timesRepeat<span class="sym">: [</span>value <span class="sym">:=</span> toggle activate state<span class="sym">]</span>.
value displayNl.

ntoggle <span class="sym">:=</span> NToggle new<span class="sym">:</span> true withTrigger<span class="sym">:</span> <span class="num">3</span>.
n timesRepeat<span class="sym">: [</span>value <span class="sym">:=</span> ntoggle activate state<span class="sym">]</span>.
value displayNl <span class="sym">!</span>
