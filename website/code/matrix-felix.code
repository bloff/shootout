<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">//
</FONT></I><I><FONT COLOR="#B22222">// Contributed by John Skaller
</FONT></I><I><FONT COLOR="#B22222">//
</FONT></I>include <B><FONT COLOR="#BC8F8F">&quot;std&quot;</FONT></B>;
n := atoi(System::argv 1);
<I><FONT COLOR="#B22222">//Adapted from C++ solution.
</FONT></I>
body <B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B><B><FONT COLOR="#BC8F8F">&quot;
int **mkmatrix(int rows, int cols) {
  int i, j, count = 1;
  int **m = (int **) malloc(rows * sizeof(int *));
  for (i=0; i&lt;rows; i++) {
    m[i] = (int *) malloc(cols * sizeof(int));
    for (j=0; j&lt;cols; j++) m[i][j] = count++;
  }
  return(m);
}

void zeromatrix(int rows, int cols, int **m) {
  int i, j;
  for (i=0; i&lt;rows; i++)
  for (j=0; j&lt;cols; j++)
    m[i][j] = 0;
}

void freematrix(int rows, int **m) {
  while (--rows &gt; -1) free(m[rows]);
  free(m);
}

void mmult(int rows, int cols, int **m1, int **m2, int **m3) {
  int i, j, k, val;
  for (i=0; i&lt;rows; i++)
  for (j=0; j&lt;cols; j++) {
    val = 0;
    for (k=0; k&lt;cols; k++) val += m1[i][k] * m2[k][j];
    m3[i][j] = val;
  }
}

int get(int **mm, int x, int y) { return mm[x][y];}
&quot;</FONT></B><B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B>;

type matrix = <B><FONT COLOR="#BC8F8F">&quot;int**&quot;</FONT></B>;
fun mkmatrix: <B><FONT COLOR="#228B22">int</FONT></B> * <B><FONT COLOR="#228B22">int</FONT></B> -&gt; matrix;
fun get: matrix * <B><FONT COLOR="#228B22">int</FONT></B> * <B><FONT COLOR="#228B22">int</FONT></B> -&gt; <B><FONT COLOR="#228B22">int</FONT></B>;
proc zeromatrix: matrix;
proc mmult: <B><FONT COLOR="#228B22">int</FONT></B> * <B><FONT COLOR="#228B22">int</FONT></B> * matrix * matrix * matrix;
proc freematrix: <B><FONT COLOR="#228B22">int</FONT></B> * matrix;

SIZE := 30;
m1 := mkmatrix(SIZE,SIZE);
m2 := mkmatrix(SIZE,SIZE);
mm := mkmatrix(SIZE,SIZE);

var i = n;
until i == 0 <B><FONT COLOR="#A020F0">do</FONT></B>
  mmult(SIZE, SIZE, m1, m2, mm);
  --i;
done;

<B><FONT COLOR="#0000FF">print</FONT></B> (get(mm,0,0)); print <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>;
<B><FONT COLOR="#0000FF">print</FONT></B> (get(mm,2,3)); print <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>;
<B><FONT COLOR="#0000FF">print</FONT></B> (get(mm,3,2)); print <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>;
<B><FONT COLOR="#0000FF">print</FONT></B> (get(mm,4,4)); endl;

<B><FONT COLOR="#0000FF">freematrix</FONT></B>(SIZE, m1);
<B><FONT COLOR="#0000FF">freematrix</FONT></B>(SIZE, m2);
<B><FONT COLOR="#0000FF">freematrix</FONT></B>(SIZE, mm);
</pre></td></tr></table>
