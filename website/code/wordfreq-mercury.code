<span class="line">    1 </span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">% wordfreq.m
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">% Ralph Becket &lt;rbeck&#64;microsoft.com&gt;
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">% Tue Jan  9 15:56:12 GMT 2001
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">%
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="sym">:-</span> module mytest.
<span class="line">   10 </span><span class="sym">:-</span> interface.
<span class="line">   11 </span><span class="sym">:-</span> import_module io.
<span class="line">   12 </span>
<span class="line">   13 </span><span class="sym">:-</span> pred main<span class="sym">(</span>io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="line">   14 </span><span class="sym">:-</span> mode main<span class="sym">(</span>di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   15 </span>
<span class="line">   16 </span><span class="sym">:-</span> implementation.
<span class="line">   17 </span>
<span class="line">   18 </span><span class="sym">:-</span> import_module string<span class="sym">,</span> int<span class="sym">,</span> list<span class="sym">,</span> require<span class="sym">,</span> std_util<span class="sym">,</span> char<span class="sym">,</span> map.
<span class="line">   19 </span>
<span class="line">   20 </span>main <span class="sym">--&gt;
</span><span class="line">   21 </span><span class="sym"></span>    count_word_freqs<span class="sym">(</span>map__init<span class="sym">,</span> FreqMap<span class="sym">),
</span><span class="line">   22 </span><span class="sym">    {</span> X <span class="sym">=</span> list__sort<span class="sym">(</span>list__map<span class="sym">(</span>func<span class="sym">(</span>K<span class="sym">-</span>V<span class="sym">) =</span> V<span class="sym">-</span>K<span class="sym">,</span> map__to_assoc_list<span class="sym">(</span>FreqMap<span class="sym">))) },
</span><span class="line">   23 </span><span class="sym">    {</span> Y <span class="sym">=</span> list__reverse<span class="sym">(</span>X<span class="sym">) },
</span><span class="line">   24 </span><span class="sym"></span>    io__write_list<span class="sym">(</span>Y<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> write_freq_word<span class="sym">),
</span><span class="line">   25 </span><span class="sym"></span>    io__nl.
<span class="line">   26 </span>
<span class="line">   27 </span>
<span class="line">   28 </span><span class="sym">:-</span> pred count_word_freqs<span class="sym">(</span>map<span class="sym">(</span>string<span class="sym">,</span>int<span class="sym">),</span>map<span class="sym">(</span>string<span class="sym">,</span>int<span class="sym">),</span>io__state<span class="sym">,</span>io__state<span class="sym">)</span>.
<span class="line">   29 </span><span class="sym">:-</span> mode count_word_freqs<span class="sym">(</span>in<span class="sym">,</span> out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   30 </span>count_word_freqs<span class="sym">(</span>FreqMap0<span class="sym">,</span> FreqMap<span class="sym">) --&gt;
</span><span class="line">   31 </span><span class="sym"></span>    io__read_line_as_string<span class="sym">(</span>Result<span class="sym">),
</span><span class="line">   32 </span><span class="sym">    (
</span><span class="line">   33 </span><span class="sym">        {</span> Result <span class="sym">=</span> ok<span class="sym">(</span>Line<span class="sym">) },
</span><span class="line">   34 </span><span class="sym">        {</span> Words  <span class="sym">=</span> string__words<span class="sym">(</span>isnt<span class="sym">(</span>char__is_alpha<span class="sym">),</span>string__to_lower<span class="sym">(</span>Line<span class="sym">)) },
</span><span class="line">   35 </span><span class="sym">        {</span> Update <span class="sym">=
</span><span class="line">   36 </span><span class="sym">            (</span> func<span class="sym">(</span>S<span class="sym">,</span> FM<span class="sym">) =
</span><span class="line">   37 </span><span class="sym">                (</span> if map__search<span class="sym">(</span>FM<span class="sym">,</span> S<span class="sym">,</span> N<span class="sym">)
</span><span class="line">   38 </span><span class="sym"></span>                  then FM ^ elem<span class="sym">(</span>S<span class="sym">) :=</span> N <span class="sym">+</span> <span class="num">1
</span><span class="line">   39 </span><span class="num"></span>                  else FM ^ elem<span class="sym">(</span>S<span class="sym">) :=</span> <span class="num">1
</span><span class="line">   40 </span><span class="num"></span>                <span class="sym">)
</span><span class="line">   41 </span><span class="sym">            )
</span><span class="line">   42 </span><span class="sym">        },
</span><span class="line">   43 </span><span class="sym">        {</span> FreqMap1 <span class="sym">=</span> list__foldl<span class="sym">(</span>Update<span class="sym">,</span> Words<span class="sym">,</span> FreqMap0<span class="sym">) },
</span><span class="line">   44 </span><span class="sym"></span>        count_word_freqs<span class="sym">(</span>FreqMap1<span class="sym">,</span> FreqMap<span class="sym">)
</span><span class="line">   45 </span><span class="sym">    ;
</span><span class="line">   46 </span><span class="sym">        {</span> Result <span class="sym">=</span> eof <span class="sym">},
</span><span class="line">   47 </span><span class="sym">        {</span> FreqMap <span class="sym">=</span> FreqMap0 <span class="sym">}
</span><span class="line">   48 </span><span class="sym">    ;
</span><span class="line">   49 </span><span class="sym">        {</span> Result <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) },
</span><span class="line">   50 </span><span class="sym">        {</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }
</span><span class="line">   51 </span><span class="sym">    )</span>.
<span class="line">   52 </span>
<span class="line">   53 </span>
<span class="line">   54 </span><span class="sym">:-</span> pred write_freq_word<span class="sym">(</span>pair<span class="sym">(</span>int<span class="sym">,</span> string<span class="sym">),</span> io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="line">   55 </span><span class="sym">:-</span> mode write_freq_word<span class="sym">(</span>in<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   56 </span>write_freq_word<span class="sym">(</span>Freq <span class="sym">-</span> Word<span class="sym">) --&gt;
</span><span class="line">   57 </span><span class="sym"></span>    io__format<span class="sym">(</span><span class="str">&quot;%7d %s&quot;</span><span class="sym">, [</span>i<span class="sym">(</span>Freq<span class="sym">),</span> s<span class="sym">(</span>Word<span class="sym">)])</span>.
