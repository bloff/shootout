<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
% ---------------------------------------------------------------------------- %
% wordfreq.m
% Ralph Becket &lt;rbeck@microsoft.com&gt;
% Tue Jan  9 15:56:12 GMT 2001
% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix
%
% ---------------------------------------------------------------------------- %

:- module mytest.
:- <B><FONT COLOR="#A020F0">interface</FONT></B>.
:- import_module io.

:- pred main(io__state, io__state).
:- mode main(di, uo) <B><FONT COLOR="#A020F0">is</FONT></B> det.

:- <B><FONT COLOR="#A020F0">implementation</FONT></B>.

:- import_module <B><FONT COLOR="#A020F0">string</FONT></B>, int, list, require, std_util, char, map.

main --&gt;
    count_word_freqs(map__init, FreqMap),
    <I><FONT COLOR="#B22222">{ X = list__sort(list__map(func(K-V) = V-K, map__to_assoc_list(FreqMap))) }</FONT></I>,
    <I><FONT COLOR="#B22222">{ Y = list__reverse(X) }</FONT></I>,
    io__write_list(Y, &quot;\n&quot;, write_freq_word),
    io__nl.


:- pred count_word_freqs(map(<B><FONT COLOR="#A020F0">string</FONT></B>,int),map(<B><FONT COLOR="#A020F0">string</FONT></B>,int),io__state,io__state).
:- mode count_word_freqs(<B><FONT COLOR="#A020F0">in</FONT></B>, out, di, uo) <B><FONT COLOR="#A020F0">is</FONT></B> det.
count_word_freqs(FreqMap0, FreqMap) --&gt;
    io__read_line_as_string(Result),
    (
        <I><FONT COLOR="#B22222">{ Result = ok(Line) }</FONT></I>,
        <I><FONT COLOR="#B22222">{ Words  = string__words(isnt(char__is_alpha),string__to_lower(Line)) }</FONT></I>,
        <I><FONT COLOR="#B22222">{ Update =
            ( func(S, FM) = 
                ( if map__search(FM, S, N)
                  then FM ^ elem(S) := N + 1
                  else FM ^ elem(S) := 1
                )
            )
        }</FONT></I>,
        <I><FONT COLOR="#B22222">{ FreqMap1 = list__foldl(Update, Words, FreqMap0) }</FONT></I>,
        count_word_freqs(FreqMap1, FreqMap)
    ;
        <I><FONT COLOR="#B22222">{ Result = eof }</FONT></I>,
        <I><FONT COLOR="#B22222">{ FreqMap = FreqMap0 }</FONT></I>
    ;
        <I><FONT COLOR="#B22222">{ Result = error(ErrNo) }</FONT></I>,
        <I><FONT COLOR="#B22222">{ error(io__error_message(ErrNo)) }</FONT></I>
    ).


:- pred write_freq_word(pair(int, <B><FONT COLOR="#A020F0">string</FONT></B>), io__state, io__state).
:- mode write_freq_word(<B><FONT COLOR="#A020F0">in</FONT></B>, di, uo) <B><FONT COLOR="#A020F0">is</FONT></B> det.
write_freq_word(Freq - Word) --&gt;
    io__format(&quot;%7d %s&quot;, [i(Freq), s(Word)]).</pre></td></tr></table>
