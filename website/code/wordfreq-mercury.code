<span class="slc">% ---------------------------------------------------------------------------- %</span>
<span class="slc">% wordfreq.m</span>
<span class="slc">% Ralph Becket &lt;rbeck&#64;microsoft.com&gt;</span>
<span class="slc">% Tue Jan  9 15:56:12 GMT 2001</span>
<span class="slc">% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix</span>
<span class="slc">%</span>
<span class="slc">% ---------------------------------------------------------------------------- %</span>

<span class="sym">:-</span> module mytest.
<span class="sym">:-</span> interface.
<span class="sym">:-</span> import_module io.

<span class="sym">:-</span> pred main<span class="sym">(</span>io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="sym">:-</span> mode main<span class="sym">(</span>di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.

<span class="sym">:-</span> implementation.

<span class="sym">:-</span> import_module string<span class="sym">,</span> int<span class="sym">,</span> list<span class="sym">,</span> require<span class="sym">,</span> std_util<span class="sym">,</span> char<span class="sym">,</span> map.

main <span class="sym">--&gt;</span>
    count_word_freqs<span class="sym">(</span>map__init<span class="sym">,</span> FreqMap<span class="sym">),</span>
    <span class="sym">{</span> X <span class="sym">=</span> list__sort<span class="sym">(</span>list__map<span class="sym">(</span>func<span class="sym">(</span>K<span class="sym">-</span>V<span class="sym">) =</span> V<span class="sym">-</span>K<span class="sym">,</span> map__to_assoc_list<span class="sym">(</span>FreqMap<span class="sym">))) },</span>
    <span class="sym">{</span> Y <span class="sym">=</span> list__reverse<span class="sym">(</span>X<span class="sym">) },</span>
    io__write_list<span class="sym">(</span>Y<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> write_freq_word<span class="sym">),</span>
    io__nl.


<span class="sym">:-</span> pred count_word_freqs<span class="sym">(</span>map<span class="sym">(</span>string<span class="sym">,</span>int<span class="sym">),</span>map<span class="sym">(</span>string<span class="sym">,</span>int<span class="sym">),</span>io__state<span class="sym">,</span>io__state<span class="sym">)</span>.
<span class="sym">:-</span> mode count_word_freqs<span class="sym">(</span>in<span class="sym">,</span> out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
count_word_freqs<span class="sym">(</span>FreqMap0<span class="sym">,</span> FreqMap<span class="sym">) --&gt;</span>
    io__read_line_as_string<span class="sym">(</span>Result<span class="sym">),</span>
    <span class="sym">(</span>
        <span class="sym">{</span> Result <span class="sym">=</span> ok<span class="sym">(</span>Line<span class="sym">) },</span>
        <span class="sym">{</span> Words  <span class="sym">=</span> string__words<span class="sym">(</span>isnt<span class="sym">(</span>char__is_alpha<span class="sym">),</span>string__to_lower<span class="sym">(</span>Line<span class="sym">)) },</span>
        <span class="sym">{</span> Update <span class="sym">=</span>
            <span class="sym">(</span> func<span class="sym">(</span>S<span class="sym">,</span> FM<span class="sym">) =</span>
                <span class="sym">(</span> if map__search<span class="sym">(</span>FM<span class="sym">,</span> S<span class="sym">,</span> N<span class="sym">)</span>
                  then FM ^ elem<span class="sym">(</span>S<span class="sym">) :=</span> N <span class="sym">+</span> <span class="num">1</span>
                  else FM ^ elem<span class="sym">(</span>S<span class="sym">) :=</span> <span class="num">1</span>
                <span class="sym">)</span>
            <span class="sym">)</span>
        <span class="sym">},</span>
        <span class="sym">{</span> FreqMap1 <span class="sym">=</span> list__foldl<span class="sym">(</span>Update<span class="sym">,</span> Words<span class="sym">,</span> FreqMap0<span class="sym">) },</span>
        count_word_freqs<span class="sym">(</span>FreqMap1<span class="sym">,</span> FreqMap<span class="sym">)</span>
    <span class="sym">;</span>
        <span class="sym">{</span> Result <span class="sym">=</span> eof <span class="sym">},</span>
        <span class="sym">{</span> FreqMap <span class="sym">=</span> FreqMap0 <span class="sym">}</span>
    <span class="sym">;</span>
        <span class="sym">{</span> Result <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) },</span>
        <span class="sym">{</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }</span>
    <span class="sym">)</span>.


<span class="sym">:-</span> pred write_freq_word<span class="sym">(</span>pair<span class="sym">(</span>int<span class="sym">,</span> string<span class="sym">),</span> io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="sym">:-</span> mode write_freq_word<span class="sym">(</span>in<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
write_freq_word<span class="sym">(</span>Freq <span class="sym">-</span> Word<span class="sym">) --&gt;</span>
    io__format<span class="sym">(</span><span class="str">&quot;%7d %s&quot;</span><span class="sym">, [</span>i<span class="sym">(</span>Freq<span class="sym">),</span> s<span class="sym">(</span>Word<span class="sym">)])</span>.
