<span class="line">    1 </span><span class="com">(* -*- mode: sml -*-
</span><span class="line">    2 </span><span class="com"> * $Id: fibo-poly.code,v 1.4 2004-11-13 07:41:34 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="com"> *)</span>
<span class="line">    5 </span>
<span class="line">    6 </span><span class="kwa">structure</span> Test <span class="sym">:</span> <span class="kwa">sig
</span><span class="line">    7 </span><span class="kwa">    val</span> main <span class="sym">: (</span><span class="kwb">string</span> <span class="sym">*</span> <span class="kwb">string</span> list<span class="sym">) -&gt; {}
</span><span class="line">    8 </span><span class="sym"></span><span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct
</span><span class="line">    9 </span><span class="kwa">
</span><span class="line">   10 </span><span class="kwa">
</span><span class="line">   11 </span><span class="kwa">fun</span> fib n <span class="sym">=</span> <span class="kwa">if</span> n <span class="sym">&lt;</span> <span class="num">2</span> <span class="kwa">then</span> <span class="num">1</span> <span class="kwa">else</span> fib <span class="sym">(</span>n<span class="num">-2</span><span class="sym">) +</span> fib <span class="sym">(</span>n<span class="num">-1</span><span class="sym">);
</span><span class="line">   12 </span><span class="sym">
</span><span class="line">   13 </span><span class="sym"></span><span class="kwa">fun</span> atoi s <span class="sym">=</span> <span class="kwa">case Int</span>.fromString s <span class="kwa">of</span> SOME num <span class="sym">=&gt;</span> num <span class="sym">|</span> NONE <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span><span class="kwa">fun</span> main<span class="sym">(</span>name<span class="sym">,</span> args<span class="sym">) =
</span><span class="line">   16 </span><span class="sym"></span>  <span class="kwa">let
</span><span class="line">   17 </span><span class="kwa">    val</span> arg <span class="sym">=</span> hd<span class="sym">(</span>args &#64; <span class="sym">[</span><span class="str">&quot;1&quot;</span><span class="sym">]);
</span><span class="line">   18 </span><span class="sym"></span>    <span class="kwa">val</span> num <span class="sym">=</span> atoi arg<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>    <span class="kwa">val</span> fib <span class="sym">=</span> fib num<span class="sym">;
</span><span class="line">   20 </span><span class="sym"></span>    <span class="kwa">val</span> result <span class="sym">=</span> <span class="kwa">Int</span>.toString fib<span class="sym">;
</span><span class="line">   21 </span><span class="sym"></span>  <span class="kwa">in</span> <span class="sym">(
</span><span class="line">   22 </span><span class="sym"></span>      print result<span class="sym">;</span> print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>      PolyML.quit<span class="sym">()
</span><span class="line">   24 </span><span class="sym">  )</span> <span class="kwa">end</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span><span class="kwa">end
</span><span class="line">   26 </span><span class="kwa">
</span><span class="line">   27 </span><span class="kwa">val</span> _ <span class="sym">=</span> PolyML.print_depth <span class="num">0</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span><span class="kwa">val</span> _ <span class="sym">=</span> PolyML.error_depth <span class="num">0</span><span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span><span class="kwa">val</span> _ <span class="sym">=</span> PolyML.onEntry<span class="sym">(</span><span class="kwa">fn</span><span class="sym">() =&gt;</span> Test.main<span class="sym">(</span><span class="str">&quot;fibo&quot;</span><span class="sym">,</span> CommandLine.arguments<span class="sym">()));
</span><span class="line">   30 </span><span class="sym"></span><span class="kwa">val</span> _ <span class="sym">=</span> PolyML.commit<span class="sym">();</span>
