<span class="slc">#!/usr/bin/perl</span>
<span class="slc"># $Id: methcall-perl.code,v 1.7 2006-09-20 05:51:57 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>
<span class="slc"># with help from Ben Tilly</span>

<span class="kwa">package</span> Toggle<span class="sym">;</span>

<span class="kwa">sub</span> new <span class="sym">{</span>
    <span class="kwc">my</span><span class="sym">(</span><span class="kwb">$class</span><span class="sym">,</span> <span class="kwb">$start_state</span><span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>
    <span class="kwd">bless</span><span class="sym">( {</span> Bool <span class="sym">=&gt;</span> <span class="kwb">$start_state</span> <span class="sym">},</span> <span class="kwb">$class</span> <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">sub</span> value <span class="sym">{</span>
    <span class="sym">(</span>shift<span class="sym">)-&gt;{</span>Bool<span class="sym">};</span>
<span class="sym">}</span>

<span class="kwa">sub</span> activate <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$self</span> <span class="sym">=</span> shift<span class="sym">;</span>
    <span class="kwb">$self</span><span class="sym">-&gt;{</span>Bool<span class="sym">}</span> ^<span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwa">return</span><span class="sym">(</span><span class="kwb">$self</span><span class="sym">);</span>
<span class="sym">}</span>


<span class="kwa">package</span> NthToggle<span class="sym">;</span>
our <span class="kwb">&#64;ISA</span> <span class="sym">=</span> <span class="kwd">qw</span><span class="sym">(</span>Toggle<span class="sym">);</span>

<span class="kwa">sub</span> new <span class="sym">{</span>
    <span class="kwc">my</span><span class="sym">(</span><span class="kwb">$class</span><span class="sym">,</span> <span class="kwb">$start_state</span><span class="sym">,</span> <span class="kwb">$max_counter</span><span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$self</span> <span class="sym">=</span> <span class="kwb">$class</span><span class="sym">-&gt;</span>SUPER<span class="sym">::</span><span class="kwd">new</span><span class="sym">(</span><span class="kwb">$start_state</span><span class="sym">);</span>
    <span class="kwb">$self</span><span class="sym">-&gt;{</span>CountMax<span class="sym">} =</span> <span class="kwb">$max_counter</span><span class="sym">;</span>
    <span class="kwb">$self</span><span class="sym">-&gt;{</span>Counter<span class="sym">} =</span> <span class="num">0</span><span class="sym">;</span>
    <span class="kwa">return</span><span class="sym">(</span><span class="kwb">$self</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">sub</span> activate <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$self</span> <span class="sym">=</span> shift<span class="sym">;</span>
    <span class="kwa">if</span> <span class="sym">(++</span><span class="kwb">$self</span><span class="sym">-&gt;{</span>Counter<span class="sym">} &gt;=</span> <span class="kwb">$self</span><span class="sym">-&gt;{</span>CountMax<span class="sym">}) {</span>
	<span class="kwb">$self</span><span class="sym">-&gt;{</span>Bool<span class="sym">}</span> ^<span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
	<span class="kwb">$self</span><span class="sym">-&gt;{</span>Counter<span class="sym">} =</span> <span class="num">0</span><span class="sym">;</span>
    <span class="sym">}</span>
    <span class="kwa">return</span><span class="sym">(</span><span class="kwb">$self</span><span class="sym">);</span>
<span class="sym">}</span>


<span class="kwa">package</span> main<span class="sym">;</span>

<span class="kwa">sub</span> main <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$NUM</span> <span class="sym">=</span> <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
    <span class="kwb">$NUM</span> <span class="sym">=</span> <span class="num">1</span> <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$NUM</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">);</span>

    <span class="kwc">my</span> <span class="kwb">$val</span> <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$toggle</span> <span class="sym">=</span> Toggle<span class="sym">-&gt;</span><span class="kwd">new</span><span class="sym">(</span><span class="kwb">$val</span><span class="sym">);</span>
    <span class="kwa">for</span> <span class="sym">(</span><span class="num">1</span>..<span class="kwb">$NUM</span><span class="sym">) {</span>
	<span class="kwb">$val</span> <span class="sym">=</span> <span class="kwb">$toggle</span><span class="sym">-&gt;</span>activate<span class="sym">-&gt;</span>value<span class="sym">;</span>
    <span class="sym">}</span>
    <span class="kwd">print</span> <span class="sym">((</span><span class="kwb">$val</span><span class="sym">)</span> ? <span class="str">&quot;true</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">:</span> <span class="str">&quot;false</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>

    <span class="kwb">$val</span> <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$ntoggle</span> <span class="sym">=</span> NthToggle<span class="sym">-&gt;</span><span class="kwd">new</span><span class="sym">(</span><span class="kwb">$val</span><span class="sym">,</span> <span class="num">3</span><span class="sym">);</span>
    <span class="kwa">for</span> <span class="sym">(</span><span class="num">1</span>..<span class="kwb">$NUM</span><span class="sym">) {</span>
	<span class="kwb">$val</span> <span class="sym">=</span> <span class="kwb">$ntoggle</span><span class="sym">-&gt;</span>activate<span class="sym">-&gt;</span>value<span class="sym">;</span>
    <span class="sym">}</span>
    <span class="kwd">print</span> <span class="sym">((</span><span class="kwb">$val</span><span class="sym">)</span> ? <span class="str">&quot;true</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">:</span> <span class="str">&quot;false</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="kwd">main</span><span class="sym">();</span>
