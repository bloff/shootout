<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
variable IM = 139968;
variable IA =   3877;
variable IC =  29573;

variable LAST = 42;
define <B><FONT COLOR="#0000FF">gen_random</FONT></B>(max)
{
   LAST = (LAST * IA + IC) mod IM;
   <B><FONT COLOR="#A020F0">return</FONT></B> (max * LAST) / IM;
}

define <B><FONT COLOR="#0000FF">heapsort</FONT></B>(n, ra)
{
   variable rra = 0, i = 0, j = 0;
   variable l = (n shr 1) + 1;
   variable ir = n;

   forever
     {
        <B><FONT COLOR="#A020F0">if</FONT></B> (l &gt; 1)
	  {
	     l--;
	     rra = ra[l];
	  }
        <B><FONT COLOR="#A020F0">else</FONT></B>
	  {
	     rra = ra[ir];
	     ra[ir] = ra[1];
	     <B><FONT COLOR="#A020F0">if</FONT></B> (ir == 1)
	       {
		  ra[1] = rra;
		  <B><FONT COLOR="#A020F0">return</FONT></B>;
	       }
	     ir--;
	  }
        i = l;
        j = l*2;
	forever 
	  {
	     <B><FONT COLOR="#A020F0">if</FONT></B> (j &gt; ir)
	       <B><FONT COLOR="#A020F0">break</FONT></B>;

	     variable raj = ra[j];
	     <B><FONT COLOR="#A020F0">if</FONT></B> (j &lt; ir)
	       {
		  variable raj1 = ra[j+1];
		  <B><FONT COLOR="#A020F0">if</FONT></B> (raj &lt; raj1)
		    {
		       j++;
		       raj=raj1;
		    }
	       }
	     <B><FONT COLOR="#A020F0">if</FONT></B> (rra &gt;= raj)
	       {
		  j = ir + 1;
		  <B><FONT COLOR="#A020F0">break</FONT></B>;
	       }

	     ra[i] = raj;
	     i = j;
	     j *= 2;
	  }

        ra[i] = rra;
     }
}


define <B><FONT COLOR="#0000FF">main</FONT></B>()
{
   variable N = 1;
   <B><FONT COLOR="#A020F0">if</FONT></B> (__argc &gt; 1) N = integer (__argv[1]);
   <B><FONT COLOR="#A020F0">if</FONT></B> (N &lt; 1)
     N = 1;
   variable ary = array_map (Double_Type, &amp;gen_random, [0:N]*0+1.0);
   heapsort(N, ary);

   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;%.10f\n&quot;</FONT></B>, ary[N]);
}


<B><FONT COLOR="#0000FF">main</FONT></B>();</pre></td></tr></table>
