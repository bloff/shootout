variable IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;</span>
variable IA <span class="sym">=</span>   <span class="num">3877</span><span class="sym">;</span>
variable IC <span class="sym">=</span>  <span class="num">29573</span><span class="sym">;</span>

variable LAST <span class="sym">=</span> <span class="num">42</span><span class="sym">;</span>
define <span class="kwd">gen_random</span><span class="sym">(</span>max<span class="sym">)</span>
<span class="sym">{</span>
   LAST <span class="sym">= (</span>LAST <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">)</span> mod IM<span class="sym">;</span>
   <span class="kwa">return</span> <span class="sym">(</span>max <span class="sym">*</span> LAST<span class="sym">) /</span> IM<span class="sym">;</span>
<span class="sym">}</span>

define <span class="kwd">heapsort</span><span class="sym">(</span>n<span class="sym">,</span> ra<span class="sym">)</span>
<span class="sym">{</span>
   variable rra <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> j <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   variable l <span class="sym">= (</span>n shr <span class="num">1</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">;</span>
   variable ir <span class="sym">=</span> n<span class="sym">;</span>

   forever
     <span class="sym">{</span>
        <span class="kwa">if</span> <span class="sym">(</span>l <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">)</span>
	  <span class="sym">{</span>
	     l<span class="sym">--;</span>
	     rra <span class="sym">=</span> ra<span class="sym">[</span>l<span class="sym">];</span>
	  <span class="sym">}</span>
        <span class="kwa">else</span>
	  <span class="sym">{</span>
	     rra <span class="sym">=</span> ra<span class="sym">[</span>ir<span class="sym">];</span>
	     ra<span class="sym">[</span>ir<span class="sym">] =</span> ra<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
	     <span class="kwa">if</span> <span class="sym">(</span>ir <span class="sym">==</span> <span class="num">1</span><span class="sym">)</span>
	       <span class="sym">{</span>
		  ra<span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> rra<span class="sym">;</span>
		  <span class="kwa">return</span><span class="sym">;</span>
	       <span class="sym">}</span>
	     ir<span class="sym">--;</span>
	  <span class="sym">}</span>
        i <span class="sym">=</span> l<span class="sym">;</span>
        j <span class="sym">=</span> l<span class="sym">*</span><span class="num">2</span><span class="sym">;</span>
	forever
	  <span class="sym">{</span>
	     <span class="kwa">if</span> <span class="sym">(</span>j <span class="sym">&gt;</span> ir<span class="sym">)</span>
	       <span class="kwa">break</span><span class="sym">;</span>

	     variable raj <span class="sym">=</span> ra<span class="sym">[</span>j<span class="sym">];</span>
	     <span class="kwa">if</span> <span class="sym">(</span>j <span class="sym">&lt;</span> ir<span class="sym">)</span>
	       <span class="sym">{</span>
		  variable raj1 <span class="sym">=</span> ra<span class="sym">[</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">];</span>
		  <span class="kwa">if</span> <span class="sym">(</span>raj <span class="sym">&lt;</span> raj1<span class="sym">)</span>
		    <span class="sym">{</span>
		       j<span class="sym">++;</span>
		       raj<span class="sym">=</span>raj1<span class="sym">;</span>
		    <span class="sym">}</span>
	       <span class="sym">}</span>
	     <span class="kwa">if</span> <span class="sym">(</span>rra <span class="sym">&gt;=</span> raj<span class="sym">)</span>
	       <span class="sym">{</span>
		  j <span class="sym">=</span> ir <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
		  <span class="kwa">break</span><span class="sym">;</span>
	       <span class="sym">}</span>

	     ra<span class="sym">[</span>i<span class="sym">] =</span> raj<span class="sym">;</span>
	     i <span class="sym">=</span> j<span class="sym">;</span>
	     j <span class="sym">*=</span> <span class="num">2</span><span class="sym">;</span>
	  <span class="sym">}</span>

        ra<span class="sym">[</span>i<span class="sym">] =</span> rra<span class="sym">;</span>
     <span class="sym">}</span>
<span class="sym">}</span>


define <span class="kwd">main</span><span class="sym">()</span>
<span class="sym">{</span>
   variable N <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
   <span class="kwa">if</span> <span class="sym">(</span>__argc <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">)</span> N <span class="sym">=</span> <span class="kwd">integer</span> <span class="sym">(</span>__argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);</span>
   <span class="kwa">if</span> <span class="sym">(</span>N <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span>
     N <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
   variable ary <span class="sym">=</span> <span class="kwd">array_map</span> <span class="sym">(</span>Double_Type<span class="sym">, &amp;</span>gen_random<span class="sym">, [</span><span class="num">0</span><span class="sym">:</span>N<span class="sym">]*</span><span class="num">0</span><span class="sym">+</span><span class="num">1.0</span><span class="sym">);</span>
   <span class="kwd">heapsort</span><span class="sym">(</span>N<span class="sym">,</span> ary<span class="sym">);</span>

   <span class="kwd">fprintf</span> <span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;%.10f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> ary<span class="sym">[</span>N<span class="sym">]);</span>
<span class="sym">}</span>


<span class="kwd">main</span><span class="sym">();</span>
