<span class="com">(* -*- mode: sml -*-</span>
<span class="com"> * $Id: nestedloop-mlton.code,v 1.7 2006-02-15 07:29:45 bfulgham Exp $</span>
<span class="com"> * http://www.bagley.org/~doug/shootout/</span>
<span class="com"> * from Stephen Weeks</span>
<span class="com"> *)</span>

<span class="kwa">fun</span> atoi s <span class="sym">=</span> <span class="kwa">case Int</span>.fromString s <span class="kwa">of</span> SOME num <span class="sym">=&gt;</span> num <span class="sym">|</span> NONE <span class="sym">=&gt;</span> <span class="num">0</span>

<span class="kwa">fun</span> main <span class="sym">(</span>name<span class="sym">,</span> args<span class="sym">) =</span>
  <span class="kwa">let</span>
    <span class="kwa">val</span> arg <span class="sym">=</span> hd <span class="sym">(</span>args &#64; <span class="sym">[</span><span class="str">&quot;1&quot;</span><span class="sym">])</span>
    <span class="kwa">val</span> n <span class="sym">=</span> atoi arg
    <span class="kwa">fun</span> f <span class="sym">(</span>ac<span class="sym">,</span> g<span class="sym">) =</span>
       <span class="kwa">let</span>
	  <span class="kwa">fun</span> loop <span class="sym">(</span>i<span class="sym">,</span> ac<span class="sym">) =</span>
	     <span class="kwa">if</span> i <span class="sym">=</span> <span class="num">0</span>
		<span class="kwa">then</span> ac
	     <span class="kwa">else</span> loop <span class="sym">(</span>i <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> g ac<span class="sym">)</span>
       <span class="kwa">in</span>
	  loop <span class="sym">(</span>n<span class="sym">,</span> ac<span class="sym">)</span>
       <span class="kwa">end</span>
    <span class="kwa">val</span> result <span class="sym">=</span>
       f <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="kwa">fn</span> x <span class="sym">=&gt;</span>
	  f <span class="sym">(</span>x<span class="sym">,</span> <span class="kwa">fn</span> x <span class="sym">=&gt;</span>
	     f <span class="sym">(</span>x<span class="sym">,</span> <span class="kwa">fn</span> x <span class="sym">=&gt;</span>
		f <span class="sym">(</span>x<span class="sym">,</span> <span class="kwa">fn</span> x <span class="sym">=&gt;</span>
		   f <span class="sym">(</span>x<span class="sym">,</span> <span class="kwa">fn</span> x <span class="sym">=&gt;</span>
		      f <span class="sym">(</span>x<span class="sym">,</span> <span class="kwa">fn</span> x <span class="sym">=&gt;</span> x <span class="sym">+</span> <span class="num">1</span><span class="sym">))))))</span>
  <span class="kwa">in</span>
      print <span class="sym">(</span><span class="kwa">Int</span>.toString result<span class="sym">);</span> print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
      OS.Process.success
  <span class="kwa">end</span>

<span class="kwa">val</span> _ <span class="sym">=</span> main <span class="sym">(</span> CommandLine.name <span class="sym">(),</span> CommandLine.arguments <span class="sym">() );</span>
