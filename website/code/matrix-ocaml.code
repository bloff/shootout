<span class="line">    1 </span><span class="com">(*
</span><span class="line">    2 </span><span class="com"> * $Id: matrix-ocaml.code,v 1.3 2004-11-11 07:14:00 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * from Markus Mottl
</span><span class="line">    5 </span><span class="com"> *)</span>
<span class="line">    6 </span>
<span class="line">    7 </span><span class="kwa">let</span> mkmatrix rows cols <span class="sym">=
</span><span class="line">    8 </span><span class="sym"></span>  <span class="kwa">let</span> count <span class="sym">=</span> ref <span class="num">1</span> <span class="kwa">and</span> last_col <span class="sym">=</span> cols <span class="num">- 1
</span><span class="line">    9 </span><span class="num"></span>  <span class="kwa">and</span> m <span class="sym">=</span> Array.make_matrix rows cols <span class="num">0</span> <span class="kwa">in
</span><span class="line">   10 </span><span class="kwa">  for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> rows <span class="num">- 1</span> <span class="kwa">do
</span><span class="line">   11 </span><span class="kwa">    let</span> mi <span class="sym">=</span> m.<span class="sym">(</span>i<span class="sym">)</span> <span class="kwa">in
</span><span class="line">   12 </span><span class="kwa">    for</span> j <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> last_col <span class="kwa">do</span> mi.<span class="sym">(</span>j<span class="sym">) &lt;- !</span>count<span class="sym">;</span> incr count <span class="kwa">done</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span>  <span class="kwa">done</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym"></span>  m
<span class="line">   15 </span>
<span class="line">   16 </span><span class="kwa">let rec</span> inner_loop k v m1i m2 j <span class="sym">=
</span><span class="line">   17 </span><span class="sym"></span>  <span class="kwa">if</span> k <span class="sym">&lt;</span> <span class="num">0</span> <span class="kwa">then</span> v
<span class="line">   18 </span>  <span class="kwa">else</span> inner_loop <span class="sym">(</span>k <span class="num">- 1</span><span class="sym">) (</span>v <span class="sym">+</span> m1i.<span class="sym">(</span>k<span class="sym">) *</span> m2.<span class="sym">(</span>k<span class="sym">)</span>.<span class="sym">(</span>j<span class="sym">))</span> m1i m2 j
<span class="line">   19 </span>
<span class="line">   20 </span><span class="kwa">let</span> mmult rows cols m1 m2 m3 <span class="sym">=
</span><span class="line">   21 </span><span class="sym"></span>  <span class="kwa">let</span> last_col <span class="sym">=</span> cols <span class="num">- 1</span> <span class="kwa">and</span> last_row <span class="sym">=</span> rows <span class="num">- 1</span> <span class="kwa">in
</span><span class="line">   22 </span><span class="kwa">  for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> last_row <span class="kwa">do
</span><span class="line">   23 </span><span class="kwa">    let</span> m1i <span class="sym">=</span> m1.<span class="sym">(</span>i<span class="sym">)</span> <span class="kwa">and</span> m3i <span class="sym">=</span> m3.<span class="sym">(</span>i<span class="sym">)</span> <span class="kwa">in
</span><span class="line">   24 </span><span class="kwa">    for</span> j <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> last_col <span class="kwa">do</span> m3i.<span class="sym">(</span>j<span class="sym">) &lt;-</span> inner_loop last_row <span class="num">0</span> m1i m2 j <span class="kwa">done</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>  <span class="kwa">done
</span><span class="line">   26 </span><span class="kwa">
</span><span class="line">   27 </span><span class="kwa">let</span> size <span class="sym">=</span> <span class="num">30
</span><span class="line">   28 </span><span class="num"></span><span class="kwa">let</span> n <span class="sym">=</span> <span class="kwa">if</span> Array.length Sys.argv <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span> int_of_string Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">else</span> <span class="num">1
</span><span class="line">   29 </span><span class="num"></span><span class="kwa">let</span> m1 <span class="sym">=</span> mkmatrix size size <span class="kwa">and</span> m2 <span class="sym">=</span> mkmatrix size size
<span class="line">   30 </span><span class="kwa">let</span> m3 <span class="sym">=</span> Array.make_matrix size size <span class="num">0</span><span class="sym">;;
</span><span class="line">   31 </span><span class="sym"></span><span class="kwa">for</span> i <span class="sym">=</span> <span class="num">2</span> <span class="kwa">to</span> n <span class="kwa">do</span> mmult size size m1 m2 m3 <span class="kwa">done</span><span class="sym">;
</span><span class="line">   32 </span><span class="sym"></span>mmult size size m1 m2 m3<span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span>Printf.printf <span class="str">&quot;%d %d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span> m3.<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.<span class="sym">(</span><span class="num">0</span><span class="sym">)</span> m3.<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.<span class="sym">(</span><span class="num">3</span><span class="sym">)</span> m3.<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.<span class="sym">(</span><span class="num">2</span><span class="sym">)</span> m3.<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>
