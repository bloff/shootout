<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/guile-oops \
-e main -s
!#

<I><FONT COLOR="#B22222">;;; $Id: methcall-guile.code,v 1.1 2004-11-02 08:52:36 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222">;;; from: Benedikt Rosenau
</FONT></I>
(use-modules (oop goops)) 

(define-method (print-bool (b &lt;boolean&gt;))
   (display (<B><FONT COLOR="#A020F0">if</FONT></B> b <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>)))


(define-class &lt;toggle&gt; ()
  (state #:getter value? #:init-keyword #:state))

(define-class &lt;nth-toggle&gt; (&lt;toggle&gt;)
  (count-max #:init-keyword #:count-max)
  (counter #:init-value 0))


(define-method (activate! (t &lt;toggle&gt;))
  (slot-set! t 'state (not (slot-ref t 'state)))
   t)

(define-method (activate! (n-t &lt;nth-toggle&gt;))
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((counter (+ 1 (slot-ref n-t 'counter))))
    (slot-set! n-t 'counter counter)
    (<B><FONT COLOR="#A020F0">if</FONT></B> (&gt;= counter (slot-ref n-t 'count-max))
      (<B><FONT COLOR="#A020F0">begin</FONT></B> (slot-set! n-t 'state (not (slot-ref n-t 'state)))
             (slot-set! n-t 'counter 0)))
     n-t))


(define-method (main (l &lt;list&gt;))
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((n (catch #t (<B><FONT COLOR="#A020F0">lambda</FONT></B> () (string-&gt;number (cadr l)))
                     (<B><FONT COLOR="#A020F0">lambda</FONT></B> ex 1))))
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((tog (make &lt;toggle&gt; #:state #t)))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 1 (+ i 1))) ((= i n))
          (value? (activate! tog)))
      (print-bool (value? (activate! tog))))
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((ntog (make &lt;nth-toggle&gt; #:state #t #:count-max 3)))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 1 (+ i 1))) ((= i n))
          (value? (activate! ntog)))
      (print-bool (value? (activate! ntog))))))</pre></td></tr></table>
