<span class="slc">//
</span><span class="slc">// Contributed by John Skaller
</span><span class="slc">//
</span><span class="kwa">include</span> <span class="str">&quot;std&quot;</span><span class="sym">;
</span>n <span class="sym">:=</span> atoi<span class="sym">(</span>System<span class="sym">::</span>argv <span class="num">1</span><span class="sym">);
</span><span class="kwa">include</span> <span class="str">&quot;stl&quot;</span><span class="sym">;
</span><span class="kwa">open</span> Stl<span class="sym">;
</span><span class="kwa">open</span> Stl<span class="sym">::</span>HashSet<span class="sym">;
</span><span class="kwa">open</span> Text_file<span class="sym">;

</span>requires ext_string_hash<span class="sym">;

</span><span class="kwa">var</span> prefix <span class="sym">=</span> Env<span class="sym">::</span>getenv <span class="str">&quot;DICT_DIR&quot;</span><span class="sym">;
</span><span class="kwa">if</span> prefix <span class="sym">==</span> <span class="str">&quot;&quot;</span> do prefix <span class="sym">=</span> <span class="str">&quot;./&quot;</span><span class="sym">;</span> done<span class="sym">;


</span><span class="kwa">var</span> dict <span class="sym">=</span> HashSet<span class="sym">::</span>create<span class="sym">[</span><span class="kwb">string</span><span class="sym">]();
</span><span class="kwa">var</span> f <span class="sym">=</span> fopen_input <span class="sym">(</span>prefix <span class="sym">+</span> <span class="str">&quot;Usr.Dict.Words&quot;</span><span class="sym">);
</span><span class="kwa">var</span> word <span class="sym">=</span> readln f<span class="sym">;
</span>until word <span class="sym">==</span> <span class="str">&quot;&quot;</span> do insert <span class="sym">(</span>dict<span class="sym">,</span>word<span class="sym">);</span> word <span class="sym">=</span> readln f<span class="sym">;</span> done<span class="sym">;
</span>fclose f<span class="sym">;

</span>word <span class="sym">=</span> readln stdin<span class="sym">;
</span>until word <span class="sym">==</span> <span class="str">&quot;&quot;</span> do
  <span class="kwa">if not</span> <span class="sym">(</span>mem <span class="sym">(</span>dict<span class="sym">,</span>word<span class="sym">))</span> do <span class="kwa">print</span> word<span class="sym">;</span> done<span class="sym">;
</span>  word <span class="sym">=</span> readln stdin<span class="sym">;
</span>done<span class="sym">;
</span>
