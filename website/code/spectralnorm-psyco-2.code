<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Sebastien Loisel</span>
<span class="slc"># Fixed by Isaac Gouy</span>
<span class="slc"># Modified for Psyco for max speed by bearophile, Jan 1 2005</span>

<span class="kwa">import</span> sys<span class="sym">,</span> psyco

<span class="kwa">def</span> <span class="kwd">eval_A</span><span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">):</span>
    <span class="kwa">return</span> <span class="num">1.0</span> <span class="sym">/ ( (</span>i<span class="sym">+</span>j<span class="sym">) * (</span>i<span class="sym">+</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">) /</span> <span class="num">2</span> <span class="sym">+</span> i <span class="sym">+</span> <span class="num">1</span> <span class="sym">)</span>

<span class="kwa">def</span> <span class="kwd">eval_A_times_u</span><span class="sym">(</span>u<span class="sym">):</span>
    lenu <span class="sym">=</span> <span class="kwb">len</span><span class="sym">(</span>u<span class="sym">)</span>
    v <span class="sym">= [</span><span class="num">0.0</span><span class="sym">] *</span> lenu
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span>lenu<span class="sym">):</span>
        aux <span class="sym">=</span> <span class="num">0.0</span>
        <span class="kwa">for</span> j <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span>lenu<span class="sym">):</span>
            aux <span class="sym">+=</span> <span class="kwd">eval_A</span><span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">) *</span> u<span class="sym">[</span>j<span class="sym">]</span>
        v<span class="sym">[</span>i<span class="sym">] =</span> aux
    <span class="kwa">return</span> v

<span class="kwa">def</span> <span class="kwd">eval_At_times_u</span><span class="sym">(</span>u<span class="sym">):</span>
    lenu <span class="sym">=</span> <span class="kwb">len</span><span class="sym">(</span>u<span class="sym">)</span>
    v <span class="sym">= [</span><span class="num">0.0</span><span class="sym">] *</span> lenu
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span>lenu<span class="sym">):</span>
        aux <span class="sym">=</span> <span class="num">0.0</span>
        <span class="kwa">for</span> j <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span>lenu<span class="sym">):</span>
            aux <span class="sym">+=</span> <span class="kwd">eval_A</span><span class="sym">(</span>j<span class="sym">,</span>i<span class="sym">) *</span> u<span class="sym">[</span>j<span class="sym">]</span>
        v<span class="sym">[</span>i<span class="sym">] =</span> aux
    <span class="kwa">return</span> v

<span class="kwa">def</span> <span class="kwd">eval_AtA_times_u</span><span class="sym">(</span>u<span class="sym">):</span>
    <span class="kwa">return</span> <span class="kwd">eval_At_times_u</span><span class="sym">(</span><span class="kwd">eval_A_times_u</span><span class="sym">(</span>u<span class="sym">))</span>

<span class="kwa">def</span> <span class="kwd">main</span><span class="sym">():</span>
    n <span class="sym">=</span> <span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>
    u <span class="sym">= [</span><span class="num">1.0</span><span class="sym">] *</span> n
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="num">10</span><span class="sym">):</span>
       v <span class="sym">=</span> <span class="kwd">eval_AtA_times_u</span><span class="sym">(</span>u<span class="sym">)</span>
       u <span class="sym">=</span> <span class="kwd">eval_AtA_times_u</span><span class="sym">(</span>v<span class="sym">)</span>
    vBv <span class="sym">=</span> <span class="num">0.0</span>
    vv <span class="sym">=</span> <span class="num">0.0</span>
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span>n<span class="sym">):</span>
       vBv <span class="sym">+=</span> u<span class="sym">[</span>i<span class="sym">] *</span> v<span class="sym">[</span>i<span class="sym">]</span>
       vv <span class="sym">+=</span> v<span class="sym">[</span>i<span class="sym">] *</span> v<span class="sym">[</span>i<span class="sym">]</span>
    <span class="kwa">print</span> <span class="str">&quot;%0.9f&quot;</span> <span class="sym">% ((</span>vBv<span class="sym">/</span>vv<span class="sym">)**</span><span class="num">0.5</span><span class="sym">)</span>

psyco<span class="sym">.</span><span class="kwd">bind</span><span class="sym">(</span>main<span class="sym">)</span>
<span class="kwd">main</span><span class="sym">()</span>
