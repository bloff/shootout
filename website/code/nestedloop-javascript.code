<span class="slc">// The Great Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">//</span>
<span class="slc">// contributed by David Hedbor</span>
<span class="slc">// modified by Isaac Gouy</span>

<span class="kwa">var</span> n <span class="sym">=</span> arguments<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
<span class="kwa">var</span> x<span class="sym">=</span><span class="num">0</span><span class="sym">;</span>
<span class="kwa">var</span> a<span class="sym">=</span>n<span class="sym">;</span>

<span class="slc">// Using while() is faster than for()</span>
<span class="kwa">while</span><span class="sym">(</span>a<span class="sym">--) {</span>
   <span class="kwa">var</span> b<span class="sym">=</span>n<span class="sym">;</span> <span class="kwa">while</span><span class="sym">(</span>b<span class="sym">--) {</span>
      <span class="kwa">var</span> c<span class="sym">=</span>n<span class="sym">;</span> <span class="kwa">while</span><span class="sym">(</span>c<span class="sym">--) {</span>
         <span class="kwa">var</span> d<span class="sym">=</span>n<span class="sym">;</span> <span class="kwa">while</span><span class="sym">(</span>d<span class="sym">--) {</span>
            <span class="kwa">var</span> e<span class="sym">=</span>n<span class="sym">;</span> <span class="kwa">while</span><span class="sym">(</span>e<span class="sym">--) {</span>
               <span class="kwa">var</span> f<span class="sym">=</span>n<span class="sym">;</span> <span class="kwa">while</span><span class="sym">(</span>f<span class="sym">--) {</span>
                  x<span class="sym">++;</span>
               <span class="sym">}</span>
            <span class="sym">}</span>
         <span class="sym">}</span>
      <span class="sym">}</span>
   <span class="sym">}</span>
<span class="sym">}</span>
<span class="kwc">print</span><span class="sym">(</span>x<span class="sym">);</span>
