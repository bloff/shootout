<span class="slc">;;; -*- mode: scheme -*-</span>
<span class="slc">;;; $Id: wc-bigloo.code,v 1.5 2006-02-10 07:03:52 bfulgham Exp $</span>
<span class="slc">;;; http://www.bagley.org/~doug/shootout/</span>
<span class="slc">;;; from Sven Hartrumpf</span>

<span class="sym">(</span>module wc
	<span class="sym">(</span>main main<span class="sym">)</span>
	<span class="sym">(</span>option <span class="sym">(</span><span class="kwa">set</span><span class="sym">! *</span>genericity<span class="sym">*</span> #f<span class="sym">)))</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>let<span class="sym">* ((</span>num<span class="sym">-</span>char <span class="num">0</span><span class="sym">)</span>
         <span class="sym">(</span>num<span class="sym">-</span>word <span class="num">0</span><span class="sym">)</span>
         <span class="sym">(</span>num<span class="sym">-</span><span class="kwa">line</span> <span class="num">0</span><span class="sym">)</span>
         <span class="sym">(</span>g <span class="sym">(</span>regular<span class="sym">-</span>grammar
             <span class="sym">()</span>
             <span class="sym">((+</span> #\newline<span class="sym">)</span>
              <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> num<span class="sym">-</span>char <span class="sym">(+</span> num<span class="sym">-</span>char <span class="sym">(</span>the<span class="sym">-</span><span class="kwa">length</span><span class="sym">)))</span>
              <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> num<span class="sym">-</span><span class="kwa">line</span> <span class="sym">(+</span> num<span class="sym">-</span><span class="kwa">line</span> <span class="sym">(</span>the<span class="sym">-</span><span class="kwa">length</span><span class="sym">)))</span>
              <span class="sym">(</span>ignore<span class="sym">))</span>
             <span class="sym">((+ (</span>in #\space #\tab<span class="sym">))</span>
              <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> num<span class="sym">-</span>char <span class="sym">(+</span> num<span class="sym">-</span>char <span class="sym">(</span>the<span class="sym">-</span><span class="kwa">length</span><span class="sym">)))</span>
              <span class="sym">(</span>ignore<span class="sym">))</span>
             <span class="sym">((+ (</span>out #\newline #\space #\tab<span class="sym">))</span>
              <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> num<span class="sym">-</span>char <span class="sym">(+</span> num<span class="sym">-</span>char <span class="sym">(</span>the<span class="sym">-</span><span class="kwa">length</span><span class="sym">)))</span>
              <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> num<span class="sym">-</span>word <span class="sym">(+</span> <span class="num">1</span> num<span class="sym">-</span>word<span class="sym">))</span>
              <span class="sym">(</span>ignore<span class="sym">)))))</span>
    <span class="sym">(</span><span class="kwa">read</span><span class="sym">/</span>rp g <span class="sym">(</span>current<span class="sym">-</span>input<span class="sym">-</span>port<span class="sym">))</span>
    <span class="sym">(</span>display<span class="sym">*</span> num<span class="sym">-</span><span class="kwa">line</span> <span class="str">&quot; &quot;</span> num<span class="sym">-</span>word <span class="str">&quot; &quot;</span> num<span class="sym">-</span>char #<span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">)))</span>
