<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>newlisp
<span class="line">    2 </span>
<span class="line">    3 </span># exception <span class="sym">-</span> benchmark
<span class="line">    4 </span># requires <span class="num">7.5.1</span> <span class="kwa">or</span> later
<span class="line">    5 </span>#
<span class="line">    6 </span># Contributed by Lutz Mueller
<span class="line">    7 </span>
<span class="line">    8 </span><span class="sym">(</span>context <span class="str">'MAIN)
</span><span class="line">    9 </span><span class="str">
</span><span class="line">   10 </span><span class="str">(set '</span>HI <span class="num">0</span> <span class="str">'LO 0)
</span><span class="line">   11 </span><span class="str">
</span><span class="line">   12 </span><span class="str">(define (some_function num)
</span><span class="line">   13 </span><span class="str">        (catch (hi_function num) '</span>result<span class="sym">)
</span><span class="line">   14 </span><span class="sym">        (</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">not</span> <span class="sym">(</span>integer? result<span class="sym">))
</span><span class="line">   15 </span><span class="sym">                (</span>println <span class="str">&quot;we never get here&quot;</span><span class="sym">)))
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym">(</span>define <span class="sym">(</span>hi_function num<span class="sym">)
</span><span class="line">   18 </span><span class="sym">        (</span>catch <span class="sym">(</span>lo_function num<span class="sym">)</span> <span class="str">'result)
</span><span class="line">   19 </span><span class="str">        (if (= result '</span>HI_exception<span class="sym">)
</span><span class="line">   20 </span><span class="sym">                (</span>inc <span class="str">'HI)
</span><span class="line">   21 </span><span class="str">                (throw result)))
</span><span class="line">   22 </span><span class="str">
</span><span class="line">   23 </span><span class="str">(define (lo_function num)
</span><span class="line">   24 </span><span class="str">        (catch (blowup num) '</span>result<span class="sym">)
</span><span class="line">   25 </span><span class="sym">        (</span><span class="kwa">if</span> <span class="sym">(=</span> result <span class="str">'LO_exception)
</span><span class="line">   26 </span><span class="str">                (inc '</span>LO<span class="sym">)
</span><span class="line">   27 </span><span class="sym">                (</span>throw result<span class="sym">)))
</span><span class="line">   28 </span><span class="sym">
</span><span class="line">   29 </span><span class="sym">(</span>define <span class="sym">(</span>blowup num<span class="sym">)
</span><span class="line">   30 </span><span class="sym">        (</span><span class="kwa">if</span> <span class="sym">(= (&amp;</span> num <span class="num">1</span><span class="sym">)</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   31 </span><span class="sym">                (</span>throw <span class="str">'HI_exception)
</span><span class="line">   32 </span><span class="str">                (throw '</span>LO_exception<span class="sym">)))
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym">(</span>define <span class="sym">(</span>main<span class="sym">)
</span><span class="line">   35 </span><span class="sym">        (</span>dotimes <span class="sym">(</span>i n<span class="sym">)
</span><span class="line">   36 </span><span class="sym">                (</span>some_function i<span class="sym">))
</span><span class="line">   37 </span><span class="sym">        (</span>println <span class="str">&quot;Exceptions: HI=&quot;</span> HI <span class="str">&quot; / LO=&quot;</span> LO<span class="sym">))
</span><span class="line">   38 </span><span class="sym">
</span><span class="line">   39 </span><span class="sym">(</span><span class="kwa">set</span> <span class="str">'n (integer (nth 2 (main-args))))
</span><span class="line">   40 </span><span class="str">
</span><span class="line">   41 </span><span class="str">(main)
</span><span class="line">   42 </span><span class="str">
</span><span class="line">   43 </span><span class="str">(exit)
</span><span class="line">   44 </span><span class="str">
</span><span class="line">   45 </span><span class="str"></span>
