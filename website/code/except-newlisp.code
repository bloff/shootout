<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/newlisp

# exception - benchmark
# requires 7.5.1 <B><FONT COLOR="#A020F0">or</FONT></B> later
#
# Contributed by Lutz Mueller

(context 'MAIN)

(set 'HI 0 'LO 0)

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">some_function</FONT></B> num)
	(catch (hi_function num) 'result)
	(<B><FONT COLOR="#A020F0">if</FONT></B> (not (integer? result))
		(println <B><FONT COLOR="#BC8F8F">&quot;we never get here&quot;</FONT></B>)))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">hi_function</FONT></B> num)
	(catch (lo_function num) 'result)
	(<B><FONT COLOR="#A020F0">if</FONT></B> (= result 'HI_exception)
		(inc 'HI)
		(throw result)))
		
(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">lo_function</FONT></B> num)
	(catch (blowup num) 'result)
	(<B><FONT COLOR="#A020F0">if</FONT></B> (= result 'LO_exception) 
		(inc 'LO)
		(throw result)))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">blowup</FONT></B> num)
	(<B><FONT COLOR="#A020F0">if</FONT></B> (= (&amp; num 1) 1)
		(throw 'HI_exception)
		(throw 'LO_exception)))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B>)
	(dotimes (i n)
		(some_function i))
	(println <B><FONT COLOR="#BC8F8F">&quot;Exceptions: HI=&quot;</FONT></B> HI <B><FONT COLOR="#BC8F8F">&quot; / LO=&quot;</FONT></B> LO))
	
(set 'n (integer (nth 2 (main-args))))

(main)

(exit)

</pre></td></tr></table>
