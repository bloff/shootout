\ <span class="sym">-*-</span> mode<span class="sym">:</span> forth <span class="sym">-*-</span>
\ $Id<span class="sym">:</span> wordfreq<span class="sym">.</span>gforth<span class="sym">,</span>v <span class="num">1.2 2005</span><span class="sym">/</span><span class="num">03</span><span class="sym">/</span><span class="num">29 07</span><span class="sym">:</span><span class="num">34</span><span class="sym">:</span><span class="num">50</span> bfulgham Exp $
\ http<span class="sym">:</span><span class="slc">//www.bagley.org/~doug/shootout/</span>
\ from Anton Ertl<span class="sym">:</span>

wordlist constant word<span class="sym">-</span>counts
create word<span class="sym">-</span>pointers <span class="num">10000</span> cells allot
variable endwp word<span class="sym">-</span>pointers endwp <span class="sym">!</span>
<span class="num">1024</span> constant max<span class="sym">-</span>line
create line max<span class="sym">-</span>line <span class="num">2</span> <span class="sym">+</span> allot

<span class="kwb">struct</span>
    cell<span class="sym">%</span> field    wf<span class="sym">-</span>count
    cell<span class="sym">%</span> <span class="num">2</span><span class="sym">*</span> field wf<span class="sym">-</span>name
end<span class="sym">-</span><span class="kwb">struct</span> wf<span class="sym">%</span>

<span class="sym">:</span> count<span class="sym">-</span><span class="kwd">word</span> <span class="sym">(</span> addr u <span class="sym">-- )</span>
    <span class="num">2</span>dup word<span class="sym">-</span>counts search<span class="sym">-</span>wordlist <span class="kwa">if</span>
	<span class="num">1</span> swap <span class="sym">&gt;</span>body <span class="sym">+!</span> <span class="num">2</span>drop
    <span class="kwa">else</span>
	nextname get<span class="sym">-</span>current word<span class="sym">-</span>counts set<span class="sym">-</span>current create set<span class="sym">-</span>current
	here endwp &#64; tuck <span class="sym">!</span> cell<span class="sym">+</span> endwp <span class="sym">!</span>
	<span class="num">1</span> <span class="sym">,</span> last &#64; name<span class="sym">&gt;</span>string <span class="num">2</span><span class="sym">,</span>
    endif <span class="sym">;</span>

<span class="sym">:</span> no<span class="sym">-</span>letter? <span class="sym">(</span> c <span class="sym">-- )</span>
    dup <span class="str">'a &lt; swap '</span>z <span class="sym">&gt;</span> <span class="kwa">or</span> <span class="sym">;</span>

<span class="sym">:</span> process<span class="sym">-</span><span class="kwd">word</span> <span class="sym">(</span> start end <span class="sym">-- )</span>
    <span class="num">2</span>dup u<span class="sym">&lt;</span> <span class="kwa">if</span>
	over <span class="sym">-</span> count<span class="sym">-</span>word
    <span class="kwa">else</span>
	<span class="num">2</span>drop
    endif <span class="sym">;</span>

<span class="sym">:</span> process<span class="sym">-</span><span class="kwd">line</span> <span class="sym">(</span> addr u <span class="sym">-- )</span>
    bounds <span class="num">2</span>dup ?<span class="kwa">do</span> <span class="sym">(</span> end wordstart <span class="sym">)</span>
	i c&#64; $<span class="num">20</span> <span class="kwa">or</span> dup i c<span class="sym">! (</span> end wordstart c <span class="sym">)</span>
	no<span class="sym">-</span>letter? <span class="kwa">if</span> <span class="sym">(</span> end wordstart <span class="sym">)</span>
	    i process<span class="sym">-</span>word  i <span class="num">1</span><span class="sym">+</span>
	endif
    <span class="kwd">loop</span> <span class="sym">(</span> end wordstart <span class="sym">)</span>
    swap process<span class="sym">-</span>word <span class="sym">;</span>

<span class="sym">:</span> process<span class="sym">-</span><span class="kwd">file</span> <span class="sym">(</span> fid <span class="sym">-- )</span>
    <span class="sym">&gt;</span>r begin
	line max<span class="sym">-</span>line r&#64; read<span class="sym">-</span>line <span class="kwa">throw</span>
    <span class="kwa">while</span>
	line swap process<span class="sym">-</span>line
    repeat
    rdrop <span class="sym">;</span>

<span class="sym">:</span> <span class="kwd">output</span> <span class="sym">( -- )</span>
    endwp &#64; word<span class="sym">-</span>pointers ?<span class="kwa">do</span>
	i &#64; dup wf<span class="sym">-</span>count &#64; <span class="num">7</span> <span class="sym">.</span>r space wf<span class="sym">-</span>name <span class="num">2</span>&#64; type cr
    cell <span class="sym">+</span>loop <span class="sym">;</span>

<span class="sym">:</span> wf<span class="sym">&lt; (</span> wf1 wf2 <span class="sym">--</span> f <span class="sym">)</span>
    over wf<span class="sym">-</span>count &#64; over wf<span class="sym">-</span>count &#64; <span class="num">2</span>dup <span class="sym">=</span> <span class="kwa">if</span>
	<span class="num">2</span>drop <span class="sym">&gt;</span>r wf<span class="sym">-</span>name <span class="num">2</span>&#64; r<span class="sym">&gt;</span> wf<span class="sym">-</span>name <span class="num">2</span>&#64; compare <span class="num">0</span><span class="sym">&gt;</span>
    <span class="kwa">else</span>
	u<span class="sym">&gt;</span> nip nip
    endif <span class="sym">;</span>

<span class="sym">(</span>field<span class="sym">)</span> cell<span class="sym">- -</span><span class="num">1</span> cells <span class="sym">,</span>

<span class="sym">:</span> <span class="kwd">partition</span> <span class="sym">(</span> first last lessthan<span class="sym">-</span>xt <span class="sym">--</span> middle <span class="sym">)</span>
    \ partition array addr1 u1 into all elements less than pivot <span class="kwa">and</span> all
    \ others<span class="sym">,</span> addr1 u2 <span class="kwa">and</span> addr3 u3 are the two partitions<span class="sym">.</span>
    \ lessthan<span class="sym">-</span><span class="kwd">xt</span> <span class="sym">(</span> elemptr1 elemptr2 <span class="sym">--</span> f <span class="sym">)</span> compares the two elements
    <span class="sym">{</span> lessthan<span class="sym">-</span>xt <span class="sym">}</span>
    over &#64; <span class="sym">{</span> pivot <span class="sym">}</span>
    <span class="kwd">begin</span> <span class="sym">(</span> i j <span class="sym">)</span>
	<span class="num">2</span>dup u<span class="sym">&lt;</span>
    <span class="kwa">while</span>
	begin
	    pivot over &#64; lessthan<span class="sym">-</span>xt execute
	<span class="kwa">while</span>
	    cell<span class="sym">-</span>
	repeat
	swap over &#64; over <span class="sym">!</span>
	<span class="kwd">begin</span> <span class="sym">(</span> j i <span class="sym">)</span>
	    <span class="num">2</span>dup u<span class="sym">&gt;</span>
	<span class="kwa">while</span>
	    pivot over &#64; lessthan<span class="sym">-</span>xt execute <span class="num">0</span><span class="sym">=</span>
	<span class="kwa">while</span>
	    cell<span class="sym">+</span>
	repeat then
	swap over &#64; over <span class="sym">!</span>
    repeat
    drop pivot over <span class="sym">! ;</span>

<span class="sym">:</span> <span class="kwd">sort1</span> <span class="sym">(</span> first last lesstthan<span class="sym">-</span>xt <span class="sym">-- )</span> recursive
    <span class="sym">&gt;</span>r begin
	<span class="num">2</span>dup u<span class="sym">&lt;</span>
    <span class="kwa">while</span>
	<span class="num">2</span>dup r&#64; <span class="kwd">partition</span> <span class="sym">(</span> first last middle <span class="sym">)</span>
	rot over cell<span class="sym">-</span> r&#64; sort1
	cell<span class="sym">+</span> swap
    repeat
    rdrop <span class="num">2</span>drop <span class="sym">;</span>

stdin process<span class="sym">-</span>file word<span class="sym">-</span>pointers endwp &#64; cell<span class="sym">-</span> <span class="str">' wf&lt; sort1 output bye</span>
