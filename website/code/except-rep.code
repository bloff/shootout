<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/bin/bash
# -*- mode: lisp -*-
PROG=${0%.jl}
[ \! -f $PROG.jlc -o $0 -nt $PROG.jlc ] &amp;&amp;
    rep --batch --no-rc -l compiler -f compile-batch $0
exec rep <B><FONT COLOR="#BC8F8F">&quot;$PROG.jlc&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$@&quot;</FONT></B>
!#

<I><FONT COLOR="#B22222">;;; $Id: except-rep.code,v 1.2 2004-11-08 08:15:13 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(define-structure main ()
  (open rep rep.system)

  (defvar HI 0)
  (defvar LO 0)
  
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">hi_ex</FONT></B> val)
    (cons 'hi_ex val))
  
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">lo_ex</FONT></B> val)
    (cons 'lo_ex val))
  
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">some_fun</FONT></B> num)
    (catch #t
      (hi_fun num)))
  
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">hi_fun</FONT></B> num)
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((val (catch 'Hi_Exception (lo_fun num))))
      (<B><FONT COLOR="#A020F0">if</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (consp val)
	       (eq (car val) 'hi_ex))
	  (setq HI (1+ HI)))))
  
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">lo_fun</FONT></B> num)
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((val (catch 'Lo_Exception (blowup num))))
      (<B><FONT COLOR="#A020F0">if</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (consp val)
	       (eq (car val) 'lo_ex))
	  (setq LO (1+ LO)))))
  
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">blowup</FONT></B> num)
    (<B><FONT COLOR="#A020F0">if</FONT></B> (= 0 (mod num 2))
	(throw 'Hi_Exception (hi_ex num))
      (throw 'Lo_Exception (lo_ex num))))

  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((arg (get-command-line-option <B><FONT COLOR="#BC8F8F">&quot;--num&quot;</FONT></B> t))
	 (n (<B><FONT COLOR="#A020F0">if</FONT></B> arg (read-from-string arg) 1)))
    (while (&gt; n 0)
      (setq n (1- n))
      (some_fun n)))
  (format standard-output <B><FONT COLOR="#BC8F8F">&quot;Exceptions: HI=%d / LO=%d\n&quot;</FONT></B> HI LO))</pre></td></tr></table>
