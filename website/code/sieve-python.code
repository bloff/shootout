<span class="line">    1 </span><span class="slc">#!/usr/bin/python
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: sieve-python.code,v 1.4 2004-11-13 07:43:22 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc"># with help from Brad Knotwell
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="slc">#uncomment for psyco JIT
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">#import psyco
</span><span class="line">    8 </span><span class="slc"></span><span class="slc">#psyco.full()
</span><span class="line">    9 </span><span class="slc"></span>
<span class="line">   10 </span><span class="kwc">import</span> sys
<span class="line">   11 </span>
<span class="line">   12 </span><span class="kwb">def</span> main<span class="sym">():
</span><span class="line">   13 </span><span class="sym"></span>    <span class="kwb">try</span><span class="sym">:
</span><span class="line">   14 </span><span class="sym"></span>        NUM <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])
</span><span class="line">   15 </span><span class="sym"></span>    <span class="kwb">except</span><span class="sym">:
</span><span class="line">   16 </span><span class="sym"></span>        NUM <span class="sym">=</span> <span class="num">1
</span><span class="line">   17 </span><span class="num">
</span><span class="line">   18 </span><span class="num"></span>    <span class="kwb">for</span> foo <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>NUM<span class="sym">):
</span><span class="line">   19 </span><span class="sym"></span>        count <span class="sym">=</span> <span class="num">0
</span><span class="line">   20 </span><span class="num"></span>        flags <span class="sym">= (</span><span class="num">8193</span><span class="sym">) * [</span><span class="num">1</span><span class="sym">]
</span><span class="line">   21 </span><span class="sym"></span>        <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">2</span><span class="sym">,</span><span class="num">8193</span><span class="sym">):
</span><span class="line">   22 </span><span class="sym"></span>            <span class="kwb">if</span> flags<span class="sym">[</span>i<span class="sym">]:
</span><span class="line">   23 </span><span class="sym"></span>                <span class="slc"># remove all multiples of prime: i
</span><span class="line">   24 </span><span class="slc"></span>                k <span class="sym">=</span> i <span class="sym">+</span> i
<span class="line">   25 </span>                <span class="kwb">while</span> k <span class="sym">&lt;</span> <span class="num">8193</span><span class="sym">:
</span><span class="line">   26 </span><span class="sym"></span>                    flags<span class="sym">[</span>k<span class="sym">] =</span> <span class="num">0
</span><span class="line">   27 </span><span class="num"></span>                    k <span class="sym">=</span> k <span class="sym">+</span> i
<span class="line">   28 </span>                count <span class="sym">+=</span> <span class="num">1
</span><span class="line">   29 </span><span class="num"></span>    <span class="kwb">print</span> <span class="str">&quot;Count:&quot;</span><span class="sym">,</span> count
<span class="line">   30 </span>    <span class="slc">#uncomment to verify the algorithm
</span><span class="line">   31 </span><span class="slc"></span>    <span class="slc">#n = 0
</span><span class="line">   32 </span><span class="slc"></span>    <span class="slc">#for i in range(200):
</span><span class="line">   33 </span><span class="slc"></span>    <span class="slc">#    if flags[i]:
</span><span class="line">   34 </span><span class="slc"></span>    <span class="slc">#        print n
</span><span class="line">   35 </span><span class="slc"></span>    <span class="slc">#    n += 1
</span><span class="line">   36 </span><span class="slc"></span>
<span class="line">   37 </span>main<span class="sym">()
</span><span class="line">   38 </span><span class="sym">
</span><span class="line">   39 </span><span class="sym">
</span><span class="line">   40 </span><span class="sym">
</span><span class="line">   41 </span><span class="sym">
</span><span class="line">   42 </span><span class="sym">
</span><span class="line">   43 </span><span class="sym">
</span><span class="line">   44 </span><span class="sym">
</span><span class="line">   45 </span><span class="sym">
</span><span class="line">   46 </span><span class="sym">
</span><span class="line">   47 </span><span class="sym">
</span><span class="line">   48 </span><span class="sym">
</span><span class="line">   49 </span><span class="sym">
</span><span class="line">   50 </span><span class="sym"></span>
