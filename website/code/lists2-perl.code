<span class="line">    1 </span><span class="slc">#!/usr/bin/perl
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: lists2-perl.code,v 1.4 2004-11-13 07:41:54 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="kwa">use</span> strict<span class="sym">;
</span><span class="line">    5 </span><span class="sym">
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">sub</span> main <span class="sym">{
</span><span class="line">    7 </span><span class="sym"></span>    <span class="kwc">my</span> <span class="kwb">$N</span> <span class="sym">= (</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] &lt;</span> <span class="num">1</span><span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> int<span class="sym">(</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">    8 </span><span class="sym"></span>    <span class="kwc">my</span> &#64;A <span class="sym">= (</span><span class="num">1</span>..<span class="kwb">$N</span><span class="sym">);
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwc">my</span> &#64;B <span class="sym">= ();
</span><span class="line">   10 </span><span class="sym"></span>    <span class="kwa">while</span> <span class="sym">(</span>&#64;A<span class="sym">) {
</span><span class="line">   11 </span><span class="sym"></span>        push<span class="sym">(</span>&#64;B<span class="sym">,</span> shift<span class="sym">(</span>&#64;A<span class="sym">));
</span><span class="line">   12 </span><span class="sym"></span>        push<span class="sym">(</span>&#64;B<span class="sym">,</span> pop<span class="sym">(</span>&#64;A<span class="sym">));
</span><span class="line">   13 </span><span class="sym">    }
</span><span class="line">   14 </span><span class="sym"></span>    <span class="kwa">while</span> <span class="sym">(</span>&#64;B<span class="sym">) {
</span><span class="line">   15 </span><span class="sym"></span>        unshift<span class="sym">(</span>&#64;A<span class="sym">,</span> pop<span class="sym">(</span>&#64;B<span class="sym">));
</span><span class="line">   16 </span><span class="sym"></span>        unshift<span class="sym">(</span>&#64;A<span class="sym">,</span> shift<span class="sym">(</span>&#64;B<span class="sym">));
</span><span class="line">   17 </span><span class="sym">    }
</span><span class="line">   18 </span><span class="sym"></span>    print scalar<span class="sym">(</span>&#64;A<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>    print <span class="str">&quot;&#64;A[0..9]</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym">}
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span>main<span class="sym">();</span>
