<span class="line">    1 </span><span class="slc">;;; -*- mode: scheme -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: strcat-bigloo.code,v 1.3 2004-11-11 07:14:19 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">;;; from Manuel Serrano
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="sym">(</span>module <span class="kwa">strcat
</span><span class="line">    7 </span><span class="kwa"></span>        <span class="sym">(</span>option <span class="sym">(</span><span class="kwa">set</span><span class="sym">! *</span>genericity<span class="sym">*</span> #f<span class="sym">))
</span><span class="line">    8 </span><span class="sym">        (</span>main main<span class="sym">))
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym">(</span>define hello #<span class="str">&quot;hello</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">)
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">   13 </span><span class="sym">  (</span>let<span class="sym">* ((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   14 </span><span class="sym">         (</span>i <span class="num">0</span><span class="sym">)
</span><span class="line">   15 </span><span class="sym">         (</span>buflen <span class="num">32</span><span class="sym">)
</span><span class="line">   16 </span><span class="sym">         (</span>strbuf <span class="sym">(</span>make<span class="sym">-</span>string buflen<span class="sym">))
</span><span class="line">   17 </span><span class="sym">         (</span>stufflen <span class="sym">(</span>string<span class="sym">-</span><span class="kwa">length</span> hello<span class="sym">))
</span><span class="line">   18 </span><span class="sym">         (</span>stuff hello<span class="sym">)
</span><span class="line">   19 </span><span class="sym">         (</span>stuffstart <span class="num">0</span><span class="sym">))
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym">    (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))
</span><span class="line">   22 </span><span class="sym">        ((=</span> i n<span class="sym">))
</span><span class="line">   23 </span><span class="sym">      (</span><span class="kwa">if</span> <span class="sym">(&gt;= (+</span>fx stufflen stuffstart<span class="sym">)</span> buflen<span class="sym">)
</span><span class="line">   24 </span><span class="sym">          (</span>let<span class="sym">* ((</span>nbuflen <span class="sym">(*</span>fx <span class="num">2</span> buflen<span class="sym">))
</span><span class="line">   25 </span><span class="sym">                 (</span>nstrbuf <span class="sym">(</span>make<span class="sym">-</span>string nbuflen<span class="sym">)))
</span><span class="line">   26 </span><span class="sym">            (</span>blit<span class="sym">-</span>string<span class="sym">!</span> strbuf <span class="num">0</span> nstrbuf <span class="num">0</span> buflen<span class="sym">)
</span><span class="line">   27 </span><span class="sym">            (</span><span class="kwa">set</span><span class="sym">!</span> buflen nbuflen<span class="sym">)
</span><span class="line">   28 </span><span class="sym">            (</span><span class="kwa">set</span><span class="sym">!</span> strbuf nstrbuf<span class="sym">)))
</span><span class="line">   29 </span><span class="sym">      (</span>blit<span class="sym">-</span>string<span class="sym">!</span> stuff <span class="num">0</span> strbuf stuffstart stufflen<span class="sym">)
</span><span class="line">   30 </span><span class="sym">      (</span><span class="kwa">set</span><span class="sym">!</span> stuffstart <span class="sym">(+</span>fx stuffstart stufflen<span class="sym">)))
</span><span class="line">   31 </span><span class="sym">
</span><span class="line">   32 </span><span class="sym">    (</span><span class="kwa">set</span><span class="sym">!</span> strbuf <span class="sym">(</span>substring strbuf <span class="num">0</span> stuffstart<span class="sym">))
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym">    (</span>display <span class="sym">(</span>string<span class="sym">-</span><span class="kwa">length</span> strbuf<span class="sym">))
</span><span class="line">   35 </span><span class="sym">    (</span>newline<span class="sym">)))</span>
