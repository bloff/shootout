<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
define <B><FONT COLOR="#0000FF">main</FONT></B> ()
{
   variable nums = array_map (Double_Type, &amp;atof, fgetslines (stdin));
   variable n = length (nums);
   variable sum_nums = sum (nums);
   variable mean = sum_nums/n;

   variable deviation = nums - mean;
   variable average_deviation = sum (abs(deviation))/n;
   variable variance = sum (deviation^2)/(n-1);
   variable skew = sum (deviation^3);
   variable kurtosis = sum (deviation^4);
   variable standard_deviation = sqrt(variance);
     
   <B><FONT COLOR="#A020F0">if</FONT></B> (variance &gt; 0.0)
     {
        skew /= (n * variance * standard_deviation);
        kurtosis = kurtosis/(n * variance * variance) - 3.0;
     }

   nums = nums[array_sort(nums)];
   variable mid = n/2;
   variable median;

    <B><FONT COLOR="#A020F0">if</FONT></B> (n mod 2)
     median = nums[mid];
   <B><FONT COLOR="#A020F0">else</FONT></B>
     median = (nums[mid] + nums[mid-1])/2;

   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;n:                  %d\n&quot;</FONT></B>, n);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;median:             %f\n&quot;</FONT></B>, median);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;mean:               %f\n&quot;</FONT></B>, mean);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;average_deviation:  %f\n&quot;</FONT></B>, average_deviation);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;standard_deviation: %f\n&quot;</FONT></B>, standard_deviation);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;variance:           %f\n&quot;</FONT></B>, variance);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;skew:               %f\n&quot;</FONT></B>, skew);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;kurtosis:           %f\n&quot;</FONT></B>, kurtosis);
}
<B><FONT COLOR="#0000FF">main</FONT></B> ();</pre></td></tr></table>
