<span class="slc">--</span>
<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">--</span>
<span class="slc">-- Haskell version of Isaac Gouy's Clean version, translated by Don Stewart</span>
<span class="slc">--</span>

<span class="kwa">import</span> System<span class="sym">;</span> <span class="kwa">import</span> Numeric

main <span class="sym">=</span> <span class="kwa">do</span> n <span class="sym">&lt;-</span> getArgs <span class="sym">&gt;&gt;=</span> readIO . head
          <span class="kwa">let</span> sums     <span class="sym">=</span> loop <span class="sym">(</span><span class="num">1</span><span class="sym">::</span><span class="kwb">Int</span><span class="sym">)</span> n <span class="num">1 0 0 0 0 0 0 0 0 0</span>
              fn <span class="sym">(</span>s<span class="sym">,</span>t<span class="sym">) =</span> putStrLn $ <span class="sym">(</span>showFFloat <span class="sym">(</span>Just <span class="num">9</span><span class="sym">)</span> s <span class="sym">[]) ++</span> <span class="str">&quot;\t&quot;</span> <span class="sym">++</span> t
          mapM_ <span class="sym">(</span>fn <span class="sym">:: (</span><span class="kwb">Double</span><span class="sym">,</span> String<span class="sym">) -&gt;</span> IO <span class="sym">()) (</span>zip sums names<span class="sym">)</span>

names <span class="sym">= [</span><span class="str">&quot;(2/3)^k&quot;</span><span class="sym">,</span> <span class="str">&quot;k^-0.5&quot;</span><span class="sym">,</span> <span class="str">&quot;1/k(k+1)&quot;</span><span class="sym">,</span> <span class="str">&quot;Flint Hills&quot;</span><span class="sym">,</span> <span class="str">&quot;Cookson Hills&quot;</span>
        <span class="sym">,</span> <span class="str">&quot;Harmonic&quot;</span><span class="sym">,</span> <span class="str">&quot;Riemann Zeta&quot;</span><span class="sym">,</span> <span class="str">&quot;Alternating Harmonic&quot;</span><span class="sym">,</span> <span class="str">&quot;Gregory&quot;</span><span class="sym">]</span>

loop i n alt a1 a2 a3 a4 a5 a6 a7 a8 a9
    <span class="sym">|</span> i <span class="sym">!</span>n <span class="sym">!</span>alt <span class="sym">!</span>a1 <span class="sym">!</span>a2 <span class="sym">!</span>a3 <span class="sym">!</span>a4 <span class="sym">!</span>a5 <span class="sym">!</span>a6 <span class="sym">!</span>a7 <span class="sym">!</span>a8 <span class="sym">!</span>a9 <span class="sym">!</span><span class="kwa">False</span> <span class="sym">=</span> undefined <span class="slc">-- strict</span>
    <span class="sym">|</span> k <span class="sym">&gt;</span> n     <span class="sym">= [</span> a1<span class="sym">,</span> a2<span class="sym">,</span> a3<span class="sym">,</span> a4<span class="sym">,</span> a5<span class="sym">,</span> a6<span class="sym">,</span> a7<span class="sym">,</span> a8<span class="sym">,</span> a9 <span class="sym">]</span>
    <span class="sym">|</span> otherwise <span class="sym">=</span> loop <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> n <span class="sym">(-</span>alt<span class="sym">)</span>
                       <span class="sym">(</span>a1 <span class="sym">+ (</span><span class="num">2</span><span class="sym">/</span><span class="num">3</span><span class="sym">) ** (</span>k<span class="sym">-</span><span class="num">1</span><span class="sym">))</span>
                       <span class="sym">(</span>a2 <span class="sym">+</span> <span class="num">1</span> <span class="sym">/</span> sqrt k<span class="sym">)</span>
                       <span class="sym">(</span>a3 <span class="sym">+</span> <span class="num">1</span> <span class="sym">/ (</span>k <span class="sym">* (</span>k <span class="sym">+</span> <span class="num">1</span><span class="sym">)))</span>
                       <span class="sym">(</span>a4 <span class="sym">+</span> <span class="num">1</span> <span class="sym">/ (</span>k3 <span class="sym">*</span> sk <span class="sym">*</span> sk<span class="sym">))</span>
                       <span class="sym">(</span>a5 <span class="sym">+</span> <span class="num">1</span> <span class="sym">/ (</span>k3 <span class="sym">*</span> ck <span class="sym">*</span> ck<span class="sym">))</span>
                       <span class="sym">(</span>a6 <span class="sym">+</span> dk<span class="sym">)</span>
                       <span class="sym">(</span>a7 <span class="sym">+</span> <span class="num">1</span> <span class="sym">/</span> k2<span class="sym">)</span>
                       <span class="sym">(</span>a8 <span class="sym">+</span> alt <span class="sym">*</span> dk<span class="sym">)</span>
                       <span class="sym">(</span>a9 <span class="sym">+</span> alt <span class="sym">/ (</span><span class="num">2</span> <span class="sym">*</span> k <span class="sym">-</span> <span class="num">1</span><span class="sym">))</span>
    <span class="kwa">where</span> k3 <span class="sym">=</span> k2<span class="sym">*</span>k<span class="sym">;</span> k2 <span class="sym">=</span> k<span class="sym">*</span>k<span class="sym">;</span> dk <span class="sym">=</span> <span class="num">1</span><span class="sym">/</span>k<span class="sym">;</span> k <span class="sym">=</span> fromIntegral i<span class="sym">;</span> sk <span class="sym">=</span> sin k<span class="sym">;</span> ck <span class="sym">=</span> cos k<span class="sym">;</span> x<span class="sym">!</span>y <span class="sym">=</span> x`seq`y

