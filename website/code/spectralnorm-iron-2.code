<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Sebastien Loisel</span>
<span class="slc"># Fixed by Isaac Gouy</span>
<span class="slc"># Sped up by Josh Goldfoot</span>

<span class="kwa">import</span> math<span class="sym">,</span> sys<span class="sym">,</span> itertools

<span class="kwa">def</span> <span class="kwd">eval_A</span><span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">):</span>
    <span class="kwa">return</span> <span class="num">1.0</span><span class="sym">/((</span>i<span class="sym">+</span>j<span class="sym">)*(</span>i<span class="sym">+</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">)/</span><span class="num">2</span><span class="sym">+</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span>

<span class="kwa">def</span> <span class="kwd">eval_A_times_u</span><span class="sym">(</span>u<span class="sym">):</span>
    <span class="kwa">return</span> <span class="sym">[</span><span class="kwb">sum</span><span class="sym">(</span><span class="kwd">eval_A</span><span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">)*</span>u<span class="sym">[</span>j<span class="sym">]</span> <span class="kwa">for</span> j <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="kwb">len</span><span class="sym">(</span>u<span class="sym">)))</span>
            <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="kwb">len</span><span class="sym">(</span>u<span class="sym">))]</span>

<span class="kwa">def</span> <span class="kwd">eval_At_times_u</span><span class="sym">(</span>u<span class="sym">):</span>
    <span class="kwa">return</span> <span class="sym">[</span><span class="kwb">sum</span><span class="sym">(</span><span class="kwd">eval_A</span><span class="sym">(</span>j<span class="sym">,</span>i<span class="sym">)*</span>u<span class="sym">[</span>j<span class="sym">]</span> <span class="kwa">for</span> j <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="kwb">len</span><span class="sym">(</span>u<span class="sym">)))</span>
            <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="kwb">len</span><span class="sym">(</span>u<span class="sym">))]</span>

<span class="kwa">def</span> <span class="kwd">eval_AtA_times_u</span><span class="sym">(</span>u<span class="sym">):</span>
    <span class="kwa">return</span> <span class="kwd">eval_At_times_u</span><span class="sym">(</span><span class="kwd">eval_A_times_u</span><span class="sym">(</span>u<span class="sym">))</span>

<span class="kwa">def</span> <span class="kwd">main</span><span class="sym">():</span>
    n <span class="sym">=</span> <span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>
    u <span class="sym">= [</span><span class="num">1</span><span class="sym">]*</span>n
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="num">10</span><span class="sym">):</span>
        v<span class="sym">=</span><span class="kwd">eval_AtA_times_u</span><span class="sym">(</span>u<span class="sym">)</span>
        u<span class="sym">=</span><span class="kwd">eval_AtA_times_u</span><span class="sym">(</span>v<span class="sym">)</span>
    vBv <span class="sym">=</span> vv <span class="sym">=</span> <span class="num">0</span>
    <span class="kwa">for</span> ue<span class="sym">,</span> ve <span class="kwa">in</span> itertools<span class="sym">.</span><span class="kwd">izip</span><span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">):</span>
        vBv <span class="sym">+=</span> ue <span class="sym">*</span> ve
        vv <span class="sym">+=</span> ve <span class="sym">*</span> ve
    <span class="kwa">print</span> <span class="str">&quot;%0.9f&quot;</span> <span class="sym">% (</span>math<span class="sym">.</span><span class="kwd">sqrt</span><span class="sym">(</span>vBv<span class="sym">/</span>vv<span class="sym">))</span>

<span class="kwd">main</span><span class="sym">()</span>
