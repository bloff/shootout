<span class="slc">-- $Id: strcat-gnat-2.code,v 1.2 2005-03-13 23:29:37 bfulgham Exp $
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">-- contributed by James S. Rogers
</span><span class="slc">-- modified 2004/11/21 by Kat-Zygfryd: trimmed the output
</span><span class="slc">-- This is a more 'True ADA' version of the task, but is somewhat less
</span><span class="slc">--    efficient than the other version.
</span>
<span class="kwa">with</span> Ada.Command_Line<span class="sym">;</span> <span class="kwa">use</span> Ada.Command_Line<span class="sym">;
</span><span class="kwa">with</span> Ada.Strings.Unbounded<span class="sym">;</span> <span class="kwa">use</span> Ada.Strings.Unbounded<span class="sym">;
</span><span class="kwa">with</span> Ada.Text_Io<span class="sym">;</span> <span class="kwa">use</span> Ada.Text_Io<span class="sym">;

</span><span class="kwa">procedure</span> Strcat <span class="kwa">is
</span>    N<span class="sym">:</span> <span class="kwb">Integer</span><span class="sym">;
</span>    Hello <span class="sym">:</span> <span class="kwb">String</span> <span class="sym">:=</span> <span class="str">&quot;hello&quot;</span> <span class="sym">&amp;</span> Ascii.Lf<span class="sym">;
</span>    Buffer <span class="sym">:</span> Unbounded_String <span class="sym">:=</span> Null_Unbounded_String<span class="sym">;
</span><span class="kwa">begin
</span>    N <span class="sym">:=</span> <span class="kwb">Integer</span><span class="sym">'</span>Value<span class="sym">(</span>Argument<span class="sym">(</span><span class="num">1</span><span class="sym">));
</span>    <span class="kwa">for</span> Num <span class="kwa">in</span> <span class="num">1</span>..N <span class="kwa">loop
</span>       Append<span class="sym">(</span>Source <span class="sym">=&gt;</span> Buffer<span class="sym">,</span> New_Item <span class="sym">=&gt;</span> Hello<span class="sym">);
</span>    <span class="kwa">end loop</span><span class="sym">;
</span>    <span class="kwa">declare
</span>       S<span class="sym">:</span> <span class="kwb">String</span> <span class="sym">:=</span> <span class="kwb">Natural</span><span class="sym">'</span>Image<span class="sym">(</span> Length<span class="sym">(</span>Buffer<span class="sym">) );
</span>    <span class="kwa">begin
</span>       Put_Line<span class="sym">(</span> S<span class="sym">(</span><span class="num">2</span>..S<span class="sym">'</span>Length<span class="sym">) );
</span>    <span class="kwa">end</span><span class="sym">;
</span><span class="kwa">end</span> Strcat<span class="sym">;</span>
