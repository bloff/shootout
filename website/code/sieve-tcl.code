<span class="line">    1 </span><span class="slc">#!/usr/bin/tclsh
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: sieve-tcl.code,v 1.4 2004-11-13 07:43:22 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc"># with help from: Kristoffer Lawson
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="kwa">proc</span> sieve <span class="sym">{</span>num<span class="sym">} {
</span><span class="line">    7 </span><span class="sym"></span>    <span class="kwa">while</span> <span class="sym">{</span><span class="kwb">$num</span> <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">} {
</span><span class="line">    8 </span><span class="sym"></span>        <span class="kwa">incr</span> num <span class="num">-1
</span><span class="line">    9 </span><span class="num"></span>        <span class="kwa">set</span> count <span class="num">0
</span><span class="line">   10 </span><span class="num"></span>        <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">2</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">} {</span><span class="kwa">incr</span> i <span class="num">1</span><span class="sym">} {
</span><span class="line">   11 </span><span class="sym"></span>            <span class="kwa">set</span> flags<span class="sym">(</span><span class="kwb">$i</span><span class="sym">)</span> <span class="num">1
</span><span class="line">   12 </span><span class="num"></span>        <span class="sym">}
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">2</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">} {</span><span class="kwa">incr</span> i <span class="num">1</span><span class="sym">} {
</span><span class="line">   14 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$flags</span><span class="sym">(</span><span class="kwb">$i</span><span class="sym">) ==</span> <span class="num">1</span><span class="sym">} {
</span><span class="line">   15 </span><span class="sym"></span>                <span class="slc"># remove all multiples of prime: i
</span><span class="line">   16 </span><span class="slc"></span>                <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> k <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$i</span><span class="sym">+</span><span class="kwb">$i</span><span class="sym">}]} {</span><span class="kwb">$k</span> <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">} {</span><span class="kwa">incr</span> k <span class="kwb">$i</span><span class="sym">} {
</span><span class="line">   17 </span><span class="sym"></span>                    <span class="kwa">set</span> flags<span class="sym">(</span><span class="kwb">$k</span><span class="sym">)</span> <span class="num">0
</span><span class="line">   18 </span><span class="num"></span>                <span class="sym">}
</span><span class="line">   19 </span><span class="sym"></span>                <span class="kwa">incr</span> count <span class="num">1
</span><span class="line">   20 </span><span class="num"></span>            <span class="sym">}
</span><span class="line">   21 </span><span class="sym">        }
</span><span class="line">   22 </span><span class="sym">    }
</span><span class="line">   23 </span><span class="sym"></span>    <span class="kwa">return</span> <span class="kwb">$count
</span><span class="line">   24 </span><span class="kwb"></span><span class="sym">}
</span><span class="line">   25 </span><span class="sym">
</span><span class="line">   26 </span><span class="sym"></span><span class="kwa">set</span> NUM <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]
</span><span class="line">   27 </span><span class="sym"></span><span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$NUM</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">} {
</span><span class="line">   28 </span><span class="sym"></span>    <span class="kwa">set</span> NUM <span class="num">1
</span><span class="line">   29 </span><span class="num"></span><span class="sym">}
</span><span class="line">   30 </span><span class="sym">
</span><span class="line">   31 </span><span class="sym"></span><span class="kwa">set</span> count <span class="sym">[</span>sieve <span class="kwb">$NUM</span><span class="sym">]
</span><span class="line">   32 </span><span class="sym"></span><span class="kwa">puts</span> <span class="str">&quot;Count: $count&quot;</span>
