<span class="com">/* -*- mode: c -*-
 * $Id: hash-tcc.code,v 1.2 2005-09-21 04:54:32 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 */</span>

<span class="dir">#include &lt;stdio.h&gt;
</span><span class="dir">#include &lt;stdlib.h&gt;
</span><span class="dir">#include &lt;unistd.h&gt;
</span><span class="dir">#include</span> <span class="dstr">&quot;../../Include/simple_hash.h&quot;</span><span class="dir">
</span>
<span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span>    <span class="kwb">int</span> i<span class="sym">,</span> c<span class="sym">=</span><span class="num">0</span><span class="sym">,</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span>    <span class="kwb">char</span> buf<span class="sym">[</span><span class="num">32</span><span class="sym">];

</span>    <span class="kwb">struct</span> ht_ht <span class="sym">*</span>ht <span class="sym">=</span> ht_create<span class="sym">(</span>n<span class="sym">);

</span>    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">1</span><span class="sym">;</span> i<span class="sym">&lt;=</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>	sprintf<span class="sym">(</span>buf<span class="sym">,</span> <span class="str">&quot;%x&quot;</span><span class="sym">,</span> i<span class="sym">);
	(</span>ht_find_new<span class="sym">(</span>ht<span class="sym">,</span> buf<span class="sym">))-&gt;</span>val <span class="sym">=</span> i<span class="sym">;
    }

</span>    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span>n<span class="sym">;</span> i<span class="sym">&gt;</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">--) {
</span>	sprintf<span class="sym">(</span>buf<span class="sym">,</span> <span class="str">&quot;%d&quot;</span><span class="sym">,</span> i<span class="sym">);
</span>	<span class="kwa">if</span> <span class="sym">(</span>ht_find<span class="sym">(</span>ht<span class="sym">,</span> buf<span class="sym">))</span> c<span class="sym">++;
    }

</span>    ht_destroy<span class="sym">(</span>ht<span class="sym">);

</span>    printf<span class="sym">(</span><span class="str">&quot;%d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> c<span class="sym">);
</span>    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
}</span>
