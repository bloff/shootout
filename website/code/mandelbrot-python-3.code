<span class="slc"># The Computer Language Benchmarks Game</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by Tupteq</span>

<span class="kwa">import</span> sys

<span class="kwa">def</span> <span class="kwd">main</span><span class="sym">():</span>
    cout <span class="sym">=</span> sys<span class="sym">.</span>stdout<span class="sym">.</span>write
    <span class="kwb">iter</span> <span class="sym">=</span> <span class="num">50</span>
    limit <span class="sym">=</span> <span class="num">2</span><span class="sym">.</span>
    size <span class="sym">=</span> <span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>
    fsize <span class="sym">=</span> <span class="kwb">float</span><span class="sym">(</span>size<span class="sym">)</span>
    xr_size <span class="sym">=</span> <span class="kwb">xrange</span><span class="sym">(</span>size<span class="sym">)</span>
    xr_iter <span class="sym">=</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="kwb">iter</span><span class="sym">)</span>
    bit_num <span class="sym">=</span> <span class="num">7</span>
    byte_acc <span class="sym">=</span> <span class="num">0</span>

    <span class="kwd">cout</span><span class="sym">(</span><span class="str">&quot;P4</span><span class="esc">\n</span><span class="str">%d %d</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">% (</span>size<span class="sym">,</span> size<span class="sym">))</span>

    <span class="kwa">for</span> y <span class="kwa">in</span> xr_size<span class="sym">:</span>
        fy <span class="sym">=</span> <span class="num">2</span>j <span class="sym">*</span> y <span class="sym">/</span> fsize <span class="sym">-</span> <span class="num">1</span>j
        <span class="kwa">for</span> x <span class="kwa">in</span> xr_size<span class="sym">:</span>
            z <span class="sym">=</span> <span class="num">0</span>j
            c <span class="sym">=</span> <span class="num">2</span><span class="sym">. *</span> x <span class="sym">/</span> fsize <span class="sym">-</span> <span class="num">1.5</span> <span class="sym">+</span> fy

            <span class="kwa">for</span> i <span class="kwa">in</span> xr_iter<span class="sym">:</span>
                z <span class="sym">=</span> z <span class="sym">*</span> z <span class="sym">+</span> c
                <span class="kwa">if</span> <span class="kwb">abs</span><span class="sym">(</span>z<span class="sym">) &gt;=</span> limit<span class="sym">:</span>
                    <span class="kwa">break</span>
            <span class="kwa">else</span><span class="sym">:</span>
                byte_acc <span class="sym">+=</span> <span class="num">1</span> <span class="sym">&lt;&lt;</span> bit_num

            <span class="kwa">if</span> bit_num <span class="sym">==</span> <span class="num">0</span><span class="sym">:</span>
                <span class="kwd">cout</span><span class="sym">(</span><span class="kwb">chr</span><span class="sym">(</span>byte_acc<span class="sym">))</span>
                bit_num <span class="sym">=</span> <span class="num">7</span>
                byte_acc <span class="sym">=</span> <span class="num">0</span>
            <span class="kwa">else</span><span class="sym">:</span>
                bit_num <span class="sym">-=</span> <span class="num">1</span>

        <span class="kwa">if</span> bit_num <span class="sym">!=</span> <span class="num">7</span><span class="sym">:</span>
            <span class="kwd">cout</span><span class="sym">(</span><span class="kwb">chr</span><span class="sym">(</span>byte_acc<span class="sym">))</span>
            bit_num <span class="sym">=</span> <span class="num">7</span>
            byte_acc <span class="sym">=</span> <span class="num">0</span>

<span class="kwd">main</span><span class="sym">()</span>
