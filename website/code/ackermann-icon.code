<span class="line">    1 </span><span class="slc"># -*- mode: icon -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: ackermann-icon.code,v 1.3 2004-11-11 07:13:56 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)
</span><span class="line">    6 </span><span class="sym"></span>    num <span class="sym">:=</span> argv<span class="sym">[</span><span class="num">1</span><span class="sym">];
</span><span class="line">    7 </span><span class="sym"></span>    write<span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span><span class="sym">,</span> num<span class="sym">,</span> <span class="str">&quot;): &quot;</span><span class="sym">,</span> ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span>num<span class="sym">));
</span><span class="line">    8 </span><span class="sym"></span><span class="kwa">end
</span><span class="line">    9 </span><span class="kwa">
</span><span class="line">   10 </span><span class="kwa">procedure</span> ack<span class="sym">(</span>m<span class="sym">,</span>n<span class="sym">)
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>m <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">then</span> <span class="sym">{
</span><span class="line">   12 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span>n <span class="sym">+</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   13 </span><span class="sym">    }
</span><span class="line">   14 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">then</span> <span class="sym">{
</span><span class="line">   15 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span>ack<span class="sym">(</span>m<span class="num">-1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   16 </span><span class="sym">    }
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span>ack<span class="sym">(</span>m<span class="num">-1</span><span class="sym">,</span> ack<span class="sym">(</span>m<span class="sym">,</span> n<span class="num">-1</span><span class="sym">)))
</span><span class="line">   18 </span><span class="sym"></span><span class="kwa">end</span>
