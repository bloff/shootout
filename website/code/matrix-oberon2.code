<span class="line">    1 </span><span class="com">(* The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="com">    http://shootout.alioth.debian.org
</span><span class="line">    3 </span><span class="com"> 
</span><span class="line">    4 </span><span class="com">    contributed by Isaac Gouy (Oberon-2 novice)
</span><span class="line">    5 </span><span class="com"> *)</span>
<span class="line">    6 </span>
<span class="line">    7 </span>  <span class="kwa">MODULE</span> Matrix<span class="sym">;
</span><span class="line">    8 </span><span class="sym"> </span><span class="kwa">IMPORT</span> LangShootout<span class="sym">,</span> Out<span class="sym">;
</span><span class="line">    9 </span><span class="sym"> 
</span><span class="line">   10 </span><span class="sym"> </span><span class="kwa">CONST
</span><span class="line">   11 </span><span class="kwa"> </span>   size <span class="sym">=</span> <span class="num">30</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"> </span>   rowSize <span class="sym">=</span> size<span class="sym">;
</span><span class="line">   13 </span><span class="sym"> </span>   rowLast <span class="sym">=</span> rowSize <span class="num">- 1</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym"> </span>   colSize <span class="sym">=</span> size<span class="sym">;
</span><span class="line">   15 </span><span class="sym"> </span>   colLast <span class="sym">=</span> colSize <span class="num">- 1</span><span class="sym">;
</span><span class="line">   16 </span><span class="sym"> 
</span><span class="line">   17 </span><span class="sym"> </span><span class="kwa">TYPE
</span><span class="line">   18 </span><span class="kwa"> </span>   Matrix <span class="sym">=</span> <span class="kwa">ARRAY</span> rowSize<span class="sym">,</span> colSize <span class="kwa">OF</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"> 
</span><span class="line">   20 </span><span class="sym"> </span><span class="kwa">VAR
</span><span class="line">   21 </span><span class="kwa"> </span>   n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   22 </span><span class="sym"> </span>   m1<span class="sym">,</span> m2<span class="sym">,</span> mm<span class="sym">:</span> Matrix<span class="sym">;
</span><span class="line">   23 </span><span class="sym"> 
</span><span class="line">   24 </span><span class="sym"> 
</span><span class="line">   25 </span><span class="sym"> </span><span class="kwa">PROCEDURE</span> MakeMatrix<span class="sym">(</span><span class="kwa">VAR</span> m<span class="sym">:</span> Matrix<span class="sym">);
</span><span class="line">   26 </span><span class="sym"> </span><span class="kwa">VAR</span> i<span class="sym">,</span> j<span class="sym">,</span> count<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   27 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   28 </span><span class="kwa"> </span>   count <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   29 </span><span class="sym"> </span>   FOR i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> rowLast <span class="kwa">DO
</span><span class="line">   30 </span><span class="kwa"> </span>      FOR j <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> colLast <span class="kwa">DO
</span><span class="line">   31 </span><span class="kwa"> </span>         m<span class="sym">[</span>i<span class="sym">,</span>j<span class="sym">] :=</span> count<span class="sym">;
</span><span class="line">   32 </span><span class="sym"> </span>         <span class="kwa">INC</span><span class="sym">(</span>count<span class="sym">);
</span><span class="line">   33 </span><span class="sym"> </span>      <span class="kwa">END</span><span class="sym">;
</span><span class="line">   34 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   35 </span><span class="sym"> </span><span class="kwa">END</span> MakeMatrix<span class="sym">;
</span><span class="line">   36 </span><span class="sym"> 
</span><span class="line">   37 </span><span class="sym"> 
</span><span class="line">   38 </span><span class="sym"> </span><span class="kwa">PROCEDURE</span> MatrixMultiply<span class="sym">(</span>leftm<span class="sym">,</span> rightm<span class="sym">:</span> Matrix<span class="sym">;</span> <span class="kwa">VAR</span> m<span class="sym">:</span> Matrix<span class="sym">);
</span><span class="line">   39 </span><span class="sym"> </span><span class="kwa">VAR</span> i<span class="sym">,</span> j<span class="sym">,</span> k<span class="sym">,</span> sumOfProduct<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   40 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   41 </span><span class="kwa"> </span>   FOR i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> rowLast <span class="kwa">DO
</span><span class="line">   42 </span><span class="kwa"> </span>      FOR j <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> colLast <span class="kwa">DO
</span><span class="line">   43 </span><span class="kwa"> </span>         sumOfProduct <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   44 </span><span class="sym"> </span>         FOR k <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> colLast <span class="kwa">DO
</span><span class="line">   45 </span><span class="kwa">             INC</span><span class="sym">(</span>sumOfProduct<span class="sym">,</span> leftm<span class="sym">[</span>i<span class="sym">,</span>k<span class="sym">] *</span> rightm<span class="sym">[</span>k<span class="sym">,</span>j<span class="sym">]);
</span><span class="line">   46 </span><span class="sym"> </span>         <span class="kwa">END</span><span class="sym">;
</span><span class="line">   47 </span><span class="sym"> </span>         m<span class="sym">[</span>i<span class="sym">,</span>j<span class="sym">] :=</span> sumOfProduct<span class="sym">;
</span><span class="line">   48 </span><span class="sym"> </span>      <span class="kwa">END</span><span class="sym">;
</span><span class="line">   49 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   50 </span><span class="sym"> </span><span class="kwa">END</span> MatrixMultiply<span class="sym">;
</span><span class="line">   51 </span><span class="sym"> 
</span><span class="line">   52 </span><span class="sym"> 
</span><span class="line">   53 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   54 </span><span class="kwa"> </span>   n <span class="sym">:=</span> LangShootout<span class="sym">.</span>Argi<span class="sym">();
</span><span class="line">   55 </span><span class="sym"> 
</span><span class="line">   56 </span><span class="sym"> </span>   MakeMatrix<span class="sym">(</span>m1<span class="sym">);
</span><span class="line">   57 </span><span class="sym"> </span>   MakeMatrix<span class="sym">(</span>m2<span class="sym">);
</span><span class="line">   58 </span><span class="sym"> 
</span><span class="line">   59 </span><span class="sym"> </span>   <span class="kwa">WHILE</span> n <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">DO
</span><span class="line">   60 </span><span class="kwa">       DEC</span><span class="sym">(</span>n<span class="sym">);
</span><span class="line">   61 </span><span class="sym"> </span>      MatrixMultiply<span class="sym">(</span>m1<span class="sym">,</span> m2<span class="sym">,</span> mm<span class="sym">);
</span><span class="line">   62 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   63 </span><span class="sym"> 
</span><span class="line">   64 </span><span class="sym"> </span>   Out<span class="sym">.</span>Int<span class="sym">(</span>mm<span class="sym">[</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">],</span><span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Char<span class="sym">(</span><span class="num">20X</span><span class="sym">);</span> Out<span class="sym">.</span>Int<span class="sym">(</span>mm<span class="sym">[</span><span class="num">2</span><span class="sym">,</span><span class="num">3</span><span class="sym">],</span><span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Char<span class="sym">(</span><span class="num">20X</span><span class="sym">);
</span><span class="line">   65 </span><span class="sym"> </span>   Out<span class="sym">.</span>Int<span class="sym">(</span>mm<span class="sym">[</span><span class="num">3</span><span class="sym">,</span><span class="num">2</span><span class="sym">],</span><span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Char<span class="sym">(</span><span class="num">20X</span><span class="sym">);</span> Out<span class="sym">.</span>Int<span class="sym">(</span>mm<span class="sym">[</span><span class="num">4</span><span class="sym">,</span><span class="num">4</span><span class="sym">],</span><span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;
</span><span class="line">   66 </span><span class="sym"> </span><span class="kwa">END</span> Matrix<span class="sym">.</span> 
