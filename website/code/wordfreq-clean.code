<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<B><FONT COLOR="#A020F0">module</FONT></B> wordfreq

<B><FONT COLOR="#A020F0">import</FONT></B> StdEnv,StdStrictLists

Start <B><FONT COLOR="#228B22">:: *World -&gt; (!Bool,!*World)
</FONT></B>Start world
    # (console,world) = stdio world
    # ht = htNew 2048
    # (ht,console) = read_words_in_file0 console ht
    # items = sort (htToList ht)
    # console = write_items items console
    = fclose console world


read_words_in_file0 <B><FONT COLOR="#228B22">:: *File !(HashTable Int) -&gt; (!HashTable Int,!*File)
</FONT></B>read_words_in_file0 f ht
    # (s,f) = freads f 4096
    | size s==0
        = (ht,f)
    # (ia,s) = skip_to_alpha_char 0 s
    = read_words_in_string1 ia s f ht

read_words_in_string0 <B><FONT COLOR="#228B22">:: Int *{#Char} *File !(HashTable Int) -&gt; (!HashTable Int,!*File)
</FONT></B>read_words_in_string0 i s f ht
    # (ia,s) = skip_to_alpha_char i s
    = read_words_in_string1 ia s f ht

read_words_in_string1 <B><FONT COLOR="#228B22">:: Int *{#Char} *File !(HashTable Int) -&gt; (!HashTable Int,!*File)
</FONT></B>read_words_in_string1 ia s f ht
    # (ina,s) = skip_alpha_chars_and_convert_to_lower_case ia s
    | ia==ina
        = read_words_in_file0 f ht
    #! word = s % (ia,ina-1)
    | ina&lt;4096
        # ht = htUpdate (\ item=:{val} = {item &amp; val=val+1}) word 0 ht
        = read_words_in_string0 ina s f ht
        = read_words_in_file1 word f ht

read_words_in_file1 <B><FONT COLOR="#228B22">:: {#Char} *File !(HashTable Int) -&gt; (!HashTable Int,!*File)
</FONT></B>read_words_in_file1 word f ht
    # (s,f) = freads f 4096
    | size s==0
        = (htUpdate (\ item=:{val} = {item &amp; val=val+1}) word 0 ht,f)
    # (ia,s) = skip_to_alpha_char 0 s
    | ia&lt;&gt;0
        # ht = htUpdate (\ item=:{val} = {item &amp; val=val+1}) word 0 ht
        = read_words_in_string1 ia s f ht
    # (ina,s) = skip_alpha_chars_and_convert_to_lower_case ia s
    | ina&lt;4096
        #! rest_of_word = s % (0,ina-1)
        # ht = htUpdate (\ item=:{val} = {item &amp; val=val+1})(word+++rest_of_word) 0 ht
        = read_words_in_string0 ina s f ht
        = read_words_in_file1 (word+++s) f ht

skip_alpha_chars_and_convert_to_lower_case <B><FONT COLOR="#228B22">:: !Int !*{#Char} -&gt; (!Int,!*{#Char})
</FONT></B>skip_alpha_chars_and_convert_to_lower_case i s
    | i&lt;size s
        #! c=s.[i]
        | c&gt;=<B><FONT COLOR="#BC8F8F">'a'</FONT></B> &amp;&amp; c&lt;=<B><FONT COLOR="#BC8F8F">'z'</FONT></B>
            = skip_alpha_chars_and_convert_to_lower_case (i+1) s
        | c&gt;=<B><FONT COLOR="#BC8F8F">'A'</FONT></B> &amp;&amp; c&lt;=<B><FONT COLOR="#BC8F8F">'Z'</FONT></B>
            = skip_alpha_chars_and_convert_to_lower_case (i+1) {s &amp; [i]=toChar (toInt c+32)}
            = (i,s)
        = (i,s)

skip_to_alpha_char <B><FONT COLOR="#228B22">:: !Int !*{#Char} -&gt; (!Int,!*{#Char})
</FONT></B>skip_to_alpha_char i s
    | i&lt;size s
        #! c=s.[i]
        | c&lt;<B><FONT COLOR="#BC8F8F">'A'</FONT></B> || c&gt;<B><FONT COLOR="#BC8F8F">'z'</FONT></B> || ( c&gt;<B><FONT COLOR="#BC8F8F">'Z'</FONT></B> &amp;&amp; c&lt;<B><FONT COLOR="#BC8F8F">'a'</FONT></B>)
            = skip_to_alpha_char (i+1) s
            = (i,s)
        = (i,s)

<B><FONT COLOR="#A020F0">instance</FONT></B> &lt; (Item Int) <B><FONT COLOR="#A020F0">where</FONT></B>
        (&lt;) {val=v1,key=k1} {val=v2,key=k2}
            | v1&lt;&gt;v2
                = v1&gt;v2
                = k1&gt;k2

write_items [{key,val}:items] fo
    # s = toString val
    # fo = <B><FONT COLOR="#A020F0">if</FONT></B> (size s&lt;7) (fwrites (createArray (7-size s) <B><FONT COLOR="#BC8F8F">' '</FONT></B>) fo) fo
    = write_items items (fo &lt;&lt;&lt; s &lt;&lt;&lt; <B><FONT COLOR="#BC8F8F">' '</FONT></B> &lt;&lt;&lt; key &lt;&lt;&lt; '\n')
write_items [] fo
    = fo


// SimpleHash implementation would normally be imported
  
primes =: [
   53,         97,         193,       389,       769,
   1543,       3079,       6151,      12289,     24593,
   49157,      98317,      196613,    93241,     786433,
   1572869,    3145739,    6291469,   12582917,  25165843,
   50331653,   100663319,  201326611, 402653189, 805306457
   ]

<B><FONT COLOR="#228B22">:: Item a = { key::!String
</FONT></B>            , val<B><FONT COLOR="#228B22">::!a
</FONT></B>            }

<B><FONT COLOR="#228B22">:: SHashTable a = { nBuckets::!Int
</FONT></B>                 , table<B><FONT COLOR="#228B22">::!.{!.[!Item a!]}
</FONT></B>                 }

<B><FONT COLOR="#228B22">:: *HashTable a :== SHashTable a
</FONT></B>
hash <B><FONT COLOR="#228B22">:: !{#.Char} !Int -&gt; Int
</FONT></B>hash key nBuckets
   = (abs (loop key (size key - 1) 0)) rem nBuckets  
   <B><FONT COLOR="#A020F0">where</FONT></B>
   loop <B><FONT COLOR="#228B22">:: !{#Char} !Int !Int -&gt; Int
</FONT></B>   loop k n h
      | n&gt;=0
          = loop k (n-1) (5*h + toInt k.[n])       
          = h

htNew n = { nBuckets = nprime
        , table = {[|] \\ i &lt;- [0..nprime-1]}
        }
   <B><FONT COLOR="#A020F0">where</FONT></B>   
   nprime = hd (dropWhile (\x = x &lt; n) primes)        

htUpdate <B><FONT COLOR="#228B22">:: ((Item a) -&gt; Item a) !{#.Char} !a !*(HashTable a) -&gt; *HashTable a
</FONT></B>htUpdate f k v ht=:{table,nBuckets}
    #! i = hash k nBuckets
    #! (b,table) = replace table i [|]
    # b = updateItem b k v f
    = {ht &amp; table = {table &amp; [i] = b}}
<B><FONT COLOR="#A020F0">where</FONT></B>
    updateItem <B><FONT COLOR="#228B22">:: !*[!(Item a)!] !{#.Char} a ((Item a) -&gt; Item a) -&gt; *[!(Item a)!]
</FONT></B>    updateItem [|item:ls] k v f
       | item.key &lt;&gt; k
               = [|item : updateItem ls k v f]
               = [|f item:ls]
    updateItem [|] k v f
        = [|f {key=k,val=v}]

htToList <B><FONT COLOR="#228B22">:: !(HashTable a) -&gt; [Item a]
</FONT></B>htToList ht=:{nBuckets,table}
    = ht_to_list 0 nBuckets table []
    <B><FONT COLOR="#A020F0">where</FONT></B>
        ht_to_list i n table l
            | i&lt;n
                # (list,table) = table![i]
                #! l=ht_buckets_to_list list l
                = ht_to_list (i+1) n table l
                = l

        ht_buckets_to_list <B><FONT COLOR="#228B22">:: *[!Item a!] [Item a] -&gt; [Item a]
</FONT></B>        ht_buckets_to_list [|i:is] l
            = ht_buckets_to_list is [i:l]
        ht_buckets_to_list [|] l
            = l</pre></td></tr></table>
