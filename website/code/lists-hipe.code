<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">%% The Great Computer Language Shootout
</FONT></I><I><FONT COLOR="#B22222">%% http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">%% contributed by Alexey Shchepin &lt;alexey@sevcom.net&gt;
</FONT></I>
<I><FONT COLOR="#B22222">% module &quot;lists&quot; already exists in stdlib
</FONT></I><B><FONT COLOR="#5F9EA0">-module</FONT></B>(lists_test).
<B><FONT COLOR="#5F9EA0">-export</FONT></B>([main/0, main/1]).

<B><FONT COLOR="#5F9EA0">-define</FONT></B>(<B><FONT COLOR="#DA70D6">SIZE</FONT></B>, 10000).

<B><FONT COLOR="#0000FF">main</FONT></B>() -&gt; main([<B><FONT COLOR="#BC8F8F">'1'</FONT></B>]).
<B><FONT COLOR="#0000FF">main</FONT></B>([<FONT COLOR="#B8860B">Arg</FONT>]) -&gt;
    <FONT COLOR="#B8860B">N</FONT> = <B><FONT COLOR="#A020F0">list_to_integer</FONT></B>(<B><FONT COLOR="#A020F0">atom_to_list</FONT></B>(<FONT COLOR="#B8860B">Arg</FONT>)),
    test_lists_n(<FONT COLOR="#B8860B">N</FONT>),
    <B><FONT COLOR="#A020F0">halt</FONT></B>(0).

<B><FONT COLOR="#0000FF">test_lists_n</FONT></B>(1) -&gt;
    io:format(<B><FONT COLOR="#BC8F8F">&quot;~p~n&quot;</FONT></B>, [test_lists()]);
<B><FONT COLOR="#0000FF">test_lists_n</FONT></B>(<FONT COLOR="#B8860B">N</FONT>) -&gt;
    test_lists(),
    test_lists_n(<FONT COLOR="#B8860B">N</FONT>-1).

<B><FONT COLOR="#0000FF">test_lists</FONT></B>() -&gt;
    <B><FONT COLOR="#A020F0">erase</FONT></B>(),
    <FONT COLOR="#B8860B">L1</FONT> = create_seq(),
    <FONT COLOR="#B8860B">L2</FONT> = copy(<FONT COLOR="#B8860B">L1</FONT>),
    {<FONT COLOR="#B8860B">L22</FONT>, <FONT COLOR="#B8860B">L3</FONT>} = move1(<FONT COLOR="#B8860B">L2</FONT>, new()),
    {<FONT COLOR="#B8860B">L33</FONT>, <FONT COLOR="#B8860B">L222</FONT>} = move2(<FONT COLOR="#B8860B">L3</FONT>, <FONT COLOR="#B8860B">L22</FONT>),
    <FONT COLOR="#B8860B">L11</FONT> = reverse(<FONT COLOR="#B8860B">L1</FONT>),
    ?<B><FONT COLOR="#DA70D6">SIZE</FONT></B> = head(<FONT COLOR="#B8860B">L11</FONT>),
    test_eq(<FONT COLOR="#B8860B">L11</FONT>, <FONT COLOR="#B8860B">L222</FONT>),
    len(<FONT COLOR="#B8860B">L11</FONT>).

<B><FONT COLOR="#0000FF">move1</FONT></B>(<FONT COLOR="#B8860B">From</FONT>, <FONT COLOR="#B8860B">To</FONT>) -&gt;
    <B><FONT COLOR="#A020F0">case</FONT></B> move_from_begin_to_end(<FONT COLOR="#B8860B">From</FONT>, <FONT COLOR="#B8860B">To</FONT>) <B><FONT COLOR="#A020F0">of</FONT></B>
	{<FONT COLOR="#B8860B">NewFrom</FONT>, <FONT COLOR="#B8860B">NewTo</FONT>} -&gt;
	    move1(<FONT COLOR="#B8860B">NewFrom</FONT>, <FONT COLOR="#B8860B">NewTo</FONT>);
	nil -&gt;
	    {<FONT COLOR="#B8860B">From</FONT>, <FONT COLOR="#B8860B">To</FONT>}
    <B><FONT COLOR="#A020F0">end</FONT></B>.

<B><FONT COLOR="#0000FF">move2</FONT></B>(<FONT COLOR="#B8860B">From</FONT>, <FONT COLOR="#B8860B">To</FONT>) -&gt;
    <B><FONT COLOR="#A020F0">case</FONT></B> move_from_end_to_end(<FONT COLOR="#B8860B">From</FONT>, <FONT COLOR="#B8860B">To</FONT>) <B><FONT COLOR="#A020F0">of</FONT></B>
	{<FONT COLOR="#B8860B">NewFrom</FONT>, <FONT COLOR="#B8860B">NewTo</FONT>} -&gt;
	    move2(<FONT COLOR="#B8860B">NewFrom</FONT>, <FONT COLOR="#B8860B">NewTo</FONT>);
	nil -&gt;
	    {<FONT COLOR="#B8860B">From</FONT>, <FONT COLOR="#B8860B">To</FONT>}
    <B><FONT COLOR="#A020F0">end</FONT></B>.

<I><FONT COLOR="#B22222">% Implementation of doubly-linked lists
</FONT></I>
<B><FONT COLOR="#0000FF">new</FONT></B>() -&gt;
    {nil, nil}.

<B><FONT COLOR="#0000FF">new_el</FONT></B>(<FONT COLOR="#B8860B">Data</FONT>) -&gt;
    <FONT COLOR="#B8860B">Ref</FONT> = <B><FONT COLOR="#A020F0">make_ref</FONT></B>(),
    <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">Ref</FONT>, <FONT COLOR="#B8860B">Data</FONT>),
    <FONT COLOR="#B8860B">Ref</FONT>.

<B><FONT COLOR="#0000FF">push_end</FONT></B>({nil, nil}, <FONT COLOR="#B8860B">Val</FONT>) -&gt;
    <FONT COLOR="#B8860B">Data</FONT> = {<FONT COLOR="#B8860B">Val</FONT>, nil, nil},
    <FONT COLOR="#B8860B">NewEl</FONT> = new_el(<FONT COLOR="#B8860B">Data</FONT>),
    {<FONT COLOR="#B8860B">NewEl</FONT>, <FONT COLOR="#B8860B">NewEl</FONT>};
<B><FONT COLOR="#0000FF">push_end</FONT></B>({<FONT COLOR="#B8860B">First</FONT>, <FONT COLOR="#B8860B">Last</FONT>}, <FONT COLOR="#B8860B">Val</FONT>) -&gt;
    <FONT COLOR="#B8860B">Data</FONT> = {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">Last</FONT>, nil},
    <FONT COLOR="#B8860B">NewEl</FONT> = new_el(<FONT COLOR="#B8860B">Data</FONT>),
    <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">Last</FONT>, <B><FONT COLOR="#A020F0">setelement</FONT></B>(3, <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">Last</FONT>), <FONT COLOR="#B8860B">NewEl</FONT>)),
    {<FONT COLOR="#B8860B">First</FONT>, <FONT COLOR="#B8860B">NewEl</FONT>}.

<B><FONT COLOR="#0000FF">head</FONT></B>({<FONT COLOR="#B8860B">First</FONT>, <FONT COLOR="#B8860B">_Last</FONT>}) -&gt;
    <B><FONT COLOR="#A020F0">element</FONT></B>(1, <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">First</FONT>)).

<B><FONT COLOR="#0000FF">create_seq</FONT></B>() -&gt;
    create_seq(1, new()).
<B><FONT COLOR="#0000FF">create_seq</FONT></B>(<FONT COLOR="#B8860B">N</FONT>, <FONT COLOR="#B8860B">List</FONT>) -&gt;
    <B><FONT COLOR="#A020F0">if</FONT></B>
	<FONT COLOR="#B8860B">N</FONT> =&lt; ?<B><FONT COLOR="#DA70D6">SIZE</FONT></B> -&gt;
	    create_seq(<FONT COLOR="#B8860B">N</FONT>+1, push_end(<FONT COLOR="#B8860B">List</FONT>, <FONT COLOR="#B8860B">N</FONT>));
	true -&gt;
	    <FONT COLOR="#B8860B">List</FONT>
    <B><FONT COLOR="#A020F0">end</FONT></B>.

<B><FONT COLOR="#0000FF">copy</FONT></B>({<FONT COLOR="#B8860B">First</FONT>, <FONT COLOR="#B8860B">_Last</FONT>}) -&gt;
    copy1(<FONT COLOR="#B8860B">First</FONT>, new()).

<B><FONT COLOR="#0000FF">copy1</FONT></B>(nil, <FONT COLOR="#B8860B">List</FONT>) -&gt;
    <FONT COLOR="#B8860B">List</FONT>;
<B><FONT COLOR="#0000FF">copy1</FONT></B>(<FONT COLOR="#B8860B">El</FONT>, <FONT COLOR="#B8860B">List</FONT>) -&gt;
    {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">_Prev</FONT>, <FONT COLOR="#B8860B">Next</FONT>} = <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">El</FONT>),
    copy1(<FONT COLOR="#B8860B">Next</FONT>, push_end(<FONT COLOR="#B8860B">List</FONT>, <FONT COLOR="#B8860B">Val</FONT>)).

<B><FONT COLOR="#0000FF">reverse</FONT></B>({<FONT COLOR="#B8860B">First</FONT>, <FONT COLOR="#B8860B">Last</FONT>}) -&gt;
    reverse_els(<FONT COLOR="#B8860B">First</FONT>),
    {<FONT COLOR="#B8860B">Last</FONT>, <FONT COLOR="#B8860B">First</FONT>}.

<B><FONT COLOR="#0000FF">reverse_els</FONT></B>(nil) -&gt;
    ok;
<B><FONT COLOR="#0000FF">reverse_els</FONT></B>(<FONT COLOR="#B8860B">El</FONT>) -&gt;
    {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">Prev</FONT>, <FONT COLOR="#B8860B">Next</FONT>} = <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">El</FONT>),
    <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">El</FONT>, {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">Next</FONT>, <FONT COLOR="#B8860B">Prev</FONT>}),
    reverse_els(<FONT COLOR="#B8860B">Next</FONT>).

<B><FONT COLOR="#0000FF">move_from_begin_to_end</FONT></B>({<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">Last1</FONT>}, {<FONT COLOR="#B8860B">First2</FONT>, <FONT COLOR="#B8860B">Last2</FONT>}) -&gt;
    <B><FONT COLOR="#A020F0">if</FONT></B>
	<FONT COLOR="#B8860B">First1</FONT> == nil -&gt;
	    nil;
	true -&gt;
	    {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">_Prev1</FONT>, <FONT COLOR="#B8860B">Next1</FONT>} = <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">First1</FONT>),
	    <FONT COLOR="#B8860B">NewList1</FONT> = <B><FONT COLOR="#A020F0">if</FONT></B>
			   <FONT COLOR="#B8860B">Next1</FONT> == nil -&gt;
			       {nil, nil};
			   true -&gt;
			       {<FONT COLOR="#B8860B">Next1</FONT>, <FONT COLOR="#B8860B">Last1</FONT>}
		       <B><FONT COLOR="#A020F0">end</FONT></B>,
	    <FONT COLOR="#B8860B">NewList2</FONT> = <B><FONT COLOR="#A020F0">if</FONT></B>
			   <FONT COLOR="#B8860B">First2</FONT> == nil -&gt;
			       <FONT COLOR="#B8860B">Data</FONT> = {<FONT COLOR="#B8860B">Val</FONT>, nil, nil},
			       <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">Data</FONT>),
			       {<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">First1</FONT>};
			   true -&gt;
			       <FONT COLOR="#B8860B">Data</FONT> = {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">Last2</FONT>, nil},
			       <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">Data</FONT>),
			       <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">Last2</FONT>, <B><FONT COLOR="#A020F0">setelement</FONT></B>(3, <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">Last2</FONT>), <FONT COLOR="#B8860B">First1</FONT>)),
			       {<FONT COLOR="#B8860B">First2</FONT>, <FONT COLOR="#B8860B">First1</FONT>}
		       <B><FONT COLOR="#A020F0">end</FONT></B>,
	    {<FONT COLOR="#B8860B">NewList1</FONT>, <FONT COLOR="#B8860B">NewList2</FONT>}
    <B><FONT COLOR="#A020F0">end</FONT></B>.

<B><FONT COLOR="#0000FF">move_from_end_to_end</FONT></B>({<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">Last1</FONT>}, {<FONT COLOR="#B8860B">First2</FONT>, <FONT COLOR="#B8860B">Last2</FONT>}) -&gt;
    <B><FONT COLOR="#A020F0">if</FONT></B>
	<FONT COLOR="#B8860B">First1</FONT> == nil -&gt;
	    nil;
	true -&gt;
	    {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">Prev1</FONT>, <FONT COLOR="#B8860B">_Next1</FONT>} = <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">Last1</FONT>),
	    <FONT COLOR="#B8860B">NewList1</FONT> = <B><FONT COLOR="#A020F0">if</FONT></B>
			   <FONT COLOR="#B8860B">Prev1</FONT> == nil -&gt;
			       {nil, nil};
			   true -&gt;
			       {<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">Prev1</FONT>}
		       <B><FONT COLOR="#A020F0">end</FONT></B>,
	    <FONT COLOR="#B8860B">NewList2</FONT> = <B><FONT COLOR="#A020F0">if</FONT></B>
			   <FONT COLOR="#B8860B">First2</FONT> == nil -&gt;
			       <FONT COLOR="#B8860B">Data</FONT> = {<FONT COLOR="#B8860B">Val</FONT>, nil, nil},
			       <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">Last1</FONT>, <FONT COLOR="#B8860B">Data</FONT>),
			       {<FONT COLOR="#B8860B">Last1</FONT>, <FONT COLOR="#B8860B">Last1</FONT>};
			   true -&gt;
			       <FONT COLOR="#B8860B">Data</FONT> = {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">Last2</FONT>, nil},
			       <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">Last1</FONT>, <FONT COLOR="#B8860B">Data</FONT>),
			       <B><FONT COLOR="#A020F0">put</FONT></B>(<FONT COLOR="#B8860B">Last2</FONT>, <B><FONT COLOR="#A020F0">setelement</FONT></B>(3, <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">Last2</FONT>), <FONT COLOR="#B8860B">Last1</FONT>)),
			       {<FONT COLOR="#B8860B">First2</FONT>, <FONT COLOR="#B8860B">Last1</FONT>}
		       <B><FONT COLOR="#A020F0">end</FONT></B>,
	    {<FONT COLOR="#B8860B">NewList1</FONT>, <FONT COLOR="#B8860B">NewList2</FONT>}
    <B><FONT COLOR="#A020F0">end</FONT></B>.

<B><FONT COLOR="#0000FF">test_eq</FONT></B>({<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">Last1</FONT>}, {<FONT COLOR="#B8860B">First2</FONT>, <FONT COLOR="#B8860B">Last2</FONT>}) -&gt;
    test_eq1(<FONT COLOR="#B8860B">First1</FONT>, <FONT COLOR="#B8860B">First2</FONT>).

<B><FONT COLOR="#0000FF">test_eq1</FONT></B>(nil, nil) -&gt;
    ok;
<B><FONT COLOR="#0000FF">test_eq1</FONT></B>(<FONT COLOR="#B8860B">El1</FONT>, <FONT COLOR="#B8860B">El2</FONT>) -&gt;
    {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">_Prev1</FONT>, <FONT COLOR="#B8860B">Next1</FONT>} = <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">El1</FONT>),
    {<FONT COLOR="#B8860B">Val</FONT>, <FONT COLOR="#B8860B">_Prev2</FONT>, <FONT COLOR="#B8860B">Next2</FONT>} = <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">El2</FONT>),
    test_eq1(<FONT COLOR="#B8860B">Next1</FONT>, <FONT COLOR="#B8860B">Next2</FONT>).

<B><FONT COLOR="#0000FF">len</FONT></B>({<FONT COLOR="#B8860B">First</FONT>, <FONT COLOR="#B8860B">_Last</FONT>}) -&gt;
    len(<FONT COLOR="#B8860B">First</FONT>, 0).

<B><FONT COLOR="#0000FF">len</FONT></B>(nil, <FONT COLOR="#B8860B">N</FONT>) -&gt;
    <FONT COLOR="#B8860B">N</FONT>;
<B><FONT COLOR="#0000FF">len</FONT></B>(<FONT COLOR="#B8860B">El</FONT>, <FONT COLOR="#B8860B">N</FONT>) -&gt;
    len(<B><FONT COLOR="#A020F0">element</FONT></B>(3, <B><FONT COLOR="#A020F0">get</FONT></B>(<FONT COLOR="#B8860B">El</FONT>)), <FONT COLOR="#B8860B">N</FONT> + 1).
</pre></td></tr></table>
