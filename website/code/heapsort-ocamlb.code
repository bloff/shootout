<span class="line">    1 </span><span class="com">(*
</span><span class="line">    2 </span><span class="com"> * $Id: heapsort-ocamlb.code,v 1.4 2004-11-13 07:41:41 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * with help from Markus Mottl
</span><span class="line">    5 </span><span class="com"> *)</span>
<span class="line">    6 </span>
<span class="line">    7 </span><span class="kwa">let</span> im <span class="sym">=</span> <span class="num">139968</span> <span class="kwa">and</span> ia <span class="sym">=</span> <span class="num">3877</span> <span class="kwa">and</span> ic <span class="sym">=</span> <span class="num">29573</span> <span class="kwa">and</span> last_ref <span class="sym">=</span> ref <span class="num">42
</span><span class="line">    8 </span><span class="num">
</span><span class="line">    9 </span><span class="num"></span><span class="kwa">let</span> gen_random max <span class="sym">=
</span><span class="line">   10 </span><span class="sym"></span>  <span class="kwa">let</span> new_last <span class="sym">= (!</span>last_ref <span class="sym">*</span> ia <span class="sym">+</span> ic<span class="sym">)</span> <span class="kwa">mod</span> im <span class="kwa">in
</span><span class="line">   11 </span><span class="kwa"></span>  last_ref <span class="sym">:=</span> new_last<span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>  max <span class="sym">*</span>. float_of_int new_last <span class="sym">/</span>. <span class="kwb">float</span> im
<span class="line">   13 </span>
<span class="line">   14 </span>
<span class="line">   15 </span><span class="kwa">let</span> heapsort n ra <span class="sym">=
</span><span class="line">   16 </span><span class="sym"></span>  <span class="kwa">let</span> l <span class="sym">=</span> ref <span class="sym">((</span>n <span class="kwa">lsr</span> <span class="num">1</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   17 </span><span class="sym"></span>  <span class="kwa">and</span> rra <span class="sym">=</span> ref <span class="num">0.0</span> <span class="kwa">and</span> i <span class="sym">=</span> ref <span class="num">0</span> <span class="kwa">and</span> j <span class="sym">=</span> ref <span class="num">0</span> <span class="kwa">and</span> ir <span class="sym">=</span> ref n <span class="kwa">in
</span><span class="line">   18 </span><span class="kwa">  try
</span><span class="line">   19 </span><span class="kwa">    while true do
</span><span class="line">   20 </span><span class="kwa">      if</span> <span class="sym">!</span>l <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then begin
</span><span class="line">   21 </span><span class="kwa"></span>        decr l<span class="sym">;
</span><span class="line">   22 </span><span class="sym"></span>        rra <span class="sym">:=</span> ra.<span class="sym">(!</span>l<span class="sym">)
</span><span class="line">   23 </span><span class="sym"></span>      <span class="kwa">end
</span><span class="line">   24 </span><span class="kwa">      else begin
</span><span class="line">   25 </span><span class="kwa"></span>        rra <span class="sym">:=</span> ra.<span class="sym">(!</span>ir<span class="sym">);
</span><span class="line">   26 </span><span class="sym"></span>        ra.<span class="sym">(!</span>ir<span class="sym">) &lt;-</span> ra.<span class="sym">(</span><span class="num">1</span><span class="sym">);
</span><span class="line">   27 </span><span class="sym"></span>        decr ir<span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">!</span>ir <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then begin
</span><span class="line">   29 </span><span class="kwa"></span>          ra.<span class="sym">(</span><span class="num">1</span><span class="sym">) &lt;- !</span>rra<span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>          raise Exit
<span class="line">   31 </span>        <span class="kwa">end
</span><span class="line">   32 </span><span class="kwa">      end</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span>      i <span class="sym">:= !</span>l<span class="sym">;
</span><span class="line">   34 </span><span class="sym"></span>      j <span class="sym">:= !</span>l <span class="kwa">lsl</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   35 </span><span class="sym"></span>      <span class="kwa">while</span> <span class="sym">!</span>j <span class="sym">&lt;= !</span>ir <span class="kwa">do
</span><span class="line">   36 </span><span class="kwa">        if</span> <span class="sym">!</span>j <span class="sym">&lt; !</span>ir <span class="sym">&amp;&amp;</span> ra.<span class="sym">(!</span>j<span class="sym">) &lt;</span> ra.<span class="sym">(!</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">then</span> incr j<span class="sym">;
</span><span class="line">   37 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">!</span>rra <span class="sym">&lt;</span> ra.<span class="sym">(!</span>j<span class="sym">)</span> <span class="kwa">then begin
</span><span class="line">   38 </span><span class="kwa"></span>          ra.<span class="sym">(!</span>i<span class="sym">) &lt;-</span> ra.<span class="sym">(!</span>j<span class="sym">);
</span><span class="line">   39 </span><span class="sym"></span>          i <span class="sym">:= !</span>j<span class="sym">;
</span><span class="line">   40 </span><span class="sym"></span>          j <span class="sym">:= !</span>j <span class="sym">+ !</span>i
<span class="line">   41 </span>        <span class="kwa">end
</span><span class="line">   42 </span><span class="kwa">        else</span> j <span class="sym">:= !</span>ir <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   43 </span><span class="sym"></span>      <span class="kwa">done</span><span class="sym">;
</span><span class="line">   44 </span><span class="sym"></span>      ra.<span class="sym">(!</span>i<span class="sym">) &lt;- !</span>rra<span class="sym">;
</span><span class="line">   45 </span><span class="sym"></span>    <span class="kwa">done
</span><span class="line">   46 </span><span class="kwa">  with</span> Exit <span class="sym">-&gt; ()
</span><span class="line">   47 </span><span class="sym">
</span><span class="line">   48 </span><span class="sym"></span><span class="kwa">let</span> n <span class="sym">=</span> <span class="kwa">if</span> Array.length Sys.argv <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span> int_of_string Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">else</span> <span class="num">1</span><span class="sym">;;
</span><span class="line">   49 </span><span class="sym"></span><span class="kwa">let</span> ary <span class="sym">=</span> Array.init <span class="sym">(</span>n <span class="sym">+</span> <span class="num">1</span><span class="sym">) (</span><span class="kwa">fun</span> _ <span class="sym">-&gt;</span> gen_random <span class="num">1.0</span><span class="sym">)</span> <span class="kwa">in
</span><span class="line">   50 </span><span class="kwa"></span>heapsort n ary<span class="sym">;
</span><span class="line">   51 </span><span class="sym"></span>Printf.printf <span class="str">&quot;%.10f</span><span class="esc">\n</span><span class="str">&quot;</span> ary.<span class="sym">(</span>n<span class="sym">)</span>
