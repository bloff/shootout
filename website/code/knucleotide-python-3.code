<span class="slc">#!/usr/bin/python
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># submitted by Ian Osgood
</span><span class="slc"># modified by Sokolov Yura
</span>
<span class="kwc">import</span> sys

<span class="kwb">def</span> gen_freq<span class="sym">(</span>seq<span class="sym">,</span> length<span class="sym">):
</span>	n<span class="sym">,</span>t <span class="sym">=</span> <span class="kwa">len</span><span class="sym">(</span>seq<span class="sym">)+</span><span class="num">1</span><span class="sym">-</span>length<span class="sym">, {}

</span>	<span class="kwb">def</span> k_freq<span class="sym">(</span>frame<span class="sym">):
</span>		<span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>frame<span class="sym">,</span>n<span class="sym">,</span>length<span class="sym">):
</span>			s <span class="sym">=</span> seq<span class="sym">[</span>i<span class="sym">:</span>i<span class="sym">+</span>length<span class="sym">]
</span>			<span class="kwb">if</span> s <span class="kwb">in</span> t<span class="sym">:
</span>				t<span class="sym">[</span>s<span class="sym">] +=</span> <span class="num">1
</span>			<span class="kwb">else</span><span class="sym">:
</span>				t<span class="sym">[</span>s<span class="sym">] =</span> <span class="num">1

</span>	<span class="kwb">for</span> f <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>length<span class="sym">):
</span>		k_freq<span class="sym">(</span>f<span class="sym">)

</span>	<span class="kwb">return</span> n<span class="sym">,</span>t


<span class="kwb">def</span> sort_seq<span class="sym">(</span>seq<span class="sym">,</span> length<span class="sym">):
</span>	n<span class="sym">,</span>t <span class="sym">=</span> gen_freq<span class="sym">(</span>seq<span class="sym">,</span> length<span class="sym">)
</span>	l <span class="sym">=</span> zip<span class="sym">(</span>t<span class="sym">.</span>values<span class="sym">(),</span> t<span class="sym">.</span>keys<span class="sym">())
</span>	l<span class="sym">.</span>sort<span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>v1<span class="sym">,</span>k1<span class="sym">),(</span>v2<span class="sym">,</span>k2<span class="sym">):</span> <span class="kwa">cmp</span><span class="sym">(</span>v2<span class="sym">,</span>v1<span class="sym">)</span> <span class="kwb">or</span> <span class="kwa">cmp</span><span class="sym">(</span>k1<span class="sym">,</span>k2<span class="sym">))
</span>	<span class="kwb">print</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">.</span>join<span class="sym">([</span><span class="str">&quot;%s %.3f&quot;</span> <span class="sym">% (</span>s<span class="sym">,</span><span class="num">100.0</span><span class="sym">*</span>count<span class="sym">/</span>n<span class="sym">)</span> <span class="kwb">for</span> count<span class="sym">,</span>s <span class="kwb">in</span> l<span class="sym">])
</span>	<span class="kwb">print


def</span> find_seq<span class="sym">(</span>seq<span class="sym">,</span> s<span class="sym">):
</span>	n<span class="sym">,</span>t <span class="sym">=</span> gen_freq<span class="sym">(</span>seq<span class="sym">,</span> <span class="kwa">len</span><span class="sym">(</span>s<span class="sym">))
</span>	<span class="kwb">print</span> <span class="str">&quot;%d</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span>t<span class="sym">.</span>get<span class="sym">(</span>s<span class="sym">,</span><span class="num">0</span><span class="sym">),</span> s<span class="sym">)


</span>seq <span class="sym">= []
</span>add_line <span class="sym">=</span> seq<span class="sym">.</span>append
<span class="kwb">for</span> line <span class="kwb">in</span> sys<span class="sym">.</span>stdin<span class="sym">:
</span>	<span class="kwb">if</span> line<span class="sym">.</span>startswith<span class="sym">(</span><span class="str">&quot;&gt;THREE&quot;</span><span class="sym">):
</span>		<span class="kwb">break
for</span> line <span class="kwb">in</span> sys<span class="sym">.</span>stdin<span class="sym">:
</span>	<span class="kwb">if</span> line<span class="sym">[</span><span class="num">0</span><span class="sym">]</span> <span class="kwb">in</span> <span class="str">&quot;&gt;;&quot;</span><span class="sym">:
</span>		<span class="kwb">break
</span>	add_line<span class="sym">(</span>line<span class="sym">[:-</span><span class="num">1</span><span class="sym">])

</span>seq <span class="sym">=</span> <span class="str">''</span><span class="sym">.</span>join<span class="sym">(</span>seq<span class="sym">).</span>upper<span class="sym">()

</span>sort_seq<span class="sym">(</span>seq<span class="sym">,</span> <span class="num">1</span><span class="sym">)
</span>sort_seq<span class="sym">(</span>seq<span class="sym">,</span> <span class="num">2</span><span class="sym">)
</span>find_seq<span class="sym">(</span>seq<span class="sym">,</span> <span class="str">&quot;GGT&quot;</span><span class="sym">)
</span>find_seq<span class="sym">(</span>seq<span class="sym">,</span> <span class="str">&quot;GGTA&quot;</span><span class="sym">)
</span>find_seq<span class="sym">(</span>seq<span class="sym">,</span> <span class="str">&quot;GGTATT&quot;</span><span class="sym">)
</span>find_seq<span class="sym">(</span>seq<span class="sym">,</span> <span class="str">&quot;GGTATTTTAATT&quot;</span><span class="sym">)
</span>find_seq<span class="sym">(</span>seq<span class="sym">,</span> <span class="str">&quot;GGTATTTTAATTTATAGT&quot;</span><span class="sym">)</span>
