<span class="sym">/*</span> The Computer Language Shootout
   http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/</span>

   contributed by Tim Hochberg<span class="sym">,</span> loosely based on Tobias Polzin's Python version
<span class="sym">*/</span>
<span class="kwa">module</span> chameneos

<span class="kwa">import</span> StdEnv<span class="sym">,</span> LanguageShootout

<span class="sym">::</span> Color <span class="sym">=</span> Red <span class="sym">|</span> Blue <span class="sym">|</span> Yellow <span class="sym">|</span> Nil

<span class="sym">::</span> GlobalState <span class="sym">=</span> {n <span class="sym">:: !</span><span class="kwb">Int</span><span class="sym">,</span>
				  waiter1 <span class="sym">:: !</span>Color<span class="sym">,</span>
				  waiter2 <span class="sym">:: !</span>Color}

<span class="sym">::</span> LocalState <span class="sym">=</span> {color <span class="sym">:: !</span>Color<span class="sym">,</span>
				 met <span class="sym">:: !</span><span class="kwb">Int</span><span class="sym">,</span>
				 iswaiter1 <span class="sym">:: !</span><span class="kwb">Bool</span>}


Start world
	<span class="sym">=</span> toString <span class="sym">(</span>schedule <span class="sym">(</span>LS Blue<span class="sym">) (</span>LS Red<span class="sym">) (</span>LS Yellow<span class="sym">) ((</span>LS Blue<span class="sym">),</span> gs<span class="sym">)) +++</span> <span class="str">&quot;\n&quot;</span>
<span class="kwa">where</span>
	gs <span class="sym">=</span> {n<span class="sym">=</span>argi<span class="sym">,</span> waiter1<span class="sym">=</span>Nil<span class="sym">,</span> waiter2<span class="sym">=</span>Nil}
	LS c <span class="sym">=</span> {color<span class="sym">=</span>c<span class="sym">,</span> met<span class="sym">=</span><span class="num">0</span><span class="sym">,</span> iswaiter1<span class="sym">=</span><span class="kwa">False</span>}


<span class="sym">::</span> LS <span class="sym">:==</span> LocalState
<span class="sym">//</span> Trivial round<span class="sym">-</span>robin scheduler.
schedule <span class="sym">:: !*</span>LS <span class="sym">!*</span>LS <span class="sym">!*</span>LS <span class="sym">(!*</span>LS<span class="sym">, !*</span>GlobalState<span class="sym">) -&gt;</span> <span class="kwb">Int</span>
schedule {color<span class="sym">=</span>Nil<span class="sym">,</span> met<span class="sym">=</span>m0} {color<span class="sym">=</span>Nil<span class="sym">,</span> met<span class="sym">=</span>m1} {color<span class="sym">=</span>Nil<span class="sym">,</span> met<span class="sym">=</span>m2} <span class="sym">(</span>{color<span class="sym">=</span>Nil<span class="sym">,</span> met<span class="sym">=</span>m3}<span class="sym">,</span> _<span class="sym">)</span>
	<span class="sym">=</span> m0 <span class="sym">+</span> m1 <span class="sym">+</span> m2 <span class="sym">+</span> m3
schedule s0 s1 s2 <span class="sym">(</span>s3<span class="sym">,</span> gs<span class="sym">)</span>
	<span class="sym">=</span> schedule s1 s2 s3 <span class="sym">(</span>creature s0 gs<span class="sym">)</span>


<span class="sym">//</span> A social creature
creature <span class="sym">:: !*</span>LocalState <span class="sym">!*</span>GlobalState <span class="sym">-&gt; (*</span>LocalState<span class="sym">, *</span>GlobalState<span class="sym">)</span>
creature ls gs<span class="sym">=:</span>{waiter1<span class="sym">=</span>Nil<span class="sym">,</span> waiter2<span class="sym">=</span>Nil}
	<span class="sym">= (</span>{ls <span class="sym">&amp;</span> iswaiter1<span class="sym">=</span><span class="kwa">True</span>}<span class="sym">,</span> {gs <span class="sym">&amp;</span> waiter1<span class="sym">=</span>ls.color}<span class="sym">)</span>
creature ls gs<span class="sym">=:</span>{waiter2<span class="sym">=</span>Nil}
	<span class="sym">|</span> gs.n <span class="sym">&lt;=</span> <span class="num">0</span>
		<span class="sym">= (</span>{ls <span class="sym">&amp;</span> color<span class="sym">=</span>Nil}<span class="sym">,</span> gs<span class="sym">)</span>
	<span class="sym">|</span> otherwise
		<span class="sym">= (</span>{ls <span class="sym">&amp;</span> color<span class="sym">=</span>c<span class="sym">,</span> met<span class="sym">=</span>inc ls.met}<span class="sym">,</span>
		   {gs <span class="sym">&amp;</span> waiter2<span class="sym">=</span>c<span class="sym">,</span> n<span class="sym">=</span>dec gs.n}<span class="sym">)</span>
		  with c <span class="sym">= (</span>complement ls.color gs.waiter1<span class="sym">)</span>
creature ls gs
	<span class="sym">|</span> ls.iswaiter1
		<span class="sym">= (</span>{ls <span class="sym">&amp;</span> iswaiter1<span class="sym">=</span><span class="kwa">False</span><span class="sym">,</span> color<span class="sym">=</span>gs.waiter2<span class="sym">,</span> met<span class="sym">=</span>inc ls.met}<span class="sym">,</span>
		   {gs <span class="sym">&amp;</span> waiter1<span class="sym">=</span>Nil<span class="sym">,</span> waiter2<span class="sym">=</span>Nil}<span class="sym">)</span>
	<span class="sym">|</span> otherwise
		<span class="sym">= (</span>ls<span class="sym">,</span> gs<span class="sym">)</span>

allfaded <span class="sym">:: [</span>LocalState<span class="sym">] -&gt;</span> <span class="kwb">Bool</span>
allfaded <span class="sym">[</span>{color<span class="sym">=</span>Nil}<span class="sym">:</span>rest<span class="sym">] =</span> allfaded rest
allfaded <span class="sym">[]					=</span> <span class="kwa">True</span>
allfaded _					<span class="sym">=</span> <span class="kwa">False</span>


complement <span class="sym">:: !</span>Color <span class="sym">!</span>Color <span class="sym">-&gt;</span> Color
complement Red Yellow    <span class="sym">=</span> Blue
complement Red Blue      <span class="sym">=</span> Yellow
complement Red Red       <span class="sym">=</span> Red
complement Yellow Blue   <span class="sym">=</span> Red
complement Yellow Red    <span class="sym">=</span> Blue
complement Yellow Yellow <span class="sym">=</span> Yellow
complement Blue Red      <span class="sym">=</span> Yellow
complement Blue Yellow   <span class="sym">=</span> Red
complement Blue Blue     <span class="sym">=</span> Blue
complement _	_		 <span class="sym">=</span> Nil
