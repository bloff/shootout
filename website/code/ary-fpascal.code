<span class="line">    1 </span><span class="kwa">Program</span> ary<span class="sym">;
</span><span class="line">    2 </span><span class="sym"></span><span class="kwa">uses</span> SysUtils<span class="sym">,</span> Classes<span class="sym">;
</span><span class="line">    3 </span><span class="sym">
</span><span class="line">    4 </span><span class="sym"></span><span class="kwa">var
</span><span class="line">    5 </span><span class="kwa"></span>        n<span class="sym">,</span> i<span class="sym">,</span> k<span class="sym">,</span> last <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">    6 </span><span class="sym"></span>        X<span class="sym">,</span> Y <span class="sym">:</span> TList<span class="sym">;
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">    8 </span><span class="kwa">        if</span> ParamCount <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
</span><span class="line">    9 </span><span class="kwa"></span>                n <span class="sym">:=</span> <span class="num">1
</span><span class="line">   10 </span><span class="num"></span>        <span class="kwa">else
</span><span class="line">   11 </span><span class="kwa"></span>                n <span class="sym">:=</span> StrToInt<span class="sym">(</span>ParamStr<span class="sym">(</span><span class="num">1</span><span class="sym">));
</span><span class="line">   12 </span><span class="sym">
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwa">if</span> n <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> n <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span>        last <span class="sym">:=</span> n <span class="num">- 1</span><span class="sym">;
</span><span class="line">   16 </span><span class="sym"></span>        X <span class="sym">:=</span> TList.Create<span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>        X.Capacity <span class="sym">:=</span> n<span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>        <span class="kwa">For</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">To</span> last <span class="kwa">do
</span><span class="line">   19 </span><span class="kwa"></span>                X.Add<span class="sym">(</span> <span class="kwb">Pointer</span><span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">) );
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym"></span>        Y <span class="sym">:=</span> TList.Create<span class="sym">;
</span><span class="line">   22 </span><span class="sym"></span>        Y.Capacity <span class="sym">:=</span> n<span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>        <span class="kwa">For</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">To</span> last <span class="kwa">do
</span><span class="line">   24 </span><span class="kwa"></span>                Y.Add<span class="sym">(</span> <span class="kwb">Pointer</span><span class="sym">(</span><span class="num">0</span><span class="sym">) );
</span><span class="line">   25 </span><span class="sym">
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span>        <span class="kwa">For</span> k <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">To</span> <span class="num">999</span> <span class="kwa">do
</span><span class="line">   28 </span><span class="kwa">        begin
</span><span class="line">   29 </span><span class="kwa">                For</span> i <span class="sym">:=</span> last <span class="kwa">downto</span> <span class="num">0</span> <span class="kwa">do
</span><span class="line">   30 </span><span class="kwa">                begin
</span><span class="line">   31 </span><span class="kwa"></span>                        Y.Items<span class="sym">[</span>i<span class="sym">] :=</span> <span class="kwb">Pointer</span><span class="sym">(</span><span class="kwb">longint</span><span class="sym">(</span>Y.Items<span class="sym">[</span>i<span class="sym">]) +</span> <span class="kwb">longint</span><span class="sym">(</span>X.Items<span class="sym">[</span>i<span class="sym">]));
</span><span class="line">   32 </span><span class="sym"></span>                <span class="kwa">end</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   34 </span><span class="sym"></span>        Writeln <span class="sym">(</span>IntToStr<span class="sym">(</span><span class="kwb">longint</span><span class="sym">(</span>Y.Items<span class="sym">[</span><span class="num">0</span><span class="sym">])),</span> <span class="str">' '</span><span class="sym">,</span> IntToStr<span class="sym">(</span><span class="kwb">longint</span><span class="sym">(</span>Y.Items<span class="sym">[</span>last<span class="sym">])));
</span><span class="line">   35 </span><span class="sym"></span><span class="kwa">end</span>.
