<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: emacs-lisp -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: methcall-xemacs.code,v 1.2 2004-11-08 08:15:17 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(require 'eieio)

(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">print-bool</FONT></B> (b)
  (<B><FONT COLOR="#A020F0">if</FONT></B> b (princ <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B>) (princ <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>)))

(defclass toggle ()
  ((state <B><FONT COLOR="#5F9EA0">:initarg</FONT></B> state
	  <B><FONT COLOR="#5F9EA0">:initform</FONT></B> t)))

(defmethod toggle-value ((this toggle))
  (oref this state))

(defmethod activate ((this toggle))
  (oset this state (not (oref this state)))
  this)

(defclass nth-toggle (toggle)
    ((count-max <B><FONT COLOR="#5F9EA0">:initarg</FONT></B> <B><FONT COLOR="#5F9EA0">:max-counter</FONT></B>
		<B><FONT COLOR="#5F9EA0">:initform</FONT></B> 1)
     (counter <B><FONT COLOR="#5F9EA0">:initform</FONT></B> 0)))

(defmethod activate ((this nth-toggle))
  (oset this counter (+ 1 (oref this counter)))
  (<B><FONT COLOR="#A020F0">cond</FONT></B> ((&gt;= (oref this counter)
	     (oref this count-max))
	 (oset this state (not (oref this state)))
	 (oset this counter 0)))
  this)

(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">main</FONT></B> ()
  (<B><FONT COLOR="#A020F0">let</FONT></B>* ((arg (car command-line-args-left))
	 (n (<B><FONT COLOR="#A020F0">if</FONT></B> arg (string-to-number arg) 1)))
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((tog (toggle <B><FONT COLOR="#BC8F8F">&quot;foo&quot;</FONT></B>))
	  (val t))
      (dotimes (i n)
	(setq val (toggle-value (activate tog))))
      (print-bool val)

    (<B><FONT COLOR="#A020F0">let</FONT></B> ((ntog (nth-toggle <B><FONT COLOR="#BC8F8F">&quot;bar&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">:max-counter</FONT></B> 3))
	  (val t))
      (dotimes (i n)
	(setq val (toggle-value (activate ntog))))
      (print-bool val)))))
</pre></td></tr></table>
