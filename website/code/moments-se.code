<span class="line">    1 </span><span class="slc">-- -*- mode: eiffel -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: moments-se.code,v 1.3 2004-11-11 07:14:01 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">-- from Steve Thompson
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span>
<span class="line">    7 </span><span class="slc">-- &lt;LOC-OFF&gt;
</span><span class="line">    8 </span><span class="slc"></span><span class="kwa">indexing
</span><span class="line">    9 </span><span class="kwa"></span>   description<span class="sym">:</span> <span class="str">&quot;This class performs the statistical moments test&quot;</span>
<span class="line">   10 </span>   author <span class="sym">:</span> Steve Thompson
<span class="line">   11 </span>   email  <span class="sym">:</span> <span class="str">&quot;Steve_Thompson&#64;prodigy.net&quot;</span>
<span class="line">   12 </span>   date   <span class="sym">:</span> February <span class="num">18</span><span class="sym">,</span> <span class="num">2001
</span><span class="line">   13 </span><span class="num"></span>   compile<span class="sym">:</span> <span class="str">&quot;compile -clean -boost -no_split -O3 main.e -o main&quot;</span>
<span class="line">   14 </span>   run    <span class="sym">:</span> <span class="str">&quot;main &lt; Input&quot;</span>
<span class="line">   15 </span><span class="slc">-- &lt;LOC-ON&gt;
</span><span class="line">   16 </span><span class="slc"></span>
<span class="line">   17 </span><span class="kwa">class</span> MOMENTS
<span class="line">   18 </span>
<span class="line">   19 </span>creation make
<span class="line">   20 </span>
<span class="line">   21 </span><span class="kwa">feature</span> <span class="slc">-- Creation
</span><span class="line">   22 </span><span class="slc"></span>
<span class="line">   23 </span>   make <span class="kwa">is
</span><span class="line">   24 </span><span class="kwa">      local
</span><span class="line">   25 </span><span class="kwa"></span>         index<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   26 </span><span class="kwb"></span>         number<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   27 </span><span class="kwb"></span>         mid<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   28 </span><span class="kwb"></span>         deviation<span class="sym">:</span> <span class="kwb">DOUBLE
</span><span class="line">   29 </span><span class="kwb"></span>         sorter<span class="sym">:</span> COLLECTION_SORTER<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">]
</span><span class="line">   30 </span><span class="sym"></span>      <span class="kwa">do
</span><span class="line">   31 </span><span class="kwa"></span>         <span class="sym">!!</span>values.make<span class="sym">(</span><span class="num">0</span><span class="sym">,</span><span class="num">499</span><span class="sym">)
</span><span class="line">   32 </span><span class="sym"></span>         read_values
<span class="line">   33 </span>         mean <span class="sym">:=</span> sum <span class="sym">/</span> values.count
<span class="line">   34 </span>
<span class="line">   35 </span>         <span class="kwa">from</span> index <span class="sym">:=</span> values.lower until index <span class="sym">&gt;</span> values.upper <span class="kwa">loop
</span><span class="line">   36 </span><span class="kwa"></span>            number <span class="sym">:=</span> values &#64; index
<span class="line">   37 </span>            deviation <span class="sym">:=</span> number <span class="sym">-</span> mean
<span class="line">   38 </span>            average_deviation <span class="sym">:=</span> average_deviation <span class="sym">+</span> deviation.abs
<span class="line">   39 </span>            variance <span class="sym">:=</span> variance <span class="sym">+</span> deviation ^ <span class="num">2
</span><span class="line">   40 </span><span class="num"></span>            skew <span class="sym">:=</span> skew <span class="sym">+</span> deviation ^ <span class="num">3
</span><span class="line">   41 </span><span class="num"></span>            kurtosis <span class="sym">:=</span> kurtosis <span class="sym">+</span> deviation ^ <span class="num">4
</span><span class="line">   42 </span><span class="num"></span>            index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span><span class="line">   43 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   44 </span><span class="kwa">
</span><span class="line">   45 </span><span class="kwa"></span>         average_deviation <span class="sym">:=</span> average_deviation <span class="sym">/</span> values.count
<span class="line">   46 </span>         variance <span class="sym">:=</span> variance <span class="sym">/ (</span>values.count <span class="num">- 1</span><span class="sym">)
</span><span class="line">   47 </span><span class="sym"></span>         standard_deviation <span class="sym">:=</span> variance.sqrt <span class="slc">--math.sqrt(variance)
</span><span class="line">   48 </span><span class="slc"></span>         <span class="kwa">if</span> variance <span class="sym">&gt;</span> <span class="num">0.0</span> <span class="kwa">then
</span><span class="line">   49 </span><span class="kwa"></span>            skew <span class="sym">:=</span> skew <span class="sym">/ (</span>values.count <span class="sym">*</span> variance <span class="sym">*</span> standard_deviation<span class="sym">)
</span><span class="line">   50 </span><span class="sym"></span>            kurtosis <span class="sym">:=</span> kurtosis <span class="sym">/ (</span>values.count <span class="sym">*</span> variance <span class="sym">*</span> variance<span class="sym">) -</span> <span class="num">3.0
</span><span class="line">   51 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   52 </span><span class="kwa"></span>         sorter.sort<span class="sym">(</span>values<span class="sym">)
</span><span class="line">   53 </span><span class="sym"></span>         mid <span class="sym">:=</span> values.count <span class="sym">//</span> <span class="num">2
</span><span class="line">   54 </span><span class="num"></span>         <span class="kwa">if</span> <span class="sym">(</span>values.count \\ <span class="num">2</span><span class="sym">) =</span> <span class="num">0</span> <span class="kwa">then
</span><span class="line">   55 </span><span class="kwa"></span>            median <span class="sym">:= (</span>values.item<span class="sym">(</span>mid<span class="sym">) +</span> values.item<span class="sym">(</span>mid <span class="num">- 1</span><span class="sym">)) /</span> <span class="num">2
</span><span class="line">   56 </span><span class="num"></span>         <span class="kwa">else
</span><span class="line">   57 </span><span class="kwa"></span>            median <span class="sym">:=</span> values &#64; mid
<span class="line">   58 </span>         <span class="kwa">end
</span><span class="line">   59 </span><span class="kwa">
</span><span class="line">   60 </span><span class="kwa"></span>         print <span class="sym">(</span><span class="str">&quot;n:                  &quot;</span> <span class="sym">+</span> values.count.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   61 </span><span class="sym"></span>         print <span class="sym">(</span><span class="str">&quot;median:             &quot;</span> <span class="sym">+</span> median.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   62 </span><span class="sym"></span>         print <span class="sym">(</span><span class="str">&quot;mean:               &quot;</span> <span class="sym">+</span> mean.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   63 </span><span class="sym"></span>         print <span class="sym">(</span><span class="str">&quot;average_deviation:  &quot;</span> <span class="sym">+</span> average_deviation.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   64 </span><span class="sym"></span>         print <span class="sym">(</span><span class="str">&quot;standard_deviation: &quot;</span> <span class="sym">+</span> standard_deviation.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   65 </span><span class="sym"></span>         print <span class="sym">(</span><span class="str">&quot;variance:           &quot;</span> <span class="sym">+</span> variance.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   66 </span><span class="sym"></span>         print <span class="sym">(</span><span class="str">&quot;skew:               &quot;</span> <span class="sym">+</span> skew.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   67 </span><span class="sym"></span>         print <span class="sym">(</span><span class="str">&quot;kurtosis:           &quot;</span> <span class="sym">+</span> kurtosis.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   68 </span><span class="sym"></span>      <span class="kwa">end</span> <span class="slc">-- make
</span><span class="line">   69 </span><span class="slc"></span>
<span class="line">   70 </span><span class="kwa">feature</span> <span class="slc">-- Queries
</span><span class="line">   71 </span><span class="slc"></span>
<span class="line">   72 </span>   sum<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   73 </span><span class="kwb">
</span><span class="line">   74 </span><span class="kwb"></span>   mean<span class="sym">,
</span><span class="line">   75 </span><span class="sym"></span>   median<span class="sym">,
</span><span class="line">   76 </span><span class="sym"></span>   average_deviation<span class="sym">,
</span><span class="line">   77 </span><span class="sym"></span>   standard_deviation<span class="sym">,
</span><span class="line">   78 </span><span class="sym"></span>   variance<span class="sym">,
</span><span class="line">   79 </span><span class="sym"></span>   skew<span class="sym">,
</span><span class="line">   80 </span><span class="sym"></span>   kurtosis<span class="sym">:</span> <span class="kwb">DOUBLE
</span><span class="line">   81 </span><span class="kwb">
</span><span class="line">   82 </span><span class="kwb"></span>   values<span class="sym">:</span> ARRAY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">]
</span><span class="line">   83 </span><span class="sym"></span>         <span class="slc">-- Values read from stdin
</span><span class="line">   84 </span><span class="slc"></span>
<span class="line">   85 </span>   read_values <span class="kwa">is
</span><span class="line">   86 </span><span class="kwa">      local
</span><span class="line">   87 </span><span class="kwa"></span>         value<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   88 </span><span class="kwb"></span>         index<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   89 </span><span class="kwb"></span>      <span class="kwa">do
</span><span class="line">   90 </span><span class="kwa">
</span><span class="line">   91 </span><span class="kwa">         from
</span><span class="line">   92 </span><span class="kwa"></span>            index <span class="sym">:=</span> values.lower
<span class="line">   93 </span>            std_input.read_line
<span class="line">   94 </span>         until std_input.end_of_input <span class="kwa">loop
</span><span class="line">   95 </span><span class="kwa"></span>            value <span class="sym">:=</span> std_input.last_string.to_integer
<span class="line">   96 </span>            values.force<span class="sym">(</span>value<span class="sym">,</span> index<span class="sym">)
</span><span class="line">   97 </span><span class="sym"></span>            std_input.read_line
<span class="line">   98 </span>            sum <span class="sym">:=</span> sum <span class="sym">+</span> value
<span class="line">   99 </span>            index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span><span class="line">  100 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">  101 </span><span class="kwa">
</span><span class="line">  102 </span><span class="kwa">      end</span> <span class="slc">-- get_stdin
</span><span class="line">  103 </span><span class="slc"></span>
<span class="line">  104 </span><span class="kwa">end</span>
