<span class="slc">-- -*- mode: eiffel -*-</span>
<span class="slc">-- $Id: moments-se.code,v 1.13 2006-03-18 21:16:50 bfulgham Exp $</span>
<span class="slc">-- http://www.bagley.org/~doug/shootout/</span>
<span class="slc">-- from Steve Thompson</span>

<span class="slc">-- &lt;LOC-OFF&gt;</span>
<span class="slc">--indexing</span>
<span class="slc">--   description: &quot;This class performs the statistical moments test&quot;</span>
<span class="slc">--   author : Steve Thompson</span>
<span class="slc">--   email  : &quot;Steve_Thompson&#64;prodigy.net&quot;</span>
<span class="slc">--   date   : February 18, 2001</span>
<span class="slc">--   compile: &quot;compile -clean -boost -no_split -O3 main.e -o main&quot;</span>
<span class="slc">--   run    : &quot;main &lt; Input&quot;</span>
<span class="slc">-- &lt;LOC-ON&gt;</span>

<span class="kwa">class</span> MOMENTS

insert
	ARGUMENTS

creation <span class="sym">{</span>ANY<span class="sym">}</span>
	make

<span class="kwa">feature</span> <span class="sym">{</span>ANY<span class="sym">}</span> <span class="slc">-- Creation</span>
   make <span class="kwa">is</span>
      <span class="kwa">local</span>
	 index<span class="sym">:</span> <span class="kwb">INTEGER</span>
	 number<span class="sym">:</span> <span class="kwb">INTEGER</span>
	 mid<span class="sym">:</span> <span class="kwb">INTEGER</span>
	 deviation<span class="sym">:</span> <span class="kwb">DOUBLE</span>
	 sorter<span class="sym">:</span> COLLECTION_SORTER<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">]</span>
      <span class="kwa">do</span>
	 <span class="sym">!!</span>values.<span class="kwd">make</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span><span class="num">499</span><span class="sym">)</span>
	 read_values
	 mean <span class="sym">:=</span> sum <span class="sym">/</span> values.count

	 <span class="kwa">from</span> index <span class="sym">:=</span> values.lower until index <span class="sym">&gt;</span> values.upper <span class="kwa">loop</span>
	    number <span class="sym">:=</span> values &#64; index
	    deviation <span class="sym">:=</span> number <span class="sym">-</span> mean
	    average_deviation <span class="sym">:=</span> average_deviation <span class="sym">+</span> deviation.abs
	    variance <span class="sym">:=</span> variance <span class="sym">+</span> deviation ^ <span class="num">2</span>
	    skew <span class="sym">:=</span> skew <span class="sym">+</span> deviation ^ <span class="num">3</span>
	    kurtosis <span class="sym">:=</span> kurtosis <span class="sym">+</span> deviation ^ <span class="num">4</span>
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">end</span>

	 average_deviation <span class="sym">:=</span> average_deviation <span class="sym">/</span> values.count
	 variance <span class="sym">:=</span> variance <span class="sym">/ (</span>values.count <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span>
	 standard_deviation <span class="sym">:=</span> variance.sqrt <span class="slc">--math.sqrt(variance)</span>
	 <span class="kwa">if</span> variance <span class="sym">&gt;</span> <span class="num">0.0</span> <span class="kwa">then</span>
	    skew <span class="sym">:=</span> skew <span class="sym">/ (</span>values.count <span class="sym">*</span> variance <span class="sym">*</span> standard_deviation<span class="sym">)</span>
	    kurtosis <span class="sym">:=</span> kurtosis <span class="sym">/ (</span>values.count <span class="sym">*</span> variance <span class="sym">*</span> variance<span class="sym">) -</span> <span class="num">3.0</span>
	 <span class="kwa">end</span>
	 sorter.<span class="kwd">sort</span><span class="sym">(</span>values<span class="sym">)</span>
	 mid <span class="sym">:=</span> values.count <span class="sym">//</span> <span class="num">2</span>
	 <span class="kwa">if</span> <span class="sym">(</span>values.count \\ <span class="num">2</span><span class="sym">) =</span> <span class="num">0</span> <span class="kwa">then</span>
	    median <span class="sym">:= (</span>values.<span class="kwd">item</span><span class="sym">(</span>mid<span class="sym">) +</span> values.<span class="kwd">item</span><span class="sym">(</span>mid <span class="sym">-</span> <span class="num">1</span><span class="sym">)) /</span> <span class="num">2</span>
	 <span class="kwa">else</span>
	    median <span class="sym">:=</span> values &#64; mid
	 <span class="kwa">end</span>

	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;n:                  &quot;</span> <span class="sym">+</span> values.count.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;median:             &quot;</span> <span class="sym">+</span> median.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;mean:               &quot;</span> <span class="sym">+</span> mean.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;average_deviation:  &quot;</span> <span class="sym">+</span> average_deviation.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;standard_deviation: &quot;</span> <span class="sym">+</span> standard_deviation.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;variance:           &quot;</span> <span class="sym">+</span> variance.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;skew:               &quot;</span> <span class="sym">+</span> skew.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	 <span class="kwd">print</span> <span class="sym">(</span><span class="str">&quot;kurtosis:           &quot;</span> <span class="sym">+</span> kurtosis.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
      <span class="kwa">end</span> <span class="slc">-- make</span>

<span class="kwa">feature</span> <span class="slc">-- Queries</span>

   sum<span class="sym">:</span> <span class="kwb">INTEGER</span>

   mean<span class="sym">,</span>
   median<span class="sym">,</span>
   average_deviation<span class="sym">,</span>
   standard_deviation<span class="sym">,</span>
   variance<span class="sym">,</span>
   skew<span class="sym">,</span>
   kurtosis<span class="sym">:</span> <span class="kwb">DOUBLE</span>

   values<span class="sym">:</span> ARRAY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">]</span>
	 <span class="slc">-- Values read from stdin</span>

   read_values <span class="kwa">is</span>
      <span class="kwa">local</span>
	 value<span class="sym">:</span> <span class="kwb">INTEGER</span>
	 index<span class="sym">:</span> <span class="kwb">INTEGER</span>
      <span class="kwa">do</span>

	 <span class="kwa">from</span>
	    index <span class="sym">:=</span> values.lower
	    std_input.read_line
	 until std_input.end_of_input <span class="kwa">loop</span>
	    value <span class="sym">:=</span> std_input.last_string.to_integer
	    values.<span class="kwd">force</span><span class="sym">(</span>value<span class="sym">,</span> index<span class="sym">)</span>
	    std_input.read_line
	    sum <span class="sym">:=</span> sum <span class="sym">+</span> value
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">end</span>

      <span class="kwa">end</span> <span class="slc">-- get_stdin</span>

<span class="kwa">end</span>
