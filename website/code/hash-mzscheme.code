<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/mzscheme -r

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">sequence</FONT></B> start stop)
  (<B><FONT COLOR="#A020F0">if</FONT></B> (&gt; start stop)
      '()
      (cons start (sequence (+ start 1) stop))))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B>)
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ([n (string-&gt;number (vector-ref argv 0))]
	 [hash (make-hash-table 'equal)]
	 [accum 0]
	 [seq (sequence 1 n)]
	 [revseq (reverse seq)]
	 [false (<B><FONT COLOR="#A020F0">lambda</FONT></B> () #f)])
    (for-each (<B><FONT COLOR="#A020F0">lambda</FONT></B> (item)
		(hash-table-put! hash (number-&gt;string item 16) item))
	      seq)
    (for-each (<B><FONT COLOR="#A020F0">lambda</FONT></B> (item)
		(when (hash-table-get hash (number-&gt;string item) false)
		      (<B><FONT COLOR="#A020F0">set!</FONT></B> accum (+ accum 1))))
	      revseq)
    (printf <B><FONT COLOR="#BC8F8F">&quot;~s~n&quot;</FONT></B> accum)))

(main)</pre></td></tr></table>
