<span class="line">    1 </span><span class="com">(* -*- mode: sml -*-
</span><span class="line">    2 </span><span class="com"> * $Id: hash2-mlton.code,v 1.3 2004-11-11 07:13:57 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * Modified by Stephen Weeks (back to MLton style).
</span><span class="line">    5 </span><span class="com"> * Modified by Daniel Wang.
</span><span class="line">    6 </span><span class="com"> *)</span>
<span class="line">    7 </span>
<span class="line">    8 </span><span class="kwa">fun</span> hashtest2 n <span class="sym">=
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwa">let
</span><span class="line">   10 </span><span class="kwa">       fun</span> new <span class="sym">() =
</span><span class="line">   11 </span><span class="sym"></span>          HashTable.new <span class="sym">{</span>equals <span class="sym">=</span> <span class="kwa">op</span> <span class="sym">=,</span> hash <span class="sym">=</span> <span class="kwa">String</span>.hash<span class="sym">,</span> size <span class="sym">=</span> <span class="num">10000</span><span class="sym">}
</span><span class="line">   12 </span><span class="sym"></span>       <span class="kwa">val</span> h1 <span class="sym">=</span> new <span class="sym">()
</span><span class="line">   13 </span><span class="sym"></span>       <span class="kwa">val</span> h2 <span class="sym">=</span> new <span class="sym">()
</span><span class="line">   14 </span><span class="sym"></span>       <span class="kwa">fun</span> doinserts1 i <span class="sym">=
</span><span class="line">   15 </span><span class="sym"></span>          <span class="kwa">if</span> i <span class="sym">=</span> <span class="num">10000
</span><span class="line">   16 </span><span class="num"></span>             <span class="kwa">then</span> <span class="sym">()
</span><span class="line">   17 </span><span class="sym"></span>          <span class="kwa">else
</span><span class="line">   18 </span><span class="kwa">             let
</span><span class="line">   19 </span><span class="kwa">                val</span> s <span class="sym">=</span> <span class="str">&quot;foo_&quot;</span> ^ <span class="kwa">Int</span>.toString i
<span class="line">   20 </span>                <span class="kwa">val</span> _ <span class="sym">=</span> HashTable.insert <span class="sym">(</span>h1<span class="sym">,</span> s<span class="sym">,</span> i<span class="sym">)
</span><span class="line">   21 </span><span class="sym"></span>             <span class="kwa">in
</span><span class="line">   22 </span><span class="kwa"></span>                doinserts1 <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   23 </span><span class="sym"></span>             <span class="kwa">end
</span><span class="line">   24 </span><span class="kwa">       fun</span> addinto <span class="sym">(</span>h<span class="sym">,</span> k<span class="sym">,</span> v<span class="sym">) =
</span><span class="line">   25 </span><span class="sym"></span>           <span class="kwa">let
</span><span class="line">   26 </span><span class="kwa">              val</span> r <span class="sym">=</span> HashTable.lookupOrInsert <span class="sym">(</span>h<span class="sym">,</span> k<span class="sym">,</span> <span class="kwa">fn</span> _ <span class="sym">=&gt;</span> ref <span class="num">0</span><span class="sym">)
</span><span class="line">   27 </span><span class="sym"></span>           <span class="kwa">in
</span><span class="line">   28 </span><span class="kwa"></span>              r <span class="sym">:= !</span>r <span class="sym">+</span> v
<span class="line">   29 </span>           <span class="kwa">end
</span><span class="line">   30 </span><span class="kwa">        fun</span> doinserts2 i <span class="sym">=
</span><span class="line">   31 </span><span class="sym"></span>            <span class="kwa">if</span> i <span class="sym">=</span> n
<span class="line">   32 </span>               <span class="kwa">then</span> <span class="sym">()
</span><span class="line">   33 </span><span class="sym"></span>            <span class="kwa">else</span> <span class="sym">(</span>HashTable.foreach <span class="sym">(</span>h1<span class="sym">,</span> <span class="kwa">fn</span> <span class="sym">(</span>s<span class="sym">,</span> i<span class="sym">) =&gt;</span> addinto <span class="sym">(</span>h2<span class="sym">,</span> s<span class="sym">,</span> i<span class="sym">))
</span><span class="line">   34 </span><span class="sym">                  ;</span> doinserts2 <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   35 </span><span class="sym"></span>    <span class="kwa">in
</span><span class="line">   36 </span><span class="kwa"></span>        doinserts1 <span class="num">0</span><span class="sym">;
</span><span class="line">   37 </span><span class="sym"></span>        doinserts2 <span class="num">0</span><span class="sym">;
</span><span class="line">   38 </span><span class="sym"></span>        print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(</span>HashTable.lookup <span class="sym">(</span>h1<span class="sym">,</span> <span class="str">&quot;foo_1&quot;</span><span class="sym">)));</span> print <span class="str">&quot; &quot;</span><span class="sym">;
</span><span class="line">   39 </span><span class="sym"></span>        print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(</span>HashTable.lookup <span class="sym">(</span>h1<span class="sym">,</span> <span class="str">&quot;foo_9999&quot;</span><span class="sym">)));</span> print <span class="str">&quot; &quot;</span><span class="sym">;
</span><span class="line">   40 </span><span class="sym"></span>        print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(! (</span>HashTable.lookup <span class="sym">(</span>h2<span class="sym">,</span> <span class="str">&quot;foo_1&quot;</span><span class="sym">))));</span> print <span class="str">&quot; &quot;</span><span class="sym">;
</span><span class="line">   41 </span><span class="sym"></span>        print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(! (</span>HashTable.lookup <span class="sym">(</span>h2<span class="sym">,</span> <span class="str">&quot;foo_9999&quot;</span><span class="sym">))));
</span><span class="line">   42 </span><span class="sym"></span>        print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>
<span class="line">   43 </span>    <span class="kwa">end
</span><span class="line">   44 </span><span class="kwa">
</span><span class="line">   45 </span><span class="kwa">fun</span> atoi s <span class="sym">=</span> <span class="kwa">case Int</span>.fromString s <span class="kwa">of</span> SOME num <span class="sym">=&gt;</span> num <span class="sym">|</span> NONE <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   46 </span><span class="sym">
</span><span class="line">   47 </span><span class="sym"></span><span class="kwa">fun</span> main<span class="sym">(</span>name<span class="sym">,</span> args<span class="sym">) =
</span><span class="line">   48 </span><span class="sym"></span>    <span class="kwa">let
</span><span class="line">   49 </span><span class="kwa">        val</span> arg <span class="sym">=</span> hd<span class="sym">(</span>args &#64; <span class="sym">[</span><span class="str">&quot;1&quot;</span><span class="sym">])
</span><span class="line">   50 </span><span class="sym"></span>        <span class="kwa">val</span> num <span class="sym">=</span> atoi arg
<span class="line">   51 </span>    <span class="kwa">in
</span><span class="line">   52 </span><span class="kwa"></span>        hashtest2 num<span class="sym">;
</span><span class="line">   53 </span><span class="sym"></span>        OS.Process.success
<span class="line">   54 </span>    <span class="kwa">end</span><span class="sym">;
</span><span class="line">   55 </span><span class="sym">
</span><span class="line">   56 </span><span class="sym">
</span><span class="line">   57 </span><span class="sym"></span><span class="kwa">val</span> _ <span class="sym">=</span> main<span class="sym">(</span> CommandLine.name<span class="sym">(),</span> CommandLine.arguments<span class="sym">() );</span>
