<span class="slc">#!/usr/bin/python
</span><span class="slc"># $Id: wordfreq-python.code,v 1.5 2004-12-05 01:58:32 bfulgham Exp $
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># adapted from Bill Lear's original python word frequency counter
</span><span class="slc">#
</span><span class="slc"># Joel Rosdahl suggested using translate table to speed up
</span><span class="slc"># word splitting.  That change alone sped this program up by
</span><span class="slc"># at least a factor of 3.
</span><span class="slc">#
</span><span class="slc"># with further speedups from Mark Baker
</span>
<span class="kwc">import</span> sys

<span class="kwb">def</span> main<span class="sym">():
</span>    count <span class="sym">= {}
</span>    i_r <span class="sym">=</span> <span class="kwa">map</span><span class="sym">(</span><span class="kwa">chr</span><span class="sym">,</span> <span class="kwa">range</span><span class="sym">(</span><span class="num">256</span><span class="sym">))

</span>    trans <span class="sym">= [</span><span class="str">' '</span><span class="sym">] *</span> <span class="num">256
</span>    o_a<span class="sym">,</span> o_z <span class="sym">=</span> <span class="kwa">ord</span><span class="sym">(</span><span class="str">'a'</span><span class="sym">), (</span><span class="kwa">ord</span><span class="sym">(</span><span class="str">'z'</span><span class="sym">)+</span><span class="num">1</span><span class="sym">)
</span>    trans<span class="sym">[</span><span class="kwa">ord</span><span class="sym">(</span><span class="str">'A'</span><span class="sym">):(</span><span class="kwa">ord</span><span class="sym">(</span><span class="str">'Z'</span><span class="sym">)+</span><span class="num">1</span><span class="sym">)] =</span> i_r<span class="sym">[</span>o_a<span class="sym">:</span>o_z<span class="sym">]
</span>    trans<span class="sym">[</span>o_a<span class="sym">:</span>o_z<span class="sym">] =</span> i_r<span class="sym">[</span>o_a<span class="sym">:</span>o_z<span class="sym">]
</span>    trans <span class="sym">=</span> <span class="str">''</span><span class="sym">.</span>join<span class="sym">(</span>trans<span class="sym">)

</span>    rl <span class="sym">=</span> sys<span class="sym">.</span>stdin<span class="sym">.</span>readlines

    lines <span class="sym">=</span> rl<span class="sym">(</span><span class="num">4095</span><span class="sym">)
</span>    <span class="kwb">while</span> lines<span class="sym">:
</span>        <span class="kwb">for</span> line <span class="kwb">in</span> lines<span class="sym">:
</span>            <span class="kwb">for</span> word <span class="kwb">in</span> line<span class="sym">.</span>translate<span class="sym">(</span>trans<span class="sym">).</span>split<span class="sym">():
</span>                <span class="kwb">try</span><span class="sym">:
</span>                    count<span class="sym">[</span>word<span class="sym">] +=</span> <span class="num">1
</span>                <span class="kwb">except</span> <span class="kwa">KeyError</span><span class="sym">:
</span>                    count<span class="sym">[</span>word<span class="sym">] =</span> <span class="num">1
</span>        lines <span class="sym">=</span> rl<span class="sym">(</span><span class="num">4095</span><span class="sym">)

</span>    l <span class="sym">=</span> zip<span class="sym">(</span>count<span class="sym">.</span>values<span class="sym">(),</span> count<span class="sym">.</span>keys<span class="sym">())
</span>    l<span class="sym">.</span>sort<span class="sym">()
</span>    l<span class="sym">.</span>reverse<span class="sym">()

</span>    <span class="kwb">print</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">.</span>join<span class="sym">([</span><span class="str">&quot;%7s %s&quot;</span> <span class="sym">% (</span>count<span class="sym">,</span> word<span class="sym">)</span> <span class="kwb">for</span> <span class="sym">(</span>count<span class="sym">,</span> word<span class="sym">)</span> <span class="kwb">in</span> l<span class="sym">])

</span>main<span class="sym">()</span>
