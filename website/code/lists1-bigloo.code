<span class="line">    1 </span><span class="slc">;;; -*- mode: scheme -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: lists1-bigloo.code,v 1.3 2004-11-11 07:13:59 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">(</span>module lists
<span class="line">    6 </span>        <span class="sym">(</span>option <span class="sym">(</span><span class="kwa">set</span><span class="sym">! *</span>genericity<span class="sym">*</span> #f<span class="sym">))
</span><span class="line">    7 </span><span class="sym">        (</span>main main<span class="sym">))
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">   10 </span><span class="sym">  (</span>let<span class="sym">* ((</span>N <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   11 </span><span class="sym">         (</span>A <span class="str">'())
</span><span class="line">   12 </span><span class="str">         ;; create empty list B
</span><span class="line">   13 </span><span class="str">         (B '</span><span class="sym">())
</span><span class="line">   14 </span><span class="sym">         (</span>mid <span class="sym">(/</span> N <span class="num">2</span><span class="sym">))
</span><span class="line">   15 </span><span class="sym">         (</span>sum <span class="num">0</span><span class="sym">))
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym"></span>    <span class="slc">;; create list (A) of integers from 1 through N
</span><span class="line">   18 </span><span class="slc"></span>    <span class="sym">(</span>do <span class="sym">((</span>i N <span class="sym">(-</span> i <span class="num">1</span><span class="sym">)))
</span><span class="line">   19 </span><span class="sym">        ((=</span> i <span class="num">0</span><span class="sym">))
</span><span class="line">   20 </span><span class="sym">      (</span><span class="kwa">set</span><span class="sym">!</span> A <span class="sym">(</span><span class="kwa">cons</span> i A<span class="sym">)))
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span>    <span class="slc">;; move each individual item from A to B, in a loop, reversing order
</span><span class="line">   23 </span><span class="slc"></span>    <span class="sym">(</span>do <span class="sym">((</span>empty <span class="sym">(</span><span class="kwa">null</span>? A<span class="sym">) (</span><span class="kwa">null</span>? A<span class="sym">)))
</span><span class="line">   24 </span><span class="sym">        (</span>empty<span class="sym">)
</span><span class="line">   25 </span><span class="sym">      (</span><span class="kwa">set</span><span class="sym">!</span> B <span class="sym">(</span><span class="kwa">cons</span> <span class="sym">(</span><span class="kwa">car</span> A<span class="sym">)</span> B<span class="sym">))
</span><span class="line">   26 </span><span class="sym">      (</span><span class="kwa">set</span><span class="sym">!</span> A <span class="sym">(</span><span class="kwa">cdr</span> A<span class="sym">)))
</span><span class="line">   27 </span><span class="sym">
</span><span class="line">   28 </span><span class="sym"></span>    <span class="slc">;; print first 2 elements of B
</span><span class="line">   29 </span><span class="slc"></span>    <span class="sym">(</span>display <span class="sym">(</span><span class="kwa">car</span> B<span class="sym">)) (</span>display <span class="str">&quot; &quot;</span><span class="sym">) (</span>display <span class="sym">(</span><span class="kwa">cadr</span> B<span class="sym">)) (</span>newline<span class="sym">)
</span><span class="line">   30 </span><span class="sym">
</span><span class="line">   31 </span><span class="sym"></span>    <span class="slc">;; reverse B (can be done in place)
</span><span class="line">   32 </span><span class="slc"></span>    <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> B <span class="sym">(</span><span class="kwa">reverse</span><span class="sym">!</span> B<span class="sym">))
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym"></span>    <span class="slc">;; is 0 a member of B?
</span><span class="line">   35 </span><span class="slc"></span>    <span class="sym">(</span>display <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">member</span> <span class="num">0</span> B<span class="sym">)</span> <span class="str">&quot;true&quot;</span> <span class="str">&quot;false&quot;</span><span class="sym">)) (</span>newline<span class="sym">)
</span><span class="line">   36 </span><span class="sym">
</span><span class="line">   37 </span><span class="sym"></span>    <span class="slc">;; is N a member of B?
</span><span class="line">   38 </span><span class="slc"></span>    <span class="sym">(</span>display <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">member</span> N B<span class="sym">)</span> <span class="str">&quot;true&quot;</span> <span class="str">&quot;false&quot;</span><span class="sym">)) (</span>newline<span class="sym">)
</span><span class="line">   39 </span><span class="sym">
</span><span class="line">   40 </span><span class="sym"></span>    <span class="slc">;; filter values from B to A that are less than N/2, preserving order
</span><span class="line">   41 </span><span class="slc"></span>    <span class="sym">(</span>for<span class="sym">-</span>each <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>x<span class="sym">) (</span><span class="kwa">if</span> <span class="sym">(&lt;</span> x mid<span class="sym">) (</span><span class="kwa">set</span><span class="sym">!</span> A <span class="sym">(</span><span class="kwa">cons</span> x A<span class="sym">))))</span> B<span class="sym">)
</span><span class="line">   42 </span><span class="sym">    (</span><span class="kwa">set</span><span class="sym">!</span> A <span class="sym">(</span><span class="kwa">reverse</span><span class="sym">!</span> A<span class="sym">))
</span><span class="line">   43 </span><span class="sym">
</span><span class="line">   44 </span><span class="sym"></span>    <span class="slc">;; print first ten items of A
</span><span class="line">   45 </span><span class="slc"></span>    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">))
</span><span class="line">   46 </span><span class="sym">         (</span>x A <span class="sym">(</span><span class="kwa">cdr</span> x<span class="sym">)))
</span><span class="line">   47 </span><span class="sym">        ((</span><span class="kwa">or</span> <span class="sym">(=</span> i <span class="num">10</span><span class="sym">) (</span><span class="kwa">null</span>? x<span class="sym">)))
</span><span class="line">   48 </span><span class="sym">      (</span>display <span class="sym">(</span><span class="kwa">car</span> x<span class="sym">))
</span><span class="line">   49 </span><span class="sym">      (</span><span class="kwa">if</span> <span class="sym">(&lt;</span> i <span class="num">9</span><span class="sym">) (</span>display <span class="str">&quot; &quot;</span><span class="sym">) (</span>newline<span class="sym">)))
</span><span class="line">   50 </span><span class="sym">
</span><span class="line">   51 </span><span class="sym"></span>    <span class="slc">;; print sum of items in A that are less than 1000
</span><span class="line">   52 </span><span class="slc"></span>    <span class="sym">(</span>for<span class="sym">-</span>each <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>x<span class="sym">) (</span><span class="kwa">if</span> <span class="sym">(&lt;</span> x <span class="num">1000</span><span class="sym">) (</span><span class="kwa">set</span><span class="sym">!</span> sum <span class="sym">(+</span> x sum<span class="sym">))))</span> A<span class="sym">)
</span><span class="line">   53 </span><span class="sym">    (</span>display sum<span class="sym">) (</span>newline<span class="sym">)
</span><span class="line">   54 </span><span class="sym">
</span><span class="line">   55 </span><span class="sym"></span>    <span class="slc">;; append B to end of A
</span><span class="line">   56 </span><span class="slc"></span>    <span class="sym">(</span><span class="kwa">set</span><span class="sym">-</span><span class="kwa">cdr</span><span class="sym">! (</span><span class="kwa">last</span><span class="sym">-</span>pair A<span class="sym">)</span> B<span class="sym">)
</span><span class="line">   57 </span><span class="sym">
</span><span class="line">   58 </span><span class="sym"></span>    <span class="slc">;; print length and last element of A
</span><span class="line">   59 </span><span class="slc"></span>    <span class="sym">(</span>display <span class="sym">(</span><span class="kwa">length</span> A<span class="sym">)) (</span>display <span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   60 </span><span class="sym">    (</span>display <span class="sym">(</span><span class="kwa">car</span> <span class="sym">(</span><span class="kwa">last</span><span class="sym">-</span>pair A<span class="sym">))) (</span>newline<span class="sym">)))</span>
