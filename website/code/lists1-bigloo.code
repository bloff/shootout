<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: scheme -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: lists1-bigloo.code,v 1.1 2004-11-02 08:52:35 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(module lists
	(option (<B><FONT COLOR="#A020F0">set!</FONT></B> *genericity* #f))
	(main main))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> args)
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((N (<B><FONT COLOR="#A020F0">or</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (= (length args) 2) (string-&gt;number (cadr args))) 1))
	 (A '())
	 <I><FONT COLOR="#B22222">;; create empty list B
</FONT></I>	 (B '())
	 (mid (/ N 2))
	 (sum 0))

    <I><FONT COLOR="#B22222">;; create list (A) of integers from 1 through N
</FONT></I>    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i N (- i 1)))
	((= i 0))
      (<B><FONT COLOR="#A020F0">set!</FONT></B> A (cons i A)))

    <I><FONT COLOR="#B22222">;; move each individual item from A to B, in a loop, reversing order
</FONT></I>    (<B><FONT COLOR="#A020F0">do</FONT></B> ((empty (null? A) (null? A)))
	(empty)
      (<B><FONT COLOR="#A020F0">set!</FONT></B> B (cons (car A) B))
      (<B><FONT COLOR="#A020F0">set!</FONT></B> A (cdr A)))

    <I><FONT COLOR="#B22222">;; print first 2 elements of B
</FONT></I>    (display (car B)) (display <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>) (display (cadr B)) (newline)

    <I><FONT COLOR="#B22222">;; reverse B (can be done in place)
</FONT></I>    (<B><FONT COLOR="#A020F0">set!</FONT></B> B (reverse! B))

    <I><FONT COLOR="#B22222">;; is 0 a member of B?
</FONT></I>    (display (<B><FONT COLOR="#A020F0">if</FONT></B> (member 0 B) <B><FONT COLOR="#BC8F8F">&quot;true&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false&quot;</FONT></B>)) (newline)

    <I><FONT COLOR="#B22222">;; is N a member of B?
</FONT></I>    (display (<B><FONT COLOR="#A020F0">if</FONT></B> (member N B) <B><FONT COLOR="#BC8F8F">&quot;true&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false&quot;</FONT></B>)) (newline)

    <I><FONT COLOR="#B22222">;; filter values from B to A that are less than N/2, preserving order
</FONT></I>    (for-each (<B><FONT COLOR="#A020F0">lambda</FONT></B> (x) (<B><FONT COLOR="#A020F0">if</FONT></B> (&lt; x mid) (<B><FONT COLOR="#A020F0">set!</FONT></B> A (cons x A)))) B)
    (<B><FONT COLOR="#A020F0">set!</FONT></B> A (reverse! A))

    <I><FONT COLOR="#B22222">;; print first ten items of A
</FONT></I>    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))
	 (x A (cdr x)))
	((<B><FONT COLOR="#A020F0">or</FONT></B> (= i 10) (null? x)))
      (display (car x))
      (<B><FONT COLOR="#A020F0">if</FONT></B> (&lt; i 9) (display <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>) (newline)))

    <I><FONT COLOR="#B22222">;; print sum of items in A that are less than 1000
</FONT></I>    (for-each (<B><FONT COLOR="#A020F0">lambda</FONT></B> (x) (<B><FONT COLOR="#A020F0">if</FONT></B> (&lt; x 1000) (<B><FONT COLOR="#A020F0">set!</FONT></B> sum (+ x sum)))) A)
    (display sum) (newline)

    <I><FONT COLOR="#B22222">;; append B to end of A
</FONT></I>    (set-cdr! (last-pair A) B)
    
    <I><FONT COLOR="#B22222">;; print length and last element of A
</FONT></I>    (display (length A)) (display <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>)
    (display (car (last-pair A))) (newline)))</pre></td></tr></table>
