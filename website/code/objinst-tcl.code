<span class="slc">#!/usr/bin/tcl</span>
<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc">#    http://shootout.alioth.debian.org/</span>
<span class="slc">#    contributed by Yahalom emet</span>

<span class="slc">#    tcl 1500000</span>

<span class="kwa">package</span> require Itcl
itcl<span class="sym">::</span>class Toggle <span class="sym">{</span>
    protected <span class="kwa">variable</span> _state<span class="sym">;</span>
    constructor <span class="sym">{</span>startState<span class="sym">} {</span> <span class="kwa">set</span> _state <span class="kwb">$startState</span><span class="sym">; }</span>
    public method value <span class="sym">{} {</span> <span class="kwa">return</span> <span class="kwb">$_state</span><span class="sym">; }</span>
    public method activate <span class="sym">{} {</span> <span class="kwa">set</span> _state <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{!</span><span class="kwb">$_state</span><span class="sym">}]; }</span>
<span class="sym">}</span>


itcl<span class="sym">::</span>class NthToggle  <span class="sym">{</span>
    inherit Toggle
    protected <span class="kwa">variable</span> _countMax<span class="sym">;</span>
    protected <span class="kwa">variable</span> _count<span class="sym">;</span>

    constructor <span class="sym">{</span>startState max<span class="sym">} {</span>Toggle<span class="sym">::</span>constructor <span class="kwb">$startState</span><span class="sym">} {</span>
	<span class="kwa">set</span> _countMax  <span class="kwb">$max</span><span class="sym">;</span>
	<span class="kwa">set</span> _count  <span class="num">0</span><span class="sym">;</span>
    <span class="sym">}</span>

    public method activate <span class="sym">{} {</span>
	<span class="kwa">incr</span> _count<span class="sym">;</span>
	<span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$_count</span> <span class="sym">&gt;=</span> <span class="kwb">$_countMax</span><span class="sym">} {</span>
	    <span class="kwa">set</span> _state  <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{!</span><span class="kwb">$_state</span><span class="sym">}]</span>
	    <span class="kwa">set</span> _count  <span class="num">0</span><span class="sym">;</span>
	<span class="sym">}</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">set</span> n  <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]</span>

Toggle toggle TRUE<span class="sym">;</span>
<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span><span class="sym">&lt;</span><span class="num">5</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span>
    toggle activate<span class="sym">;</span>
    <span class="kwa">if</span> <span class="sym">{[</span>toggle value<span class="sym">]} {</span>
	<span class="kwa">puts</span> <span class="str">&quot;true&quot;</span>
    <span class="sym">}</span> else <span class="sym">{</span>
	<span class="kwa">puts</span> <span class="str">&quot;false&quot;</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>
<span class="kwa">puts</span> <span class="str">&quot;&quot;</span>

<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span>
    Toggle toggle<span class="kwb">$i</span> <span class="num">0</span>
<span class="sym">}</span>

NthToggle ntoggle TRUE <span class="num">3</span><span class="sym">;</span>
<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span><span class="sym">&lt;</span><span class="num">8</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span>
    ntoggle activate<span class="sym">;</span>
    <span class="kwa">if</span> <span class="sym">{[</span>ntoggle value<span class="sym">]} {</span>
	<span class="kwa">puts</span> <span class="str">&quot;true&quot;</span>
    <span class="sym">}</span> else <span class="sym">{</span>
	<span class="kwa">puts</span> <span class="str">&quot;false&quot;</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span>
    NthToggle ntoggle<span class="kwb">$i</span> TRUE <span class="num">3</span>
<span class="sym">}</span>
