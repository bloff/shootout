<span class="line">    1 </span><span class="slc">-- $Id: wordfreq-nhc98.code,v 1.3 2004-11-11 07:14:24 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- from Julian Assange
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">-- simplified by JP Bernardy
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="slc">-- compile with:
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">-- ghc -O2 wordfreq.hs -o wordfreq
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="kwa">import</span> <span class="kwb">Char</span><span class="sym">(</span>toLower<span class="sym">,</span>isAlpha<span class="sym">)
</span><span class="line">   10 </span><span class="sym"></span><span class="kwa">import</span> Data.FiniteMap<span class="sym">(</span>fmToList<span class="sym">,</span>emptyFM<span class="sym">,</span>addToFM_C<span class="sym">)
</span><span class="line">   11 </span><span class="sym"></span><span class="kwa">import</span> Data.List<span class="sym">(</span>sortBy<span class="sym">,</span> foldl<span class="str">')
</span><span class="line">   12 </span><span class="str">
</span><span class="line">   13 </span><span class="str">main = interact $ unlines . map pretty . sortBy myCompare . fmToList . makemap . words . map normalize
</span><span class="line">   14 </span><span class="str">    where pretty (w,n) = pad 7 (show n) ++ &quot; &quot; ++ w
</span><span class="line">   15 </span><span class="str">              where pad n s = replicate (n - length s) '</span> <span class="str">' ++ s
</span><span class="line">   16 </span><span class="str">          myCompare (w0,n0) (w1,n1) = compare (n1,w1) (n0,w0)
</span><span class="line">   17 </span><span class="str">          makemap = foldl'</span> addFM emptyFM
<span class="line">   18 </span>              <span class="kwa">where</span> addFM fm x <span class="sym">=</span> addToFM_C <span class="sym">(+)</span> fm x <span class="sym">(</span><span class="num">1</span><span class="sym">::</span><span class="kwb">Int</span><span class="sym">)
</span><span class="line">   19 </span><span class="sym"></span>          normalize x <span class="sym">=</span> if isAlpha x <span class="kwa">then</span> toLower x <span class="kwa">else</span> <span class="str">' '</span>
