<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: wordfreq-nhc98.code,v 1.1 2004-11-02 08:53:35 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">-- from Julian Assange
</FONT></I><I><FONT COLOR="#B22222">-- simplified by JP Bernardy
</FONT></I>
<I><FONT COLOR="#B22222">-- compile with:
</FONT></I><I><FONT COLOR="#B22222">-- ghc -O2 wordfreq.hs -o wordfreq
</FONT></I>
<B><FONT COLOR="#A020F0">import</FONT></B> Char(toLower,isAlpha)
<B><FONT COLOR="#A020F0">import</FONT></B> Data.FiniteMap(fmToList,emptyFM,addToFM_C)
<B><FONT COLOR="#A020F0">import</FONT></B> Data.List(sortBy, foldl')

main = interact $ unlines . map pretty . sortBy myCompare . fmToList . makemap . words . map normalize
    <B><FONT COLOR="#A020F0">where</FONT></B> pretty (w,n) = pad 7 (show n) ++ <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> ++ w
	      <B><FONT COLOR="#A020F0">where</FONT></B> pad n s = replicate (n - length s) <B><FONT COLOR="#BC8F8F">' '</FONT></B> ++ s
	  myCompare (w0,n0) (w1,n1) = compare (n1,w1) (n0,w0)
	  makemap = foldl' addFM emptyFM
	      <B><FONT COLOR="#A020F0">where</FONT></B> addFM fm x = addToFM_C (+) fm x (1<B><FONT COLOR="#228B22">::Int)
</FONT></B>	  normalize x = <B><FONT COLOR="#A020F0">if</FONT></B> isAlpha x <B><FONT COLOR="#A020F0">then</FONT></B> toLower x <B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#BC8F8F">' '</FONT></B></pre></td></tr></table>
