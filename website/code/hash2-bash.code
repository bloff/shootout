<span class="slc">#!/bin/bash</span>
<span class="slc"># $Id: hash2-bash.code,v 1.7 2006-09-20 05:51:29 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>
<span class="slc"># from Steve Fink</span>

n<span class="sym">=</span>$<span class="sym">{</span><span class="num">1</span><span class="sym">:-</span><span class="num">1</span><span class="sym">}</span>

<span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$n</span> <span class="sym">-</span>gt <span class="num">0</span> <span class="sym">];</span> <span class="kwa">do</span>
    <span class="slc"># Initialize the array</span>
    i<span class="sym">=</span><span class="num">0</span>
    <span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">-</span>lt <span class="num">10000</span> <span class="sym">];</span> <span class="kwa">do</span>
        <span class="kwb">eval</span> H1_foo_<span class="kwb">$i</span><span class="sym">=</span><span class="kwb">$i</span>
        i<span class="sym">=</span>$<span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span> <span class="sym">]</span>
    <span class="kwa">done</span>

    <span class="slc"># Iterate through the hash values, attempting to keep to the spirit of</span>
    <span class="slc"># eg perl's keys %h</span>
    <span class="kwa">for</span> assign <span class="kwa">in</span> $<span class="sym">(</span>  <span class="slc"># Get around the subshell problem</span>
        <span class="kwb">set</span> <span class="sym">|</span> grep <span class="sym">-</span>a <span class="str">'^H1_'</span> <span class="sym">|</span> cut <span class="sym">-</span>d<span class="sym">= -</span>f1 <span class="sym">|</span> cut <span class="sym">-</span>c4<span class="sym">- |</span> <span class="kwa">while</span> <span class="kwb">read</span><span class="sym">;</span> <span class="kwa">do</span>
            <span class="kwb">eval</span> h2<span class="sym">=</span>\$<span class="sym">{</span>H2_<span class="kwc">${REPLY}</span><span class="sym">:-</span><span class="num">0</span><span class="sym">}</span>
            <span class="kwb">eval</span> h1<span class="sym">=</span>\$H1_<span class="kwb">$REPLY</span>
            <span class="kwb">echo</span> H2_<span class="kwb">$REPLY</span><span class="sym">=</span>$<span class="sym">[</span> <span class="kwb">$h2</span> <span class="sym">+</span> <span class="kwb">$h1</span> <span class="sym">]</span>
        <span class="kwa">done</span>
    <span class="sym">);</span> <span class="kwa">do</span>
        <span class="kwb">eval $assign</span>
    <span class="kwa">done</span>

    n<span class="sym">=</span>$<span class="sym">[</span> <span class="kwb">$n</span> <span class="sym">-</span> <span class="num">1</span> <span class="sym">]</span>
<span class="kwa">done</span>

<span class="kwb">echo</span> <span class="str">&quot;$H1_foo_1 $H1_foo_9999 $H2_foo_1 $H2_foo_9999&quot;</span>
