<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: random-gnat.code,v 1.1 2004-11-02 08:52:40 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://dada.perl.it/shootout/
</FONT></I><I><FONT COLOR="#B22222">-- Ada 95 code by C.C.
</FONT></I>
<B><FONT COLOR="#A020F0">with</FONT></B> System, Ada.Command_Line, Ada.Text_IO;

<B><FONT COLOR="#A020F0">procedure</FONT></B> Random <B><FONT COLOR="#A020F0">is</FONT></B>
   <B><FONT COLOR="#A020F0">type</FONT></B> Real <B><FONT COLOR="#A020F0">is</FONT></B> <B><FONT COLOR="#A020F0">digits</FONT></B> Positive'Max (15, System.Max_Digits);
   <B><FONT COLOR="#A020F0">package</FONT></B> Rio <B><FONT COLOR="#A020F0">is</FONT></B> <B><FONT COLOR="#A020F0">new</FONT></B> Ada.Text_IO.Float_IO (Num =&gt; Real);

   <B><FONT COLOR="#A020F0">package</FONT></B> Random_Real <B><FONT COLOR="#A020F0">is</FONT></B>
      <B><FONT COLOR="#A020F0">function</FONT></B> Gen_Random (Supr : Real) <B><FONT COLOR="#A020F0">return</FONT></B> Real;
      <B><FONT COLOR="#A020F0">pragma</FONT></B> Inline (Gen_Random);
   <B><FONT COLOR="#A020F0">end</FONT></B> Random_Real;

   <B><FONT COLOR="#A020F0">package</FONT></B> <B><FONT COLOR="#A020F0">body</FONT></B> Random_Real <B><FONT COLOR="#A020F0">is</FONT></B>
      IM          : <B><FONT COLOR="#A020F0">constant</FONT></B> Positive := 139968;
      IA          : <B><FONT COLOR="#A020F0">constant</FONT></B> Integer := 3877;
      IC          : <B><FONT COLOR="#A020F0">constant</FONT></B> Integer := 29573;
      Last        : Integer := 42;

      <B><FONT COLOR="#A020F0">function</FONT></B> Gen_Random (Supr : Real) <B><FONT COLOR="#A020F0">return</FONT></B> Real <B><FONT COLOR="#A020F0">is</FONT></B>
         <B><FONT COLOR="#A020F0">pragma</FONT></B> Suppress (Overflow_Check);
         <B><FONT COLOR="#A020F0">pragma</FONT></B> Suppress (Range_Check);
      <B><FONT COLOR="#A020F0">begin</FONT></B>
         Last := (Last * IA + IC) <B><FONT COLOR="#A020F0">mod</FONT></B> IM;
         <B><FONT COLOR="#A020F0">return</FONT></B> Supr * Real (Last) / Real (IM);
      <B><FONT COLOR="#A020F0">end</FONT></B> Gen_Random;
         <I><FONT COLOR="#B22222">--  Assume no overflow for &quot;Natural ((IM - 1) * IA + IC)&quot;
</FONT></I>   <B><FONT COLOR="#A020F0">end</FONT></B> Random_Real;

   Result   : Real;
   N        : Natural := 0;
<B><FONT COLOR="#A020F0">begin</FONT></B>
   <B><FONT COLOR="#A020F0">begin</FONT></B>
      N := Natural'Value (Ada.Command_Line.Argument (1));
   <B><FONT COLOR="#A020F0">exception</FONT></B>
      <B><FONT COLOR="#A020F0">when</FONT></B> Constraint_Error =&gt; <B><FONT COLOR="#A020F0">null</FONT></B>;
   <B><FONT COLOR="#A020F0">end</FONT></B>;
   <B><FONT COLOR="#A020F0">for</FONT></B> Iter <B><FONT COLOR="#A020F0">in</FONT></B> 1 .. N <B><FONT COLOR="#A020F0">loop</FONT></B>
      Result := Random_Real.Gen_Random (Supr =&gt; 100.0);
   <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">loop</FONT></B>;
   Rio.Put (Result, Fore =&gt; 0, Aft =&gt; 9, Exp =&gt; 0);
   Ada.Text_IO.New_Line;
<B><FONT COLOR="#A020F0">end</FONT></B> Random;</pre></td></tr></table>
