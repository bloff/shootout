<span class="slc">% The Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">% contributed by Isaac Gouy</span>

<span class="kwa">functor</span>
<span class="kwa">import</span>
   System Application
   S <span class="kwb">at</span> <span class="str">'../../Include/oz/shootout.ozf'</span>

<span class="kwb">define</span>
   <span class="sym">[</span>Arg<span class="sym">] = {</span>Application.getArgs plain<span class="sym">}</span>
   N <span class="sym">= {</span>String.toInt Arg<span class="sym">}</span>
   M <span class="sym">=</span> N<span class="sym">-</span><span class="num">1</span>

   <span class="slc">% return element i,j of infinite matrix A</span>
   <span class="kwb">fun</span> <span class="sym">{</span>A I J<span class="sym">}</span> <span class="num">1.0</span> <span class="sym">/ {</span>IntToFloat <span class="sym">(</span>I<span class="sym">+</span>J<span class="sym">)*(</span>I<span class="sym">+</span>J<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> div <span class="num">2</span> <span class="sym">+</span> I<span class="sym">+</span><span class="num">1</span><span class="sym">}</span> <span class="kwb">end</span>

   <span class="slc">% multiply vector v by matrix A</span>
   <span class="kwb">proc</span> <span class="sym">{</span>MultiplyAv V ?Av<span class="sym">}</span>
      <span class="kwb">for</span> I <span class="kwb">in</span> <span class="num">0</span>..M <span class="kwb">do</span>
         Av.I <span class="sym">:=</span> <span class="num">0.0</span>
         <span class="kwb">for</span> J <span class="kwb">in</span> <span class="num">0</span>..M <span class="kwb">do</span>
            Av.I <span class="sym">:=</span> Av.I <span class="sym">+ {</span>A I J<span class="sym">}*</span>V.J
         <span class="kwb">end</span>
      <span class="kwb">end</span>
   <span class="kwb">end</span>

   <span class="slc">% multiply vector v by matrix A transposed</span>
   <span class="kwb">proc</span> <span class="sym">{</span>MultiplyAtv V ?Atv<span class="sym">}</span>
      <span class="kwb">for</span> I <span class="kwb">in</span> <span class="num">0</span>..M <span class="kwb">do</span>
         Atv.I <span class="sym">:=</span> <span class="num">0.0</span>
         <span class="kwb">for</span> J <span class="kwb">in</span> <span class="num">0</span>..M <span class="kwb">do</span>
            Atv.I <span class="sym">:=</span> Atv.I <span class="sym">+ {</span>A J I<span class="sym">}*</span>V.J
         <span class="kwb">end</span>
      <span class="kwb">end</span>
   <span class="kwb">end</span>

   <span class="slc">% multiply vector v by matrix A and then by matrix A transposed</span>
   <span class="kwb">proc</span> <span class="sym">{</span>MultiplyAtAv V ?AtAv<span class="sym">}</span>
      U <span class="sym">= {</span>NewArray <span class="num">0</span> M <span class="num">0.0</span><span class="sym">}</span>
   <span class="kwb">in</span>
      <span class="sym">{</span>MultiplyAv V U<span class="sym">}</span>
      <span class="sym">{</span>MultiplyAtv U AtAv<span class="sym">}</span>
   <span class="kwb">end</span>

   U <span class="sym">= {</span>NewArray <span class="num">0</span> M <span class="num">1.0</span><span class="sym">}</span>
   V <span class="sym">= {</span>NewArray <span class="num">0</span> M <span class="num">0.0</span><span class="sym">}</span>

   Vbv <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>
   Vv <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>

<span class="kwb">in</span>
   <span class="slc">% 20 steps of the power method</span>
   <span class="kwb">for</span> I <span class="kwb">in</span> <span class="num">1</span>.<span class="num">.10</span> <span class="kwb">do</span>
      <span class="sym">{</span>MultiplyAtAv U V<span class="sym">}</span>
      <span class="sym">{</span>MultiplyAtAv V U<span class="sym">}</span>
   <span class="kwb">end</span>

   <span class="kwb">for</span> I <span class="kwb">in</span> <span class="num">0</span>..M <span class="kwb">do</span>
      Vbv <span class="sym">:=</span> &#64;Vbv <span class="sym">+</span> U.I<span class="sym">*</span>V.I
      Vv <span class="sym">:=</span> &#64;Vv <span class="sym">+</span> V.I<span class="sym">*</span>V.I
   <span class="kwb">end</span>

   <span class="sym">{</span>System.showInfo <span class="sym">{</span>S.floatToString <span class="sym">{</span>Sqrt &#64;Vbv<span class="sym">/</span>&#64;Vv<span class="sym">}</span> <span class="num">9</span><span class="sym">}}</span>
   <span class="sym">{</span>Application.exit <span class="num">0</span><span class="sym">}</span>
<span class="kwb">end</span>
