BUILD COMMANDS FOR: knucleotide.cmucl

Sun Dec  2 22:56:21 PST 2007

CMUCL built with: /usr/bin/lisp -noinit -batch -eval '(load "knucleotide.cmucl_compile")'
### START knucleotide.cmucl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(asdf:operate 'asdf:load-op 'cl-ppcre)
(compile-file "knucleotide.cmucl" :block-compile t  :entry-points '(main))
(quit)
### END knucleotide.cmucl_compile

; Loading #P"/opt/shootout/shootout/bench/knucleotide/tmp/knucleotide.cmucl_compile".
; loading system definition from /usr/share/common-lisp/systems/cl-ppcre.asd
; into #<The ASDF0 package>
;; Loading #P"/usr/share/common-lisp/source/cl-ppcre/cl-ppcre.asd".
; registering #<SYSTEM :CL-PPCRE {5812ABB5}> as CL-PPCRE
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/packages.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/specials.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/util.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/errors.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/lexer.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/parser.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/regex-class.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/convert.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/optimize.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/closures.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/repetition-closures.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/scanner.x86f".
;; Loading #P"/var/cache/common-lisp-controller/1000/cmucl/cl-ppcre/api.x86f".
; [GC threshold exceeded with 12,008,792 bytes in use.  Commencing GC.]
; [GC completed with 1,400,864 bytes retained and 10,607,928 bytes freed.]
; [GC will next occur when at least 13,400,864 bytes are in use.]

; Python version 1.1, VM version Intel x86 on 02 DEC 07 10:56:26 pm.
; Compiling: /opt/shootout/shootout/bench/knucleotide/tmp/knucleotide.cmucl 02 DEC 07 10:56:21 pm

; Converted READ-DATA.
; Converted ACCUMULATE-FREQUENCIES.
; Converted CALCULATE-FREQUENCIES.
; Converted WRITE-FREQUENCIES.
; Converted MAIN.
; Compiling DEFUN ACCUMULATE-FREQUENCIES: 

; 
; 
; File: /opt/shootout/shootout/bench/knucleotide/tmp/knucleotide.cmucl

; In: DEFUN READ-DATA

;   (STRING= ">THREE" LINE :START2 0 ...)
; ==>
;   (LISP::STRING=* C::STRING1 C::STRING2 C::START1 C::END1 ...)
; Note: Unable to optimize due to type uncertainty:
;     The second argument is a (OR BASE-CHAR
;                                  BASE-STRING
;                                  SYMBOL), not a SIMPLE-BASE-STRING.
; 

; In: DEFUN WRITE-FREQUENCIES

;   (STRING< (CAR V1) (CAR V2))
; ==>
;   (LISP::STRING<* C::STRING1 C::STRING2 C::START1 C::END1 ...)
; Note: Unable to optimize due to type uncertainty:
;     The first argument is a (OR BASE-CHAR
;                                 BASE-STRING
;                                 SYMBOL), not a SIMPLE-BASE-STRING.
;     The second argument is a (OR BASE-CHAR
;                                  BASE-STRING
;                                  SYMBOL), not a SIMPLE-BASE-STRING.
; 
;   (* (/ # SUM) 100.0)
; --> * FLOAT 
; ==>
;   (KERNEL:%SINGLE-FLOAT C::N)
; Note: Forced to do full call.
;     Unable to do inline float coercion (cost 5) because:
;     The first argument is a RATIONAL, not a (SIGNED-BYTE 32).
;     Unable to do inline float coercion (cost 6) because:
;     The first argument is a RATIONAL, not a (UNSIGNED-BYTE 32).
; 

; In: DEFUN CALCULATE-FREQUENCIES

;   (DOTIMES (OFFSET FRAGMENT-LENGTH)
;     (ACCUMULATE-FREQUENCIES HASHMAP SEQUENCE OFFSET FRAGMENT-LENGTH))
; --> DO BLOCK LET TAGBODY UNLESS COND IF NOT IF >= IF 
; ==>
;   (< #:CTR-20 #:G21)
; Note: Forced to do GENERIC-< (cost 10).
;     Unable to do inline fixnum comparison (cost 4) because:
;     The first argument is a UNSIGNED-BYTE, not a FIXNUM.
; 
; --> DO BLOCK LET TAGBODY PSETQ PSETF LET* MULTIPLE-VALUE-BIND LET 1+ 
; ==>
;   (+ #:CTR-20 1)
; Note: Forced to do GENERIC-+ (cost 10).
;     Unable to do inline fixnum arithmetic (cost 1) because:
;     The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;     The result is a (INTEGER 1), not a FIXNUM.
;     Unable to do inline fixnum arithmetic (cost 2) because:
;     The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;     The result is a (INTEGER 1), not a FIXNUM.
;     etc.
; 

; In: DEFUN WRITE-FREQUENCIES

;   (FORMAT T "~A ~,3F~%" (CAR ENTRY) (* # 100.0))
; --> FORMAT FORMATTER FUNCTION BLOCK LET 
; ==>
;   (FORMAT::FORMAT-FIXED STREAM #:FORMAT-ARG-89 #:G3 #:G4 ...)
; Note: Doing float to pointer coercion (cost 13).
; 
; Byte Compiling Top-Level Form: 

; Compilation unit finished.
;   6 notes


; knucleotide.x86f written.
; Compilation finished in 0:00:00.
### START knucleotide.cmucl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(setq *gc-verbose* nil)
(load "knucleotide.x86f" :verbose nil :print nil)
(main) (quit)
### END knucleotide.cmucl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/lisp -noinit -batch -eval '(load "knucleotide.cmucl_run" :verbose nil :print nil)' %A


PROGRAM OUTPUT
==============
A 30.296
T 30.155
C 19.796
G 19.752

AA 9.177
TA 9.134
AT 9.133
TT 9.094
CA 6.001
AC 6.000
AG 5.986
GA 5.984
TC 5.971
CT 5.970
GT 5.957
TG 5.956
CC 3.916
GC 3.909
CG 3.908
GG 3.902

58888	GGT
17865	GGTA
1893	GGTATT
36	GGTATTTTAATT
36	GGTATTTTAATTTATAGT
