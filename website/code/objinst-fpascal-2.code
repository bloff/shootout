<span class="com">{ The Great Computer Language Shootout
  http://shootout.alioth.debian.org

  contributed by Ian Osgood,
  changed by Ales Katona with help from Florian Klaempfl
}</span>

<span class="com">{$mode objfpc}</span>
<span class="kwa">program</span> objects<span class="sym">;

</span><span class="kwa">uses</span> SysUtils<span class="sym">;

</span><span class="kwa">type
</span>  TToggle <span class="sym">=</span> <span class="kwa">object
</span>    value <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;
</span>    <span class="kwa">constructor</span> Create<span class="sym">(</span><span class="kwa">const</span> b <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">);
</span>    <span class="kwa">function</span> Activate <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;</span> <span class="kwa">inline</span><span class="sym">;
</span>  <span class="kwa">end</span><span class="sym">;

</span>  TNthToggle <span class="sym">=</span> <span class="kwa">object</span><span class="sym">(</span>TToggle<span class="sym">)
</span>    counter<span class="sym">,</span> maxCounter <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;
</span>    <span class="kwa">constructor</span> Create<span class="sym">(</span><span class="kwa">const</span> b <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;</span> <span class="kwa">const</span> max <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">);
</span>    <span class="kwa">function</span> Activate <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;</span> <span class="kwa">inline</span><span class="sym">;
</span>  <span class="kwa">end</span><span class="sym">;


</span><span class="kwa">constructor</span> TToggle.Create<span class="sym">(</span><span class="kwa">const</span> b <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">);
</span><span class="kwa">begin
</span>  value <span class="sym">:=</span> b<span class="sym">;
</span><span class="kwa">end</span><span class="sym">;

</span><span class="kwa">function</span> TToggle.Activate <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;</span> <span class="kwa">inline</span><span class="sym">;
</span><span class="kwa">begin
</span>  value <span class="sym">:=</span> <span class="kwa">not</span> value<span class="sym">;
</span>  Activate <span class="sym">:=</span> value<span class="sym">;
</span><span class="kwa">end</span><span class="sym">;



</span><span class="kwa">constructor</span> TNthToggle.Create<span class="sym">(</span><span class="kwa">const</span> b <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;</span> <span class="kwa">const</span> max <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">);
</span><span class="kwa">begin
  inherited</span> Create<span class="sym">(</span>b<span class="sym">);
</span>  maxCounter <span class="sym">:=</span> max<span class="sym">;
</span>  counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="kwa">end</span><span class="sym">;

</span><span class="kwa">function</span> TNthToggle.Activate <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;</span> <span class="kwa">inline</span><span class="sym">;
</span><span class="kwa">begin
</span>  Inc<span class="sym">(</span>counter<span class="sym">);
</span>  <span class="kwa">if</span> counter <span class="sym">&gt;=</span> maxCounter <span class="kwa">then
  begin
</span>    value <span class="sym">:=</span> <span class="kwa">not</span> value<span class="sym">;
</span>    counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span>  <span class="kwa">end</span><span class="sym">;
</span>  Activate <span class="sym">:=</span> value<span class="sym">;
</span><span class="kwa">end</span><span class="sym">;


</span><span class="kwa">const</span> boolStr <span class="sym">:</span> <span class="kwa">array</span><span class="sym">[</span><span class="kwb">boolean</span><span class="sym">]</span> <span class="kwa">of</span> shortstring <span class="sym">= (</span> <span class="str">'false'</span><span class="sym">,</span> <span class="str">'true'</span> <span class="sym">);

</span><span class="kwa">var</span> n<span class="sym">,</span>i <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;
</span>    t1 <span class="sym">:</span> TToggle<span class="sym">;
</span>    nt1 <span class="sym">:</span> TNthToggle<span class="sym">;
</span><span class="kwa">begin
</span>  n <span class="sym">:=</span> StrToInt<span class="sym">(</span>paramstr<span class="sym">(</span><span class="num">1</span><span class="sym">));
</span>  t1.Create<span class="sym">(</span><span class="kwb">True</span><span class="sym">);
</span>  <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> <span class="num">5</span> <span class="kwa">do</span> writeln<span class="sym">(</span>boolStr<span class="sym">[</span>t1.Activate<span class="sym">]);
</span>  <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do</span> t1.Create<span class="sym">(</span><span class="kwb">true</span><span class="sym">);
</span>  writeln<span class="sym">;
</span>  nt1.Create<span class="sym">(</span><span class="kwb">true</span><span class="sym">,</span><span class="num">3</span><span class="sym">);
</span>  <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> <span class="num">8</span> <span class="kwa">do</span> writeln<span class="sym">(</span>boolStr<span class="sym">[</span>nt1.Activate<span class="sym">]);
</span>  <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do</span> nt1.Create<span class="sym">(</span><span class="kwb">true</span><span class="sym">,</span><span class="num">3</span><span class="sym">);
</span><span class="kwa">end</span>.
