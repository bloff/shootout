<span class="slc">-- -*- mode: eiffel -*-
</span><span class="slc">-- $Id: ackermann-se.code,v 1.5 2005-03-29 08:48:29 bfulgham Exp $
</span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span>
<span class="kwa">class</span> ACKERMANN

creation make

<span class="kwa">feature

</span>   make <span class="kwa">is

      local
</span>	 num<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span>      <span class="kwa">do
	 if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then
</span>	    num <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
	 <span class="kwa">else
</span>	    num <span class="sym">:=</span> <span class="num">1
</span>	 <span class="kwa">end
</span>         std_output.put_string<span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span><span class="sym">)
</span>         std_output.put_integer<span class="sym">(</span>num<span class="sym">)
</span>         std_output.put_string<span class="sym">(</span><span class="str">&quot;): &quot;</span><span class="sym">)
</span>         std_output.put_integer<span class="sym">(</span>ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> num<span class="sym">))
</span>         std_output.put_new_line
      <span class="kwa">end</span><span class="sym">;

</span><span class="kwa">feature</span> <span class="sym">{</span>NONE<span class="sym">}

</span>   ack<span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">:</span><span class="kwb">INTEGER</span><span class="sym">):</span><span class="kwb">INTEGER</span> <span class="kwa">is
      do
	 if</span> m <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
	    Result</span> <span class="sym">:=</span> n <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">elseif</span> n <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
	    Result</span> <span class="sym">:=</span> ack<span class="sym">(</span>m <span class="num">- 1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)
</span>	 <span class="kwa">else
	    Result</span> <span class="sym">:=</span> ack<span class="sym">(</span>m <span class="num">- 1</span><span class="sym">,</span> ack<span class="sym">(</span>m<span class="sym">, (</span>n <span class="num">- 1</span><span class="sym">)))
</span>	 <span class="kwa">end
      end</span><span class="sym">;
</span><span class="kwa">end</span>
