<span class="slc">;;; The Computer Language Shootout</span>
<span class="slc">;;; http://shootout.alioth.debian.org/</span>
<span class="slc">;;;</span>
<span class="slc">;;; Contributed by: Shyamal Prasad</span>


<span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">(&amp;</span>optional
	     <span class="sym">(</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer
		 <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> <span class="sym">(</span><span class="kwa">last</span> #<span class="sym">+</span>sbcl sb<span class="sym">-</span>ext<span class="sym">:*</span>posix<span class="sym">-</span>argv<span class="sym">*</span>
				#<span class="sym">+</span>cmu  extensions<span class="sym">:*</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>strings<span class="sym">*))))))</span>
  <span class="sym">(</span>declare <span class="sym">(</span>fixnum n<span class="sym">)</span>
	   <span class="sym">(</span>optimize <span class="sym">(</span>speed <span class="num">3</span><span class="sym">) (</span>compilation<span class="sym">-</span>speed <span class="num">0</span><span class="sym">)</span>
		     <span class="sym">(</span>safety <span class="num">0</span><span class="sym">) (</span>debug <span class="num">0</span><span class="sym">)))</span>

  <span class="sym">(</span>format t <span class="str">&quot;~,9f~a(2/3)^k~%&quot;</span>
	  <span class="sym">(</span>loop for k fixnum from <span class="num">0</span> to n
		sum <span class="sym">(</span><span class="kwa">expt</span> <span class="sym">(/</span> <span class="num">2.0</span>d0 <span class="num">3.0</span>d0<span class="sym">) (</span>coerce k <span class="str">'double-float))</span>
<span class="str">		double-float) #</span><span class="esc">\T</span><span class="str">ab)</span>
<span class="str"></span>
<span class="str">  (format t &quot;~,9f~ak^-0.5~%&quot;</span>
<span class="str">	  (loop for k fixnum from 1 to n</span>
<span class="str">		sum (/ 1.0d0</span>
<span class="str">		       (the double-float (sqrt (coerce k '</span>double<span class="sym">-</span><span class="kwa">float</span><span class="sym">))))</span>
		double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)</span> #\Tab<span class="sym">)</span>

  <span class="sym">(</span>format t <span class="str">&quot;~,9f~a1/k(k+1)~%&quot;</span>
	  <span class="sym">(</span>loop for k fixnum from <span class="num">1</span> to n
		sum <span class="sym">(/</span> <span class="num">1.0</span>d0
		       <span class="sym">(* (</span>coerce k <span class="str">'double-float)</span>
<span class="str">			  (+ (coerce k '</span>double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)</span> <span class="num">1.0</span>d0<span class="sym">)))</span>
		double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)</span> #\Tab<span class="sym">)</span>

  <span class="sym">(</span>format t <span class="str">&quot;~,9f~aFlint Hills~%&quot;</span>
	  <span class="sym">(</span>loop for k fixnum from <span class="num">1</span> to n
		sum <span class="sym">(</span>let <span class="sym">((</span>sk <span class="sym">(</span><span class="kwa">sin</span> <span class="sym">(</span>coerce k <span class="str">'double-float)))</span>
<span class="str">			  (kd (coerce k '</span>double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)))</span>
		      <span class="sym">(/</span> <span class="num">1.0</span>d0 <span class="sym">(*</span> kd kd kd sk sk<span class="sym">)))</span>
		double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)</span> #\Tab<span class="sym">)</span>

  <span class="sym">(</span>format t <span class="str">&quot;~,9f~aCookson Hills~%&quot;</span>
	  <span class="sym">(</span>loop for k fixnum from <span class="num">1</span> to n
		sum <span class="sym">(</span>let <span class="sym">((</span>ck <span class="sym">(</span><span class="kwa">cos</span> <span class="sym">(</span>coerce k <span class="str">'double-float)))</span>
<span class="str">			  (kd (coerce k '</span>double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)))</span>
		      <span class="sym">(/</span> <span class="num">1.0</span>d0 <span class="sym">(*</span> kd kd kd ck ck<span class="sym">)))</span>
		double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)</span> #\Tab<span class="sym">)</span>

  <span class="sym">(</span>format t <span class="str">&quot;~,9f~aHarmonic~%&quot;</span>
	  <span class="sym">(</span>loop for k fixnum from <span class="num">1</span> to n
	        sum <span class="sym">(/</span> <span class="num">1.0</span>d0 <span class="sym">(</span>coerce k <span class="str">'double-float))</span>
<span class="str">		double-float) #</span><span class="esc">\T</span><span class="str">ab)</span>
<span class="str"></span>
<span class="str"></span>
<span class="str">  (format t &quot;~,9f~aRiemann Zeta~%&quot;</span>
<span class="str">	  (loop for k fixnum from 1 to n</span>
<span class="str">		sum (let ((kd (coerce k '</span>double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)))</span>
		      <span class="sym">(/</span> <span class="num">1.0</span>d0 <span class="sym">(*</span> kd kd<span class="sym">)))</span>
		double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)</span> #\Tab<span class="sym">)</span>

  <span class="sym">(</span>format t <span class="str">&quot;~,9f~aAlternating Harmonic~%&quot;</span>
	  <span class="sym">(</span>loop with a double<span class="sym">-</span><span class="kwa">float</span> <span class="sym">= -</span><span class="num">1.0</span>d0
		for k fixnum from <span class="num">1</span> to n
		sum <span class="sym">(</span>let <span class="sym">((</span>kd <span class="sym">(</span>coerce k <span class="str">'double-float)))</span>
<span class="str">		      (setf a (* -1.0d0 a))</span>
<span class="str">		      (/ a kd))</span>
<span class="str">		double-float) #</span><span class="esc">\T</span><span class="str">ab)</span>
<span class="str"></span>
<span class="str">  (format t &quot;~,9f~aGregory~%&quot;</span>
<span class="str">	  (loop with a double-float = -1.0d0</span>
<span class="str">		for k fixnum from 1 to n</span>
<span class="str">		sum (let ((kd (coerce k '</span>double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)))</span>
		      <span class="sym">(</span>setf a <span class="sym">(* -</span><span class="num">1.0</span>d0 a<span class="sym">))</span>
		      <span class="sym">(/</span> a <span class="sym">(- (*</span> <span class="num">2.0</span>d0 kd<span class="sym">)</span> <span class="num">1.0</span>d0<span class="sym">)))</span>
		double<span class="sym">-</span><span class="kwa">float</span><span class="sym">)</span> #\Tab<span class="sym">))</span>
