<span class="line">    1 </span><span class="slc">-- -*- mode: eiffel -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: hash2-se.code,v 1.4 2004-11-13 07:41:39 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">class</span> HASH2
<span class="line">    6 </span>
<span class="line">    7 </span>creation make
<span class="line">    8 </span>
<span class="line">    9 </span><span class="kwa">feature</span> <span class="slc">-- Initialization
</span><span class="line">   10 </span><span class="slc"></span>
<span class="line">   11 </span>   make <span class="kwa">is
</span><span class="line">   12 </span><span class="kwa">      local
</span><span class="line">   13 </span><span class="kwa"></span>         n<span class="sym">,</span> i<span class="sym">,</span> prev <span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   14 </span><span class="kwb"></span>         hash1 <span class="sym">:</span> DICTIONARY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">,</span> STRING<span class="sym">]
</span><span class="line">   15 </span><span class="sym"></span>         hash2 <span class="sym">:</span> DICTIONARY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">,</span> STRING<span class="sym">]
</span><span class="line">   16 </span><span class="sym"></span>         it<span class="sym">:</span> ITERATOR<span class="sym">[</span>STRING<span class="sym">]
</span><span class="line">   17 </span><span class="sym"></span>      <span class="kwa">do
</span><span class="line">   18 </span><span class="kwa"></span>         n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
<span class="line">   19 </span>
<span class="line">   20 </span>         <span class="sym">!!</span>hash1.with_capacity<span class="sym">(</span><span class="num">10000</span><span class="sym">);
</span><span class="line">   21 </span><span class="sym">         !!</span>hash2.with_capacity<span class="sym">(</span><span class="num">10000</span><span class="sym">);
</span><span class="line">   22 </span><span class="sym">
</span><span class="line">   23 </span><span class="sym"></span>         <span class="kwa">from</span>  i <span class="sym">:=</span> <span class="num">0
</span><span class="line">   24 </span><span class="num"></span>         until i <span class="sym">=</span> <span class="num">10000
</span><span class="line">   25 </span><span class="num"></span>         <span class="kwa">loop
</span><span class="line">   26 </span><span class="kwa"></span>            hash1.put<span class="sym">(</span>i<span class="sym">,</span> <span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> i.to_string<span class="sym">)
</span><span class="line">   27 </span><span class="sym"></span>            i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span><span class="line">   28 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   29 </span><span class="kwa">
</span><span class="line">   30 </span><span class="kwa">         from</span>  i <span class="sym">:=</span> <span class="num">0
</span><span class="line">   31 </span><span class="num"></span>         until i <span class="sym">=</span> n
<span class="line">   32 </span>         <span class="kwa">loop
</span><span class="line">   33 </span><span class="kwa"></span>            it <span class="sym">:=</span> hash1.get_new_iterator_on_keys
<span class="line">   34 </span>            <span class="kwa">from</span>  it.start
<span class="line">   35 </span>            until it.is_off
<span class="line">   36 </span>            <span class="kwa">loop
</span><span class="line">   37 </span><span class="kwa">               if</span> hash2.has<span class="sym">(</span>it.item<span class="sym">)</span> <span class="kwa">then
</span><span class="line">   38 </span><span class="kwa"></span>                  prev <span class="sym">:=</span> hash2.at<span class="sym">(</span>it.item<span class="sym">)
</span><span class="line">   39 </span><span class="sym"></span>               <span class="kwa">else
</span><span class="line">   40 </span><span class="kwa"></span>                  prev <span class="sym">:=</span> <span class="num">0
</span><span class="line">   41 </span><span class="num"></span>               <span class="kwa">end
</span><span class="line">   42 </span><span class="kwa"></span>               hash2.put<span class="sym">(</span>prev <span class="sym">+</span> hash1.at<span class="sym">(</span>it.item<span class="sym">),</span> it.item<span class="sym">)
</span><span class="line">   43 </span><span class="sym"></span>               it.next<span class="sym">;
</span><span class="line">   44 </span><span class="sym"></span>            <span class="kwa">end
</span><span class="line">   45 </span><span class="kwa"></span>            i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span><span class="line">   46 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   47 </span><span class="kwa">
</span><span class="line">   48 </span><span class="kwa"></span>         std_output.put_integer<span class="sym">(</span>hash1.at<span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">))
</span><span class="line">   49 </span><span class="sym"></span>         std_output.put_string<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   50 </span><span class="sym"></span>         std_output.put_integer<span class="sym">(</span>hash1.at<span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">))
</span><span class="line">   51 </span><span class="sym"></span>         std_output.put_string<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   52 </span><span class="sym"></span>         std_output.put_integer<span class="sym">(</span>hash2.at<span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">))
</span><span class="line">   53 </span><span class="sym"></span>         std_output.put_string<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   54 </span><span class="sym"></span>         std_output.put_integer<span class="sym">(</span>hash2.at<span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">))
</span><span class="line">   55 </span><span class="sym"></span>         std_output.put_character<span class="sym">(</span><span class="str">'%N'</span><span class="sym">)
</span><span class="line">   56 </span><span class="sym"></span>      <span class="kwa">end
</span><span class="line">   57 </span><span class="kwa">
</span><span class="line">   58 </span><span class="kwa">end</span> <span class="slc">-- class HASH2
</span><span class="line">   59 </span><span class="slc"></span>
