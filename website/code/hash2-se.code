<span class="slc">-- -*- mode: eiffel -*-
</span><span class="slc">-- $Id: hash2-se.code,v 1.6 2005-05-09 01:22:43 bfulgham Exp $
</span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span>
<span class="kwa">class</span> HASH2

creation make

<span class="kwa">feature</span> <span class="slc">-- Initialization
</span>
   make <span class="kwa">is
      local
</span>	 n<span class="sym">,</span> i<span class="sym">,</span> prev <span class="sym">:</span> <span class="kwb">INTEGER
</span>	 hash1 <span class="sym">:</span> DICTIONARY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">,</span> STRING<span class="sym">]
</span>	 hash2 <span class="sym">:</span> DICTIONARY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">,</span> STRING<span class="sym">]
</span>	 it<span class="sym">:</span> ITERATOR<span class="sym">[</span>STRING<span class="sym">]
</span>      <span class="kwa">do
</span>	 n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer

	 <span class="sym">!!</span>hash1.with_capacity<span class="sym">(</span><span class="num">10000</span><span class="sym">);
	 !!</span>hash2.with_capacity<span class="sym">(</span><span class="num">10000</span><span class="sym">);

</span>	 <span class="kwa">from</span>  i <span class="sym">:=</span> <span class="num">0
</span>	 until i <span class="sym">=</span> <span class="num">10000
</span>	 <span class="kwa">loop
</span>	    hash1.put<span class="sym">(</span>i<span class="sym">,</span> <span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> i.to_string<span class="sym">)
</span>	    i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end

	 from</span>  i <span class="sym">:=</span> <span class="num">0
</span>	 until i <span class="sym">=</span> n
	 <span class="kwa">loop
</span>	    it <span class="sym">:=</span> hash1.get_new_iterator_on_keys
	    <span class="kwa">from</span>  it.start
	    until it.is_off
	    <span class="kwa">loop
	       if</span> hash2.has<span class="sym">(</span>it.item<span class="sym">)</span> <span class="kwa">then
</span>		  prev <span class="sym">:=</span> hash2.at<span class="sym">(</span>it.item<span class="sym">)
</span>	       <span class="kwa">else
</span>		  prev <span class="sym">:=</span> <span class="num">0
</span>	       <span class="kwa">end
</span>	       hash2.put<span class="sym">(</span>prev <span class="sym">+</span> hash1.at<span class="sym">(</span>it.item<span class="sym">),</span> it.item<span class="sym">)
</span>	       it.next<span class="sym">;
</span>	    <span class="kwa">end
</span>	    i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end

</span>         std_output.put_integer<span class="sym">(</span>hash1.at<span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">))
</span>         std_output.put_string<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">)
</span>         std_output.put_integer<span class="sym">(</span>hash1.at<span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">))
</span>         std_output.put_string<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">)
</span>         std_output.put_integer<span class="sym">(</span>hash2.at<span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">))
</span>         std_output.put_string<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">)
</span>         std_output.put_integer<span class="sym">(</span>hash2.at<span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">))
</span>         std_output.put_character<span class="sym">(</span><span class="str">'%N'</span><span class="sym">)
</span>      <span class="kwa">end

end</span> <span class="slc">-- class HASH2
</span>
