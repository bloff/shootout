<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/bin/bash
# -*- mode: lisp -*-
PROG=${0%.jl}
[ \! -f $PROG.jlc -o $0 -nt $PROG.jlc ] &amp;&amp;
    rep --batch --no-rc -l compiler -f compile-batch $0
exec rep <B><FONT COLOR="#BC8F8F">&quot;$PROG.jlc&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$@&quot;</FONT></B>
!#

<I><FONT COLOR="#B22222">;;; $Id: sieve-rep.code,v 1.1 2004-11-02 08:53:26 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(define-structure main ()
  (open rep rep.system)

  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((arg (get-command-line-option <B><FONT COLOR="#BC8F8F">&quot;--num&quot;</FONT></B> t))
	 (num (<B><FONT COLOR="#A020F0">if</FONT></B> arg (read-from-string arg) 1))
	 (count 0))
    (while (&gt; num 0)
      (setq num (1- num))
      (<B><FONT COLOR="#A020F0">let</FONT></B> ((flags (make-vector 8192 t)))
	(setq count 0)
	(<B><FONT COLOR="#A020F0">do</FONT></B> ((i 2 (1+ i)))
	    ((&gt;= i 8192))
	  (<B><FONT COLOR="#A020F0">if</FONT></B> (aref flags i)
	      (progn
	       (<B><FONT COLOR="#A020F0">do</FONT></B> ((k (+ i i) (+ k i)))
		   ((&gt;= k 8192))
		 (aset flags k nil))
	       (setq count (1+ count)))))))
    (format standard-output <B><FONT COLOR="#BC8F8F">&quot;Count: %d\n&quot;</FONT></B> count)))</pre></td></tr></table>
