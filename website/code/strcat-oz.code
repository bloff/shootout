<span class="slc">%%% $Id: strcat-oz.code,v 1.6 2006-06-26 04:25:47 bfulgham Exp $</span>
<span class="slc">%%% http://dada.perl.it/shootout/</span>
<span class="slc">%%%</span>
<span class="slc">%%% contributed by Isaac Gouy</span>

<span class="slc">%%  Usage: start from command line with</span>
<span class="slc">%%     ozc -x strcat.oz -o strcat.oz.exe</span>
<span class="slc">%%     strcat.oz.exe 40000</span>

<span class="kwa">functor</span>
<span class="kwa">import</span> System Application

<span class="kwb">define</span>

<span class="kwb">fun</span> <span class="sym">{</span>RepeatAppend N S<span class="sym">}</span>
   <span class="kwb">if</span> N <span class="sym">==</span> <span class="num">0</span> <span class="kwb">then</span> S <span class="kwb">else</span>
      <span class="sym">{</span>RepeatAppend N<span class="sym">-</span><span class="num">1</span> <span class="sym">{</span>Append <span class="str">&quot;hello</span><span class="esc">\n</span><span class="str">&quot;</span> S<span class="sym">}}</span> <span class="kwb">end</span>
<span class="kwb">end</span>

<span class="kwb">in</span>
   <span class="kwa">local</span> Args N <span class="kwb">in</span>
      <span class="sym">[</span>Args<span class="sym">] = {</span>Application.getArgs plain<span class="sym">}</span>
      N <span class="sym">= {</span>String.toInt Args<span class="sym">}</span>

      <span class="sym">{</span>System.showInfo <span class="sym">{</span>Length <span class="sym">{</span>RepeatAppend N <span class="kwa">nil</span><span class="sym">}} }</span>
   <span class="kwb">end</span>
   <span class="sym">{</span>Application.exit <span class="num">0</span><span class="sym">}</span>
<span class="kwb">end</span>
