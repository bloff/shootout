<span class="slc">#!/usr/bin/ruby</span>
<span class="slc"># -*- mode: ruby -*-</span>
<span class="slc"># $Id: matrix-ruby-2.code,v 1.4 2005-12-31 16:45:39 bfulgham Exp $</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Christopher Williams</span>

n = <span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">60</span>)<span class="sym">.</span>to_i
size = <span class="num">30</span>
require <span class="str">'matrix'</span>
n = <span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">600</span>)<span class="sym">.</span>to_i
size = <span class="num">30</span>

<span class="kwa">def</span> <span class="kwd">mkmatrix</span><span class="sym">(</span>rows<span class="sym">,</span>cols)
  count = <span class="num">0</span>
  the_rows = Array<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>rows) <span class="kwa">do</span> <span class="sym">|</span>i<span class="sym">|</span>
    Array<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>cols) <span class="sym">{|</span>j<span class="sym">|</span> count <span class="sym">+</span>=<span class="num">1</span> <span class="sym">}</span>
  <span class="kwa">end</span>
  Matrix<span class="sym">[*</span>the_rows<span class="sym">]</span>
<span class="kwa">end</span>

m1 = <span class="kwd">mkmatrix</span><span class="sym">(</span>size<span class="sym">,</span>size)
m2 = <span class="kwd">mkmatrix</span><span class="sym">(</span>size<span class="sym">,</span>size)
mm = <span class="sym">[]</span>
n<span class="sym">.</span>times <span class="kwa">do</span>
  mm = m1 <span class="sym">*</span> m2
<span class="kwa">end</span>
puts <span class="str">&quot;#{mm[0,0]} #{mm[2,3]} #{mm[3,2]} #{mm[4,4]}&quot;</span>


