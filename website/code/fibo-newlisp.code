<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>newlisp
<span class="line">    2 </span><span class="slc">;;
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;; fibonacci series
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">;;
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">;; By Lutz Mueller
</span><span class="line">    6 </span><span class="slc"></span>
<span class="line">    7 </span><span class="sym">(</span>define <span class="sym">(</span>fibo n<span class="sym">)
</span><span class="line">    8 </span><span class="sym">        (</span><span class="kwa">if</span><span class="sym">(&lt;</span> n <span class="num">2</span><span class="sym">)</span> <span class="num">1
</span><span class="line">    9 </span><span class="num"></span>        <span class="sym">(+  (</span>fibo <span class="sym">(-</span> n <span class="num">1</span><span class="sym">))
</span><span class="line">   10 </span><span class="sym">            (</span>fibo <span class="sym">(-</span> n <span class="num">2</span><span class="sym">)))))
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym">(</span>println <span class="sym">(</span>fibo <span class="sym">(</span>integer <span class="sym">(</span><span class="kwa">nth</span> <span class="num">2</span> <span class="sym">(</span>main<span class="sym">-</span>args<span class="sym">)))))
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym">(</span><span class="kwa">exit</span><span class="sym">)
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span>
