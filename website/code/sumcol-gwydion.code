<span class="kwb">module</span><span class="sym">:</span> sumcol
<span class="kwa">use</span><span class="sym">-</span>libraries<span class="sym">:</span> common<span class="sym">-</span>dylan<span class="sym">,</span> io
<span class="kwa">use</span><span class="sym">-</span>modules<span class="sym">:</span> common<span class="sym">-</span>dylan<span class="sym">,</span> standard<span class="sym">-</span>io<span class="sym">,</span> streams<span class="sym">,</span> format<span class="sym">-</span>out

<span class="kwa">begin
  let</span> sum <span class="sym">::</span> <span class="kwa">&lt;integer&gt;</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>  <span class="kwa">while</span><span class="sym">(</span>~stream<span class="sym">-</span>at<span class="sym">-</span><span class="kwa">end</span>?<span class="sym">(*</span>standard<span class="sym">-</span>input<span class="sym">*))
</span>    sum <span class="sym">:=</span> sum <span class="sym">+</span> string<span class="sym">-</span><span class="kwa">to</span><span class="sym">-</span>integer<span class="sym">(</span>read<span class="sym">-</span>line<span class="sym">(*</span>standard<span class="sym">-</span>input<span class="sym">*));
</span>  <span class="kwa">end while</span><span class="sym">;
</span>  format<span class="sym">-</span>out<span class="sym">(</span><span class="str">&quot;%=</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">);
</span><span class="kwa">end</span><span class="sym">;</span>
