<span class="slc">--</span>
<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">--</span>
<span class="slc">-- from JAVA by Isaac Gouy</span>
<span class="slc">-- adapted to SE2.1 by josé</span>
<span class="slc">--</span>

<span class="kwa">class</span> TAKFP

insert
	ARGUMENTS

creation <span class="sym">{</span>ANY<span class="sym">}</span>
	make

<span class="kwa">feature</span> <span class="sym">{</span>ANY<span class="sym">}</span>
	make <span class="kwa">is local</span> n<span class="sym">:</span> REAL_32 <span class="kwa">do</span>
		<span class="kwa">check</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">end</span>
		<span class="kwa">check</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.is_integer <span class="kwa">end</span>
		<span class="kwa">check</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer.fit_real_32 <span class="kwa">end</span>
		n <span class="sym">:=</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_real.force_to_real_32

		std_output.<span class="kwd">put_real_format</span><span class="sym">(</span><span class="kwd">tak</span><span class="sym">({</span>REAL_32 <span class="num">3.0</span><span class="sym">}*</span>n<span class="sym">,{</span>REAL_32 <span class="num">2.0</span><span class="sym">}*</span>n<span class="sym">,</span>n<span class="sym">),</span><span class="num">1</span><span class="sym">)</span>
		std_output.put_new_line
	<span class="kwa">end</span>

	<span class="kwd">tak</span><span class="sym">(</span>x<span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">:</span> REAL_32<span class="sym">):</span> REAL_32 <span class="kwa">is do</span>
		<span class="kwa">if</span> x <span class="sym">&lt;=</span> y <span class="kwa">then</span>
			<span class="kwa">Result</span> <span class="sym">:=</span> z
		<span class="kwa">else</span>
			<span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">tak</span><span class="sym">(</span><span class="kwd">tak</span><span class="sym">(</span>x<span class="sym">-{</span>REAL_32 <span class="num">1.0</span><span class="sym">},</span>y<span class="sym">,</span>z<span class="sym">),</span> <span class="kwd">tak</span><span class="sym">(</span>y<span class="sym">-{</span>REAL_32 <span class="num">1.0</span><span class="sym">},</span>z<span class="sym">,</span>x<span class="sym">),</span> <span class="kwd">tak</span><span class="sym">(</span>z<span class="sym">-{</span>REAL_32 <span class="num">1.0</span><span class="sym">},</span>x<span class="sym">,</span>y<span class="sym">))</span>
		<span class="kwa">end</span>
	<span class="kwa">end</span>
<span class="kwa">end</span>

