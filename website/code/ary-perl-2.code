<span class="slc">#!/usr/bin/perl</span>
<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># Modified: 2005-06-18 Cosimo Streppone</span>

<span class="kwa">use</span> integer<span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">=</span> <span class="kwb">&#64;ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">1</span><span class="sym">;</span>
<span class="kwc">my</span><span class="sym">(</span><span class="kwb">&#64;X</span><span class="sym">,</span> <span class="kwb">&#64;Y</span><span class="sym">,</span> <span class="kwb">$i</span><span class="sym">,</span> <span class="kwb">$k</span><span class="sym">);</span>
<span class="kwc">my</span> <span class="kwb">$last</span> <span class="sym">=</span> <span class="kwb">$n</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">;</span>

<span class="slc"># Initialize &#64;X list in a single step</span>
<span class="kwb">&#64;X</span> <span class="sym">= (</span><span class="num">1</span> .. <span class="kwb">$n</span><span class="sym">);</span>

<span class="slc"># Execute 1000 times</span>
<span class="kwa">for</span><span class="sym">(</span><span class="num">0</span> .. <span class="num">999</span><span class="sym">) {</span>
    <span class="slc"># Use of `$_' aliasing is faster than using a lexical var</span>
    <span class="slc"># Also, there is no need to reverse (0 .. $last) list</span>
    <span class="kwb">$Y</span><span class="sym">[</span><span class="kwb">$_</span><span class="sym">] +=</span> <span class="kwb">$X</span><span class="sym">[</span><span class="kwb">$_</span><span class="sym">]</span> <span class="kwa">for</span> <span class="num">0</span> .. <span class="kwb">$last</span><span class="sym">;</span>
<span class="sym">}</span>

print <span class="kwb">$Y</span><span class="sym">[</span><span class="num">0</span><span class="sym">],</span> <span class="str">' '</span><span class="sym">,</span> <span class="kwb">$Y</span><span class="sym">[</span><span class="kwb">$last</span><span class="sym">],</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>

