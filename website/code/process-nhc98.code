<span class="slc">-- $Id: process-nhc98.code,v 1.1 2005-05-23 06:14:23 bfulgham Exp $
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">-- Contributed by Einar Karttunen
</span>
<span class="kwa">import</span> Control.Concurrent
<span class="kwa">import</span> Control.Monad
<span class="kwa">import</span> System

thread <span class="sym">::</span> MVar <span class="kwb">Int</span> <span class="sym">-&gt;</span> MVar <span class="kwb">Int</span> <span class="sym">-&gt;</span> IO <span class="sym">()
</span>thread inp out <span class="sym">=</span> takeMVar inp <span class="sym">&gt;&gt;=</span> putMVar out . <span class="sym">(+</span><span class="num">1</span><span class="sym">)

</span>spawn cur _ <span class="sym">=</span> <span class="kwa">do</span> next <span class="sym">&lt;-</span> newEmptyMVar
		 forkIO $ thread cur next
		 return next

main <span class="sym">=</span> <span class="kwa">do</span> n <span class="sym">&lt;-</span> getArgs <span class="sym">&gt;&gt;=</span> readIO.head <span class="sym">::</span> IO <span class="kwb">Int
</span>	  s <span class="sym">&lt;-</span> newEmptyMVar
	  e <span class="sym">&lt;-</span> foldM spawn s <span class="sym">[</span><span class="num">1</span>..n<span class="sym">]
</span>	  f <span class="sym">&lt;-</span> newEmptyMVar
	  forkIO $ takeMVar e <span class="sym">&gt;&gt;=</span> putMVar f
	  putMVar s <span class="num">0
</span>	  takeMVar f <span class="sym">&gt;&gt;=</span> print
