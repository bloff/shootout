<span class="slc">-- $Id: nestedloop-gnat.code,v 1.7 2005-03-15 06:18:00 bfulgham Exp $
</span><span class="slc">-- http://dada.perl.it/shootout/
</span><span class="slc">-- Ada 95 code by C.C.
</span>
<span class="kwa">with</span> Ada.Text_IO<span class="sym">,</span> Ada.Integer_Text_IO<span class="sym">,</span> Ada.Command_Line<span class="sym">;

</span><span class="kwa">procedure</span> NestedLoop <span class="kwa">is
</span>   Count<span class="sym">,</span> M <span class="sym">:</span> <span class="kwb">Natural</span> <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span>   N        <span class="sym">:</span> <span class="kwb">Positive</span> <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="kwa">begin

   begin
</span>      N <span class="sym">:=</span> <span class="kwb">Positive</span><span class="sym">'</span>Value <span class="sym">(</span>Ada.Command_Line.Argument <span class="sym">(</span><span class="num">1</span><span class="sym">));
</span>   <span class="kwa">exception
      when</span> Constraint_Error <span class="sym">=&gt;</span> <span class="kwa">null</span><span class="sym">;
</span>   <span class="kwa">end</span><span class="sym">;
</span>   M <span class="sym">:=</span> N <span class="num">- 1</span><span class="sym">;
</span>   <span class="kwa">for</span> A <span class="kwa">in</span> <span class="num">0</span> .. M <span class="kwa">loop
      for</span> B <span class="kwa">in</span> <span class="num">0</span> .. M <span class="kwa">loop
         for</span> C <span class="kwa">in</span> <span class="num">0</span> .. M <span class="kwa">loop
            for</span> D <span class="kwa">in</span> <span class="num">0</span> .. M <span class="kwa">loop
               for</span> E <span class="kwa">in</span> <span class="num">0</span> .. M <span class="kwa">loop
                  for</span> F <span class="kwa">in</span> <span class="num">0</span> .. M <span class="kwa">loop
</span>                     Count <span class="sym">:=</span> Count <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span>                  <span class="kwa">end loop</span><span class="sym">;
</span>               <span class="kwa">end loop</span><span class="sym">;
</span>            <span class="kwa">end loop</span><span class="sym">;
</span>         <span class="kwa">end loop</span><span class="sym">;
</span>      <span class="kwa">end loop</span><span class="sym">;
</span>   <span class="kwa">end loop</span><span class="sym">;
</span>   Ada.Integer_Text_IO.Put <span class="sym">(</span>Item <span class="sym">=&gt;</span> Count<span class="sym">,</span> Width <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">);
</span>   Ada.Text_IO.New_Line<span class="sym">;
</span><span class="kwa">end</span> NestedLoop<span class="sym">;
</span>
