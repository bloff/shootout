<span class="com">/* ------------------------------------------------------------------ */</span>
<span class="com">/* The Great Computer Language Shootout                               */</span>
<span class="com">/* http://shootout.alioth.debian.org/                                 */</span>
<span class="com">/*                                                                    */</span>
<span class="com">/* Contributed by Anthony Borla                                       */</span>
<span class="com">/* ------------------------------------------------------------------ */</span>

<span class="kwa">numeric digits</span> <span class="num">9</span>

N <span class="sym">=</span> <span class="kwa">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) ;</span> <span class="kwa">if</span> <span class="kwb">DATATYPE</span><span class="sym">(</span>N<span class="sym">)</span> \<span class="sym">=</span> <span class="str">'NUM'</span> <span class="sym">|</span> N <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> <span class="sym">;</span> N <span class="sym">=</span> <span class="num">1</span>

<span class="kwa">call</span> nsieveResults <span class="num">2</span> <span class="sym">**</span> N <span class="sym">*</span> <span class="num">10000</span>
<span class="kwa">call</span> nsieveResults <span class="num">2</span> <span class="sym">** (</span>N <span class="sym">-</span> <span class="num">1</span><span class="sym">) *</span> <span class="num">10000</span>
<span class="kwa">call</span> nsieveResults <span class="num">2</span> <span class="sym">** (</span>N <span class="sym">-</span> <span class="num">2</span><span class="sym">) *</span> <span class="num">10000</span>

<span class="kwa">exit</span> <span class="num">0</span>

<span class="com">/* ----------------------------- */</span>

nsieveResults <span class="sym">:</span> <span class="kwa">procedure</span>
  N <span class="sym">=</span> <span class="kwa">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) ;</span> TAB <span class="sym">=</span> <span class="kwb">COPIES</span><span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">,</span> <span class="num">4</span><span class="sym">)</span>
  <span class="kwa">say</span> <span class="str">&quot;Primes up to&quot;</span> <span class="sym">||</span> TAB <span class="sym">||</span> N <span class="sym">||</span> TAB <span class="sym">||</span> nsieve<span class="sym">(</span>N<span class="sym">)</span>
  <span class="kwa">return</span>

<span class="com">/* ----------------------------- */</span>

nsieve <span class="sym">:</span> <span class="kwa">procedure</span>
  M <span class="sym">=</span> <span class="kwa">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) ;</span> count <span class="sym">= -</span><span class="num">1</span> <span class="sym">;</span> A. <span class="sym">=</span> <span class="num">1</span>

  <span class="kwa">do</span> i <span class="sym">=</span> <span class="num">2</span> <span class="kwa">to</span> M
    <span class="kwa">if</span> A.i <span class="kwa">then do</span>
      <span class="kwa">do</span> j <span class="sym">=</span> i <span class="sym">+</span> i <span class="kwa">by</span> i <span class="kwa">while</span> j <span class="sym">&lt;</span> M <span class="sym">;</span> A.j <span class="sym">=</span> <span class="num">0</span> <span class="sym">;</span> <span class="kwa">end</span>
      A.i <span class="sym">=</span> <span class="num">0</span> <span class="sym">;</span> count <span class="sym">=</span> count <span class="sym">+</span> <span class="num">1</span>
    <span class="kwa">end</span>
  <span class="kwa">end</span>

  <span class="kwa">return</span> count
