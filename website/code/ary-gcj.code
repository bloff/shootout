<span class="slc">// $Id: ary-gcj.code,v 1.6 2005-12-08 06:37:58 bfulgham Exp $</span>
<span class="slc">// http://www.bagley.org/~doug/shootout/</span>

<span class="slc">// this program is modified from:</span>
<span class="slc">//   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html</span>
<span class="slc">// Timing Trials, or, the Trials of Timing: Experiments with Scripting</span>
<span class="slc">// and User-Interface Languages&lt;/a&gt; by Brian W. Kernighan and</span>
<span class="slc">// Christopher J. Van Wyk.</span>

<span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;</span>
<span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;</span>

<span class="kwa">public class</span> ary <span class="sym">{</span>
    <span class="kwa">public static</span> <span class="kwb">void</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[]) {</span>
	<span class="kwb">int</span> i<span class="sym">,</span> j<span class="sym">,</span> k<span class="sym">,</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span><span class="kwd">parseInt</span><span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
	<span class="kwb">int</span> x<span class="sym">[] =</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>n<span class="sym">];</span>
	<span class="kwb">int</span> y<span class="sym">[] =</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>n<span class="sym">];</span>

	<span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++)</span>
	    x<span class="sym">[</span>i<span class="sym">] =</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
	<span class="kwa">for</span> <span class="sym">(</span>k <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> k <span class="sym">&lt;</span> <span class="num">1000</span><span class="sym">;</span> k<span class="sym">++ )</span>
	    <span class="kwa">for</span> <span class="sym">(</span>j <span class="sym">=</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">;</span> j <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">;</span> j<span class="sym">--)</span>
		y<span class="sym">[</span>j<span class="sym">] +=</span> x<span class="sym">[</span>j<span class="sym">];</span>

	<span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span><span class="kwd">println</span><span class="sym">(</span>y<span class="sym">[</span><span class="num">0</span><span class="sym">] +</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span> y<span class="sym">[</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">]);</span>
    <span class="sym">}</span>
<span class="sym">}</span>
