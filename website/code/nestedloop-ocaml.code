<span class="com">(*</span>
<span class="com"> * $Id: nestedloop-ocaml.code,v 1.7 2006-09-20 05:52:08 bfulgham Exp $</span>
<span class="com"> * http://www.bagley.org/~doug/shootout/</span>
<span class="com"> * based on code from Florian Hars and Markus Mottl</span>
<span class="com"> *)</span>

<span class="kwa">let</span> n <span class="sym">=</span> <span class="kwa">if</span> Array.length Sys.argv <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span> int_of_string Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">else</span> <span class="num">1</span>
<span class="kwa">let rec</span> loopF x <span class="sym">=</span> <span class="kwa">function</span> <span class="num">0</span> <span class="sym">-&gt;</span> x <span class="sym">|</span> i <span class="sym">-&gt;</span> <span class="kwd">loopF</span> <span class="sym">(</span>x<span class="sym">+</span><span class="num">1</span><span class="sym">) (</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
<span class="kwa">let rec</span> loopE x <span class="sym">=</span> <span class="kwa">function</span> <span class="num">0</span> <span class="sym">-&gt;</span> x <span class="sym">|</span> i <span class="sym">-&gt;</span> <span class="kwd">loopE</span> <span class="sym">(</span>loopF x n<span class="sym">) (</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
<span class="kwa">let rec</span> loopD x <span class="sym">=</span> <span class="kwa">function</span> <span class="num">0</span> <span class="sym">-&gt;</span> x <span class="sym">|</span> i <span class="sym">-&gt;</span> <span class="kwd">loopD</span> <span class="sym">(</span>loopE x n<span class="sym">) (</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
<span class="kwa">let rec</span> loopC x <span class="sym">=</span> <span class="kwa">function</span> <span class="num">0</span> <span class="sym">-&gt;</span> x <span class="sym">|</span> i <span class="sym">-&gt;</span> <span class="kwd">loopC</span> <span class="sym">(</span>loopD x n<span class="sym">) (</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
<span class="kwa">let rec</span> loopB x <span class="sym">=</span> <span class="kwa">function</span> <span class="num">0</span> <span class="sym">-&gt;</span> x <span class="sym">|</span> i <span class="sym">-&gt;</span> <span class="kwd">loopB</span> <span class="sym">(</span>loopC x n<span class="sym">) (</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
<span class="kwa">let rec</span> loopA x <span class="sym">=</span> <span class="kwa">function</span> <span class="num">0</span> <span class="sym">-&gt;</span> x <span class="sym">|</span> i <span class="sym">-&gt;</span> <span class="kwd">loopA</span> <span class="sym">(</span>loopB x n<span class="sym">) (</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">);;</span>
Printf.printf <span class="str">&quot;%d</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">(</span>loopA <span class="num">0</span> n<span class="sym">)</span>
