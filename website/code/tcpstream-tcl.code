<span class="slc">#!/usr/bin/tclsh
</span><span class="slc"># $Id: tcpstream-tcl.code,v 1.1 2005-03-18 06:26:40 bfulgham Exp $
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># Contributed by Robert Seeger
</span><span class="kwa">proc</span> Server <span class="sym">{</span>channel clientaddr clientport<span class="sym">} {
</span>    <span class="kwa">set</span> reply <span class="sym">[</span><span class="kwa">string</span> repeat x <span class="num">409600</span><span class="sym">]
</span>    <span class="kwa">fconfigure</span> <span class="kwb">$channel</span> <span class="sym">-</span>buffersize <span class="num">409600</span> <span class="sym">-</span><span class="kwa">encoding binary

    while</span> <span class="sym">{ [</span><span class="kwa">string</span> length <span class="sym">[</span><span class="kwa">read</span> <span class="kwb">$channel</span> <span class="num">64</span><span class="sym">]] ==</span> <span class="num">64</span> <span class="sym">} {
</span>        <span class="kwa">puts</span> <span class="sym">-</span>nonewline <span class="kwb">$channel $reply
</span>    <span class="sym">}

</span>    <span class="kwa">set</span> <span class="sym">::</span>forever <span class="num">1
</span><span class="sym">}

</span><span class="kwa">proc</span> doChild <span class="sym">{</span>num<span class="sym">} {
</span>    <span class="kwa">set</span> request <span class="sym">[</span><span class="kwa">string</span> repeat x <span class="num">64</span><span class="sym">]

</span>    <span class="kwa">set</span> bytes <span class="num">0
</span>    <span class="kwa">set</span> replies <span class="num">0

</span>    <span class="kwa">set</span> fd <span class="sym">[</span><span class="kwa">socket</span> localhost <span class="num">9900</span><span class="sym">]
</span>    <span class="kwa">fconfigure</span> <span class="kwb">$fd</span> <span class="sym">-</span>buffersize <span class="num">64</span> <span class="sym">-</span><span class="kwa">encoding binary

    while</span> <span class="sym">{ [</span><span class="kwa">incr</span> num <span class="num">-1</span><span class="sym">] &gt;=</span> <span class="num">0</span> <span class="sym">} {
</span>        <span class="kwa">puts</span> <span class="sym">-</span>nonewline <span class="kwb">$fd $request
</span>        <span class="kwa">incr</span> bytes <span class="sym">[</span><span class="kwa">string</span> length <span class="sym">[</span><span class="kwa">read</span> <span class="kwb">$fd</span> <span class="num">409600</span><span class="sym">]]
</span>        <span class="kwa">incr</span> replies
    <span class="sym">}

</span>    <span class="kwa">close</span> <span class="kwb">$fd
</span>    <span class="kwa">puts</span> <span class="str">&quot;replies: $replies</span><span class="esc">\t</span><span class="str">bytes: $bytes&quot;</span>
    <span class="kwa">exit
</span><span class="sym">}

</span><span class="kwa">if</span> <span class="sym">{ [</span><span class="kwa">llength</span> <span class="kwb">$argv</span><span class="sym">] ==</span> <span class="num">2</span><span class="sym">} {
</span>    doChild <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">1</span><span class="sym">]
}</span> else <span class="sym">{
</span>    <span class="kwa">socket</span> <span class="sym">-</span>server Server <span class="num">9900

</span>    <span class="kwa">exec</span> <span class="sym">[</span><span class="kwa">info</span> script<span class="sym">]</span> Child <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">] &amp;
</span>    <span class="kwa">vwait</span> <span class="sym">::</span>forever

    <span class="kwa">exit
</span><span class="sym">}
</span>
