<span class="sym">;;; -*-</span> mode<span class="sym">:</span> lisp <span class="sym">-*-
;;;</span> $Id<span class="sym">:</span> ary<span class="sym">.</span>pop11<span class="sym">,</span>v <span class="num">1.2 2005</span><span class="sym">/</span><span class="num">05</span><span class="sym">/</span><span class="num">11 16</span><span class="sym">:</span><span class="num">29</span><span class="sym">:</span><span class="num">47</span> igouy<span class="sym">-</span>guest Exp $
<span class="sym">;;;</span> http<span class="sym">:</span><span class="slc">//shootout.alioth.debian.org/
</span>vars i<span class="sym">,</span>j<span class="sym">,</span>n<span class="sym">;

</span>define constant procedure get_args<span class="sym">();
</span>   <span class="kwa">if</span> null<span class="sym">(</span>poparglist<span class="sym">)</span> then <span class="num">1</span> <span class="kwa">else
</span>      strnumber<span class="sym">(</span> hd<span class="sym">(</span>poparglist<span class="sym">) )
</span>   endif
enddefine<span class="sym">;

</span>get_args<span class="sym">() -&gt;</span> n<span class="sym">;

</span>vars x <span class="sym">=</span> initintvec<span class="sym">(</span>n<span class="sym">);
</span>vars y <span class="sym">=</span> initintvec<span class="sym">(</span>n<span class="sym">);

</span><span class="kwa">for</span> i from <span class="num">1</span> to n <span class="kwa">do
</span>    i <span class="sym">-&gt;</span> subscrintvec<span class="sym">(</span>i<span class="sym">,</span> x<span class="sym">);
</span>endfor<span class="sym">;

</span>repeat <span class="num">1000</span> times
    <span class="kwa">for</span> j from <span class="num">0</span> to <span class="sym">(</span>n <span class="num">- 1</span><span class="sym">)</span> <span class="kwa">do
</span>        subscrintvec<span class="sym">(</span>n <span class="sym">-</span> j<span class="sym">,</span>y<span class="sym">) +</span> subscrintvec<span class="sym">(</span>n <span class="sym">-</span> j<span class="sym">,</span>x<span class="sym">) -&gt;</span> subscrintvec<span class="sym">(</span>n <span class="sym">-</span> j<span class="sym">,</span> y<span class="sym">)
</span>    endfor<span class="sym">;
</span>endrepeat<span class="sym">;

</span>vars ans1 <span class="sym">=</span> subscrintvec<span class="sym">(</span><span class="num">1</span><span class="sym">,</span>y<span class="sym">);
</span>vars ans2 <span class="sym">=</span> subscrintvec<span class="sym">(</span>n<span class="sym">,</span>y<span class="sym">);
</span>format_print<span class="sym">(</span><span class="str">'~D ~D</span><span class="esc">\n</span><span class="str">'</span><span class="sym">, [</span>^ans1 ^ans2<span class="sym">]);</span>
