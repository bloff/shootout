<span class="slc">%  The Great Computer Language Shootout
</span><span class="slc">%   http://shootout.alioth.debian.org/
</span><span class="slc">%
</span><span class="slc">%   contributed by Mark Scandariato
</span><span class="slc">%
</span><span class="slc">%   erl -noshell -noinput -run nsieve main 9
</span>
<span class="sym">-</span>module<span class="sym">(</span>nsieve<span class="sym">)</span>.
<span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

main<span class="sym">([</span>Arg<span class="sym">]) -&gt;
</span>    N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span>Arg<span class="sym">),
</span>    main<span class="sym">(</span>N<span class="sym">),
</span>    erlang<span class="sym">:</span><span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">);

</span>main<span class="sym">(</span>N<span class="sym">)</span> <span class="kwa">when</span> N <span class="sym">&gt;=</span> <span class="num">2</span> <span class="sym">-&gt;</span> ns<span class="sym">(</span>N<span class="sym">),</span> ns<span class="sym">(</span>N<span class="num">-1</span><span class="sym">),</span> ns<span class="sym">(</span>N<span class="num">-2</span><span class="sym">)</span>.


ns<span class="sym">(</span>N<span class="sym">) -&gt;
</span>    M <span class="sym">= (</span><span class="num">1</span> bsl N<span class="sym">)*</span><span class="num">10000</span><span class="sym">,
</span>    clear<span class="sym">(</span>M<span class="sym">),
</span>    io<span class="sym">:</span>fwrite<span class="sym">(</span><span class="str">&quot;Primes up to ~8.10B ~8.10B~n&quot;</span><span class="sym">, [</span>M<span class="sym">,</span> ns<span class="sym">(</span><span class="num">2</span><span class="sym">,</span> M<span class="sym">,</span> <span class="num">0</span><span class="sym">)])</span>.


ns<span class="sym">(</span>I<span class="sym">,</span> M<span class="sym">,</span> C<span class="sym">)</span> <span class="kwa">when</span> I <span class="sym">&gt;</span> M <span class="sym">-&gt;</span> C<span class="sym">;
</span>ns<span class="sym">(</span>I<span class="sym">,</span> M<span class="sym">,</span> C<span class="sym">) -&gt;
</span>    <span class="kwa">case</span> <span class="kwb">get</span><span class="sym">(</span>I<span class="sym">)</span> <span class="kwa">of
</span>        true  <span class="sym">-&gt;</span> mark<span class="sym">(</span>I<span class="sym">,</span> M<span class="sym">,</span> I<span class="sym">+</span>I<span class="sym">),</span> ns<span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> M<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">);
</span>        false <span class="sym">-&gt;</span> ns<span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> M<span class="sym">,</span> C<span class="sym">)
</span>    <span class="kwa">end</span>.


mark<span class="sym">(</span>_<span class="sym">,</span> M<span class="sym">,</span> K<span class="sym">)</span> <span class="kwa">when</span> K <span class="sym">&gt;</span> M <span class="sym">-&gt;</span> ok<span class="sym">;
</span>mark<span class="sym">(</span>I<span class="sym">,</span> M<span class="sym">,</span> K<span class="sym">) -&gt;</span> <span class="kwb">put</span><span class="sym">(</span>K<span class="sym">,</span> false<span class="sym">),</span> mark<span class="sym">(</span>I<span class="sym">,</span> M<span class="sym">,</span> K<span class="sym">+</span>I<span class="sym">)</span>.


clear<span class="sym">(</span><span class="num">1</span><span class="sym">) -&gt;</span> ok<span class="sym">;
</span>clear<span class="sym">(</span>M<span class="sym">) -&gt;</span> <span class="kwb">put</span><span class="sym">(</span>M<span class="sym">,</span> true<span class="sym">),</span> clear<span class="sym">(</span>M<span class="num">-1</span><span class="sym">)</span>.

<span class="slc">% vim: set ts=4 ft=erlang</span>
