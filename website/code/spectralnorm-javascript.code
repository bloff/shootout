<span class="slc">// The Great Computer Language Shootout
</span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="slc">//
</span><span class="slc">// contributed by Ian Osgood
</span>
<span class="kwa">function</span> A<span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">) {
</span>  <span class="kwa">return</span> <span class="num">1</span><span class="sym">/((</span>i<span class="sym">+</span>j<span class="sym">)*(</span>i<span class="sym">+</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">)/</span><span class="num">2</span><span class="sym">+</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">);
}

</span><span class="kwa">function</span> Au<span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">) {
</span>  <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> i <span class="kwa">in</span> u<span class="sym">) {
</span>    <span class="kwa">var</span> t <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> j <span class="kwa">in</span> u<span class="sym">)
</span>      t <span class="sym">+=</span> A<span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">) *</span> u<span class="sym">[</span>j<span class="sym">];
</span>    v<span class="sym">[</span>i<span class="sym">] =</span> t<span class="sym">;
  }
}

</span><span class="kwa">function</span> Atu<span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">) {
</span>  <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> i <span class="kwa">in</span> u<span class="sym">) {
</span>    <span class="kwa">var</span> t <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> j <span class="kwa">in</span> u<span class="sym">)
</span>      t <span class="sym">+=</span> A<span class="sym">(</span>j<span class="sym">,</span>i<span class="sym">) *</span> u<span class="sym">[</span>j<span class="sym">];
</span>    v<span class="sym">[</span>i<span class="sym">] =</span> t<span class="sym">;
  }
}

</span><span class="kwa">function</span> AtAu<span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">,</span>w<span class="sym">) {
</span>  Au<span class="sym">(</span>u<span class="sym">,</span>w<span class="sym">);
</span>  Atu<span class="sym">(</span>w<span class="sym">,</span>v<span class="sym">);
}

</span><span class="kwa">function</span> norm<span class="sym">(</span>n<span class="sym">) {
</span>  <span class="kwa">var</span> i<span class="sym">,</span> u<span class="sym">=[],</span> v<span class="sym">=[],</span> w<span class="sym">=[],</span> vv<span class="sym">=</span><span class="num">0</span><span class="sym">,</span> vBv<span class="sym">=</span><span class="num">0</span><span class="sym">;
</span>  <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>    u<span class="sym">[</span>i<span class="sym">] =</span> <span class="num">1</span><span class="sym">;</span> v<span class="sym">[</span>i<span class="sym">] =</span> w<span class="sym">[</span>i<span class="sym">] =</span> <span class="num">0</span><span class="sym">;
  }
</span>  <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span><span class="num">10</span><span class="sym">;</span> i<span class="sym">++) {
</span>    AtAu<span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">,</span>w<span class="sym">);
</span>    AtAu<span class="sym">(</span>v<span class="sym">,</span>u<span class="sym">,</span>w<span class="sym">);
  }
</span>  <span class="kwa">for</span> <span class="sym">(</span>i <span class="kwa">in</span> u<span class="sym">) {
</span>    vBv <span class="sym">+=</span> u<span class="sym">[</span>i<span class="sym">]*</span>v<span class="sym">[</span>i<span class="sym">];
</span>    vv  <span class="sym">+=</span> v<span class="sym">[</span>i<span class="sym">]*</span>v<span class="sym">[</span>i<span class="sym">];
  }
</span>  <span class="kwa">return</span> Math.sqrt<span class="sym">(</span>vBv<span class="sym">/</span>vv<span class="sym">);
}

</span>print<span class="sym">(</span>norm<span class="sym">(</span>arguments<span class="sym">[</span><span class="num">0</span><span class="sym">])</span>.toFixed<span class="sym">(</span><span class="num">9</span><span class="sym">));</span>
