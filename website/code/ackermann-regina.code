<span class="com">/* ------------------------------------------------------------------ */</span>
<span class="com">/* The Great Computer Language Shootout                               */</span>
<span class="com">/* http://shootout.alioth.debian.org/                                 */</span>
<span class="com">/*                                                                    */</span>
<span class="com">/* Contributed by Anthony Borla                                       */</span>
<span class="com">/* ------------------------------------------------------------------ */</span>

N <span class="sym">=</span> <span class="kwa">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) ;</span> <span class="kwa">if</span> <span class="kwb">DATATYPE</span><span class="sym">(</span>N<span class="sym">)</span> \<span class="sym">=</span> <span class="str">'NUM'</span> <span class="sym">|</span> N <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> <span class="sym">;</span> N <span class="sym">=</span> <span class="num">1</span>

<span class="kwa">say</span> <span class="str">&quot;Ack(3,&quot;</span> <span class="sym">||</span> N <span class="sym">||</span> <span class="str">&quot;):&quot;</span> ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> N<span class="sym">)</span>

<span class="kwa">exit</span> <span class="num">0</span>

<span class="com">/* ----------------------------- */</span>

ack <span class="sym">:</span>
  <span class="kwa">if ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) ==</span> <span class="num">0</span> <span class="kwa">then</span> <span class="sym">;</span> <span class="kwa">return ARG</span><span class="sym">(</span><span class="num">2</span><span class="sym">) +</span> <span class="num">1</span>
  <span class="kwa">if ARG</span><span class="sym">(</span><span class="num">2</span><span class="sym">) ==</span> <span class="num">0</span> <span class="kwa">then</span> <span class="sym">;</span> <span class="kwa">return</span> ack<span class="sym">(</span><span class="kwa">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) -</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
  <span class="kwa">return</span> ack<span class="sym">(</span><span class="kwa">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) -</span> <span class="num">1</span><span class="sym">,</span> ack<span class="sym">(</span><span class="kwa">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">),</span> <span class="kwa">ARG</span><span class="sym">(</span><span class="num">2</span><span class="sym">) -</span> <span class="num">1</span><span class="sym">))</span>
