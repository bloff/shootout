<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy
*/</span>

<span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;

</span><span class="kwa">public class</span> josephus <span class="sym">{
</span>   <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[]) {
</span>      <span class="kwb">int</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);

</span>      <span class="kwc">List</span> a <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">LinkedList</span><span class="sym">();
</span>      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++)
</span>         a<span class="sym">.</span>add<span class="sym">(</span> <span class="kwa">new</span> <span class="kwc">Integer</span><span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">) );

</span>      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">2</span><span class="sym">;</span> i <span class="sym">&lt;=</span> <span class="num">10</span><span class="sym">;</span> i<span class="sym">++)
</span>         print<span class="sym">(</span>Josephus<span class="sym">(</span> i<span class="sym">, (</span><span class="kwc">List</span><span class="sym">)((</span><span class="kwc">LinkedList</span><span class="sym">)</span>a<span class="sym">).</span>clone<span class="sym">() ));
   }

</span>   <span class="kwa">public static</span> <span class="kwc">List</span> Josephus<span class="sym">(</span><span class="kwb">int</span> m<span class="sym">,</span> <span class="kwc">List</span> a<span class="sym">) {
</span>      <span class="kwb">int</span> size<span class="sym">;
</span>      <span class="kwa">while</span> <span class="sym">( (</span>size <span class="sym">=</span> a<span class="sym">.</span>size<span class="sym">() ) &gt;=</span> m<span class="sym">){
</span>         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> m<span class="num">-1</span><span class="sym">;</span> i<span class="sym">++){
</span>            a<span class="sym">.</span>add<span class="sym">(</span> a<span class="sym">.</span>remove<span class="sym">(</span><span class="num">0</span><span class="sym">) );
         }
</span>         a<span class="sym">.</span>remove<span class="sym">(</span><span class="num">0</span><span class="sym">);</span> <span class="slc">// remove the mth item
</span>      <span class="sym">}
</span>      <span class="kwa">return</span> a<span class="sym">;
   }

</span>   <span class="kwa">public static</span> <span class="kwb">void</span> print<span class="sym">(</span><span class="kwc">List</span> a<span class="sym">) {
</span>      <span class="kwc">Collections</span><span class="sym">.</span>sort<span class="sym">(</span>a<span class="sym">);
</span>      <span class="kwc">ListIterator</span> i <span class="sym">=</span> a<span class="sym">.</span>listIterator<span class="sym">();
</span>      <span class="kwa">while</span> <span class="sym">(</span>i<span class="sym">.</span>hasNext<span class="sym">()){
</span>         <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span>i<span class="sym">.</span>next<span class="sym">() +</span> <span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span><span class="sym">);
      }
</span>      <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);
   }
}

</span><span class="com">/*
 * vim: ts=4 ft=java
 */</span>
