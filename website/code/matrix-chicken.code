<span class="slc">;;;; -Ob</span>

<span class="sym">(</span>declare <span class="sym">(</span>fixnum<span class="sym">) (</span>disable<span class="sym">-</span>interrupts<span class="sym">))</span>

<span class="slc">;; Matrix.scm</span>

<span class="sym">(</span>define size <span class="num">30</span><span class="sym">)</span>

<span class="sym">(</span>define <span class="sym">(</span>mkmatrix rows cols<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>mx <span class="sym">(</span>make<span class="sym">-</span>vector rows <span class="num">0</span><span class="sym">))</span>
	<span class="sym">(</span>count <span class="num">1</span><span class="sym">))</span>
    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span>add1 i<span class="sym">)))</span>
	<span class="sym">((=</span> i rows<span class="sym">))</span>
      <span class="sym">(</span>let <span class="sym">((</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))</span>
	<span class="sym">(</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(</span>add1 j<span class="sym">)))</span>
	    <span class="sym">((=</span> j cols<span class="sym">))</span>
	  <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> row j count<span class="sym">)</span>
	  <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> count <span class="sym">(+</span> count <span class="num">1</span><span class="sym">)))</span>
	<span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> mx i row<span class="sym">)))</span>
    mx<span class="sym">))</span>

<span class="sym">(</span>define<span class="sym">-</span>inline <span class="sym">(</span>num<span class="sym">-</span>cols mx<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>row <span class="sym">(</span>vector<span class="sym">-</span>ref mx <span class="num">0</span><span class="sym">)))</span>
    <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">length</span> row<span class="sym">)))</span>

<span class="sym">(</span>define <span class="sym">(</span>mmult rows cols m1 m2<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>m3 <span class="sym">(</span>make<span class="sym">-</span>vector rows <span class="num">0</span><span class="sym">)))</span>
    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span>add1 i<span class="sym">)))</span>
	<span class="sym">((=</span> i rows<span class="sym">))</span>
      <span class="sym">(</span>let <span class="sym">((</span>m1i <span class="sym">(</span>vector<span class="sym">-</span>ref m1 i<span class="sym">))</span>
	    <span class="sym">(</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))</span>
	<span class="sym">(</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(</span>add1 j<span class="sym">)))</span>
	    <span class="sym">((=</span> j cols<span class="sym">))</span>
	  <span class="sym">(</span>let <span class="sym">((</span>val <span class="num">0</span><span class="sym">))</span>
	    <span class="sym">(</span>do <span class="sym">((</span>k <span class="num">0</span> <span class="sym">(</span>add1 k<span class="sym">)))</span>
		<span class="sym">((=</span> k cols<span class="sym">))</span>
	      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> val <span class="sym">(+</span> val <span class="sym">(* (</span>vector<span class="sym">-</span>ref m1i k<span class="sym">)</span>
				  <span class="sym">(</span>vector<span class="sym">-</span>ref <span class="sym">(</span>vector<span class="sym">-</span>ref m2 k<span class="sym">)</span> j<span class="sym">)))))</span>
	    <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> row j val<span class="sym">)))</span>
	<span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> m3 i row<span class="sym">)))</span>
    m3<span class="sym">))</span>

<span class="sym">(</span>define <span class="sym">(</span>main #<span class="sym">!</span>optional <span class="sym">(</span>n <span class="str">&quot;1&quot;</span><span class="sym">))</span>
  <span class="sym">(</span>let <span class="sym">((</span>mm <span class="num">0</span><span class="sym">)</span>
	<span class="sym">(</span>m1 <span class="sym">(</span>mkmatrix size size<span class="sym">))</span>
	<span class="sym">(</span>m2 <span class="sym">(</span>mkmatrix size size<span class="sym">)))</span>
    <span class="sym">(</span>let loop <span class="sym">((</span>iter <span class="sym">(</span>string<span class="sym">-&gt;</span>number n<span class="sym">)))</span>
	<span class="sym">(</span><span class="kwa">cond</span> <span class="sym">((&gt;</span> iter <span class="num">0</span><span class="sym">)</span>
	       <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> mm <span class="sym">(</span>mmult size size m1 m2<span class="sym">))</span>
	       <span class="sym">(</span>loop <span class="sym">(-</span> iter <span class="num">1</span><span class="sym">)))))</span>
      <span class="sym">(</span>let <span class="sym">((</span>r0 <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">0</span><span class="sym">))</span>
	    <span class="sym">(</span>r2 <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">2</span><span class="sym">))</span>
	    <span class="sym">(</span>r3 <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">3</span><span class="sym">))</span>
	    <span class="sym">(</span>r4 <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">4</span><span class="sym">)))</span>
	<span class="sym">(</span><span class="kwa">print</span> <span class="sym">(</span>vector<span class="sym">-</span>ref r0 <span class="num">0</span><span class="sym">)</span> <span class="str">&quot; &quot;</span> <span class="sym">(</span>vector<span class="sym">-</span>ref r2 <span class="num">3</span><span class="sym">)</span> <span class="str">&quot; &quot;</span>
	       <span class="sym">(</span>vector<span class="sym">-</span>ref r3 <span class="num">2</span><span class="sym">)</span> <span class="str">&quot; &quot;</span> <span class="sym">(</span>vector<span class="sym">-</span>ref r4 <span class="num">4</span><span class="sym">)))))</span>

<span class="sym">(</span><span class="kwa">apply</span> main <span class="sym">(</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>arguments<span class="sym">))</span>

<span class="slc">; &gt; matrix 10</span>
<span class="slc">; 270165 1061760 1453695 1856025</span>
