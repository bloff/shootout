<span class="com">{  The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Micha Nelissen</span>
<span class="com">}</span>

<span class="kwa">program</span> wordfreq<span class="sym">;</span>

<span class="com">{$mode objfpc}</span><span class="com">{$H+}</span>

<span class="kwa">uses</span>
  simple_hash<span class="sym">,</span> strings<span class="sym">;</span>

<span class="kwa">procedure</span> <span class="kwd">readwords</span><span class="sym">(</span>dict<span class="sym">:</span> ht_pht<span class="sym">);</span>
<span class="kwa">var</span>
  i<span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span>
  wordbuf<span class="sym">:</span> <span class="kwa">array of</span> <span class="kwb">char</span><span class="sym">;</span>
  wordbuflen<span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span>
<span class="kwa">begin</span>
  i <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
  wordbuflen <span class="sym">:=</span> <span class="num">128</span><span class="sym">;</span>
  <span class="kwd">setlength</span><span class="sym">(</span>wordbuf<span class="sym">,</span> wordbuflen<span class="sym">);</span>
  <span class="kwa">while not</span> eof <span class="kwa">do</span>
  <span class="kwa">begin</span>
    <span class="kwd">read</span><span class="sym">(</span>wordbuf<span class="sym">[</span>i<span class="sym">]);</span>
    <span class="kwa">if</span> wordbuf<span class="sym">[</span>i<span class="sym">]</span> <span class="kwa">in</span> <span class="sym">[</span><span class="str">'a'</span>..<span class="str">'z'</span><span class="sym">,</span> <span class="str">'A'</span>..<span class="str">'Z'</span><span class="sym">]</span> <span class="kwa">then</span>
    <span class="kwa">begin</span>
      wordbuf<span class="sym">[</span>i<span class="sym">] :=</span> <span class="kwd">lowercase</span><span class="sym">(</span>wordbuf<span class="sym">[</span>i<span class="sym">]);</span>
      <span class="kwd">inc</span><span class="sym">(</span>i<span class="sym">);</span>
      <span class="kwa">if</span> i <span class="sym">=</span> wordbuflen <span class="kwa">then</span>
      <span class="kwa">begin</span>
        wordbuflen <span class="sym">*=</span> <span class="num">2</span><span class="sym">;</span>
        <span class="kwd">setlength</span><span class="sym">(</span>wordbuf<span class="sym">,</span> wordbuflen<span class="sym">);</span>
      <span class="kwa">end</span><span class="sym">;</span>
    <span class="kwa">end else begin</span>
      <span class="kwa">if</span> i <span class="sym">&lt;&gt;</span> <span class="num">0</span> <span class="kwa">then</span>
      <span class="kwa">begin</span>
        wordbuf<span class="sym">[</span>i<span class="sym">] :=</span> <span class="esc">#0</span><span class="sym">;</span>
        <span class="kwd">inc</span><span class="sym">(</span><span class="kwd">ht_find_new</span><span class="sym">(</span>dict<span class="sym">, &#64;</span>wordbuf<span class="sym">[</span><span class="num">0</span><span class="sym">])</span>^.val<span class="sym">);</span>
        i <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
      <span class="kwa">end</span><span class="sym">;</span>
    <span class="kwa">end</span><span class="sym">;</span>
  <span class="kwa">end</span><span class="sym">;</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">function</span> <span class="kwd">compare</span><span class="sym">(</span>a<span class="sym">,</span> b<span class="sym">:</span> ht_pnode<span class="sym">):</span> <span class="kwb">longint</span><span class="sym">;</span> <span class="kwa">inline</span><span class="sym">;</span>
<span class="kwa">begin</span>
  result <span class="sym">:=</span> <span class="kwd">ht_val</span><span class="sym">(</span>b<span class="sym">) -</span> <span class="kwd">ht_val</span><span class="sym">(</span>a<span class="sym">);</span>
  <span class="kwa">if</span> result <span class="sym">&lt;&gt;</span> <span class="num">0</span> <span class="kwa">then</span>
    exit<span class="sym">;</span>
  result <span class="sym">:=</span> <span class="kwb">byte</span><span class="sym">(</span><span class="kwd">ht_key</span><span class="sym">(</span>b<span class="sym">)</span>^<span class="sym">) -</span> <span class="kwb">byte</span><span class="sym">(</span><span class="kwd">ht_key</span><span class="sym">(</span>a<span class="sym">)</span>^<span class="sym">);</span>
  <span class="kwa">if</span> result <span class="sym">&lt;&gt;</span> <span class="num">0</span> <span class="kwa">then</span>
    exit<span class="sym">;</span>
  result <span class="sym">:=</span> <span class="kwd">strcomp</span><span class="sym">(</span><span class="kwd">ht_key</span><span class="sym">(</span>b<span class="sym">),</span> <span class="kwd">ht_key</span><span class="sym">(</span>a<span class="sym">));</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">procedure</span> <span class="kwd">quicksort</span><span class="sym">(</span><span class="kwa">var</span> list<span class="sym">:</span> <span class="kwa">array of</span> ht_pnode<span class="sym">;</span> l<span class="sym">,</span> r <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">);</span>
<span class="kwa">var</span>
  i<span class="sym">,</span> j <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;</span>
  p<span class="sym">,</span> q <span class="sym">:</span> ht_pnode<span class="sym">;</span>
<span class="kwa">begin</span>
 <span class="kwa">repeat</span>
   i <span class="sym">:=</span> l<span class="sym">;</span>
   j <span class="sym">:=</span> r<span class="sym">;</span>
   p <span class="sym">:=</span> list<span class="sym">[ (</span>l <span class="sym">+</span> r<span class="sym">)</span> <span class="kwa">div</span> <span class="num">2</span> <span class="sym">];</span>
   <span class="kwa">repeat</span>
     <span class="kwa">while</span> <span class="kwd">compare</span><span class="sym">(</span>p<span class="sym">,</span> list<span class="sym">[</span>i<span class="sym">]) &gt;</span> <span class="num">0</span> <span class="kwa">do</span>
       i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
     <span class="kwa">while</span> <span class="kwd">compare</span><span class="sym">(</span>p<span class="sym">,</span> list<span class="sym">[</span>j<span class="sym">]) &lt;</span> <span class="num">0</span> <span class="kwa">do</span>
       j <span class="sym">:=</span> j <span class="sym">-</span> <span class="num">1</span><span class="sym">;</span>
     <span class="kwa">If</span> i <span class="sym">&lt;=</span> j <span class="kwa">then</span>
     <span class="kwa">begin</span>
       q <span class="sym">:=</span> list<span class="sym">[</span>i<span class="sym">];</span>
       list<span class="sym">[</span>i<span class="sym">] :=</span> list<span class="sym">[</span>j<span class="sym">];</span>
       list<span class="sym">[</span>j<span class="sym">] :=</span> q<span class="sym">;</span>
       i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
       j <span class="sym">:=</span> j <span class="sym">-</span> <span class="num">1</span><span class="sym">;</span>
     <span class="kwa">end</span><span class="sym">;</span>
   <span class="kwa">until</span> i <span class="sym">&gt;</span> j<span class="sym">;</span>
   <span class="kwa">if</span> l <span class="sym">&lt;</span> j <span class="kwa">then</span>
     <span class="kwd">quicksort</span><span class="sym">(</span>list<span class="sym">,</span> l<span class="sym">,</span> j<span class="sym">);</span>
   l <span class="sym">:=</span> i<span class="sym">;</span>
 <span class="kwa">until</span> i <span class="sym">&gt;=</span> r<span class="sym">;</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">procedure</span> <span class="kwd">printwords</span><span class="sym">(</span>dict<span class="sym">:</span> ht_pht<span class="sym">);</span>
<span class="kwa">var</span>
  sortarr<span class="sym">:</span> <span class="kwa">array of</span> ht_pnode<span class="sym">;</span>
  node<span class="sym">:</span> ht_pnode<span class="sym">;</span>
  i<span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span>
<span class="kwa">begin</span>
  <span class="kwd">setlength</span><span class="sym">(</span>sortarr<span class="sym">,</span> <span class="kwd">ht_count</span><span class="sym">(</span>dict<span class="sym">));</span>
  node <span class="sym">:=</span> <span class="kwd">ht_first</span><span class="sym">(</span>dict<span class="sym">);</span>
  i <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
  <span class="kwa">while</span> node <span class="sym">&lt;&gt;</span> <span class="kwa">nil do</span>
  <span class="kwa">begin</span>
    sortarr<span class="sym">[</span>i<span class="sym">] :=</span> node<span class="sym">;</span>
    <span class="kwd">inc</span><span class="sym">(</span>i<span class="sym">);</span>
    node <span class="sym">:=</span> <span class="kwd">ht_next</span><span class="sym">(</span>dict<span class="sym">);</span>
  <span class="kwa">end</span><span class="sym">;</span>
  <span class="kwd">quicksort</span><span class="sym">(</span>sortarr<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="kwd">ht_count</span><span class="sym">(</span>dict<span class="sym">)-</span><span class="num">1</span><span class="sym">);</span>

  <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">to</span> <span class="kwd">ht_count</span><span class="sym">(</span>dict<span class="sym">)-</span><span class="num">1</span> <span class="kwa">do</span>
    <span class="kwd">writeln</span><span class="sym">(</span><span class="kwd">ht_val</span><span class="sym">(</span>sortarr<span class="sym">[</span>i<span class="sym">]):</span><span class="num">7</span><span class="sym">,</span> <span class="str">' '</span><span class="sym">,</span> <span class="kwd">ht_key</span><span class="sym">(</span>sortarr<span class="sym">[</span>i<span class="sym">]));</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">var</span>
  dict<span class="sym">:</span> ht_pht<span class="sym">;</span>
<span class="kwa">begin</span>
  dict <span class="sym">:=</span> <span class="kwd">ht_create</span><span class="sym">(</span><span class="num">2048</span><span class="sym">);</span>
  <span class="kwd">readwords</span><span class="sym">(</span>dict<span class="sym">);</span>
  <span class="kwd">printwords</span><span class="sym">(</span>dict<span class="sym">);</span>
  <span class="kwd">ht_destroy</span><span class="sym">(</span>dict<span class="sym">);</span>
<span class="kwa">end</span>.
