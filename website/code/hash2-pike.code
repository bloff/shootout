<span class="dir">#!/usr/bin/pike</span>
<span class="slc">// -*- mode: pike -*-</span>
<span class="slc">// $Id: hash2-pike.code,v 1.6 2005-12-02 08:06:01 bfulgham Exp $</span>
<span class="slc">// http://www.bagley.org/~doug/shootout/</span>

<span class="kwb">void</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> argv<span class="sym">) {</span>
    <span class="kwb">int</span> n <span class="sym">= (</span><span class="kwb">int</span><span class="sym">)</span>argv<span class="sym">[-</span><span class="num">1</span><span class="sym">];</span>
    <span class="kwd">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>

    <span class="kwb">mapping</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">:</span><span class="kwb">int</span><span class="sym">)</span> hash1 <span class="sym">= ([]);</span>
    <span class="kwb">mapping</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">:</span><span class="kwb">int</span><span class="sym">)</span> hash2 <span class="sym">= ([]);</span>
    <span class="kwd">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span><span class="num">10000</span><span class="sym">;</span> i<span class="sym">++)</span>
	hash1<span class="sym">[</span><span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> i<span class="sym">] =</span> i<span class="sym">;</span>
    <span class="kwd">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {</span>
	<span class="kwd">foreach</span> <span class="sym">(</span><span class="kwa">indices</span><span class="sym">(</span>hash1<span class="sym">),</span> <span class="kwb">string</span> k<span class="sym">) {</span>
	    hash2<span class="sym">[</span>k<span class="sym">] +=</span> hash1<span class="sym">[</span>k<span class="sym">];</span>
	<span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%d %d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> hash1<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">],</span> hash1<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">],</span>
	  hash2<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">],</span> hash2<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">]);</span>
<span class="sym">}</span>
