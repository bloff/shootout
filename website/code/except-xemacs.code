<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: emacs-lisp -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: except-xemacs.code,v 1.2 2004-11-08 08:15:13 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(defvar HI 0)
(defvar LO 0)
  
(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">hi_ex</FONT></B> (val)
  (cons 'hi_ex val))
  
(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">lo_ex</FONT></B> (val)
  (cons 'lo_ex val))
  
(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">some_fun</FONT></B> (num)
  (<B><FONT COLOR="#A020F0">catch</FONT></B> t
    (hi_fun num)))

(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">hi_fun</FONT></B> (num)
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((val (<B><FONT COLOR="#A020F0">catch</FONT></B> 'Hi_Exception (lo_fun num))))
    (<B><FONT COLOR="#A020F0">if</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (consp val)
	     (eq (car val) 'hi_ex))
	(setq HI (1+ HI)))))

(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">lo_fun</FONT></B> (num)
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((val (<B><FONT COLOR="#A020F0">catch</FONT></B> 'Lo_Exception (blowup num))))
    (<B><FONT COLOR="#A020F0">if</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (consp val)
	     (eq (car val) 'lo_ex))
	(setq LO (1+ LO)))))

(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">blowup</FONT></B> (num)
  (<B><FONT COLOR="#A020F0">if</FONT></B> (= 0 (mod num 2))
      (<B><FONT COLOR="#A020F0">throw</FONT></B> 'Hi_Exception (hi_ex num))
    (<B><FONT COLOR="#A020F0">throw</FONT></B> 'Lo_Exception (lo_ex num))))

(<B><FONT COLOR="#A020F0">defun</FONT></B> <B><FONT COLOR="#0000FF">main</FONT></B> ()
  (<B><FONT COLOR="#A020F0">let</FONT></B>* ((arg (car command-line-args-left))
	 (n (<B><FONT COLOR="#A020F0">if</FONT></B> arg (string-to-number arg) 1)))
    (<B><FONT COLOR="#A020F0">while</FONT></B> (&gt; n 0)
      (setq n (1- n))
      (some_fun n)))
  (princ (format <B><FONT COLOR="#BC8F8F">&quot;Exceptions: HI=%d / LO=%d\n&quot;</FONT></B> HI LO)))</pre></td></tr></table>
