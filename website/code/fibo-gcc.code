<span class="com">/* -*- mode: c -*-
 * $Id: fibo-gcc.code,v 1.10 2005-03-21 03:34:32 bfulgham Exp $
 * http://shootout.alioth.debian.org/
 * Revised with register allocation by David Bronaugh
 */</span>

<span class="dir">#include &lt;stdio.h&gt;
</span><span class="dir">#include &lt;stdlib.h&gt;
</span>
<span class="kwb">unsigned long
</span>fib<span class="sym">(</span><span class="kwb">unsigned long</span> n<span class="sym">) {
</span>    <span class="kwa">return</span><span class="sym">( (</span>n <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span> ? n <span class="sym">: (</span>fib<span class="sym">(</span>n<span class="num">-2</span><span class="sym">) +</span> fib<span class="sym">(</span>n<span class="num">-1</span><span class="sym">)) );
}

</span><span class="kwb">int
</span>main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span>    <span class="kwb">int</span> N <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span>    printf<span class="sym">(</span><span class="str">&quot;%ld</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> fib<span class="sym">(</span>N<span class="sym">));
</span>    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
}</span>
