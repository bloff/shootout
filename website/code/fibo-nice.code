<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy

To compile:
   nicec --sourcepath=.. -d=. -a fibo.jar fibo
To run:
   java -ea -jar fibo.jar 32
*/</span>

<span class="kwa">import</span> ackermann<span class="sym">;</span> <span class="slc">// reuse toSinglePositiveInt
</span>
<span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span>    println<span class="sym">(</span> fib<span class="sym">(</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">) ) );
}

</span><span class="kwb">int</span> fib<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)
</span>   <span class="kwa">requires</span> n <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">;</span> <span class="slc">// precondition
</span>
fib<span class="sym">(</span>n<span class="sym">) {
</span>   <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span> <span class="kwa">return</span> <span class="num">1</span><span class="sym">;</span> <span class="kwa">else return</span> fib<span class="sym">(</span>n<span class="num">-2</span><span class="sym">) +</span> fib<span class="sym">(</span>n<span class="num">-1</span><span class="sym">);
}
</span>
