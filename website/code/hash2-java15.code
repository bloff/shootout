<span class="slc">// $Id: hash2-java15.code,v 1.1 2005-12-31 16:45:36 bfulgham Exp $</span>
<span class="slc">// http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;</span>

<span class="kwa">class</span> Val <span class="sym">{</span>
    <span class="kwb">int</span> val<span class="sym">;</span>
    <span class="kwd">Val</span><span class="sym">(</span><span class="kwb">int</span> init<span class="sym">) {</span> val <span class="sym">=</span> init<span class="sym">; }</span>
<span class="sym">}</span>

<span class="kwa">public class</span> hash2 <span class="sym">{</span>
    <span class="kwa">public static</span> <span class="kwb">void</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[]) {</span>
	<span class="kwb">int</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span><span class="kwd">parseInt</span><span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
	<span class="kwc">HashMap</span> hash1 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">HashMap</span><span class="sym">(</span><span class="num">10000</span><span class="sym">);</span>
	<span class="kwc">HashMap</span> hash2 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">HashMap</span><span class="sym">(</span>n<span class="sym">);</span>

	<span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">10000</span><span class="sym">;</span> i<span class="sym">++)</span>
	    hash1<span class="sym">.</span><span class="kwd">put</span><span class="sym">(</span><span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> <span class="kwc">Integer</span><span class="sym">.</span><span class="kwd">toString</span><span class="sym">(</span>i<span class="sym">,</span> <span class="num">10</span><span class="sym">),</span> <span class="kwa">new</span> <span class="kwd">Val</span><span class="sym">(</span>i<span class="sym">));</span>
	<span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++) {</span>
	    <span class="kwc">Iterator</span> it <span class="sym">=</span> hash1<span class="sym">.</span><span class="kwd">entrySet</span><span class="sym">().</span><span class="kwd">iterator</span><span class="sym">();</span>
	    <span class="kwa">while</span><span class="sym">(</span>it<span class="sym">.</span><span class="kwd">hasNext</span><span class="sym">()) {</span>
			<span class="kwc">Map</span><span class="sym">.</span>Entry h1 <span class="sym">= (</span><span class="kwc">Map</span><span class="sym">.</span>Entry<span class="sym">)</span>it<span class="sym">.</span><span class="kwd">next</span><span class="sym">();</span>
			<span class="kwc">String</span> key <span class="sym">= (</span><span class="kwc">String</span><span class="sym">)</span>h1<span class="sym">.</span><span class="kwd">getKey</span><span class="sym">();</span>
			<span class="kwb">int</span> v1 <span class="sym">= ((</span>Val<span class="sym">)</span>h1<span class="sym">.</span><span class="kwd">getValue</span><span class="sym">()).</span>val<span class="sym">;</span>
			<span class="kwa">if</span> <span class="sym">(</span>hash2<span class="sym">.</span><span class="kwd">containsKey</span><span class="sym">(</span>key<span class="sym">))</span>
				<span class="sym">((</span>Val<span class="sym">)</span>hash2<span class="sym">.</span><span class="kwd">get</span><span class="sym">(</span>key<span class="sym">)).</span>val <span class="sym">+=</span> v1<span class="sym">;</span>
			<span class="kwa">else</span>
				hash2<span class="sym">.</span><span class="kwd">put</span><span class="sym">(</span>key<span class="sym">,</span> <span class="kwa">new</span> <span class="kwd">Val</span><span class="sym">(</span>v1<span class="sym">));</span>
	    <span class="sym">}</span>
	<span class="sym">}</span>

	<span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span><span class="kwd">print</span><span class="sym">(((</span>Val<span class="sym">)</span>hash1<span class="sym">.</span><span class="kwd">get</span><span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">)).</span>val    <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span>
	                 <span class="sym">((</span>Val<span class="sym">)</span>hash1<span class="sym">.</span><span class="kwd">get</span><span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">)).</span>val <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span>
	                 <span class="sym">((</span>Val<span class="sym">)</span>hash2<span class="sym">.</span><span class="kwd">get</span><span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">)).</span>val    <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span>
	                 <span class="sym">((</span>Val<span class="sym">)</span>hash2<span class="sym">.</span><span class="kwd">get</span><span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">)).</span>val <span class="sym">+</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
    <span class="sym">}</span>
<span class="sym">}</span>
