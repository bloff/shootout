<span class="com">(* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy (Oberon-2 novice)</span>
<span class="com">*)</span>

<span class="sym">&lt;*</span> MAIN<span class="sym">+ *&gt;</span>
<span class="kwa">MODULE</span> ackermann<span class="sym">;</span>
<span class="kwa">IMPORT</span> Out<span class="sym">,</span> Shootout<span class="sym">;</span>

<span class="kwa">VAR</span> n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>

<span class="kwa">PROCEDURE</span> <span class="kwd">Ack</span> <span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">):</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">IF</span> m<span class="sym">=</span><span class="num">0</span> <span class="kwa">THEN RETURN</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">IF</span> n<span class="sym">=</span><span class="num">0</span> <span class="kwa">THEN RETURN</span> <span class="kwd">Ack</span><span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">RETURN</span> <span class="kwd">Ack</span><span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="kwd">Ack</span><span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">));</span>
<span class="kwa">END</span> Ack<span class="sym">;</span>

<span class="kwa">BEGIN</span>
   n <span class="sym">:=</span> Shootout<span class="sym">.</span><span class="kwd">Argi</span><span class="sym">();</span>
   Out<span class="sym">.</span><span class="kwd">String</span><span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span> <span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>n<span class="sym">,</span><span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">String</span><span class="sym">(</span><span class="str">&quot;): &quot;</span><span class="sym">);</span>
   Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span>n<span class="sym">),</span> <span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span>Ln
<span class="kwa">END</span> ackermann<span class="sym">.</span>
