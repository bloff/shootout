<span class="slc">// $Id: nestedloop-elastic.code,v 1.5 2005-05-15 05:34:03 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span>package nestedloop<span class="sym">;

</span>import basic<span class="sym">;
</span>import sys<span class="sym">;
</span>import array<span class="sym">;

</span><span class="kwc">private</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="kwa">if</span><span class="sym">(</span>array<span class="sym">.</span>length<span class="sym">(</span>sys<span class="sym">.</span>args<span class="sym">) &gt;</span> <span class="num">0</span><span class="sym">) {
</span>    n <span class="sym">=</span> basic<span class="sym">.</span><span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
}</span> <span class="kwa">else</span> <span class="sym">{
</span>    n <span class="sym">=</span> <span class="num">1</span><span class="sym">;
}
</span><span class="kwc">private</span> a<span class="sym">,</span> b<span class="sym">,</span> c<span class="sym">,</span> d<span class="sym">,</span> e<span class="sym">,</span> f<span class="sym">,</span> x <span class="sym">=</span> <span class="num">0</span><span class="sym">;

</span><span class="kwa">for</span> <span class="sym">(</span>a<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> a<span class="sym">&lt;</span>n<span class="sym">;</span> a<span class="sym">++)
</span>    <span class="kwa">for</span> <span class="sym">(</span>b<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> b<span class="sym">&lt;</span>n<span class="sym">;</span> b<span class="sym">++)
</span>        <span class="kwa">for</span> <span class="sym">(</span>c<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> c<span class="sym">&lt;</span>n<span class="sym">;</span> c<span class="sym">++)
</span>            <span class="kwa">for</span> <span class="sym">(</span>d<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> d<span class="sym">&lt;</span>n<span class="sym">;</span> d<span class="sym">++)
</span>                <span class="kwa">for</span> <span class="sym">(</span>e<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> e<span class="sym">&lt;</span>n<span class="sym">;</span> e<span class="sym">++)
</span>                    <span class="kwa">for</span> <span class="sym">(</span>f<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> f<span class="sym">&lt;</span>n<span class="sym">;</span> f<span class="sym">++)
</span>                        x<span class="sym">++;
</span>basic<span class="sym">.</span>print<span class="sym">(</span>x<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
