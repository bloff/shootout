<span class="line">    1 </span><span class="slc">// $Id: sieve-csharp.code,v 1.4 2004-11-13 07:43:20 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="kwa">using</span> System<span class="sym">;
</span><span class="line">    5 </span><span class="sym">
</span><span class="line">    6 </span><span class="sym"></span><span class="kwc">class</span> sieve <span class="sym">{
</span><span class="line">    7 </span><span class="sym"></span>    <span class="kwc">public</span> <span class="kwb">static void</span> Main<span class="sym">(</span>String<span class="sym">[]</span> args<span class="sym">) {
</span><span class="line">    8 </span><span class="sym"></span>        <span class="kwb">int</span> NUM <span class="sym">=</span> System<span class="sym">.</span>Convert<span class="sym">.</span>ToInt32<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">    9 </span><span class="sym"></span>        <span class="kwa">if</span><span class="sym">(</span>NUM <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span> NUM <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span>        <span class="kwb">long</span> i<span class="sym">,</span> k<span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>        <span class="kwb">bool</span><span class="sym">[]</span> flags <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">bool</span><span class="sym">[</span><span class="num">8193</span><span class="sym">];
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwb">int</span> count <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">(</span>NUM<span class="sym">-- &gt;</span> <span class="num">0</span><span class="sym">) {
</span><span class="line">   15 </span><span class="sym"></span>            count <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   16 </span><span class="sym"></span>            <span class="kwa">for</span><span class="sym">(</span>i<span class="sym">=</span><span class="num">2</span><span class="sym">;</span> i <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   17 </span><span class="sym"></span>                flags<span class="sym">[</span>i<span class="sym">] =</span> <span class="kwa">true</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym">            }
</span><span class="line">   19 </span><span class="sym"></span>            <span class="kwa">for</span><span class="sym">(</span>i<span class="sym">=</span><span class="num">2</span><span class="sym">;</span> i <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   20 </span><span class="sym"></span>                <span class="kwa">if</span><span class="sym">(</span>flags<span class="sym">[</span>i<span class="sym">]) {
</span><span class="line">   21 </span><span class="sym"></span>                    <span class="slc">// remove all multiples of prime: i
</span><span class="line">   22 </span><span class="slc"></span>                    <span class="kwa">for</span><span class="sym">(</span>k<span class="sym">=</span>i<span class="sym">+</span>i<span class="sym">;</span> k <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> k<span class="sym">+=</span>i<span class="sym">) {
</span><span class="line">   23 </span><span class="sym"></span>                        flags<span class="sym">[</span>k<span class="sym">] =</span> <span class="kwa">false</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym">                    }
</span><span class="line">   25 </span><span class="sym"></span>                    count<span class="sym">++;
</span><span class="line">   26 </span><span class="sym">                }
</span><span class="line">   27 </span><span class="sym">            }
</span><span class="line">   28 </span><span class="sym">        }
</span><span class="line">   29 </span><span class="sym">
</span><span class="line">   30 </span><span class="sym"></span>        Console<span class="sym">.</span>WriteLine<span class="sym">(</span><span class="str">&quot;Count: {0}&quot;</span><span class="sym">,</span> count<span class="sym">);
</span><span class="line">   31 </span><span class="sym">    }
</span><span class="line">   32 </span><span class="sym">}</span>
