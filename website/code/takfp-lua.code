<span class="slc">--- The Great Computer Language Shootout
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">--
</span><span class="slc">-- implemented by: Isaac Gouy
</span><span class="slc">-- Modified by Mike Pall
</span>
<span class="kwa">local function</span> Tak<span class="sym">(</span>x<span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">)
</span>	<span class="kwa">if</span> y<span class="sym">&gt;=</span>x <span class="kwa">then return</span> z <span class="kwa">end
	return</span> Tak<span class="sym">(</span> Tak<span class="sym">(</span>x<span class="num">-1.0</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> Tak<span class="sym">(</span>y<span class="num">-1.0</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> Tak<span class="sym">(</span>z<span class="num">-1.0</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">) )
</span><span class="kwa">end

</span>n <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">(</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">or</span> <span class="num">1
</span>io.<span class="kwa">write</span><span class="sym">(</span> <span class="kwb">string</span>.<span class="kwa">format</span><span class="sym">(</span><span class="str">&quot;%.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> Tak<span class="sym">(</span>n<span class="sym">*</span><span class="num">3.0</span><span class="sym">,</span>n<span class="sym">*</span><span class="num">2.0</span><span class="sym">,</span>n<span class="sym">*</span><span class="num">1.0</span><span class="sym">)) )
</span>
