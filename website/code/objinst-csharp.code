<span class="slc">// $Id: objinst-csharp.code,v 1.14 2006-03-11 17:57:26 bfulgham Exp $</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>

<span class="kwa">using</span> System<span class="sym">;</span>

<span class="kwc">class</span> Toggle <span class="sym">{</span>
    <span class="kwc">public</span> <span class="kwb">bool</span> state <span class="sym">=</span> <span class="kwa">true</span><span class="sym">;</span>
    <span class="kwc">public</span> <span class="kwd">Toggle</span><span class="sym">(</span><span class="kwb">bool</span> start_state<span class="sym">) {</span>
        state <span class="sym">=</span> start_state<span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwc">public</span> <span class="kwb">bool</span> <span class="kwd">value</span><span class="sym">() {</span>
        <span class="kwa">return</span> state<span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwc">public</span> Toggle <span class="kwd">activate</span><span class="sym">() {</span>
        state <span class="sym">= !</span>state<span class="sym">;</span>
        <span class="kwa">return this</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwc">class</span> NthToggle <span class="sym">:</span> Toggle <span class="sym">{</span>
    <span class="kwb">int</span> count_max <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
    <span class="kwb">int</span> counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>

    <span class="kwc">public</span> <span class="kwd">NthToggle</span><span class="sym">(</span><span class="kwb">bool</span> start_state<span class="sym">,</span> <span class="kwb">int</span> max_counter<span class="sym">) :</span> <span class="kwd">base</span><span class="sym">(</span>start_state<span class="sym">) {</span>
        count_max <span class="sym">=</span> max_counter<span class="sym">;</span>
        counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwc">public</span> <span class="kwa">new</span> NthToggle <span class="kwd">activate</span><span class="sym">() {</span>
        counter <span class="sym">+=</span> <span class="num">1</span><span class="sym">;</span>
        <span class="kwa">if</span> <span class="sym">(</span>counter <span class="sym">&gt;=</span> count_max<span class="sym">) {</span>
            state <span class="sym">= !</span>state<span class="sym">;</span>
            counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
        <span class="sym">}</span>
        <span class="kwa">return this</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwc">class</span> objinst <span class="sym">{</span>
    <span class="kwc">public</span> <span class="kwb">static void</span> <span class="kwd">Main</span><span class="sym">(</span>String<span class="sym">[]</span> args<span class="sym">) {</span>

        <span class="kwb">int</span> n <span class="sym">=</span> System<span class="sym">.</span>Convert<span class="sym">.</span><span class="kwd">ToInt32</span><span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
        <span class="kwa">if</span><span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>

        Toggle toggle1 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">Toggle</span><span class="sym">(</span><span class="kwa">true</span><span class="sym">);</span>
        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">5</span><span class="sym">;</span> i<span class="sym">++) {</span>
            Console<span class="sym">.</span><span class="kwd">WriteLine</span><span class="sym">((</span>toggle1<span class="sym">.</span><span class="kwd">activate</span><span class="sym">().</span><span class="kwd">value</span><span class="sym">())</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span><span class="sym">);</span>
        <span class="sym">}</span>

        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++) {</span>
            Toggle toggle <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">Toggle</span><span class="sym">(</span><span class="kwa">true</span><span class="sym">);</span>
        <span class="sym">}</span>
        Console<span class="sym">.</span><span class="kwd">WriteLine</span><span class="sym">();</span>


        NthToggle ntoggle1 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">NthToggle</span><span class="sym">(</span><span class="kwa">true</span><span class="sym">,</span> <span class="num">3</span><span class="sym">);</span>
        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">8</span><span class="sym">;</span> i<span class="sym">++) {</span>
            Console<span class="sym">.</span><span class="kwd">WriteLine</span><span class="sym">((</span>ntoggle1<span class="sym">.</span><span class="kwd">activate</span><span class="sym">().</span><span class="kwd">value</span><span class="sym">())</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span><span class="sym">);</span>
        <span class="sym">}</span>
        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++) {</span>
            NthToggle toggle <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">NthToggle</span><span class="sym">(</span><span class="kwa">true</span><span class="sym">,</span> <span class="num">3</span><span class="sym">);</span>
        <span class="sym">}</span>
    <span class="sym">}</span>
<span class="sym">}</span>
