<span class="line">    1 </span><span class="str">&quot;  The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="str">    contributed by Paolo Bonzini
</span><span class="line">    3 </span><span class="str"> 
</span><span class="line">    4 </span><span class="str">    To run: gst -QI /usr/local/share/smalltalk/gst.im prodcons.st -a 100000
</span><span class="line">    5 </span><span class="str">  &quot;</span>
<span class="line">    6 </span>
<span class="line">    7 </span>  <span class="sym">|</span> mutex empty full data consumed produced n join <span class="sym">|
</span><span class="line">    8 </span><span class="sym"> </span>n <span class="sym">:=</span> Smalltalk arguments isEmpty
<span class="line">    9 </span>    ifTrue<span class="sym">: [</span> <span class="num">10000</span> <span class="sym">]
</span><span class="line">   10 </span><span class="sym"> </span>   ifFalse<span class="sym">: [</span> <span class="num">1</span> max<span class="sym">:</span> Smalltalk arguments first asInteger <span class="sym">]</span>.
<span class="line">   11 </span>
<span class="line">   12 </span>  mutex <span class="sym">:=</span> Semaphore forMutualExclusion.
<span class="line">   13 </span> empty <span class="sym">:=</span> Semaphore new.
<span class="line">   14 </span> full <span class="sym">:=</span> Semaphore new.
<span class="line">   15 </span> consumed <span class="sym">:=</span> produced <span class="sym">:=</span> <span class="num">0</span>.
<span class="line">   16 </span>
<span class="line">   17 </span>  join <span class="sym">:=</span> Semaphore new.
<span class="line">   18 </span>
<span class="line">   19 </span>  empty signal.
<span class="line">   20 </span>
<span class="line">   21 </span>  <span class="sym">[
</span><span class="line">   22 </span><span class="sym">    |</span> i <span class="sym">|
</span><span class="line">   23 </span><span class="sym"> </span>   i <span class="sym">:=</span> <span class="num">0</span>.
<span class="line">   24 </span>    <span class="sym">[
</span><span class="line">   25 </span><span class="sym"> </span>      full wait.
<span class="line">   26 </span>       mutex wait.
<span class="line">   27 </span>       i <span class="sym">:=</span> data.
<span class="line">   28 </span>       mutex signal.
<span class="line">   29 </span>       empty signal.
<span class="line">   30 </span>       consumed <span class="sym">:=</span> consumed <span class="sym">+</span> <span class="num">1</span>.
<span class="line">   31 </span>       i <span class="sym">=</span> n
<span class="line">   32 </span>     <span class="sym">]</span> whileFalse.
<span class="line">   33 </span>
<span class="line">   34 </span>      join signal.
<span class="line">   35 </span> <span class="sym">]</span> fork.
<span class="line">   36 </span>
<span class="line">   37 </span>
<span class="line">   38 </span>   <span class="sym">[
</span><span class="line">   39 </span><span class="sym"> </span>   <span class="num">1</span> to<span class="sym">:</span> n <span class="kwa">do</span><span class="sym">: [ :</span>i <span class="sym">|
</span><span class="line">   40 </span><span class="sym"> </span>      empty wait.
<span class="line">   41 </span>       mutex wait.
<span class="line">   42 </span>       data <span class="sym">:=</span> i.
<span class="line">   43 </span>       mutex signal.
<span class="line">   44 </span>       full signal.
<span class="line">   45 </span>       produced <span class="sym">:=</span> produced <span class="sym">+</span> <span class="num">1</span>.
<span class="line">   46 </span>    <span class="sym">]</span>.
<span class="line">   47 </span>
<span class="line">   48 </span>     join signal.
<span class="line">   49 </span> <span class="sym">]</span> fork.
<span class="line">   50 </span>
<span class="line">   51 </span>  join wait.
<span class="line">   52 </span> join wait.
<span class="line">   53 </span>
<span class="line">   54 </span>  <span class="sym">(</span><span class="str">'%1 %2'</span> bindWith<span class="sym">:</span> produced with<span class="sym">:</span> consumed<span class="sym">)</span> displayNl <span class="sym">!</span>
