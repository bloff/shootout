<span class="dir">#!/bin/env groovy
</span><span class="com">/*
	$Id: objinst-groovy.code,v 1.5 2005-10-01 07:37:29 bfulgham Exp $

	The Great Computer Language Shootout
	http://shootout.alioth.debian.org/

	contributed by Jochen Hinrichsen
*/</span>

<span class="kwc">class</span> Toggle <span class="sym">{

</span>	<span class="kwc">public</span> state <span class="sym">=</span> <span class="kwa">false

</span>	<span class="kwc">public</span> activate<span class="sym">() {
</span>		state <span class="sym">= !</span>state
		<span class="kwa">this
</span>	<span class="sym">}

</span>	<span class="kwc">public</span> value<span class="sym">() {
</span>		state
	<span class="sym">}

}

</span><span class="kwc">class</span> NthToggle extends Toggle <span class="sym">{

</span>	<span class="kwc">public</span> counter <span class="sym">=</span> <span class="num">0
</span>	<span class="kwc">public</span> counterMax <span class="sym">=</span> <span class="num">0

</span>	<span class="kwc">public</span> activate<span class="sym">() {
</span>		assert counter <span class="sym">!=</span> null
		assert counterMax <span class="sym">!=</span> null
		assert state <span class="sym">!=</span> null
		counter <span class="sym">++
</span>		<span class="kwa">if</span> <span class="sym">(</span>counter <span class="sym">&gt;=</span> counterMax<span class="sym">) {
</span>			state <span class="sym">= !</span>state
			counter <span class="sym">=</span> <span class="num">0
</span>		<span class="sym">}
</span>		<span class="kwa">this
</span>	<span class="sym">}
}

</span>def n <span class="sym">=</span> args<span class="sym">.</span>length <span class="sym">==</span> <span class="num">0</span> ? <span class="num">1</span> <span class="sym">:</span> args<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>toInteger<span class="sym">()

</span><span class="slc">// Create a toggle object and activate 5 times
</span>toggle <span class="sym">=</span> <span class="kwa">new</span> Toggle<span class="sym">(</span>state<span class="sym">:</span><span class="kwa">true</span><span class="sym">)
(</span><span class="num">1</span><span class="sym">.</span><span class="num">.5</span><span class="sym">).</span>each<span class="sym">() {
</span>	println<span class="sym">(</span>toggle<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">()</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span><span class="sym">)
}

</span><span class="slc">// Create N toggle objects and activate each 8 times
</span>def toggles <span class="sym">=</span> <span class="kwa">new</span> Toggle<span class="sym">[</span>n<span class="sym">]
(</span><span class="num">0</span><span class="sym">..&lt;</span>n<span class="sym">).</span>each<span class="sym">() {
</span>	toggles<span class="sym">[</span>it<span class="sym">] =</span> <span class="kwa">new</span> Toggle<span class="sym">(</span>state<span class="sym">:</span><span class="kwa">true</span><span class="sym">)
}

</span>println <span class="str">&quot;&quot;</span>

<span class="sym">(</span><span class="num">1</span><span class="sym">.</span><span class="num">.8</span><span class="sym">).</span>each<span class="sym">() {
</span>	toggles<span class="sym">.</span>each<span class="sym">() {
</span>		it<span class="sym">.</span>activate<span class="sym">()
	}
}

</span>def nthToggle <span class="sym">=</span> <span class="kwa">new</span> NthToggle<span class="sym">(</span>state<span class="sym">:</span><span class="kwa">true</span><span class="sym">,</span> counterMax<span class="sym">:</span><span class="num">3</span><span class="sym">)
</span>assert nthToggle<span class="sym">.</span>counterMax <span class="sym">=</span> <span class="num">3

</span><span class="sym">(</span><span class="num">1</span><span class="sym">.</span><span class="num">.8</span><span class="sym">).</span>each<span class="sym">() {
</span>	println<span class="sym">(</span>nthToggle<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">()</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span><span class="sym">)
</span>	<span class="slc">// println(nthToggle.activate())
</span><span class="sym">}

(</span><span class="num">1</span><span class="sym">..</span>n<span class="sym">).</span>each<span class="sym">() {
</span>	<span class="kwa">new</span> NthToggle<span class="sym">(</span>state<span class="sym">:</span><span class="kwa">true</span><span class="sym">,</span> counterMax<span class="sym">:</span><span class="num">3</span><span class="sym">)
}

</span><span class="slc">// EOF
</span>
