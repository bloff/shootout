<span class="slc">#!/usr/bin/ruby
</span><span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org
</span><span class="slc">#
</span><span class="slc"># Ported by Michael Neumann from the C gcc version, which was written by
</span><span class="slc"># Christoph Bauer.
</span>
SOLAR_MASS = <span class="num">4</span> <span class="sym">*</span> Math<span class="sym">::</span>PI<span class="sym">**</span><span class="num">2
</span>DAYS_PER_YEAR = <span class="num">365.24

</span>Planet = Struct.new<span class="sym">(:</span>x<span class="sym">, :</span>y<span class="sym">, :</span>z<span class="sym">, :</span>vx<span class="sym">, :</span>vy<span class="sym">, :</span>vz<span class="sym">, :</span>mass<span class="sym">)

</span><span class="kwa">def</span> advance<span class="sym">(</span>bodies<span class="sym">,</span> dt<span class="sym">)
</span>  nbodies = bodies.size
  <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">0</span> ... nbodies
    b = bodies<span class="sym">[</span>i<span class="sym">]
</span>    <span class="kwa">for</span> j <span class="kwa">in</span> <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> ... nbodies
      b2 = bodies<span class="sym">[</span>j<span class="sym">]
</span>      dx = b.x <span class="sym">-</span> b2.x
      dy = b.y <span class="sym">-</span> b2.y
      dz = b.z <span class="sym">-</span> b2.z
      distance = Math.sqrt<span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)
</span>      mag = dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)
</span>      b_mass_mag<span class="sym">,</span> b2_mass_mag = b.mass <span class="sym">*</span> mag<span class="sym">,</span> b2.mass <span class="sym">*</span> mag
      b.vx <span class="sym">-</span>= dx <span class="sym">*</span> b2_mass_mag
      b.vy <span class="sym">-</span>= dy <span class="sym">*</span> b2_mass_mag
      b.vz <span class="sym">-</span>= dz <span class="sym">*</span> b2_mass_mag
      b2.vx <span class="sym">+</span>= dx <span class="sym">*</span> b_mass_mag
      b2.vy <span class="sym">+</span>= dy <span class="sym">*</span> b_mass_mag
      b2.vz <span class="sym">+</span>= dz <span class="sym">*</span> b_mass_mag
    <span class="kwa">end
  end
  for</span> b <span class="kwa">in</span> bodies
    b.x <span class="sym">+</span>= dt <span class="sym">*</span> b.vx
    b.y <span class="sym">+</span>= dt <span class="sym">*</span> b.vy
    b.z <span class="sym">+</span>= dt <span class="sym">*</span> b.vz
  <span class="kwa">end
end

def</span> energy<span class="sym">(</span>bodies<span class="sym">)
</span>  e = <span class="num">0.0
</span>  nbodies = bodies.size
  <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">0</span> ... nbodies
    b = bodies<span class="sym">[</span>i<span class="sym">]
</span>    e <span class="sym">+</span>= <span class="num">0.5</span> <span class="sym">*</span> b.mass <span class="sym">* (</span>b.vx <span class="sym">*</span> b.vx <span class="sym">+</span> b.vy <span class="sym">*</span> b.vy <span class="sym">+</span> b.vz <span class="sym">*</span> b.vz<span class="sym">)
</span>    <span class="kwa">for</span> j <span class="kwa">in</span> <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> ... nbodies
      b2 = bodies<span class="sym">[</span>j<span class="sym">]
</span>      dx = b.x <span class="sym">-</span> b2.x
      dy = b.y <span class="sym">-</span> b2.y
      dz = b.z <span class="sym">-</span> b2.z
      distance = Math.sqrt<span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)
</span>      e <span class="sym">-</span>= <span class="sym">(</span>b.mass <span class="sym">*</span> b2.mass<span class="sym">) /</span> distance
    <span class="kwa">end
  end
  return</span> e
<span class="kwa">end

def</span> offset_momentum<span class="sym">(</span>bodies<span class="sym">)
</span>  px<span class="sym">,</span> py<span class="sym">,</span> pz = <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0

</span>  <span class="kwa">for</span> b <span class="kwa">in</span> bodies
    m = b.mass
    px <span class="sym">+</span>= b.vx <span class="sym">*</span> m
    py <span class="sym">+</span>= b.vy <span class="sym">*</span> m
    pz <span class="sym">+</span>= b.vz <span class="sym">*</span> m
  <span class="kwa">end

</span>  b = bodies<span class="sym">[</span><span class="num">0</span><span class="sym">]
</span>  b.vx = <span class="sym">-</span> px <span class="sym">/</span> SOLAR_MASS
  b.vy = <span class="sym">-</span> py <span class="sym">/</span> SOLAR_MASS
  b.vz = <span class="sym">-</span> pz <span class="sym">/</span> SOLAR_MASS
<span class="kwa">end

</span>BODIES = <span class="sym">[
</span>  <span class="slc"># sun
</span>  Planet.new<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> SOLAR_MASS<span class="sym">),

</span>  <span class="slc"># jupiter
</span>  Planet.new<span class="sym">(
</span>    <span class="num">4.84143144246472090e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
    -</span><span class="num">1.16032004402742839e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
    -</span><span class="num">1.03622044471123109e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
</span>    <span class="num">1.66007664274403694e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">7.69901118419740425e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
    -</span><span class="num">6.90460016972063023e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">9.54791938424326609e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS <span class="sym">),

</span>  <span class="slc"># saturn
</span>  Planet.new<span class="sym">(
</span>    <span class="num">8.34336671824457987e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
</span>    <span class="num">4.12479856412430479e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
    -</span><span class="num">4.03523417114321381e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
    -</span><span class="num">2.76742510726862411e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">4.99852801234917238e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">2.30417297573763929e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">2.85885980666130812e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS <span class="sym">),

</span>  <span class="slc"># uranus
</span>  Planet.new<span class="sym">(
</span>    <span class="num">1.28943695621391310e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
    -</span><span class="num">1.51111514016986312e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
    -</span><span class="num">2.23307578892655734e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
</span>    <span class="num">2.96460137564761618e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">2.37847173959480950e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
    -</span><span class="num">2.96589568540237556e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">4.36624404335156298e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS <span class="sym">),

</span>  <span class="slc"># neptune
</span>  Planet.new<span class="sym">(
</span>    <span class="num">1.53796971148509165e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
    -</span><span class="num">2.59193146099879641e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
</span>    <span class="num">1.79258772950371181e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
</span>    <span class="num">2.68067772490389322e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">1.62824170038242295e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
    -</span><span class="num">9.51592254519715870e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,
</span>    <span class="num">5.15138902046611451e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS <span class="sym">)
]

</span><span class="kwa">if</span> __FILE__ == $<span class="num">0
</span>  n = Integer<span class="sym">(</span><span class="kwa">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">])

</span>  offset_momentum<span class="sym">(</span>BODIES<span class="sym">)
</span>  puts energy<span class="sym">(</span>BODIES<span class="sym">)
</span>  n.times <span class="sym">{</span> advance<span class="sym">(</span>BODIES<span class="sym">,</span> <span class="num">0.01</span><span class="sym">) }
</span>  puts energy<span class="sym">(</span>BODIES<span class="sym">)
</span><span class="kwa">end</span>
