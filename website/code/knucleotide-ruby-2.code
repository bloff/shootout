<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org</span>
<span class="slc">#</span>
<span class="slc"># contributed by jose fco. gonzalez</span>
<span class="slc"># modified by Sokolov Yura</span>

seq = String<span class="sym">.</span>new

<span class="kwa">def</span> <span class="kwd">frecuency</span><span class="sym">(</span> seq<span class="sym">,</span>length )
    n<span class="sym">,</span> table = seq<span class="sym">.</span>length <span class="sym">-</span> length <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> Hash<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">0</span>)
    f<span class="sym">,</span> i = <span class="kwa">nil</span><span class="sym">,</span> <span class="kwa">nil</span>
    <span class="sym">(</span><span class="num">0</span> <span class="sym">...</span> length)<span class="sym">.</span>each <span class="kwa">do</span> <span class="sym">|</span>f<span class="sym">|</span>
        <span class="sym">(</span>f <span class="sym">...</span> n)<span class="sym">.</span><span class="kwd">step</span><span class="sym">(</span>length) <span class="kwa">do</span> <span class="sym">|</span>i<span class="sym">|</span>
            table<span class="sym">[</span>seq<span class="sym">[</span>i<span class="sym">,</span>length<span class="sym">]] +</span>= <span class="num">1</span>
        <span class="kwa">end</span>
    <span class="kwa">end</span>
    <span class="sym">[</span>n<span class="sym">,</span>table<span class="sym">]</span>

<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">sort_by_freq</span><span class="sym">(</span> seq<span class="sym">,</span>length )
    n<span class="sym">,</span>table = <span class="kwd">frecuency</span><span class="sym">(</span> seq<span class="sym">,</span>length )
    a<span class="sym">,</span> b<span class="sym">,</span> v = <span class="kwa">nil</span><span class="sym">,</span> <span class="kwa">nil</span><span class="sym">,</span> <span class="kwa">nil</span>
    table<span class="sym">.</span>sort<span class="sym">{|</span>a<span class="sym">,</span>b<span class="sym">|</span> b<span class="sym">[</span><span class="num">1</span><span class="sym">] &lt;</span>=<span class="sym">&gt;</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">]}.</span>each <span class="kwa">do</span> <span class="sym">|</span>v<span class="sym">|</span>
        puts <span class="str">&quot;%s %.3f&quot;</span> % <span class="sym">[</span>v<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>upcase<span class="sym">,((</span>v<span class="sym">[</span><span class="num">1</span><span class="sym">]*</span><span class="num">100</span>)<span class="sym">.</span>to_f<span class="sym">/</span>n)<span class="sym">]</span>
    <span class="kwa">end</span>
    puts
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">find_seq</span><span class="sym">(</span> seq<span class="sym">,</span>s )
    n<span class="sym">,</span>table = <span class="kwd">frecuency</span><span class="sym">(</span> seq<span class="sym">,</span>s<span class="sym">.</span>length )
    puts <span class="str">&quot;#{table[s].to_s}</span><span class="esc">\t</span><span class="str">#{s.upcase}&quot;</span>
<span class="kwa">end</span>

line = <span class="kwc">STDIN</span><span class="sym">.</span>gets <span class="kwa">while</span> line <span class="sym">!</span>~ <span class="sym">/</span>^<span class="sym">&gt;</span>THREE<span class="sym">/</span>
line = <span class="kwc">STDIN</span><span class="sym">.</span>gets
<span class="kwa">while</span> <span class="sym">(</span>line <span class="sym">!</span>~ <span class="sym">/</span>^<span class="sym">&gt;/</span>) <span class="sym">&amp;</span> line <span class="kwa">do</span>
    seq <span class="sym">&lt;&lt;</span> line<span class="sym">.</span>chomp
    line = <span class="kwc">STDIN</span><span class="sym">.</span>gets
<span class="kwa">end</span>

<span class="sym">[</span><span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">].</span>each <span class="sym">{|</span>i<span class="sym">|</span> <span class="kwd">sort_by_freq</span><span class="sym">(</span> seq<span class="sym">,</span>i ) <span class="sym">}</span>

%<span class="kwd">w</span><span class="sym">(</span>ggt ggta ggtatt ggtattttaatt ggtattttaatttatagt)<span class="sym">.</span>each<span class="sym">{|</span>s<span class="sym">|</span> <span class="kwd">find_seq</span><span class="sym">(</span> seq<span class="sym">,</span>s) <span class="sym">}</span>
