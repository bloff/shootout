<span class="slc">;;; -*- mode: emacs-lisp -*-
</span><span class="slc">;;; $Id: hash-xemacs.code,v 1.5 2005-09-20 08:15:04 bfulgham Exp $
</span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span>
<span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">()
  (</span>let<span class="sym">* ((</span>arg <span class="sym">(</span><span class="kwa">car command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>args<span class="sym">-</span>left<span class="sym">))
	 (</span>n <span class="sym">(</span><span class="kwa">if</span> arg <span class="sym">(</span>string<span class="sym">-</span>to<span class="sym">-</span>number arg<span class="sym">)</span> <span class="num">1</span><span class="sym">))
	 (</span><span class="kwa">last</span> <span class="sym">(-</span> n <span class="num">1</span><span class="sym">))
	 (</span>c <span class="num">0</span><span class="sym">)
	 (</span>x <span class="sym">(</span>make<span class="sym">-</span>hash<span class="sym">-</span>table <span class="sym">:</span>test <span class="str">'equal :size n)))
    (do ((i 1 (+ i 1)))
	((&gt; i n))
      (puthash (format &quot;%x&quot; i) i x))
    (do ((i last (- i 1)))
	((&lt; i 0))
      (if (gethash (format &quot;%d&quot; i) x)
	  (setq c (+ c 1))))
    (princ (format &quot;%d</span><span class="esc">\n</span><span class="str">&quot; c))))</span>
