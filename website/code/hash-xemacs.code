<span class="slc">;;; -*- mode: emacs-lisp -*-</span>
<span class="slc">;;; $Id: hash-xemacs.code,v 1.7 2006-09-20 05:51:29 bfulgham Exp $</span>
<span class="slc">;;; http://www.bagley.org/~doug/shootout/</span>

<span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">()</span>
  <span class="sym">(</span>let<span class="sym">* ((</span>arg <span class="sym">(</span><span class="kwa">car command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>args<span class="sym">-</span>left<span class="sym">))</span>
	 <span class="sym">(</span>n <span class="sym">(</span><span class="kwa">if</span> arg <span class="sym">(</span>string<span class="sym">-</span>to<span class="sym">-</span>number arg<span class="sym">)</span> <span class="num">1</span><span class="sym">))</span>
	 <span class="sym">(</span><span class="kwa">last</span> <span class="sym">(-</span> n <span class="num">1</span><span class="sym">))</span>
	 <span class="sym">(</span>c <span class="num">0</span><span class="sym">)</span>
	 <span class="sym">(</span>x <span class="sym">(</span>make<span class="sym">-</span>hash<span class="sym">-</span>table <span class="sym">:</span>test <span class="str">'equal :size n)))</span>
<span class="str">    (do ((i 1 (+ i 1)))</span>
<span class="str">	((&gt; i n))</span>
<span class="str">      (puthash (format &quot;%x&quot; i) i x))</span>
<span class="str">    (do ((i last (- i 1)))</span>
<span class="str">	((&lt; i 0))</span>
<span class="str">      (if (gethash (format &quot;%d&quot; i) x)</span>
<span class="str">	  (setq c (+ c 1))))</span>
<span class="str">    (princ (format &quot;%d</span><span class="esc">\n</span><span class="str">&quot; c))))</span>
