<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
module:     matrix
synopsis:   implementation of <B><FONT COLOR="#BC8F8F">&quot;Matrix Multiplication&quot;</FONT></B> benchmark
author:     Peter Hinely
copyright:  public <B><FONT COLOR="#5F9EA0">domain</FONT></B>


<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">constant</FONT></B> <B><FONT COLOR="#228B22">&lt;vector-of-integers&gt;</FONT></B> = <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">limited</FONT></I></B></FONT></B>(<B><FONT COLOR="#228B22">&lt;simple-vector&gt;</FONT></B>, <B><FONT COLOR="#5F9EA0">of:</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>);

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">class</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B> (<B><FONT COLOR="#228B22">&lt;object&gt;</FONT></B>)
  <B><FONT COLOR="#5F9EA0">slot</FONT></B> rows <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>, <B><FONT COLOR="#5F9EA0">required-init-keyword:</FONT></B> <B><FONT COLOR="#5F9EA0">rows:</FONT></B>;
  <B><FONT COLOR="#5F9EA0">slot</FONT></B> columns <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>, <B><FONT COLOR="#5F9EA0">required-init-keyword:</FONT></B> <B><FONT COLOR="#5F9EA0">columns:</FONT></B>;
  <B><FONT COLOR="#5F9EA0">slot</FONT></B> elements <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;vector-of-integers&gt;</FONT></B>;
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">class</FONT></B>;

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">sealed</FONT></B> <B><FONT COLOR="#5F9EA0">domain</FONT></B> <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">make </FONT></I></B></FONT></B>(<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">singleton</FONT></I></B></FONT></B>(<B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>));

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">sealed</FONT></B> <B><FONT COLOR="#5F9EA0">method</FONT></B> <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">initialize </FONT></I></B></FONT></B>(matrix <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>, #key rows <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>, columns <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>) <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">=&gt;</FONT></I></B></FONT></B> ()
  matrix.elements <B><FONT COLOR="#5F9EA0">:</FONT></B>= <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">make</FONT></I></B></FONT></B>(<B><FONT COLOR="#228B22">&lt;vector-of-integers&gt;</FONT></B>, <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">size: </FONT></I></B></FONT></B>(rows * columns), <B><FONT COLOR="#5F9EA0">fill:</FONT></B> 0);
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">method</FONT></B>;

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">inline</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B> <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele </FONT></I></B></FONT></B>(matrix <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>, row <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>, column <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>) <B><FONT COLOR="#A020F0">=&gt;</FONT></B> value <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>;
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">matrix.elements[</FONT></I></B></FONT></B>(row * matrix.columns) + column];
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B>;

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">inline</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B> <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele-setter </FONT></I></B></FONT></B>(new-value <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>, matrix <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>, row <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>, column <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>) <B><FONT COLOR="#A020F0">=&gt;</FONT></B> new-value <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>;
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">matrix.elements[</FONT></I></B></FONT></B>(row * matrix.columns) + column] <B><FONT COLOR="#5F9EA0">:</FONT></B>= new-value;
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B>;

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B> <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">create-matrix </FONT></I></B></FONT></B>(rows <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>, columns <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;integer&gt;</FONT></B>) <B><FONT COLOR="#A020F0">=&gt;</FONT></B> m <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>;
  <B><FONT COLOR="#A020F0">let</FONT></B> m = <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">make</FONT></I></B></FONT></B>(<B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>, <B><FONT COLOR="#5F9EA0">rows:</FONT></B> rows, <B><FONT COLOR="#5F9EA0">columns:</FONT></B> columns);
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for </FONT></I></B></FONT></B>(i <B><FONT COLOR="#A020F0">from</FONT></B> 0 <B><FONT COLOR="#A020F0">below</FONT></B> m.elements.size)
    m.elements[i] <B><FONT COLOR="#5F9EA0">:</FONT></B>= i + 1;
  <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">for</FONT></B>;
  m;
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B>;

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">sealed</FONT></B> <B><FONT COLOR="#5F9EA0">method</FONT></B> \<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">* </FONT></I></B></FONT></B>(m1 <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>, m2 <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>) <B><FONT COLOR="#A020F0">=&gt;</FONT></B> m <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>;
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">unless </FONT></I></B></FONT></B>(m1.columns == m2.rows)
    <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">error</FONT></I></B></FONT></B>(<B><FONT COLOR="#BC8F8F">&quot;the number of columns of %= must equals the number of rows of %m=&quot;</FONT></B>, m1, m2);
  <B><FONT COLOR="#A020F0">end</FONT></B>;

  <B><FONT COLOR="#A020F0">let</FONT></B> rows = m1.rows;
  <B><FONT COLOR="#A020F0">let</FONT></B> columns = m2.columns;
  <B><FONT COLOR="#A020F0">let</FONT></B> m3 = <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">make</FONT></I></B></FONT></B>(<B><FONT COLOR="#228B22">&lt;matrix&gt;</FONT></B>, <B><FONT COLOR="#5F9EA0">rows:</FONT></B> rows, <B><FONT COLOR="#5F9EA0">columns:</FONT></B> columns);

  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for </FONT></I></B></FONT></B>(i <B><FONT COLOR="#A020F0">from</FONT></B> 0 <B><FONT COLOR="#A020F0">below</FONT></B> rows)
    <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for </FONT></I></B></FONT></B>(j <B><FONT COLOR="#A020F0">from</FONT></B> 0 <B><FONT COLOR="#A020F0">below</FONT></B> columns)
      <B><FONT COLOR="#A020F0">let</FONT></B> value = 0;
      <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for </FONT></I></B></FONT></B>(k <B><FONT COLOR="#A020F0">from</FONT></B> 0 <B><FONT COLOR="#A020F0">below</FONT></B> columns)
        value <B><FONT COLOR="#5F9EA0">:</FONT></B>= value + <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele</FONT></I></B></FONT></B>(m1, i, k) * <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele</FONT></I></B></FONT></B>(m2, k, j);
      <B><FONT COLOR="#A020F0">end</FONT></B>;
      <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele</FONT></I></B></FONT></B>(m3, i, j) <B><FONT COLOR="#5F9EA0">:</FONT></B>= value;
    <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">for</FONT></B>;
  <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">for</FONT></B>;
  m3;
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">method</FONT></B>;

<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B> <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main </FONT></I></B></FONT></B>() <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">=&gt;</FONT></I></B></FONT></B> ()
  <B><FONT COLOR="#A020F0">let</FONT></B> arg = <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">string-to-integer</FONT></I></B></FONT></B>(<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">element</FONT></I></B></FONT></B>(<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">application-arguments</FONT></I></B></FONT></B>(), 0, <B><FONT COLOR="#5F9EA0">default:</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>));

  <B><FONT COLOR="#A020F0">let</FONT></B> size = 30;
  <B><FONT COLOR="#A020F0">let</FONT></B> m1 = <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">create-matrix</FONT></I></B></FONT></B>(size, size);
  <B><FONT COLOR="#A020F0">let</FONT></B> m2 = <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">create-matrix</FONT></I></B></FONT></B>(size, size);

  <B><FONT COLOR="#A020F0">let</FONT></B> mm = #f;
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for </FONT></I></B></FONT></B>(i <B><FONT COLOR="#A020F0">from</FONT></B> 1 <B><FONT COLOR="#A020F0">to</FONT></B> arg)
    mm <B><FONT COLOR="#5F9EA0">:</FONT></B>= m1 * m2;
  <B><FONT COLOR="#A020F0">end</FONT></B>;
  <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">format-out</FONT></I></B></FONT></B>(<B><FONT COLOR="#BC8F8F">&quot;%= %= %= %=\n&quot;</FONT></B>, <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele</FONT></I></B></FONT></B>(mm, 0, 0), <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele</FONT></I></B></FONT></B>(mm, 2, 3), <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele</FONT></I></B></FONT></B>(mm, 3, 2), <B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ele</FONT></I></B></FONT></B>(mm, 4, 4));
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">function</FONT></B>;

<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main</FONT></I></B></FONT></B>();</pre></td></tr></table>
