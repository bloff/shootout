\ $Id<span class="sym">:</span> fibo<span class="sym">.</span>gforth<span class="sym">,</span>v <span class="num">1.2 2005</span><span class="sym">/</span><span class="num">03</span><span class="sym">/</span><span class="num">20 16</span><span class="sym">:</span><span class="num">06</span><span class="sym">:</span><span class="num">04</span> igouy<span class="sym">-</span>guest Exp $
\ http<span class="sym">:</span><span class="slc">//shootout.alioth.debian.org/
</span>\ Provided by Ian Osgood<span class="sym">,</span> modified by Jabari Zakiya

\ read NUM from last command line argument
<span class="num">0</span><span class="sym">.</span> argc &#64; <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2d</span>rop drop constant NUM

<span class="sym">:</span> fib <span class="sym">(</span> n <span class="sym">--</span> m <span class="sym">)
</span>   dup <span class="num">1</span> <span class="sym">&gt;</span> <span class="kwa">if</span> <span class="num">1</span><span class="sym">-</span> dup recurse swap <span class="num">1</span><span class="sym">-</span> recurse <span class="sym">+</span> then <span class="sym">;

</span>\ run fib <span class="kwa">and</span> print result from stack
   NUM fib <span class="num">1</span> u<span class="sym">.</span>r cr

bye \ done<span class="sym">!</span>
