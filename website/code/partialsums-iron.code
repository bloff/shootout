<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>

<span class="slc"># contributed by Giovanni Bajo</span>
<span class="slc"># optimized from the previous implementation by Josh Goldfoot</span>

<span class="kwc">from</span> sys <span class="kwc">import</span> argv
<span class="kwc">from</span> math <span class="kwc">import</span> sin<span class="sym">,</span> cos

<span class="kwb">def</span> <span class="kwd">main</span><span class="sym">(</span>n<span class="sym">):</span>
    twoThirds <span class="sym">=</span> <span class="num">2.0</span> <span class="sym">/</span> <span class="num">3.0</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span>twoThirds <span class="sym">**</span> k <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>n<span class="sym">)),</span>
                        <span class="str">&quot;(2/3)^k&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span>k <span class="sym">** -</span><span class="num">0.5</span> <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">)),</span>
                        <span class="str">&quot;k^-0.5&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">/(</span>k<span class="sym">*(</span>k<span class="sym">+</span><span class="num">1.0</span><span class="sym">))</span> <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">)),</span>
                        <span class="str">&quot;1/k(k+1)&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">/(</span>k <span class="sym">**</span> <span class="num">3.0</span> <span class="sym">*</span> <span class="kwd">sin</span><span class="sym">(</span>k<span class="sym">) **</span> <span class="num">2.0</span><span class="sym">)</span>
                            <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">)),</span>
                        <span class="str">&quot;Flint Hills&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">/(</span>k <span class="sym">**</span> <span class="num">3.0</span> <span class="sym">*</span> <span class="kwd">cos</span><span class="sym">(</span>k<span class="sym">) **</span> <span class="num">2.0</span><span class="sym">)</span>
                            <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">)),</span>
                        <span class="str">&quot;Cookson Hills&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">/</span>k <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">)),</span>
                        <span class="str">&quot;Harmonic&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">/</span>k <span class="sym">**</span> <span class="num">2.0</span> <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">)),</span>
                        <span class="str">&quot;Riemann Zeta&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">/</span>k <span class="sym">-</span> <span class="num">1.0</span><span class="sym">/(</span>k<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">)),</span>
                        <span class="str">&quot;Alternating Harmonic&quot;</span><span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span><span class="kwd">sum</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">/(</span><span class="num">2.0</span><span class="sym">*</span>k <span class="sym">-</span><span class="num">1.0</span><span class="sym">) -</span> <span class="num">1.0</span><span class="sym">/(</span><span class="num">2.0</span><span class="sym">*(</span>k<span class="sym">+</span><span class="num">1</span><span class="sym">) -</span><span class="num">1.0</span><span class="sym">)</span>
                            <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">)),</span>
                        <span class="str">&quot;Gregory&quot;</span><span class="sym">)</span>

<span class="kwd">main</span><span class="sym">((</span><span class="kwa">len</span><span class="sym">(</span>argv<span class="sym">) &gt;</span> <span class="num">1</span><span class="sym">)</span> <span class="kwb">and</span> <span class="kwa">int</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="kwb">or</span> <span class="num">25000</span><span class="sym">)</span>
