<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">/* The Great Computer Language Shootout 
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy

To compile:	
   nicec --sourcepath=.. -d=. -a ackermann.jar ackermann

To run:
   java -ea -jar ackermann.jar 8
*/</FONT></I>


<B><FONT COLOR="#A020F0">void</FONT></B> main(String[] args){
   let n = toSinglePositiveInt(args);   
   println(<B><FONT COLOR="#BC8F8F">&quot;Ack(3,&quot;</FONT></B> + n + <B><FONT COLOR="#BC8F8F">&quot;): &quot;</FONT></B> + ack(3,n)); 
}


<B><FONT COLOR="#A020F0">int</FONT></B> ack(<B><FONT COLOR="#A020F0">int</FONT></B> m, <B><FONT COLOR="#A020F0">int</FONT></B> n) 
   requires m &gt;= 0 &amp;&amp; n &gt;= 0; <I><FONT COLOR="#B22222">// precondition
</FONT></I>
ack(m,n) {
   <B><FONT COLOR="#A020F0">if</FONT></B> (m == 0) <B><FONT COLOR="#A020F0">return</FONT></B> n + 1;
   <B><FONT COLOR="#A020F0">if</FONT></B> (n == 0) <B><FONT COLOR="#A020F0">return</FONT></B> ack(m-1, 1);
   <B><FONT COLOR="#A020F0">return</FONT></B> ack(m-1, ack(m, n-1)); 
}


<B><FONT COLOR="#A020F0">int</FONT></B> toSinglePositiveInt(String[] s) 
   ensures result &gt; 0; <I><FONT COLOR="#B22222">// postcondition
</FONT></I>
toSinglePositiveInt(s){
   <B><FONT COLOR="#A020F0">try</FONT></B> { 
      <B><FONT COLOR="#A020F0">int</FONT></B> i =  Integer.parseInt(s[0]);
      <B><FONT COLOR="#A020F0">if</FONT></B> (i&gt;0) <B><FONT COLOR="#A020F0">return</FONT></B> i; <B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#A020F0">return</FONT></B> 1;
    }
   <B><FONT COLOR="#A020F0">catch</FONT></B> (Exception e){ <B><FONT COLOR="#A020F0">return</FONT></B> 1; } }</pre></td></tr></table>
