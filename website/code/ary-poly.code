<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(* -*- mode: sml -*-
 * $Id: ary-poly.code,v 1.1 2004-11-02 08:52:29 bfulgham Exp $
 * http://shootout.alioth.debian.org/
 *)</FONT></I>

<B><FONT COLOR="#5F9EA0">structure</FONT></B> Test : <B><FONT COLOR="#5F9EA0">sig</FONT></B>
    <B><FONT COLOR="#A020F0">val</FONT></B> main : (<B><FONT COLOR="#228B22">string</FONT></B> <B><FONT COLOR="#5F9EA0">*</FONT></B> <B><FONT COLOR="#228B22">string</FONT></B> <B><FONT COLOR="#228B22">list</FONT></B>) <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> {}
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">struct</FONT></B>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">index</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B> i;

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ary</FONT></I></B></FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B>
    <B><FONT COLOR="#A020F0">let</FONT></B>
	<B><FONT COLOR="#A020F0">val</FONT></B> x <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.<B><FONT COLOR="#228B22">array</FONT></B>(n, 0)
	<B><FONT COLOR="#A020F0">val</FONT></B> y <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.<B><FONT COLOR="#228B22">array</FONT></B>(n, 0)
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">xinit</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B>
	    <B><FONT COLOR="#A020F0">if</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B> n <B><FONT COLOR="#A020F0">then</FONT></B> ()
	    <B><FONT COLOR="#A020F0">else</FONT></B> (Array.update(x, i, i <B><FONT COLOR="#5F9EA0">+</FONT></B> 1) ; xinit (i <B><FONT COLOR="#5F9EA0">+</FONT></B> 1))
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">xtoy</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B>
	    <B><FONT COLOR="#A020F0">if</FONT></B> i &lt; 0 <B><FONT COLOR="#A020F0">then</FONT></B> ()
	    <B><FONT COLOR="#A020F0">else</FONT></B> (Array.update(y, i, Array.sub(x, i) <B><FONT COLOR="#5F9EA0">+</FONT></B> Array.sub(y, i)) ; xtoy (i <B><FONT COLOR="#5F9EA0">-</FONT></B> 1))
<B><FONT COLOR="#A020F0">        fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">aryloop</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B>
	    <B><FONT COLOR="#A020F0">if</FONT></B> i &lt; 0 <B><FONT COLOR="#A020F0">then</FONT></B> ()
	    <B><FONT COLOR="#A020F0">else</FONT></B> (xtoy(n<B><FONT COLOR="#5F9EA0">-</FONT></B>1); aryloop (i<B><FONT COLOR="#5F9EA0">-</FONT></B>1))
    <B><FONT COLOR="#A020F0">in</FONT></B>
	xinit 0;
	aryloop 999;
	<B><FONT COLOR="#A020F0">print</FONT></B> (Int.toString (Array.sub(y, 0)));
	<B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>;
	<B><FONT COLOR="#A020F0">print</FONT></B> (Int.toString (Array.sub(y, (n<B><FONT COLOR="#5F9EA0">-</FONT></B>1))));
	<B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>
    <B><FONT COLOR="#A020F0">end</FONT></B>;

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">atoi</FONT></I></B></FONT></B> s <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">case</FONT></B> Int.fromString s <B><FONT COLOR="#A020F0">of</FONT></B> <B><FONT COLOR="#5F9EA0">SOME</FONT></B> num <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> num <B><FONT COLOR="#5F9EA0">|</FONT></B> <B><FONT COLOR="#5F9EA0">NONE</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 0;

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main</FONT></I></B></FONT></B>(name, args) <B><FONT COLOR="#5F9EA0">=</FONT></B> 
    <B><FONT COLOR="#A020F0">let</FONT></B>
	<B><FONT COLOR="#A020F0">val</FONT></B> arg <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">hd</FONT></B>(args <B><FONT COLOR="#5F9EA0">@</FONT></B> [<B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>])
	<B><FONT COLOR="#A020F0">val</FONT></B> num <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">atoi</FONT></B> arg
    <B><FONT COLOR="#A020F0">in</FONT></B>
	ary num;
        PolyML.quit()
    <B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> PolyML.print_depth 0;
<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> PolyML.error_depth 0;
<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> PolyML.onEntry(<B><FONT COLOR="#A020F0">fn</FONT></B>() <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> Test.main(<B><FONT COLOR="#BC8F8F">&quot;ary&quot;</FONT></B>, CommandLine.arguments()));
<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> PolyML.commit();</pre></td></tr></table>
