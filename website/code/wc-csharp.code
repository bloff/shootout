<span class="com">/* The Great Computer Language Shootout
 * http://shootout.alioth.debian.org
 *
 *  contributed by Isaac Gouy */</span>

<span class="kwa">using</span> System<span class="sym">;
</span><span class="kwa">using</span> System<span class="sym">.</span>IO<span class="sym">;
</span><span class="kwa">using</span> System<span class="sym">.</span>Text<span class="sym">;

</span><span class="kwc">class</span> Wc
<span class="sym">{
</span>   <span class="kwb">static void</span> Main<span class="sym">(</span>string<span class="sym">[]</span> args<span class="sym">)
   {
</span>      <span class="kwb">int</span> nc <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nl <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nw <span class="sym">=</span> <span class="num">0</span><span class="sym">;

</span>      <span class="kwa">using</span> <span class="sym">(</span>BinaryReader r <span class="sym">=</span> <span class="kwa">new</span> BinaryReader<span class="sym">(</span>Console<span class="sym">.</span>OpenStandardInput<span class="sym">(</span><span class="num">4096</span><span class="sym">))){
</span>         <span class="kwb">bool</span> insideWord <span class="sym">=</span> <span class="kwa">false</span><span class="sym">;
</span>         byte<span class="sym">[]</span> buffer <span class="sym">=</span> <span class="kwa">new</span> byte<span class="sym">[</span><span class="num">4096</span><span class="sym">];
</span>         <span class="kwb">int</span> bytesRead<span class="sym">;

</span>         <span class="kwa">while</span> <span class="sym">( (</span>bytesRead <span class="sym">=</span> r<span class="sym">.</span>Read<span class="sym">(</span>buffer<span class="sym">,</span><span class="num">0</span><span class="sym">,</span><span class="num">4096</span><span class="sym">)) &gt;</span> <span class="num">0</span>  <span class="sym">) {
</span>            nc <span class="sym">+=</span> bytesRead<span class="sym">;
</span>            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> bytesRead<span class="sym">;</span> i<span class="sym">++) {
</span>               <span class="kwb">char</span> c <span class="sym">= (</span><span class="kwb">char</span><span class="sym">)</span>buffer<span class="sym">[</span>i<span class="sym">];

</span>               <span class="kwa">if</span> <span class="sym">(</span>c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">)</span> nl<span class="sym">++;
</span>               <span class="kwa">if</span> <span class="sym">(</span>c <span class="sym">==</span> <span class="str">' '</span> <span class="sym">||</span> c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span> <span class="sym">||</span> c <span class="sym">==</span> <span class="str">'</span><span class="esc">\t</span><span class="str">'</span><span class="sym">)
</span>                  insideWord <span class="sym">=</span> <span class="kwa">false</span><span class="sym">;
</span>               <span class="kwa">else if</span> <span class="sym">(!</span>insideWord<span class="sym">) {
</span>                  insideWord <span class="sym">=</span> <span class="kwa">true</span><span class="sym">;
</span>                  nw<span class="sym">++;
               }
            }
         }
      }
</span>      Console<span class="sym">.</span>WriteLine<span class="sym">(</span><span class="str">&quot;{0} {1} {2}&quot;</span><span class="sym">,</span> nl<span class="sym">,</span> nw<span class="sym">,</span> nc<span class="sym">);
   }
}</span>
