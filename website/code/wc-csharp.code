<span class="slc">// $Id: wc-csharp.code,v 1.5 2005-02-25 08:57:53 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span>
<span class="kwa">using</span> System<span class="sym">;

</span><span class="kwc">class</span> wc
<span class="sym">{
</span>    <span class="kwc">public</span> <span class="kwb">static void</span> Main<span class="sym">(</span>String<span class="sym">[]</span> args<span class="sym">)
    {
</span>        <span class="kwb">int</span> nread<span class="sym">;
</span>        <span class="kwb">int</span> i<span class="sym">;
</span>        <span class="kwb">char</span> c<span class="sym">;
</span>        <span class="kwb">char</span><span class="sym">[]</span> buf <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">char</span><span class="sym">[</span><span class="num">4096</span><span class="sym">];
</span>        <span class="kwb">int</span> nl <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nw <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> nc <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>        <span class="kwb">bool</span> state <span class="sym">=</span> <span class="kwa">false</span><span class="sym">;

</span>        <span class="kwa">while</span><span class="sym">( (</span>nread <span class="sym">=</span> Console<span class="sym">.</span>In<span class="sym">.</span>Read<span class="sym">(</span> buf<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">4096</span><span class="sym">)) &gt;</span> <span class="num">0</span> <span class="sym">) {
</span>            nc <span class="sym">+=</span> nread<span class="sym">;
</span>            <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> nread<span class="sym">;</span> i<span class="sym">++) {
</span>                c <span class="sym">=</span> buf<span class="sym">[</span>i<span class="sym">];
</span>                <span class="kwa">if</span> <span class="sym">(</span>c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">) ++</span>nl<span class="sym">;
</span>                <span class="kwa">if</span> <span class="sym">(</span>c <span class="sym">==</span> <span class="str">' '</span> <span class="sym">||</span> c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span> <span class="sym">||</span> c <span class="sym">==</span> <span class="str">'</span><span class="esc">\t</span><span class="str">'</span><span class="sym">)</span> state <span class="sym">=</span> <span class="kwa">false</span><span class="sym">;
</span>                <span class="kwa">else if</span> <span class="sym">(</span>state <span class="sym">==</span> <span class="kwa">false</span><span class="sym">) {
</span>                    state <span class="sym">=</span> <span class="kwa">true</span><span class="sym">;
</span>                    nw<span class="sym">++;
                }
            }
        }
</span>        Console<span class="sym">.</span>WriteLine<span class="sym">(</span><span class="str">&quot;{0} {1} {2}&quot;</span><span class="sym">,</span> nl<span class="sym">,</span> nw<span class="sym">,</span> nc<span class="sym">);
    }
}</span>
