<span class="line">    1 </span><span class="slc">;;;; -O3 -disable-interrupts -lambda-lift -b 
</span><span class="line">    2 </span><span class="slc"></span>
<span class="line">    3 </span> <span class="sym">(</span>declare <span class="sym">(</span>disable<span class="sym">-</span>interrupts<span class="sym">) (</span>uses format<span class="sym">))
</span><span class="line">    4 </span><span class="sym"> 
</span><span class="line">    5 </span><span class="sym"> </span><span class="slc">; could we use more vectors here? 
</span><span class="line">    6 </span><span class="slc"></span>
<span class="line">    7 </span> <span class="slc">;; Moments.scm 
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span> <span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">   10 </span><span class="sym">   (</span>let<span class="sym">* ((</span>sum <span class="num">0.0</span><span class="sym">)
</span><span class="line">   11 </span><span class="sym">          (</span>numlist <span class="sym">(</span>let loop <span class="sym">((</span><span class="kwa">line</span> <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">)) (</span>numlist <span class="str">'()))
</span><span class="line">   12 </span><span class="str">                     (cond ((eof-object? line) numlist)
</span><span class="line">   13 </span><span class="str">                           (else
</span><span class="line">   14 </span><span class="str">                            (let ((num (string-&gt;number line)))
</span><span class="line">   15 </span><span class="str">                              (set! sum (+ num sum))
</span><span class="line">   16 </span><span class="str">                              (loop (read-line) (cons num numlist))))))))
</span><span class="line">   17 </span><span class="str">     (let ((n (length numlist)))
</span><span class="line">   18 </span><span class="str">       (let ((mean (/ sum n))
</span><span class="line">   19 </span><span class="str">             (average_deviation 0.0)
</span><span class="line">   20 </span><span class="str">             (standard_deviation 0.0)
</span><span class="line">   21 </span><span class="str">             (variance 0.0)
</span><span class="line">   22 </span><span class="str">             (skew 0.0)
</span><span class="line">   23 </span><span class="str">             (kurtosis 0.0)
</span><span class="line">   24 </span><span class="str">             (median 0.0)
</span><span class="line">   25 </span><span class="str">             (deviation 0.0))
</span><span class="line">   26 </span><span class="str">         (let loop ((nums numlist))
</span><span class="line">   27 </span><span class="str">           (if (not (null? nums))
</span><span class="line">   28 </span><span class="str">               (begin
</span><span class="line">   29 </span><span class="str">                 (set! deviation (- (car nums) mean))
</span><span class="line">   30 </span><span class="str">                 (set! average_deviation (+ average_deviation (abs deviation)))
</span><span class="line">   31 </span><span class="str">                 (set! variance (+ variance (expt deviation 2.0)))
</span><span class="line">   32 </span><span class="str">                 (set! skew (+ skew (expt deviation 3.0)))
</span><span class="line">   33 </span><span class="str">                 (set! kurtosis (+ kurtosis (expt deviation 4)))
</span><span class="line">   34 </span><span class="str">                 (loop (cdr nums)))))
</span><span class="line">   35 </span><span class="str"> 
</span><span class="line">   36 </span><span class="str">         (set! average_deviation (/ average_deviation (exact-&gt;inexact n)))
</span><span class="line">   37 </span><span class="str">         (set! variance (/ variance (- n 1)))
</span><span class="line">   38 </span><span class="str">         (set! standard_deviation (sqrt variance))
</span><span class="line">   39 </span><span class="str"> 
</span><span class="line">   40 </span><span class="str">         (cond ((&gt; variance 0.0)
</span><span class="line">   41 </span><span class="str">                (set! skew (/ skew (* n variance standard_deviation)))
</span><span class="line">   42 </span><span class="str">                (set! kurtosis (- (/ kurtosis (* n variance variance))
</span><span class="line">   43 </span><span class="str">                                  3.0))))
</span><span class="line">   44 </span><span class="str"> 
</span><span class="line">   45 </span><span class="str">         (set! numlist (sort! numlist &lt;))
</span><span class="line">   46 </span><span class="str"> 
</span><span class="line">   47 </span><span class="str">         (let ((mid (quotient n 2)))
</span><span class="line">   48 </span><span class="str">           (if (zero? (modulo n 2))
</span><span class="line">   49 </span><span class="str">               (set! median (/ (+ (list-ref numlist mid)
</span><span class="line">   50 </span><span class="str">                                  (list-ref numlist (- mid 1)))
</span><span class="line">   51 </span><span class="str">                               2.0))
</span><span class="line">   52 </span><span class="str">               (set! median (list-ref  numlist mid))))
</span><span class="line">   53 </span><span class="str"> 
</span><span class="line">   54 </span><span class="str"> 
</span><span class="line">   55 </span><span class="str">         (set! standard_deviation (/ (round (* standard_deviation 1000000))
</span><span class="line">   56 </span><span class="str">                                     1000000))
</span><span class="line">   57 </span><span class="str"> 
</span><span class="line">   58 </span><span class="str">          (format #t &quot;n:                  ~A~%&quot; n )
</span><span class="line">   59 </span><span class="str">          (format #t &quot;median:             ~,6F~%&quot; median)
</span><span class="line">   60 </span><span class="str">          (format #t &quot;mean:               ~,6F~%&quot; mean)
</span><span class="line">   61 </span><span class="str">          (format #t &quot;average_deviation:  ~,6F~%&quot; average_deviation)
</span><span class="line">   62 </span><span class="str">          (format #t &quot;standard_deviation: ~,6F~%&quot; standard_deviation)
</span><span class="line">   63 </span><span class="str">          (format #t &quot;variance:           ~,6F~%&quot; variance)
</span><span class="line">   64 </span><span class="str">          (format #t &quot;skew:               ~,6F~%&quot; skew)
</span><span class="line">   65 </span><span class="str">          (format #t &quot;kurtosis:           ~,6F~%&quot; kurtosis) ))))
</span><span class="line">   66 </span><span class="str"> 
</span><span class="line">   67 </span><span class="str"> 
</span><span class="line">   68 </span><span class="str"> (main (command-line-arguments))</span> 
