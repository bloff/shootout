<span class="slc">;;;; -O3 -disable-interrupts -lambda-lift -b
</span>
<span class="sym">(</span>declare <span class="sym">(</span>disable<span class="sym">-</span>interrupts<span class="sym">) (</span>uses format<span class="sym">))

</span><span class="slc">; could we use more vectors here?
</span>
<span class="slc">;; Moments.scm
</span>
<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
  (</span>let<span class="sym">* ((</span>sum <span class="num">0.0</span><span class="sym">)
	 (</span>numlist <span class="sym">(</span>let loop <span class="sym">((</span><span class="kwa">line</span> <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">)) (</span>numlist <span class="str">'()))
		    (cond ((eof-object? line) numlist)
			  (else
			   (let ((num (string-&gt;number line)))
			     (set! sum (+ num sum))
			     (loop (read-line) (cons num numlist))))))))
    (let ((n (length numlist)))
      (let ((mean (/ sum n))
	    (average_deviation 0.0)
	    (standard_deviation 0.0)
	    (variance 0.0)
	    (skew 0.0)
	    (kurtosis 0.0)
	    (median 0.0)
	    (deviation 0.0))
	(let loop ((nums numlist))
	  (if (not (null? nums))
	      (begin
		(set! deviation (- (car nums) mean))
		(set! average_deviation (+ average_deviation (abs deviation)))
		(set! variance (+ variance (expt deviation 2.0)))
		(set! skew (+ skew (expt deviation 3.0)))
		(set! kurtosis (+ kurtosis (expt deviation 4)))
		(loop (cdr nums)))))

	(set! average_deviation (/ average_deviation (exact-&gt;inexact n)))
	(set! variance (/ variance (- n 1)))
	(set! standard_deviation (sqrt variance))

	(cond ((&gt; variance 0.0)
	       (set! skew (/ skew (* n variance standard_deviation)))
	       (set! kurtosis (- (/ kurtosis (* n variance variance))
				 3.0))))

	(set! numlist (sort! numlist &lt;))

	(let ((mid (quotient n 2)))
	  (if (zero? (modulo n 2))
	      (set! median (/ (+ (list-ref numlist mid)
				 (list-ref numlist (- mid 1)))
			      2.0))
	      (set! median (list-ref  numlist mid))))


	(set! standard_deviation (/ (round (* standard_deviation 1000000))
				    1000000))

         (format #t &quot;n:                  ~A~%&quot; n )
	 (format #t &quot;median:             ~,6F~%&quot; median)
	 (format #t &quot;mean:               ~,6F~%&quot; mean)
	 (format #t &quot;average_deviation:  ~,6F~%&quot; average_deviation)
	 (format #t &quot;standard_deviation: ~,6F~%&quot; standard_deviation)
	 (format #t &quot;variance:           ~,6F~%&quot; variance)
	 (format #t &quot;skew:               ~,6F~%&quot; skew)
	 (format #t &quot;kurtosis:           ~,6F~%&quot; kurtosis) ))))


(main (command-line-arguments))</span>
