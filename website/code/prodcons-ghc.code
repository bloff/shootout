<span class="line">    1 </span><span class="slc">-- $Id: prodcons-ghc.code,v 1.3 2004-11-11 07:14:03 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- by JP Bernardy, optimized by Einar Karttunen
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">import</span> Control.Concurrent
<span class="line">    6 </span><span class="kwa">import</span> System
<span class="line">    7 </span>
<span class="line">    8 </span>producer n m mv <span class="sym">|</span> n <span class="sym">==</span> m <span class="sym">=</span> return m
<span class="line">    9 </span>                <span class="sym">|</span> <span class="kwa">True</span>   <span class="sym">=</span> putMVar mv n <span class="sym">&gt;&gt;</span> producer <span class="sym">(</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> m mv
<span class="line">   10 </span>
<span class="line">   11 </span>consumer <span class="num">0</span> m mv <span class="sym">=</span> return m
<span class="line">   12 </span>consumer n m mv <span class="sym">=</span> takeMVar mv <span class="sym">&gt;&gt;</span> consumer <span class="sym">(</span>n<span class="num">-1</span><span class="sym">)</span> m mv
<span class="line">   13 </span>
<span class="line">   14 </span>main <span class="sym">=</span> <span class="kwa">do</span> <span class="sym">[</span>a<span class="sym">] &lt;-</span> getArgs
<span class="line">   15 </span>          <span class="kwa">let</span> n <span class="sym">=</span> read a <span class="sym">::</span> <span class="kwb">Int
</span><span class="line">   16 </span><span class="kwb"></span>          mvar <span class="sym">&lt;-</span> newEmptyMVar
<span class="line">   17 </span>          ret  <span class="sym">&lt;-</span> newEmptyMVar
<span class="line">   18 </span>          forkIO <span class="sym">(</span>producer <span class="num">0</span> n mvar <span class="sym">&gt;&gt;=</span> putMVar ret<span class="sym">)
</span><span class="line">   19 </span><span class="sym"></span>          m <span class="sym">&lt;-</span> consumer n n mvar
<span class="line">   20 </span>          r <span class="sym">&lt;-</span> takeMVar ret
<span class="line">   21 </span>          putStrLn <span class="sym">(</span>show r <span class="sym">++</span> <span class="str">&quot; &quot;</span> <span class="sym">++</span> show m<span class="sym">)</span>
