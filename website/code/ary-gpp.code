<span class="line">    1 </span><span class="slc">// -*- mode: c++ -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// $Id: ary-gpp.code,v 1.4 2004-11-13 07:40:58 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="dir">#include &lt;iostream&gt;
</span><span class="line">    6 </span><span class="dir"></span><span class="dir">#include &lt;vector&gt;
</span><span class="line">    7 </span><span class="dir"></span>
<span class="line">    8 </span><span class="kwa">using namespace</span> std<span class="sym">;
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym"></span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwb">int</span> i<span class="sym">,</span> k<span class="sym">,</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span><span class="line">   12 </span><span class="sym"></span>    <span class="kwc">typedef</span> vector<span class="sym">&lt;</span><span class="kwb">int</span><span class="sym">&gt;</span> ARY<span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span>    ARY x<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   14 </span><span class="sym"></span>    ARY y<span class="sym">(</span>n<span class="sym">);
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   17 </span><span class="sym"></span>        x<span class="sym">[</span>i<span class="sym">] =</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym">    }
</span><span class="line">   19 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">(</span>k<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> k<span class="sym">&lt;</span><span class="num">1000</span><span class="sym">;</span> k<span class="sym">++) {
</span><span class="line">   20 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> n <span class="num">- 1</span><span class="sym">;</span> i <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">; --</span>i<span class="sym">) {
</span><span class="line">   21 </span><span class="sym"></span>            y<span class="sym">[</span>i<span class="sym">] +=</span> x<span class="sym">[</span>i<span class="sym">];
</span><span class="line">   22 </span><span class="sym">        }
</span><span class="line">   23 </span><span class="sym">    }
</span><span class="line">   24 </span><span class="sym">
</span><span class="line">   25 </span><span class="sym"></span>    cout <span class="sym">&lt;&lt;</span> y<span class="sym">[</span><span class="num">0</span><span class="sym">] &lt;&lt;</span> <span class="str">&quot; &quot;</span> <span class="sym">&lt;&lt;</span> y<span class="sym">.</span>back<span class="sym">() &lt;&lt;</span> endl<span class="sym">;
</span><span class="line">   26 </span><span class="sym">}</span>
