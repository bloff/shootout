<span class="slc">#!/usr/bin/perl
</span>
<span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc"># reverse-complement benchmark
</span><span class="slc"># contributed by Joel Hoffman, 2005-03-24
</span>
<span class="kwa">use</span> POSIX qw<span class="sym">&lt;</span>ceil<span class="sym">&gt;;
</span><span class="kwa">use</span> strict<span class="sym">;

</span><span class="kwb">$</span><span class="sym">/=</span><span class="str">&quot;&gt;&quot;</span><span class="sym">;

</span><span class="kwa">while</span> <span class="sym">(</span>defined<span class="sym">(</span><span class="kwc">my</span> <span class="kwb">$l</span> <span class="sym">= &lt;&gt;)) {
</span>   chomp <span class="kwb">$l</span><span class="sym">;
</span>   <span class="kwa">next unless</span> <span class="kwb">$l</span><span class="sym">;

</span>   <span class="kwc">my</span> <span class="kwb">$rv</span> <span class="sym">=</span> <span class="str">&quot;&quot;</span><span class="sym">;

</span>   <span class="kwa">for</span> <span class="sym">(</span> split <span class="sym">/</span>\n<span class="sym">/,</span> <span class="str">'&gt;'</span>.<span class="kwb">$l</span> <span class="sym">) {
</span>      <span class="kwa">if</span> <span class="sym">(/</span>^<span class="sym">[;&gt;]/) {
</span>         print <span class="kwb">$_</span><span class="sym">,</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
      }</span> <span class="kwa">else</span> <span class="sym">{
</span>         <span class="kwb">$rv</span> <span class="sym">= (</span>reverse uc <span class="kwb">$_</span><span class="sym">)</span> . <span class="kwb">$rv</span><span class="sym">;
      }
   }

</span>   <span class="kwb">$rv</span> <span class="sym">=</span>~ tr<span class="sym">/</span>ACGTUMRWSYKVHDBN<span class="sym">/</span>TGCAAKYWSRMBDHVN<span class="sym">/;

</span>   print substr<span class="sym">(</span><span class="kwb">$rv</span><span class="sym">,</span><span class="kwb">$_</span><span class="sym">*</span><span class="num">60</span><span class="sym">,</span><span class="num">60</span><span class="sym">),</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="kwa">for</span> <span class="num">0</span>..ceil<span class="sym">(</span>length<span class="sym">(</span><span class="kwb">$rv</span><span class="sym">) /</span> <span class="num">60</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">);
}
</span>
