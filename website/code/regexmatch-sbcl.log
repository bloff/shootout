BUILD COMMANDS FOR: regexmatch.sbcl

Wed Nov 10 23:46:20 PST 2004

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "regexmatch.sbcl_compile")'
### START regexmatch.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(compile-file "meta.lisp" ) (load "meta.lisp" :verbose nil :print nil)
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "regexmatch.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END regexmatch.sbcl_compile

; compiling file "/opt/shootout/shootout/bench/regexmatch/tmp/meta.lisp" (written 10 NOV 2004 11:46:20 PM):
; compiling top level form: 
; compiling top level form: 
; compiling DEFMACRO STRING-MATCH: 
; compiling top level form: 
; compiling DEFMACRO STRING-MATCH-TYPE: 
; compiling top level form: 
; compiling DEFMACRO LIST-MATCH: 
; compiling top level form: 
; compiling DEFMACRO LIST-MATCH-TYPE: 
; compiling top level form: 
; recognizing DEFUN COMPILE-LIST
; compiling DEFUN COMPILE-LIST: 
; compiling top level form: 
; compiling DEFMACRO STREAM-MATCH: 
; compiling top level form: 
; compiling DEFMACRO STREAM-MATCH-TYPE: 
; compiling top level form: 
; recognizing DEFUN SEXPR-COMPILEIT
; compiling DEFUN SEXPR-COMPILEIT: 
; compiling top level form: 
; compiling DEFMACRO WITH-STREAM-META: 
; compiling top level form: 
; compiling DEFMACRO WITH-STRING-META: 
; compiling top level form: 
; compiling DEFMACRO WITH-LIST-META: 
; compiling top level form: 

; /opt/shootout/shootout/bench/regexmatch/tmp/meta.fasl written
; compilation finished in 0:00:01
; compiling file "/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.cmucl" (written 10 NOV 2004 11:46:20 PM):
; compiling top level form: 
; compiling top level form: 
; compiling top level form: 
; recognizing DEFUN DIGIT-CHARP
; compiling DEFUN DIGIT-CHARP: 
; compiling top level form: 
; recognizing DEFUN NON-DIGIT-CHARP
; compiling DEFUN NON-DIGIT-CHARP: 
; compiling top level form: 
; compiling DEFTYPE DIGIT: 
; compiling top level form: 
; compiling DEFTYPE NON-DIGIT: 
; compiling top level form: 
; compiling top level form: 
; compiling top level form: 
; compiling top level form: 
; recognizing DEFUN PARSE-TEL
; compiling DEFUN PARSE-TEL: 

; file: /opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.cmucl
; in: DEFUN PARSE-TEL
;     (= INDEX END)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
;   The second argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
;   The second argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;   The second argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;   The second argument is a NUMBER, not a REAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a REAL.
;   The second argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;   The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;   The second argument is a NUMBER, not a REAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a REAL.
;   The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; note: unable to open code because: The operands might not be the same type.
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.

; compiling top level form: 
; recognizing DEFUN MAIN
; compiling DEFUN MAIN: 
; compiling top level form: 

; file: /opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.cmucl
; in: DEFUN PARSE-TEL
;     (= INDEX END)
; 
; caught WARNING:
;   undefined variable: END
; 
; caught WARNING:
;   undefined variable: INDEX

; 
; caught WARNING:
;   These variables are undefined:
;     END INDEX
; 
; compilation unit finished
;   caught 3 WARNING conditions
;   printed 11 notes

; /opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl written
; compilation finished in 0:00:01
unhandled SIMPLE-ERROR in thread 25080:
  Using package META results in name conflicts for these symbols:
(INDEX END)

0: ("hairy arg processor for top level local call SB!DEBUG:BACKTRACE"
    128
    #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDERR* {5076711}>)
1: (SB-DEBUG::DEBUGGER-DISABLED-HOOK
    2
    #<SIMPLE-ERROR {9BD6F89}>
    #<unavailable argument>)[:EXTERNAL]
2: (INVOKE-DEBUGGER 1 #<SIMPLE-ERROR {9BD6F89}>)[:EXTERNAL]
3: (CERROR
    5
    "Unintern the conflicting symbols in the ~2*~A package."
    "Using package ~A results in name conflicts for these symbols:~%~
                ~S")[:EXTERNAL]
4: ("hairy arg processor for top level local call USE-PACKAGE"
    :META
    #<PACKAGE "COMMON-LISP-USER">)
5: ("top level form (USE-PACKAGE :META)" #<unavailable lambda list>)[:TOPLEVEL]
6: (SB-FASL::LOAD-FASL-GROUP
    1
    #<FILE-STREAM for "file \"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl\"" {9BD6231}>)[:EXTERNAL]
7: (SB-FASL::LOAD-AS-FASL
    3
    #<FILE-STREAM for "file \"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl\"" {9BD6231}>
    NIL
    #<unavailable argument>)[:EXTERNAL]
8: ("hairy arg processor for top level local call SB!FASL::INTERNAL-LOAD"
    #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
    #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
    :ERROR
    NIL
    NIL
    :BINARY)
9: ("hairy arg processor for top level local call SB!FASL::INTERNAL-LOAD"
    #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
    #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
    :ERROR
    NIL
    NIL
    NIL)
10: (LOAD 1 #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl")[:EXTERNAL]
11: (#:EVAL-TMPFUN-3886 #<unavailable lambda list>)[:EXTERNAL]
12: (SB-INT:EVAL-IN-LEXENV
     2
     (HANDLER-BIND ((DEFCONSTANT-UNEQL (LAMBDA (C) (ABORT C))))
                   (LOAD (COMPILE-FILE "regexmatch.sbcl")))
     #S(SB-KERNEL:LEXENV
        :FUNS NIL
        :VARS NIL
        :BLOCKS NIL
        :TAGS NIL
        :TYPE-RESTRICTIONS NIL
        :LAMBDA NIL
        :CLEANUP NIL
        :HANDLED-CONDITIONS NIL
        :DISABLED-PACKAGE-LOCKS NIL
        :POLICY ((INHIBIT-WARNINGS . 1) (SPACE . 0) (COMPILATION-SPEED . 0)
                 (DEBUG . 0) (SAFETY . 0) (SPEED . 3))))[:EXTERNAL]
13: (SB-FASL::LOAD-AS-SOURCE
     3
     #<FILE-STREAM for "file \"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.sbcl_compile\"" {900AD09}>
     NIL
     NIL)[:EXTERNAL]
14: ("hairy arg processor for top level local call SB!FASL::INTERNAL-LOAD"
     #P"regexmatch.sbcl_compile"
     #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.sbcl_compile"
     :ERROR
     NIL
     NIL
     :SOURCE)
15: ("hairy arg processor for top level local call SB!FASL::INTERNAL-LOAD"
     #P"regexmatch.sbcl_compile"
     #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.sbcl_compile"
     :ERROR
     NIL
     NIL
     NIL)
16: (LOAD 1 "regexmatch.sbcl_compile")[:EXTERNAL]
17: (SB-INT:EVAL-IN-LEXENV
     2
     (LOAD "regexmatch.sbcl_compile")
     #S(SB-KERNEL:LEXENV
        :FUNS NIL
        :VARS NIL
        :BLOCKS NIL
        :TAGS NIL
        :TYPE-RESTRICTIONS NIL
        :LAMBDA NIL
        :CLEANUP NIL
        :HANDLED-CONDITIONS NIL
        :DISABLED-PACKAGE-LOCKS NIL
        :POLICY ((SPEED . 1) (SPACE . 1) (SAFETY . 1) (INHIBIT-WARNINGS . 1)
                 (DEBUG . 1) (COMPILATION-SPEED . 1))))[:EXTERNAL]
18: (SB-IMPL::TOPLEVEL-INIT 0)[:EXTERNAL]
19: ("FLET SB!IMPL::RESTART-LISP")

unhandled condition in --disable-debugger mode, quitting
### START regexmatch.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END regexmatch.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load regexmatch.sbcl_run %A


PROGRAM OUTPUT
==============
1: (111) 111-1111
2: (111) 222-2222
3: (111) 333-3333
4: (111) 444-4444
5: (111) 555-5555
6: (111) 666-6666
7: (111) 777-7777
8: (111) 888-8888
9: (111) 999-9999
10: (111) 000-0000
11: (111) 232-1111
12: (111) 242-1111
