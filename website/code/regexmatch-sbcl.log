BUILD COMMANDS FOR: regexmatch.sbcl

Mon Apr  4 01:30:50 PDT 2005

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "regexmatch.sbcl_compile")'
### START regexmatch.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(compile-file "meta.lisp" ) (load "meta.lisp" :verbose nil :print nil)
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "regexmatch.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END regexmatch.sbcl_compile

; compiling file "/opt/shootout/shootout/bench/regexmatch/tmp/meta.lisp" (written 04 APR 2005 01:30:51 AM):
; compiling (DEFPACKAGE :META ...)
; compiling (IN-PACKAGE :META)
; compiling (DEFMACRO STRING-MATCH ...)
; compiling (DEFMACRO STRING-MATCH-TYPE ...)
; compiling (DEFMACRO LIST-MATCH ...)
; compiling (DEFMACRO LIST-MATCH-TYPE ...)
; compiling (DEFUN COMPILE-LIST ...)
; compiling (DEFMACRO STREAM-MATCH ...)
; compiling (DEFMACRO STREAM-MATCH-TYPE ...)
; compiling (DEFUN SEXPR-COMPILEIT ...)
; compiling (DEFMACRO WITH-STREAM-META ...)
; compiling (DEFMACRO WITH-STRING-META ...)
; compiling (DEFMACRO WITH-LIST-META ...)

; /opt/shootout/shootout/bench/regexmatch/tmp/meta.fasl written
; compilation finished in 0:00:01
; compiling file "/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.sbcl" (written 04 APR 2005 01:30:51 AM):
; compiling (PROCLAIM (QUOTE #))
; compiling (DECLAIM (INLINE TYPEP ...))
; compiling (USE-PACKAGE :META)
; compiling (DEFUN DIGIT-CHARP ...)
; compiling (DEFUN NON-DIGIT-CHARP ...)
; compiling (DEFTYPE DIGIT ...)
; compiling (DEFTYPE NON-DIGIT ...)
; compiling (DEFVAR AREA-CODE ...)
; compiling (DEFVAR EXCHANGE ...)
; compiling (DEFVAR LAST-4-DIGITS ...)
; compiling (DEFUN PARSE-TEL ...)

; file: /opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.sbcl
; in: DEFUN PARSE-TEL
;     (= INDEX END)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
;   The second argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
;   The second argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;   The second argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;   The second argument is a NUMBER, not a REAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a REAL.
;   The second argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;   The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;   The second argument is a NUMBER, not a REAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a REAL.
;   The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; note: unable to open code because: The operands might not be the same type.
; 
; note: forced to do GENERIC-= (cost 10)
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       unable to do inline float comparison (cost 3) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.

; compiling (DEFUN MAIN ...)

; file: /opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.sbcl
; in: DEFUN PARSE-TEL
;     (= INDEX END)
; 
; caught WARNING:
;   undefined variable: END
; 
; caught WARNING:
;   undefined variable: INDEX

; 
; caught WARNING:
;   These variables are undefined:
;     END INDEX
; 
; compilation unit finished
;   caught 3 WARNING conditions
;   printed 11 notes

; /opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl written
; compilation finished in 0:00:03
unhandled SB-INT:NAME-CONFLICT in thread 4502:
  USE-PACKAGE #<PACKAGE "META"> causes name-conflicts in
  #<PACKAGE "COMMON-LISP-USER"> between the following symbols:
    META:END, END
See also:
  The ANSI Standard, Section 11.1.1.2.5

0: (BACKTRACE 128 #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDERR* {504EEE9}>)
1: (SB-DEBUG::DEBUGGER-DISABLED-HOOK
    #<SB-INT:NAME-CONFLICT {90AC991}>
    #<unavailable argument>)
2: (INVOKE-DEBUGGER #<SB-INT:NAME-CONFLICT {90AC991}>)
3: (ERROR #<SB-INT:NAME-CONFLICT {90AC991}>)
4: (SB-INT:NAME-CONFLICT
    #<PACKAGE "COMMON-LISP-USER">
    USE-PACKAGE
    #<PACKAGE "META">)
5: (USE-PACKAGE :META #<PACKAGE "COMMON-LISP-USER">)
6: ((SB-C::TOP-LEVEL-FORM (USE-PACKAGE :META)) #<unavailable lambda list>)
7: (SB-FASL::LOAD-FASL-GROUP
    #<FILE-STREAM for "file \"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl\"" {90AB9E9}>)
8: (SB-FASL::LOAD-AS-FASL
    #<FILE-STREAM for "file \"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl\"" {90AB9E9}>
    NIL
    #<unavailable argument>)
9: (SB-FASL::INTERNAL-LOAD
    #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
    #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
    :ERROR
    NIL
    NIL
    :BINARY
    NIL)
10: (SB-FASL::INTERNAL-LOAD
     #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
     #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl"
     :ERROR
     NIL
     NIL
     NIL
     :DEFAULT)
11: (LOAD #P"/opt/shootout/shootout/bench/regexmatch/tmp/regexmatch.fasl")
Argh! error within --disable-debugger error handling
### START regexmatch.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END regexmatch.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load regexmatch.sbcl_run %A


PROGRAM OUTPUT
==============
