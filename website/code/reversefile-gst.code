<span class="line">    1 </span><span class="str">&quot;  The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="str">    contributed by Paolo Bonzini
</span><span class="line">    3 </span><span class="str"> 
</span><span class="line">    4 </span><span class="str">    To run: gst -QI /usr/local/share/smalltalk/gst.im reversefile &lt; input.txt
</span><span class="line">    5 </span><span class="str">  &quot;</span>
<span class="line">    6 </span>
<span class="line">    7 </span>  <span class="str">&quot;
</span><span class="line">    8 </span><span class="str"> ((FileStream stdin bufferSize: 4096) splitAt: Character nl)
</span><span class="line">    9 </span><span class="str">    reverseDo: [ :each | stdout nextPutAll: each; nl ]!
</span><span class="line">   10 </span><span class="str"> &quot;</span>
<span class="line">   11 </span>
<span class="line">   12 </span>
<span class="line">   13 </span>   <span class="sym">|</span> s <span class="kwa">last</span> out ptr <span class="sym">|
</span><span class="line">   14 </span><span class="sym"> </span>s <span class="sym">:= (</span>FileStream stdin bufferSize<span class="sym">:</span> <span class="num">4096</span><span class="sym">)</span> contents.
<span class="line">   15 </span> <span class="kwa">last</span> <span class="sym">:=</span> s size.
<span class="line">   16 </span> out <span class="sym">:=</span> String new<span class="sym">:</span> s size.
<span class="line">   17 </span> ptr <span class="sym">:=</span> <span class="num">1</span>.
<span class="line">   18 </span>
<span class="line">   19 </span>  s size <span class="num">- 1</span> to<span class="sym">:</span> <span class="num">1</span> by<span class="sym">: -</span><span class="num">1</span> <span class="kwa">do</span><span class="sym">: [ :</span>i <span class="sym">|
</span><span class="line">   20 </span><span class="sym">    (</span>s at<span class="sym">:</span> i<span class="sym">) ==</span> <span class="slc">##(Character nl) ifTrue: [ 
</span><span class="line">   21 </span><span class="slc"></span>   out
<span class="line">   22 </span>       replaceFrom<span class="sym">:</span> ptr
<span class="line">   23 </span>       to<span class="sym">:</span> ptr <span class="sym">+ (</span><span class="kwa">last</span> <span class="sym">-</span> i <span class="num">- 1</span><span class="sym">)
</span><span class="line">   24 </span><span class="sym"> </span>      with<span class="sym">:</span> s
<span class="line">   25 </span>       startingAt<span class="sym">:</span> i <span class="sym">+</span> <span class="num">1</span>.
<span class="line">   26 </span>
<span class="line">   27 </span>     ptr <span class="sym">:=</span> ptr <span class="sym">+</span> <span class="kwa">last</span> <span class="sym">-</span> i.
<span class="line">   28 </span>    <span class="kwa">last</span> <span class="sym">:=</span> i.
<span class="line">   29 </span>    <span class="sym">]
</span><span class="line">   30 </span><span class="sym"> ]</span>.
<span class="line">   31 </span>
<span class="line">   32 </span>  out
<span class="line">   33 </span>    replaceFrom<span class="sym">:</span> ptr
<span class="line">   34 </span>    to<span class="sym">:</span> out size
<span class="line">   35 </span>    with<span class="sym">:</span> s
<span class="line">   36 </span>    startingAt<span class="sym">:</span> <span class="num">1</span>.
<span class="line">   37 </span>
<span class="line">   38 </span>  stdout nextPutAll<span class="sym">:</span> out <span class="sym">!</span>
