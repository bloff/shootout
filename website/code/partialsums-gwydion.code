<span class="kwb">module</span><span class="sym">:</span> partialsums
<span class="kwa">use</span><span class="sym">-</span>libraries<span class="sym">:</span> common<span class="sym">-</span>dylan<span class="sym">,</span> io<span class="sym">,</span> transcendental
<span class="kwa">use</span><span class="sym">-</span>modules<span class="sym">:</span> common<span class="sym">-</span>dylan<span class="sym">,</span> format<span class="sym">-</span>out<span class="sym">,</span> transcendental

<span class="slc">// ---------------------------------------------------------------------</span>
<span class="slc">// The Great Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">//</span>
<span class="slc">// Based on D language implementation by Dave Fladebo</span>
<span class="slc">//</span>
<span class="slc">// Contributed by Anthony Borla</span>
<span class="slc">// ---------------------------------------------------------------------</span>

<span class="kwa">begin</span>
  <span class="kwa">let</span> n <span class="sym">=</span> application<span class="sym">-</span><span class="kwd">arguments</span><span class="sym">()[</span><span class="num">0</span><span class="sym">]</span>.string<span class="sym">-</span><span class="kwa">to</span><span class="sym">-</span>integer<span class="sym">;</span>

  <span class="kwa">let</span> s0 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> s1 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> s2 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> s3 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span>
  <span class="kwa">let</span> s4 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> s5 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> s6 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> s7 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span>
  <span class="kwa">let</span> s8 <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> d <span class="sym">=</span> <span class="num">0.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> alt <span class="sym">=</span> <span class="num">1.0</span>d0<span class="sym">;</span> <span class="kwa">let</span> d <span class="sym">=</span> <span class="num">1.0</span>d0<span class="sym">;</span>

  <span class="kwa">while</span> <span class="sym">(</span>d <span class="kwa">&lt;= n)</span>
    <span class="kwa">let</span> d2 <span class="sym">=</span> d <span class="sym">*</span> d<span class="sym">;</span> <span class="kwa">let</span> d3 <span class="sym">=</span> d2 <span class="sym">*</span> d<span class="sym">;</span> <span class="kwa">let</span> ds <span class="sym">=</span> <span class="kwd">sin</span><span class="sym">(</span>d<span class="sym">);</span> <span class="kwa">let</span> dc <span class="sym">=</span> <span class="kwd">cos</span><span class="sym">(</span>d<span class="sym">);</span>

    s0 <span class="sym">:=</span> s0 <span class="sym">+ (</span><span class="num">2.0</span>d0 <span class="sym">/</span> <span class="num">3.0</span>d0<span class="sym">)</span> ^ <span class="sym">(</span>d <span class="sym">-</span> <span class="num">1.0</span>d0<span class="sym">);</span>
    s1 <span class="sym">:=</span> s1 <span class="sym">+</span> <span class="num">1.0</span>d0 <span class="sym">/</span> <span class="kwd">sqrt</span><span class="sym">(</span>d<span class="sym">);</span>
    s2 <span class="sym">:=</span> s2 <span class="sym">+</span> <span class="num">1.0</span>d0 <span class="sym">/ (</span>d <span class="sym">* (</span>d <span class="sym">+</span> <span class="num">1.0</span>d0<span class="sym">));</span>
    s3 <span class="sym">:=</span> s3 <span class="sym">+</span> <span class="num">1.0</span>d0 <span class="sym">/ (</span>d3 <span class="sym">*</span> ds <span class="sym">*</span> ds<span class="sym">);</span>
    s4 <span class="sym">:=</span> s4 <span class="sym">+</span> <span class="num">1.0</span>d0 <span class="sym">/ (</span>d3 <span class="sym">*</span> dc <span class="sym">*</span> dc<span class="sym">);</span>
    s5 <span class="sym">:=</span> s5 <span class="sym">+</span> <span class="num">1.0</span>d0 <span class="sym">/</span> d<span class="sym">;</span>
    s6 <span class="sym">:=</span> s6 <span class="sym">+</span> <span class="num">1.0</span>d0 <span class="sym">/</span> d2<span class="sym">;</span>
    s7 <span class="sym">:=</span> s7 <span class="sym">+</span> alt <span class="sym">/</span> d<span class="sym">;</span>
    s8 <span class="sym">:=</span> s8 <span class="sym">+</span> alt <span class="sym">/ (</span><span class="num">2.0</span>d0 <span class="sym">*</span> d <span class="sym">-</span> <span class="num">1.0</span>d0<span class="sym">);</span>

    alt <span class="sym">:= -</span>alt<span class="sym">;</span> d <span class="sym">:=</span> d <span class="sym">+</span> <span class="num">1.0</span>d0<span class="sym">;</span>
  <span class="kwa">end while</span><span class="sym">;</span>

  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">(2/3)^k</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s0<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">k^-0.5</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s1<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">1/k(k+1)</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s2<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Flint Hills</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s3<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Cookson Hills</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s4<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Harmonic</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s5<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Riemann Zeta</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s6<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Alternating Harmonic</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s7<span class="sym">);</span>
  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">Gregory</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> s8<span class="sym">);</span>
<span class="kwa">end</span>

