#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>php <span class="sym">-</span>f
<span class="sym">&lt;</span>?
<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com"></span>
<span class="com">   php -q objinst.php 1500000</span>
<span class="com">*/</span>


<span class="kwa">class</span> Toggle <span class="sym">{</span>
   var <span class="kwb">$_state</span><span class="sym">;</span>
   <span class="kwa">function</span> Toggle<span class="sym">(</span><span class="kwb">$startState</span><span class="sym">){</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>_state <span class="sym">=</span> <span class="kwb">$startState</span><span class="sym">; }</span>
   <span class="kwa">function</span> value<span class="sym">(){</span> <span class="kwa">return</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>_state<span class="sym">; }</span>
   <span class="kwa">function</span> activate<span class="sym">(){</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>_state <span class="sym">= !</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>_state<span class="sym">; }</span>
<span class="sym">}</span>


<span class="kwa">class</span> NthToggle <span class="kwa">extends</span> Toggle <span class="sym">{</span>
   var <span class="kwb">$_countMax</span><span class="sym">;</span>
   var <span class="kwb">$_count</span><span class="sym">;</span>

   <span class="kwa">function</span> NthToggle<span class="sym">(</span><span class="kwb">$startState</span><span class="sym">,</span><span class="kwb">$max</span><span class="sym">){</span>
      Toggle<span class="sym">::</span>Toggle<span class="sym">(</span><span class="kwb">$startState</span><span class="sym">);</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>_countMax <span class="sym">=</span> <span class="kwb">$max</span><span class="sym">;</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>_count <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> activate<span class="sym">(){</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>_count<span class="sym">++;</span>
      <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>_count <span class="sym">&gt;=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>_countMax<span class="sym">){</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>_state <span class="sym">= !</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>_state<span class="sym">;</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>_count <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
      <span class="sym">}</span>
   <span class="sym">}</span>
<span class="sym">}</span>


<span class="kwb">$n</span> <span class="sym">= (</span><span class="kwb">$argc</span> <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">] :</span> <span class="num">1</span><span class="sym">;</span>

<span class="kwb">$toggle</span> <span class="sym">=</span> new Toggle<span class="sym">(</span>TRUE<span class="sym">);</span>
<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span>
   <span class="kwb">$toggle</span><span class="sym">-&gt;</span>activate<span class="sym">();</span>
   <span class="kwb">$toggle</span><span class="sym">-&gt;</span>value<span class="sym">();</span>
<span class="sym">}</span>

<span class="kwb">$toggle</span><span class="sym">-&gt;</span>value<span class="sym">()</span> ? <span class="kwa">print</span> <span class="str">&quot;true</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">:</span> <span class="kwa">print</span> <span class="str">&quot;false</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>


<span class="kwb">$ntoggle</span> <span class="sym">=</span> new NthToggle<span class="sym">(</span>TRUE<span class="sym">,</span><span class="num">3</span><span class="sym">);</span>
<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span>
   <span class="kwb">$ntoggle</span><span class="sym">-&gt;</span>activate<span class="sym">();</span>
   <span class="kwb">$ntoggle</span><span class="sym">-&gt;</span>value<span class="sym">();</span>
<span class="sym">}</span>

<span class="kwb">$ntoggle</span><span class="sym">-&gt;</span>value<span class="sym">()</span> ? <span class="kwa">print</span> <span class="str">&quot;true</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">:</span> <span class="kwa">print</span> <span class="str">&quot;false</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>

?<span class="sym">&gt;</span>
