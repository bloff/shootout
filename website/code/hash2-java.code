<span class="line">    1 </span><span class="slc">// $Id: hash2-java.code,v 1.3 2004-11-11 07:13:57 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;
</span><span class="line">    5 </span><span class="sym">
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">class</span> Val <span class="sym">{
</span><span class="line">    7 </span><span class="sym"></span>    <span class="kwb">int</span> val<span class="sym">;
</span><span class="line">    8 </span><span class="sym"></span>    Val<span class="sym">(</span><span class="kwb">int</span> init<span class="sym">) {</span> val <span class="sym">=</span> init<span class="sym">; }
</span><span class="line">    9 </span><span class="sym">}
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span><span class="kwa">public class</span> hash2 <span class="sym">{
</span><span class="line">   12 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[]) {
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwb">int</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   14 </span><span class="sym"></span>        <span class="kwc">HashMap</span> hash1 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">HashMap</span><span class="sym">(</span><span class="num">10000</span><span class="sym">);
</span><span class="line">   15 </span><span class="sym"></span>        <span class="kwc">HashMap</span> hash2 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">HashMap</span><span class="sym">(</span>n<span class="sym">);
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym"></span>        <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">10000</span><span class="sym">;</span> i<span class="sym">++)
</span><span class="line">   18 </span><span class="sym"></span>            hash1<span class="sym">.</span>put<span class="sym">(</span><span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> <span class="kwc">Integer</span><span class="sym">.</span>toString<span class="sym">(</span>i<span class="sym">,</span> <span class="num">10</span><span class="sym">),</span> <span class="kwa">new</span> Val<span class="sym">(</span>i<span class="sym">));
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   20 </span><span class="sym"></span>            <span class="kwc">Iterator</span> it <span class="sym">=</span> hash1<span class="sym">.</span>entrySet<span class="sym">().</span>iterator<span class="sym">();
</span><span class="line">   21 </span><span class="sym"></span>            <span class="kwa">while</span><span class="sym">(</span>it<span class="sym">.</span>hasNext<span class="sym">()) {
</span><span class="line">   22 </span><span class="sym"></span>                        <span class="kwc">Map</span><span class="sym">.</span>Entry h1 <span class="sym">= (</span><span class="kwc">Map</span><span class="sym">.</span>Entry<span class="sym">)</span>it<span class="sym">.</span>next<span class="sym">();
</span><span class="line">   23 </span><span class="sym"></span>                        <span class="kwc">String</span> key <span class="sym">= (</span><span class="kwc">String</span><span class="sym">)</span>h1<span class="sym">.</span>getKey<span class="sym">();
</span><span class="line">   24 </span><span class="sym"></span>                        <span class="kwb">int</span> v1 <span class="sym">= ((</span>Val<span class="sym">)</span>h1<span class="sym">.</span>getValue<span class="sym">()).</span>val<span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>                        <span class="kwa">if</span> <span class="sym">(</span>hash2<span class="sym">.</span>containsKey<span class="sym">(</span>key<span class="sym">))
</span><span class="line">   26 </span><span class="sym">                                ((</span>Val<span class="sym">)</span>hash2<span class="sym">.</span>get<span class="sym">(</span>key<span class="sym">)).</span>val <span class="sym">+=</span> v1<span class="sym">;
</span><span class="line">   27 </span><span class="sym"></span>                        <span class="kwa">else
</span><span class="line">   28 </span><span class="kwa"></span>                                hash2<span class="sym">.</span>put<span class="sym">(</span>key<span class="sym">,</span> <span class="kwa">new</span> Val<span class="sym">(</span>v1<span class="sym">));
</span><span class="line">   29 </span><span class="sym">            }
</span><span class="line">   30 </span><span class="sym">        }
</span><span class="line">   31 </span><span class="sym">
</span><span class="line">   32 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(((</span>Val<span class="sym">)</span>hash1<span class="sym">.</span>get<span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">)).</span>val    <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+
</span><span class="line">   33 </span><span class="sym">                         ((</span>Val<span class="sym">)</span>hash1<span class="sym">.</span>get<span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">)).</span>val <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+
</span><span class="line">   34 </span><span class="sym">                         ((</span>Val<span class="sym">)</span>hash2<span class="sym">.</span>get<span class="sym">(</span><span class="str">&quot;foo_1&quot;</span><span class="sym">)).</span>val    <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+
</span><span class="line">   35 </span><span class="sym">                         ((</span>Val<span class="sym">)</span>hash2<span class="sym">.</span>get<span class="sym">(</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">)).</span>val <span class="sym">+</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);
</span><span class="line">   36 </span><span class="sym">    }
</span><span class="line">   37 </span><span class="sym">}</span>
