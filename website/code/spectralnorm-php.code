<span class="sym">&lt;</span>? <span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy

   php -q spectralnorm.php 10
*/</span>


<span class="kwa">function</span> A<span class="sym">(</span><span class="kwb">$i</span><span class="sym">,</span> <span class="kwb">$j</span><span class="sym">){
</span>   <span class="kwa">return</span> <span class="num">1.0</span><span class="sym">/((</span><span class="kwb">$i</span><span class="sym">+</span><span class="kwb">$j</span><span class="sym">)*(</span><span class="kwb">$i</span><span class="sym">+</span><span class="kwb">$j</span><span class="sym">+</span><span class="num">1</span><span class="sym">)/</span><span class="num">2</span><span class="sym">+</span><span class="kwb">$i</span><span class="sym">+</span><span class="num">1</span><span class="sym">);
}

</span><span class="kwa">function</span> Av<span class="sym">(</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">){
</span>   <span class="kwb">$Av</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();
</span>   <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){
</span>      <span class="kwb">$Av</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;
</span>      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$j</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">++)</span> <span class="kwb">$Av</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] +=</span> A<span class="sym">(</span><span class="kwb">$i</span><span class="sym">,</span><span class="kwb">$j</span><span class="sym">)*</span><span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">];
   }
</span>   <span class="kwa">return</span> <span class="kwb">$Av</span><span class="sym">;
}

</span><span class="kwa">function</span> Atv<span class="sym">(</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">){
</span>   <span class="kwb">$Atv</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();
</span>   <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){
</span>      <span class="kwb">$Atv</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;
</span>      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$j</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">++)</span> <span class="kwb">$Atv</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] +=</span> A<span class="sym">(</span><span class="kwb">$j</span><span class="sym">,</span><span class="kwb">$i</span><span class="sym">)*</span><span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">];
   }
</span>   <span class="kwa">return</span> <span class="kwb">$Atv</span><span class="sym">;
}

</span><span class="kwa">function</span> AtAv<span class="sym">(</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">){
</span>   <span class="kwa">return</span> Atv<span class="sym">(</span><span class="kwb">$n</span><span class="sym">,</span> Av<span class="sym">(</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">));
}


</span><span class="kwb">$n</span> <span class="sym">= (</span><span class="kwb">$argc</span> <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">] :</span> <span class="num">1</span><span class="sym">;
</span><span class="kwb">$u</span> <span class="sym">=</span> <span class="kwa">array_pad</span><span class="sym">(</span><span class="kwa">array</span><span class="sym">(),</span> <span class="kwb">$n</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);

</span><span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="num">10</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){
</span>   <span class="kwb">$v</span> <span class="sym">=</span> AtAv<span class="sym">(</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$u</span><span class="sym">);
</span>   <span class="kwb">$u</span> <span class="sym">=</span> AtAv<span class="sym">(</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">);
}

</span><span class="kwb">$vBv</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="kwb">$vv</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){
</span>   <span class="kwb">$vBv</span> <span class="sym">+=</span> <span class="kwb">$u</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]*</span><span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">];
</span>   <span class="kwb">$vv</span> <span class="sym">+=</span> <span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]*</span><span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">];
}
</span><span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">%0</span><span class="str">.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwa">sqrt</span><span class="sym">(</span><span class="kwb">$vBv</span><span class="sym">/</span><span class="kwb">$vv</span><span class="sym">));

</span>?<span class="sym">&gt;</span>
