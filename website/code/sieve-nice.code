<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">/* The Great Computer Language Shootout 
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy

To compile:	
   nicec --sourcepath=.. -d=. -a sieve.jar sieve

To run:
   java -ea -jar sieve.jar 900
*/</FONT></I>


<B><FONT COLOR="#A020F0">import</FONT></B> ackermann; <I><FONT COLOR="#B22222">// reuse toSinglePositiveInt
</FONT></I>
<B><FONT COLOR="#A020F0">void</FONT></B> main(String[] args){
   var n = toSinglePositiveInt(args);

   let start = 2;
   let stop = 8192;
   let isPrime = <B><FONT COLOR="#A020F0">new</FONT></B> <B><FONT COLOR="#A020F0">boolean</FONT></B>[stop+1];
   var count = 0;

   <B><FONT COLOR="#A020F0">while</FONT></B> (n-- &gt; 0){ 
      count = 0;
      <B><FONT COLOR="#A020F0">for</FONT></B>(var i=start; i &lt;= stop; i++) isPrime[i] = <B><FONT COLOR="#A020F0">true</FONT></B>;
      <B><FONT COLOR="#A020F0">for</FONT></B>(var i=start; i &lt;= stop; i++) 
         <B><FONT COLOR="#A020F0">if</FONT></B>(isPrime[i]) {
             <I><FONT COLOR="#B22222">// remove all multiples of prime: i
</FONT></I>            <B><FONT COLOR="#A020F0">for</FONT></B>(var k=i+i; k &lt;= stop; k+=i) isPrime[k] = <B><FONT COLOR="#A020F0">false</FONT></B>;
            count++;
         }
   }

   println(<B><FONT COLOR="#BC8F8F">&quot;Count: &quot;</FONT></B> + count); 
}</pre></td></tr></table>
