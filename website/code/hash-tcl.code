<span class="line">    1 </span><span class="slc">#!/usr/bin/tclsh
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: hash-tcl.code,v 1.4 2004-11-13 07:41:36 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="slc"># this program is modified from:
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">#   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html
</span><span class="line">    7 </span><span class="slc"></span><span class="slc"># Timing Trials, or, the Trials of Timing: Experiments with Scripting
</span><span class="line">    8 </span><span class="slc"></span><span class="slc"># and User-Interface Languages&lt;/a&gt; by Brian W. Kernighan and
</span><span class="line">    9 </span><span class="slc"></span><span class="slc"># Christopher J. Van Wyk.
</span><span class="line">   10 </span><span class="slc"></span>
<span class="line">   11 </span><span class="kwa">proc</span> main <span class="sym">{} {
</span><span class="line">   12 </span><span class="sym"></span>    <span class="kwa">global</span> argv
<span class="line">   13 </span>    <span class="kwa">set</span> n <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]
</span><span class="line">   14 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">1</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;=</span> <span class="kwb">$n</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {
</span><span class="line">   15 </span><span class="sym"></span>        <span class="kwa">set</span> x<span class="sym">([</span><span class="kwa">format</span> <span class="sym">{%</span>x<span class="sym">}</span> <span class="kwb">$i</span><span class="sym">])</span> <span class="kwb">$i
</span><span class="line">   16 </span><span class="kwb"></span>    <span class="sym">}
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwa">set</span> c <span class="num">0
</span><span class="line">   18 </span><span class="num"></span>    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="kwb">$n</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">} {</span><span class="kwa">incr</span> i <span class="num">-1</span><span class="sym">} {
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">{[</span><span class="kwa">info</span> exists x<span class="sym">(</span><span class="kwb">$i</span><span class="sym">)]} {
</span><span class="line">   20 </span><span class="sym"></span>            <span class="kwa">incr</span> c
<span class="line">   21 </span>        <span class="sym">}
</span><span class="line">   22 </span><span class="sym">    }
</span><span class="line">   23 </span><span class="sym"></span>    <span class="kwa">puts</span> <span class="kwb">$c
</span><span class="line">   24 </span><span class="kwb"></span><span class="sym">}
</span><span class="line">   25 </span><span class="sym">
</span><span class="line">   26 </span><span class="sym"></span>main
