#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>php <span class="sym">-</span>f
<span class="sym">&lt;</span>?
<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com"></span>
<span class="com">   php -q wordfreq.php &lt; input.txt &gt; output.txt</span>
<span class="com">*/</span>


<span class="kwb">$hasSplitWord</span> <span class="sym">=</span> FALSE<span class="sym">;</span>

<span class="kwb">$fp</span> <span class="sym">=</span> <span class="kwa">fopen</span><span class="sym">(</span><span class="str">&quot;php://stdin&quot;</span><span class="sym">,</span> <span class="str">&quot;r&quot;</span><span class="sym">);</span>

<span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$block</span> <span class="sym">=</span> <span class="kwa">fread</span><span class="sym">(</span><span class="kwb">$fp</span><span class="sym">,</span> <span class="num">4096</span><span class="sym">)){</span>

   <span class="kwb">$words</span> <span class="sym">=</span> <span class="kwa">preg_split</span><span class="sym">(</span><span class="str">'/[^a-zA-Z]+/'</span><span class="sym">,</span> <span class="kwb">$block</span><span class="sym">);</span>

   <span class="kwb">$first</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   <span class="kwb">$last</span> <span class="sym">=</span> <span class="kwa">sizeof</span><span class="sym">(</span><span class="kwb">$words</span><span class="sym">) -</span> <span class="num">1</span><span class="sym">;</span>

   <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$last</span> <span class="sym">&gt;=</span> <span class="kwb">$first</span><span class="sym">){</span>

      <span class="slc">// some words will be split across $block's</span>

      <span class="kwa">if</span> <span class="sym">(</span><span class="kwa">strlen</span><span class="sym">(</span><span class="kwb">$words</span><span class="sym">[</span><span class="kwb">$first</span><span class="sym">])){</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$hasSplitWord</span><span class="sym">){</span> <span class="kwb">$words</span><span class="sym">[</span><span class="kwb">$first</span><span class="sym">] =</span> <span class="kwb">$splitWord</span>.<span class="kwb">$words</span><span class="sym">[</span><span class="kwb">$first</span><span class="sym">]; }</span>
      <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$hasSplitWord</span><span class="sym">){</span> <span class="kwb">$words</span><span class="sym">[</span><span class="kwb">$first</span><span class="sym">] =</span> <span class="kwb">$splitWord</span><span class="sym">; }</span>
         <span class="kwa">else</span> <span class="sym">{</span> <span class="kwb">$first</span><span class="sym">++; }</span>
      <span class="sym">}</span>
      <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$hasSplitWord</span> <span class="sym">=</span> <span class="kwa">strlen</span><span class="sym">(</span><span class="kwb">$words</span><span class="sym">[</span><span class="kwb">$last</span><span class="sym">])){</span>
         <span class="kwb">$splitWord</span> <span class="sym">=</span> <span class="kwb">$words</span><span class="sym">[</span><span class="kwb">$last</span><span class="sym">];</span>
      <span class="sym">}</span>


      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="kwb">$first</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$last</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span>
         <span class="kwb">$w</span> <span class="sym">=</span> <span class="kwa">strtolower</span><span class="sym">(</span><span class="kwb">$words</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]);</span>
         <span class="kwa">if</span> <span class="sym">(</span>isset<span class="sym">(</span><span class="kwb">$counts</span><span class="sym">[</span><span class="kwb">$w</span><span class="sym">])){</span> <span class="kwb">$counts</span><span class="sym">[</span><span class="kwb">$w</span><span class="sym">]++; }</span> <span class="kwa">else</span> <span class="sym">{</span> <span class="kwb">$counts</span><span class="sym">[</span><span class="kwb">$w</span><span class="sym">] =</span> <span class="num">1</span><span class="sym">; }</span>
      <span class="sym">}</span>
   <span class="sym">}</span>
   <span class="kwa">unset</span><span class="sym">(</span><span class="kwb">$words</span><span class="sym">);</span>
<span class="sym">}</span>
<span class="kwa">fclose</span><span class="sym">(</span><span class="kwb">$fp</span><span class="sym">);</span>



<span class="kwa">function</span> CmpCountAndName<span class="sym">(</span><span class="kwb">$a</span><span class="sym">,</span> <span class="kwb">$b</span><span class="sym">){</span>
   <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">] ==</span> <span class="kwb">$b</span><span class="sym">[</span><span class="num">1</span><span class="sym">]){</span> <span class="kwa">return strcmp</span><span class="sym">(</span><span class="kwb">$b</span><span class="sym">[</span><span class="num">0</span><span class="sym">],</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]); }</span>
   <span class="kwa">else</span> <span class="sym">{</span> <span class="kwa">return</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">] &lt;</span> <span class="kwb">$b</span><span class="sym">[</span><span class="num">1</span><span class="sym">]; }</span>
<span class="sym">}</span>

<span class="kwa">while</span> <span class="sym">(</span><span class="kwa">list</span><span class="sym">(</span><span class="kwb">$k</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">) =</span> <span class="kwa">each</span><span class="sym">(</span><span class="kwb">$counts</span><span class="sym">))</span> <span class="kwb">$wordcounts</span><span class="sym">[] =</span> <span class="kwa">array</span><span class="sym">(</span><span class="kwb">$k</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">);</span>
<span class="kwa">usort</span><span class="sym">(</span><span class="kwb">$wordcounts</span><span class="sym">,</span><span class="str">'CmpCountAndName'</span><span class="sym">);</span>
<span class="kwa">while</span> <span class="sym">(</span><span class="kwa">list</span><span class="sym">(</span><span class="kwb">$k</span><span class="sym">,</span><span class="kwb">$v</span><span class="sym">) =</span> <span class="kwa">each</span><span class="sym">(</span><span class="kwb">$wordcounts</span><span class="sym">))</span> <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;%7d %s</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwb">$v</span><span class="sym">[</span><span class="num">1</span><span class="sym">],</span> <span class="kwb">$v</span><span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>

?<span class="sym">&gt;</span>
