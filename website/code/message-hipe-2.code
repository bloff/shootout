<span class="slc">%  The Great Computer Language Shootout</span>
<span class="slc">%   http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">%   contributed by Soeren Finster</span>
<span class="slc">%</span>
<span class="slc">%   erl -noshell -noinput -run message main N</span>


<span class="sym">-</span><span class="kwd">module</span><span class="sym">(</span>message<span class="sym">)</span>.
<span class="sym">-</span><span class="kwd">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">,</span> loop<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

<span class="kwd">main</span><span class="sym">([</span>Arg<span class="sym">]) -&gt;</span>
    N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span>Arg<span class="sym">),</span>
    Last <span class="sym">=</span> <span class="kwd">start</span><span class="sym">(</span><span class="num">500</span><span class="sym">,</span> <span class="kwb">self</span><span class="sym">()),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;~p~n&quot;</span><span class="sym">, [</span><span class="kwd">sendtimes</span><span class="sym">(</span>N<span class="sym">,</span> Last<span class="sym">,</span> <span class="num">0</span><span class="sym">)]),</span>
    erlang<span class="sym">:</span><span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.

<span class="kwd">start</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> LastPID<span class="sym">) -&gt;</span> LastPID<span class="sym">;</span>

<span class="kwd">start</span><span class="sym">(</span>X<span class="sym">,</span> LastPID<span class="sym">) -&gt;</span> <span class="kwd">start</span><span class="sym">(</span>X<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="kwb">spawn</span><span class="sym">(</span>message1<span class="sym">,</span> loop<span class="sym">, [</span>LastPID<span class="sym">]))</span>.

<span class="kwd">loop</span><span class="sym">(</span>LastPID<span class="sym">) -&gt;</span>
	<span class="kwa">receive</span>
		N <span class="sym">-&gt;</span>
		LastPID <span class="sym">!</span> N<span class="sym">+</span><span class="num">1</span><span class="sym">,</span>
		<span class="kwd">loop</span><span class="sym">(</span>LastPID<span class="sym">)</span>
	<span class="kwa">end</span>.

<span class="kwd">sendtimes</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>_ <span class="sym">,</span>X<span class="sym">) -&gt;</span> X<span class="sym">;</span>

<span class="kwd">sendtimes</span><span class="sym">(</span>N<span class="sym">,</span> Last<span class="sym">,</span> X<span class="sym">) -&gt;</span>
	Last <span class="sym">!</span> <span class="num">0</span><span class="sym">,</span>
	<span class="kwa">receive</span>	Y <span class="sym">-&gt;</span> Y <span class="kwa">end</span><span class="sym">,</span>
	<span class="kwd">sendtimes</span><span class="sym">(</span>N<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> Last<span class="sym">,</span> X<span class="sym">+</span>Y<span class="sym">)</span>.


