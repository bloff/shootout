<span class="slc">#!/usr/bin/perl
</span><span class="slc"># $Id: hash2-perl.code,v 1.5 2005-04-04 14:56:44 bfulgham Exp $
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="slc"># with help from Steve Fink
</span>
<span class="kwa">use</span> strict<span class="sym">;

</span><span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">= (</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] &gt;</span> <span class="num">0</span><span class="sym">)</span> ? <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] :</span> <span class="num">1</span><span class="sym">;
</span><span class="kwc">my</span> %hash1 <span class="sym">= ();
</span><span class="kwb">$hash1</span><span class="sym">{</span><span class="str">&quot;foo_$_&quot;</span><span class="sym">} =</span> <span class="kwb">$_</span> <span class="kwa">for</span> <span class="num">0</span>.<span class="num">.9999</span><span class="sym">;
</span><span class="kwc">my</span> %hash2 <span class="sym">= ();
</span><span class="kwc">my</span><span class="sym">(</span><span class="kwb">$k</span><span class="sym">,</span> <span class="kwb">$v</span><span class="sym">);
</span><span class="kwa">for</span> <span class="sym">(</span><span class="num">1</span>..<span class="kwb">$n</span><span class="sym">) {
</span>    <span class="kwb">$hash2</span><span class="sym">{</span><span class="kwb">$_</span><span class="sym">} +=</span> <span class="kwb">$hash1</span><span class="sym">{</span><span class="kwb">$_</span><span class="sym">}</span> <span class="kwa">while</span> <span class="sym">(</span>defined <span class="sym">(</span><span class="kwb">$_</span> <span class="sym">=</span> each %hash1<span class="sym">));
}
</span>print <span class="str">&quot;$hash1{foo_1} $hash1{foo_9999} $hash2{foo_1} $hash2{foo_9999}</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
