<span class="line">    1 </span><span class="str">&quot;  The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="str">    contributed by Isaac Gouy
</span><span class="line">    3 </span><span class="str"> 
</span><span class="line">    4 </span><span class="str">    To run: gst -QI /usr/local/share/smalltalk/gst.im objinst.st -a 1000000
</span><span class="line">    5 </span><span class="str">  &quot;</span>
<span class="line">    6 </span>
<span class="line">    7 </span>  Object subclass<span class="sym">:</span> <span class="slc">#Toggle 
</span><span class="line">    8 </span><span class="slc"></span>instanceVariableNames<span class="sym">:</span> <span class="str">'state'</span>
<span class="line">    9 </span> classVariableNames<span class="sym">:</span> <span class="str">''</span>
<span class="line">   10 </span> poolDictionaries<span class="sym">:</span> <span class="str">''</span>
<span class="line">   11 </span> category<span class="sym">:</span> nil <span class="sym">!
</span><span class="line">   12 </span><span class="sym"> 
</span><span class="line">   13 </span><span class="sym"> !</span>Toggle class methodsFor<span class="sym">:</span> <span class="str">'instance creation'</span><span class="sym">!
</span><span class="line">   14 </span><span class="sym"> 
</span><span class="line">   15 </span><span class="sym"> </span>new<span class="sym">:</span> aBoolean
<span class="line">   16 </span>    ^self basicNew initialize<span class="sym">:</span> aBoolean <span class="sym">! !
</span><span class="line">   17 </span><span class="sym"> 
</span><span class="line">   18 </span><span class="sym"> 
</span><span class="line">   19 </span><span class="sym"> !</span>Toggle methodsFor<span class="sym">:</span> <span class="str">'private'</span><span class="sym">!
</span><span class="line">   20 </span><span class="sym"> 
</span><span class="line">   21 </span><span class="sym"> </span>initialize<span class="sym">:</span> aBoolean
<span class="line">   22 </span>    state <span class="sym">:=</span> aBoolean <span class="sym">! !
</span><span class="line">   23 </span><span class="sym"> 
</span><span class="line">   24 </span><span class="sym"> 
</span><span class="line">   25 </span><span class="sym"> !</span>Toggle methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!
</span><span class="line">   26 </span><span class="sym"> 
</span><span class="line">   27 </span><span class="sym"> </span>activate
<span class="line">   28 </span>    state <span class="sym">:=</span> state <span class="kwa">not</span> <span class="sym">!
</span><span class="line">   29 </span><span class="sym"> 
</span><span class="line">   30 </span><span class="sym"> </span>state
<span class="line">   31 </span>    ^state <span class="sym">! !
</span><span class="line">   32 </span><span class="sym"> 
</span><span class="line">   33 </span><span class="sym"> 
</span><span class="line">   34 </span><span class="sym"> </span>Toggle subclass<span class="sym">:</span> <span class="slc">#NToggle 
</span><span class="line">   35 </span><span class="slc"></span>instanceVariableNames<span class="sym">:</span> <span class="str">'trigger count'</span>
<span class="line">   36 </span> classVariableNames<span class="sym">:</span> <span class="str">''</span>
<span class="line">   37 </span> poolDictionaries<span class="sym">:</span> <span class="str">''</span>
<span class="line">   38 </span> category<span class="sym">:</span> nil <span class="sym">!
</span><span class="line">   39 </span><span class="sym"> 
</span><span class="line">   40 </span><span class="sym"> 
</span><span class="line">   41 </span><span class="sym"> !</span>NToggle class methodsFor<span class="sym">:</span> <span class="str">'instance creation'</span><span class="sym">!
</span><span class="line">   42 </span><span class="sym"> 
</span><span class="line">   43 </span><span class="sym"> </span>new<span class="sym">:</span> aBoolean withTrigger<span class="sym">:</span> anInteger
<span class="line">   44 </span>    ^<span class="sym">(</span>super new<span class="sym">:</span> aBoolean<span class="sym">)</span> withTrigger<span class="sym">:</span> anInteger <span class="sym">! !
</span><span class="line">   45 </span><span class="sym"> 
</span><span class="line">   46 </span><span class="sym"> 
</span><span class="line">   47 </span><span class="sym"> !</span>NToggle methodsFor<span class="sym">:</span> <span class="str">'private'</span><span class="sym">!
</span><span class="line">   48 </span><span class="sym"> 
</span><span class="line">   49 </span><span class="sym"> </span>withTrigger<span class="sym">:</span> anInteger
<span class="line">   50 </span>    trigger <span class="sym">:=</span> anInteger.
<span class="line">   51 </span>    count <span class="sym">:=</span> <span class="num">0</span> <span class="sym">! !
</span><span class="line">   52 </span><span class="sym"> 
</span><span class="line">   53 </span><span class="sym"> 
</span><span class="line">   54 </span><span class="sym"> !</span>NToggle methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!
</span><span class="line">   55 </span><span class="sym"> 
</span><span class="line">   56 </span><span class="sym"> </span>activate
<span class="line">   57 </span>    <span class="str">&quot;Toggle and answer the receiver&quot;</span>
<span class="line">   58 </span>    <span class="sym">(</span>count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1</span><span class="sym">) &gt;=</span> trigger ifTrue<span class="sym">: [
</span><span class="line">   59 </span><span class="sym"> </span>      state <span class="sym">:=</span> state <span class="kwa">not</span>.
<span class="line">   60 </span>        count <span class="sym">:=</span> <span class="num">0
</span><span class="line">   61 </span><span class="num"> </span>   <span class="sym">] ! !
</span><span class="line">   62 </span><span class="sym"> 
</span><span class="line">   63 </span><span class="sym"> 
</span><span class="line">   64 </span><span class="sym"> |</span> n toggle ntoggle <span class="sym">|
</span><span class="line">   65 </span><span class="sym"> </span>n <span class="sym">:=</span> Smalltalk arguments first asInteger.
<span class="line">   66 </span>
<span class="line">   67 </span>  toggle <span class="sym">:=</span> Toggle new<span class="sym">:</span> true.
<span class="line">   68 </span> <span class="num">5</span> timesRepeat<span class="sym">: [</span>toggle activate state displayNl<span class="sym">]</span>.
<span class="line">   69 </span> n timesRepeat<span class="sym">: [</span>toggle <span class="sym">:=</span> Toggle new<span class="sym">:</span> true<span class="sym">]</span>.
<span class="line">   70 </span> Transcript nl.
<span class="line">   71 </span>
<span class="line">   72 </span>  ntoggle <span class="sym">:=</span> NToggle new<span class="sym">:</span> true withTrigger<span class="sym">:</span> <span class="num">3</span>.
<span class="line">   73 </span> <span class="num">8</span> timesRepeat<span class="sym">: [</span>ntoggle activate state displayNl<span class="sym">]</span>.
<span class="line">   74 </span>  n timesRepeat<span class="sym">: [</span>ntoggle <span class="sym">:=</span> NToggle new<span class="sym">:</span> true withTrigger<span class="sym">:</span> <span class="num">3</span><span class="sym">] !</span>
