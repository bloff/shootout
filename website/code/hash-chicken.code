<span class="slc">;; ---------------------------------------------------------------------</span>
<span class="slc">;; The Great Computer Language Shootout</span>
<span class="slc">;; http://shootout.alioth.debian.org/</span>
<span class="slc">;;</span>
<span class="slc">;; Based on existing Shootout submission [Scheme Guile]. However hashing</span>
<span class="slc">;; tasks performed using only SRFI-69-compliant facilities. Use of</span>
<span class="slc">;; default hash function and predicate provides significantly better</span>
<span class="slc">;; performance than explicitly passing native implementations; thus, do</span>
<span class="slc">;; this:</span>
<span class="slc">;;</span>
<span class="slc">;;    ... (ht (make-hash-table)) ...</span>
<span class="slc">;;</span>
<span class="slc">;; not this:</span>
<span class="slc">;;</span>
<span class="slc">;;    ... (ht (make-hash-table string-ci=? string-ci-hash)) ...</span>
<span class="slc">;;</span>
<span class="slc">;; Utilises extension, 'format'. If not available can be installed by</span>
<span class="slc">;; issuing the following shell command [as 'root']:</span>
<span class="slc">;;</span>
<span class="slc">;; # chicken-setup format</span>
<span class="slc">;;</span>
<span class="slc">;; Contributed by Anthony Borla</span>
<span class="slc">;; ---------------------------------------------------------------------</span>

<span class="sym">(</span>require<span class="sym">-</span>extension format<span class="sym">)</span>

<span class="sym">(</span>declare <span class="sym">(</span>fixnum<span class="sym">) (</span>disable<span class="sym">-</span>interrupts<span class="sym">) (</span>unsafe<span class="sym">) (</span>block<span class="sym">))</span>

<span class="slc">; -------------------------------</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">null</span>? args<span class="sym">)</span>
               <span class="num">1</span>
               <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">car</span> args<span class="sym">))))</span>

    <span class="sym">(</span>c <span class="num">0</span><span class="sym">) (</span>ht <span class="sym">(</span>make<span class="sym">-</span>hash<span class="sym">-</span>table<span class="sym">)))</span>

    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">1</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))</span>
        <span class="sym">((&lt;</span> n i<span class="sym">))</span>
      <span class="sym">(</span>hash<span class="sym">-</span>table<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> ht <span class="sym">(</span>number<span class="sym">-&gt;</span>string i <span class="num">16</span><span class="sym">)</span> i<span class="sym">))</span>

    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">1</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))</span>
        <span class="sym">((&lt;</span> n i<span class="sym">))</span>
      <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>hash<span class="sym">-</span>table<span class="sym">-</span>exists? ht <span class="sym">(</span>number<span class="sym">-&gt;</span>string i <span class="num">10</span><span class="sym">))</span>
          <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> c <span class="sym">(+</span> c <span class="num">1</span><span class="sym">))))</span>

    <span class="sym">(</span>format #t <span class="str">&quot;~d~%&quot;</span> c<span class="sym">)))</span>

<span class="slc">; -------------------------------</span>

<span class="sym">(</span>main <span class="sym">(</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>arguments<span class="sym">))</span>

