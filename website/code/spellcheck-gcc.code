<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">/* -*- mode: c -*-
 * $Id: spellcheck-gcc.code,v 1.1 2004-11-02 08:53:27 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 * with help from Brad Knotwell
 */</FONT></I>

#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;ctype.h&gt;</FONT></B>
#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;stdio.h&gt;</FONT></B>
#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;stdlib.h&gt;</FONT></B>
#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;unistd.h&gt;</FONT></B>
#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;simple_hash.h&quot;</FONT></B>

#<B><FONT COLOR="#5F9EA0">define</FONT></B> <FONT COLOR="#B8860B">MAXLINELEN</FONT> 128

<B><FONT COLOR="#228B22">struct</FONT></B> ht_ht *dict = NULL;

<B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#0000FF">handleInput</FONT></B>(FILE *input,<B><FONT COLOR="#228B22">void</FONT></B> (*hashManipFn)(<B><FONT COLOR="#228B22">char</FONT></B> *))
{
    <B><FONT COLOR="#228B22">int</FONT></B> wordbufsize = 80,i = 0;
    <B><FONT COLOR="#228B22">char</FONT></B> *cp, *wordbuf = (<B><FONT COLOR="#228B22">char</FONT></B> *)malloc(wordbufsize + 1);
    <B><FONT COLOR="#228B22">char</FONT></B> line[MAXLINELEN];
    
    <B><FONT COLOR="#A020F0">if</FONT></B>((wordbuf = malloc(wordbufsize+1)) == NULL) 
        <B><FONT COLOR="#A020F0">return</FONT></B>(fprintf(stderr,<B><FONT COLOR="#BC8F8F">&quot;malloc\n&quot;</FONT></B>),0);

    <B><FONT COLOR="#A020F0">while</FONT></B> (fgets(line, MAXLINELEN, input))
	<B><FONT COLOR="#A020F0">for</FONT></B> (cp=line; *cp &gt; 0; cp++) {
	    <B><FONT COLOR="#A020F0">if</FONT></B> (isspace(*cp)) {
		<B><FONT COLOR="#A020F0">if</FONT></B> (i) {
		    wordbuf[i] = <B><FONT COLOR="#BC8F8F">'\0'</FONT></B>;
                    hashManipFn(wordbuf);
		    i = 0;
		}
	    } <B><FONT COLOR="#A020F0">else</FONT></B> {
		wordbuf[i++] = *cp;
		<B><FONT COLOR="#A020F0">if</FONT></B> (i == wordbufsize) {
		    wordbufsize *= 2;
		    <B><FONT COLOR="#A020F0">if</FONT></B>((wordbuf = realloc(wordbuf, wordbufsize + 1)) == NULL)
                        <B><FONT COLOR="#A020F0">return</FONT></B>(fprintf(stderr, <B><FONT COLOR="#BC8F8F">&quot;realloc\n&quot;</FONT></B>), 0);
		}
	    }
        }

    free(wordbuf);
    <B><FONT COLOR="#A020F0">return</FONT></B>(1);
}

<B><FONT COLOR="#228B22">void</FONT></B> <B><FONT COLOR="#0000FF">spellCheck</FONT></B>(<B><FONT COLOR="#228B22">char</FONT></B> *key) { 
    <B><FONT COLOR="#A020F0">if</FONT></B> (ht_find_new(dict,key)-&gt;val != 1) printf(<B><FONT COLOR="#BC8F8F">&quot;%s\n&quot;</FONT></B>,key);
}

<B><FONT COLOR="#228B22">void</FONT></B> <B><FONT COLOR="#0000FF">hashLoad</FONT></B>(<B><FONT COLOR="#228B22">char</FONT></B> *key) { ht_find_new(dict,key)-&gt;val = 1; }
 
<B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#0000FF">main</FONT></B>(<B><FONT COLOR="#228B22">int</FONT></B> argc, <B><FONT COLOR="#228B22">char</FONT></B> *argv[]) {
    FILE *fh;
    <B><FONT COLOR="#228B22">int</FONT></B> rc;

    <I><FONT COLOR="#B22222">/*  
        ht_create doesn't handle malloc and calloc failures 
        so this is superfluous 
    */</FONT></I>
    <B><FONT COLOR="#A020F0">if</FONT></B>((dict = ht_create(40000)) == NULL)
        <B><FONT COLOR="#A020F0">return</FONT></B>(fprintf(stderr,<B><FONT COLOR="#BC8F8F">&quot;hash creation failed\n&quot;</FONT></B>),EXIT_FAILURE);
    
    <B><FONT COLOR="#A020F0">if</FONT></B> ((fh = fopen(<B><FONT COLOR="#BC8F8F">&quot;Usr.Dict.Words&quot;</FONT></B>, <B><FONT COLOR="#BC8F8F">&quot;r&quot;</FONT></B>)) == NULL) 
        <B><FONT COLOR="#A020F0">return</FONT></B>(fprintf(stderr,<B><FONT COLOR="#BC8F8F">&quot;couldn't open dictionary\n&quot;</FONT></B>),EXIT_FAILURE);

    rc = ((handleInput(fh,hashLoad) &amp;&amp; handleInput(stdin,spellCheck)) ? EXIT_SUCCESS : EXIT_FAILURE);

    ht_destroy(dict);
    <B><FONT COLOR="#A020F0">return</FONT></B>(rc);
}</pre></td></tr></table>
