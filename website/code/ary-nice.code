<span class="line">    1 </span><span class="com">/* The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="com">     http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="com">    contributed by Isaac Gouy
</span><span class="line">    4 </span><span class="com"> 
</span><span class="line">    5 </span><span class="com"> To compile:
</span><span class="line">    6 </span><span class="com">            nicec --sourcepath=.. -d=. -a ary.jar ary
</span><span class="line">    7 </span><span class="com"> 
</span><span class="line">    8 </span><span class="com"> To run:
</span><span class="line">    9 </span><span class="com">    java -ea -jar ary.jar 7000
</span><span class="line">   10 </span><span class="com"> */</span>
<span class="line">   11 </span>
<span class="line">   12 </span>
<span class="line">   13 </span>   <span class="kwa">import</span> ackermann<span class="sym">;</span> <span class="slc">// reuse toSinglePositiveInt 
</span><span class="line">   14 </span><span class="slc"></span>
<span class="line">   15 </span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span><span class="line">   16 </span><span class="sym"> </span>   <span class="kwa">let</span> n <span class="sym">=</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">);
</span><span class="line">   17 </span><span class="sym"> 
</span><span class="line">   18 </span><span class="sym"> </span>   <span class="kwa">let</span> x <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>n<span class="sym">];
</span><span class="line">   19 </span><span class="sym"> </span>   <span class="kwa">for</span><span class="sym">(</span>var i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++)</span> x<span class="sym">[</span>i<span class="sym">] =</span> i<span class="sym">+</span><span class="num">1</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym"> 
</span><span class="line">   21 </span><span class="sym"> </span>   <span class="kwa">let</span> y <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>n<span class="sym">];
</span><span class="line">   22 </span><span class="sym"> 
</span><span class="line">   23 </span><span class="sym"> </span>   <span class="kwa">for</span><span class="sym">(</span>var k<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> k<span class="sym">&lt;</span><span class="num">1000</span><span class="sym">;</span> k<span class="sym">++)
</span><span class="line">   24 </span><span class="sym"> </span>      <span class="kwa">for</span><span class="sym">(</span>var j<span class="sym">=</span>n<span class="num">-1</span><span class="sym">;</span> j<span class="sym">&gt;=</span><span class="num">0</span><span class="sym">;</span> j<span class="sym">--)</span> y<span class="sym">[</span>j<span class="sym">] +=</span> x<span class="sym">[</span>j<span class="sym">];
</span><span class="line">   25 </span><span class="sym"> 
</span><span class="line">   26 </span><span class="sym"> </span>   print<span class="sym">(</span>y<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span> print<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);</span> println<span class="sym">(</span>y<span class="sym">[</span>n<span class="num">-1</span><span class="sym">]);
</span><span class="line">   27 </span><span class="sym"> }</span> 
