<span class="com">/* The Great Computer Language Shootout
    http://shootout.alioth.debian.org/
   contributed by Isaac Gouy

To compile:
	   nicec --sourcepath=.. -d=. -a ary.jar ary

To run:
   java -ea -jar ary.jar 7000
*/</span>


<span class="kwa">import</span> ackermann<span class="sym">;</span> <span class="slc">// reuse toSinglePositiveInt
</span>
<span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span>   <span class="kwa">let</span> n <span class="sym">=</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">);

</span>   <span class="kwa">let</span> x <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>n<span class="sym">];
</span>   <span class="kwa">for</span><span class="sym">(</span>var i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++)</span> x<span class="sym">[</span>i<span class="sym">] =</span> i<span class="sym">+</span><span class="num">1</span><span class="sym">;

</span>   <span class="kwa">let</span> y <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>n<span class="sym">];

</span>   <span class="kwa">for</span><span class="sym">(</span>var k<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> k<span class="sym">&lt;</span><span class="num">1000</span><span class="sym">;</span> k<span class="sym">++)
</span>      <span class="kwa">for</span><span class="sym">(</span>var j<span class="sym">=</span>n<span class="num">-1</span><span class="sym">;</span> j<span class="sym">&gt;=</span><span class="num">0</span><span class="sym">;</span> j<span class="sym">--)</span> y<span class="sym">[</span>j<span class="sym">] +=</span> x<span class="sym">[</span>j<span class="sym">];

</span>   print<span class="sym">(</span>y<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span> print<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);</span> println<span class="sym">(</span>y<span class="sym">[</span>n<span class="num">-1</span><span class="sym">]);
}</span>
