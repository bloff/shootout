<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(* -*- mode: sml -*-
 * $Id: moments-smlnj.code,v 1.1 2004-11-02 08:52:37 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 * from Stephen Weeks
 * Modified by Dan Wang to be more functional and use SML/NJ library
 * sorting function.
 *)</FONT></I>

<B><FONT COLOR="#5F9EA0">structure</FONT></B> Test : <B><FONT COLOR="#5F9EA0">sig</FONT></B>
    <B><FONT COLOR="#A020F0">val</FONT></B> main : (<B><FONT COLOR="#228B22">string</FONT></B> <B><FONT COLOR="#5F9EA0">*</FONT></B> <B><FONT COLOR="#228B22">string</FONT></B> <B><FONT COLOR="#228B22">list</FONT></B>) <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> OS.Process.status
<B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">struct</FONT></B>

<B><FONT COLOR="#A020F0">val</FONT></B> ins <B><FONT COLOR="#5F9EA0">=</FONT></B> TextIO.stdIn

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">loop</FONT></I></B></FONT></B> (nums,sum) <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">case</FONT></B> TextIO.inputLine ins <B><FONT COLOR="#A020F0">of</FONT></B>
      <B><FONT COLOR="#5F9EA0">NONE</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> (nums,sum)
    <B><FONT COLOR="#5F9EA0">|</FONT></B> <B><FONT COLOR="#5F9EA0">SOME</FONT></B>(instr) <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
        (<B><FONT COLOR="#A020F0">case</FONT></B> instr <B><FONT COLOR="#A020F0">of</FONT></B>
              <B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> (nums,sum)
	    <B><FONT COLOR="#5F9EA0">|</FONT></B> l <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> (<B><FONT COLOR="#A020F0">case</FONT></B> Real.fromString l <B><FONT COLOR="#A020F0">of</FONT></B>
	          <B><FONT COLOR="#5F9EA0">NONE</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#A020F0">raise</FONT></B> Fail <B><FONT COLOR="#BC8F8F">&quot;invalid input&quot;</FONT></B>
	        <B><FONT COLOR="#5F9EA0">|</FONT></B> <B><FONT COLOR="#5F9EA0">SOME</FONT></B> num <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> loop(num<B><FONT COLOR="#5F9EA0">::</FONT></B>nums,sum<B><FONT COLOR="#5F9EA0">+</FONT></B>num)))

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">printl</FONT></I></B></FONT></B> [] <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">|</FONT></B> printl(h<B><FONT COLOR="#5F9EA0">::</FONT></B>t) <B><FONT COLOR="#5F9EA0">=</FONT></B> ( <B><FONT COLOR="#A020F0">print</FONT></B> h ; printl t )

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">r2s</FONT></I></B></FONT></B> (x: <B><FONT COLOR="#228B22">real</FONT></B>): <B><FONT COLOR="#228B22">string</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">if</FONT></B> Real.<B><FONT COLOR="#5F9EA0">==</FONT></B> (x, 0.0) <B><FONT COLOR="#A020F0">then</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;0.000000&quot;</FONT></B>
   <B><FONT COLOR="#A020F0">else</FONT></B> String.translate
     (<B><FONT COLOR="#A020F0">fn</FONT></B> #<B><FONT COLOR="#BC8F8F">&quot;~&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;-&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">|</FONT></B> c <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> str c)
     (Real.fmt (StringCvt.FIX (<B><FONT COLOR="#5F9EA0">SOME</FONT></B> 6)) x)
      
<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main</FONT></I></B></FONT></B>(name, args) <B><FONT COLOR="#5F9EA0">=</FONT></B>  <B><FONT COLOR="#A020F0">let</FONT></B>
  
    <B><FONT COLOR="#A020F0">val</FONT></B> (nums,sum) <B><FONT COLOR="#5F9EA0">=</FONT></B> loop ([],0.0) 
    <B><FONT COLOR="#A020F0">val</FONT></B> nums <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.fromList nums 
    <B><FONT COLOR="#A020F0">val</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.length nums
    <B><FONT COLOR="#A020F0">val</FONT></B> n_float <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">real</FONT></B> n
    <B><FONT COLOR="#A020F0">val</FONT></B> mean <B><FONT COLOR="#5F9EA0">=</FONT></B> sum <B><FONT COLOR="#5F9EA0">/</FONT></B> n_float
      
<B><FONT COLOR="#A020F0">    fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">moments</FONT></I></B></FONT></B> (x,{average_deviation,variance,skew,kurtosis}) <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">let</FONT></B>
      <B><FONT COLOR="#A020F0">val</FONT></B> deviation <B><FONT COLOR="#5F9EA0">=</FONT></B> x <B><FONT COLOR="#5F9EA0">-</FONT></B> mean
      <B><FONT COLOR="#A020F0">val</FONT></B> average_deviation <B><FONT COLOR="#5F9EA0">=</FONT></B>
	average_deviation <B><FONT COLOR="#5F9EA0">+</FONT></B> abs(deviation)
      <B><FONT COLOR="#A020F0">val</FONT></B> dev2 <B><FONT COLOR="#5F9EA0">=</FONT></B> deviation <B><FONT COLOR="#5F9EA0">*</FONT></B> deviation
      <B><FONT COLOR="#A020F0">val</FONT></B> variance <B><FONT COLOR="#5F9EA0">=</FONT></B> variance <B><FONT COLOR="#5F9EA0">+</FONT></B> dev2
      <B><FONT COLOR="#A020F0">val</FONT></B> dev3 <B><FONT COLOR="#5F9EA0">=</FONT></B> dev2 <B><FONT COLOR="#5F9EA0">*</FONT></B> deviation
      <B><FONT COLOR="#A020F0">val</FONT></B> skew <B><FONT COLOR="#5F9EA0">=</FONT></B> skew <B><FONT COLOR="#5F9EA0">+</FONT></B> dev3
	<B><FONT COLOR="#A020F0">val</FONT></B> dev4 <B><FONT COLOR="#5F9EA0">=</FONT></B> dev3 <B><FONT COLOR="#5F9EA0">*</FONT></B> deviation
	<B><FONT COLOR="#A020F0">val</FONT></B> kurtosis <B><FONT COLOR="#5F9EA0">=</FONT></B> kurtosis <B><FONT COLOR="#5F9EA0">+</FONT></B> dev4
    <B><FONT COLOR="#A020F0">in</FONT></B> {average_deviation<B><FONT COLOR="#5F9EA0">=</FONT></B>average_deviation,
	variance<B><FONT COLOR="#5F9EA0">=</FONT></B>variance,
	skew<B><FONT COLOR="#5F9EA0">=</FONT></B>skew,
	kurtosis<B><FONT COLOR="#5F9EA0">=</FONT></B>kurtosis}
    <B><FONT COLOR="#A020F0">end</FONT></B>
    <B><FONT COLOR="#A020F0">val</FONT></B> init <B><FONT COLOR="#5F9EA0">=</FONT></B> {average_deviation<B><FONT COLOR="#5F9EA0">=</FONT></B>0.0,
		variance<B><FONT COLOR="#5F9EA0">=</FONT></B>0.0,
		skew<B><FONT COLOR="#5F9EA0">=</FONT></B>0.0,
		kurtosis<B><FONT COLOR="#5F9EA0">=</FONT></B>0.0}

    <B><FONT COLOR="#A020F0">val</FONT></B> {average_deviation,variance,skew,kurtosis} <B><FONT COLOR="#5F9EA0">=</FONT></B>
      Array.foldl moments init nums
      
    <B><FONT COLOR="#A020F0">val</FONT></B> average_deviation <B><FONT COLOR="#5F9EA0">=</FONT></B> average_deviation <B><FONT COLOR="#5F9EA0">/</FONT></B> n_float
    <B><FONT COLOR="#A020F0">val</FONT></B> variance <B><FONT COLOR="#5F9EA0">=</FONT></B> variance <B><FONT COLOR="#5F9EA0">/</FONT></B>  <B><FONT COLOR="#228B22">real</FONT></B> (n <B><FONT COLOR="#5F9EA0">-</FONT></B> 1);
    <B><FONT COLOR="#A020F0">val</FONT></B> standard_deviation <B><FONT COLOR="#5F9EA0">=</FONT></B> Real.Math.sqrt (variance)
    <B><FONT COLOR="#A020F0">val</FONT></B> {skew,kurtosis} <B><FONT COLOR="#5F9EA0">=</FONT></B>
      <B><FONT COLOR="#A020F0">if</FONT></B> variance <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 0.0
	<B><FONT COLOR="#A020F0">then</FONT></B> {skew<B><FONT COLOR="#5F9EA0">=</FONT></B>skew <B><FONT COLOR="#5F9EA0">/</FONT></B> n_float <B><FONT COLOR="#5F9EA0">/</FONT></B> variance <B><FONT COLOR="#5F9EA0">/</FONT></B> standard_deviation,
	      kurtosis<B><FONT COLOR="#5F9EA0">=</FONT></B>kurtosis <B><FONT COLOR="#5F9EA0">/</FONT></B> n_float <B><FONT COLOR="#5F9EA0">/</FONT></B> variance <B><FONT COLOR="#5F9EA0">/</FONT></B> variance <B><FONT COLOR="#5F9EA0">-</FONT></B> 3.0}
      <B><FONT COLOR="#A020F0">else</FONT></B> {skew<B><FONT COLOR="#5F9EA0">=</FONT></B>skew,kurtosis<B><FONT COLOR="#5F9EA0">=</FONT></B>kurtosis}
	
    <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> ArrayQSort.sort Real.compare nums
    <B><FONT COLOR="#A020F0">val</FONT></B> mid <B><FONT COLOR="#5F9EA0">=</FONT></B> Int.<B><FONT COLOR="#5F9EA0">quot</FONT></B> (n, 2)
    <B><FONT COLOR="#A020F0">val</FONT></B> median <B><FONT COLOR="#5F9EA0">=</FONT></B>
      <B><FONT COLOR="#A020F0">if</FONT></B> Int.<B><FONT COLOR="#5F9EA0">rem</FONT></B> (n, 2) <B><FONT COLOR="#5F9EA0">=</FONT></B> 1
	<B><FONT COLOR="#A020F0">then</FONT></B> Array.sub (nums, mid)
      <B><FONT COLOR="#A020F0">else</FONT></B> (Array.sub (nums, mid) <B><FONT COLOR="#5F9EA0">+</FONT></B> 
	    Array.sub (nums, mid <B><FONT COLOR="#5F9EA0">-</FONT></B> 1)) <B><FONT COLOR="#5F9EA0">/</FONT></B> 2.0
<B><FONT COLOR="#A020F0">in</FONT></B>
  printl [<B><FONT COLOR="#BC8F8F">&quot;n:                  &quot;</FONT></B>, Int.toString n, <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>,
	  <B><FONT COLOR="#BC8F8F">&quot;median:             &quot;</FONT></B>, r2s median, <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>,
	  <B><FONT COLOR="#BC8F8F">&quot;mean:               &quot;</FONT></B>, r2s mean, <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>,
	  <B><FONT COLOR="#BC8F8F">&quot;average_deviation:  &quot;</FONT></B>, r2s average_deviation, <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>,
	  <B><FONT COLOR="#BC8F8F">&quot;standard_deviation: &quot;</FONT></B>, r2s standard_deviation, <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>,
	  <B><FONT COLOR="#BC8F8F">&quot;variance:           &quot;</FONT></B>, r2s variance, <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>,
	  <B><FONT COLOR="#BC8F8F">&quot;skew:               &quot;</FONT></B>, r2s skew, <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>,
	  <B><FONT COLOR="#BC8F8F">&quot;kurtosis:           &quot;</FONT></B>, r2s kurtosis];
  OS.Process.success
<B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> SMLofNJ.exportFn(<B><FONT COLOR="#BC8F8F">&quot;moments&quot;</FONT></B>, Test.main);</pre></td></tr></table>
