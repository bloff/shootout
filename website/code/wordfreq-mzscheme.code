#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>mzscheme <span class="sym">-</span>r
<span class="slc">; $Id: wordfreq-mzscheme.code,v 1.8 2006-06-09 23:27:22 bfulgham Exp $</span>
<span class="slc">;  http://shootout.alioth.debian.org/</span>
<span class="slc">;  wordfreq.mzscheme by Grzegorz Chrupaa</span>
<span class="slc">;  Updated and corrected by Brent Fulgham</span>
<span class="slc">;  Re-written by Matthew Flatt with some inspriation from the Python example</span>

<span class="sym">(</span>module wordfreq mzscheme
  <span class="sym">(</span>require <span class="sym">(</span>lib <span class="str">&quot;list.ss&quot;</span><span class="sym">))</span>

  <span class="sym">(</span>define t <span class="sym">(</span>make<span class="sym">-</span>hash<span class="sym">-</span>table <span class="str">'equal))</span>
<span class="str"></span>
<span class="str">  (define (register-word! s)</span>
<span class="str">    (let ([s (string-downcase (bytes-&gt;string/utf-8 s))])</span>
<span class="str">      (hash-table-put! t s (add1 (hash-table-get t s (lambda () 0))))))</span>
<span class="str"></span>
<span class="str">  (let ([in (current-input-port)])</span>
<span class="str">    (let loop ()</span>
<span class="str">      (let ([m (regexp-match #rx#&quot;[a-zA-Z]+&quot; in)])</span>
<span class="str">	(when m</span>
<span class="str">	  (register-word! (car m))</span>
<span class="str">	  (loop)))))</span>
<span class="str"></span>
<span class="str">  (for-each display</span>
<span class="str">	    (sort (hash-table-map</span>
<span class="str">		   t</span>
<span class="str">		   (lambda (word count)</span>
<span class="str">		     (let ((count (number-&gt;string count)))</span>
<span class="str">		       (format&quot;~a~a ~a~%&quot;</span>
<span class="str">			      (make-string (- 7 (string-length count)) #</span><span class="esc">\s</span><span class="str">pace)</span>
<span class="str">			      count</span>
<span class="str">			      word))))</span>
<span class="str">		  string&gt;?)))</span>
