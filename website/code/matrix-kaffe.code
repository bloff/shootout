<span class="line">    1 </span><span class="slc">// $Id: matrix-kaffe.code,v 1.4 2004-11-13 07:42:12 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// modified to use a little less memory by Thomas Holenstein
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;
</span><span class="line">    7 </span><span class="sym">
</span><span class="line">    8 </span><span class="sym"></span><span class="kwa">public class</span> matrix <span class="sym">{
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwa">static</span> <span class="kwb">int</span> SIZE <span class="sym">=</span> <span class="num">30</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[]) {
</span><span class="line">   12 </span><span class="sym"></span>        <span class="kwb">int</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwb">int</span> m1<span class="sym">[][] =</span> mkmatrix<span class="sym">(</span>SIZE<span class="sym">,</span> SIZE<span class="sym">);
</span><span class="line">   14 </span><span class="sym"></span>        <span class="kwb">int</span> m2<span class="sym">[][] =</span> mkmatrix<span class="sym">(</span>SIZE<span class="sym">,</span> SIZE<span class="sym">);
</span><span class="line">   15 </span><span class="sym"></span>        <span class="kwb">int</span> mm<span class="sym">[][] =</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>SIZE<span class="sym">][</span>SIZE<span class="sym">];
</span><span class="line">   16 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   17 </span><span class="sym"></span>            mmult<span class="sym">(</span>SIZE<span class="sym">,</span> SIZE<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">,</span> mm<span class="sym">);
</span><span class="line">   18 </span><span class="sym">        }
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span>mm<span class="sym">[</span><span class="num">0</span><span class="sym">][</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   20 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);
</span><span class="line">   21 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span>mm<span class="sym">[</span><span class="num">2</span><span class="sym">][</span><span class="num">3</span><span class="sym">]);
</span><span class="line">   22 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);
</span><span class="line">   23 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span>mm<span class="sym">[</span><span class="num">3</span><span class="sym">][</span><span class="num">2</span><span class="sym">]);
</span><span class="line">   24 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>print<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);
</span><span class="line">   25 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span>mm<span class="sym">[</span><span class="num">4</span><span class="sym">][</span><span class="num">4</span><span class="sym">]);
</span><span class="line">   26 </span><span class="sym">    }
</span><span class="line">   27 </span><span class="sym">
</span><span class="line">   28 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">int</span><span class="sym">[][]</span> mkmatrix <span class="sym">(</span><span class="kwb">int</span> rows<span class="sym">,</span> <span class="kwb">int</span> cols<span class="sym">) {
</span><span class="line">   29 </span><span class="sym"></span>        <span class="kwb">int</span> count <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>        <span class="kwb">int</span> m<span class="sym">[][] =</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>rows<span class="sym">][</span>cols<span class="sym">];
</span><span class="line">   31 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>rows<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   32 </span><span class="sym"></span>            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> j<span class="sym">&lt;</span>cols<span class="sym">;</span> j<span class="sym">++) {
</span><span class="line">   33 </span><span class="sym"></span>                m<span class="sym">[</span>i<span class="sym">][</span>j<span class="sym">] =</span> count<span class="sym">++;
</span><span class="line">   34 </span><span class="sym">            }
</span><span class="line">   35 </span><span class="sym">        }
</span><span class="line">   36 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span>m<span class="sym">);
</span><span class="line">   37 </span><span class="sym">    }
</span><span class="line">   38 </span><span class="sym">
</span><span class="line">   39 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> mmult <span class="sym">(</span><span class="kwb">int</span> rows<span class="sym">,</span> <span class="kwb">int</span> cols<span class="sym">,
</span><span class="line">   40 </span><span class="sym"></span>                              <span class="kwb">int</span><span class="sym">[][]</span> m1<span class="sym">,</span> <span class="kwb">int</span><span class="sym">[][]</span> m2<span class="sym">,</span> <span class="kwb">int</span><span class="sym">[][]</span> m3<span class="sym">) {
</span><span class="line">   41 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>rows<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   42 </span><span class="sym"></span>            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> j<span class="sym">&lt;</span>cols<span class="sym">;</span> j<span class="sym">++) {
</span><span class="line">   43 </span><span class="sym"></span>                <span class="kwb">int</span> val <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   44 </span><span class="sym"></span>                <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> k<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> k<span class="sym">&lt;</span>cols<span class="sym">;</span> k<span class="sym">++) {
</span><span class="line">   45 </span><span class="sym"></span>                    val <span class="sym">+=</span> m1<span class="sym">[</span>i<span class="sym">][</span>k<span class="sym">] *</span> m2<span class="sym">[</span>k<span class="sym">][</span>j<span class="sym">];
</span><span class="line">   46 </span><span class="sym">                }
</span><span class="line">   47 </span><span class="sym"></span>                m3<span class="sym">[</span>i<span class="sym">][</span>j<span class="sym">] =</span> val<span class="sym">;
</span><span class="line">   48 </span><span class="sym">            }
</span><span class="line">   49 </span><span class="sym">        }
</span><span class="line">   50 </span><span class="sym">    }
</span><span class="line">   51 </span><span class="sym">}</span>
