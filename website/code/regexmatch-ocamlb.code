<span class="line">    1 </span><span class="com">(*
</span><span class="line">    2 </span><span class="com"> * $Id: regexmatch-ocamlb.code,v 1.4 2004-11-11 07:14:05 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://shootout.alioth.debian.org
</span><span class="line">    4 </span><span class="com"> * from: Markus Mottl
</span><span class="line">    5 </span><span class="com"> *)</span>
<span class="line">    6 </span>
<span class="line">    7 </span><span class="kwa">open</span> Pcre
<span class="line">    8 </span>
<span class="line">    9 </span><span class="kwa">let</span> rex <span class="sym">=
</span><span class="line">   10 </span><span class="sym"></span>  regexp ~flags<span class="sym">:[</span>`EXTENDED<span class="sym">]
</span><span class="line">   11 </span><span class="sym"></span>    <span class="str">&quot;(?: ^ | [^</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">(])           # must be preceeded by non-digit
</span><span class="line">   12 </span><span class="str">     (</span><span class="esc">\\</span><span class="str">(</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">)|</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d)  # match 1: area code
</span><span class="line">   13 </span><span class="str">     [ ]                          # area code followed by one space
</span><span class="line">   14 </span><span class="str"></span>     <span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d                    # prefix of 3 digits
</span><span class="line">   15 </span><span class="str">     [ -]                         # separator is either space or dash
</span><span class="line">   16 </span><span class="str"></span>     <span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d</span><span class="esc">\\</span><span class="str">d                 # last 4 digits
</span><span class="line">   17 </span><span class="str">     (?:</span> <span class="esc">\\</span><span class="str">D|$)                   # must be followed by a non-digit (or EOL)&quot;</span>
<span class="line">   18 </span>
<span class="line">   19 </span><span class="kwa">let</span> phones <span class="sym">=
</span><span class="line">   20 </span><span class="sym"></span>  <span class="kwa">let</span> lines <span class="sym">=</span> ref <span class="sym">[]</span> <span class="kwa">in
</span><span class="line">   21 </span><span class="kwa"></span>  foreach_line <span class="sym">(</span><span class="kwa">fun</span> line <span class="sym">-&gt;</span> lines <span class="sym">:=</span> line <span class="sym">:: !</span>lines<span class="sym">);
</span><span class="line">   22 </span><span class="sym"></span>  List.rev <span class="sym">!</span>lines
<span class="line">   23 </span>
<span class="line">   24 </span><span class="kwa">let</span> check_phone irflags ar cnt must_print line <span class="sym">=
</span><span class="line">   25 </span><span class="sym"></span>  <span class="kwa">try
</span><span class="line">   26 </span><span class="kwa"></span>    unsafe_pcre_exec irflags rex <span class="num">0</span> line <span class="num">4</span> ar None<span class="sym">;
</span><span class="line">   27 </span><span class="sym"></span>    <span class="kwa">let</span> num <span class="sym">=</span> String.copy <span class="str">&quot;(...) ...-....&quot;</span> <span class="kwa">and</span> pos <span class="sym">=</span> Array.unsafe_get ar <span class="num">2</span> <span class="kwa">in
</span><span class="line">   28 </span><span class="kwa">    let</span> ofs <span class="sym">=</span> <span class="kwa">if</span> String.unsafe_get line pos <span class="sym">=</span> <span class="str">'('</span> <span class="kwa">then</span> <span class="num">1</span> <span class="kwa">else</span> <span class="num">0</span> <span class="kwa">in
</span><span class="line">   29 </span><span class="kwa">    let</span> pos <span class="sym">=</span> pos <span class="sym">+</span> ofs <span class="kwa">in
</span><span class="line">   30 </span><span class="kwa"></span>    String.unsafe_blit line pos num <span class="num">1 3</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwa">let</span> pos <span class="sym">=</span> pos <span class="sym">+</span> ofs <span class="sym">+</span> <span class="num">4</span> <span class="kwa">in
</span><span class="line">   32 </span><span class="kwa"></span>    String.unsafe_blit line pos num <span class="num">6 3</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span>    String.unsafe_blit line <span class="sym">(</span>pos <span class="sym">+</span> <span class="num">4</span><span class="sym">)</span> num <span class="num">10 4</span><span class="sym">;
</span><span class="line">   34 </span><span class="sym"></span>    <span class="kwa">if</span> must_print <span class="kwa">then</span> Printf.printf <span class="str">&quot;%d: %s</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">!</span>cnt num<span class="sym">;
</span><span class="line">   35 </span><span class="sym"></span>    incr cnt
<span class="line">   36 </span>  <span class="kwa">with</span> Not_found <span class="sym">-&gt; ()
</span><span class="line">   37 </span><span class="sym">
</span><span class="line">   38 </span><span class="sym"></span><span class="kwa">let</span> n <span class="sym">=</span> <span class="kwa">if</span> Array.length Sys.argv <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span> int_of_string Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">else</span> <span class="num">1</span><span class="sym">;;
</span><span class="line">   39 </span><span class="sym"></span><span class="kwa">for</span> i <span class="sym">=</span> <span class="num">2</span> <span class="kwa">to</span> n <span class="kwa">do
</span><span class="line">   40 </span><span class="kwa"></span>  List.iter <span class="sym">(</span>check_phone <span class="sym">(</span>rflags <span class="sym">[]) (</span>Array.create <span class="num">6 0</span><span class="sym">) (</span>ref <span class="num">1</span><span class="sym">)</span> <span class="kwa">false</span><span class="sym">)</span> phones
<span class="line">   41 </span><span class="kwa">done</span><span class="sym">;
</span><span class="line">   42 </span><span class="sym"></span>List.iter <span class="sym">(</span>check_phone <span class="sym">(</span>rflags <span class="sym">[]) (</span>Array.create <span class="num">6 0</span><span class="sym">) (</span>ref <span class="num">1</span><span class="sym">)</span> <span class="kwa">true</span><span class="sym">)</span> phones
<span class="line">   43 </span>
