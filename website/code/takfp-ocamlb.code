<span class="com">(* takfp.ml                                                 -*-tuareg-*-
 *
 * The Great Computer Language Shootout
 * http://shootout.alioth.debian.org/
 *
 * Contributed by William Douglas Neumann
 *)</span>

<span class="kwa">let rec</span> tak x y z <span class="sym">=
</span>  <span class="kwa">if</span> y <span class="sym">&gt;=</span> x <span class="kwa">then</span> z
  <span class="kwa">else</span> tak <span class="sym">(</span>tak <span class="sym">(</span>x <span class="sym">-</span>. <span class="num">1</span>.<span class="sym">)</span> y z<span class="sym">) (</span>tak <span class="sym">(</span>y <span class="sym">-</span>. <span class="num">1</span>.<span class="sym">)</span> z x<span class="sym">) (</span>tak <span class="sym">(</span>z <span class="sym">-</span>. <span class="num">1</span>.<span class="sym">)</span> x y<span class="sym">)

</span><span class="kwa">let</span> <span class="sym">() =
</span>  <span class="kwa">let</span> n <span class="sym">=</span> <span class="kwa">try</span> float_of_string<span class="sym">(</span>Array.get Sys.argv <span class="num">1</span><span class="sym">)</span> <span class="kwa">with</span> _ <span class="sym">-&gt;</span> <span class="num">7</span>. <span class="kwa">in
</span>  Printf.printf <span class="str">&quot;%.1f</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">(</span>tak <span class="sym">(</span><span class="num">3</span>. <span class="sym">*</span>. n<span class="sym">) (</span><span class="num">2</span>. <span class="sym">*</span>. n<span class="sym">)</span> n<span class="sym">)</span>
