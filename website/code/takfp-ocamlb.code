<span class="com">(*
     takfp.ml
 
     Contributed by William Douglas Neumann
 
      *)</span>

  <span class="kwa">let</span> _ <span class="sym">=
 </span>  <span class="kwa">let rec</span> tak x y z <span class="sym">=
  </span>    <span class="kwa">if</span> y <span class="sym">&gt;=</span> x <span class="kwa">then</span> z
     <span class="kwa">else</span> tak <span class="sym">(</span>tak <span class="sym">(</span>x <span class="sym">-</span>. <span class="num">1</span>.<span class="sym">)</span> y z<span class="sym">) (</span>tak <span class="sym">(</span>y <span class="sym">-</span>. <span class="num">1</span>.<span class="sym">)</span> z x<span class="sym">) (</span>tak <span class="sym">(</span>z <span class="sym">-</span>. <span class="num">1</span>.<span class="sym">)</span> x y<span class="sym">)</span> <span class="kwa">in
   let</span> n <span class="sym">=</span> float_of_string Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">in
 </span>    Printf.printf <span class="str">&quot;%.1f</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">(</span>tak <span class="sym">(</span><span class="num">3</span>. <span class="sym">*</span>. n<span class="sym">) (</span><span class="num">2</span>. <span class="sym">*</span>. n<span class="sym">)</span> n<span class="sym">);;</span> 
