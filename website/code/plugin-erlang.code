<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">%%% -*- mode: erlang -*-
</FONT></I><I><FONT COLOR="#B22222">%%% $Id: plugin-erlang.code,v 1.1 2004-11-02 08:52:38 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">%%% http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">%%%
</FONT></I><I><FONT COLOR="#B22222">%%% Provided by Bengt Kleberg (Erlang Guru!)
</FONT></I><I><FONT COLOR="#B22222">%%%
</FONT></I><B><FONT COLOR="#5F9EA0">-module</FONT></B>(plugin).
<B><FONT COLOR="#5F9EA0">-export</FONT></B>([main/0, main/1, string_to_number/1, version/0]).

<B><FONT COLOR="#5F9EA0">-define</FONT></B>(<B><FONT COLOR="#DA70D6">PLUGIN_VERSION</FONT></B>, 1).
<B><FONT COLOR="#5F9EA0">-define</FONT></B>(<B><FONT COLOR="#DA70D6">INPUT_LINE</FONT></B>, <B><FONT COLOR="#BC8F8F">&quot;I 1&quot;</FONT></B>).


<B><FONT COLOR="#0000FF">main</FONT></B>() -&gt; main([<B><FONT COLOR="#BC8F8F">'1000'</FONT></B>]).
<B><FONT COLOR="#0000FF">main</FONT></B>([<FONT COLOR="#B8860B">Arg</FONT>]) -&gt;
	<FONT COLOR="#B8860B">How_Many_Times</FONT> = atom_to_integer( <FONT COLOR="#B8860B">Arg</FONT> ),
	io:fwrite( <B><FONT COLOR="#BC8F8F">&quot;~w~n&quot;</FONT></B>, [sumcol( <FONT COLOR="#B8860B">How_Many_Times</FONT>, 0, ?<B><FONT COLOR="#DA70D6">MODULE</FONT></B>, ?<B><FONT COLOR="#DA70D6">INPUT_LINE</FONT></B> )] ),
	erlang:<B><FONT COLOR="#A020F0">halt</FONT></B>().


<B><FONT COLOR="#0000FF">string_to_number</FONT></B>( [<FONT COLOR="#B8860B">N</FONT>|<FONT COLOR="#B8860B">_T</FONT>] )  <B><FONT COLOR="#A020F0">when</FONT></B> (<FONT COLOR="#B8860B">N</FONT> &gt;= <B><FONT COLOR="#BC8F8F">$0</FONT></B>) and (<FONT COLOR="#B8860B">N</FONT> =&lt; <B><FONT COLOR="#BC8F8F">$9</FONT></B>) -&gt; <FONT COLOR="#B8860B">N</FONT> - <B><FONT COLOR="#BC8F8F">$0</FONT></B>.


<B><FONT COLOR="#0000FF">version</FONT></B>() -&gt; ?<B><FONT COLOR="#DA70D6">PLUGIN_VERSION</FONT></B>.



<B><FONT COLOR="#0000FF">atom_to_integer</FONT></B>( <FONT COLOR="#B8860B">Atom</FONT> ) -&gt;
	erlang:<B><FONT COLOR="#A020F0">list_to_integer</FONT></B>(erlang:<B><FONT COLOR="#A020F0">atom_to_list</FONT></B>(<FONT COLOR="#B8860B">Atom</FONT>)).


<B><FONT COLOR="#0000FF">sumcol</FONT></B>(0, <FONT COLOR="#B8860B">Sum</FONT>, <FONT COLOR="#B8860B">_Module</FONT>, <FONT COLOR="#B8860B">_Line</FONT>) -&gt; <FONT COLOR="#B8860B">Sum</FONT>;
<B><FONT COLOR="#0000FF">sumcol</FONT></B>(<FONT COLOR="#B8860B">N</FONT>, <FONT COLOR="#B8860B">Sum</FONT>, <FONT COLOR="#B8860B">Module</FONT>, <FONT COLOR="#B8860B">Line</FONT>) -&gt;
	<B><FONT COLOR="#A020F0">case</FONT></B> <B><FONT COLOR="#A020F0">catch</FONT></B> <FONT COLOR="#B8860B">Module</FONT>:string_to_number( <FONT COLOR="#B8860B">Line</FONT> ) <B><FONT COLOR="#A020F0">of</FONT></B>
	{<B><FONT COLOR="#BC8F8F">'EXIT'</FONT></B>, <FONT COLOR="#B8860B">_Why</FONT>} -&gt;
		<FONT COLOR="#B8860B">New_Module</FONT> = new_module(<FONT COLOR="#B8860B">Module</FONT>),
		sumcol( <FONT COLOR="#B8860B">N</FONT>, <FONT COLOR="#B8860B">Sum</FONT>, <FONT COLOR="#B8860B">New_Module</FONT>, <FONT COLOR="#B8860B">Line</FONT> );
	<FONT COLOR="#B8860B">Integer</FONT> -&gt;	<I><FONT COLOR="#B22222">% the Module works, we should keep it. but this is a test
</FONT></I>		sumcol( <FONT COLOR="#B8860B">N</FONT>-1, <FONT COLOR="#B8860B">Sum</FONT>+<FONT COLOR="#B8860B">Integer</FONT>, ?<B><FONT COLOR="#DA70D6">MODULE</FONT></B>, <FONT COLOR="#B8860B">Line</FONT> )	<I><FONT COLOR="#B22222">% start from the beginning
</FONT></I>	<B><FONT COLOR="#A020F0">end</FONT></B>.

	
<B><FONT COLOR="#0000FF">new_module</FONT></B>(<FONT COLOR="#B8860B">Old_Module</FONT>) -&gt;
	<FONT COLOR="#B8860B">Basename</FONT> = remove_version( <FONT COLOR="#B8860B">Old_Module</FONT> ),
	<FONT COLOR="#B8860B">New_Version</FONT> = erlang:<B><FONT COLOR="#A020F0">integer_to_list</FONT></B>( <FONT COLOR="#B8860B">Old_Module</FONT>:version()+1 ),
	erlang:<B><FONT COLOR="#A020F0">list_to_atom</FONT></B>( <FONT COLOR="#B8860B">Basename</FONT> ++ <B><FONT COLOR="#BC8F8F">&quot;_&quot;</FONT></B> ++ <FONT COLOR="#B8860B">New_Version</FONT> ).

<B><FONT COLOR="#0000FF">remove_version</FONT></B>( <FONT COLOR="#B8860B">Module</FONT> ) -&gt;
	<FONT COLOR="#B8860B">M</FONT> = erlang:<B><FONT COLOR="#A020F0">atom_to_list</FONT></B>( <FONT COLOR="#B8860B">Module</FONT> ),
	<B><FONT COLOR="#A020F0">case</FONT></B> string:rchr( <FONT COLOR="#B8860B">M</FONT>, <B><FONT COLOR="#BC8F8F">$_</FONT></B> ) <B><FONT COLOR="#A020F0">of</FONT></B>
	0 -&gt;	<I><FONT COLOR="#B22222">% no '_', ie no version number. keep the whole module name.
</FONT></I>		<FONT COLOR="#B8860B">M</FONT>;
	<FONT COLOR="#B8860B">N</FONT> -&gt;	<I><FONT COLOR="#B22222">% keep everything before '_',
</FONT></I>		string:sub_string( <FONT COLOR="#B8860B">M</FONT>, 1, <FONT COLOR="#B8860B">N</FONT>-1 )
	<B><FONT COLOR="#A020F0">end</FONT></B>.</pre></td></tr></table>
