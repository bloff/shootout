<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   http://www.bagley.org/~doug/shootout/

   converted to D by Dave Fladebo
   compile: dmd -O -inline -release random.d
*/</span>

import std<span class="sym">.</span>stdio<span class="sym">,</span> std<span class="sym">.</span>string<span class="sym">;

</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">char</span><span class="sym">[][]</span> args<span class="sym">)
{
</span>	<span class="kwb">int</span> n <span class="sym">=</span> args<span class="sym">.</span>length <span class="sym">&gt;</span> <span class="num">1</span> ? atoi<span class="sym">(</span>args<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">;

</span>    <span class="kwb">double</span> result <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>    Random r <span class="sym">=</span> <span class="kwa">new</span> Random<span class="sym">();
</span>	<span class="kwa">while</span><span class="sym">(</span>n<span class="sym">--)
    {
</span>		result <span class="sym">=</span> r<span class="sym">.</span>genRandom<span class="sym">(</span><span class="num">100</span><span class="sym">);
	}
</span>    writefln<span class="sym">(</span><span class="str">&quot;%.9f&quot;</span><span class="sym">,</span>result<span class="sym">);

</span>    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;
}

</span><span class="kwc">class</span> Random
<span class="sym">{
</span><span class="kwc">private</span><span class="sym">:
</span>    <span class="kwb">int</span> last <span class="sym">=</span> <span class="num">42</span><span class="sym">;
</span>    <span class="kwb">const int</span> IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;
</span>    <span class="kwb">const int</span> IA <span class="sym">=</span> <span class="num">3877</span><span class="sym">;
</span>    <span class="kwb">const int</span> IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">;
</span><span class="kwc">public</span><span class="sym">:
</span>    <span class="kwb">double</span> genRandom<span class="sym">(</span><span class="kwb">double</span> max<span class="sym">)
    {
</span>        <span class="kwa">return</span><span class="sym">(</span>max <span class="sym">* (</span>last <span class="sym">= (</span>last <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">) %</span> IM<span class="sym">) /</span> IM<span class="sym">);
    }
}</span>
