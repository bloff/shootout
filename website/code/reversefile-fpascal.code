<span class="line">    1 </span><span class="kwa">Program</span> reversefile<span class="sym">;
</span><span class="line">    2 </span><span class="sym"></span><span class="kwa">uses</span> SysUtils<span class="sym">,</span> Classes<span class="sym">;
</span><span class="line">    3 </span><span class="sym">
</span><span class="line">    4 </span><span class="sym"></span><span class="kwa">var
</span><span class="line">    5 </span><span class="kwa"></span>        i<span class="sym">,</span> N <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">    6 </span><span class="sym"></span>        list <span class="sym">:</span> TList<span class="sym">;
</span><span class="line">    7 </span><span class="sym"></span>        line <span class="sym">:</span> <span class="kwa">string</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym"></span>        pline <span class="sym">:</span> <span class="kwb">pointer</span><span class="sym">;
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   10 </span><span class="kwa"></span>        list <span class="sym">:=</span> TList.Create<span class="sym">;
</span><span class="line">   11 </span><span class="sym"></span>        <span class="kwa">While Not</span> Eof<span class="sym">(</span>input<span class="sym">)</span> <span class="kwa">do
</span><span class="line">   12 </span><span class="kwa">        begin
</span><span class="line">   13 </span><span class="kwa"></span>                Readln<span class="sym">(</span>input<span class="sym">,</span> line<span class="sym">);
</span><span class="line">   14 </span><span class="sym"></span>                Getmem<span class="sym">(</span>pline<span class="sym">,</span> Length<span class="sym">(</span>line<span class="sym">)+</span><span class="num">1</span><span class="sym">);
</span><span class="line">   15 </span><span class="sym"></span>                Move<span class="sym">(</span>line<span class="sym">,</span> pline^<span class="sym">,</span> Length<span class="sym">(</span>line<span class="sym">)+</span><span class="num">1</span><span class="sym">);
</span><span class="line">   16 </span><span class="sym"></span>                list.Add<span class="sym">(</span> pline <span class="sym">);
</span><span class="line">   17 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>        N <span class="sym">:=</span> list.Count<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwa">For</span> i <span class="sym">:=</span> N<span class="num">-1</span> <span class="kwa">Downto</span> <span class="num">0</span> <span class="kwa">do</span> WriteLn<span class="sym">(</span> <span class="kwa">string</span><span class="sym">(</span>list.items<span class="sym">[</span>i<span class="sym">]</span>^<span class="sym">) );
</span><span class="line">   20 </span><span class="sym"></span><span class="kwa">end</span>.
