<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/newlisp

<I><FONT COLOR="#B22222">;; regexmatch - benchmark
</FONT></I><I><FONT COLOR="#B22222">;;
</FONT></I><I><FONT COLOR="#B22222">;; Contributed by Lutz Mueller
</FONT></I>
<I><FONT COLOR="#B22222">;; get phone data from stdin
</FONT></I>(while (read-line) (push (append (current-line) <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>) phones))
(reverse phones)

<I><FONT COLOR="#B22222">;; patterns
</FONT></I>(set 'pattern (append
    {(?:^|[^\d\(])}		<I><FONT COLOR="#B22222">; must be preceeded by non-digit
</FONT></I>    {(\()?}				<I><FONT COLOR="#B22222">; match 1: possible initial left paren
</FONT></I>    {(\d\d\d)}			<I><FONT COLOR="#B22222">; match 2: area code is 3 digits
</FONT></I>    {(?(1)\))}			<I><FONT COLOR="#B22222">; if match1 then match right paren
</FONT></I>    {[ ]}				<I><FONT COLOR="#B22222">; area code followed by one space
</FONT></I>    {(\d\d\d)}			<I><FONT COLOR="#B22222">; match 3: prefix of 3 digits
</FONT></I>    {[ -]}			      <I><FONT COLOR="#B22222">; separator is either space or dash
</FONT></I>    {(\d\d\d\d)}			<I><FONT COLOR="#B22222">; match 4: last 4 digits
</FONT></I>    {\D}				<I><FONT COLOR="#B22222">; must be followed by a non-digit
</FONT></I>))

<I><FONT COLOR="#B22222">;; get N
</FONT></I>(set 'N (integer (last (main-args))))
(set 'cnt 0)

(dotimes (i N)
  (dolist (phone phones)
    (<B><FONT COLOR="#A020F0">if</FONT></B> (regex pattern phone)
        (<B><FONT COLOR="#A020F0">if</FONT></B> (= i 0)
          (<B><FONT COLOR="#A020F0">begin</FONT></B>
            (inc 'cnt)
            (println (string cnt <B><FONT COLOR="#BC8F8F">&quot;: (&quot;</FONT></B> $2 <B><FONT COLOR="#BC8F8F">&quot;) &quot;</FONT></B> $3 <B><FONT COLOR="#BC8F8F">&quot;-&quot;</FONT></B> $4)))))))

<I><FONT COLOR="#B22222">;; eof
</FONT></I></pre></td></tr></table>
