<span class="line">    1 </span><span class="slc">#!/usr/bin/ruby
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># -*- mode: ruby -*-
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># $Id: lists1-ruby.code,v 1.3 2004-11-11 07:13:59 bfulgham Exp $
</span><span class="line">    4 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="kwa">def</span> main <span class="sym">(</span>n<span class="sym">)
</span><span class="line">    7 </span><span class="sym"></span>    <span class="slc"># create empty list B
</span><span class="line">    8 </span><span class="slc"></span>    b = Array.new
<span class="line">    9 </span>
<span class="line">   10 </span>    <span class="slc"># create list (A) of integers from 1 through N
</span><span class="line">   11 </span><span class="slc"></span>    a = <span class="sym">(</span><span class="num">1</span>..n<span class="sym">)</span>.to_a
<span class="line">   12 </span>
<span class="line">   13 </span>    <span class="slc"># move each individual item from A to B, in a loop, reversing order
</span><span class="line">   14 </span><span class="slc"></span>    <span class="kwa">while</span> <span class="sym">(</span><span class="kwa">not</span> a.empty?<span class="sym">)
</span><span class="line">   15 </span><span class="sym"></span>        b.push<span class="sym">(</span>a.pop<span class="sym">)
</span><span class="line">   16 </span><span class="sym"></span>    <span class="kwa">end
</span><span class="line">   17 </span><span class="kwa">
</span><span class="line">   18 </span><span class="kwa"></span>    <span class="slc"># print first 2 elements of B
</span><span class="line">   19 </span><span class="slc"></span>    puts <span class="str">&quot;#{b[0]} #{b[1]}&quot;</span>
<span class="line">   20 </span>
<span class="line">   21 </span>    <span class="slc"># reverse B (can be done in place)
</span><span class="line">   22 </span><span class="slc"></span>    b.reverse<span class="sym">!
</span><span class="line">   23 </span><span class="sym">
</span><span class="line">   24 </span><span class="sym"></span>    <span class="slc"># is 0 a member of B?
</span><span class="line">   25 </span><span class="slc"></span>    puts <span class="sym">(</span>b.member?<span class="sym">(</span><span class="num">0</span><span class="sym">))</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span>
<span class="line">   26 </span>
<span class="line">   27 </span>    <span class="slc"># is N a member of B?
</span><span class="line">   28 </span><span class="slc"></span>    puts <span class="sym">(</span>b.member?<span class="sym">(</span>n<span class="sym">))</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span>
<span class="line">   29 </span>
<span class="line">   30 </span>    <span class="slc"># filter values from B to A that are less than N/2, preserving order
</span><span class="line">   31 </span><span class="slc"></span>    mid = n<span class="sym">/</span><span class="num">2</span><span class="sym">;
</span><span class="line">   32 </span><span class="sym"></span>    a = b.find_all <span class="sym">{|</span>i<span class="sym">|</span> i <span class="sym">&lt;</span> mid<span class="sym">}
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym"></span>    <span class="slc"># print first ten items of A
</span><span class="line">   35 </span><span class="slc"></span>    puts a<span class="sym">[</span><span class="num">0</span>.<span class="num">.9</span><span class="sym">]</span>.join<span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   36 </span><span class="sym">
</span><span class="line">   37 </span><span class="sym"></span>    <span class="slc"># print sum of items in A that are less than 1000
</span><span class="line">   38 </span><span class="slc"></span>    sum = <span class="num">0
</span><span class="line">   39 </span><span class="num"></span>    <span class="kwa">for</span> i <span class="kwa">in</span> a
<span class="line">   40 </span>        <span class="kwa">if</span> i <span class="sym">&lt;</span> <span class="num">1000</span> <span class="kwa">then</span> sum <span class="sym">+</span>= i <span class="kwa">end
</span><span class="line">   41 </span><span class="kwa">    end
</span><span class="line">   42 </span><span class="kwa"></span>    puts sum
<span class="line">   43 </span>
<span class="line">   44 </span>    <span class="slc"># append B to end of A
</span><span class="line">   45 </span><span class="slc"></span>    a.concat<span class="sym">(</span>b<span class="sym">)
</span><span class="line">   46 </span><span class="sym">
</span><span class="line">   47 </span><span class="sym"></span>    <span class="slc"># print length and last element of A
</span><span class="line">   48 </span><span class="slc"></span>    puts <span class="str">&quot;#{a.length} #{a[-1]}&quot;</span>
<span class="line">   49 </span><span class="kwa">end
</span><span class="line">   50 </span><span class="kwa">
</span><span class="line">   51 </span><span class="kwa"></span>main<span class="sym">(</span>Integer<span class="sym">(</span><span class="kwa">ARGV</span>.shift <span class="sym">||</span> <span class="num">1</span><span class="sym">))</span>
