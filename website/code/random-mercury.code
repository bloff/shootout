<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
% ---------------------------------------------------------------------------- %
% random.m
% Ralph Becket &lt;rbeck@microsoft.com&gt;
% Tue Jan  9 14:18:19 GMT 2001
% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix
% ---------------------------------------------------------------------------- %

:- module mytest.

:- <B><FONT COLOR="#A020F0">interface</FONT></B>.

:- import_module io.



:- pred main(io__state, io__state).
:- mode main(di, uo) <B><FONT COLOR="#A020F0">is</FONT></B> det.



:- <B><FONT COLOR="#A020F0">implementation</FONT></B>.



:- import_module float, int, list, <B><FONT COLOR="#A020F0">string</FONT></B>, require.


main --&gt;
    io__command_line_arguments(ArgV),
    (   <I><FONT COLOR="#B22222">{ ArgV = [],        N = 1 }</FONT></I>
    ;   <I><FONT COLOR="#B22222">{ ArgV = [Arg],     N = string__det_to_int(Arg) }</FONT></I>
    ;   <I><FONT COLOR="#B22222">{ ArgV = [_,_|_],   error(&quot;usage: random [N]&quot;) }</FONT></I>
    ),
    io__format(&quot;%.9f\n&quot;, [f(nth_random_no(N, seed))]).


:- func nth_random_no(int, int) = float.

nth_random_no(I, S0) = ( <B><FONT COLOR="#A020F0">if</FONT></B> I &gt; 1 <B><FONT COLOR="#A020F0">then</FONT></B> nth_random_no(I - 1, S) <B><FONT COLOR="#A020F0">else</FONT></B> R ) :-
    gen_random(100.0, R, S0, S).



:- pred gen_random(float, float, int, int).
:- mode gen_random(<B><FONT COLOR="#A020F0">in</FONT></B>, out, <B><FONT COLOR="#A020F0">in</FONT></B>, out) <B><FONT COLOR="#A020F0">is</FONT></B> det.

gen_random(Max, R, S0, S) :-
    S = (S0 * ia + ic) `rem` im,
    R = Max * float(S) / float(im).

:- func im = int.   im = 139968.
:- func ia = int.   ia =   3877.
:- func ic = int.   ic =  29573.
:- func seed = int. seed =   42.</pre></td></tr></table>
