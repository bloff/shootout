<span class="com">(* The Great Computer Language Shootout
    http://shootout.alioth.debian.org
 
    contributed by Isaac Gouy (Oberon-2 novice)
 *)</span>

  <span class="kwa">MODULE</span> Hash2<span class="sym">;
 </span><span class="kwa">IMPORT</span> LangShootout<span class="sym">,</span> SimpleHash<span class="sym">,</span> Strings<span class="sym">,</span> IntStr<span class="sym">,</span> Out<span class="sym">,</span> S<span class="sym">:=</span>SYSTEM<span class="sym">;
 
 </span><span class="kwa">CONST
 </span>   maxLength <span class="sym">=</span> <span class="num">11</span><span class="sym">;
 
 </span><span class="kwa">VAR
 </span>   buffer<span class="sym">:</span> <span class="kwa">ARRAY</span> maxLength <span class="kwa">OF</span> <span class="kwb">CHAR</span><span class="sym">;
 </span>   n<span class="sym">,</span> i<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
 </span>   table1<span class="sym">,</span> table2<span class="sym">:</span> SimpleHash<span class="sym">.</span>Hashtable<span class="sym">;
 </span>   item1<span class="sym">,</span> item2<span class="sym">:</span> SimpleHash<span class="sym">.</span>Item<span class="sym">;
 </span>   key<span class="sym">,</span> key1<span class="sym">,</span> key9999<span class="sym">:</span> SimpleHash<span class="sym">.</span>ItemKey<span class="sym">;
    
 
 </span><span class="kwa">PROCEDURE</span> IntToItemKey<span class="sym">(</span>n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">):</span> SimpleHash<span class="sym">.</span>ItemKey<span class="sym">;
 </span><span class="kwa">VAR
 </span>   digits<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
 </span>   key<span class="sym">:</span> SimpleHash<span class="sym">.</span>ItemKey<span class="sym">;
 </span><span class="kwa">BEGIN
 </span>   IntStr<span class="sym">.</span>IntToStr<span class="sym">(</span>n<span class="sym">,</span>buffer<span class="sym">);
 </span>   digits <span class="sym">:=</span> Strings<span class="sym">.</span>Length<span class="sym">(</span>buffer<span class="sym">);
 </span>   <span class="kwa">NEW</span><span class="sym">(</span>key<span class="sym">,</span> digits<span class="sym">);
 </span>   S<span class="sym">.</span><span class="kwa">MOVE</span><span class="sym">(</span>S<span class="sym">.</span><span class="kwa">ADR</span><span class="sym">(</span>buffer<span class="sym">[</span><span class="num">0</span><span class="sym">]),</span> S<span class="sym">.</span><span class="kwa">VAL</span><span class="sym">(</span><span class="kwb">LONGINT</span><span class="sym">,</span>key<span class="sym">),</span> digits<span class="sym">);
  </span>   <span class="kwa">RETURN</span> key<span class="sym">;
 </span><span class="kwa">END</span> IntToItemKey<span class="sym">;
 
 
 </span><span class="kwa">BEGIN
 </span>   n <span class="sym">:=</span> LangShootout<span class="sym">.</span>Argi<span class="sym">();
 </span>   table1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>New<span class="sym">(</span><span class="num">10000</span><span class="sym">);
 </span>   table2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>New<span class="sym">(</span><span class="num">10000</span><span class="sym">);
 
 </span>   FOR i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> <span class="num">9999</span> <span class="kwa">DO
 </span>      key <span class="sym">:=</span> IntToItemKey<span class="sym">(</span>i<span class="sym">);
 </span>      item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>AddKey<span class="sym">(</span>table1<span class="sym">,</span> key<span class="sym">);
 </span>      item1<span class="sym">.</span>value <span class="sym">:=</span> i<span class="sym">;
 </span>   <span class="kwa">END</span><span class="sym">;
 
 </span>   FOR i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> n<span class="num">-1</span> <span class="kwa">DO
 </span>      item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>First<span class="sym">(</span>table1<span class="sym">);
 </span>      <span class="kwa">WHILE</span> item1 # <span class="kwa">NIL DO
 </span>         item2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>AddKey<span class="sym">(</span>table2<span class="sym">,</span> item1<span class="sym">.</span>key<span class="sym">);
 </span>	 <span class="kwa">INC</span><span class="sym">(</span>item2<span class="sym">.</span>value<span class="sym">,</span> item1<span class="sym">.</span>value<span class="sym">);
 </span>	 item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>Next<span class="sym">(</span>table1<span class="sym">);
 </span>      <span class="kwa">END</span><span class="sym">;
 </span>   <span class="kwa">END</span><span class="sym">;
 
 </span>   key1 <span class="sym">:=</span> IntToItemKey<span class="sym">(</span><span class="num">1</span><span class="sym">);
 </span>   key9999 <span class="sym">:=</span> IntToItemKey<span class="sym">(</span><span class="num">9999</span><span class="sym">);
 
 </span>   item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>Find<span class="sym">(</span>table1<span class="sym">,</span> key1<span class="sym">);
 </span>   Out<span class="sym">.</span>Int<span class="sym">(</span>item1<span class="sym">.</span>value<span class="sym">,</span> <span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span>Char<span class="sym">(</span><span class="num">20X</span><span class="sym">);
 </span>   item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>Find<span class="sym">(</span>table1<span class="sym">,</span> key9999<span class="sym">);
 </span>   Out<span class="sym">.</span>Int<span class="sym">(</span>item1<span class="sym">.</span>value<span class="sym">,</span> <span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Char<span class="sym">(</span><span class="num">20X</span><span class="sym">);
 </span>   item2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>Find<span class="sym">(</span>table2<span class="sym">,</span> key1<span class="sym">);
 </span>   Out<span class="sym">.</span>Int<span class="sym">(</span>item2<span class="sym">.</span>value<span class="sym">,</span> <span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Char<span class="sym">(</span><span class="num">20X</span><span class="sym">);
 </span>   item2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span>Find<span class="sym">(</span>table2<span class="sym">,</span> key9999<span class="sym">);
 </span>   Out<span class="sym">.</span>Int<span class="sym">(</span>item2<span class="sym">.</span>value<span class="sym">,</span> <span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;
 </span><span class="kwa">END</span> Hash2<span class="sym">.</span> 
