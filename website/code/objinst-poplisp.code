<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: lisp -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: objinst-poplisp.code,v 1.1 2004-11-02 08:52:38 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://shootout.alioth.debian.org/
</FONT></I>
<I><FONT COLOR="#B22222">;; OO with CLOS
</FONT></I>(proclaim '(optimize (speed 3)(safety 0)(space 0)(debug 0)(compilation-speed 0)))

(eval-when (:compile-toplevel <B><FONT COLOR="#5F9EA0">:load-toplevel</FONT></B> <B><FONT COLOR="#5F9EA0">:execute</FONT></B>)
  (defstruct (toggle (:constructor make-toggle ()))
    (state t <B><FONT COLOR="#5F9EA0">:type</FONT></B> boolean)))

(defmethod activate ((this toggle))
  (setf (toggle-state this) (not (toggle-state this)))
  this)

(eval-when (:compile-toplevel <B><FONT COLOR="#5F9EA0">:load-toplevel</FONT></B> <B><FONT COLOR="#5F9EA0">:execute</FONT></B>)
  (defstruct (nth-toggle (:include toggle)
                         (:constructor make-nth-toggle (count-max)))
    (count-max 1 <B><FONT COLOR="#5F9EA0">:type</FONT></B> fixnum)
    (counter 0 <B><FONT COLOR="#5F9EA0">:type</FONT></B> fixnum)))

(defmethod activate ((this nth-toggle))
  (incf (nth-toggle-counter this))
  (<B><FONT COLOR="#A020F0">cond</FONT></B> ((&gt;= (nth-toggle-counter this)
	     (nth-toggle-count-max this))
	 (setf (toggle-state this) (not (toggle-state this)))
	 (setf (nth-toggle-counter this) 0)))
  this)
  
(defun print-bool (b)
  (format t (<B><FONT COLOR="#A020F0">if</FONT></B> b <B><FONT COLOR="#BC8F8F">&quot;true~%&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false~%&quot;</FONT></B>)))

(<B><FONT COLOR="#A020F0">let</FONT></B> ((n (parse-integer (<B><FONT COLOR="#A020F0">or</FONT></B> (car pop11::poparglist) <B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>))))
(declare (fixnum n))
(<B><FONT COLOR="#A020F0">let</FONT></B> ((tog (make-toggle)))
  (dotimes (i 5)
(declare (fixnum i))
(print-bool (toggle-state (activate tog)))))
(dotimes (i n)
  (make-toggle))

(format t <B><FONT COLOR="#BC8F8F">&quot;~%&quot;</FONT></B>)

(<B><FONT COLOR="#A020F0">let</FONT></B> ((ntog (make-nth-toggle 3)))
  (dotimes (i 8)
(declare (fixnum i))
(print-bool (toggle-state (activate ntog)))))
(dotimes (i n)
  (declare (fixnum i))
  (make-nth-toggle 3)))
</pre></td></tr></table>
