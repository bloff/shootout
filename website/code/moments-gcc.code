<span class="line">    1 </span><span class="com">/* -*- mode: c -*-
</span><span class="line">    2 </span><span class="com"> * $Id: moments-gcc.code,v 1.3 2004-11-11 07:14:01 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * from Waldek Hebisch
</span><span class="line">    5 </span><span class="com"> */</span>
<span class="line">    6 </span>
<span class="line">    7 </span><span class="dir">#include &lt;stdio.h&gt;
</span><span class="line">    8 </span><span class="dir"></span><span class="dir">#include &lt;stdlib.h&gt;
</span><span class="line">    9 </span><span class="dir"></span><span class="dir">#include &lt;math.h&gt;
</span><span class="line">   10 </span><span class="dir"></span>
<span class="line">   11 </span><span class="dir">#define MAXLINELEN 128
</span><span class="line">   12 </span><span class="dir"></span>
<span class="line">   13 </span><span class="com">/* kmedian permutes elements of a to get
</span><span class="line">   14 </span><span class="com">   a[i]&lt;=a[k] for i&lt;k
</span><span class="line">   15 </span><span class="com">   a[i]&gt;=a[k] for i&gt;k
</span><span class="line">   16 </span><span class="com">        See. N. Wirth, Algorithms+data structures = Programs
</span><span class="line">   17 </span><span class="com">*/</span>
<span class="line">   18 </span>
<span class="line">   19 </span><span class="kwb">void</span> kmedian<span class="sym">(</span><span class="kwb">double</span> <span class="sym">*</span>a<span class="sym">,</span> <span class="kwb">int</span> n<span class="sym">,</span> <span class="kwb">int</span> k<span class="sym">)
</span><span class="line">   20 </span><span class="sym">{
</span><span class="line">   21 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">(</span><span class="num">1</span><span class="sym">){
</span><span class="line">   22 </span><span class="sym"></span>                <span class="kwb">int</span> j<span class="sym">=</span>random<span class="sym">()%</span>n<span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>                <span class="kwb">double</span> b <span class="sym">=</span> a<span class="sym">[</span>j<span class="sym">];
</span><span class="line">   24 </span><span class="sym"></span>                <span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>                j <span class="sym">=</span> n<span class="num">-1</span><span class="sym">;
</span><span class="line">   26 </span><span class="sym"></span>                <span class="kwa">while</span><span class="sym">(</span><span class="num">1</span><span class="sym">) {
</span><span class="line">   27 </span><span class="sym"></span>                    <span class="kwa">while</span><span class="sym">(</span> a<span class="sym">[</span>i<span class="sym">]&lt;</span>b <span class="sym">)</span> i<span class="sym">++;
</span><span class="line">   28 </span><span class="sym"></span>                    <span class="kwa">while</span><span class="sym">(</span> a<span class="sym">[</span>j<span class="sym">]&gt;</span>b <span class="sym">)</span> j<span class="sym">--;
</span><span class="line">   29 </span><span class="sym"></span>                    <span class="kwa">if</span><span class="sym">(</span>i<span class="sym">&lt;</span>j<span class="sym">) {
</span><span class="line">   30 </span><span class="sym"></span>                        <span class="kwb">double</span> tmp<span class="sym">=</span>a<span class="sym">[</span>i<span class="sym">];
</span><span class="line">   31 </span><span class="sym"></span>                        a<span class="sym">[</span>i<span class="sym">]=</span>a<span class="sym">[</span>j<span class="sym">];
</span><span class="line">   32 </span><span class="sym"></span>                        a<span class="sym">[</span>j<span class="sym">]=</span>tmp<span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span>                        i<span class="sym">++;
</span><span class="line">   34 </span><span class="sym"></span>                        j<span class="sym">--;
</span><span class="line">   35 </span><span class="sym">                           }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   36 </span><span class="sym"></span>                        <span class="kwa">if</span><span class="sym">(</span>a<span class="sym">[</span>j<span class="sym">]&lt;</span>b<span class="sym">)</span> j<span class="sym">++;
</span><span class="line">   37 </span><span class="sym"></span>                        <span class="kwa">if</span><span class="sym">(</span>a<span class="sym">[</span>i<span class="sym">]&gt;</span>b<span class="sym">)</span> i<span class="sym">--;
</span><span class="line">   38 </span><span class="sym"></span>                        <span class="kwa">break</span><span class="sym">;
</span><span class="line">   39 </span><span class="sym">                    }
</span><span class="line">   40 </span><span class="sym">                }
</span><span class="line">   41 </span><span class="sym"></span>                <span class="kwa">if</span><span class="sym">(</span>i<span class="sym">&lt;</span>k<span class="sym">) {
</span><span class="line">   42 </span><span class="sym"></span>                        k<span class="sym">-=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;
</span><span class="line">   43 </span><span class="sym"></span>                        n<span class="sym">-=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;
</span><span class="line">   44 </span><span class="sym"></span>                        a<span class="sym">+=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;
</span><span class="line">   45 </span><span class="sym">                }</span> <span class="kwa">else if</span> <span class="sym">(</span>j<span class="sym">&gt;</span>k<span class="sym">) {
</span><span class="line">   46 </span><span class="sym"></span>                        n<span class="sym">=</span>j<span class="sym">;
</span><span class="line">   47 </span><span class="sym">                }</span> <span class="kwa">else return</span><span class="sym">;
</span><span class="line">   48 </span><span class="sym">        }
</span><span class="line">   49 </span><span class="sym">}
</span><span class="line">   50 </span><span class="sym">
</span><span class="line">   51 </span><span class="sym"></span><span class="kwb">double</span> max<span class="sym">(</span><span class="kwb">double</span> <span class="sym">*</span>a<span class="sym">,</span> <span class="kwb">int</span> n<span class="sym">)
</span><span class="line">   52 </span><span class="sym">{
</span><span class="line">   53 </span><span class="sym"></span>        <span class="kwb">int</span> j<span class="sym">;
</span><span class="line">   54 </span><span class="sym"></span>        <span class="kwb">double</span> temp<span class="sym">=</span>a<span class="sym">[</span><span class="num">0</span><span class="sym">];
</span><span class="line">   55 </span><span class="sym"></span>        <span class="kwa">for</span><span class="sym">(</span>j<span class="sym">=</span><span class="num">1</span><span class="sym">;</span>j<span class="sym">&lt;</span>n<span class="sym">;</span>j<span class="sym">++) {
</span><span class="line">   56 </span><span class="sym"></span>                <span class="kwa">if</span><span class="sym">(</span>a<span class="sym">[</span>j<span class="sym">]&gt;</span>temp<span class="sym">) {
</span><span class="line">   57 </span><span class="sym"></span>                        temp<span class="sym">=</span>a<span class="sym">[</span>j<span class="sym">];
</span><span class="line">   58 </span><span class="sym">                }
</span><span class="line">   59 </span><span class="sym">        }
</span><span class="line">   60 </span><span class="sym"></span>        <span class="kwa">return</span> temp<span class="sym">;
</span><span class="line">   61 </span><span class="sym">}
</span><span class="line">   62 </span><span class="sym">
</span><span class="line">   63 </span><span class="sym">
</span><span class="line">   64 </span><span class="sym"></span><span class="kwb">int
</span><span class="line">   65 </span><span class="kwb"></span>main<span class="sym">() {
</span><span class="line">   66 </span><span class="sym"></span>    <span class="kwb">char</span> line<span class="sym">[</span>MAXLINELEN<span class="sym">];
</span><span class="line">   67 </span><span class="sym"></span>    <span class="kwb">int</span> i<span class="sym">,</span> n <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> mid <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   68 </span><span class="sym"></span>    <span class="kwb">double</span> sum <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   69 </span><span class="sym"></span>    <span class="kwb">double</span> mean <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   70 </span><span class="sym"></span>    <span class="kwb">double</span> average_deviation <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   71 </span><span class="sym"></span>    <span class="kwb">double</span> standard_deviation <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   72 </span><span class="sym"></span>    <span class="kwb">double</span> variance <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   73 </span><span class="sym"></span>    <span class="kwb">double</span> skew <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   74 </span><span class="sym"></span>    <span class="kwb">double</span> kurtosis <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   75 </span><span class="sym"></span>    <span class="kwb">double</span> median <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   76 </span><span class="sym"></span>    <span class="kwb">double</span> deviation <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">   77 </span><span class="sym"></span>    <span class="kwb">int</span> array_size <span class="sym">=</span> <span class="num">4096</span><span class="sym">;
</span><span class="line">   78 </span><span class="sym">
</span><span class="line">   79 </span><span class="sym"></span>    <span class="kwb">double</span> <span class="sym">*</span>nums <span class="sym">= (</span><span class="kwb">double</span> <span class="sym">*)</span>malloc<span class="sym">(</span>array_size <span class="sym">*</span> <span class="kwa">sizeof</span><span class="sym">(</span><span class="kwb">double</span><span class="sym">));
</span><span class="line">   80 </span><span class="sym">
</span><span class="line">   81 </span><span class="sym"></span>    <span class="kwa">while</span> <span class="sym">(</span>fgets<span class="sym">(</span>line<span class="sym">,</span> MAXLINELEN<span class="sym">,</span> stdin<span class="sym">)) {
</span><span class="line">   82 </span><span class="sym"></span>        sum <span class="sym">+= (</span>nums<span class="sym">[</span>n<span class="sym">++] =</span> atof<span class="sym">(</span>line<span class="sym">));
</span><span class="line">   83 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">==</span> array_size<span class="sym">) {
</span><span class="line">   84 </span><span class="sym"></span>            array_size <span class="sym">*=</span> <span class="num">2</span><span class="sym">;
</span><span class="line">   85 </span><span class="sym"></span>            nums <span class="sym">= (</span><span class="kwb">double</span> <span class="sym">*)</span>realloc<span class="sym">(</span>nums<span class="sym">,</span> array_size <span class="sym">*</span> <span class="kwa">sizeof</span><span class="sym">(</span><span class="kwb">double</span><span class="sym">));
</span><span class="line">   86 </span><span class="sym">        }
</span><span class="line">   87 </span><span class="sym">    }
</span><span class="line">   88 </span><span class="sym"></span>    mean <span class="sym">=</span> sum<span class="sym">/</span>n<span class="sym">;
</span><span class="line">   89 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   90 </span><span class="sym"></span>        <span class="kwb">double</span> dev <span class="sym">=</span> nums<span class="sym">[</span>i<span class="sym">] -</span> mean<span class="sym">;
</span><span class="line">   91 </span><span class="sym"></span>        <span class="kwb">double</span> dev2<span class="sym">=</span>dev<span class="sym">*</span>dev<span class="sym">;
</span><span class="line">   92 </span><span class="sym"></span>        <span class="kwb">double</span> dev3<span class="sym">=</span>dev2<span class="sym">*</span>dev<span class="sym">;
</span><span class="line">   93 </span><span class="sym"></span>        <span class="kwb">double</span> dev4<span class="sym">=</span>dev3<span class="sym">*</span>dev<span class="sym">;
</span><span class="line">   94 </span><span class="sym"></span>        average_deviation <span class="sym">+=</span> fabs<span class="sym">(</span>dev<span class="sym">);
</span><span class="line">   95 </span><span class="sym"></span>        variance <span class="sym">+=</span> dev2 <span class="com">/*pow(deviation,2)*/</span><span class="sym">;
</span><span class="line">   96 </span><span class="sym"></span>        skew <span class="sym">+=</span> dev3 <span class="com">/* pow(deviation,3) */</span><span class="sym">;
</span><span class="line">   97 </span><span class="sym"></span>        kurtosis <span class="sym">+=</span> dev4 <span class="com">/* pow(deviation,4) */</span><span class="sym">;
</span><span class="line">   98 </span><span class="sym">    }
</span><span class="line">   99 </span><span class="sym"></span>    average_deviation <span class="sym">/=</span> n<span class="sym">;
</span><span class="line">  100 </span><span class="sym"></span>    variance <span class="sym">/= (</span>n <span class="num">- 1</span><span class="sym">);
</span><span class="line">  101 </span><span class="sym"></span>    standard_deviation <span class="sym">=</span> sqrt<span class="sym">(</span>variance<span class="sym">);
</span><span class="line">  102 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>variance<span class="sym">) {
</span><span class="line">  103 </span><span class="sym"></span>        skew <span class="sym">/= (</span>n <span class="sym">*</span> variance <span class="sym">*</span> standard_deviation<span class="sym">);
</span><span class="line">  104 </span><span class="sym"></span>        kurtosis <span class="sym">= (</span>kurtosis<span class="sym">/(</span>n <span class="sym">*</span> variance <span class="sym">*</span> variance<span class="sym">)) -</span> <span class="num">3.0</span><span class="sym">;
</span><span class="line">  105 </span><span class="sym">    }
</span><span class="line">  106 </span><span class="sym"></span>    mid <span class="sym">= (</span>n<span class="sym">/</span><span class="num">2</span><span class="sym">);
</span><span class="line">  107 </span><span class="sym"></span>    kmedian<span class="sym">(</span>nums<span class="sym">,</span> n<span class="sym">,</span> mid<span class="sym">);
</span><span class="line">  108 </span><span class="sym"></span>    median <span class="sym">=</span> n <span class="sym">%</span> <span class="num">2</span> ? nums<span class="sym">[</span>mid<span class="sym">] : (</span>nums<span class="sym">[</span>mid<span class="sym">] +</span> max<span class="sym">(</span>nums<span class="sym">,</span>mid<span class="sym">))/</span><span class="num">2</span><span class="sym">;
</span><span class="line">  109 </span><span class="sym"></span>    free<span class="sym">(</span>nums<span class="sym">);
</span><span class="line">  110 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;n:                  %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">);
</span><span class="line">  111 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;median:             %f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> median<span class="sym">);
</span><span class="line">  112 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;mean:               %f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> mean<span class="sym">);
</span><span class="line">  113 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;average_deviation:  %f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> average_deviation<span class="sym">);
</span><span class="line">  114 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;standard_deviation: %f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> standard_deviation<span class="sym">);
</span><span class="line">  115 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;variance:           %f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> variance<span class="sym">);
</span><span class="line">  116 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;skew:               %f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> skew<span class="sym">);
</span><span class="line">  117 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;kurtosis:           %f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> kurtosis<span class="sym">);
</span><span class="line">  118 </span><span class="sym">
</span><span class="line">  119 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
</span><span class="line">  120 </span><span class="sym">}</span>
