<span class="slc">-- -*- mode: eiffel -*-
</span><span class="slc">-- $Id: methcall-se.code,v 1.6 2005-03-29 09:02:32 bfulgham Exp $
</span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="slc">-- from Steve Thompson
</span>
<span class="slc">-- &lt;LOC-OFF&gt;
</span><span class="slc">--indexing
</span><span class="slc">--   description: &quot;This class is the entry point for the method call test&quot;
</span><span class="slc">--   author : Steve Thompson
</span><span class="slc">--   email  : &quot;Steve_Thompson&#64;prodigy.net&quot;
</span><span class="slc">--   date   : February 18, 2001
</span><span class="slc">--   compile: &quot;compile -clean -boost -no_split -O3 main.e -o main&quot;
</span><span class="slc">--   run    : &quot;main 400000&quot;
</span><span class="slc">-- &lt;LOC-ON&gt;
</span>
<span class="kwa">class</span> METHCALL

creation make

<span class="kwa">feature</span> <span class="slc">-- Creation
</span>
   make <span class="kwa">is
      local
</span>	 index<span class="sym">:</span> <span class="kwb">INTEGER
</span>	 n<span class="sym">:</span> <span class="kwb">INTEGER
</span>	 toggle<span class="sym">:</span> TOGGLE
	 value<span class="sym">:</span> <span class="kwb">BOOLEAN
</span>	 nth_toggle<span class="sym">:</span> NTH_TOGGLE
      <span class="kwa">do
	 if</span> argument_count <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
</span>	    n <span class="sym">:=</span> <span class="num">1
</span>	 <span class="kwa">else
</span>	    n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
	 <span class="kwa">end

</span>	 value <span class="sym">:=</span> <span class="kwa">True
</span>	 <span class="sym">!!</span>toggle.make<span class="sym">(</span>value<span class="sym">)
</span>	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> n <span class="kwa">loop
</span>	    value <span class="sym">:=</span> toggle.activate.value
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end

	 if</span> value <span class="kwa">then</span> print<span class="sym">(</span><span class="str">&quot;true%N&quot;</span><span class="sym">)</span> <span class="kwa">else</span> print<span class="sym">(</span><span class="str">&quot;false%N&quot;</span><span class="sym">)</span> <span class="kwa">end
</span>	    value <span class="sym">:=</span> <span class="kwa">True
</span>	    <span class="sym">!!</span>nth_toggle.make<span class="sym">(</span>value<span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span>	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> n <span class="kwa">loop
</span>	    value <span class="sym">:=</span> nth_toggle.activate.value
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end
	 if</span> value <span class="kwa">then</span> print<span class="sym">(</span><span class="str">&quot;true%N&quot;</span><span class="sym">)</span> <span class="kwa">else</span> print<span class="sym">(</span><span class="str">&quot;false%N&quot;</span><span class="sym">)</span> <span class="kwa">end

      end</span> <span class="slc">-- make
</span>
<span class="kwa">end</span>
