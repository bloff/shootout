<span class="line">    1 </span><span class="slc">// $Id: ackermann-gcj.code,v 1.3 2004-11-11 07:13:55 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="kwa">public class</span> ackermann <span class="sym">{
</span><span class="line">    5 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">) {
</span><span class="line">    6 </span><span class="sym"></span>        <span class="kwb">int</span> num <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">    7 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span> <span class="sym">+</span> num <span class="sym">+</span> <span class="str">&quot;): &quot;</span> <span class="sym">+</span> Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> num<span class="sym">));
</span><span class="line">    8 </span><span class="sym">    }
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">int</span> Ack<span class="sym">(</span><span class="kwb">int</span> m<span class="sym">,</span> <span class="kwb">int</span> n<span class="sym">) {
</span><span class="line">   10 </span><span class="sym"></span>        <span class="kwa">return</span> <span class="sym">(</span>m <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> ? <span class="sym">(</span>n <span class="sym">+</span> <span class="num">1</span><span class="sym">) : ((</span>n <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> ? Ack<span class="sym">(</span>m<span class="num">-1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">) :
</span><span class="line">   11 </span><span class="sym"></span>                                     Ack<span class="sym">(</span>m<span class="num">-1</span><span class="sym">,</span> Ack<span class="sym">(</span>m<span class="sym">,</span> n <span class="num">- 1</span><span class="sym">)));
</span><span class="line">   12 </span><span class="sym">    }
</span><span class="line">   13 </span><span class="sym">}</span>
