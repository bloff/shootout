<span class="slc">// The Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">// contributed by Adam Montague</span>

<span class="kwb">void</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> argv<span class="sym">)</span>
<span class="sym">{</span>
	<span class="kwb">int</span> sum<span class="sym">;</span>
	Thread.Fifo fifo <span class="sym">=</span> Thread.<span class="kwd">Fifo</span><span class="sym">();</span>
	Thread.Fifo in <span class="sym">=</span> fifo<span class="sym">;</span>
	Thread.Fifo out <span class="sym">=</span> Thread.<span class="kwd">Fifo</span><span class="sym">();</span>
	<span class="kwd">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="num">500</span><span class="sym">;</span> i<span class="sym">++) {</span>
		Thread.<span class="kwd">Thread</span><span class="sym">(</span>work<span class="sym">,</span> i<span class="sym">,</span> in<span class="sym">,</span> out<span class="sym">);</span>
		in <span class="sym">=</span> out<span class="sym">;</span>
		out <span class="sym">=</span> Thread.<span class="kwd">Fifo</span><span class="sym">();</span>
	<span class="sym">}</span>
	<span class="kwd">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt; (</span><span class="kwb">int</span><span class="sym">)</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">];</span> i<span class="sym">++) {</span>
		fifo<span class="sym">-&gt;</span><span class="kwa">write</span><span class="sym">(</span><span class="num">0</span><span class="sym">);</span>
		sum <span class="sym">+=</span> in<span class="sym">-&gt;</span><span class="kwd">read</span><span class="sym">();</span>
	<span class="sym">}</span>
	<span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> sum<span class="sym">);</span>
<span class="sym">}</span>

<span class="kwb">void</span> <span class="kwd">work</span><span class="sym">(</span><span class="kwb">int</span> thread<span class="sym">,</span> Thread.Fifo in<span class="sym">,</span> Thread.Fifo out<span class="sym">)</span>
<span class="sym">{</span>
	<span class="kwd">for</span> <span class="sym">(;;) {</span>
		out<span class="sym">-&gt;</span><span class="kwa">write</span><span class="sym">(</span>in<span class="sym">-&gt;</span><span class="kwd">read</span><span class="sym">() +</span> <span class="num">1</span><span class="sym">);</span>
	<span class="sym">}</span>
<span class="sym">}</span>
