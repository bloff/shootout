<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(* The Great Computer Language Shootout
   http://shootout.alioth.debian.org

   contributed by Isaac Gouy (Oberon-2 novice)
   Line-by-line (more or less) translation of the C implemention.
*)</FONT></I>


<B><FONT COLOR="#228B22">MODULE</FONT></B> Lists;
<B><FONT COLOR="#5F9EA0">IMPORT</FONT></B> LangShootout, SYSTEM, Out;

<B><FONT COLOR="#5F9EA0">CONST</FONT></B> Size <B><FONT COLOR="#5F9EA0">=</FONT></B> 10000;

<B><FONT COLOR="#A020F0">TYPE</FONT></B>
   List <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">POINTER</FONT></B> <B><FONT COLOR="#A020F0">TO</FONT></B> ListRec;
   ListRec <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">RECORD</FONT></B>
      val: <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
      next: List;
      prev: List;
   <B><FONT COLOR="#A020F0">END</FONT></B>;

<B><FONT COLOR="#A020F0">VAR</FONT></B>
   n, result: <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
   l1, l2, l3, item: List;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Length</FONT></I></B></FONT></B> (head: List): <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> head.val;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Length</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Empty</FONT></I></B></FONT></B> (head: List): <B><FONT COLOR="#228B22">BOOLEAN</FONT></B>;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> Length(head) <B><FONT COLOR="#5F9EA0">=</FONT></B> 0;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Empty</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">First</FONT></I></B></FONT></B> (head: List): List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> head.next;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">First</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Last</FONT></I></B></FONT></B> (head: List): List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> head.prev;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Last</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PushTail</FONT></I></B></FONT></B> (<B><FONT COLOR="#A020F0">VAR</FONT></B> head: List; item: List);
<B><FONT COLOR="#A020F0">VAR</FONT></B> tail: List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   tail <B><FONT COLOR="#5F9EA0">:=</FONT></B> head.prev;
   tail.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> item;
   item.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> head;
   head.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> item;
   item.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> tail;
   <B><FONT COLOR="#A020F0">INC</FONT></B>(head.val);
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PushTail</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PopTail</FONT></I></B></FONT></B> (<B><FONT COLOR="#A020F0">VAR</FONT></B> head: List): List;
<B><FONT COLOR="#A020F0">VAR</FONT></B> prev, tail: List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">IF</FONT></B> Empty(head) <B><FONT COLOR="#A020F0">THEN</FONT></B> <B><FONT COLOR="#A020F0">RETURN</FONT></B> <B><FONT COLOR="#228B22">NIL</FONT></B>; <B><FONT COLOR="#A020F0">END</FONT></B>;
   tail <B><FONT COLOR="#5F9EA0">:=</FONT></B> head.prev;
   prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> tail.prev;
   prev.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> head;
   head.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> prev;
   <B><FONT COLOR="#A020F0">DEC</FONT></B>(head.val);
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> tail;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PopTail</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PushHead</FONT></I></B></FONT></B> (<B><FONT COLOR="#A020F0">VAR</FONT></B> head, item: List); <I><FONT COLOR="#B22222">(* never used *)</FONT></I>
<B><FONT COLOR="#A020F0">VAR</FONT></B> next: List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   next <B><FONT COLOR="#5F9EA0">:=</FONT></B> head.next;
   head.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> item;
   next.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> item;
   item.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> next;
   item.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> head;
   <B><FONT COLOR="#A020F0">INC</FONT></B>(head.val);
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PushHead</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PopHead</FONT></I></B></FONT></B> (<B><FONT COLOR="#A020F0">VAR</FONT></B> head: List): List;
<B><FONT COLOR="#A020F0">VAR</FONT></B> next: List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">IF</FONT></B> Empty(head) <B><FONT COLOR="#A020F0">THEN</FONT></B> <B><FONT COLOR="#A020F0">RETURN</FONT></B> <B><FONT COLOR="#228B22">NIL</FONT></B>; <B><FONT COLOR="#A020F0">END</FONT></B>;
   next <B><FONT COLOR="#5F9EA0">:=</FONT></B> head.next;
   head.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> next.next;
   next.next.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> head;
   <B><FONT COLOR="#A020F0">DEC</FONT></B>(head.val);
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> next;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">PopHead</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Equal</FONT></I></B></FONT></B> (x, y: List): <B><FONT COLOR="#228B22">BOOLEAN</FONT></B>;
<B><FONT COLOR="#A020F0">VAR</FONT></B> xp, yp: List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   xp <B><FONT COLOR="#5F9EA0">:=</FONT></B> x;
   yp <B><FONT COLOR="#5F9EA0">:=</FONT></B> y;
   <B><FONT COLOR="#A020F0">WHILE</FONT></B> xp.next <B><FONT COLOR="#5F9EA0">#</FONT></B> x <B><FONT COLOR="#A020F0">DO</FONT></B>
      <B><FONT COLOR="#A020F0">IF</FONT></B> xp.val <B><FONT COLOR="#5F9EA0">#</FONT></B> yp.val <B><FONT COLOR="#A020F0">THEN</FONT></B> <B><FONT COLOR="#A020F0">RETURN</FONT></B> <B><FONT COLOR="#A020F0">FALSE</FONT></B>; <B><FONT COLOR="#A020F0">END</FONT></B>;
      xp <B><FONT COLOR="#5F9EA0">:=</FONT></B> xp.next;
      yp <B><FONT COLOR="#5F9EA0">:=</FONT></B> yp.next;
   <B><FONT COLOR="#A020F0">END</FONT></B>;
   <B><FONT COLOR="#A020F0">IF</FONT></B> xp.val <B><FONT COLOR="#5F9EA0">#</FONT></B> yp.val <B><FONT COLOR="#A020F0">THEN</FONT></B> <B><FONT COLOR="#A020F0">RETURN</FONT></B> <B><FONT COLOR="#A020F0">FALSE</FONT></B>; <B><FONT COLOR="#A020F0">END</FONT></B>;
   <B><FONT COLOR="#A020F0">RETURN</FONT></B>  yp.next <B><FONT COLOR="#5F9EA0">=</FONT></B> y;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Equal</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Print</FONT></I></B></FONT></B> (msg: <B><FONT COLOR="#228B22">ARRAY</FONT></B> <B><FONT COLOR="#A020F0">OF</FONT></B> <B><FONT COLOR="#228B22">CHAR</FONT></B>; x: List); <I><FONT COLOR="#B22222">(* never used *)</FONT></I>
<B><FONT COLOR="#A020F0">VAR</FONT></B>
   xp, first: List;
   i: <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   first <B><FONT COLOR="#5F9EA0">:=</FONT></B> x.next;
   i <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0;
   xp <B><FONT COLOR="#5F9EA0">:=</FONT></B> x.next;;
   <B><FONT COLOR="#A020F0">WHILE</FONT></B> xp.next <B><FONT COLOR="#5F9EA0">#</FONT></B> first <B><FONT COLOR="#A020F0">DO</FONT></B>
      Out.String(msg);
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;i:&quot;</FONT></B>); Out.Int(i,3);
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;   v:&quot;</FONT></B>); Out.Int(xp.val,3);
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;   n:&quot;</FONT></B>); Out.Int(xp.next.val,3);
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;   p:&quot;</FONT></B>); Out.Int(xp.prev.val,3);
      Out.Ln;
      <B><FONT COLOR="#A020F0">INC</FONT></B>(i);
      xp <B><FONT COLOR="#5F9EA0">:=</FONT></B> xp.next;
   <B><FONT COLOR="#A020F0">END</FONT></B>;
   Out.String(<B><FONT COLOR="#BC8F8F">&quot;[last entry points to list head]&quot;</FONT></B>); Out.Ln;
   Out.String(<B><FONT COLOR="#BC8F8F">&quot;[val of next of tail is: &quot;</FONT></B>);
   Out.Int(xp.next.val,3); Out.String(<B><FONT COLOR="#BC8F8F">&quot;]&quot;</FONT></B>); Out.Ln; Out.Ln;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Print</FONT></I></B></FONT></B>;



<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">New</FONT></I></B></FONT></B> (): List;
<B><FONT COLOR="#A020F0">VAR</FONT></B> l: List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">NEW</FONT></B>(l);
   l.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> l;
   l.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> l;
   l.val <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0;
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> l;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">New</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sequence</FONT></I></B></FONT></B> (from, to: <B><FONT COLOR="#228B22">LONGINT</FONT></B>): List;
<B><FONT COLOR="#A020F0">VAR</FONT></B>
   size, tmp, i, j: <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
   a: <B><FONT COLOR="#228B22">POINTER</FONT></B> <B><FONT COLOR="#A020F0">TO</FONT></B> <B><FONT COLOR="#228B22">ARRAY</FONT></B> <B><FONT COLOR="#A020F0">OF</FONT></B> ListRec;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   <B><FONT COLOR="#A020F0">IF</FONT></B> from <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> to <B><FONT COLOR="#A020F0">THEN</FONT></B>
      tmp <B><FONT COLOR="#5F9EA0">:=</FONT></B> from; from <B><FONT COLOR="#5F9EA0">:=</FONT></B> to; to <B><FONT COLOR="#5F9EA0">:=</FONT></B> tmp;
   <B><FONT COLOR="#A020F0">END</FONT></B>;
   size <B><FONT COLOR="#5F9EA0">:=</FONT></B> to <B><FONT COLOR="#5F9EA0">-</FONT></B> from <B><FONT COLOR="#5F9EA0">+</FONT></B> 1;

   <B><FONT COLOR="#A020F0">NEW</FONT></B>(a, size<B><FONT COLOR="#5F9EA0">+</FONT></B>1);
   <B><FONT COLOR="#A020F0">DEC</FONT></B>(from);
   j <B><FONT COLOR="#5F9EA0">:=</FONT></B> 1;
   <B><FONT COLOR="#A020F0">FOR</FONT></B> i <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0 <B><FONT COLOR="#A020F0">TO</FONT></B> size<B><FONT COLOR="#5F9EA0">-</FONT></B>1 <B><FONT COLOR="#A020F0">DO</FONT></B>
      a[i].next <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[i<B><FONT COLOR="#5F9EA0">+</FONT></B>1] ));
      a[j].prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[j<B><FONT COLOR="#5F9EA0">-</FONT></B>1] ));
      a[i].val <B><FONT COLOR="#5F9EA0">:=</FONT></B> from;
      <B><FONT COLOR="#A020F0">INC</FONT></B>(from);
      <B><FONT COLOR="#A020F0">INC</FONT></B>(j);
   <B><FONT COLOR="#A020F0">END</FONT></B>;
   a[0].prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[size] ));
   a[size].next <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[0] ));
   a[size].prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[size<B><FONT COLOR="#5F9EA0">-</FONT></B>1] ));
   a[size].val <B><FONT COLOR="#5F9EA0">:=</FONT></B> from;
   a[0].val <B><FONT COLOR="#5F9EA0">:=</FONT></B> size;
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[0] ));
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sequence</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Copy</FONT></I></B></FONT></B> (x: List): List;
<B><FONT COLOR="#A020F0">VAR</FONT></B>
   size, i, j: <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
   xp: List;
   a: <B><FONT COLOR="#228B22">POINTER</FONT></B> <B><FONT COLOR="#A020F0">TO</FONT></B> <B><FONT COLOR="#228B22">ARRAY</FONT></B> <B><FONT COLOR="#A020F0">OF</FONT></B> ListRec;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   size <B><FONT COLOR="#5F9EA0">:=</FONT></B> Length(x);
   <B><FONT COLOR="#A020F0">NEW</FONT></B>(a, size<B><FONT COLOR="#5F9EA0">+</FONT></B>1);
   j <B><FONT COLOR="#5F9EA0">:=</FONT></B> 1;
   xp <B><FONT COLOR="#5F9EA0">:=</FONT></B> x;
   <B><FONT COLOR="#A020F0">FOR</FONT></B> i <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0 <B><FONT COLOR="#A020F0">TO</FONT></B> size<B><FONT COLOR="#5F9EA0">-</FONT></B>1 <B><FONT COLOR="#A020F0">DO</FONT></B>
      a[i].next <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[j] ));
      a[j].prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[i] ));
      a[i].val <B><FONT COLOR="#5F9EA0">:=</FONT></B> xp.val;
      <B><FONT COLOR="#A020F0">INC</FONT></B>(j);
      xp <B><FONT COLOR="#5F9EA0">:=</FONT></B> xp.next;
   <B><FONT COLOR="#A020F0">END</FONT></B>;
   a[0].prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[size] ));
   a[size].next <B><FONT COLOR="#5F9EA0">:=</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[0] ));
   xp <B><FONT COLOR="#5F9EA0">:=</FONT></B> Last(x);
   a[size].val <B><FONT COLOR="#5F9EA0">:=</FONT></B> xp.val;
   <B><FONT COLOR="#A020F0">RETURN</FONT></B> SYSTEM.VAL(List, SYSTEM.ADR( a[0] ));
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Copy</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Reverse</FONT></I></B></FONT></B> (head: List);
<B><FONT COLOR="#A020F0">VAR</FONT></B> tmp, p: List;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   p <B><FONT COLOR="#5F9EA0">:=</FONT></B> head;
   <B><FONT COLOR="#A020F0">REPEAT</FONT></B>
      tmp <B><FONT COLOR="#5F9EA0">:=</FONT></B> p.next;
      p.next <B><FONT COLOR="#5F9EA0">:=</FONT></B> p.prev;
      p.prev <B><FONT COLOR="#5F9EA0">:=</FONT></B> tmp;
      p <B><FONT COLOR="#5F9EA0">:=</FONT></B> tmp;
   <B><FONT COLOR="#A020F0">UNTIL</FONT></B> p <B><FONT COLOR="#5F9EA0">=</FONT></B> head;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Reverse</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">TestLists</FONT></I></B></FONT></B> (): <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   l1 <B><FONT COLOR="#5F9EA0">:=</FONT></B> Sequence(1,Size); <I><FONT COLOR="#B22222">(* Print(&quot;L1 &quot;, l1); *)</FONT></I>
   l2 <B><FONT COLOR="#5F9EA0">:=</FONT></B> Copy(l1);         <I><FONT COLOR="#B22222">(* Print(&quot;L2 &quot;, l2); *)</FONT></I>
   l3 <B><FONT COLOR="#5F9EA0">:=</FONT></B> New();            <I><FONT COLOR="#B22222">(* Print(&quot;L3 &quot;, l3); *)</FONT></I>

   <B><FONT COLOR="#A020F0">IF</FONT></B> ~Equal(l2, l1) <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;l2 and l1 are not equal&quot;</FONT></B>); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;

   <B><FONT COLOR="#A020F0">WHILE</FONT></B> ~ Empty(l2) <B><FONT COLOR="#A020F0">DO</FONT></B>
      PushTail(l3, PopHead(l2));
   <B><FONT COLOR="#A020F0">END</FONT></B>;
                           <I><FONT COLOR="#B22222">(* Print(&quot;L2 &quot;, l2);
			      Print(&quot;L3 &quot;, l3); *)</FONT></I>
   <B><FONT COLOR="#A020F0">IF</FONT></B> ~Empty(l2) <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;l2 should be empty now&quot;</FONT></B>); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;			
								
   <B><FONT COLOR="#A020F0">WHILE</FONT></B> ~ Empty(l3) <B><FONT COLOR="#A020F0">DO</FONT></B>
      PushTail(l2, PopTail(l3));
   <B><FONT COLOR="#A020F0">END</FONT></B>;
                           <I><FONT COLOR="#B22222">(* Print(&quot;L2 &quot;, l2);
			      Print(&quot;L3 &quot;, l3); *)</FONT></I>
   <B><FONT COLOR="#A020F0">IF</FONT></B> ~Empty(l3) <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;l3 should be empty now&quot;</FONT></B>); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;	
   			
   Reverse(l1);            <I><FONT COLOR="#B22222">(* Print(&quot;L1 &quot;, l1); *)</FONT></I>

   item <B><FONT COLOR="#5F9EA0">:=</FONT></B> First(l1);
   <B><FONT COLOR="#A020F0">IF</FONT></B> item.val <B><FONT COLOR="#5F9EA0">#</FONT></B> Size <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;L1 first value wrong, wanted &quot;</FONT></B>); Out.Int(Size,1);
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;, got &quot;</FONT></B>); Out.Int(item.val,1); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;

   item <B><FONT COLOR="#5F9EA0">:=</FONT></B> Last(l1);
   <B><FONT COLOR="#A020F0">IF</FONT></B> item.val <B><FONT COLOR="#5F9EA0">#</FONT></B> 1 <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;L1 last value wrong, wanted 1, got &quot;</FONT></B>);
      Out.Int(item.val,1); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;

   item <B><FONT COLOR="#5F9EA0">:=</FONT></B> First(l2);
   <B><FONT COLOR="#A020F0">IF</FONT></B> item.val <B><FONT COLOR="#5F9EA0">#</FONT></B> Size <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;L2 first value wrong, wanted &quot;</FONT></B>); Out.Int(Size,1);
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;, got &quot;</FONT></B>); Out.Int(item.val,1); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;

   item <B><FONT COLOR="#5F9EA0">:=</FONT></B> Last(l2);
   <B><FONT COLOR="#A020F0">IF</FONT></B> item.val <B><FONT COLOR="#5F9EA0">#</FONT></B> 1 <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;L2 last value wrong, wanted 1, got &quot;</FONT></B>);
      Out.Int(item.val,1); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;

   <B><FONT COLOR="#A020F0">IF</FONT></B> Length(l1) <B><FONT COLOR="#5F9EA0">#</FONT></B> Size <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;L1 size wrong, wanted &quot;</FONT></B>); Out.Int(Size,1);
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;, got &quot;</FONT></B>); Out.Int(Length(l1),1); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;

   <B><FONT COLOR="#A020F0">IF</FONT></B> ~Equal(l1, l2) <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;l1 and l2 are not equal&quot;</FONT></B>); Out.Ln;
      <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;

   <B><FONT COLOR="#A020F0">RETURN</FONT></B> Length(l1);
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">TestLists</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   n <B><FONT COLOR="#5F9EA0">:=</FONT></B> LangShootout.Argi();
   result <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0;
   <B><FONT COLOR="#A020F0">WHILE</FONT></B> n <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 0 <B><FONT COLOR="#A020F0">DO</FONT></B>
      result <B><FONT COLOR="#5F9EA0">:=</FONT></B> TestLists();
      <B><FONT COLOR="#A020F0">DEC</FONT></B>(n);
   <B><FONT COLOR="#A020F0">END</FONT></B>;
   Out.Int(result,1); Out.Ln;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Lists</FONT></I></B></FONT></B>.</pre></td></tr></table>
