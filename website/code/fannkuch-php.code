<span class="sym">&lt;</span>? <span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com"></span>
<span class="com">   php -q fannkuch.php 7</span>
<span class="com">*/</span>


<span class="kwa">function</span> Fannkuch<span class="sym">(</span><span class="kwb">$n</span><span class="sym">){</span>
   <span class="kwb">$check</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   <span class="kwb">$perm</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();</span>
   <span class="kwb">$perm1</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();</span>
   <span class="kwb">$count</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();</span>
   <span class="kwb">$maxPerm</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();</span>
   <span class="kwb">$maxFlipsCount</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   <span class="kwb">$m</span> <span class="sym">=</span> <span class="kwb">$n</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">;</span>

   <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$i</span><span class="sym">;</span>
   <span class="kwb">$r</span> <span class="sym">=</span> <span class="kwb">$n</span><span class="sym">;</span>

   <span class="kwa">while</span> <span class="sym">(</span>TRUE<span class="sym">) {</span>
      <span class="slc">// write-out the first 30 permutations</span>
      <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$check</span> <span class="sym">&lt;</span> <span class="num">30</span><span class="sym">){</span>
        <span class="kwa">for</span><span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwa">echo</span> <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]+</span><span class="num">1</span><span class="sym">;</span>
        <span class="kwa">echo</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
        <span class="kwb">$check</span><span class="sym">++;</span>
      <span class="sym">}</span>

      <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$r</span> <span class="sym">!=</span> <span class="num">1</span><span class="sym">){</span> <span class="kwb">$count</span><span class="sym">[</span><span class="kwb">$r</span><span class="sym">-</span><span class="num">1</span><span class="sym">] =</span> <span class="kwb">$r</span><span class="sym">;</span> <span class="kwb">$r</span><span class="sym">--; }</span>
      <span class="kwa">if</span> <span class="sym">(! (</span><span class="kwb">$perm1</span><span class="sym">[</span><span class="num">0</span><span class="sym">]==</span><span class="num">0</span> <span class="sym">||</span> <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$m</span><span class="sym">] ==</span> <span class="kwb">$m</span><span class="sym">)){</span>
         <span class="kwa">for</span><span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$perm</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">];</span>
         <span class="kwb">$flipsCount</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>

         <span class="kwa">while</span> <span class="sym">( !((</span><span class="kwb">$k</span><span class="sym">=</span><span class="kwb">$perm</span><span class="sym">[</span><span class="num">0</span><span class="sym">]) ==</span> <span class="num">0</span><span class="sym">) ) {</span>
            <span class="kwb">$k2</span> <span class="sym">= (</span><span class="kwb">$k</span><span class="sym">+</span><span class="num">1</span><span class="sym">) &gt;&gt;</span> <span class="num">1</span><span class="sym">;</span>
            <span class="kwa">for</span><span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$k2</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++) {</span>
               <span class="kwb">$temp</span> <span class="sym">=</span> <span class="kwb">$perm</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">];</span> <span class="kwb">$perm</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$perm</span><span class="sym">[</span><span class="kwb">$k</span><span class="sym">-</span><span class="kwb">$i</span><span class="sym">];</span> <span class="kwb">$perm</span><span class="sym">[</span><span class="kwb">$k</span><span class="sym">-</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$temp</span><span class="sym">;</span>
            <span class="sym">}</span>
            <span class="kwb">$flipsCount</span><span class="sym">++;</span>
         <span class="sym">}</span>

         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$flipsCount</span> <span class="sym">&gt;</span> <span class="kwb">$maxFlipsCount</span><span class="sym">) {</span>
            <span class="kwb">$maxFlipsCount</span> <span class="sym">=</span> <span class="kwb">$flipsCount</span><span class="sym">;</span>
            <span class="kwa">for</span><span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$maxPerm</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">];</span>
         <span class="sym">}</span>
      <span class="sym">}</span>

      <span class="kwa">while</span> <span class="sym">(</span>TRUE<span class="sym">) {</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$r</span> <span class="sym">==</span> <span class="kwb">$n</span><span class="sym">)</span> <span class="kwa">return</span> <span class="kwb">$maxFlipsCount</span><span class="sym">;</span>
         <span class="kwb">$perm0</span> <span class="sym">=</span> <span class="kwb">$perm1</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
         <span class="kwb">$i</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
         <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="kwb">$r</span><span class="sym">) {</span>
            <span class="kwb">$j</span> <span class="sym">=</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
            <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">];</span>
            <span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$j</span><span class="sym">;</span>
         <span class="sym">}</span>
         <span class="kwb">$perm1</span><span class="sym">[</span><span class="kwb">$r</span><span class="sym">] =</span> <span class="kwb">$perm0</span><span class="sym">;</span>

         <span class="kwb">$count</span><span class="sym">[</span><span class="kwb">$r</span><span class="sym">] =</span> <span class="kwb">$count</span><span class="sym">[</span><span class="kwb">$r</span><span class="sym">] -</span> <span class="num">1</span><span class="sym">;</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$count</span><span class="sym">[</span><span class="kwb">$r</span><span class="sym">] &gt;</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">break</span><span class="sym">;</span>
         <span class="kwb">$r</span><span class="sym">++;</span>
      <span class="sym">}</span>
   <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwb">$n</span> <span class="sym">=</span> <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
<span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;Pfannkuchen(%d) = %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">,</span> Fannkuch<span class="sym">(</span><span class="kwb">$n</span><span class="sym">));</span>
?<span class="sym">&gt;</span>
