<span class="com">/* ------------------------------------------------------------------ */</span>
<span class="com">/* The Great Computer Language Shootout                               */</span>
<span class="com">/* http://shootout.alioth.debian.org/                                 */</span>
<span class="com">/*                                                                    */</span>
<span class="com">/* Uses compound variables [i.e. native associative arrays], and REXX */</span>
<span class="com">/* idiom of maintaining data structure size in the 0th element.       */</span>
<span class="com">/*                                                                    */</span>
<span class="com">/* Contributed by Anthony Borla                                       */</span>
<span class="com">/* ------------------------------------------------------------------ */</span>

SIZE <span class="sym">=</span> <span class="num">10000</span>

N <span class="sym">=</span> <span class="kwd">ARG</span><span class="sym">(</span><span class="num">1</span><span class="sym">) ;</span> <span class="kwa">if</span> <span class="kwd">DATATYPE</span><span class="sym">(</span>N<span class="sym">)</span> \= <span class="str">'NUM'</span> <span class="sym">|</span> N <span class="sym">&lt;</span> <span class="num">1</span> then <span class="sym">;</span> N <span class="sym">=</span> <span class="num">1</span>

<span class="kwa">do</span> N

  L1<span class="sym">.</span>0 <span class="sym">=</span> <span class="num">0</span> <span class="sym">;</span> <span class="kwa">do</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">for</span> SIZE <span class="sym">;</span> L1<span class="sym">.</span>i <span class="sym">=</span> i <span class="sym">;</span> L1<span class="sym">.</span>0 <span class="sym">=</span> L1<span class="sym">.</span>0 <span class="sym">+</span> <span class="num">1</span> <span class="sym">;</span> end
  L2<span class="sym">.</span>0 <span class="sym">=</span> <span class="num">0</span> <span class="sym">;</span> <span class="kwa">do</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">for</span> SIZE <span class="sym">;</span> L2<span class="sym">.</span>i <span class="sym">=</span> L1<span class="sym">.</span>i <span class="sym">;</span> L2<span class="sym">.</span>0 <span class="sym">=</span> L2<span class="sym">.</span>0 <span class="sym">+</span> <span class="num">1</span> <span class="sym">;</span> end

  L3<span class="sym">.</span>0 <span class="sym">=</span> <span class="num">0</span> <span class="sym">;</span> j <span class="sym">=</span> SIZE <span class="sym">;</span> <span class="kwa">do</span> i <span class="sym">=</span> <span class="num">1</span> to SIZE
    L3<span class="sym">.</span>j <span class="sym">=</span> L2<span class="sym">.</span>i <span class="sym">;</span> L3<span class="sym">.</span>0 <span class="sym">=</span> L3<span class="sym">.</span>0 <span class="sym">+</span> <span class="num">1</span> <span class="sym">;</span> drop L2<span class="sym">.</span>i <span class="sym">;</span> L2<span class="sym">.</span>0 <span class="sym">=</span> L2<span class="sym">.</span>0 <span class="sym">-</span> <span class="num">1</span> <span class="sym">;</span> j <span class="sym">=</span> j <span class="sym">-</span> <span class="num">1</span>
  end

  <span class="kwa">do</span> i <span class="sym">=</span> SIZE to <span class="num">1</span> by <span class="sym">-</span><span class="num">1</span>
    L2<span class="sym">.</span>i <span class="sym">=</span> L3<span class="sym">.</span>i <span class="sym">;</span> L2<span class="sym">.</span>0 <span class="sym">=</span> L2<span class="sym">.</span>0 <span class="sym">+</span> <span class="num">1</span> <span class="sym">;</span> drop L3<span class="sym">.</span>i <span class="sym">;</span> L3<span class="sym">.</span>0 <span class="sym">=</span> L3<span class="sym">.</span>0 <span class="sym">-</span> <span class="num">1</span>
  end

  k <span class="sym">=</span> SIZE <span class="sym">%</span> <span class="num">2</span> <span class="sym">;</span> j <span class="sym">=</span> SIZE <span class="sym">;</span> <span class="kwa">do</span> i <span class="sym">=</span> <span class="num">1</span> to k
    tmp <span class="sym">=</span> L1<span class="sym">.</span>j <span class="sym">;</span> L1<span class="sym">.</span>j <span class="sym">=</span> L1<span class="sym">.</span>i <span class="sym">;</span> L1<span class="sym">.</span>i <span class="sym">=</span> tmp <span class="sym">;</span> j <span class="sym">=</span> j <span class="sym">-</span> <span class="num">1</span>
  end

  <span class="kwa">if</span> L1<span class="sym">.</span><span class="dir">1 \= SIZE then do ; say</span> <span class="dstr">&quot;L1 &lt;=&gt; SIZE comparison error&quot;</span><span class="dir"> ; exit 1 ; end</span>

  <span class="kwa">if</span> L1<span class="sym">.</span>0 \= L2<span class="sym">.</span>0 then <span class="kwa">do</span> <span class="sym">;</span> say <span class="str">&quot;L1 L2 sizes differ&quot;</span> <span class="sym">;</span> exit <span class="num">1</span> <span class="sym">;</span> end

  <span class="kwa">do</span> i <span class="sym">=</span> <span class="num">1</span> to SIZE
    <span class="kwa">if</span> L1<span class="sym">.</span>i \= L2<span class="sym">.</span>i then <span class="kwa">do</span> <span class="sym">;</span> say <span class="str">&quot;Corresponding L1 L2 elements unequal&quot;</span> <span class="sym">;</span> exit <span class="num">1</span> <span class="sym">;</span> end
  end

end

say L1<span class="sym">.</span>0

