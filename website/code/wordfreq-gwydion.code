<span class="line">    1 </span><span class="kwb">module</span><span class="sym">:</span> wordfreq
<span class="line">    2 </span><span class="kwa">use</span><span class="sym">-</span>libraries<span class="sym">:</span> common<span class="sym">-</span>dylan<span class="sym">,</span> io<span class="sym">,</span> table<span class="sym">-</span>extensions
<span class="line">    3 </span><span class="kwa">use</span><span class="sym">-</span>modules<span class="sym">:</span> common<span class="sym">-</span>dylan<span class="sym">,</span> standard<span class="sym">-</span>io<span class="sym">,</span> streams<span class="sym">,</span> format<span class="sym">-</span>out<span class="sym">,</span> table<span class="sym">-</span>extensions
<span class="line">    4 </span>
<span class="line">    5 </span><span class="kwa">begin
</span><span class="line">    6 </span><span class="kwa">  let</span> words <span class="sym">=</span> make<span class="sym">(</span><span class="kwa">&lt;case-insensitive-string-table&gt;</span><span class="sym">);
</span><span class="line">    7 </span><span class="sym"></span>  <span class="kwa">while</span><span class="sym">(</span>~stream<span class="sym">-</span>at<span class="sym">-</span><span class="kwa">end</span>?<span class="sym">(*</span>standard<span class="sym">-</span>input<span class="sym">*))
</span><span class="line">    8 </span><span class="sym"></span>    do<span class="sym">(</span><span class="kwa">method</span><span class="sym">(</span>x<span class="sym">)
</span><span class="line">    9 </span><span class="sym"></span>           <span class="kwa">unless</span><span class="sym">(</span>x <span class="sym">=</span> <span class="str">&quot;&quot;</span><span class="sym">)
</span><span class="line">   10 </span><span class="sym"></span>             <span class="kwa">let</span> count <span class="sym">=</span> element<span class="sym">(</span>words<span class="sym">,</span> x<span class="sym">,</span> default<span class="sym">:</span> <span class="num">0</span><span class="sym">);
</span><span class="line">   11 </span><span class="sym"></span>             words<span class="sym">[</span>x<span class="sym">] :=</span> count <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>           <span class="kwa">end unless</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span>       <span class="kwa">end method</span><span class="sym">,</span> split<span class="sym">(</span>read<span class="sym">-</span>line<span class="sym">(*</span>standard<span class="sym">-</span>input<span class="sym">*),</span> <span class="str">' '</span><span class="sym">));
</span><span class="line">   14 </span><span class="sym"></span>  <span class="kwa">end while</span><span class="sym">;
</span><span class="line">   15 </span><span class="sym"></span>  <span class="kwa">let</span> results <span class="sym">=</span> make<span class="sym">(</span><span class="kwa">&lt;stretchy-vector&gt;</span><span class="sym">);
</span><span class="line">   16 </span><span class="sym"></span>  <span class="kwa">for</span><span class="sym">(</span>w keyed<span class="sym">-</span><span class="kwa">by</span> k <span class="kwa">in</span> words<span class="sym">)
</span><span class="line">   17 </span><span class="sym"></span>    add<span class="sym">!(</span>results<span class="sym">,</span> pair<span class="sym">(</span>k<span class="sym">,</span> w<span class="sym">));
</span><span class="line">   18 </span><span class="sym"></span>  <span class="kwa">end for</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>  do<span class="sym">(</span><span class="kwa">method</span><span class="sym">(</span>x<span class="sym">)
</span><span class="line">   20 </span><span class="sym"></span>         format<span class="sym">-</span>out<span class="sym">(</span><span class="str">&quot;%s %=</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> x.head<span class="sym">,</span> x.tail<span class="sym">)
</span><span class="line">   21 </span><span class="sym"></span>     <span class="kwa">end method</span><span class="sym">,</span> sort<span class="sym">(</span>results<span class="sym">,</span> test<span class="sym">:</span> <span class="kwa">method</span><span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">)
</span><span class="line">   22 </span><span class="sym"></span>                                         <span class="kwa">if</span><span class="sym">(</span>x.tail <span class="sym">==</span> y.tail<span class="sym">)
</span><span class="line">   23 </span><span class="sym"></span>                                           x.head &gt; y.head
<span class="line">   24 </span>                                         <span class="kwa">else
</span><span class="line">   25 </span><span class="kwa"></span>                                           x.tail &gt; y.tail
<span class="line">   26 </span>                                         <span class="kwa">end if</span><span class="sym">;
</span><span class="line">   27 </span><span class="sym"></span>                                     <span class="kwa">end method</span><span class="sym">));
</span><span class="line">   28 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;</span>
