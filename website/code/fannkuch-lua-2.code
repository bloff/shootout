<span class="slc">-- The Great Computer Language Shootout
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">-- contributed by Mike Pall
</span>
<span class="kwa">local function</span> fannkuch<span class="sym">(</span>n<span class="sym">)
</span>  <span class="kwa">if</span> n <span class="sym">&lt;</span> <span class="num">2</span> <span class="kwa">then return</span> <span class="num">0</span> <span class="kwa">end
  local</span> maxflips<span class="sym">,</span> p<span class="sym">,</span> q<span class="sym">,</span> s <span class="sym">=</span> <span class="num">0</span><span class="sym">, {}, {}, {}
</span>  <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>n <span class="kwa">do</span> p<span class="sym">[</span>i<span class="sym">] =</span> i<span class="sym">;</span> s<span class="sym">[</span>i<span class="sym">] =</span> <span class="num">1</span> <span class="kwa">end
  repeat
    local</span> odd <span class="sym">=</span> false
    <span class="kwa">for</span> x<span class="sym">=</span><span class="num">2</span><span class="sym">,</span>n <span class="kwa">do
      local</span> sx <span class="sym">=</span> s<span class="sym">[</span>x<span class="sym">]
</span>      <span class="kwa">if</span> sx <span class="sym">&lt;</span> x <span class="kwa">then
</span>        s<span class="sym">[</span>x<span class="sym">] =</span> sx <span class="sym">+</span> <span class="num">1
</span>        <span class="kwa">if</span> odd <span class="kwa">then</span> p<span class="sym">[</span>x<span class="sym">],</span> p<span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> p<span class="sym">[</span><span class="num">1</span><span class="sym">],</span> p<span class="sym">[</span>x<span class="sym">]</span> <span class="kwa">else</span> p<span class="sym">[</span>x<span class="sym">],</span> p<span class="sym">[</span>sx<span class="sym">] =</span> p<span class="sym">[</span>sx<span class="sym">],</span> p<span class="sym">[</span>x<span class="sym">]</span> <span class="kwa">end
        local</span> q1 <span class="sym">=</span> p<span class="sym">[</span><span class="num">1</span><span class="sym">]
</span>        <span class="kwa">if</span> p<span class="sym">[</span>n<span class="sym">]</span> ~<span class="sym">=</span> n <span class="kwa">and</span> q1 ~<span class="sym">=</span> <span class="num">1</span> <span class="kwa">then
          for</span> i<span class="sym">=</span><span class="num">2</span><span class="sym">,</span>n <span class="kwa">do</span> q<span class="sym">[</span>i<span class="sym">] =</span> p<span class="sym">[</span>i<span class="sym">]</span> <span class="kwa">end
          for</span> flips<span class="sym">=</span><span class="num">1</span><span class="sym">,</span><span class="num">1e6</span> <span class="kwa">do
            local</span> j <span class="sym">=</span> q1 <span class="num">- 1
</span>            <span class="kwa">for</span> i<span class="sym">=</span><span class="num">2</span><span class="sym">,</span>q1<span class="sym">*</span><span class="num">0.5</span> <span class="kwa">do</span> q<span class="sym">[</span>i<span class="sym">],</span> q<span class="sym">[</span>j<span class="sym">] =</span> q<span class="sym">[</span>j<span class="sym">],</span> q<span class="sym">[</span>i<span class="sym">];</span> j <span class="sym">=</span> j <span class="num">- 1</span> <span class="kwa">end
            local</span> qq <span class="sym">=</span> q<span class="sym">[</span>q1<span class="sym">]
</span>            <span class="kwa">if</span> qq <span class="sym">==</span> <span class="num">1</span> <span class="kwa">then
              if</span> flips <span class="sym">&gt;</span> maxflips <span class="kwa">then</span> maxflips <span class="sym">=</span> flips <span class="kwa">end
              break
            end
</span>            q<span class="sym">[</span>q1<span class="sym">] =</span> q1
            q1 <span class="sym">=</span> qq
          <span class="kwa">end
        end
        break
      end
      if</span> x <span class="sym">==</span> n <span class="kwa">then return</span> maxflips <span class="kwa">end
</span>      s<span class="sym">[</span>x<span class="sym">] =</span> <span class="num">1
</span>      odd <span class="sym">=</span> <span class="kwa">not</span> odd
    <span class="kwa">end
  until</span> false
<span class="kwa">end

local</span> n <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">(</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">or</span> <span class="num">1
</span>io.<span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;Pfannkuchen(&quot;</span><span class="sym">,</span> n<span class="sym">,</span> <span class="str">&quot;) = &quot;</span><span class="sym">,</span> fannkuch<span class="sym">(</span>n<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">)</span>
