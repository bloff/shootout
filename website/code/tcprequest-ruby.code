<span class="slc">#!/usr/bin/ruby
</span><span class="slc">#### The Great Computer Language Shootout
</span><span class="slc">#### http://shootout.alioth.debian.org/
</span><span class="slc">####
</span><span class="slc">#### Contributed by Robbert Haarman
</span>
require <span class="str">'socket'</span>

N = <span class="kwa">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">10
</span>M = <span class="num">100
</span>REPLY_SIZE = <span class="num">4096
</span>REQUEST_SIZE = <span class="num">1
</span>Host = <span class="str">'localhost'</span>
Port = <span class="num">12345

</span>sock = TCPServer.new Host<span class="sym">,</span> Port
<span class="kwa">if</span> fork
	<span class="slc"># Parent process
</span>	conn = sock.accept
	reply = <span class="str">'x'</span> <span class="sym">*</span> REPLY_SIZE
	<span class="kwa">while true
</span>		request = conn.read REQUEST_SIZE
		<span class="kwa">break if</span> request == <span class="kwa">nil
</span>		conn.write reply
	<span class="kwa">end
else
</span>	<span class="slc"># Child process
</span>	conn = TCPSocket.new Host<span class="sym">,</span> Port
	replies = <span class="num">0
</span>	bytes = <span class="num">0
</span>	n = N <span class="sym">*</span> M
	request = <span class="str">'x'</span> <span class="sym">*</span> REQUEST_SIZE
	<span class="kwa">while</span> n <span class="sym">&gt;</span> <span class="num">0
</span>		n = n <span class="num">- 1
</span>		conn.write request
		reply = conn.read REPLY_SIZE
		replies = replies <span class="sym">+</span> <span class="num">1
</span>		bytes = bytes <span class="sym">+</span> reply.length
	<span class="kwa">end
</span>	conn.close
	puts <span class="str">&quot;replies: #{replies}\tbytes: #{bytes}&quot;</span>
<span class="kwa">end

</span>sock.close
