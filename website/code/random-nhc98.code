<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: random-nhc98.code,v 1.1 2004-11-02 08:52:40 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org
</FONT></I><I><FONT COLOR="#B22222">--
</FONT></I><I><FONT COLOR="#B22222">-- By Simon Marlow
</FONT></I>
<B><FONT COLOR="#A020F0">module</FONT></B> Main(main) <B><FONT COLOR="#A020F0">where</FONT></B>
<B><FONT COLOR="#A020F0">import</FONT></B> System(getArgs)
<B><FONT COLOR="#A020F0">import</FONT></B> Numeric(showFFloat)

main = do
         ~[n] &lt;- getArgs
         putStrLn (showFFloat (Just 9) (randloop (read n<B><FONT COLOR="#228B22">::Int) 42 0.0 100.0) &quot;&quot;)
</FONT></B>
randloop <B><FONT COLOR="#228B22">:: Int -&gt; Int -&gt; Double -&gt; Double -&gt; Double
</FONT></B>randloop 0 seed r max = r
randloop n seed r max = 
    seq newseed $ seq newrand $ seq max $ <I><FONT COLOR="#B22222">-- strictness for speed
</FONT></I>    randloop (n-1) newseed newrand max
    <B><FONT COLOR="#A020F0">where</FONT></B> normalize x max = (fromIntegral x) * (max / imd)
          newseed         = (seed * ia + ic) `mod` im
          newrand         = normalize newseed max
	  im              = 139968
	  imd             = fromIntegral im
	  ia              = 3877
          ic              = 29573</pre></td></tr></table>
