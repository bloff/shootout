<span class="slc">#!/usr/bin/ruby</span>
<span class="slc"># -*- mode: ruby -*-</span>
<span class="slc"># $Id: regexmatch-ruby.code,v 1.8 2005-12-31 16:45:48 bfulgham Exp $</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># modified by: Jon-Carlos Rivera</span>

re = Regexp<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
    <span class="str">'(?:^|[^</span><span class="esc">\d\(</span><span class="str">])</span><span class="str">' +			# must be preceeded by non-digit</span>
<span class="str">    '</span><span class="sym">(</span>?<span class="sym">:</span>\(<span class="sym">(</span>\d\d\d)\)<span class="sym">|(</span>\d\d\d))<span class="str">' +	# match 1 or 2: area code is 3 digits</span>
<span class="str">    '</span><span class="sym">[ ]</span><span class="str">' +				# area code followed by one space</span>
<span class="str">    '</span><span class="sym">(</span>\d\d\d)<span class="str">' +			# match 3: prefix of 3 digits</span>
<span class="str">    '</span><span class="sym">[ -]</span><span class="str">' +				# separator is either space or dash</span>
<span class="str">    '</span><span class="sym">(</span>\d\d\d\d)<span class="str">' +			# match 4: last 4 digits</span>
<span class="str">    '</span>\D<span class="str">'				# must be followed by a non-digit</span>
<span class="str">)</span>

num = <span class="kwd">Integer</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">1</span>)

phones = <span class="kwc">STDIN</span><span class="sym">.</span>readlines

phonenum<span class="sym">,</span> count = <span class="str">&quot;&quot;</span><span class="sym">,</span> <span class="num">0</span>

<span class="sym">(</span><span class="num">1</span><span class="sym">..</span>num)<span class="sym">.</span>each <span class="kwa">do</span> <span class="sym">|</span>iter<span class="sym">|</span>
  phones<span class="sym">.</span>each <span class="kwa">do</span> <span class="sym">|</span>line<span class="sym">|</span>
	  <span class="kwa">if</span> line =~ re
	    phonenum = <span class="str">&quot;(#{($1 || $2)</span><span class="sym">}</span>) <span class="slc">#{$3}-#{$4}&quot;;</span>
	    <span class="kwa">if</span> iter == num
		    count <span class="sym">+</span>= <span class="num">1</span>
		    puts <span class="str">&quot;#{count}: #{phonenum}&quot;</span>
	    <span class="kwa">end</span>
	  <span class="kwa">end</span>
  <span class="kwa">end</span>
<span class="kwa">end</span>
