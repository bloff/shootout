<span class="slc">;;; -*- mode: scheme -*-
</span><span class="slc">;;; $Id: procinst-chicken.code,v 1.1 2004-11-22 07:08:58 bfulgham Exp $
</span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="slc">;;; Provided by Bengt Kleberg - adapted to Chicken by felix
</span>
<span class="sym">(</span>declare <span class="sym">(</span>uses srfi<span class="num">-18</span><span class="sym">))

(</span>define <span class="sym">(</span>procinst n<span class="sym">)
  (</span><span class="kwa">if</span> <span class="sym">(=</span> n <span class="num">0</span><span class="sym">)
</span>      <span class="str">'ok
      (begin
	(thread-start! (make-thread (lambda () (thread-suspend! (current-thread)))))
	(procinst (- n 1)))))

(define (main #!optional (n &quot;1&quot;))
  (let ((n (string-&gt;number n)))
    (procinst n)
    (print n) ) )

(apply main (command-line-arguments))
</span>
