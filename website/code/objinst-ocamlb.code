<span class="line">    1 </span><span class="com">(*
</span><span class="line">    2 </span><span class="com"> * $Id: objinst-ocamlb.code,v 1.4 2004-11-13 07:42:25 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * from: Benedikt Rosenau
</span><span class="line">    5 </span><span class="com"> * with contributions from Markus Mottl
</span><span class="line">    6 </span><span class="com"> *)</span>
<span class="line">    7 </span>
<span class="line">    8 </span><span class="kwa">class</span> toggle start_state <span class="sym">=</span> <span class="kwa">object</span> <span class="sym">(</span>self<span class="sym">)
</span><span class="line">    9 </span><span class="sym"></span>  <span class="kwa">val mutable</span> state <span class="sym">=</span> start_state
<span class="line">   10 </span>
<span class="line">   11 </span>  <span class="kwa">method</span> value <span class="sym">=</span> state
<span class="line">   12 </span>  <span class="kwa">method</span> activate <span class="sym">=</span> state <span class="sym">&lt;-</span> not state<span class="sym">;</span> self
<span class="line">   13 </span><span class="kwa">end
</span><span class="line">   14 </span><span class="kwa">
</span><span class="line">   15 </span><span class="kwa">class</span> nth_toggle start_state max_counter <span class="sym">=</span> <span class="kwa">object</span> <span class="sym">(</span>self<span class="sym">)
</span><span class="line">   16 </span><span class="sym"></span>  <span class="kwa">inherit</span> toggle start_state
<span class="line">   17 </span>
<span class="line">   18 </span>  <span class="kwa">val</span> count_max <span class="sym">=</span> max_counter
<span class="line">   19 </span>  <span class="kwa">val mutable</span> counter <span class="sym">=</span> <span class="num">0
</span><span class="line">   20 </span><span class="num">
</span><span class="line">   21 </span><span class="num"></span>  <span class="kwa">method</span> activate <span class="sym">=
</span><span class="line">   22 </span><span class="sym"></span>    counter <span class="sym">&lt;-</span> counter <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>    <span class="kwa">if</span> counter <span class="sym">&gt;=</span> count_max <span class="kwa">then begin
</span><span class="line">   24 </span><span class="kwa"></span>      state <span class="sym">&lt;-</span> not state<span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>      counter <span class="sym">&lt;-</span> <span class="num">0
</span><span class="line">   26 </span><span class="num"></span>    <span class="kwa">end</span><span class="sym">;
</span><span class="line">   27 </span><span class="sym"></span>    self
<span class="line">   28 </span><span class="kwa">end
</span><span class="line">   29 </span><span class="kwa">
</span><span class="line">   30 </span><span class="kwa">let</span> n <span class="sym">=</span> <span class="kwa">if</span> Array.length Sys.argv <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span> int_of_string Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">else</span> <span class="num">1
</span><span class="line">   31 </span><span class="num"></span><span class="kwa">let</span> tog <span class="sym">=</span> <span class="kwa">new</span> toggle <span class="kwa">true</span><span class="sym">;;
</span><span class="line">   32 </span><span class="sym"></span><span class="kwa">for</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">to</span> <span class="num">5</span> <span class="kwa">do</span> Printf.printf <span class="str">&quot;%b</span><span class="esc">\n</span><span class="str">&quot;</span> tog#activate#value <span class="kwa">done</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span><span class="kwa">for</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do</span> ignore <span class="sym">(</span><span class="kwa">new</span> toggle <span class="kwa">true</span><span class="sym">)</span> <span class="kwa">done</span><span class="sym">;
</span><span class="line">   34 </span><span class="sym"></span>print_newline <span class="sym">();
</span><span class="line">   35 </span><span class="sym"></span><span class="kwa">let</span> ntog <span class="sym">=</span> <span class="kwa">new</span> nth_toggle <span class="kwa">true</span> <span class="num">3</span> <span class="kwa">in
</span><span class="line">   36 </span><span class="kwa">for</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">to</span> <span class="num">8</span> <span class="kwa">do</span> Printf.printf <span class="str">&quot;%b</span><span class="esc">\n</span><span class="str">&quot;</span> ntog#activate#value <span class="kwa">done</span><span class="sym">;
</span><span class="line">   37 </span><span class="sym"></span><span class="kwa">for</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do</span> ignore <span class="sym">(</span><span class="kwa">new</span> nth_toggle <span class="kwa">true</span> <span class="num">3</span><span class="sym">)</span> <span class="kwa">done</span>
