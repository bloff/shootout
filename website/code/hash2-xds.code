<span class="com">(* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org</span>
<span class="com"></span>
<span class="com">   SimpleHash is a line-by-line transliteration</span>
<span class="com">   of the C implementation.</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy (Oberon-2 novice)</span>
<span class="com">*)</span>

<span class="kwa">MODULE</span> hash2<span class="sym">;</span>
<span class="kwa">IMPORT</span> Shootout<span class="sym">,</span> SimpleHash<span class="sym">,</span> Strings<span class="sym">,</span> IntStr<span class="sym">,</span> Out<span class="sym">,</span> S<span class="sym">:=</span>SYSTEM<span class="sym">;</span>

<span class="kwa">CONST</span>
   maxLength <span class="sym">=</span> <span class="num">11</span><span class="sym">;</span>

<span class="kwa">VAR</span>
   buffer<span class="sym">:</span> <span class="kwa">ARRAY</span> maxLength <span class="kwa">OF</span> <span class="kwb">CHAR</span><span class="sym">;</span>
   n<span class="sym">,</span> i<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   table1<span class="sym">,</span> table2<span class="sym">:</span> SimpleHash<span class="sym">.</span>Hashtable<span class="sym">;</span>
   item1<span class="sym">,</span> item2<span class="sym">:</span> SimpleHash<span class="sym">.</span>Item<span class="sym">;</span>
   key<span class="sym">,</span> key1<span class="sym">,</span> key9999<span class="sym">:</span> SimpleHash<span class="sym">.</span>ItemKey<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="kwd">IntToItemKey</span><span class="sym">(</span>n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">):</span> SimpleHash<span class="sym">.</span>ItemKey<span class="sym">;</span>
<span class="kwa">VAR</span>
   digits<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   key<span class="sym">:</span> SimpleHash<span class="sym">.</span>ItemKey<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   IntStr<span class="sym">.</span><span class="kwd">IntToStr</span><span class="sym">(</span>n<span class="sym">,</span>buffer<span class="sym">);</span>
   digits <span class="sym">:=</span> Strings<span class="sym">.</span><span class="kwd">Length</span><span class="sym">(</span>buffer<span class="sym">);</span>
   <span class="kwa">NEW</span><span class="sym">(</span>key<span class="sym">,</span> digits<span class="sym">);</span>
   S<span class="sym">.</span><span class="kwa">MOVE</span><span class="sym">(</span>S<span class="sym">.</span><span class="kwa">ADR</span><span class="sym">(</span>buffer<span class="sym">[</span><span class="num">0</span><span class="sym">]),</span> S<span class="sym">.</span><span class="kwa">VAL</span><span class="sym">(</span><span class="kwb">LONGINT</span><span class="sym">,</span>key<span class="sym">),</span> digits<span class="sym">);</span>
   <span class="kwa">RETURN</span> key<span class="sym">;</span>
<span class="kwa">END</span> IntToItemKey<span class="sym">;</span>


<span class="kwa">BEGIN</span>
   n <span class="sym">:=</span> Shootout<span class="sym">.</span><span class="kwd">Argi</span><span class="sym">();</span>
   table1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">New</span><span class="sym">(</span><span class="num">10000</span><span class="sym">);</span>
   table2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">New</span><span class="sym">(</span><span class="num">10000</span><span class="sym">);</span>

   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> <span class="num">9999</span> <span class="kwa">DO</span>
      key <span class="sym">:=</span> <span class="kwd">IntToItemKey</span><span class="sym">(</span>i<span class="sym">);</span>
      item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">AddKey</span><span class="sym">(</span>table1<span class="sym">,</span> key<span class="sym">);</span>
      item1<span class="sym">.</span>value <span class="sym">:=</span> i<span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>

   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> n<span class="sym">-</span><span class="num">1</span> <span class="kwa">DO</span>
      item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">First</span><span class="sym">(</span>table1<span class="sym">);</span>
      <span class="kwa">WHILE</span> item1 # <span class="kwa">NIL DO</span>
         item2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">AddKey</span><span class="sym">(</span>table2<span class="sym">,</span> item1<span class="sym">.</span>key<span class="sym">);</span>
	 <span class="kwa">INC</span><span class="sym">(</span>item2<span class="sym">.</span>value<span class="sym">,</span> item1<span class="sym">.</span>value<span class="sym">);</span>
	 item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">Next</span><span class="sym">(</span>table1<span class="sym">);</span>
      <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>

   key1 <span class="sym">:=</span> <span class="kwd">IntToItemKey</span><span class="sym">(</span><span class="num">1</span><span class="sym">);</span>
   key9999 <span class="sym">:=</span> <span class="kwd">IntToItemKey</span><span class="sym">(</span><span class="num">9999</span><span class="sym">);</span>

   item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">Find</span><span class="sym">(</span>table1<span class="sym">,</span> key1<span class="sym">);</span>
   Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>item1<span class="sym">.</span>value<span class="sym">,</span> <span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">Char</span><span class="sym">(</span><span class="num">20</span>X<span class="sym">);</span>
   item1 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">Find</span><span class="sym">(</span>table1<span class="sym">,</span> key9999<span class="sym">);</span>
   Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>item1<span class="sym">.</span>value<span class="sym">,</span> <span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">Char</span><span class="sym">(</span><span class="num">20</span>X<span class="sym">);</span>
   item2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">Find</span><span class="sym">(</span>table2<span class="sym">,</span> key1<span class="sym">);</span>
   Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>item2<span class="sym">.</span>value<span class="sym">,</span> <span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">Char</span><span class="sym">(</span><span class="num">20</span>X<span class="sym">);</span>
   item2 <span class="sym">:=</span> SimpleHash<span class="sym">.</span><span class="kwd">Find</span><span class="sym">(</span>table2<span class="sym">,</span> key9999<span class="sym">);</span>
   Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>item2<span class="sym">.</span>value<span class="sym">,</span> <span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;</span>
<span class="kwa">END</span> hash2<span class="sym">.</span>
