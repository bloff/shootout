<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="line">    2 </span><span class="sym">-</span>e main <span class="sym">-</span>s
<span class="line">    3 </span><span class="sym">!</span>#
<span class="line">    4 </span>
<span class="line">    5 </span><span class="slc">;;; $Id: matrix-guile.code,v 1.3 2004-11-11 07:13:59 bfulgham Exp $
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">;;; with help from Brad Knotwell
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="sym">(</span>define size <span class="num">30</span><span class="sym">)
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym">(</span>define <span class="sym">(</span>mkmatrix rows cols<span class="sym">)
</span><span class="line">   12 </span><span class="sym">  (</span>define count <span class="num">1</span><span class="sym">)
</span><span class="line">   13 </span><span class="sym">  (</span>define <span class="sym">(</span><span class="kwa">set</span><span class="sym">-</span>row cols<span class="sym">)
</span><span class="line">   14 </span><span class="sym">    (</span>let <span class="sym">((</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))
</span><span class="line">   15 </span><span class="sym">      (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))
</span><span class="line">   16 </span><span class="sym">          ((=</span> i cols<span class="sym">)</span> row<span class="sym">)
</span><span class="line">   17 </span><span class="sym">        (</span>begin <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> row i count<span class="sym">) (</span><span class="kwa">set</span><span class="sym">!</span> count <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> count<span class="sym">))))))
</span><span class="line">   18 </span><span class="sym">  (</span>let <span class="sym">((</span>mx <span class="sym">(</span>make<span class="sym">-</span>vector rows cols<span class="sym">)))
</span><span class="line">   19 </span><span class="sym">    (</span>begin <span class="sym">(</span>array<span class="sym">-</span>map<span class="sym">-</span>in<span class="sym">-</span>order<span class="sym">!</span> mx <span class="kwa">set</span><span class="sym">-</span>row mx<span class="sym">)</span> mx<span class="sym">)))
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym">(</span>define <span class="sym">(</span>mmult rows cols m1 m2<span class="sym">)
</span><span class="line">   22 </span><span class="sym">  (</span>let <span class="sym">((</span>m3 <span class="sym">(</span>make<span class="sym">-</span>vector rows <span class="num">0</span><span class="sym">)))
</span><span class="line">   23 </span><span class="sym">    (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))
</span><span class="line">   24 </span><span class="sym">        ((=</span> i rows<span class="sym">))
</span><span class="line">   25 </span><span class="sym">      (</span>let <span class="sym">((</span>m1i <span class="sym">(</span>vector<span class="sym">-</span>ref m1 i<span class="sym">))
</span><span class="line">   26 </span><span class="sym">            (</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))
</span><span class="line">   27 </span><span class="sym">        (</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(+</span> j <span class="num">1</span><span class="sym">)))
</span><span class="line">   28 </span><span class="sym">            ((=</span> j cols<span class="sym">))
</span><span class="line">   29 </span><span class="sym">          (</span>let <span class="sym">((</span>val <span class="num">0</span><span class="sym">))
</span><span class="line">   30 </span><span class="sym">            (</span>do <span class="sym">((</span>k <span class="num">0</span> <span class="sym">(+</span> k <span class="num">1</span><span class="sym">)))
</span><span class="line">   31 </span><span class="sym">                ((=</span> k cols<span class="sym">))
</span><span class="line">   32 </span><span class="sym">              (</span><span class="kwa">set</span><span class="sym">!</span> val <span class="sym">(+</span> val <span class="sym">(* (</span>vector<span class="sym">-</span>ref m1i k<span class="sym">)
</span><span class="line">   33 </span><span class="sym">                                  (</span>vector<span class="sym">-</span>ref <span class="sym">(</span>vector<span class="sym">-</span>ref m2 k<span class="sym">)</span> j<span class="sym">)))))
</span><span class="line">   34 </span><span class="sym">            (</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> row j val<span class="sym">)))
</span><span class="line">   35 </span><span class="sym">        (</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> m3 i row<span class="sym">)))
</span><span class="line">   36 </span><span class="sym"></span>    m3<span class="sym">))
</span><span class="line">   37 </span><span class="sym">
</span><span class="line">   38 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">   39 </span><span class="sym">  (</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   40 </span><span class="sym">        (</span>m1 <span class="sym">(</span>mkmatrix size size<span class="sym">))
</span><span class="line">   41 </span><span class="sym">        (</span>m2 <span class="sym">(</span>mkmatrix size size<span class="sym">))
</span><span class="line">   42 </span><span class="sym">        (</span>mm <span class="num">0</span><span class="sym">))
</span><span class="line">   43 </span><span class="sym">    (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))
</span><span class="line">   44 </span><span class="sym">        ((=</span> i n<span class="sym">) (</span>begin
<span class="line">   45 </span>                   <span class="sym">(</span>display <span class="sym">(</span>vector<span class="sym">-</span>ref <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">0</span><span class="sym">)</span> <span class="num">0</span><span class="sym">)) (</span>display <span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   46 </span><span class="sym">                   (</span>display <span class="sym">(</span>vector<span class="sym">-</span>ref <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">2</span><span class="sym">)</span> <span class="num">3</span><span class="sym">)) (</span>display <span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   47 </span><span class="sym">                   (</span>display <span class="sym">(</span>vector<span class="sym">-</span>ref <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">3</span><span class="sym">)</span> <span class="num">2</span><span class="sym">)) (</span>display <span class="str">&quot; &quot;</span><span class="sym">)
</span><span class="line">   48 </span><span class="sym">                   (</span>display <span class="sym">(</span>vector<span class="sym">-</span>ref <span class="sym">(</span>vector<span class="sym">-</span>ref mm <span class="num">4</span><span class="sym">)</span> <span class="num">4</span><span class="sym">)) (</span>newline<span class="sym">)))
</span><span class="line">   49 </span><span class="sym">        (</span><span class="kwa">set</span><span class="sym">!</span> mm <span class="sym">(</span>mmult size size m1 m2<span class="sym">)))))</span>
