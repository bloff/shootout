<span class="str">&quot;  The Great Computer Language Shootout
   contributed by Isaac Gouy

   To run: gst -QI /usr/share/gnu-smalltalk/gst.im sieve.st -a 900
&quot;</span>

<span class="sym">|</span> n start stop isPrime count <span class="sym">|
</span>n <span class="sym">:=</span> Smalltalk arguments first asInteger.

start <span class="sym">:=</span> <span class="num">2</span>. stop <span class="sym">:=</span> <span class="num">8192</span>.
isPrime <span class="sym">:=</span> Array new<span class="sym">:</span> stop.

n timesRepeat<span class="sym">: [
</span>   count <span class="sym">:=</span> <span class="num">0</span>.
   start to<span class="sym">:</span> stop <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|</span> isPrime at<span class="sym">:</span> i put<span class="sym">:</span> true<span class="sym">]</span>.

   start to<span class="sym">:</span> stop <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|
      (</span>isPrime at<span class="sym">:</span> i<span class="sym">)</span> ifTrue<span class="sym">: [
</span>         i<span class="sym">+</span>i to<span class="sym">:</span> stop by<span class="sym">:</span> i <span class="kwa">do</span><span class="sym">: [:</span>j<span class="sym">|</span> isPrime at<span class="sym">:</span> j put<span class="sym">:</span> false<span class="sym">]</span>.
         count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1</span>.
      <span class="sym">]</span>.
   <span class="sym">]</span>.
<span class="sym">]</span>.

Transcript show<span class="sym">:</span> <span class="str">'Count: '</span><span class="sym">,</span> count printString<span class="sym">;</span> nl <span class="sym">!</span>
