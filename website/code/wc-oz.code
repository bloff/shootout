<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Great Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

<span class="kwa">functor</span>

<span class="kwa">import</span>
  System<span class="sym">(</span>showInfo<span class="sym">)</span> Application<span class="sym">(</span>exit<span class="sym">)</span> Open<span class="sym">(</span>text file<span class="sym">)</span>

<span class="kwa">define</span>

<span class="slc">% ------------- %</span>

  SPACE <span class="sym">= &amp;\</span><span class="num">040</span>  NEWLINE_LENGTH <span class="sym">=</span> <span class="num">1</span>

<span class="slc">% ------------- %</span>

  <span class="kwa">class</span> TextFile_
    <span class="kwa">from</span> Open<span class="sym">.</span>file Open<span class="sym">.</span>text
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  <span class="kwa">fun</span> <span class="sym">{</span>CountLinesWordsChars FILE<span class="sym">}</span>

    <span class="kwa">fun</span> <span class="sym">{</span>CountLinesWordsChars_ LINES WORDS CHARS<span class="sym">}</span>
      <span class="kwa">case</span> <span class="sym">{</span>FILE getS<span class="sym">($)}</span> <span class="kwa">of false then</span>
        <span class="sym">[</span>LINES WORDS CHARS<span class="sym">]</span>
      elseof LINE <span class="kwa">then</span>
        <span class="sym">{</span>CountLinesWordsChars_ <span class="sym">(</span>LINES <span class="sym">+</span> <span class="num">1</span><span class="sym">) (</span>WORDS <span class="sym">+ {</span>CountWords LINE<span class="sym">}) (</span>CHARS <span class="sym">+ {</span>CountChars LINE NEWLINE_LENGTH<span class="sym">})}</span>
      <span class="kwa">end</span>
    <span class="kwa">end</span>

    <span class="slc">% ------------- %</span>

    <span class="kwa">fun</span> <span class="sym">{</span>CountWords LINE<span class="sym">}</span>
      <span class="sym">{</span>Length <span class="sym">{</span>String<span class="sym">.</span>tokens <span class="sym">{</span>CompressWhiteSpace <span class="sym">{</span>LeftTrim LINE<span class="sym">}}</span> SPACE<span class="sym">}}</span>
    <span class="kwa">end</span>

    <span class="slc">% ------------- %</span>

    <span class="kwa">fun</span> <span class="sym">{</span>CountChars LINE PADDING<span class="sym">}</span>
      <span class="sym">{</span>Length LINE<span class="sym">} +</span> PADDING
    <span class="kwa">end</span>

  <span class="kwa">in</span>
    <span class="sym">{</span>CountLinesWordsChars_ <span class="num">0 0 0</span><span class="sym">}</span>
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  <span class="kwa">fun</span> <span class="sym">{</span>LeftTrim S<span class="sym">}</span>
    <span class="sym">{</span>List<span class="sym">.</span>dropWhile S Char<span class="sym">.</span>isSpace<span class="sym">}</span>
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>CompressWhiteSpace S<span class="sym">}</span>
    <span class="sym">{</span>Compress S <span class="kwa">false</span> Char<span class="sym">.</span>isSpace<span class="sym">}</span>
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>Compress S Flag P<span class="sym">}</span>
    <span class="kwa">case</span> S <span class="kwa">of</span> nil <span class="kwa">then</span> nil
    elseof H<span class="sym">|</span>T <span class="kwa">then</span> Pt <span class="kwa">in</span>
      <span class="kwa">if</span> <span class="sym">(</span>Pt <span class="sym">= {</span>P H<span class="sym">})</span> <span class="kwa">andthen</span> Flag <span class="kwa">then</span>
        <span class="sym">{</span>Compress T <span class="kwa">true</span> P<span class="sym">}</span>
      <span class="kwa">else</span>
        H<span class="sym">|{</span>Compress T Pt P<span class="sym">}</span>
      <span class="kwa">end</span>
    <span class="kwa">end</span>
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  LINES WORDS CHARS

<span class="slc">% ------------- %</span>

<span class="kwa">in</span>
  <span class="sym">[</span>LINES WORDS CHARS<span class="sym">] = {</span>CountLinesWordsChars <span class="sym">{</span>New TextFile_ init<span class="sym">(</span>name<span class="sym">:</span>stdin<span class="sym">)}}</span>
  <span class="sym">{</span>System<span class="sym">.</span>showInfo LINES <span class="sym">#</span> &quot; &quot; <span class="sym">#</span> WORDS <span class="sym">#</span> &quot; &quot; <span class="sym">#</span> CHARS<span class="sym">}</span>
  <span class="sym">{</span>Application<span class="sym">.</span>exit <span class="num">0</span><span class="sym">}</span>
<span class="kwa">end</span>

