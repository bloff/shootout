<span class="slc">--
</span><span class="slc">-- The Great Computer Language Shootout
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">--
</span><span class="slc">-- Contributed by Arnaud Payement for Smart Eiffel
</span><span class="slc">--
</span>
<span class="slc">-- SPLITFILE=body.e
</span><span class="kwa">class</span> BODY

creation <span class="sym">{</span>ANY<span class="sym">}
</span>	jupiter<span class="sym">,</span> saturn<span class="sym">,</span> uranus<span class="sym">,</span> neptune<span class="sym">,</span> sun

<span class="kwa">feature</span> <span class="sym">{</span>ANY<span class="sym">}
</span>	pi<span class="sym">:</span> <span class="kwb">REAL</span> <span class="kwa">is</span> <span class="num">3.141592653589793

</span>	solar_mass<span class="sym">:</span> <span class="kwb">REAL</span> <span class="kwa">is
		once
			Result</span> <span class="sym">:=</span> <span class="num">4</span> <span class="sym">*</span> pi <span class="sym">*</span> pi
		<span class="kwa">end

</span>	days_per_year<span class="sym">:</span> <span class="kwb">REAL</span> <span class="kwa">is</span> <span class="num">365.24

</span>	x<span class="sym">:</span> <span class="kwb">REAL

</span>	y<span class="sym">:</span> <span class="kwb">REAL

</span>	z<span class="sym">:</span> <span class="kwb">REAL

</span>	vx<span class="sym">:</span> <span class="kwb">REAL

</span>	vy<span class="sym">:</span> <span class="kwb">REAL

</span>	vz<span class="sym">:</span> <span class="kwb">REAL

</span>	mass<span class="sym">:</span> <span class="kwb">REAL

</span>	set_x <span class="sym">(</span>a<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		do
</span>			x <span class="sym">:=</span> a
		<span class="kwa">end

</span>	set_y <span class="sym">(</span>a<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		do
</span>			y <span class="sym">:=</span> a
		<span class="kwa">end

</span>	set_z <span class="sym">(</span>a<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		do
</span>			z <span class="sym">:=</span> a
		<span class="kwa">end

</span>	set_vx <span class="sym">(</span>a<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		do
</span>			vx <span class="sym">:=</span> a
		<span class="kwa">end

</span>	set_vy <span class="sym">(</span>a<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		do
</span>			vy <span class="sym">:=</span> a
		<span class="kwa">end

</span>	set_vz <span class="sym">(</span>a<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		do
</span>			vz <span class="sym">:=</span> a
		<span class="kwa">end

</span>	jupiter <span class="kwa">is
		do
</span>			x <span class="sym">:=</span> <span class="num">4.84143144246472090e</span><span class="sym">+</span><span class="num">00
</span>			y <span class="sym">:= -</span><span class="num">1.16032004402742839e</span><span class="sym">+</span><span class="num">00
</span>			z <span class="sym">:= -</span><span class="num">1.03622044471123109e</span><span class="sym">-</span><span class="num">01
</span>			vx <span class="sym">:=</span> <span class="num">1.66007664274403694e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vy <span class="sym">:=</span> <span class="num">7.69901118419740425e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vz <span class="sym">:= -</span><span class="num">6.90460016972063023e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year
			mass <span class="sym">:=</span> <span class="num">9.54791938424326609e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> solar_mass
		<span class="kwa">end

</span>	saturn <span class="kwa">is
		do
</span>			x <span class="sym">:=</span> <span class="num">8.34336671824457987e</span><span class="sym">+</span><span class="num">00
</span>			y <span class="sym">:=</span> <span class="num">4.12479856412430479e</span><span class="sym">+</span><span class="num">00
</span>			z <span class="sym">:= -</span><span class="num">4.03523417114321381e</span><span class="sym">-</span><span class="num">01
</span>			vx <span class="sym">:= -</span><span class="num">2.76742510726862411e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vy <span class="sym">:=</span> <span class="num">4.99852801234917238e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vz <span class="sym">:=</span> <span class="num">2.30417297573763929e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year
			mass <span class="sym">:=</span> <span class="num">2.85885980666130812e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> solar_mass
		<span class="kwa">end

</span>	uranus <span class="kwa">is
		do
</span>			x <span class="sym">:=</span> <span class="num">1.28943695621391310e</span><span class="sym">+</span><span class="num">01
</span>			y <span class="sym">:= -</span><span class="num">1.51111514016986312e</span><span class="sym">+</span><span class="num">01
</span>			z <span class="sym">:= -</span><span class="num">2.23307578892655734e</span><span class="sym">-</span><span class="num">01
</span>			vx <span class="sym">:=</span> <span class="num">2.96460137564761618e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vy <span class="sym">:=</span> <span class="num">2.37847173959480950e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vz <span class="sym">:= -</span><span class="num">2.96589568540237556e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year
			mass <span class="sym">:=</span> <span class="num">4.36624404335156298e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> solar_mass
		<span class="kwa">end

</span>	neptune <span class="kwa">is
		do
</span>			x <span class="sym">:=</span> <span class="num">1.53796971148509165e</span><span class="sym">+</span><span class="num">01
</span>			y <span class="sym">:= -</span><span class="num">2.59193146099879641e</span><span class="sym">+</span><span class="num">01
</span>			z <span class="sym">:=</span> <span class="num">1.79258772950371181e</span><span class="sym">-</span><span class="num">01
</span>			vx <span class="sym">:=</span> <span class="num">2.68067772490389322e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vy <span class="sym">:=</span> <span class="num">1.62824170038242295e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year
			vz <span class="sym">:= -</span><span class="num">9.51592254519715870e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year
			mass <span class="sym">:=</span> <span class="num">5.15138902046611451e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> solar_mass
		<span class="kwa">end

</span>	sun <span class="kwa">is
		do
</span>			mass <span class="sym">:=</span> solar_mass
		<span class="kwa">end

</span>	offset_momentum <span class="sym">(</span>px<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> py<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> pz<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		do
</span>			vx <span class="sym">:= -</span> px <span class="sym">/</span> solar_mass
			vy <span class="sym">:= -</span> py <span class="sym">/</span> solar_mass
			vz <span class="sym">:= -</span> pz <span class="sym">/</span> solar_mass
		<span class="kwa">end

end</span> <span class="slc">-- class BODY
</span>
<span class="slc">-- SPLITFILE=nbody.e
</span><span class="kwa">class</span> NBODY

creation <span class="sym">{</span>ANY<span class="sym">}
</span>	make

<span class="kwa">feature</span> <span class="sym">{</span>ANY<span class="sym">}
</span>	make <span class="kwa">is
		local
</span>			n<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> bodies<span class="sym">:</span> NBODY_SYSTEM
		<span class="kwa">do
			create</span> bodies.make
			std_output.put_real_format<span class="sym">(</span>bodies.energy<span class="sym">,</span><span class="num">9</span><span class="sym">)
</span>			std_output.put_string<span class="sym">(</span><span class="str">&quot;%N&quot;</span><span class="sym">)
</span>			n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
			<span class="kwa">from
</span>				i <span class="sym">:=</span> <span class="num">0
</span>			until
				i <span class="sym">=</span> n
			<span class="kwa">loop
</span>				bodies.advance<span class="sym">(</span><span class="num">0.01</span><span class="sym">)
</span>				i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>			<span class="kwa">end
</span>			std_output.put_real_format<span class="sym">(</span>bodies.energy<span class="sym">,</span><span class="num">9</span><span class="sym">)
</span>			std_output.put_string<span class="sym">(</span><span class="str">&quot;%N&quot;</span><span class="sym">)
</span>		<span class="kwa">end

end</span> <span class="slc">-- class NBODY
</span><span class="slc">-- SPLITFILE=nbody_system.e
</span><span class="kwa">class</span> NBODY_SYSTEM

creation <span class="sym">{</span>ANY<span class="sym">}
</span>	make

<span class="kwa">feature</span> <span class="sym">{</span>ANY<span class="sym">}
</span>	bodies<span class="sym">:</span> FAST_ARRAY<span class="sym">[</span>BODY<span class="sym">]

</span>	make <span class="kwa">is
		local
</span>			b<span class="sym">:</span> BODY<span class="sym">;</span> px<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> py<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> pz<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> bi <span class="sym">:</span> BODY
		<span class="kwa">do
			create</span> bodies.make<span class="sym">(</span><span class="num">5</span><span class="sym">)
</span>			<span class="kwa">create</span> b.sun
			bodies.put<span class="sym">(</span>b<span class="sym">,</span> <span class="num">0</span><span class="sym">)
</span>			<span class="kwa">create</span> b.jupiter
			bodies.put<span class="sym">(</span>b<span class="sym">,</span> <span class="num">1</span><span class="sym">)
</span>			<span class="kwa">create</span> b.saturn
			bodies.put<span class="sym">(</span>b<span class="sym">,</span> <span class="num">2</span><span class="sym">)
</span>			<span class="kwa">create</span> b.uranus
			bodies.put<span class="sym">(</span>b<span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span>			<span class="kwa">create</span> b.neptune
			bodies.put<span class="sym">(</span>b<span class="sym">,</span> <span class="num">4</span><span class="sym">)
</span>			<span class="kwa">from
</span>				i <span class="sym">:=</span> <span class="num">0
</span>			until
				i <span class="sym">=</span> <span class="num">5
</span>			<span class="kwa">loop
</span>				bi <span class="sym">:=</span> bodies.item<span class="sym">(</span>i<span class="sym">)
</span>				px <span class="sym">:=</span> px <span class="sym">+</span> bi.vx <span class="sym">*</span> bi.mass
				py <span class="sym">:=</span> py <span class="sym">+</span> bi.vy <span class="sym">*</span> bi.mass
				pz <span class="sym">:=</span> pz <span class="sym">+</span> bi.vz <span class="sym">*</span> bi.mass
				i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>			<span class="kwa">end
</span>			bodies.item<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.offset_momentum<span class="sym">(</span>px<span class="sym">,</span> py<span class="sym">,</span> pz<span class="sym">)
</span>		<span class="kwa">end

</span>	advance <span class="sym">(</span>dt<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">)</span> <span class="kwa">is
		local
</span>			dx<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> dy<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> dz<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> distance<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> mag<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> j<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> bi<span class="sym">:</span> BODY<span class="sym">;</span> bj<span class="sym">:</span> BODY
		<span class="kwa">do
			from
</span>				i <span class="sym">:=</span> <span class="num">0
</span>			until
				i <span class="sym">=</span> <span class="num">5
</span>			<span class="kwa">loop
</span>				bi <span class="sym">:=</span> bodies.item<span class="sym">(</span>i<span class="sym">)
</span>				<span class="kwa">from
</span>					j <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>				until
					j <span class="sym">=</span> <span class="num">5
</span>				<span class="kwa">loop
</span>					bj <span class="sym">:=</span> bodies.item<span class="sym">(</span>j<span class="sym">)
</span>					dx <span class="sym">:=</span> bi.x <span class="sym">-</span> bj.x
					dy <span class="sym">:=</span> bi.y <span class="sym">-</span> bj.y
					dz <span class="sym">:=</span> bi.z <span class="sym">-</span> bj.z
					distance <span class="sym">:= (</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)</span>.sqrt
					mag <span class="sym">:=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)
</span>					bi.set_vx<span class="sym">(</span>bi.vx <span class="sym">-</span> dx <span class="sym">*</span> bj.mass <span class="sym">*</span> mag<span class="sym">)
</span>					bi.set_vy<span class="sym">(</span>bi.vy <span class="sym">-</span> dy <span class="sym">*</span> bj.mass <span class="sym">*</span> mag<span class="sym">)
</span>					bi.set_vz<span class="sym">(</span>bi.vz <span class="sym">-</span> dz <span class="sym">*</span> bj.mass <span class="sym">*</span> mag<span class="sym">)
</span>					bj.set_vx<span class="sym">(</span>bj.vx <span class="sym">+</span> dx <span class="sym">*</span> bi.mass <span class="sym">*</span> mag<span class="sym">)
</span>					bj.set_vy<span class="sym">(</span>bj.vy <span class="sym">+</span> dy <span class="sym">*</span> bi.mass <span class="sym">*</span> mag<span class="sym">)
</span>					bj.set_vz<span class="sym">(</span>bj.vz <span class="sym">+</span> dz <span class="sym">*</span> bi.mass <span class="sym">*</span> mag<span class="sym">)
</span>					j <span class="sym">:=</span> j <span class="sym">+</span> <span class="num">1
</span>				<span class="kwa">end
</span>				i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>			<span class="kwa">end
			from
</span>				i <span class="sym">:=</span> <span class="num">0
</span>			until
				i <span class="sym">=</span> <span class="num">5
</span>			<span class="kwa">loop
</span>				bi <span class="sym">:=</span> bodies.item<span class="sym">(</span>i<span class="sym">)
</span>				bi.set_x<span class="sym">(</span>bi.x <span class="sym">+</span> dt <span class="sym">*</span> bi.vx<span class="sym">)
</span>				bi.set_y<span class="sym">(</span>bi.y <span class="sym">+</span> dt <span class="sym">*</span> bi.vy<span class="sym">)
</span>				bi.set_z<span class="sym">(</span>bi.z <span class="sym">+</span> dt <span class="sym">*</span> bi.vz<span class="sym">)
</span>				i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>			<span class="kwa">end
		end

</span>	energy<span class="sym">:</span> <span class="kwb">REAL</span> <span class="kwa">is
		local
</span>			dx<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> dy<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> dz<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> distance<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> e<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> j<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> bi<span class="sym">:</span> BODY<span class="sym">;</span> bj<span class="sym">:</span>BODY
		<span class="kwa">do
			from
</span>				i <span class="sym">:=</span> <span class="num">0
</span>			until
				i <span class="sym">=</span> <span class="num">5
</span>			<span class="kwa">loop
</span>				bi <span class="sym">:=</span> bodies.item<span class="sym">(</span>i<span class="sym">)
</span>				e <span class="sym">:=</span> e <span class="sym">+</span> <span class="num">0.5</span> <span class="sym">*</span> bi.mass <span class="sym">* (</span>bi.vx <span class="sym">*</span> bi.vx <span class="sym">+</span> bi.vy <span class="sym">*</span> bi.vy <span class="sym">+</span> bi.vz <span class="sym">*</span> bi.vz<span class="sym">)
</span>				<span class="kwa">from
</span>					j <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>				until
					j <span class="sym">=</span> <span class="num">5
</span>				<span class="kwa">loop
</span>					bj <span class="sym">:=</span> bodies.item<span class="sym">(</span>j<span class="sym">)
</span>					dx <span class="sym">:=</span> bi.x <span class="sym">-</span> bj.x
					dy <span class="sym">:=</span> bi.y <span class="sym">-</span> bj.y
					dz <span class="sym">:=</span> bi.z <span class="sym">-</span> bj.z
					distance <span class="sym">:= (</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)</span>.sqrt
					e <span class="sym">:=</span> e <span class="sym">-</span> bi.mass <span class="sym">*</span> bj.mass <span class="sym">/</span> distance
					j <span class="sym">:=</span> j <span class="sym">+</span> <span class="num">1
</span>				<span class="kwa">end
</span>				i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span>			<span class="kwa">end
			Result</span> <span class="sym">:=</span> e
		<span class="kwa">end

end</span> <span class="slc">-- class NBODY_SYSTEM</span>
