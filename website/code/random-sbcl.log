BUILD COMMANDS FOR: random.sbcl

Tue Nov 30 21:35:15 PST 2004

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "random.sbcl_compile")'
### START random.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "random.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END random.sbcl_compile

; compiling file "/opt/shootout/shootout/bench/random/tmp/random.sbcl" (written 30 NOV 2004 09:35:15 PM):
; compiling top level form: 
; compiling top level form: 
; compiling top level form: 
; compiling top level form: 
; compiling top level form: 
; recognizing DEFUN GEN_RANDOM
; compiling DEFUN GEN_RANDOM: 

; file: /opt/shootout/shootout/bench/random/tmp/random.sbcl
; in: DEFUN GEN_RANDOM
;     (* THE_LAST IA)
; 
; note: unable to
;   recode as leas, shifts and adds
; due to type uncertainty:
;   The first argument is a (SIGNED-BYTE 32), not a (UNSIGNED-BYTE 32).
;   The result is a (VALUES FIXNUM
;                           &OPTIONAL), not a (VALUES (UNSIGNED-BYTE 32) &REST T).

;     (DEFUN GEN_RANDOM (MAX)
;     (DECLARE (TYPE (SIGNED-BYTE 32) IM IA IC THE_LAST))
;     (DECLARE (DOUBLE-FLOAT MAX))
;     (SETQ THE_LAST (MOD (+ (THE FIXNUM #) IC) IM))
;     (/ (* MAX THE_LAST) IM))
; --> PROGN EVAL-WHEN SB-IMPL::%DEFUN SB-IMPL::%DEFUN SB-INT:NAMED-LAMBDA 
; ==>
;   #'(SB-INT:NAMED-LAMBDA GEN_RANDOM
;                          (MAX)
;                          (DECLARE (TYPE (SIGNED-BYTE 32) IM IA IC THE_LAST))
;                          (DECLARE (DOUBLE-FLOAT MAX))
;                          (BLOCK GEN_RANDOM
;                            (SETQ THE_LAST (MOD (+ # IC) IM))
;                            (/ (* MAX THE_LAST) IM)))
; 
; note: doing float to pointer coercion (cost 13) to "<return value>"

; compiling top level form: 
; recognizing DEFUN MAIN
; compiling DEFUN MAIN: 

; file: /opt/shootout/shootout/bench/random/tmp/random.sbcl
; in: DEFUN GEN_RANDOM
;     (* THE_LAST IA)
; 
; note: unable to
;   recode as leas, shifts and adds
; due to type uncertainty:
;   The first argument is a (SIGNED-BYTE 32), not a (UNSIGNED-BYTE 32).
;   The result is a (VALUES FIXNUM
;                           &OPTIONAL), not a (VALUES (UNSIGNED-BYTE 32) &REST T).
; 
; note: unable to
;   recode as leas, shifts and adds
; due to type uncertainty:
;   The first argument is a (SIGNED-BYTE 32), not a (UNSIGNED-BYTE 32).
;   The result is a (VALUES FIXNUM
;                           &OPTIONAL), not a (VALUES (UNSIGNED-BYTE 32) &REST T).

; in: DEFUN MAIN
;     (FORMAT T "~,9F~%" (GEN_RANDOM 100.0d0))
; --> FORMAT FORMATTER FUNCTION BLOCK LET 
; ==>
;   (SB-FORMAT::FORMAT-FIXED STREAM
;                            #:FORMAT-ARG-26
;                            #:G778
;                            #:G779
;                            #:G780
;                            #:G781
;                            #:G782
;                            NIL)
; 
; note: doing float to pointer coercion (cost 13)

; compiling top level form: 
; compilation unit finished
;   printed 5 notes

; /opt/shootout/shootout/bench/random/tmp/random.fasl written
; compilation finished in 0:00:01
[doing purification: roots handlers stack bindings static cleanup done]
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /opt/shootout/shootout/bench/random/tmp/sbcl.core:
writing 18272680 bytes from the read-only space at 0x01000000
writing 5873648 bytes from the static space at 0x05000000
writing 4096 bytes from the dynamic space at 0x09000000
done]
### START random.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END random.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load random.sbcl_run %A


PROGRAM OUTPUT
==============
75.544410151
