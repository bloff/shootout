<span class="kwb">module</span><span class="sym">:</span>     randum
<span class="kwb">synopsis</span><span class="sym">:</span>   implementation of <span class="str">&quot;Random Number Generator&quot;</span> benchmark
<span class="kwb">author</span><span class="sym">:</span>     Andreas Bogk
<span class="kwb">copyright</span><span class="sym">:</span>  public <span class="kwa">domain</span>


<span class="kwa">define constant</span> $IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;</span>
<span class="kwa">define constant</span> $IA <span class="sym">=</span> <span class="num">3877</span><span class="sym">;</span>
<span class="kwa">define constant</span> $IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">;</span>
<span class="kwa">define variable</span> $LAST <span class="sym">::</span> <span class="kwa">&lt;integer&gt;</span> <span class="sym">=</span> <span class="num">42</span><span class="sym">;</span>

<span class="kwa">define method</span> generate<span class="sym">-</span><span class="kwd">random</span> <span class="sym">(</span>max <span class="sym">::</span> <span class="kwa">&lt;double-float&gt;</span><span class="sym">) =</span>&gt; <span class="sym">(</span>m <span class="sym">::</span> <span class="kwa">&lt;double-float&gt;</span><span class="sym">);</span>
  $LAST <span class="sym">:=</span> <span class="kwd">modulo</span><span class="sym">(</span>$LAST <span class="sym">*</span> $IA <span class="sym">+</span> $IC<span class="sym">,</span> $IM<span class="sym">);</span>
  max <span class="sym">*</span> $LAST <span class="sym">/</span> $IM<span class="sym">;</span>
<span class="kwa">end method</span><span class="sym">;</span>

<span class="kwa">begin</span>
  <span class="kwa">let</span> arg <span class="sym">=</span> string<span class="sym">-</span><span class="kwa">to</span><span class="sym">-</span><span class="kwd">integer</span><span class="sym">(</span><span class="kwd">element</span><span class="sym">(</span>application<span class="sym">-</span><span class="kwd">arguments</span><span class="sym">(),</span> <span class="num">0</span><span class="sym">,</span> default<span class="sym">:</span> <span class="str">&quot;1&quot;</span><span class="sym">)) -</span> <span class="num">1</span><span class="sym">;</span>

  <span class="kwa">for</span> <span class="sym">(</span>i <span class="kwa">from</span> <span class="num">1</span> <span class="kwa">to</span> arg<span class="sym">)</span>
    generate<span class="sym">-</span><span class="kwd">random</span><span class="sym">(</span><span class="num">100.0</span>d0<span class="sym">);</span>
  <span class="kwa">end</span><span class="sym">;</span>

  format<span class="sym">-</span><span class="kwd">out</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> generate<span class="sym">-</span><span class="kwd">random</span><span class="sym">(</span><span class="num">100.0</span>d0<span class="sym">));</span>
<span class="kwa">end</span><span class="sym">;</span>
