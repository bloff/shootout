<span class="slc">#!/usr/bin/ruby
</span><span class="slc"># -*- mode: ruby -*-
</span><span class="slc"># $Id: ackermann-ruby.code,v 1.8 2005-06-10 05:39:36 bfulgham Exp $
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span>
<span class="kwa">def</span> ack<span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">)
</span>    <span class="kwa">if</span> m == <span class="num">0</span> <span class="kwa">then
</span>	n <span class="sym">+</span> <span class="num">1
</span>    <span class="kwa">elsif</span> n == <span class="num">0</span> <span class="kwa">then
</span>	ack<span class="sym">(</span>m <span class="num">- 1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)
</span>    <span class="kwa">else
</span>	ack<span class="sym">(</span>m <span class="num">- 1</span><span class="sym">,</span> ack<span class="sym">(</span>m<span class="sym">,</span> n <span class="num">- 1</span><span class="sym">))
</span>    <span class="kwa">end
end

</span>NUM = Integer<span class="sym">(</span><span class="kwa">ARGV</span>.shift <span class="sym">||</span> <span class="num">1</span><span class="sym">)
</span>print <span class="str">&quot;Ack(3,&quot;</span><span class="sym">,</span> NUM<span class="sym">,</span> <span class="str">&quot;): &quot;</span><span class="sym">,</span> ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> NUM<span class="sym">),</span> <span class="str">&quot;\n&quot;</span>
