<span class="com">{ The Great Computer Language Shootout
  http://shootout.alioth.debian.org

  contributed by Ales Katona
}</span>

<span class="kwa">program</span> ackermann<span class="sym">;

</span><span class="com">{$mode objfpc}</span>

<span class="kwa">function</span> Ack<span class="sym">(</span><span class="kwa">const</span> M<span class="sym">,</span> N <span class="sym">:</span> <span class="kwb">Longint</span><span class="sym">):</span> <span class="kwb">Longint</span><span class="sym">;</span> <span class="kwa">inline</span><span class="sym">;
</span><span class="kwa">begin
  if</span> M <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span> Ack <span class="sym">:=</span> N<span class="sym">+</span><span class="num">1
</span>  <span class="kwa">else if</span> N <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span> Ack <span class="sym">:=</span> Ack<span class="sym">(</span>M<span class="num">-1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)
</span>  <span class="kwa">else</span> Ack <span class="sym">:=</span> Ack<span class="sym">(</span>M<span class="num">-1</span><span class="sym">,</span> Ack<span class="sym">(</span>M<span class="sym">,</span> N<span class="num">-1</span><span class="sym">));
</span><span class="kwa">end</span><span class="sym">;

</span><span class="kwa">var</span> NUM<span class="sym">,</span> a<span class="sym">:</span> <span class="kwb">Longint</span><span class="sym">;

</span><span class="kwa">begin
  if</span> ParamCount <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span> NUM <span class="sym">:=</span> <span class="num">1
</span>  <span class="kwa">else</span> Val<span class="sym">(</span>ParamStr<span class="sym">(</span><span class="num">1</span><span class="sym">),</span> NUM<span class="sym">,</span> a<span class="sym">);

</span>  <span class="kwa">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> NUM <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span>  a <span class="sym">:=</span> Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> NUM<span class="sym">);
</span>  WriteLn<span class="sym">(</span><span class="str">'Ack(3,'</span><span class="sym">,</span> NUM<span class="sym">,</span> <span class="str">'): '</span><span class="sym">,</span> a<span class="sym">);
</span><span class="kwa">end</span>.
