<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org</span>
<span class="slc">--</span>
<span class="slc">-- Contributed by Pascal Obry on 2005/03/21</span>

<span class="kwa">with</span> Ada.Numerics<span class="sym">;</span> <span class="kwa">use</span> Ada.Numerics<span class="sym">;</span>
<span class="kwa">with</span> Ada.Numerics.Generic_Elementary_Functions<span class="sym">;</span>

<span class="kwa">package</span> Nbody_Pck <span class="kwa">is</span>

   <span class="kwa">type</span> Real <span class="kwa">is Digits</span> <span class="num">15</span><span class="sym">;</span>

   <span class="kwa">package</span> Math <span class="kwa">is new</span> Ada.Numerics.Generic_Elementary_Functions <span class="sym">(</span>Real<span class="sym">);</span>

   Solar_Mass    <span class="sym">:</span> <span class="kwa">constant</span> Real <span class="sym">:=</span> <span class="num">4.0</span> <span class="sym">*</span> Pi <span class="sym">*</span> Pi<span class="sym">;</span>
   Days_Per_Year <span class="sym">:</span> <span class="kwa">constant</span> Real <span class="sym">:=</span> <span class="num">365.24</span><span class="sym">;</span>

   <span class="kwa">type</span> Data <span class="kwa">is record</span>
      X<span class="sym">,</span> Y<span class="sym">,</span> Z    <span class="sym">:</span> Real<span class="sym">;</span>
      Vx<span class="sym">,</span> Vy<span class="sym">,</span> Vz <span class="sym">:</span> Real<span class="sym">;</span>
      Mass       <span class="sym">:</span> Real<span class="sym">;</span>
   <span class="kwa">end record</span><span class="sym">;</span>

   <span class="kwa">type</span> Body_Name <span class="kwa">is</span> <span class="sym">(</span>Sun<span class="sym">,</span> Jupiter<span class="sym">,</span> Saturn<span class="sym">,</span> Uranus<span class="sym">,</span> Neptune<span class="sym">);</span>

   Bodies <span class="sym">:</span> <span class="kwa">array</span> <span class="sym">(</span>Body_Name<span class="sym">)</span> <span class="kwa">of</span> Data <span class="sym">:=</span>
              <span class="sym">(</span>Jupiter <span class="sym">=&gt; (</span>X    <span class="sym">=&gt;</span> <span class="num">4.84143144246472090e+00</span><span class="sym">,</span>
                           Y    <span class="sym">=&gt; -</span><span class="num">1.16032004402742839e+00</span><span class="sym">,</span>
                           Z    <span class="sym">=&gt; -</span><span class="num">1.03622044471123109e-01</span><span class="sym">,</span>
                           Vx   <span class="sym">=&gt;</span> <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vy   <span class="sym">=&gt;</span> <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vz   <span class="sym">=&gt; -</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Mass <span class="sym">=&gt;</span> <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> Solar_Mass<span class="sym">),</span>

               Saturn  <span class="sym">=&gt; (</span>X    <span class="sym">=&gt;</span> <span class="num">8.34336671824457987e+00</span><span class="sym">,</span>
                           Y    <span class="sym">=&gt;</span> <span class="num">4.12479856412430479e+00</span><span class="sym">,</span>
                           Z    <span class="sym">=&gt; -</span><span class="num">4.03523417114321381e-01</span><span class="sym">,</span>
                           Vx   <span class="sym">=&gt; -</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vy   <span class="sym">=&gt;</span> <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vz   <span class="sym">=&gt;</span> <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Mass <span class="sym">=&gt;</span> <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> Solar_Mass<span class="sym">),</span>

               Uranus  <span class="sym">=&gt; (</span>X    <span class="sym">=&gt;</span> <span class="num">1.28943695621391310e+01</span><span class="sym">,</span>
                           y    <span class="sym">=&gt; -</span><span class="num">1.51111514016986312e+01</span><span class="sym">,</span>
                           Z    <span class="sym">=&gt; -</span><span class="num">2.23307578892655734e-01</span><span class="sym">,</span>
                           Vx   <span class="sym">=&gt;</span> <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vy   <span class="sym">=&gt;</span> <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vz   <span class="sym">=&gt; -</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Mass <span class="sym">=&gt;</span> <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> Solar_Mass<span class="sym">),</span>

               Neptune <span class="sym">=&gt; (</span>X    <span class="sym">=&gt;</span> <span class="num">1.53796971148509165e+01</span><span class="sym">,</span>
                           Y    <span class="sym">=&gt; -</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span>
                           Z    <span class="sym">=&gt;</span> <span class="num">1.79258772950371181e-01</span><span class="sym">,</span>
                           Vx   <span class="sym">=&gt;</span> <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vy   <span class="sym">=&gt;</span> <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Vz   <span class="sym">=&gt; -</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> Days_Per_Year<span class="sym">,</span>
                           Mass <span class="sym">=&gt;</span> <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> Solar_Mass<span class="sym">),</span>

               Sun     <span class="sym">=&gt; (</span>X    <span class="sym">=&gt;</span> <span class="num">0.0</span><span class="sym">,</span>
                           Y    <span class="sym">=&gt;</span> <span class="num">0.0</span><span class="sym">,</span>
                           Z    <span class="sym">=&gt;</span> <span class="num">0.0</span><span class="sym">,</span>
                           Vx   <span class="sym">=&gt;</span> <span class="num">0.0</span><span class="sym">,</span>
                           Vy   <span class="sym">=&gt;</span> <span class="num">0.0</span><span class="sym">,</span>
                           Vz   <span class="sym">=&gt;</span> <span class="num">0.0</span><span class="sym">,</span>
                           Mass <span class="sym">=&gt;</span> Solar_Mass<span class="sym">));</span>

   <span class="kwa">procedure</span> Offset_Momentum
     <span class="sym">(</span>Planet     <span class="sym">:</span> <span class="kwa">in out</span> Data<span class="sym">;</span>
      Px<span class="sym">,</span> Py<span class="sym">,</span> Pz <span class="sym">:</span> <span class="kwa">in</span>     Real<span class="sym">);</span>

   <span class="kwa">function</span> Energy <span class="kwa">return</span> Real<span class="sym">;</span>

   <span class="kwa">procedure</span> Advance <span class="sym">(</span>Dt <span class="sym">:</span> <span class="kwa">in</span> Real<span class="sym">);</span>

<span class="kwa">end</span> Nbody_Pck<span class="sym">;</span>

<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org</span>
<span class="slc">--</span>
<span class="slc">-- Contributed by Pascal Obry on 2005/03/21</span>

<span class="kwa">package body</span> Nbody_Pck <span class="kwa">is</span>

   <span class="kwa">procedure</span> Offset_Momentum
     <span class="sym">(</span>Planet     <span class="sym">:</span> <span class="kwa">in out</span> Data<span class="sym">;</span>
      Px<span class="sym">,</span> Py<span class="sym">,</span> Pz <span class="sym">:</span> <span class="kwa">in</span>     Real<span class="sym">)</span> <span class="kwa">is</span>
   <span class="kwa">begin</span>
      Planet.Vx <span class="sym">:= -</span>Px <span class="sym">/</span> Solar_Mass<span class="sym">;</span>
      Planet.Vy <span class="sym">:= -</span>Py <span class="sym">/</span> Solar_Mass<span class="sym">;</span>
      Planet.Vz <span class="sym">:= -</span>Pz <span class="sym">/</span> Solar_Mass<span class="sym">;</span>
   <span class="kwa">end</span> Offset_Momentum<span class="sym">;</span>

   <span class="kwa">function</span> Energy <span class="kwa">return</span> Real <span class="kwa">is</span>
      Dx<span class="sym">,</span> Dy<span class="sym">,</span> Dz<span class="sym">,</span> Distance <span class="sym">:</span> Real<span class="sym">;</span>
      E                    <span class="sym">:</span> Real <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
   <span class="kwa">begin</span>
      <span class="kwa">for</span> I <span class="kwa">in</span> Bodies<span class="sym">'</span><span class="kwa">Range loop</span>
        E <span class="sym">:=</span> E <span class="sym">+</span> <span class="num">0.5</span> <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass
          <span class="sym">* (</span>Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vx <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vx
               <span class="sym">+</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vy <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vy
               <span class="sym">+</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vz <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vz<span class="sym">);</span>

        <span class="kwa">if</span> I <span class="sym">/=</span> Body_Name<span class="sym">'</span>Last <span class="kwa">then</span>
           <span class="kwa">for</span> J <span class="kwa">in</span> Body_Name<span class="sym">'</span>Succ <span class="sym">(</span>I<span class="sym">)</span> .. Body_Name<span class="sym">'</span>Last <span class="kwa">loop</span>
              Dx <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.X <span class="sym">-</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.X<span class="sym">;</span>
              Dy <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Y <span class="sym">-</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Y<span class="sym">;</span>
              Dz <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Z <span class="sym">-</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Z<span class="sym">;</span>

              Distance <span class="sym">:=</span> Math.Sqrt <span class="sym">(</span>Dx <span class="sym">*</span> Dx <span class="sym">+</span> Dy <span class="sym">*</span> Dy <span class="sym">+</span> Dz <span class="sym">*</span> Dz<span class="sym">);</span>
              E <span class="sym">:=</span> E <span class="sym">- (</span>Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass <span class="sym">*</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Mass<span class="sym">) /</span> Distance<span class="sym">;</span>
           <span class="kwa">end loop</span><span class="sym">;</span>
        <span class="kwa">end if</span><span class="sym">;</span>
      <span class="kwa">end loop</span><span class="sym">;</span>
      <span class="kwa">return</span> E<span class="sym">;</span>
   <span class="kwa">end</span> Energy<span class="sym">;</span>

   <span class="kwa">procedure</span> Advance <span class="sym">(</span>Dt <span class="sym">:</span> <span class="kwa">in</span> Real<span class="sym">)</span> <span class="kwa">is</span>
      Dx<span class="sym">,</span> Dy<span class="sym">,</span> Dz<span class="sym">,</span> Distance<span class="sym">,</span> Mag <span class="sym">:</span> Real<span class="sym">;</span>
   <span class="kwa">begin</span>
      <span class="kwa">for</span> I <span class="kwa">in</span> Body_Name<span class="sym">'</span><span class="kwa">Range loop</span>
         <span class="kwa">if</span> I <span class="sym">/=</span> Body_Name<span class="sym">'</span>Last <span class="kwa">then</span>
            <span class="kwa">for</span> J <span class="kwa">in</span> Body_Name<span class="sym">'</span>Succ <span class="sym">(</span>I<span class="sym">)</span> .. Body_Name<span class="sym">'</span>Last <span class="kwa">loop</span>
               Dx <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.X <span class="sym">-</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.X<span class="sym">;</span>
               Dy <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Y <span class="sym">-</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Y<span class="sym">;</span>
               Dz <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Z <span class="sym">-</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Z<span class="sym">;</span>

               Distance <span class="sym">:=</span> Math.Sqrt <span class="sym">(</span>Dx <span class="sym">*</span> Dx <span class="sym">+</span> Dy <span class="sym">*</span> Dy <span class="sym">+</span> Dz <span class="sym">*</span> Dz<span class="sym">);</span>
               Mag <span class="sym">:=</span> Dt <span class="sym">/ (</span>Distance <span class="sym">**</span> <span class="num">3</span><span class="sym">);</span>

               Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vx <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vx <span class="sym">-</span> Dx <span class="sym">*</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Mass <span class="sym">*</span> Mag<span class="sym">;</span>
               Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vy <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vy <span class="sym">-</span> Dy <span class="sym">*</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Mass <span class="sym">*</span> Mag<span class="sym">;</span>
               Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vz <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vz <span class="sym">-</span> Dz <span class="sym">*</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Mass <span class="sym">*</span> Mag<span class="sym">;</span>

               Bodies <span class="sym">(</span>J<span class="sym">)</span>.Vx <span class="sym">:=</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Vx <span class="sym">+</span> Dx <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass <span class="sym">*</span> Mag<span class="sym">;</span>
               Bodies <span class="sym">(</span>J<span class="sym">)</span>.Vy <span class="sym">:=</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Vy <span class="sym">+</span> Dy <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass <span class="sym">*</span> Mag<span class="sym">;</span>
               Bodies <span class="sym">(</span>J<span class="sym">)</span>.Vz <span class="sym">:=</span> Bodies <span class="sym">(</span>J<span class="sym">)</span>.Vz <span class="sym">+</span> Dz <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass <span class="sym">*</span> Mag<span class="sym">;</span>
            <span class="kwa">end loop</span><span class="sym">;</span>
         <span class="kwa">end if</span><span class="sym">;</span>
      <span class="kwa">end loop</span><span class="sym">;</span>

      <span class="kwa">for</span> I <span class="kwa">in</span> Body_Name<span class="sym">'</span><span class="kwa">Range loop</span>
         Bodies <span class="sym">(</span>I<span class="sym">)</span>.X <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.X <span class="sym">+</span> Dt <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vx<span class="sym">;</span>
         Bodies <span class="sym">(</span>I<span class="sym">)</span>.Y <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Y <span class="sym">+</span> Dt <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vy<span class="sym">;</span>
         Bodies <span class="sym">(</span>I<span class="sym">)</span>.Z <span class="sym">:=</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Z <span class="sym">+</span> Dt <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vz<span class="sym">;</span>
      <span class="kwa">end loop</span><span class="sym">;</span>
   <span class="kwa">end</span> Advance<span class="sym">;</span>

<span class="kwa">end</span> Nbody_Pck<span class="sym">;</span>

<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org</span>
<span class="slc">--</span>
<span class="slc">-- Contributed by Pascal Obry on 2005/03/21</span>

<span class="kwa">with</span> Ada.Command_Line<span class="sym">;</span> <span class="kwa">use</span> Ada.Command_Line<span class="sym">;</span>
<span class="kwa">with</span> Ada.Text_IO<span class="sym">;</span>      <span class="kwa">use</span> Ada.Text_IO<span class="sym">;</span>
<span class="kwa">with</span> Nbody_Pck<span class="sym">;</span>        <span class="kwa">use</span> Nbody_Pck<span class="sym">;</span>

<span class="kwa">procedure</span> Nbody <span class="kwa">is</span>

   <span class="kwa">package</span> RIO <span class="kwa">is new</span> Float_Io <span class="sym">(</span>Real<span class="sym">);</span>

   <span class="kwa">procedure</span> Put
     <span class="sym">(</span>Item <span class="sym">:</span> Real<span class="sym">;</span> Fore <span class="sym">:</span> Field <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span> Aft <span class="sym">:</span> Field <span class="sym">:=</span> <span class="num">9</span><span class="sym">;</span>
      Exp  <span class="sym">:</span> Field <span class="sym">:=</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">renames</span> RIO.Put<span class="sym">;</span>

   N <span class="sym">:</span> <span class="kwa">constant</span> <span class="kwb">Integer</span> <span class="sym">:=</span> <span class="kwb">Integer</span><span class="sym">'</span>Value <span class="sym">(</span>Argument <span class="sym">(</span><span class="num">1</span><span class="sym">));</span>

   Px<span class="sym">,</span> Py<span class="sym">,</span> Pz <span class="sym">:</span> Real <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>

<span class="kwa">begin</span>
   <span class="kwa">for</span> I <span class="kwa">in</span> Body_Name<span class="sym">'</span><span class="kwa">Range loop</span>
      Px <span class="sym">:=</span> Px <span class="sym">+</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vx <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass<span class="sym">;</span>
      Py <span class="sym">:=</span> Py <span class="sym">+</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vy <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass<span class="sym">;</span>
      Pz <span class="sym">:=</span> Pz <span class="sym">+</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Vz <span class="sym">*</span> Bodies <span class="sym">(</span>I<span class="sym">)</span>.Mass<span class="sym">;</span>
   <span class="kwa">end loop</span><span class="sym">;</span>

   Offset_Momentum <span class="sym">(</span>Bodies <span class="sym">(</span>Sun<span class="sym">),</span> Px<span class="sym">,</span> Py<span class="sym">,</span> Pz<span class="sym">);</span>

   Put <span class="sym">(</span>Energy<span class="sym">);</span>
   New_Line<span class="sym">;</span>

   <span class="kwa">for</span> K <span class="kwa">in</span> <span class="num">1</span> .. N <span class="kwa">loop</span>
      Advance <span class="sym">(</span><span class="num">0.01</span><span class="sym">);</span>
   <span class="kwa">end loop</span><span class="sym">;</span>

   Put <span class="sym">(</span>Energy<span class="sym">);</span>
   New_Line<span class="sym">;</span>
<span class="kwa">end</span> Nbody<span class="sym">;</span>
