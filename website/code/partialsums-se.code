<span class="slc">--	The Computer Language Shootout</span>
<span class="slc">--	http://shootout.alioth.debian.org</span>
<span class="slc">--</span>
<span class="slc">--	Contributed by A. Suter</span>
<span class="slc">--</span>
<span class="slc">--	Compilation:</span>
<span class="slc">--		se c -clean -boost -no_gc -O3 -fomit-frame-pointer</span>
<span class="slc">--		-funroll-loops -ffast-math partial_sums.e -o partial_sums</span>

<span class="kwa">class</span> PARTIALSUMS

insert
	ARGUMENTS

creation <span class="sym">{</span>ANY<span class="sym">}</span>
	make

<span class="kwa">feature</span> <span class="sym">{</span>ANY<span class="sym">}</span>
	make <span class="kwa">is</span>
		<span class="kwa">local</span>
			sum_1<span class="sym">,</span> sum_2<span class="sym">,</span> sum_3<span class="sym">,</span> flint<span class="sym">,</span> cookson<span class="sym">,</span> harmonic<span class="sym">,</span> riemann<span class="sym">,</span> alternating_harmonic<span class="sym">,</span> gregory<span class="sym">:</span> <span class="kwb">REAL</span>
			n_integer<span class="sym">,</span> k_integer<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> k_real<span class="sym">,</span> n_real<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> c<span class="sym">,</span> k_real_2<span class="sym">,</span> k_real_3<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">;</span> flag<span class="sym">:</span> <span class="kwb">BOOLEAN</span>
		<span class="kwa">do</span>
			<span class="kwa">if not</span> <span class="sym">(</span>argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">and then</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.is_integer<span class="sym">)</span> <span class="kwa">then</span>
				<span class="kwd">die_with_code</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
			<span class="kwa">end</span>
			n_integer <span class="sym">:=</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
			n_real <span class="sym">:=</span> n_integer
			<span class="kwa">if</span> n_integer <span class="sym">&lt;=</span> <span class="num">1</span> <span class="kwa">then</span>
				<span class="kwd">die_with_code</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
			<span class="kwa">end</span>

			<span class="kwa">from</span>
				sum_1 <span class="sym">:=</span> <span class="num">1.0</span> <span class="slc">-- short for k = 0</span>
				c <span class="sym">:=</span> <span class="num">2.0</span> <span class="sym">/</span> <span class="num">3.0</span>
				k_integer <span class="sym">:=</span> <span class="num">1</span>
				k_real <span class="sym">:=</span> <span class="num">1.0</span>
			<span class="kwa">invariant</span>
				k_integer <span class="sym">=</span> k_real
				n_integer <span class="sym">=</span> n_real
			until
				k_integer <span class="sym">&gt;</span> n_integer
			<span class="kwa">loop</span>
				k_real_2 <span class="sym">:=</span> k_real ^ <span class="num">2</span>
				k_real_3 <span class="sym">:=</span> k_real_2 <span class="sym">*</span> k_real
				sum_1 <span class="sym">:=</span> sum_1 <span class="sym">+</span> c ^ k_integer
				sum_2 <span class="sym">:=</span> sum_2 <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/</span> k_real.sqrt
				sum_3 <span class="sym">:=</span> sum_3 <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k_real <span class="sym">* (</span>k_real <span class="sym">+</span> <span class="num">1.0</span><span class="sym">))</span>
				riemann <span class="sym">:=</span> riemann <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/</span> k_real_2
				flint <span class="sym">:=</span> flint <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k_real_3 <span class="sym">*</span> k_real.sin ^ <span class="num">2</span><span class="sym">)</span>
				cookson <span class="sym">:=</span> cookson <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k_real_3 <span class="sym">*</span> k_real.cos ^ <span class="num">2</span><span class="sym">)</span>
				harmonic <span class="sym">:=</span> harmonic <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/</span> k_real
				<span class="kwa">if</span> flag <span class="kwa">then</span>
					alternating_harmonic <span class="sym">:=</span> alternating_harmonic <span class="sym">-</span> <span class="num">1.0</span> <span class="sym">/</span> k_real
					gregory <span class="sym">:=</span> gregory <span class="sym">-</span> <span class="num">1.0</span> <span class="sym">/ (</span><span class="num">2.0</span> <span class="sym">*</span> k_real <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span>
				<span class="kwa">else</span>
					alternating_harmonic <span class="sym">:=</span> alternating_harmonic <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/</span> k_real
					gregory <span class="sym">:=</span> gregory <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span><span class="num">2.0</span> <span class="sym">*</span> k_real <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span>
				<span class="kwa">end</span>

				flag <span class="sym">:=</span> <span class="kwa">not</span> flag
				k_integer <span class="sym">:=</span> k_integer <span class="sym">+</span> <span class="num">1</span>
				k_real <span class="sym">:=</span> k_real <span class="sym">+</span> <span class="num">1.0</span>
			<span class="kwa">end</span>

			io.<span class="kwd">put_string</span><span class="sym">(</span>sum_1.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%T(2/3)^k%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>sum_2.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%Tk^-0.5%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>sum_3.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%T1/k(k+1)%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>flint.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%TFlint Hills%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>cookson.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%TCookson Hills%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>harmonic.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%THarmonic%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>riemann.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%TRiemann Zeta%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>alternating_harmonic.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%TAlternating Harmonic%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span>gregory.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">9</span><span class="sym">) +</span> <span class="str">&quot;%TGregory%N&quot;</span><span class="sym">)</span>
		<span class="kwa">end</span>

<span class="kwa">end</span> <span class="slc">-- class PARTIALSUMS</span>
