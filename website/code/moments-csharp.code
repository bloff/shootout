<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">// $Id: moments-csharp.code,v 1.2 2004-11-08 08:15:17 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">// http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">// 
</FONT></I><I><FONT COLOR="#B22222">// Transliterated from the Java implementation.  
</FONT></I><I><FONT COLOR="#B22222">//
</FONT></I><I><FONT COLOR="#B22222">// contributed by Isaac Gouy
</FONT></I>
using System;
using System.Collections;

class moments
{
    [STAThread]
    <B><FONT COLOR="#228B22">static</FONT></B> <B><FONT COLOR="#228B22">void</FONT></B> Main(string[] args)
    {
        String line;
        ArrayList numbers = new ArrayList();
        <B><FONT COLOR="#228B22">double</FONT></B> num, sum = 0.0;
        <B><FONT COLOR="#228B22">double</FONT></B> average_deviation = 0.0;
        <B><FONT COLOR="#228B22">double</FONT></B> standard_deviation = 0.0;
        <B><FONT COLOR="#228B22">double</FONT></B> variance = 0.0;
        <B><FONT COLOR="#228B22">double</FONT></B> skew = 0.0;
        <B><FONT COLOR="#228B22">double</FONT></B> kurtosis = 0.0;
        <B><FONT COLOR="#228B22">double</FONT></B> median = 0.0;
        <B><FONT COLOR="#228B22">double</FONT></B> deviation = 0.0;

        <B><FONT COLOR="#A020F0">while</FONT></B> ( (line = Console.ReadLine()) != null ) {
            num = Double.Parse(line);
            sum += num;
            numbers.Add(num);
        }

        <B><FONT COLOR="#228B22">int</FONT></B> n = numbers.Count;
        <B><FONT COLOR="#228B22">double</FONT></B> mean = sum / n;
        <B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#228B22">int</FONT></B> i = 0; i &lt; n; i++) {
            deviation = (<B><FONT COLOR="#228B22">double</FONT></B>)numbers[i] - mean;
            average_deviation += Math.Abs(deviation);
            variance += Math.Pow(deviation,2);
            skew += Math.Pow(deviation,3);
            kurtosis += Math.Pow(deviation,4);
        }
        average_deviation /= n;
        variance /= (n - 1);
        standard_deviation = Math.Sqrt(variance);
        <B><FONT COLOR="#A020F0">if</FONT></B> (variance != 0.0) {
            skew /= (n * variance * standard_deviation);
            kurtosis = kurtosis/(n * variance * variance) - 3.0;
        }
    
        numbers.Sort();

        <B><FONT COLOR="#228B22">int</FONT></B> mid = n / 2;
        median = (n % 2 != 0) ?
            (<B><FONT COLOR="#228B22">double</FONT></B>)numbers[mid] :
            ((<B><FONT COLOR="#228B22">double</FONT></B>)numbers[mid] + (<B><FONT COLOR="#228B22">double</FONT></B>)numbers[mid-1]) / 2;

        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;n:                  {0:d}&quot;</FONT></B>, n);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;median:             {0:f6}&quot;</FONT></B>, median);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;mean:               {0:f6}&quot;</FONT></B>, mean);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;average_deviation:  {0:f6}&quot;</FONT></B>, average_deviation);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;standard_deviation: {0:f6}&quot;</FONT></B>, standard_deviation);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;variance:           {0:f6}&quot;</FONT></B>, variance);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;skew:               {0:f6}&quot;</FONT></B>, skew);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;kurtosis:           {0:f6}&quot;</FONT></B>, kurtosis);
    }
}</pre></td></tr></table>
