<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<B><FONT COLOR="#A020F0">program</FONT></B> heapsort;
<B><FONT COLOR="#A020F0">uses</FONT></B> SysUtils, Classes;

<B><FONT COLOR="#A020F0">const</FONT></B>
	IM = 139968;
	IA =   3877;
	IC =  29573;

<B><FONT COLOR="#A020F0">var</FONT></B> 
	ary: TList;
	r : real;
	rr : ^real;
	N, i, LAST : longint;

<B><FONT COLOR="#A020F0">function</FONT></B> gen_random(n : longint) : real;
<B><FONT COLOR="#A020F0">begin</FONT></B>	
	LAST := (LAST * IA + IC) <B><FONT COLOR="#A020F0">mod</FONT></B> IM;
	gen_random := n * LAST / IM;
<B><FONT COLOR="#A020F0">end</FONT></B>;

<B><FONT COLOR="#A020F0">procedure</FONT></B> myheapsort(n : longint; <B><FONT COLOR="#A020F0">var</FONT></B> ra : TList);
<B><FONT COLOR="#A020F0">var</FONT></B>	
	rr : ^real;
	rra : real;
	i, j, l, ir : longint;
<B><FONT COLOR="#A020F0">begin</FONT></B>
	rra := 0;
	i := 0;
	j := 0;
	l := n shr 1 + 1;
	ir := n;
	
	<B><FONT COLOR="#A020F0">while</FONT></B> 1 = 1 <B><FONT COLOR="#A020F0">do</FONT></B>
	<B><FONT COLOR="#A020F0">begin</FONT></B>
		<B><FONT COLOR="#A020F0">if</FONT></B> l &gt; 1 <B><FONT COLOR="#A020F0">then</FONT></B> <B><FONT COLOR="#A020F0">begin</FONT></B>
			Dec(l);
			rra := real(ra.Items[l]^);
		<B><FONT COLOR="#A020F0">end</FONT></B>
		<B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#A020F0">begin</FONT></B>
			rra := real(ra.Items[ir]^);

			<I><FONT COLOR="#B22222">{ WriteLn('ir=1  ', IntToStr(ir), ' &lt;- ', IntToStr(1), ' (', real(ra.items[1]^):10:10, ')' ); }</FONT></I>

			GetMem(rr, SizeOf(real));
			rr^ := real(ra.Items[1]^);
			ra.items[ir] := rr;						
			<I><FONT COLOR="#B22222">{ *** ra.items[ir] := ra.Items[1]; }</FONT></I>
						
			Dec(ir);
			<B><FONT COLOR="#A020F0">if</FONT></B> ir = 1 <B><FONT COLOR="#A020F0">then</FONT></B> 
			<B><FONT COLOR="#A020F0">begin</FONT></B>
				<I><FONT COLOR="#B22222">{ WriteLn('1=rra ', IntToStr(1), ' &lt;- ', rra:10:10 ); }</FONT></I>

				GetMem(rr, SizeOf(real));
				rr^ := rra;
				ra.items[1] := rr;
				<I><FONT COLOR="#B22222">{ *** ra.items[1] := @rra; }</FONT></I>
				exit;
			<B><FONT COLOR="#A020F0">end</FONT></B>;
		<B><FONT COLOR="#A020F0">end</FONT></B>;
		
		i := l;
		j := l shl 1;

		<I><FONT COLOR="#B22222">{ WriteLn( '      l=', IntToStr(l), ' i=', IntToStr(i), ' j=', IntToStr(j), ' ir=', IntToStr(ir)); }</FONT></I>

		<B><FONT COLOR="#A020F0">while</FONT></B> j &lt;= ir <B><FONT COLOR="#A020F0">do</FONT></B> <B><FONT COLOR="#A020F0">begin</FONT></B>
			<B><FONT COLOR="#A020F0">if</FONT></B> (j &lt; ir) <B><FONT COLOR="#A020F0">and</FONT></B> (real(ra.items[j]^) &lt; real(ra.items[j+1]^)) <B><FONT COLOR="#A020F0">then</FONT></B> Inc(j);
			
			<I><FONT COLOR="#B22222">{ WriteLn('      in2while, j=', IntToStr(j), ' rra=', rra:10:10, ' ra(j)=', real(ra.items[j]^):10:10); }</FONT></I>
			
			
			<B><FONT COLOR="#A020F0">if</FONT></B> rra &lt; real(ra.items[j]^) <B><FONT COLOR="#A020F0">then</FONT></B> <B><FONT COLOR="#A020F0">begin</FONT></B>
				<I><FONT COLOR="#B22222">{ WriteLn('i=j   ', IntToStr(i), ' &lt;- ', IntToStr(j), ' (', real(ra.items[j]^):10:10, ')' ); }</FONT></I>

				GetMem(rr, SizeOf(real));
				rr^ := real(ra.items[j]^);
				ra.items[i] := rr;
				<I><FONT COLOR="#B22222">{ *** ra.items[i] := ra.items[j]; }</FONT></I>
				i := j;
				Inc(j, i);
			<B><FONT COLOR="#A020F0">end</FONT></B>
			<B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#A020F0">begin</FONT></B>
				j := ir + 1;
			<B><FONT COLOR="#A020F0">end</FONT></B>;
		<B><FONT COLOR="#A020F0">end</FONT></B>;
		<I><FONT COLOR="#B22222">{ WriteLn('i=rra ', IntToStr(i), ' &lt;- ', rra:10:10 ); }</FONT></I>
		GetMem(rr, SizeOf(real));
		rr^ := rra;
		ra.items[i] := rr;
		<I><FONT COLOR="#B22222">{ *** ra.items[i] := @rra; }</FONT></I>
	<B><FONT COLOR="#A020F0">end</FONT></B>;
<B><FONT COLOR="#A020F0">end</FONT></B>;
			
<B><FONT COLOR="#A020F0">begin</FONT></B>
	<B><FONT COLOR="#A020F0">if</FONT></B> ParamCount = 0 <B><FONT COLOR="#A020F0">then</FONT></B>
		N := 1
	<B><FONT COLOR="#A020F0">else</FONT></B>
		N := StrToInt(ParamStr(1));
	<B><FONT COLOR="#A020F0">if</FONT></B> N &lt; 1 <B><FONT COLOR="#A020F0">then</FONT></B> N := 1;
	LAST := 42;
	ary := TList.Create;
	ary.Capacity := N;
	r := 0.0;		
	GetMem( rr, SizeOf(real) );
	rr^ := r;		
	ary.Add( rr );
	<B><FONT COLOR="#A020F0">for</FONT></B> i:= 1 <B><FONT COLOR="#A020F0">to</FONT></B> N <B><FONT COLOR="#A020F0">do</FONT></B> <B><FONT COLOR="#A020F0">begin</FONT></B>
		r := gen_random(1);		
		GetMem( rr, SizeOf(real) );
		rr^ := r;		
		<I><FONT COLOR="#B22222">{ WriteLn( 'init:  ', IntToStr(i), '=', r:10:10); }</FONT></I>
		ary.Add( rr );
	<B><FONT COLOR="#A020F0">end</FONT></B>;
	<B><FONT COLOR="#A020F0">for</FONT></B> i:= 1 <B><FONT COLOR="#A020F0">to</FONT></B> N <B><FONT COLOR="#A020F0">do</FONT></B> <B><FONT COLOR="#A020F0">begin</FONT></B>
		r := real(ary.items[i]^);
		<I><FONT COLOR="#B22222">{ WriteLn( 'check: ', IntToStr(i), '=', r:10:10); }</FONT></I>
	<B><FONT COLOR="#A020F0">end</FONT></B>;
	myheapsort(N, ary);
	r := real(ary.items[N]^);
	WriteLn( r:10:10 );
	ary.Free;
<B><FONT COLOR="#A020F0">end</FONT></B>.
</pre></td></tr></table>
