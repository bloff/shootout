<span class="kwa">program</span> heapsort<span class="sym">;</span>

<span class="com">{$mode objfpc}</span>

<span class="kwa">uses</span>
  SysUtils<span class="sym">;</span>

<span class="kwa">const</span>
  IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;</span>
  IA <span class="sym">=</span>  <span class="num">3877</span><span class="sym">;</span>
  IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">;</span>

<span class="kwa">var</span>
  random_last<span class="sym">:</span> <span class="kwb">longint</span> <span class="sym">=</span> <span class="num">42</span><span class="sym">;</span>

<span class="kwa">function</span> <span class="kwd">gen_random</span><span class="sym">(</span>max<span class="sym">:</span> <span class="kwb">double</span><span class="sym">):</span> <span class="kwb">double</span><span class="sym">;</span>
<span class="kwa">begin</span>
  random_last <span class="sym">:= (</span>random_last <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">)</span> <span class="kwa">mod</span> IM<span class="sym">;</span>
  result <span class="sym">:=</span> max <span class="sym">*</span> random_last <span class="sym">/</span> IM<span class="sym">;</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">procedure</span> <span class="kwd">heapsort</span><span class="sym">(</span>n<span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span> ra<span class="sym">:</span> pdouble<span class="sym">);</span>
<span class="kwa">var</span>
  ir<span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span>
  i<span class="sym">,</span> j<span class="sym">,</span> l<span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span>
  rra<span class="sym">:</span> <span class="kwb">double</span><span class="sym">;</span>
<span class="kwa">begin</span>
  ir <span class="sym">:=</span> n<span class="sym">;</span>
  l <span class="sym">:= (</span>n <span class="sym">&gt;&gt;</span> <span class="num">1</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">;</span>

  <span class="kwa">while</span> <span class="kwb">true</span> <span class="kwa">do</span>
  <span class="kwa">begin</span>
    <span class="kwa">if</span> l <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span>
    <span class="kwa">begin</span>
      <span class="kwd">dec</span><span class="sym">(</span>l<span class="sym">);</span>
      rra <span class="sym">:=</span> ra<span class="sym">[</span>l<span class="sym">];</span>
    <span class="kwa">end else begin</span>
      rra <span class="sym">:=</span> ra<span class="sym">[</span>ir<span class="sym">];</span>
      ra<span class="sym">[</span>ir<span class="sym">] :=</span> ra<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwd">dec</span><span class="sym">(</span>ir<span class="sym">);</span>
      <span class="kwa">if</span> ir <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then begin</span>
        ra<span class="sym">[</span><span class="num">1</span><span class="sym">] :=</span> rra<span class="sym">;</span>
        exit<span class="sym">;</span>
      <span class="kwa">end</span><span class="sym">;</span>
    <span class="kwa">end</span><span class="sym">;</span>

    i <span class="sym">:=</span> l<span class="sym">;</span>
    j <span class="sym">:=</span> l <span class="sym">&lt;&lt;</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwa">while</span> j <span class="sym">&lt;=</span> ir <span class="kwa">do</span>
    <span class="kwa">begin</span>
      <span class="kwa">if</span> <span class="sym">(</span>j <span class="sym">&lt;</span> ir<span class="sym">)</span> <span class="kwa">and</span> <span class="sym">(</span>ra<span class="sym">[</span>j<span class="sym">] &lt;</span> ra<span class="sym">[</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">then</span>
        <span class="kwd">inc</span><span class="sym">(</span>j<span class="sym">);</span>
      <span class="kwa">if</span> <span class="sym">(</span>rra <span class="sym">&lt;</span> ra<span class="sym">[</span>j<span class="sym">])</span> <span class="kwa">then</span>
      <span class="kwa">begin</span>
        ra<span class="sym">[</span>i<span class="sym">] :=</span> ra<span class="sym">[</span>j<span class="sym">];</span>
        i <span class="sym">:=</span> j<span class="sym">;</span>
        j <span class="sym">+=</span> i<span class="sym">;</span>
      <span class="kwa">end else begin</span>
        j <span class="sym">:=</span> ir <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
      <span class="kwa">end</span><span class="sym">;</span>
    <span class="kwa">end</span><span class="sym">;</span>
    ra<span class="sym">[</span>i<span class="sym">] :=</span> rra<span class="sym">;</span>
  <span class="kwa">end</span><span class="sym">;</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">procedure</span> main<span class="sym">;</span>
<span class="kwa">var</span>
  I<span class="sym">,</span> N<span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span>
  ary<span class="sym">:</span> <span class="kwa">array of</span> <span class="kwb">double</span><span class="sym">;</span>
<span class="kwa">begin</span>
  <span class="kwa">if</span> ParamCount <span class="sym">&gt;=</span> <span class="num">1</span> <span class="kwa">then</span>
    N <span class="sym">:=</span> <span class="kwd">StrToInt</span><span class="sym">(</span><span class="kwd">ParamStr</span><span class="sym">(</span><span class="num">1</span><span class="sym">))</span>
  <span class="kwa">else</span>
    N <span class="sym">:=</span> <span class="num">1</span><span class="sym">;</span>

  <span class="com">{ create an array of N random doubles }</span>
  <span class="kwd">setlength</span><span class="sym">(</span>ary<span class="sym">,</span> N<span class="sym">+</span><span class="num">1</span><span class="sym">);</span>
  <span class="kwa">for</span> I <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> N <span class="kwa">do</span>
    ary<span class="sym">[</span>I<span class="sym">] :=</span> <span class="kwd">gen_random</span><span class="sym">(</span><span class="num">1</span><span class="sym">);</span>

  <span class="kwd">heapsort</span><span class="sym">(</span>N<span class="sym">, &#64;</span>ary<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>

  <span class="kwd">writeln</span><span class="sym">(</span>ary<span class="sym">[</span>N<span class="sym">]:</span><span class="num">10</span><span class="sym">:</span><span class="num">10</span><span class="sym">);</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">begin</span>
  main<span class="sym">;</span>
<span class="kwa">end</span>.

