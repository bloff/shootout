<span class="line">    1 </span><span class="kwa">program</span> heapsort<span class="sym">;
</span><span class="line">    2 </span><span class="sym"></span><span class="kwa">uses</span> SysUtils<span class="sym">,</span> Classes<span class="sym">;
</span><span class="line">    3 </span><span class="sym">
</span><span class="line">    4 </span><span class="sym"></span><span class="kwa">const
</span><span class="line">    5 </span><span class="kwa"></span>        IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;
</span><span class="line">    6 </span><span class="sym"></span>        IA <span class="sym">=</span>   <span class="num">3877</span><span class="sym">;
</span><span class="line">    7 </span><span class="sym"></span>        IC <span class="sym">=</span>  <span class="num">29573</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">var
</span><span class="line">   10 </span><span class="kwa"></span>        ary<span class="sym">:</span> TList<span class="sym">;
</span><span class="line">   11 </span><span class="sym"></span>        r <span class="sym">:</span> <span class="kwb">real</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>        rr <span class="sym">:</span> ^<span class="kwb">real</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span>        N<span class="sym">,</span> i<span class="sym">,</span> LAST <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span><span class="kwa">function</span> gen_random<span class="sym">(</span>n <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">) :</span> <span class="kwb">real</span><span class="sym">;
</span><span class="line">   16 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   17 </span><span class="kwa"></span>        LAST <span class="sym">:= (</span>LAST <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">)</span> <span class="kwa">mod</span> IM<span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>        gen_random <span class="sym">:=</span> n <span class="sym">*</span> LAST <span class="sym">/</span> IM<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym"></span><span class="kwa">procedure</span> myheapsort<span class="sym">(</span>n <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;</span> <span class="kwa">var</span> ra <span class="sym">:</span> TList<span class="sym">);
</span><span class="line">   22 </span><span class="sym"></span><span class="kwa">var
</span><span class="line">   23 </span><span class="kwa"></span>        rr <span class="sym">:</span> ^<span class="kwb">real</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym"></span>        rra <span class="sym">:</span> <span class="kwb">real</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>        i<span class="sym">,</span> j<span class="sym">,</span> l<span class="sym">,</span> ir <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">   26 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   27 </span><span class="kwa"></span>        rra <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>        i <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span>        j <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>        l <span class="sym">:=</span> n <span class="kwa">shr</span> <span class="num">1</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>        ir <span class="sym">:=</span> n<span class="sym">;
</span><span class="line">   32 </span><span class="sym">
</span><span class="line">   33 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="num">1</span> <span class="sym">=</span> <span class="num">1</span> <span class="kwa">do
</span><span class="line">   34 </span><span class="kwa">        begin
</span><span class="line">   35 </span><span class="kwa">                if</span> l <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then begin
</span><span class="line">   36 </span><span class="kwa"></span>                        Dec<span class="sym">(</span>l<span class="sym">);
</span><span class="line">   37 </span><span class="sym"></span>                        rra <span class="sym">:=</span> <span class="kwb">real</span><span class="sym">(</span>ra.Items<span class="sym">[</span>l<span class="sym">]</span>^<span class="sym">);
</span><span class="line">   38 </span><span class="sym"></span>                <span class="kwa">end
</span><span class="line">   39 </span><span class="kwa">                else begin
</span><span class="line">   40 </span><span class="kwa"></span>                        rra <span class="sym">:=</span> <span class="kwb">real</span><span class="sym">(</span>ra.Items<span class="sym">[</span>ir<span class="sym">]</span>^<span class="sym">);
</span><span class="line">   41 </span><span class="sym">
</span><span class="line">   42 </span><span class="sym"></span>                        <span class="com">{ WriteLn('ir=1  ', IntToStr(ir), ' &lt;- ', IntToStr(1), ' (', real(ra.items[1]^):10:10, ')' ); }</span>
<span class="line">   43 </span>
<span class="line">   44 </span>                        GetMem<span class="sym">(</span>rr<span class="sym">,</span> SizeOf<span class="sym">(</span><span class="kwb">real</span><span class="sym">));
</span><span class="line">   45 </span><span class="sym"></span>                        rr^ <span class="sym">:=</span> <span class="kwb">real</span><span class="sym">(</span>ra.Items<span class="sym">[</span><span class="num">1</span><span class="sym">]</span>^<span class="sym">);
</span><span class="line">   46 </span><span class="sym"></span>                        ra.items<span class="sym">[</span>ir<span class="sym">] :=</span> rr<span class="sym">;
</span><span class="line">   47 </span><span class="sym"></span>                        <span class="com">{ *** ra.items[ir] := ra.Items[1]; }</span>
<span class="line">   48 </span>
<span class="line">   49 </span>                        Dec<span class="sym">(</span>ir<span class="sym">);
</span><span class="line">   50 </span><span class="sym"></span>                        <span class="kwa">if</span> ir <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then
</span><span class="line">   51 </span><span class="kwa">                        begin
</span><span class="line">   52 </span><span class="kwa"></span>                                <span class="com">{ WriteLn('1=rra ', IntToStr(1), ' &lt;- ', rra:10:10 ); }</span>
<span class="line">   53 </span>
<span class="line">   54 </span>                                GetMem<span class="sym">(</span>rr<span class="sym">,</span> SizeOf<span class="sym">(</span><span class="kwb">real</span><span class="sym">));
</span><span class="line">   55 </span><span class="sym"></span>                                rr^ <span class="sym">:=</span> rra<span class="sym">;
</span><span class="line">   56 </span><span class="sym"></span>                                ra.items<span class="sym">[</span><span class="num">1</span><span class="sym">] :=</span> rr<span class="sym">;
</span><span class="line">   57 </span><span class="sym"></span>                                <span class="com">{ *** ra.items[1] := &#64;rra; }</span>
<span class="line">   58 </span>                                exit<span class="sym">;
</span><span class="line">   59 </span><span class="sym"></span>                        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   60 </span><span class="sym"></span>                <span class="kwa">end</span><span class="sym">;
</span><span class="line">   61 </span><span class="sym">
</span><span class="line">   62 </span><span class="sym"></span>                i <span class="sym">:=</span> l<span class="sym">;
</span><span class="line">   63 </span><span class="sym"></span>                j <span class="sym">:=</span> l <span class="kwa">shl</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   64 </span><span class="sym">
</span><span class="line">   65 </span><span class="sym"></span>                <span class="com">{ WriteLn( '      l=', IntToStr(l), ' i=', IntToStr(i), ' j=', IntToStr(j), ' ir=', IntToStr(ir)); }</span>
<span class="line">   66 </span>
<span class="line">   67 </span>                <span class="kwa">while</span> j <span class="sym">&lt;=</span> ir <span class="kwa">do begin
</span><span class="line">   68 </span><span class="kwa">                        if</span> <span class="sym">(</span>j <span class="sym">&lt;</span> ir<span class="sym">)</span> <span class="kwa">and</span> <span class="sym">(</span><span class="kwb">real</span><span class="sym">(</span>ra.items<span class="sym">[</span>j<span class="sym">]</span>^<span class="sym">) &lt;</span> <span class="kwb">real</span><span class="sym">(</span>ra.items<span class="sym">[</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">]</span>^<span class="sym">))</span> <span class="kwa">then</span> Inc<span class="sym">(</span>j<span class="sym">);
</span><span class="line">   69 </span><span class="sym">
</span><span class="line">   70 </span><span class="sym"></span>                        <span class="com">{ WriteLn('      in2while, j=', IntToStr(j), ' rra=', rra:10:10, ' ra(j)=', real(ra.items[j]^):10:10); }</span>
<span class="line">   71 </span>
<span class="line">   72 </span>
<span class="line">   73 </span>                        <span class="kwa">if</span> rra <span class="sym">&lt;</span> <span class="kwb">real</span><span class="sym">(</span>ra.items<span class="sym">[</span>j<span class="sym">]</span>^<span class="sym">)</span> <span class="kwa">then begin
</span><span class="line">   74 </span><span class="kwa"></span>                                <span class="com">{ WriteLn('i=j   ', IntToStr(i), ' &lt;- ', IntToStr(j), ' (', real(ra.items[j]^):10:10, ')' ); }</span>
<span class="line">   75 </span>
<span class="line">   76 </span>                                GetMem<span class="sym">(</span>rr<span class="sym">,</span> SizeOf<span class="sym">(</span><span class="kwb">real</span><span class="sym">));
</span><span class="line">   77 </span><span class="sym"></span>                                rr^ <span class="sym">:=</span> <span class="kwb">real</span><span class="sym">(</span>ra.items<span class="sym">[</span>j<span class="sym">]</span>^<span class="sym">);
</span><span class="line">   78 </span><span class="sym"></span>                                ra.items<span class="sym">[</span>i<span class="sym">] :=</span> rr<span class="sym">;
</span><span class="line">   79 </span><span class="sym"></span>                                <span class="com">{ *** ra.items[i] := ra.items[j]; }</span>
<span class="line">   80 </span>                                i <span class="sym">:=</span> j<span class="sym">;
</span><span class="line">   81 </span><span class="sym"></span>                                Inc<span class="sym">(</span>j<span class="sym">,</span> i<span class="sym">);
</span><span class="line">   82 </span><span class="sym"></span>                        <span class="kwa">end
</span><span class="line">   83 </span><span class="kwa">                        else begin
</span><span class="line">   84 </span><span class="kwa"></span>                                j <span class="sym">:=</span> ir <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   85 </span><span class="sym"></span>                        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   86 </span><span class="sym"></span>                <span class="kwa">end</span><span class="sym">;
</span><span class="line">   87 </span><span class="sym"></span>                <span class="com">{ WriteLn('i=rra ', IntToStr(i), ' &lt;- ', rra:10:10 ); }</span>
<span class="line">   88 </span>                GetMem<span class="sym">(</span>rr<span class="sym">,</span> SizeOf<span class="sym">(</span><span class="kwb">real</span><span class="sym">));
</span><span class="line">   89 </span><span class="sym"></span>                rr^ <span class="sym">:=</span> rra<span class="sym">;
</span><span class="line">   90 </span><span class="sym"></span>                ra.items<span class="sym">[</span>i<span class="sym">] :=</span> rr<span class="sym">;
</span><span class="line">   91 </span><span class="sym"></span>                <span class="com">{ *** ra.items[i] := &#64;rra; }</span>
<span class="line">   92 </span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   93 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;
</span><span class="line">   94 </span><span class="sym">
</span><span class="line">   95 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   96 </span><span class="kwa">        if</span> ParamCount <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
</span><span class="line">   97 </span><span class="kwa"></span>                N <span class="sym">:=</span> <span class="num">1
</span><span class="line">   98 </span><span class="num"></span>        <span class="kwa">else
</span><span class="line">   99 </span><span class="kwa"></span>                N <span class="sym">:=</span> StrToInt<span class="sym">(</span>ParamStr<span class="sym">(</span><span class="num">1</span><span class="sym">));
</span><span class="line">  100 </span><span class="sym"></span>        <span class="kwa">if</span> N <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> N <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">  101 </span><span class="sym"></span>        LAST <span class="sym">:=</span> <span class="num">42</span><span class="sym">;
</span><span class="line">  102 </span><span class="sym"></span>        ary <span class="sym">:=</span> TList.Create<span class="sym">;
</span><span class="line">  103 </span><span class="sym"></span>        ary.Capacity <span class="sym">:=</span> N<span class="sym">;
</span><span class="line">  104 </span><span class="sym"></span>        r <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;
</span><span class="line">  105 </span><span class="sym"></span>        GetMem<span class="sym">(</span> rr<span class="sym">,</span> SizeOf<span class="sym">(</span><span class="kwb">real</span><span class="sym">) );
</span><span class="line">  106 </span><span class="sym"></span>        rr^ <span class="sym">:=</span> r<span class="sym">;
</span><span class="line">  107 </span><span class="sym"></span>        ary.Add<span class="sym">(</span> rr <span class="sym">);
</span><span class="line">  108 </span><span class="sym"></span>        <span class="kwa">for</span> i<span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> N <span class="kwa">do begin
</span><span class="line">  109 </span><span class="kwa"></span>                r <span class="sym">:=</span> gen_random<span class="sym">(</span><span class="num">1</span><span class="sym">);
</span><span class="line">  110 </span><span class="sym"></span>                GetMem<span class="sym">(</span> rr<span class="sym">,</span> SizeOf<span class="sym">(</span><span class="kwb">real</span><span class="sym">) );
</span><span class="line">  111 </span><span class="sym"></span>                rr^ <span class="sym">:=</span> r<span class="sym">;
</span><span class="line">  112 </span><span class="sym"></span>                <span class="com">{ WriteLn( 'init:  ', IntToStr(i), '=', r:10:10); }</span>
<span class="line">  113 </span>                ary.Add<span class="sym">(</span> rr <span class="sym">);
</span><span class="line">  114 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">  115 </span><span class="sym"></span>        <span class="kwa">for</span> i<span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> N <span class="kwa">do begin
</span><span class="line">  116 </span><span class="kwa"></span>                r <span class="sym">:=</span> <span class="kwb">real</span><span class="sym">(</span>ary.items<span class="sym">[</span>i<span class="sym">]</span>^<span class="sym">);
</span><span class="line">  117 </span><span class="sym"></span>                <span class="com">{ WriteLn( 'check: ', IntToStr(i), '=', r:10:10); }</span>
<span class="line">  118 </span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">  119 </span><span class="sym"></span>        myheapsort<span class="sym">(</span>N<span class="sym">,</span> ary<span class="sym">);
</span><span class="line">  120 </span><span class="sym"></span>        r <span class="sym">:=</span> <span class="kwb">real</span><span class="sym">(</span>ary.items<span class="sym">[</span>N<span class="sym">]</span>^<span class="sym">);
</span><span class="line">  121 </span><span class="sym"></span>        WriteLn<span class="sym">(</span> r<span class="sym">:</span><span class="num">10</span><span class="sym">:</span><span class="num">10</span> <span class="sym">);
</span><span class="line">  122 </span><span class="sym"></span>        ary.Free<span class="sym">;
</span><span class="line">  123 </span><span class="sym"></span><span class="kwa">end</span>.
<span class="line">  124 </span>
