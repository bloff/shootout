<span class="slc">-- $Id: wordfreq-lua.code,v 1.6 2006-02-05 09:51:36 bfulgham Exp $</span>
<span class="slc">-- http://shootout.alioth.debian.org</span>
<span class="slc">-- contributed by Roberto Ierusalimschy</span>

<span class="slc">-- this version reads 4K chunks of input at a time</span>

<span class="kwa">local</span> words <span class="sym">= {}</span>   <span class="slc">-- list of all words (for sorting)</span>
<span class="kwa">local</span> count <span class="sym">= {}</span>   <span class="slc">-- count occurrences of each word</span>

<span class="kwa">local</span> BUFSIZE <span class="sym">=</span> <span class="num">2</span>^<span class="num">12</span>

<span class="kwa">while</span> true <span class="kwa">do</span>
  <span class="kwa">local</span> lines<span class="sym">,</span> rest <span class="sym">=</span> io.<span class="kwa">read</span><span class="sym">(</span>BUFSIZE<span class="sym">,</span> <span class="str">&quot;*l&quot;</span><span class="sym">)</span>
  <span class="kwa">if</span> lines <span class="sym">==</span> <span class="kwa">nil then break end</span>
  lines <span class="sym">=</span> lines..<span class="sym">(</span>rest <span class="kwa">or</span> <span class="str">''</span><span class="sym">)</span>    <span class="slc">-- ensures whole lines</span>
  <span class="kwa">for</span> w <span class="kwa">in</span> <span class="kwb">string</span>.gfind<span class="sym">(</span><span class="kwb">string</span>.lower<span class="sym">(</span>lines<span class="sym">),</span> <span class="str">&quot;(%l+)&quot;</span><span class="sym">)</span> <span class="kwa">do</span>
    <span class="kwa">local</span> cw <span class="sym">=</span> count<span class="sym">[</span>w<span class="sym">]</span>
    <span class="kwa">if not</span> cw <span class="kwa">then</span>     <span class="slc">-- first occurrence?</span>
      cw <span class="sym">=</span> <span class="num">0</span>
      <span class="kwb">table</span>.insert<span class="sym">(</span>words<span class="sym">,</span> w<span class="sym">)</span>
    <span class="kwa">end</span>
    count<span class="sym">[</span>w<span class="sym">] =</span> cw <span class="sym">+</span> <span class="num">1</span>
  <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwb">table</span>.<span class="kwa">sort</span><span class="sym">(</span>words<span class="sym">,</span> <span class="kwa">function</span> <span class="sym">(</span>a<span class="sym">,</span>b<span class="sym">)</span>
  <span class="kwa">return</span>  count<span class="sym">[</span>a<span class="sym">] &gt;</span> count<span class="sym">[</span>b<span class="sym">]</span>  <span class="kwa">or</span> <span class="sym">(</span>count<span class="sym">[</span>a<span class="sym">] ==</span> count<span class="sym">[</span>b<span class="sym">]</span> <span class="kwa">and</span> a <span class="sym">&gt;</span> b<span class="sym">)</span>
<span class="kwa">end</span><span class="sym">)</span>

<span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span><span class="kwb">table</span>.<span class="kwa">getn</span><span class="sym">(</span>words<span class="sym">)</span> <span class="kwa">do</span>
  <span class="kwa">local</span> w <span class="sym">=</span> words<span class="sym">[</span>i<span class="sym">]</span>
  io.<span class="kwa">write</span><span class="sym">(</span><span class="kwb">string</span>.<span class="kwa">format</span><span class="sym">(</span><span class="str">&quot;%7d %s</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> count<span class="sym">[</span>w<span class="sym">],</span> w<span class="sym">))</span>
<span class="kwa">end</span>

