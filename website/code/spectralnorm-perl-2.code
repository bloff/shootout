<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Markus Peter</span>

<span class="kwa">sub</span> A <span class="sym">{</span>
    <span class="kwc">my</span> <span class="sym">(</span> <span class="kwb">$i</span><span class="sym">,</span> <span class="kwb">$j</span> <span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>
    <span class="kwa">return</span> <span class="num">1.0</span> <span class="sym">/ ( (</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="kwb">$j</span> <span class="sym">) * (</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="kwb">$j</span> <span class="sym">+</span> <span class="num">1</span> <span class="sym">) /</span> <span class="num">2</span> <span class="sym">+</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span> <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">sub</span> Av <span class="sym">{</span>
    <span class="kwc">my</span> <span class="sym">(</span> <span class="kwb">$u</span> <span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$len</span><span class="sym">= $</span><span class="slc">#$u;</span>
    <span class="kwc">my</span> <span class="kwb">&#64;v</span><span class="sym">= ();</span>
    <span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$i</span> <span class="sym">(</span> <span class="num">0</span>..<span class="kwb">$len</span> <span class="sym">) {</span>
        <span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;</span>
        <span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$j</span> <span class="sym">(</span> <span class="num">0</span>..<span class="kwb">$len</span> <span class="sym">) {</span> <span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] +=</span> <span class="kwd">A</span><span class="sym">(</span> <span class="kwb">$i</span><span class="sym">,</span> <span class="kwb">$j</span> <span class="sym">) *</span> <span class="kwb">$u</span><span class="sym">-&gt;[</span><span class="kwb">$j</span><span class="sym">]; }</span>
    <span class="sym">}</span>
    <span class="kwa">return</span> <span class="esc">\&#64;</span>v<span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">sub</span> Atv <span class="sym">{</span>
    <span class="kwc">my</span> <span class="sym">(</span> <span class="kwb">$u</span> <span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>
    <span class="kwc">my</span> <span class="kwb">$len</span><span class="sym">= $</span><span class="slc">#$u;</span>
    <span class="kwc">my</span> <span class="kwb">&#64;v</span><span class="sym">= ();</span>
    <span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$i</span> <span class="sym">(</span> <span class="num">0</span>..<span class="kwb">$len</span> <span class="sym">) {</span>
        <span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;</span>
        <span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$j</span> <span class="sym">(</span> <span class="num">0</span>..<span class="kwb">$len</span> <span class="sym">) {</span> <span class="kwb">$v</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] +=</span> <span class="kwd">A</span><span class="sym">(</span> <span class="kwb">$j</span><span class="sym">,</span> <span class="kwb">$i</span> <span class="sym">) *</span> <span class="kwb">$u</span><span class="sym">-&gt;[</span><span class="kwb">$j</span><span class="sym">]; }</span>
    <span class="sym">}</span>
    <span class="kwa">return</span> <span class="esc">\&#64;</span>v<span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">sub</span> AtAv <span class="sym">{</span>
    <span class="kwc">my</span> <span class="sym">(</span> <span class="kwb">$u</span> <span class="sym">) =</span> <span class="kwb">&#64;_</span><span class="sym">;</span>
    <span class="kwa">return</span> <span class="kwd">Atv</span><span class="sym">(</span><span class="kwd">Av</span><span class="sym">(</span><span class="kwb">$u</span><span class="sym">));</span>
<span class="sym">}</span>

<span class="kwc">my</span> <span class="kwb">$i</span><span class="sym">;</span>
<span class="kwc">my</span> <span class="kwb">$N</span> <span class="sym">=</span> <span class="kwb">&#64;ARGV</span> ? <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] :</span> <span class="num">500</span><span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">$v</span><span class="sym">;</span>
<span class="kwc">my</span> <span class="kwb">$u</span><span class="sym">= [];</span>
<span class="kwa">for</span> <span class="kwb">$i</span> <span class="sym">(</span><span class="num">0</span>..<span class="kwb">$N</span><span class="sym">-</span><span class="num">1</span><span class="sym">) {</span> <span class="kwb">$u</span><span class="sym">-&gt;[</span><span class="kwb">$i</span><span class="sym">]=</span><span class="num">1</span><span class="sym">; }</span>
<span class="kwa">for</span> <span class="kwb">$i</span> <span class="sym">(</span><span class="num">0</span>.<span class="num">.9</span><span class="sym">) {</span>
    <span class="kwb">$v</span><span class="sym">=</span> <span class="kwd">AtAv</span><span class="sym">(</span> <span class="kwb">$u</span><span class="sym">);</span>
    <span class="kwb">$u</span><span class="sym">=</span> <span class="kwd">AtAv</span><span class="sym">(</span> <span class="kwb">$v</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="kwb">$vBv</span> <span class="sym">=</span> <span class="kwb">$vv</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
<span class="kwa">for</span> <span class="kwb">$i</span> <span class="sym">(</span><span class="num">0</span>..<span class="kwb">$N</span><span class="sym">-</span><span class="num">1</span><span class="sym">) {</span>
    <span class="kwb">$vBv</span> <span class="sym">+=</span> <span class="kwb">$u</span><span class="sym">-&gt;[</span><span class="kwb">$i</span><span class="sym">] *</span> <span class="kwb">$v</span><span class="sym">-&gt;[</span><span class="kwb">$i</span><span class="sym">];</span>
    <span class="kwb">$vv</span> <span class="sym">+=</span> <span class="kwb">$v</span><span class="sym">-&gt;[</span><span class="kwb">$i</span><span class="sym">] *</span> <span class="kwb">$v</span><span class="sym">-&gt;[</span><span class="kwb">$i</span><span class="sym">];</span>
<span class="sym">}</span>
<span class="kwd">printf</span><span class="sym">(</span> <span class="str">&quot;%0.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">sqrt</span><span class="sym">(</span> <span class="kwb">$vBv</span> <span class="sym">/</span> <span class="kwb">$vv</span> <span class="sym">) );</span>
