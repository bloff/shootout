<span class="com">{-# OPTIONS -O2 -funbox-strict-fields #-}</span>
<span class="com">{-</span>
<span class="com">   The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   compile with : ghc --make fastest.hs -o fastest</span>
<span class="com"></span>
<span class="com">   contributed by Greg Buchholz</span>
<span class="com">   modified by Mirko Rahn</span>
<span class="com">   modified by Don Stewart and Chris Kuklewicz, 5-6 Jan 2006</span>
<span class="com">-}</span>
<span class="kwa">import</span> GHC.Base

<span class="kwa">data</span> I <span class="sym">=</span> I <span class="sym">!</span><span class="kwb">Int</span>

main <span class="sym">=</span> print . new <span class="sym">(</span>I <span class="num">0</span><span class="sym">) =&lt;&lt;</span> getContents

new <span class="sym">(</span>I i<span class="sym">) []       =</span> i
new <span class="sym">(</span>I i<span class="sym">) (</span><span class="str">'-'</span><span class="sym">:</span>xs<span class="sym">) =</span> neg <span class="sym">(</span>I <span class="num">0</span><span class="sym">)</span> xs
    <span class="kwa">where</span> neg <span class="sym">(</span>I n<span class="sym">) (</span><span class="str">'\n'</span><span class="sym">:</span>xs<span class="sym">) =</span> new <span class="sym">(</span>I <span class="sym">(</span>i <span class="sym">-</span> n<span class="sym">))</span> xs
          neg <span class="sym">(</span>I n<span class="sym">) (</span>x   <span class="sym">:</span>xs<span class="sym">) =</span> neg <span class="sym">(</span>I <span class="sym">(</span>parse x <span class="sym">+ (</span><span class="num">10</span> <span class="sym">*</span> n<span class="sym">)))</span> xs
new <span class="sym">(</span>I i<span class="sym">) (</span>x<span class="sym">:</span>xs<span class="sym">) =</span> pos <span class="sym">(</span>I <span class="sym">(</span>parse x<span class="sym">))</span> xs
    <span class="kwa">where</span> pos <span class="sym">(</span>I n<span class="sym">) (</span><span class="str">'\n'</span><span class="sym">:</span>xs<span class="sym">) =</span> new <span class="sym">(</span>I <span class="sym">(</span>i <span class="sym">+</span> n<span class="sym">))</span> xs
          pos <span class="sym">(</span>I n<span class="sym">) (</span>x   <span class="sym">:</span>xs<span class="sym">) =</span> pos <span class="sym">(</span>I <span class="sym">(</span>parse x <span class="sym">+ (</span><span class="num">10</span> <span class="sym">*</span> n<span class="sym">)))</span> xs

parse c <span class="sym">=</span> ord c <span class="sym">-</span> ord <span class="str">'0'</span>
