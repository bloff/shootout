<span class="slc">#!/usr/bin/python
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span>
<span class="kwc">import</span> sys

<span class="kwa">class</span> Toggle<span class="sym">:
</span>    <span class="kwb">def</span> __init__<span class="sym">(</span><span class="kwc">self</span><span class="sym">,</span> start_state<span class="sym">):
</span>        <span class="kwc">self</span><span class="sym">.</span>bool <span class="sym">=</span> start_state
    <span class="kwb">def</span> value<span class="sym">(</span><span class="kwc">self</span><span class="sym">):
</span>        <span class="kwb">return</span><span class="sym">(</span><span class="kwc">self</span><span class="sym">.</span>bool<span class="sym">)
</span>    <span class="kwb">def</span> activate<span class="sym">(</span><span class="kwc">self</span><span class="sym">):
</span>        <span class="kwc">self</span><span class="sym">.</span>bool <span class="sym">=</span> <span class="kwb">not</span> <span class="kwc">self</span><span class="sym">.</span>bool
        <span class="kwb">return</span><span class="sym">(</span><span class="kwc">self</span><span class="sym">)

</span><span class="kwa">class</span> NthToggle<span class="sym">(</span>Toggle<span class="sym">):
</span>    <span class="kwb">def</span> __init__<span class="sym">(</span><span class="kwc">self</span><span class="sym">,</span> start_state<span class="sym">,</span> max_counter<span class="sym">):
</span>        Toggle<span class="sym">.</span>__init__<span class="sym">(</span><span class="kwc">self</span><span class="sym">,</span> start_state<span class="sym">)
</span>        <span class="kwc">self</span><span class="sym">.</span>count_max <span class="sym">=</span> max_counter
        <span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0
</span>    <span class="kwb">def</span> activate<span class="sym">(</span><span class="kwc">self</span><span class="sym">):
</span>        <span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">+=</span> <span class="num">1
</span>        <span class="kwb">if</span> <span class="sym">(</span><span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">&gt;=</span> <span class="kwc">self</span><span class="sym">.</span>count_max<span class="sym">):
</span>            <span class="kwc">self</span><span class="sym">.</span>bool <span class="sym">=</span> <span class="kwb">not</span> <span class="kwc">self</span><span class="sym">.</span>bool
            <span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0
</span>        <span class="kwb">return</span><span class="sym">(</span><span class="kwc">self</span><span class="sym">)


</span><span class="kwb">def</span> main<span class="sym">():
</span>    NUM <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])
</span>    <span class="kwb">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">:
</span>        NUM <span class="sym">=</span> <span class="num">1

</span>    val <span class="sym">=</span> <span class="num">1
</span>    toggle <span class="sym">=</span> Toggle<span class="sym">(</span>val<span class="sym">)
</span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>NUM<span class="sym">):
</span>        val <span class="sym">=</span> toggle<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">()
</span>    <span class="kwb">if</span> val<span class="sym">:
</span>        <span class="kwb">print</span> <span class="str">&quot;true&quot;</span>
    <span class="kwb">else</span><span class="sym">:
</span>        <span class="kwb">print</span> <span class="str">&quot;false&quot;</span>

    val <span class="sym">=</span> <span class="num">1
</span>    ntoggle <span class="sym">=</span> NthToggle<span class="sym">(</span>val<span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>NUM<span class="sym">):
</span>        val <span class="sym">=</span> ntoggle<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">()
</span>    <span class="kwb">if</span> val<span class="sym">:
</span>        <span class="kwb">print</span> <span class="str">&quot;true&quot;</span>
    <span class="kwb">else</span><span class="sym">:
</span>        <span class="kwb">print</span> <span class="str">&quot;false&quot;</span>

main<span class="sym">()</span>
