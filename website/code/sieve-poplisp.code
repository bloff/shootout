<span class="line">    1 </span><span class="slc">;;; -*- mode: lisp -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: sieve-poplisp.code,v 1.4 2004-11-13 07:43:22 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">(</span>declaim <span class="sym">(</span>optimize <span class="sym">(</span>speed <span class="num">3</span><span class="sym">) (</span>safety <span class="num">0</span><span class="sym">) (</span>debug <span class="num">0</span><span class="sym">) (</span>space <span class="num">0</span><span class="sym">) (</span>compilation<span class="sym">-</span>speed <span class="num">0</span><span class="sym">)))
</span><span class="line">    6 </span><span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> pop11<span class="sym">::</span>poparglist<span class="sym">)</span> <span class="str">&quot;1&quot;</span><span class="sym">)))
</span><span class="line">    7 </span><span class="sym">        (</span>flags <span class="sym">(</span>make<span class="sym">-</span>array <span class="num">8193</span> <span class="sym">:</span>element<span class="sym">-</span><span class="kwa">type</span> <span class="str">'fixnum :initial-element 1)))
</span><span class="line">    8 </span><span class="str">(loop repeat n of-type fixnum for count of-type fixnum = 0 then 0 do
</span><span class="line">    9 </span><span class="str">   (loop for i fixnum from 2 upto 8192 do
</span><span class="line">   10 </span><span class="str">          (unless (zerop (aref flags i))
</span><span class="line">   11 </span><span class="str">                (loop for k fixnum from (* 2 i) upto 8192 by i do
</span><span class="line">   12 </span><span class="str">                          (setf (aref flags k) 0))
</span><span class="line">   13 </span><span class="str">                (incf count)))
</span><span class="line">   14 </span><span class="str">   finally (format t &quot;Count: ~D~%&quot; count)))</span>
