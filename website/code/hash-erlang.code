<span class="slc">%%% The Great Computer Language Shootout</span>
<span class="slc">%%% http://shootout.alioth.debian.org/</span>
<span class="slc">%%%</span>
<span class="slc">%%% Use ETS tables (Erlang's associative store).</span>
<span class="slc">%%%</span>
<span class="slc">%%% Optimizations provided by Einar Karttunen.</span>
<span class="slc">%%% An off-by-one error corrected by Brent Fulgham</span>
<span class="slc">%%% modified by Isaac Gouy</span>

<span class="sym">-</span><span class="kwd">module</span><span class="sym">(</span><span class="kwb">hash</span><span class="sym">)</span>.
<span class="sym">-</span><span class="kwd">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

<span class="kwd">main</span><span class="sym">() -&gt;</span> <span class="kwd">main</span><span class="sym">([</span><span class="str">&quot;1&quot;</span><span class="sym">])</span>.
<span class="kwd">main</span><span class="sym">([</span>Arg<span class="sym">]) -&gt;</span>
   N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span>Arg<span class="sym">),</span>
   H <span class="sym">=</span> ets<span class="sym">:</span><span class="kwd">new</span><span class="sym">(</span>i_am_a_carrot<span class="sym">, [</span>set<span class="sym">]),</span>
   <span class="kwd">doinserts</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> N <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> H<span class="sym">),</span>
   Count <span class="sym">=</span> <span class="kwd">dolookups</span><span class="sym">(</span>N <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> H<span class="sym">),</span>
   io<span class="sym">:</span><span class="kwd">format</span><span class="sym">(</span><span class="str">&quot;~w~n&quot;</span><span class="sym">, [</span>Count<span class="sym">]),</span>
   <span class="kwb">halt</span><span class="sym">()</span>.

<span class="kwd">doinserts</span><span class="sym">(</span>N<span class="sym">,</span> N<span class="sym">,</span> H<span class="sym">) -&gt;</span> ok<span class="sym">;</span>
<span class="kwd">doinserts</span><span class="sym">(</span>I<span class="sym">,</span> N<span class="sym">,</span> H<span class="sym">) -&gt;</span>
   ets<span class="sym">:</span><span class="kwd">insert</span><span class="sym">(</span>H<span class="sym">, {</span> erlang<span class="sym">:</span><span class="kwb">integer_to_list</span><span class="sym">(</span>I<span class="sym">,</span> <span class="num">16</span><span class="sym">),</span> I <span class="sym">}),</span>
   <span class="kwd">doinserts</span><span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> N<span class="sym">,</span> H<span class="sym">)</span>.

<span class="kwd">dolookups</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> C<span class="sym">,</span> H<span class="sym">) -&gt;</span> C<span class="sym">;</span>
<span class="kwd">dolookups</span><span class="sym">(</span>I<span class="sym">,</span> C<span class="sym">,</span> H<span class="sym">) -&gt;</span>
   Nx <span class="sym">=</span> <span class="kwb">integer_to_list</span><span class="sym">(</span>I<span class="sym">),</span>
   <span class="kwa">case</span> ets<span class="sym">:</span><span class="kwd">lookup</span><span class="sym">(</span>H<span class="sym">,</span> Nx<span class="sym">)</span> <span class="kwa">of</span>
      <span class="sym">[] -&gt;</span>    <span class="kwd">dolookups</span><span class="sym">(</span>I<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> C<span class="sym">,</span> H<span class="sym">);</span>
      Found <span class="sym">-&gt;</span> <span class="kwd">dolookups</span><span class="sym">(</span>I<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> H<span class="sym">)</span>
   <span class="kwa">end</span>.
