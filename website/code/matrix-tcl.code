<span class="slc">#!/usr/bin/tclsh</span>
<span class="slc"># $Id: matrix-tcl.code,v 1.6 2005-11-06 23:11:15 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="slc"># This program based on the original from:</span>
<span class="slc"># &quot;The What, Why, Who, and Where of Python&quot; By Aaron R. Watters</span>
<span class="slc"># http://www.networkcomputing.com/unixworld/tutorial/005/005.html</span>

<span class="slc"># modified to avoid matrix size checks</span>
<span class="slc"># --Doug</span>

<span class="slc"># additional speedups by Kristoffer Lawson and Miguel Sofer</span>

<span class="kwa">set</span> size <span class="num">30</span>

<span class="kwa">proc</span> mkmatrix <span class="sym">{</span>rows cols<span class="sym">} {</span>
    <span class="kwa">set</span> count <span class="num">0</span>
    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="kwb">$rows</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span>
	<span class="kwa">set</span> row <span class="sym">{}</span>
	<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> j <span class="num">0</span><span class="sym">} {</span><span class="kwb">$j</span> <span class="sym">&lt;</span> <span class="kwb">$cols</span><span class="sym">} {</span><span class="kwa">incr</span> j<span class="sym">} {</span><span class="kwa">lappend</span> row <span class="sym">[</span><span class="kwa">incr</span> count<span class="sym">]}</span>
	<span class="kwa">lappend</span> mx <span class="kwb">$row</span>
    <span class="sym">}</span>
    <span class="kwa">return</span> <span class="kwb">$mx</span>
<span class="sym">}</span>

<span class="kwa">proc</span> mmult <span class="sym">{</span>m1 m2<span class="sym">} {</span>
    <span class="kwa">set</span> cols <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$m1</span> <span class="num">0</span><span class="sym">]</span>
    <span class="kwa">foreach</span> row1 <span class="kwb">$m1</span> <span class="sym">{</span>
	<span class="kwa">foreach</span> <span class="sym">{</span>row i<span class="sym">} {{}</span> <span class="num">0</span><span class="sym">}</span> <span class="kwa">break</span>
	<span class="kwa">foreach</span> <span class="sym">-</span> <span class="kwb">$cols</span> <span class="sym">{</span>
	    <span class="kwa">set</span> elem <span class="num">0</span>
	    <span class="kwa">foreach</span> elem1 <span class="kwb">$row1</span> row2 <span class="kwb">$m2</span> <span class="sym">{</span>
		<span class="kwa">incr</span> elem <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$elem1</span> <span class="sym">* [</span><span class="kwa">lindex</span> <span class="kwb">$row2 $i</span><span class="sym">]}]</span>
	    <span class="sym">}</span>
	    <span class="kwa">lappend</span> row <span class="kwb">$elem</span>
	    <span class="kwa">incr</span> i
	<span class="sym">}</span>
	<span class="kwa">lappend</span> result <span class="kwb">$row</span>
    <span class="sym">}</span>
    <span class="kwa">return</span> <span class="kwb">$result</span>
<span class="sym">}</span>

<span class="kwa">proc</span> main <span class="sym">{</span>n<span class="sym">} {</span>
    <span class="kwa">set</span> m1 <span class="sym">[</span>mkmatrix $<span class="sym">::</span>size $<span class="sym">::</span>size<span class="sym">]</span>
    <span class="kwa">set</span> m2 <span class="sym">[</span>mkmatrix $<span class="sym">::</span>size $<span class="sym">::</span>size<span class="sym">]</span>
    <span class="kwa">while</span> <span class="sym">{[</span><span class="kwa">incr</span> n <span class="sym">-</span><span class="num">1</span><span class="sym">] &gt; -</span><span class="num">1</span><span class="sym">} {</span><span class="kwa">set</span> m <span class="sym">[</span>mmult <span class="kwb">$m1 $m2</span><span class="sym">]}</span>

    <span class="kwa">puts</span> <span class="str">&quot;[lindex $m 0 0] [lindex $m 2 3] [lindex $m 3 2] [lindex $m 4 4]&quot;</span>
<span class="sym">}</span>

<span class="kwa">set</span> N <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]</span>
<span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$N</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">} {</span><span class="kwa">set</span> N <span class="num">1</span><span class="sym">}</span>
main <span class="kwb">$N</span>
