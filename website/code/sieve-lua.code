<span class="slc">-- $Id: sieve-lua.code,v 1.5 2005-04-04 14:58:11 bfulgham Exp $
</span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="slc">--
</span><span class="slc">-- Roberto Ierusalimschy pointed out the for loop is much
</span><span class="slc">-- faster for our purposes here than using a while loop.
</span>
<span class="kwa">function</span> main<span class="sym">(</span>num<span class="sym">)
</span>    <span class="kwa">local</span> flags <span class="sym">= {}
</span>    <span class="kwa">for</span> num<span class="sym">=</span>num<span class="sym">,</span><span class="num">1</span><span class="sym">,-</span><span class="num">1</span> <span class="kwa">do
</span>	count <span class="sym">=</span> <span class="num">0
</span>	<span class="kwa">for</span> i<span class="sym">=</span><span class="num">2</span><span class="sym">,</span><span class="num">8192</span> <span class="kwa">do
</span>	    flags<span class="sym">[</span>i<span class="sym">] =</span> <span class="num">1
</span>	<span class="kwa">end
	for</span> i<span class="sym">=</span><span class="num">2</span><span class="sym">,</span><span class="num">8192</span> <span class="kwa">do
	    if</span> flags<span class="sym">[</span>i<span class="sym">] ==</span> <span class="num">1</span> <span class="kwa">then
	        for</span> k<span class="sym">=</span>i<span class="sym">+</span>i<span class="sym">,</span> <span class="num">8192</span><span class="sym">,</span> i <span class="kwa">do
</span>		    flags<span class="sym">[</span>k<span class="sym">] =</span> <span class="num">0
</span>		<span class="kwa">end
</span>	        count <span class="sym">=</span> count <span class="sym">+</span> <span class="num">1
</span>	    <span class="kwa">end
	end
    end
end

</span>NUM <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">((</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span> <span class="kwa">or</span> <span class="num">1
</span>count <span class="sym">=</span> <span class="num">0
</span>main<span class="sym">(</span>NUM<span class="sym">)
</span>io.<span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;Count: &quot;</span><span class="sym">,</span> count<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">)</span>
