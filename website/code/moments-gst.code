<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<B><FONT COLOR="#BC8F8F">&quot;  The Great Computer Language Shootout
   contributed by Isaac Gouy

   To run: gst -QI /usr/local/share/smalltalk/gst.im moments.st &lt; input.txt 
&quot;</FONT></B>

!Float methodsFor: <B><FONT COLOR="#BC8F8F">'printing'</FONT></B>!

printStringRoundedTo: anInteger
   | n <B><FONT COLOR="#A020F0">s</FONT></B> |
   n := 0.5d * (10 raisedToInteger: anInteger negated).
   <B><FONT COLOR="#A020F0">s</FONT></B> := ((self sign &lt; 0) ifTrue: [self - n] ifFalse: [self + n]) printString.
   ^<B><FONT COLOR="#A020F0">s</FONT></B> copyFrom: 1 to: (<B><FONT COLOR="#A020F0">s</FONT></B> indexOf: $.) + anInteger ! !  



| stream numbers sum n mean dev adev dev2 
  variance skew kurtosis sdev mid median |  

stream := FileStream stdin bufferSize: 4096.
numbers := (stream splitAt: Character nl) collect: [:<B><FONT COLOR="#A020F0">each</FONT></B>| <B><FONT COLOR="#A020F0">each</FONT></B> asNumber].

n := numbers size.
sum := numbers inject: 0.0 into: [:i :<B><FONT COLOR="#A020F0">each</FONT></B>| i + <B><FONT COLOR="#A020F0">each</FONT></B>].
dev := adev := variance := skew := kurtosis := 0.0d.         
mean := sum / n. 
  
numbers <B><FONT COLOR="#A020F0">do</FONT></B>: [:<B><FONT COLOR="#A020F0">each</FONT></B>|
   dev := <B><FONT COLOR="#A020F0">each</FONT></B> - mean.   
   adev := adev + (dev <B><FONT COLOR="#A020F0">abs</FONT></B>).   
   variance := variance + (dev2 := dev * dev). 
   skew := skew + (dev2 * dev).
   kurtosis := kurtosis + (dev2 * dev2).            
].

adev := adev / n.   
variance := variance / (n - 1).     
sdev := variance <B><FONT COLOR="#A020F0">sqrt</FONT></B>.

variance ~= 0 
   ifTrue: 
     [skew := skew / (n * variance * sdev).  
      kurtosis := kurtosis / (n * variance * variance) - 3.0d.
     ]. 

numbers := numbers asSortedCollection: [:a :b| a &lt; b].
mid := n // 2.      
median := (n \\ 2) ~= 0
   ifTrue: [numbers at: mid]
   ifFalse: [((numbers at: mid) + (numbers at: mid + 1)) / 2.0d].

Transcript
   nextPutAll: <B><FONT COLOR="#BC8F8F">'n:                  '</FONT></B>; 
   nextPutAll: n displayString; nl;     

   nextPutAll: <B><FONT COLOR="#BC8F8F">'median:             '</FONT></B>; 
   nextPutAll: (median printStringRoundedTo: 6) displayString; nl;  
       
   nextPutAll: <B><FONT COLOR="#BC8F8F">'mean:               '</FONT></B>;  
   nextPutAll: (mean printStringRoundedTo: 6) displayString; nl; 
      
   nextPutAll: <B><FONT COLOR="#BC8F8F">'average_deviation:  '</FONT></B>;  
   nextPutAll: (adev printStringRoundedTo: 6) displayString; nl; 
           
   nextPutAll: <B><FONT COLOR="#BC8F8F">'standard_deviation: '</FONT></B>;  
   nextPutAll: (sdev printStringRoundedTo: 6) displayString; nl;   
    
   nextPutAll: <B><FONT COLOR="#BC8F8F">'variance:           '</FONT></B>;   
   nextPutAll: (variance printStringRoundedTo: 6) displayString; nl; 
      
   nextPutAll: <B><FONT COLOR="#BC8F8F">'skew:               '</FONT></B>;       
   nextPutAll: (skew printStringRoundedTo: 6) displayString; nl; 
 
   nextPutAll: <B><FONT COLOR="#BC8F8F">'kurtosis:           '</FONT></B>; 
   nextPutAll: (kurtosis printStringRoundedTo: 6) displayString; nl ! </pre></td></tr></table>
