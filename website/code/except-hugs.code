<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: except-hugs.code,v 1.1 2004-11-02 08:52:30 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org
</FONT></I><I><FONT COLOR="#B22222">--
</FONT></I><I><FONT COLOR="#B22222">-- from Simon Marlow
</FONT></I>
<B><FONT COLOR="#A020F0">import</FONT></B> System
<B><FONT COLOR="#A020F0">import</FONT></B> Control.Exception as Exception
<B><FONT COLOR="#A020F0">import</FONT></B> Data.IORef

blowup n | even n    = throw (ErrorCall <B><FONT COLOR="#BC8F8F">&quot;H&quot;</FONT></B>)
	 | otherwise = throw (ErrorCall <B><FONT COLOR="#BC8F8F">&quot;L&quot;</FONT></B>)

lo_function lo n = 
  Exception.catch (blowup n) $
    \ex -&gt; <B><FONT COLOR="#A020F0">case</FONT></B> ex <B><FONT COLOR="#A020F0">of</FONT></B>
		ErrorCall <B><FONT COLOR="#BC8F8F">&quot;L&quot;</FONT></B> -&gt; do nlo &lt;- readIORef lo
				    writeIORef lo $! (nlo + 1)
		<B><FONT COLOR="#A020F0">_ </FONT></B>-&gt; throw ex

hi_function hi lo n = 
  Exception.catch (lo_function lo n) $
    \ex -&gt; <B><FONT COLOR="#A020F0">case</FONT></B> ex <B><FONT COLOR="#A020F0">of</FONT></B>
		ErrorCall <B><FONT COLOR="#BC8F8F">&quot;H&quot;</FONT></B> -&gt; do nhi &lt;- readIORef hi
				    writeIORef hi $! (nhi + 1)
		<B><FONT COLOR="#A020F0">_ </FONT></B>-&gt; throw ex

some_function hi lo n = hi_function hi lo n

main = do
  [arg] &lt;- getArgs
  <B><FONT COLOR="#A020F0">let</FONT></B> n = read arg <B><FONT COLOR="#228B22">:: Int
</FONT></B>  hi &lt;- newIORef (0 <B><FONT COLOR="#228B22">:: Int)
</FONT></B>  lo &lt;- newIORef (0 <B><FONT COLOR="#228B22">:: Int)
</FONT></B>  mapM_ (some_function hi lo) [n,n-1..1]
  nhi &lt;- readIORef hi
  nlo &lt;- readIORef lo
  putStrLn (<B><FONT COLOR="#BC8F8F">&quot;Exceptions: HI=&quot;</FONT></B> ++ show nhi ++ <B><FONT COLOR="#BC8F8F">&quot; / LO=&quot;</FONT></B> ++ show nlo)
</pre></td></tr></table>
