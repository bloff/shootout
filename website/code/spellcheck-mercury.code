<span class="slc">% ---------------------------------------------------------------------------- %</span>
<span class="slc">% spellcheck.m</span>
<span class="slc">% Ralph Becket &lt;rbeck&#64;microsoft.com&gt;</span>
<span class="slc">% Tue Jan  9 16:43:59 GMT 2001</span>
<span class="slc">% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix</span>
<span class="slc">%</span>
<span class="slc">% ---------------------------------------------------------------------------- %</span>

<span class="sym">:-</span> module mytest.

<span class="sym">:-</span> interface.

<span class="sym">:-</span> import_module io.



<span class="sym">:-</span> pred main<span class="sym">(</span>io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="sym">:-</span> mode main<span class="sym">(</span>di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.



<span class="sym">:-</span> implementation.

<span class="sym">:-</span> import_module map<span class="sym">,</span> int<span class="sym">,</span> list<span class="sym">,</span> string<span class="sym">,</span> require<span class="sym">,</span> std_util<span class="sym">,</span> char.



<span class="sym">:-</span> type dict <span class="sym">==</span> map<span class="sym">(</span>string<span class="sym">,</span> unit<span class="sym">)</span>.



main <span class="sym">--&gt;</span>
    io__see<span class="sym">(</span><span class="str">&quot;Usr.Dict.Words&quot;</span><span class="sym">,</span> Res<span class="sym">),</span>
    <span class="sym">(   {</span> Res <span class="sym">=</span> ok <span class="sym">},</span>           read_dictionary<span class="sym">(</span>map__init<span class="sym">,</span> Dict<span class="sym">)</span>
    <span class="sym">;   {</span> Res <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) }, {</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }</span>
    <span class="sym">),</span>
    io__seen<span class="sym">,</span>
    find_errors<span class="sym">(</span>Dict<span class="sym">)</span>.



<span class="sym">:-</span> pred read_dictionary<span class="sym">(</span>dict<span class="sym">,</span> dict<span class="sym">,</span> io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="sym">:-</span> mode read_dictionary<span class="sym">(</span>in<span class="sym">,</span> out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.

read_dictionary<span class="sym">(</span>D0<span class="sym">,</span> D<span class="sym">) --&gt;</span>
    io__read_line_as_string<span class="sym">(</span>Result<span class="sym">),</span>
    <span class="sym">(</span>
        <span class="sym">{</span> Result <span class="sym">=</span> ok<span class="sym">(</span>Line<span class="sym">) },</span>
        <span class="sym">{</span> Words  <span class="sym">=</span> string__words<span class="sym">(</span>char__is_whitespace<span class="sym">,</span> Line<span class="sym">) },</span>
        <span class="sym">{</span> D1     <span class="sym">=</span> list__foldl<span class="sym">(</span>func<span class="sym">(</span>W<span class="sym">,</span> M<span class="sym">) =</span> M ^ elem<span class="sym">(</span>W<span class="sym">) :=</span> unit<span class="sym">,</span> Words<span class="sym">,</span> D0<span class="sym">) },</span>
        read_dictionary<span class="sym">(</span>D1<span class="sym">,</span> D<span class="sym">)</span>
    <span class="sym">;</span>
        <span class="sym">{</span> Result <span class="sym">=</span> eof <span class="sym">},</span>
        <span class="sym">{</span> D      <span class="sym">=</span> D0 <span class="sym">}</span>
    <span class="sym">;</span>
        <span class="sym">{</span> Result <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) },</span>
        <span class="sym">{</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }</span>
    <span class="sym">)</span>.



<span class="sym">:-</span> pred find_errors<span class="sym">(</span>dict<span class="sym">,</span> io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="sym">:-</span> mode find_errors<span class="sym">(</span>in<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.

find_errors<span class="sym">(</span>D<span class="sym">) --&gt;</span>
    io__read_line_as_string<span class="sym">(</span>Result<span class="sym">),</span>
    <span class="sym">(</span>
        <span class="sym">{</span> Result <span class="sym">=</span> ok<span class="sym">(</span>Line<span class="sym">) },</span>
        <span class="sym">{</span> Words  <span class="sym">=</span> string__words<span class="sym">(</span>char__is_whitespace<span class="sym">,</span> Line<span class="sym">) },</span>
        list__foldl<span class="sym">(</span>
            <span class="sym">(</span> pred<span class="sym">(</span>S<span class="sym">::</span>in<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det <span class="sym">--&gt;</span>
                <span class="sym">(</span> if <span class="sym">{</span> map__contains<span class="sym">(</span>D<span class="sym">,</span> S<span class="sym">) }</span>
                  then <span class="sym">[]</span>
                  else io__write_string<span class="sym">(</span>S<span class="sym">),</span> io__nl
                <span class="sym">)</span>
            <span class="sym">),</span>
            Words
        <span class="sym">),</span>
        find_errors<span class="sym">(</span>D<span class="sym">)</span>
    <span class="sym">;</span>
        <span class="sym">{</span> Result <span class="sym">=</span> eof <span class="sym">}</span>
    <span class="sym">;</span>
        <span class="sym">{</span> Result <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) },</span>
        <span class="sym">{</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }</span>
    <span class="sym">)</span>.
