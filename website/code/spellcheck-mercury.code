<span class="line">    1 </span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">% spellcheck.m
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">% Ralph Becket &lt;rbeck&#64;microsoft.com&gt;
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">% Tue Jan  9 16:43:59 GMT 2001
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">%
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="sym">:-</span> module mytest.
<span class="line">   10 </span>
<span class="line">   11 </span><span class="sym">:-</span> interface.
<span class="line">   12 </span>
<span class="line">   13 </span><span class="sym">:-</span> import_module io.
<span class="line">   14 </span>
<span class="line">   15 </span>
<span class="line">   16 </span>
<span class="line">   17 </span><span class="sym">:-</span> pred main<span class="sym">(</span>io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="line">   18 </span><span class="sym">:-</span> mode main<span class="sym">(</span>di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   19 </span>
<span class="line">   20 </span>
<span class="line">   21 </span>
<span class="line">   22 </span><span class="sym">:-</span> implementation.
<span class="line">   23 </span>
<span class="line">   24 </span><span class="sym">:-</span> import_module map<span class="sym">,</span> int<span class="sym">,</span> list<span class="sym">,</span> string<span class="sym">,</span> require<span class="sym">,</span> std_util<span class="sym">,</span> char.
<span class="line">   25 </span>
<span class="line">   26 </span>
<span class="line">   27 </span>
<span class="line">   28 </span><span class="sym">:-</span> type dict <span class="sym">==</span> map<span class="sym">(</span>string<span class="sym">,</span> unit<span class="sym">)</span>.
<span class="line">   29 </span>
<span class="line">   30 </span>
<span class="line">   31 </span>
<span class="line">   32 </span>main <span class="sym">--&gt;
</span><span class="line">   33 </span><span class="sym"></span>    io__see<span class="sym">(</span><span class="str">&quot;Usr.Dict.Words&quot;</span><span class="sym">,</span> Res<span class="sym">),
</span><span class="line">   34 </span><span class="sym">    (   {</span> Res <span class="sym">=</span> ok <span class="sym">},</span>           read_dictionary<span class="sym">(</span>map__init<span class="sym">,</span> Dict<span class="sym">)
</span><span class="line">   35 </span><span class="sym">    ;   {</span> Res <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) }, {</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }
</span><span class="line">   36 </span><span class="sym">    ),
</span><span class="line">   37 </span><span class="sym"></span>    io__seen<span class="sym">,
</span><span class="line">   38 </span><span class="sym"></span>    find_errors<span class="sym">(</span>Dict<span class="sym">)</span>.
<span class="line">   39 </span>
<span class="line">   40 </span>
<span class="line">   41 </span>
<span class="line">   42 </span><span class="sym">:-</span> pred read_dictionary<span class="sym">(</span>dict<span class="sym">,</span> dict<span class="sym">,</span> io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="line">   43 </span><span class="sym">:-</span> mode read_dictionary<span class="sym">(</span>in<span class="sym">,</span> out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   44 </span>
<span class="line">   45 </span>read_dictionary<span class="sym">(</span>D0<span class="sym">,</span> D<span class="sym">) --&gt;
</span><span class="line">   46 </span><span class="sym"></span>    io__read_line_as_string<span class="sym">(</span>Result<span class="sym">),
</span><span class="line">   47 </span><span class="sym">    (
</span><span class="line">   48 </span><span class="sym">        {</span> Result <span class="sym">=</span> ok<span class="sym">(</span>Line<span class="sym">) },
</span><span class="line">   49 </span><span class="sym">        {</span> Words  <span class="sym">=</span> string__words<span class="sym">(</span>char__is_whitespace<span class="sym">,</span> Line<span class="sym">) },
</span><span class="line">   50 </span><span class="sym">        {</span> D1     <span class="sym">=</span> list__foldl<span class="sym">(</span>func<span class="sym">(</span>W<span class="sym">,</span> M<span class="sym">) =</span> M ^ elem<span class="sym">(</span>W<span class="sym">) :=</span> unit<span class="sym">,</span> Words<span class="sym">,</span> D0<span class="sym">) },
</span><span class="line">   51 </span><span class="sym"></span>        read_dictionary<span class="sym">(</span>D1<span class="sym">,</span> D<span class="sym">)
</span><span class="line">   52 </span><span class="sym">    ;
</span><span class="line">   53 </span><span class="sym">        {</span> Result <span class="sym">=</span> eof <span class="sym">},
</span><span class="line">   54 </span><span class="sym">        {</span> D      <span class="sym">=</span> D0 <span class="sym">}
</span><span class="line">   55 </span><span class="sym">    ;
</span><span class="line">   56 </span><span class="sym">        {</span> Result <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) },
</span><span class="line">   57 </span><span class="sym">        {</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }
</span><span class="line">   58 </span><span class="sym">    )</span>.
<span class="line">   59 </span>
<span class="line">   60 </span>
<span class="line">   61 </span>
<span class="line">   62 </span><span class="sym">:-</span> pred find_errors<span class="sym">(</span>dict<span class="sym">,</span> io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="line">   63 </span><span class="sym">:-</span> mode find_errors<span class="sym">(</span>in<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   64 </span>
<span class="line">   65 </span>find_errors<span class="sym">(</span>D<span class="sym">) --&gt;
</span><span class="line">   66 </span><span class="sym"></span>    io__read_line_as_string<span class="sym">(</span>Result<span class="sym">),
</span><span class="line">   67 </span><span class="sym">    (
</span><span class="line">   68 </span><span class="sym">        {</span> Result <span class="sym">=</span> ok<span class="sym">(</span>Line<span class="sym">) },
</span><span class="line">   69 </span><span class="sym">        {</span> Words  <span class="sym">=</span> string__words<span class="sym">(</span>char__is_whitespace<span class="sym">,</span> Line<span class="sym">) },
</span><span class="line">   70 </span><span class="sym"></span>        list__foldl<span class="sym">(
</span><span class="line">   71 </span><span class="sym">            (</span> pred<span class="sym">(</span>S<span class="sym">::</span>in<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det <span class="sym">--&gt;
</span><span class="line">   72 </span><span class="sym">                (</span> if <span class="sym">{</span> map__contains<span class="sym">(</span>D<span class="sym">,</span> S<span class="sym">) }
</span><span class="line">   73 </span><span class="sym"></span>                  then <span class="sym">[]
</span><span class="line">   74 </span><span class="sym"></span>                  else io__write_string<span class="sym">(</span>S<span class="sym">),</span> io__nl
<span class="line">   75 </span>                <span class="sym">)
</span><span class="line">   76 </span><span class="sym">            ),
</span><span class="line">   77 </span><span class="sym"></span>            Words
<span class="line">   78 </span>        <span class="sym">),
</span><span class="line">   79 </span><span class="sym"></span>        find_errors<span class="sym">(</span>D<span class="sym">)
</span><span class="line">   80 </span><span class="sym">    ;
</span><span class="line">   81 </span><span class="sym">        {</span> Result <span class="sym">=</span> eof <span class="sym">}
</span><span class="line">   82 </span><span class="sym">    ;
</span><span class="line">   83 </span><span class="sym">        {</span> Result <span class="sym">=</span> error<span class="sym">(</span>ErrNo<span class="sym">) },
</span><span class="line">   84 </span><span class="sym">        {</span> error<span class="sym">(</span>io__error_message<span class="sym">(</span>ErrNo<span class="sym">)) }
</span><span class="line">   85 </span><span class="sym">    )</span>.
