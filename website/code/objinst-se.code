<span class="slc">-- -*- mode: eiffel -*-</span>
<span class="slc">-- $Id: objinst-se.code,v 1.8 2005-11-15 08:27:32 bfulgham Exp $</span>
<span class="slc">-- http://www.bagley.org/~doug/shootout/</span>
<span class="slc">-- from Steve Thompson</span>

<span class="slc">-- &lt;LOC-OFF&gt;</span>
<span class="slc">--indexing</span>
<span class="slc">--   description: &quot;This class is the entry point for the instantiation performance test&quot;</span>
<span class="slc">--   author : Steve Thompson</span>
<span class="slc">--   email  : &quot;Steve_Thompson&#64;prodigy.net&quot;</span>
<span class="slc">--   date   : February 18, 2001</span>
<span class="slc">--   compile: &quot;compile -clean -boost -no_split -O3 main.e -o main&quot;</span>
<span class="slc">--   run    : &quot;main 400000&quot;</span>
<span class="slc">-- &lt;LOC-ON&gt;</span>

<span class="kwa">class</span> OBJINST

creation make

<span class="kwa">feature</span> <span class="slc">-- Print Formatting</span>

   <span class="kwd">format_out</span><span class="sym">(</span>state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">):</span> STRING <span class="kwa">is</span>
     <span class="kwa">do</span>
        <span class="kwa">if</span> state <span class="kwa">then</span>
	   <span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwa">once</span> <span class="str">&quot;true&quot;</span>
	<span class="kwa">else</span>
	   <span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwa">once</span> <span class="str">&quot;false&quot;</span>
	<span class="kwa">end</span>
     <span class="kwa">end</span>

<span class="kwa">feature</span> <span class="slc">-- Creation</span>

   make <span class="kwa">is</span>
      <span class="kwa">local</span>
	 index<span class="sym">:</span> <span class="kwb">INTEGER</span>
	 n<span class="sym">:</span> <span class="kwb">INTEGER</span>
	 toggle<span class="sym">:</span> TOGGLE
	 nth_toggle<span class="sym">:</span> NTH_TOGGLE
      <span class="kwa">do</span>
	 <span class="kwa">if</span> argument_count <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span>
	    n <span class="sym">:=</span> <span class="num">1</span>
	 <span class="kwa">else</span>
	    n <span class="sym">:=</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
	 <span class="kwa">end</span>

	 <span class="sym">!!</span>toggle.<span class="kwd">make</span><span class="sym">(</span><span class="kwa">True</span><span class="sym">)</span>
	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> <span class="num">5</span> <span class="kwa">loop</span>
	    <span class="kwd">print</span><span class="sym">(</span><span class="kwd">format_out</span><span class="sym">(</span>toggle.activate.value<span class="sym">))</span>
	    <span class="kwd">print</span><span class="sym">(</span><span class="kwa">once</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">end</span>
	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> n <span class="kwa">loop</span>
	    <span class="sym">!!</span>toggle.<span class="kwd">make</span><span class="sym">(</span><span class="kwa">True</span><span class="sym">)</span>
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">end</span>

	 <span class="kwd">print</span><span class="sym">(</span><span class="kwa">once</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>

	 <span class="sym">!!</span>nth_toggle.<span class="kwd">make</span><span class="sym">(</span><span class="kwa">True</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)</span>
	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> <span class="num">8</span> <span class="kwa">loop</span>
	    <span class="kwd">print</span><span class="sym">(</span><span class="kwd">format_out</span><span class="sym">(</span>nth_toggle.activate.value<span class="sym">))</span>
	    <span class="kwd">print</span><span class="sym">(</span><span class="kwa">once</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">end</span>
	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> n <span class="kwa">loop</span>
	    <span class="sym">!!</span>nth_toggle.<span class="kwd">make</span><span class="sym">(</span><span class="kwa">True</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)</span>
	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">end</span>

      <span class="kwa">end</span> <span class="slc">-- make</span>

<span class="kwa">end</span>
