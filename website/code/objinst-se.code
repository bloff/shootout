<span class="slc">-- -*- mode: eiffel -*-
</span><span class="slc">-- $Id: objinst-se.code,v 1.5 2005-03-29 08:48:37 bfulgham Exp $
</span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="slc">-- from Steve Thompson
</span>
<span class="slc">-- &lt;LOC-OFF&gt;
</span><span class="kwa">indexing
</span>   description<span class="sym">:</span> <span class="str">&quot;This class is the entry point for the instantiation performance test&quot;</span>
   author <span class="sym">:</span> Steve Thompson
   email  <span class="sym">:</span> <span class="str">&quot;Steve_Thompson&#64;prodigy.net&quot;</span>
   date   <span class="sym">:</span> February <span class="num">18</span><span class="sym">,</span> <span class="num">2001
</span>   compile<span class="sym">:</span> <span class="str">&quot;compile -clean -boost -no_split -O3 main.e -o main&quot;</span>
   run    <span class="sym">:</span> <span class="str">&quot;main 400000&quot;</span>
<span class="slc">-- &lt;LOC-ON&gt;
</span>
<span class="kwa">class</span> OBJINST

creation make

<span class="kwa">feature</span> <span class="slc">-- Print Formatting
</span>
   format_out<span class="sym">(</span>state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">):</span> STRING <span class="kwa">is
     do
        if</span> state <span class="kwa">then
	   Result</span> <span class="sym">:=</span> <span class="kwa">once</span> <span class="str">&quot;true&quot;</span>
	<span class="kwa">else
	   Result</span> <span class="sym">:=</span> <span class="kwa">once</span> <span class="str">&quot;false&quot;</span>
	<span class="kwa">end
     end

feature</span> <span class="slc">-- Creation
</span>
   make <span class="kwa">is
      local
</span>	 index<span class="sym">:</span> <span class="kwb">INTEGER
</span>	 n<span class="sym">:</span> <span class="kwb">INTEGER
</span>	 toggle<span class="sym">:</span> TOGGLE
	 nth_toggle<span class="sym">:</span> NTH_TOGGLE
      <span class="kwa">do
	 if</span> argument_count <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
</span>	    n <span class="sym">:=</span> <span class="num">1
</span>	 <span class="kwa">else
</span>	    n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
	 <span class="kwa">end

</span>	 <span class="sym">!!</span>toggle.make<span class="sym">(</span><span class="kwa">True</span><span class="sym">)
</span>	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> <span class="num">5</span> <span class="kwa">loop
</span>	    print<span class="sym">(</span>format_out<span class="sym">(</span>toggle.activate.value<span class="sym">))
</span>	    print<span class="sym">(</span><span class="kwa">once</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span>	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end
	 from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> n <span class="kwa">loop
</span>	    <span class="sym">!!</span>toggle.make<span class="sym">(</span><span class="kwa">True</span><span class="sym">)
</span>	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end

</span>	 print<span class="sym">(</span><span class="kwa">once</span> <span class="str">&quot;%N&quot;</span><span class="sym">)

	 !!</span>nth_toggle.make<span class="sym">(</span><span class="kwa">True</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span>	 <span class="kwa">from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> <span class="num">8</span> <span class="kwa">loop
</span>	    print<span class="sym">(</span>format_out<span class="sym">(</span>nth_toggle.activate.value<span class="sym">))
</span>	    print<span class="sym">(</span><span class="kwa">once</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span>	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end
	 from</span> index <span class="sym">:=</span> <span class="num">0</span> until index <span class="sym">=</span> n <span class="kwa">loop
</span>	    <span class="sym">!!</span>nth_toggle.make<span class="sym">(</span><span class="kwa">True</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span>	    index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end

      end</span> <span class="slc">-- make
</span>
<span class="kwa">end</span>
