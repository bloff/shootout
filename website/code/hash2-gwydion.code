<span class="line">    1 </span><span class="kwb">module</span><span class="sym">:</span>         hash2
<span class="line">    2 </span><span class="kwb">synopsis</span><span class="sym">:</span>       implementation of <span class="str">&quot;Hashes, Part II&quot;</span> benchmark
<span class="line">    3 </span><span class="kwb">author</span><span class="sym">:</span>         Peter Hinely
<span class="line">    4 </span><span class="kwb">copyright</span><span class="sym">:</span>      public <span class="kwa">domain
</span><span class="line">    5 </span><span class="kwa">use</span><span class="sym">-</span>libraries<span class="sym">:</span>  common<span class="sym">-</span>dylan<span class="sym">,</span> table<span class="sym">-</span>extensions<span class="sym">,</span> format<span class="sym">-</span>out
<span class="line">    6 </span><span class="kwa">use</span><span class="sym">-</span>modules<span class="sym">:</span>    common<span class="sym">-</span>dylan<span class="sym">,</span> table<span class="sym">-</span>extensions<span class="sym">,</span> format<span class="sym">-</span>out
<span class="line">    7 </span>
<span class="line">    8 </span>
<span class="line">    9 </span><span class="kwa">define function</span> main <span class="sym">() =</span>&gt; <span class="sym">()
</span><span class="line">   10 </span><span class="sym"></span>  <span class="kwa">let</span> arg <span class="sym">=</span> string<span class="sym">-</span><span class="kwa">to</span><span class="sym">-</span>integer<span class="sym">(</span>element<span class="sym">(</span>application<span class="sym">-</span>arguments<span class="sym">(),</span> <span class="num">0</span><span class="sym">,</span> default<span class="sym">:</span> <span class="str">&quot;1&quot;</span><span class="sym">));
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym"></span>  <span class="kwa">let</span> table1 <span class="sym">=</span> make<span class="sym">(</span><span class="kwa">&lt;case-insensitive-string-table&gt;</span><span class="sym">);
</span><span class="line">   13 </span><span class="sym"></span>  <span class="kwa">let</span> table2 <span class="sym">=</span> make<span class="sym">(</span><span class="kwa">&lt;case-insensitive-string-table&gt;</span><span class="sym">);
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span>  <span class="kwa">for</span> <span class="sym">(</span>i <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> <span class="num">10000</span><span class="sym">)
</span><span class="line">   16 </span><span class="sym"></span>    table1<span class="sym">[</span>concatenate<span class="sym">(</span><span class="str">&quot;foo_&quot;</span><span class="sym">,</span> integer<span class="sym">-</span><span class="kwa">to</span><span class="sym">-</span>string<span class="sym">(</span>i<span class="sym">))] :=</span> i<span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>  <span class="kwa">end</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym">
</span><span class="line">   19 </span><span class="sym"></span>  <span class="kwa">for</span> <span class="sym">(</span>i <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> arg<span class="sym">)
</span><span class="line">   20 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">(</span>value <span class="sym">::</span> <span class="kwa">&lt;integer&gt;</span> keyed<span class="sym">-</span><span class="kwa">by</span> key <span class="kwa">in</span> table1<span class="sym">)
</span><span class="line">   21 </span><span class="sym"></span>      <span class="kwa">let</span> found <span class="sym">::</span> <span class="kwa">&lt;integer&gt;</span> <span class="sym">=</span> element<span class="sym">(</span>table2<span class="sym">,</span> key<span class="sym">,</span> default<span class="sym">:</span> <span class="num">0</span><span class="sym">);
</span><span class="line">   22 </span><span class="sym"></span>      table2<span class="sym">[</span>key<span class="sym">] :=</span> found <span class="sym">+</span> value<span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>    <span class="kwa">end</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym"></span>  <span class="kwa">end</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym">
</span><span class="line">   26 </span><span class="sym"></span>  format<span class="sym">-</span>out<span class="sym">(</span><span class="str">&quot;%d %d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> table1<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">],</span> table1<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">],</span> table2<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">],</span> table2<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">]);
</span><span class="line">   27 </span><span class="sym"></span><span class="kwa">end function</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym">
</span><span class="line">   29 </span><span class="sym">
</span><span class="line">   30 </span><span class="sym"></span>main<span class="sym">();</span>
