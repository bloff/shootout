<span class="slc">// $Id: hash-elastic.code,v 1.5 2005-03-31 10:40:18 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span>package xhash<span class="sym">;

</span>import basic<span class="sym">;
</span>import sys<span class="sym">;
</span>import array<span class="sym">;
</span>import hash<span class="sym">;

</span><span class="kwc">private</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="kwc">private</span> i<span class="sym">;
</span><span class="kwc">private</span> c <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="kwc">private</span> X <span class="sym">= %[];

</span><span class="kwa">if</span><span class="sym">(</span>array<span class="sym">.</span>length<span class="sym">(</span>sys<span class="sym">.</span>args<span class="sym">) &gt;</span> <span class="num">0</span><span class="sym">) {
</span>    n <span class="sym">=</span> basic<span class="sym">.</span><span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
}</span> <span class="kwa">else</span> <span class="sym">{
</span>    n <span class="sym">=</span> <span class="num">1</span><span class="sym">;
}
</span><span class="kwa">for</span><span class="sym">(</span>i<span class="sym">=</span><span class="num">1</span><span class="sym">;</span> i<span class="sym">&lt;=</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>    X<span class="sym">[</span>basic<span class="sym">.</span>sprintf<span class="sym">(</span><span class="str">&quot;%x&quot;</span><span class="sym">,</span> i<span class="sym">)] =</span> i<span class="sym">;
}
</span><span class="kwa">for</span><span class="sym">(</span>i<span class="sym">=</span>n<span class="sym">;</span> i<span class="sym">&gt;</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">=</span>i<span class="num">-1</span><span class="sym">) {
</span>     <span class="kwa">if</span><span class="sym">(</span>hash<span class="sym">.</span>has_key<span class="sym">(</span>X<span class="sym">,</span> basic<span class="sym">.</span>sprintf<span class="sym">(</span><span class="str">&quot;%d&quot;</span><span class="sym">,</span> i<span class="sym">))) {
</span>        c <span class="sym">=</span> c <span class="sym">+</span> <span class="num">1</span><span class="sym">;
    }
}
</span>basic<span class="sym">.</span>print<span class="sym">(</span>c<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
