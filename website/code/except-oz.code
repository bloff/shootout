<span class="slc">%%% $Id: except-oz.code,v 1.8 2006-10-02 01:08:41 bfulgham Exp $</span>
<span class="slc">%%% http://dada.perl.it/shootout/</span>
<span class="slc">%%%</span>
<span class="slc">%%% contributed by Isaac Gouy</span>

<span class="slc">%%  Usage: start from command line with</span>
<span class="slc">%%     ozc -x except.oz -o except.oz.exe</span>
<span class="slc">%%     except.oz.exe 2000</span>

<span class="kwa">functor</span>
<span class="kwa">import</span> System Application

<span class="kwa">define</span>

   LoCount
   HiCount

   <span class="kwa">proc</span> <span class="sym">{</span>Blowup N<span class="sym">}</span>
      <span class="kwa">if</span> N mod <span class="num">2</span> <span class="sym">==</span> <span class="num">0</span> <span class="kwa">then raise</span> loException<span class="sym">()</span> <span class="kwa">end</span>
      <span class="kwa">else raise</span> hiException<span class="sym">()</span> <span class="kwa">end end</span>
   <span class="kwa">end</span>

   <span class="kwa">proc</span> <span class="sym">{</span>LoFun N<span class="sym">}</span>
      <span class="kwa">try</span> <span class="sym">{</span>Blowup N<span class="sym">}</span> <span class="kwa">catch</span>
     loException <span class="kwa">then</span> <span class="sym">{</span>Assign LoCount <span class="sym">{</span>Access LoCount<span class="sym">}+</span><span class="num">1</span><span class="sym">}</span>
      <span class="kwa">end</span>
   <span class="kwa">end</span>

   <span class="kwa">proc</span> <span class="sym">{</span>HiFun N<span class="sym">}</span>
      <span class="kwa">try</span> <span class="sym">{</span>LoFun N<span class="sym">}</span> <span class="kwa">catch</span>
     hiException <span class="kwa">then</span> <span class="sym">{</span>Assign HiCount <span class="sym">{</span>Access HiCount<span class="sym">}+</span><span class="num">1</span><span class="sym">}</span>
      <span class="kwa">end</span>
   <span class="kwa">end</span>

   <span class="kwa">proc</span> <span class="sym">{</span>SomeFun N<span class="sym">}</span>
      <span class="kwa">if</span> N <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">then</span>
     <span class="kwa">try</span> <span class="sym">{</span>HiFun N<span class="sym">}</span> <span class="kwa">catch</span>
        loException <span class="kwa">then</span> <span class="sym">{</span>System<span class="sym">.</span>showInfo <span class="str">'loException should not get here'</span><span class="sym">}</span>
        <span class="sym">[]</span> hiException <span class="kwa">then</span> <span class="sym">{</span>System<span class="sym">.</span>showInfo <span class="str">'hiException should not get here'</span><span class="sym">}</span>
     <span class="kwa">end</span>
     <span class="sym">{</span>SomeFun N<span class="sym">-</span><span class="num">1</span><span class="sym">}</span>
      <span class="kwa">end</span>
   <span class="kwa">end</span>
<span class="kwa">in</span>
   <span class="kwa">local</span> Args N <span class="kwa">in</span>
      <span class="sym">[</span>Args<span class="sym">] = {</span>Application<span class="sym">.</span>getArgs plain<span class="sym">}</span>
      N <span class="sym">= {</span>String<span class="sym">.</span>toInt Args<span class="sym">}</span>

      LoCount <span class="sym">= {</span>NewCell <span class="num">0</span><span class="sym">}</span>
      HiCount <span class="sym">= {</span>NewCell <span class="num">0</span><span class="sym">}</span>
      <span class="sym">{</span>SomeFun N<span class="sym">}</span>

      <span class="sym">{</span>System<span class="sym">.</span>printInfo &quot;Exceptions<span class="sym">:</span> HI<span class="sym">=</span>&quot;<span class="sym">}</span>
      <span class="sym">{</span>System<span class="sym">.</span>printInfo <span class="sym">{</span>Access HiCount<span class="sym">}}</span>
      <span class="sym">{</span>System<span class="sym">.</span>printInfo &quot; <span class="sym">/</span> LO<span class="sym">=</span>&quot;<span class="sym">}</span>
      <span class="sym">{</span>System<span class="sym">.</span>showInfo <span class="sym">{</span>Access LoCount<span class="sym">}}</span>
   <span class="kwa">end</span>
   <span class="sym">{</span>Application<span class="sym">.</span>exit <span class="num">0</span><span class="sym">}</span>
<span class="kwa">end</span>
