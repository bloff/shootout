<span class="com">(* fibo.sml
 *
 *   f(0)=0, f(1)=1, f(n+2)=f(n+1)+f(n)
 *   Exponential-time version of the algorithm...
 *
 * Copyright (c) 2005 by The Fellowship of SML/NJ
 *
 * Author: Matthias Blume (blume&#64;tti-c.org)
 *)</span>
<span class="kwa">structure</span> Test<span class="sym">:</span><span class="kwa">sig val</span> main<span class="sym">:</span><span class="kwb">string</span><span class="sym">*</span><span class="kwb">string</span> list<span class="sym">-&gt;</span>OS.Process.status <span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct

    fun</span> fib n <span class="sym">=</span> <span class="kwa">if</span> n<span class="sym">&lt;</span><span class="num">0w2</span> <span class="kwa">then</span> n <span class="kwa">else</span> fib<span class="sym">(</span>n<span class="num">-0w1</span><span class="sym">)+</span>fib<span class="sym">(</span>n<span class="num">-0w2</span><span class="sym">)

</span>    <span class="kwa">fun</span> main' n <span class="sym">= (</span>print <span class="sym">(</span><span class="kwa">Int</span>.toString<span class="sym">(</span><span class="kwa">Word</span>.toInt<span class="sym">(</span>fib n<span class="sym">))</span> ^ <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span> OS.Process.success<span class="sym">)
</span>    <span class="kwa">fun</span> main <span class="sym">(</span>_<span class="sym">, []) =</span> main' <span class="num">0w1
</span>      <span class="sym">|</span> main <span class="sym">(</span>_<span class="sym">,</span> arg <span class="sym">::</span> _<span class="sym">) =</span> main'<span class="sym">(</span><span class="kwa">Word</span>.fromInt<span class="sym">(</span>getOpt<span class="sym">(</span><span class="kwa">Int</span>.fromString arg<span class="sym">,</span><span class="num">1</span><span class="sym">)))
</span><span class="kwa">end</span>
