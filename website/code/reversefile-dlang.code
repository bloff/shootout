<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Dave Fladebo</span>
<span class="com">   compile: dmd -O -inline -release reversefile.d</span>
<span class="com">*/</span>

<span class="kwa">import</span> std<span class="sym">.</span>stream<span class="sym">;</span>

<span class="kwa">int</span> <span class="kwd">main</span><span class="sym">()</span>
<span class="sym">{</span>
    <span class="kwb">B</span>uffered<span class="kwb">S</span>tream bsi <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">B</span>uffered<span class="kwb">S</span>tream<span class="sym">(</span>stdin<span class="sym">,</span><span class="num">4096</span><span class="sym">);</span>
    <span class="kwa">char</span><span class="sym">[]</span> file <span class="sym">=</span> bsi<span class="sym">.</span><span class="kwd">toString</span><span class="sym">();</span>
    bsi<span class="sym">.</span><span class="kwd">close</span><span class="sym">();</span>

    <span class="kwa">int</span> len <span class="sym">=</span> file<span class="sym">.</span>length <span class="sym">-</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwb">B</span>uffered<span class="kwb">S</span>tream bso <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">B</span>uffered<span class="kwb">S</span>tream<span class="sym">(</span>stdout<span class="sym">,</span><span class="num">4096</span><span class="sym">);</span>
    <span class="kwa">for</span><span class="sym">(</span><span class="kwa">int</span> idx <span class="sym">=</span> len<span class="sym">;</span> idx <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">;</span> idx<span class="sym">--)</span>
    <span class="sym">{</span>
        <span class="kwa">char</span> c <span class="sym">=</span> file<span class="sym">[</span>idx<span class="sym">];</span>
        <span class="kwa">if</span><span class="sym">(</span>c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span> <span class="sym">||</span> idx <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span>
        <span class="sym">{</span>
            <span class="kwa">if</span><span class="sym">(</span>idx <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> idx<span class="sym">--;</span>
            <span class="kwa">if</span><span class="sym">(</span>idx <span class="sym">!=</span> len<span class="sym">)</span> bso<span class="sym">.</span><span class="kwd">write</span><span class="sym">(</span><span class="kwa">cast</span><span class="sym">(</span><span class="kwa">ubyte</span><span class="sym">[])</span>file<span class="sym">[</span>idx<span class="sym">+</span><span class="num">1</span><span class="sym">..</span>len<span class="sym">+</span><span class="num">1</span><span class="sym">]);</span>
            len <span class="sym">=</span> idx<span class="sym">;</span>
        <span class="sym">}</span>
    <span class="sym">}</span>
    bso<span class="sym">.</span><span class="kwd">close</span><span class="sym">();</span>

    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>
