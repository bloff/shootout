<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Dave Fladebo
   compile: dmd -O -inline -release reversefile.d
*/</span>

import std<span class="sym">.</span>stream<span class="sym">;

</span><span class="kwb">void</span> main<span class="sym">()
{
</span>    BufferedStream bsi <span class="sym">=</span> <span class="kwa">new</span> BufferedStream<span class="sym">(</span>stdin<span class="sym">,</span><span class="num">4096</span><span class="sym">);
</span>    <span class="kwb">char</span><span class="sym">[]</span> file <span class="sym">=</span> bsi<span class="sym">.</span>toString<span class="sym">();
</span>    bsi<span class="sym">.</span>close<span class="sym">();

</span>    <span class="kwb">int</span> len <span class="sym">=</span> file<span class="sym">.</span>length <span class="num">- 1</span><span class="sym">;
</span>    BufferedStream bso <span class="sym">=</span> <span class="kwa">new</span> BufferedStream<span class="sym">(</span>stdout<span class="sym">,</span><span class="num">4096</span><span class="sym">);
</span>    <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> idx <span class="sym">=</span> len<span class="sym">;</span> idx <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">;</span> idx<span class="sym">--)
    {
</span>        <span class="kwb">char</span> c <span class="sym">=</span> file<span class="sym">[</span>idx<span class="sym">];
</span>        <span class="kwa">if</span><span class="sym">(</span>c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span> <span class="sym">||</span> idx <span class="sym">==</span> <span class="num">0</span><span class="sym">)
        {
</span>            <span class="kwa">if</span><span class="sym">(</span>idx <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> idx<span class="sym">--;
</span>            <span class="kwa">if</span><span class="sym">(</span>idx <span class="sym">!=</span> len<span class="sym">)</span> bso<span class="sym">.</span>write<span class="sym">(</span>cast<span class="sym">(</span>ubyte<span class="sym">[])</span>file<span class="sym">[</span>idx<span class="sym">+</span><span class="num">1</span><span class="sym">..</span>len<span class="sym">+</span><span class="num">1</span><span class="sym">]);
</span>            len <span class="sym">=</span> idx<span class="sym">;
        }
    }
</span>    bso<span class="sym">.</span>close<span class="sym">();
}</span>
