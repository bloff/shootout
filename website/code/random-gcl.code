<span class="slc">;;; -*- mode: lisp -*-
</span><span class="slc">;;; $Id: random-gcl.code,v 1.7 2005-02-26 08:53:42 bfulgham Exp $
</span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="slc">;;; Chih-Chung Chang contributed better declarations to improve performance
</span><span class="slc">;;; Multi-lisp modifications by Brent Fulgham
</span>
<span class="sym">(</span>defconstant IM     <span class="num">139968</span><span class="sym">)
(</span>defconstant IA       <span class="num">3877</span><span class="sym">)
(</span>defconstant IC     <span class="num">29573</span><span class="sym">)

(</span>defvar THE_LAST <span class="num">42</span><span class="sym">)

(</span>declaim <span class="sym">(</span>inline gen_random<span class="sym">))
(</span><span class="kwa">defun</span> gen_random <span class="sym">(</span><span class="kwa">max</span><span class="sym">)
  (</span>declare <span class="sym">(</span><span class="kwa">type</span> <span class="sym">(</span>signed<span class="sym">-</span>byte <span class="num">32</span><span class="sym">)</span> IM IA IC THE_LAST<span class="sym">))
  (</span>declare <span class="sym">(</span>double<span class="sym">-</span><span class="kwa">float max</span><span class="sym">))
  (</span><span class="kwa">setq</span> THE_LAST <span class="sym">(</span>mod <span class="sym">(+ (</span>the fixnum <span class="sym">(*</span> THE_LAST IA<span class="sym">))</span> IC<span class="sym">)</span> IM<span class="sym">))
  (/ (*</span> <span class="kwa">max</span> THE_LAST<span class="sym">)</span> IM<span class="sym">))

(</span><span class="kwa">defun</span> main <span class="sym">()
  (</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> <span class="sym">(</span><span class="kwa">last</span> #<span class="sym">+</span>sbcl sb<span class="sym">-</span>ext<span class="sym">:*</span>posix<span class="sym">-</span>argv<span class="sym">*
</span>                                         #<span class="sym">+</span>cmu  extensions<span class="sym">:*</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>strings<span class="sym">*
</span>					 #<span class="sym">+</span>gcl  si<span class="sym">::*</span><span class="kwa">command</span><span class="sym">-</span>args<span class="sym">*))</span> <span class="str">&quot;1&quot;</span><span class="sym">))))
    (</span>loop for i fixnum from <span class="num">1</span> below n do
      <span class="sym">(</span>gen_random <span class="num">100.0d0</span><span class="sym">))
    (</span>format t <span class="str">&quot;~,9F~%&quot;</span> <span class="sym">(</span>gen_random <span class="num">100.0d0</span><span class="sym">))))</span>
