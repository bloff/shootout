<span class="slc">#!/usr/bin/ruby
</span><span class="slc">#
</span><span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># fannkuch in Ruby
</span><span class="slc"># Contributed by Glenn Parker, March 2005
</span>
<span class="kwa">def</span> permute<span class="sym">(</span>size<span class="sym">, &amp;</span>block<span class="sym">)
</span>  <span class="kwa">def</span> permute1<span class="sym">(</span>head<span class="sym">,</span> tail<span class="sym">, &amp;</span>block<span class="sym">)
</span>    tail.length.times <span class="kwa">do</span> <span class="sym">|</span>i<span class="sym">|
</span>      head.push<span class="sym">(</span>tail.delete_at<span class="sym">(</span>i<span class="sym">))
</span>      <span class="kwa">if</span> tail.empty?
	<span class="kwa">yield</span> head.dup
      <span class="kwa">else
</span>	permute1<span class="sym">(</span>head<span class="sym">,</span> tail<span class="sym">, &amp;</span>block<span class="sym">)
</span>      <span class="kwa">end
</span>      tail.insert<span class="sym">(</span>i<span class="sym">,</span> head.pop<span class="sym">)
</span>    <span class="kwa">end
  end

</span>  permute1<span class="sym">([], (</span><span class="num">1</span>..size<span class="sym">)</span>.to_a<span class="sym">, &amp;</span>block<span class="sym">)
</span><span class="kwa">end

</span>N = <span class="sym">(</span><span class="kwa">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">1</span><span class="sym">)</span>.to_i

maxflips = <span class="num">0
</span>permute<span class="sym">(</span>N<span class="sym">)</span> <span class="kwa">do</span> <span class="sym">|</span>list<span class="sym">|
</span>  flips = <span class="num">0
</span>  <span class="kwa">while</span> <span class="sym">(</span>count = list.first<span class="sym">) !</span>= <span class="num">1
</span>    list<span class="sym">[</span><span class="num">0</span>...count<span class="sym">]</span> = list<span class="sym">[</span><span class="num">0</span>...count<span class="sym">]</span>.reverse<span class="sym">!
</span>    flips <span class="sym">+</span>= <span class="num">1
</span>  <span class="kwa">end
</span>  maxflips = flips <span class="kwa">if</span> maxflips <span class="sym">&lt;</span> flips
<span class="kwa">end

</span>puts <span class="str">&quot;Pfannkuchen(#{N}) = #{maxflips}&quot;</span>

