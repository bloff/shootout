<span class="line">    1 </span><span class="slc">-- -*- mode: eiffel -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: matrix-se.code,v 1.3 2004-11-11 07:14:00 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">-- from Steve Thompson
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="slc">-- &lt;LOC-OFF&gt;
</span><span class="line">    7 </span><span class="slc"></span><span class="kwa">indexing
</span><span class="line">    8 </span><span class="kwa"></span>   description<span class="sym">:</span> <span class="str">&quot;This class performs the matrix multiplication test&quot;</span>
<span class="line">    9 </span>   author <span class="sym">:</span> Steve Thompson
<span class="line">   10 </span>   email  <span class="sym">:</span> <span class="str">&quot;Steve_Thompson&#64;prodigy.net&quot;</span>
<span class="line">   11 </span>   date   <span class="sym">:</span> February <span class="num">18</span><span class="sym">,</span> <span class="num">2001
</span><span class="line">   12 </span><span class="num"></span>   compile<span class="sym">:</span> <span class="str">&quot;compile -clean -boost -no_split -O3 main.e -o main&quot;</span>
<span class="line">   13 </span>   run    <span class="sym">:</span> <span class="str">&quot;main 300&quot;</span>
<span class="line">   14 </span><span class="slc">-- &lt;LOC-ON&gt;
</span><span class="line">   15 </span><span class="slc"></span>
<span class="line">   16 </span><span class="kwa">class</span> MATRIX
<span class="line">   17 </span>
<span class="line">   18 </span>creation make
<span class="line">   19 </span>
<span class="line">   20 </span><span class="kwa">feature</span> <span class="slc">-- Creation
</span><span class="line">   21 </span><span class="slc"></span>
<span class="line">   22 </span>   make <span class="kwa">is
</span><span class="line">   23 </span><span class="kwa">      local
</span><span class="line">   24 </span><span class="kwa"></span>         index<span class="sym">,</span> count<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   25 </span><span class="kwb"></span>         m1<span class="sym">,</span> m2<span class="sym">:</span> <span class="kwa">like</span> matrix
<span class="line">   26 </span>      <span class="kwa">do
</span><span class="line">   27 </span><span class="kwa">         from
</span><span class="line">   28 </span><span class="kwa">            if</span> argument_count <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then
</span><span class="line">   29 </span><span class="kwa"></span>               count <span class="sym">:=</span> <span class="num">1
</span><span class="line">   30 </span><span class="num"></span>            <span class="kwa">else
</span><span class="line">   31 </span><span class="kwa"></span>               count <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
<span class="line">   32 </span>            <span class="kwa">end
</span><span class="line">   33 </span><span class="kwa"></span>            index <span class="sym">:=</span> <span class="num">0
</span><span class="line">   34 </span><span class="num"></span>            m1 <span class="sym">:=</span> new_matrix<span class="sym">(</span><span class="num">30</span><span class="sym">,</span> <span class="num">30</span><span class="sym">)
</span><span class="line">   35 </span><span class="sym"></span>            m2 <span class="sym">:=</span> new_matrix<span class="sym">(</span><span class="num">30</span><span class="sym">,</span> <span class="num">30</span><span class="sym">)
</span><span class="line">   36 </span><span class="sym">            !!</span>matrix.make<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">29</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">29</span><span class="sym">)
</span><span class="line">   37 </span><span class="sym"></span>         until
<span class="line">   38 </span>            index <span class="sym">=</span> count
<span class="line">   39 </span>         <span class="kwa">loop
</span><span class="line">   40 </span><span class="kwa"></span>            mmult<span class="sym">(</span><span class="num">30</span><span class="sym">,</span> <span class="num">30</span><span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">)
</span><span class="line">   41 </span><span class="sym"></span>            index <span class="sym">:=</span> index <span class="sym">+</span> <span class="num">1
</span><span class="line">   42 </span><span class="num"></span>         <span class="kwa">end</span> <span class="slc">-- from
</span><span class="line">   43 </span><span class="slc"></span>         print<span class="sym">(</span>matrix.item<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span> matrix.item<span class="sym">(</span><span class="num">2</span><span class="sym">,</span> <span class="num">3</span><span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+
</span><span class="line">   44 </span><span class="sym"></span>               matrix.item<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> <span class="num">2</span><span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span> matrix.item<span class="sym">(</span><span class="num">4</span><span class="sym">,</span> <span class="num">4</span><span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   45 </span><span class="sym"></span>      <span class="kwa">end</span> <span class="slc">-- make
</span><span class="line">   46 </span><span class="slc"></span>
<span class="line">   47 </span><span class="kwa">feature</span> <span class="slc">-- Queries
</span><span class="line">   48 </span><span class="slc"></span>
<span class="line">   49 </span>   matrix<span class="sym">:</span> ARRAY2<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">]
</span><span class="line">   50 </span><span class="sym">
</span><span class="line">   51 </span><span class="sym"></span>   new_matrix<span class="sym">(</span>rows<span class="sym">,</span> columns<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">):</span> <span class="kwa">like</span> matrix <span class="kwa">is
</span><span class="line">   52 </span><span class="kwa"></span>         <span class="slc">-- Create and populate a new matrix.
</span><span class="line">   53 </span><span class="slc"></span>      <span class="kwa">local
</span><span class="line">   54 </span><span class="kwa"></span>         i<span class="sym">,</span> j<span class="sym">,</span> count<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   55 </span><span class="kwb"></span>      <span class="kwa">do
</span><span class="line">   56 </span><span class="kwa"></span>         <span class="sym">!!</span><span class="kwa">Result</span>.make<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> rows <span class="num">- 1</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> columns <span class="num">- 1</span><span class="sym">)
</span><span class="line">   57 </span><span class="sym"></span>         <span class="kwa">from
</span><span class="line">   58 </span><span class="kwa"></span>            count <span class="sym">:=</span> <span class="num">1
</span><span class="line">   59 </span><span class="num"></span>            i <span class="sym">:=</span> <span class="num">0
</span><span class="line">   60 </span><span class="num"></span>         until i <span class="sym">=</span> rows <span class="kwa">loop
</span><span class="line">   61 </span><span class="kwa">            from</span> j <span class="sym">:=</span> <span class="num">0</span> until j <span class="sym">=</span> columns <span class="kwa">loop
</span><span class="line">   62 </span><span class="kwa">               Result</span>.put<span class="sym">(</span>count<span class="sym">,</span> i<span class="sym">,</span> j<span class="sym">)
</span><span class="line">   63 </span><span class="sym"></span>               count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1
</span><span class="line">   64 </span><span class="num"></span>               j <span class="sym">:=</span> j <span class="sym">+</span> <span class="num">1
</span><span class="line">   65 </span><span class="num"></span>            <span class="kwa">end
</span><span class="line">   66 </span><span class="kwa"></span>            i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span><span class="line">   67 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   68 </span><span class="kwa">      end</span> <span class="slc">-- new_matrix
</span><span class="line">   69 </span><span class="slc"></span>
<span class="line">   70 </span><span class="kwa">feature</span> <span class="slc">-- Commands
</span><span class="line">   71 </span><span class="slc"></span>
<span class="line">   72 </span>   zero_matrix<span class="sym">(</span>rows<span class="sym">,</span> columns<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> a_matrix<span class="sym">:</span> <span class="kwa">like</span> matrix<span class="sym">)</span> <span class="kwa">is
</span><span class="line">   73 </span><span class="kwa"></span>         <span class="slc">-- Clear a matrix
</span><span class="line">   74 </span><span class="slc"></span>      <span class="kwa">do
</span><span class="line">   75 </span><span class="kwa"></span>         matrix.make<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> rows <span class="num">- 1</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> columns <span class="num">- 1</span><span class="sym">)
</span><span class="line">   76 </span><span class="sym"></span>      <span class="kwa">end</span> <span class="slc">-- zero_matrix
</span><span class="line">   77 </span><span class="slc"></span>
<span class="line">   78 </span>   mmult<span class="sym">(</span>rows<span class="sym">,</span> columns<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span> first<span class="sym">,</span> second<span class="sym">:</span> <span class="kwa">like</span> matrix<span class="sym">)</span> <span class="kwa">is
</span><span class="line">   79 </span><span class="kwa"></span>         <span class="slc">-- Multiply two matrices.
</span><span class="line">   80 </span><span class="slc"></span>      <span class="kwa">local
</span><span class="line">   81 </span><span class="kwa"></span>         i<span class="sym">,</span> j<span class="sym">,</span> k<span class="sym">,</span> val<span class="sym">:</span> <span class="kwb">INTEGER
</span><span class="line">   82 </span><span class="kwb"></span>      <span class="kwa">do
</span><span class="line">   83 </span><span class="kwa"></span>         zero_matrix<span class="sym">(</span>rows<span class="sym">,</span> columns<span class="sym">,</span> matrix<span class="sym">)
</span><span class="line">   84 </span><span class="sym"></span>         <span class="kwa">from</span> i <span class="sym">:=</span> <span class="num">0</span> until i <span class="sym">=</span> rows <span class="kwa">loop
</span><span class="line">   85 </span><span class="kwa">            from</span> j <span class="sym">:=</span> <span class="num">0</span> until j <span class="sym">=</span> columns <span class="kwa">loop
</span><span class="line">   86 </span><span class="kwa"></span>               val <span class="sym">:=</span> <span class="num">0
</span><span class="line">   87 </span><span class="num"></span>               <span class="kwa">from</span> k <span class="sym">:=</span> <span class="num">0</span> until k <span class="sym">=</span> columns <span class="kwa">loop
</span><span class="line">   88 </span><span class="kwa"></span>                  val <span class="sym">:=</span> val <span class="sym">+</span> first.item<span class="sym">(</span>i<span class="sym">,</span> k<span class="sym">) *</span> second.item<span class="sym">(</span>k<span class="sym">,</span> j<span class="sym">)
</span><span class="line">   89 </span><span class="sym"></span>                  k <span class="sym">:=</span> k <span class="sym">+</span> <span class="num">1
</span><span class="line">   90 </span><span class="num"></span>               <span class="kwa">end
</span><span class="line">   91 </span><span class="kwa"></span>               matrix.put<span class="sym">(</span>val<span class="sym">,</span> i<span class="sym">,</span> j<span class="sym">)
</span><span class="line">   92 </span><span class="sym"></span>               j <span class="sym">:=</span> j <span class="sym">+</span> <span class="num">1
</span><span class="line">   93 </span><span class="num"></span>            <span class="kwa">end
</span><span class="line">   94 </span><span class="kwa"></span>            i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span><span class="line">   95 </span><span class="num"></span>         <span class="kwa">end</span> <span class="slc">-- from
</span><span class="line">   96 </span><span class="slc"></span>      <span class="kwa">end</span> <span class="slc">-- mmult
</span><span class="line">   97 </span><span class="slc"></span>
<span class="line">   98 </span><span class="kwa">end</span>
