<span class="slc">-- The Great Computer Language Shootout
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">-- contributed by Isaac Gouy, tuned by Mike Pall
</span>
<span class="kwa">local sqrt</span> <span class="sym">=</span> math.<span class="kwa">sqrt

local</span> PI <span class="sym">=</span> <span class="num">3.141592653589793
</span><span class="kwa">local</span> SOLAR_MASS <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> PI <span class="sym">*</span> PI
<span class="kwa">local</span> DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24

</span><span class="kwa">local</span> Jupiter <span class="sym">= {
</span>   x <span class="sym">=</span> <span class="num">4.84143144246472090e</span><span class="sym">+</span><span class="num">00
</span>  <span class="sym">,</span>y <span class="sym">= -</span><span class="num">1.16032004402742839e</span><span class="sym">+</span><span class="num">00
</span>  <span class="sym">,</span>z <span class="sym">= -</span><span class="num">1.03622044471123109e</span><span class="sym">-</span><span class="num">01
</span>  <span class="sym">,</span>vx <span class="sym">=</span> <span class="num">1.66007664274403694e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vy <span class="sym">=</span> <span class="num">7.69901118419740425e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vz <span class="sym">= -</span><span class="num">6.90460016972063023e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>mass <span class="sym">=</span> <span class="num">9.54791938424326609e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">}

</span><span class="kwa">local</span> Saturn <span class="sym">= {
</span>   x <span class="sym">=</span> <span class="num">8.34336671824457987e</span><span class="sym">+</span><span class="num">00
</span>  <span class="sym">,</span>y <span class="sym">=</span> <span class="num">4.12479856412430479e</span><span class="sym">+</span><span class="num">00
</span>  <span class="sym">,</span>z <span class="sym">= -</span><span class="num">4.03523417114321381e</span><span class="sym">-</span><span class="num">01
</span>  <span class="sym">,</span>vx <span class="sym">= -</span><span class="num">2.76742510726862411e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vy <span class="sym">=</span> <span class="num">4.99852801234917238e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vz <span class="sym">=</span> <span class="num">2.30417297573763929e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>mass <span class="sym">=</span> <span class="num">2.85885980666130812e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">}

</span><span class="kwa">local</span> Uranus <span class="sym">= {
</span>   x <span class="sym">=</span> <span class="num">1.28943695621391310e</span><span class="sym">+</span><span class="num">01
</span>  <span class="sym">,</span>y <span class="sym">= -</span><span class="num">1.51111514016986312e</span><span class="sym">+</span><span class="num">01
</span>  <span class="sym">,</span>z <span class="sym">= -</span><span class="num">2.23307578892655734e</span><span class="sym">-</span><span class="num">01
</span>  <span class="sym">,</span>vx <span class="sym">=</span> <span class="num">2.96460137564761618e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vy <span class="sym">=</span> <span class="num">2.37847173959480950e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vz <span class="sym">= -</span><span class="num">2.96589568540237556e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>mass <span class="sym">=</span> <span class="num">4.36624404335156298e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">}

</span><span class="kwa">local</span> Neptune <span class="sym">= {
</span>   x <span class="sym">=</span> <span class="num">1.53796971148509165e</span><span class="sym">+</span><span class="num">01
</span>  <span class="sym">,</span>y <span class="sym">= -</span><span class="num">2.59193146099879641e</span><span class="sym">+</span><span class="num">01
</span>  <span class="sym">,</span>z <span class="sym">=</span> <span class="num">1.79258772950371181e</span><span class="sym">-</span><span class="num">01
</span>  <span class="sym">,</span>vx <span class="sym">=</span> <span class="num">2.68067772490389322e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vy <span class="sym">=</span> <span class="num">1.62824170038242295e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>vz <span class="sym">= -</span><span class="num">9.51592254519715870e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR
  <span class="sym">,</span>mass <span class="sym">=</span> <span class="num">5.15138902046611451e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">}

</span><span class="kwa">local</span> Sun <span class="sym">= {</span> x <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> y <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> z <span class="sym">=</span> <span class="num">0</span><span class="sym">,
</span>              vx <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> vy <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> vz <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> mass <span class="sym">=</span> SOLAR_MASS <span class="sym">}

</span><span class="kwa">local function</span> advance<span class="sym">(</span>bodies<span class="sym">,</span> nbody<span class="sym">,</span> dt<span class="sym">)
</span>  <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>nbody <span class="kwa">do
    local</span> bi <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]
</span>    <span class="kwa">local</span> bix<span class="sym">,</span> biy<span class="sym">,</span> biz<span class="sym">,</span> bimass <span class="sym">=</span> bi.x<span class="sym">,</span> bi.y<span class="sym">,</span> bi.z<span class="sym">,</span> bi.mass
    <span class="kwa">local</span> bivx<span class="sym">,</span> bivy<span class="sym">,</span> bivz <span class="sym">=</span> bi.vx<span class="sym">,</span> bi.vy<span class="sym">,</span> bi.vz
    <span class="kwa">for</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">,</span>nbody <span class="kwa">do
      local</span> bj <span class="sym">=</span> bodies<span class="sym">[</span>j<span class="sym">]
</span>      <span class="kwa">local</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz <span class="sym">=</span> bix<span class="sym">-</span>bj.x<span class="sym">,</span> biy<span class="sym">-</span>bj.y<span class="sym">,</span> biz<span class="sym">-</span>bj.z
      <span class="kwa">local</span> distance <span class="sym">=</span> <span class="kwa">sqrt</span><span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">)
</span>      <span class="kwa">local</span> mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)
</span>      <span class="kwa">local</span> bim<span class="sym">,</span> bjm <span class="sym">=</span> bimass<span class="sym">*</span>mag<span class="sym">,</span> bj.mass<span class="sym">*</span>mag
      bivx <span class="sym">=</span> bivx <span class="sym">- (</span>dx <span class="sym">*</span> bjm<span class="sym">)
</span>      bivy <span class="sym">=</span> bivy <span class="sym">- (</span>dy <span class="sym">*</span> bjm<span class="sym">)
</span>      bivz <span class="sym">=</span> bivz <span class="sym">- (</span>dz <span class="sym">*</span> bjm<span class="sym">)
</span>      bj.vx <span class="sym">=</span> bj.vx <span class="sym">+ (</span>dx <span class="sym">*</span> bim<span class="sym">)
</span>      bj.vy <span class="sym">=</span> bj.vy <span class="sym">+ (</span>dy <span class="sym">*</span> bim<span class="sym">)
</span>      bj.vz <span class="sym">=</span> bj.vz <span class="sym">+ (</span>dz <span class="sym">*</span> bim<span class="sym">)
</span>    <span class="kwa">end
</span>    bi.vx <span class="sym">=</span> bivx
    bi.vy <span class="sym">=</span> bivy
    bi.vz <span class="sym">=</span> bivz
  <span class="kwa">end
  for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>nbody <span class="kwa">do
    local</span> bi <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]
</span>    bi.x <span class="sym">=</span> bi.x <span class="sym">+ (</span>dt <span class="sym">*</span> bi.vx<span class="sym">)
</span>    bi.y <span class="sym">=</span> bi.y <span class="sym">+ (</span>dt <span class="sym">*</span> bi.vy<span class="sym">)
</span>    bi.z <span class="sym">=</span> bi.z <span class="sym">+ (</span>dt <span class="sym">*</span> bi.vz<span class="sym">)
</span>  <span class="kwa">end
end


local function</span> energy<span class="sym">(</span>bodies<span class="sym">,</span> nbody<span class="sym">)
</span>  <span class="kwa">local</span> e <span class="sym">=</span> <span class="num">0
</span>  <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>nbody <span class="kwa">do
    local</span> bi <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">]
</span>    <span class="kwa">local</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> bim <span class="sym">=</span> bi.vx<span class="sym">,</span> bi.vy<span class="sym">,</span> bi.vz<span class="sym">,</span> bi.mass
    e <span class="sym">=</span> e <span class="sym">+ (</span><span class="num">0.5</span> <span class="sym">*</span> bim <span class="sym">* (</span>vx<span class="sym">*</span>vx <span class="sym">+</span> vy<span class="sym">*</span>vy <span class="sym">+</span> vz<span class="sym">*</span>vz<span class="sym">))
</span>    <span class="kwa">for</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">,</span>nbody <span class="kwa">do
      local</span> bj <span class="sym">=</span> bodies<span class="sym">[</span>j<span class="sym">]
</span>      <span class="kwa">local</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz <span class="sym">=</span> bi.x<span class="sym">-</span>bj.x<span class="sym">,</span> bi.y<span class="sym">-</span>bj.y<span class="sym">,</span> bi.z<span class="sym">-</span>bj.z
      <span class="kwa">local</span> distance <span class="sym">=</span> <span class="kwa">sqrt</span><span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">)
</span>      e <span class="sym">=</span> e <span class="sym">- ((</span>bim <span class="sym">*</span> bj.mass<span class="sym">) /</span> distance<span class="sym">)
</span>    <span class="kwa">end
  end
  return</span> e
<span class="kwa">end


local function</span> offsetMomentum<span class="sym">(</span>b<span class="sym">,</span> nbody<span class="sym">)
</span>  <span class="kwa">local</span> px<span class="sym">,</span> py<span class="sym">,</span> pz <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0
</span>  <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>nbody <span class="kwa">do
    local</span> bi <span class="sym">=</span> b<span class="sym">[</span>i<span class="sym">]
</span>    <span class="kwa">local</span> bim <span class="sym">=</span> bi.mass
    px <span class="sym">=</span> px <span class="sym">+ (</span>bi.vx <span class="sym">*</span> bim<span class="sym">)
</span>    py <span class="sym">=</span> py <span class="sym">+ (</span>bi.vy <span class="sym">*</span> bim<span class="sym">)
</span>    pz <span class="sym">=</span> pz <span class="sym">+ (</span>bi.vz <span class="sym">*</span> bim<span class="sym">)
</span>  <span class="kwa">end
</span>  b<span class="sym">[</span><span class="num">1</span><span class="sym">]</span>.vx <span class="sym">= -</span>px <span class="sym">/</span> SOLAR_MASS
  b<span class="sym">[</span><span class="num">1</span><span class="sym">]</span>.vy <span class="sym">= -</span>py <span class="sym">/</span> SOLAR_MASS
  b<span class="sym">[</span><span class="num">1</span><span class="sym">]</span>.vz <span class="sym">= -</span>pz <span class="sym">/</span> SOLAR_MASS
<span class="kwa">end

local</span> N <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">(</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">or</span> <span class="num">1000
</span><span class="kwa">local</span> bodies <span class="sym">= {</span> Sun<span class="sym">,</span> Jupiter<span class="sym">,</span> Saturn<span class="sym">,</span> Uranus<span class="sym">,</span> Neptune <span class="sym">}
</span><span class="kwa">local</span> nbody <span class="sym">=</span> <span class="kwb">table</span>.<span class="kwa">getn</span><span class="sym">(</span>bodies<span class="sym">)

</span>offsetMomentum<span class="sym">(</span>bodies<span class="sym">,</span> nbody<span class="sym">)
</span>io.<span class="kwa">write</span><span class="sym">(</span> <span class="kwb">string</span>.<span class="kwa">format</span><span class="sym">(</span><span class="str">&quot;%0.9f&quot;</span><span class="sym">,</span>energy<span class="sym">(</span>bodies<span class="sym">,</span> nbody<span class="sym">)),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">)
</span><span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>N <span class="kwa">do</span> advance<span class="sym">(</span>bodies<span class="sym">,</span> nbody<span class="sym">,</span> <span class="num">0.01</span><span class="sym">)</span> <span class="kwa">end
</span>io.<span class="kwa">write</span><span class="sym">(</span> <span class="kwb">string</span>.<span class="kwa">format</span><span class="sym">(</span><span class="str">&quot;%0.9f&quot;</span><span class="sym">,</span>energy<span class="sym">(</span>bodies<span class="sym">,</span> nbody<span class="sym">)),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">)</span>
