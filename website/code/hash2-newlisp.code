<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/newlisp

#
# hash2 - benchmark
#
# newLISP does not have hashtables but can
# simulate hashes efficient with symbols
#
# Contributed by Lutz Mueller

(context 'Hash1) <I><FONT COLOR="#B22222">; create hash container
</FONT></I>(context 'MAIN) <I><FONT COLOR="#B22222">; go back to MAIN context
</FONT></I>(context 'Hash2) <I><FONT COLOR="#B22222">; create hash container
</FONT></I>(context 'MAIN) <I><FONT COLOR="#B22222">; go back to MAIN context
</FONT></I>
(set 'n (integer (nth 2 (main-args))))

(dotimes (i 10000)
	(set (symbol (format <B><FONT COLOR="#BC8F8F">&quot;foo_%d&quot;</FONT></B> (integer i)) Hash1) i) )

(dotimes (i n)
	(dotree (k Hash1)
		(set 'key (symbol (name k) Hash2 nil))
		(<B><FONT COLOR="#A020F0">if</FONT></B> key 
			(inc key (eval k))
			(set (symbol (name k) Hash2) (eval k)))))

(println Hash1:foo_1 <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> Hash1:foo_9999 <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> Hash2:foo_1 <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> Hash2:foo_9999)

(exit)
</pre></td></tr></table>
