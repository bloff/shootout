<span class="slc">;;; -*- mode: scheme -*-
</span><span class="slc">;;; $Id: moments-stalin.code,v 1.5 2005-04-06 14:49:59 bfulgham Exp $
</span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span>
<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
  (</span>let<span class="sym">* ((</span>sum <span class="num">0.0</span><span class="sym">)
	 (</span>numlist <span class="sym">(</span>let loop <span class="sym">((</span><span class="kwa">line</span> <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">)) (</span>numlist <span class="str">'()))
		    (cond ((eof-object? line) numlist)
			  (else
			   (let ((num (string-&gt;real line)))
			     (set! sum (+ num sum))
			     (loop (read-line) (cons num numlist))))))))
    (let ((n (length numlist)))
      (let ((mean (/ sum n))
	    (average_deviation 0.0)
	    (standard_deviation 0.0)
	    (variance 0.0)
	    (skew 0.0)
	    (kurtosis 0.0)
	    (median 0.0)
	    (deviation 0.0))
	(let loop ((nums numlist))
	     (if (not (null? nums))
		 (begin
		   (set! deviation (- (car nums) mean))
		   (set! average_deviation (+ average_deviation (abs deviation)))
		   (set! variance (+ variance (expt deviation 2.0)))
		   (set! skew (+ skew (expt deviation 3.0)))
		   (set! kurtosis (+ kurtosis (expt deviation 4)))
		   (loop (cdr nums)))))

	(set! average_deviation (/ average_deviation (fixnum-&gt;flonum n)))
	(set! variance (/ variance (- n 1)))
	(set! standard_deviation (sqrt variance))

	(cond ((&gt; variance 0.0)
	       (set! skew (/ skew (* n variance standard_deviation)))
	       (set! kurtosis (- (/ kurtosis (* n variance variance))
				 3.0))))

	(set! numlist (sort numlist (lambda (x y) (&lt;fl x y))))

	(let ((mid (/ n 2)))
	  (if (zero? (modulo n 2))
	      (set! median (/ (+ (car (list-tail numlist mid))
				 (car (list-tail numlist (- mid 1))))
			      2.0))
	    (set! median (car (list-tail numlist mid)))))


	(set! standard_deviation (/ (round (* standard_deviation 1000000)) 1000000))

        (display &quot;n:                  ~D~n&quot; n)
	(display &quot;median:             ~,6F~n&quot; median)
	(display &quot;mean:               ~,6F~n&quot; mean)
	(display &quot;average_deviation:  ~,6F~n&quot; average_deviation)
	(display &quot;standard_deviation: ~,6F~n&quot; standard_deviation)
	(display &quot;variance:           ~,6F~n&quot; variance)
	(display &quot;skew:               ~,6F~n&quot; skew)
	(display &quot;kurtosis:           ~,6F~n&quot; kurtosis)))))

(main (vector-&gt;list argv))</span>
