\ <span class="sym">-*-</span> mode<span class="sym">:</span> forth <span class="sym">-*-</span>
\ $Id<span class="sym">:</span> methcall<span class="sym">.</span>gforth<span class="sym">,</span>v <span class="num">1.1 2004</span><span class="sym">/</span><span class="num">05</span><span class="sym">/</span><span class="num">25 03</span><span class="sym">:</span><span class="num">25</span><span class="sym">:</span><span class="num">01</span> bfulgham Exp $
\ http<span class="sym">:</span><span class="slc">//www.bagley.org/~doug/shootout/</span>

\ from Anton Ertl<span class="sym">:</span>
\ I<span class="str">'m using objects.fs here, code using one of the other OO Forth</span>
<span class="str"></span><span class="esc">\ </span><span class="str">extensions will look different.</span>
<span class="str"></span>
<span class="str">warnings off</span> <span class="esc">\ </span><span class="str">don'</span>t complain about redefining <span class="kwa">catch</span><span class="sym">,</span> state<span class="sym">,</span> value

<span class="num">0</span><span class="sym">.</span> argc &#64; <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span>drop drop constant NUM

require objects<span class="sym">.</span>fs

object <span class="kwc">class</span>
    selector <span class="kwd">activate</span> <span class="sym">(</span> toggle <span class="sym">--</span> toggle <span class="sym">)</span>
    selector <span class="kwd">value</span> <span class="sym">(</span> toggle <span class="sym">--</span> f <span class="sym">)</span>
    cell<span class="sym">%</span> inst<span class="sym">-</span>var state

    m<span class="sym">: (</span> f toggle <span class="sym">-- )</span>
	state <span class="sym">! ;</span>m
    overrides construct

    m<span class="sym">: (</span> toggle <span class="sym">--</span> f <span class="sym">)</span>
	state &#64; <span class="sym">;</span>m
    overrides value

    m<span class="sym">: (</span> toggle <span class="sym">--</span> toggle <span class="sym">)</span>
	state &#64; invert state <span class="sym">!</span>
	<span class="kwa">this</span> <span class="sym">;</span>m
    overrides activate

end<span class="sym">-</span><span class="kwc">class</span> Toggle

Toggle <span class="kwc">class</span>
    cell<span class="sym">%</span> inst<span class="sym">-</span>var count<span class="sym">-</span>max
    cell<span class="sym">%</span> inst<span class="sym">-</span>var counter

    m<span class="sym">: (</span> max<span class="sym">-</span>counter start<span class="sym">-</span>state nth<span class="sym">-</span>toggle <span class="sym">-- )</span>
	<span class="kwa">this</span> <span class="sym">[</span>parent<span class="sym">]</span> construct
	count<span class="sym">-</span>max <span class="sym">!</span>
	<span class="num">0</span> counter <span class="sym">! ;</span>m
    overrides construct

    m<span class="sym">: (</span> toggle <span class="sym">--</span> toggle <span class="sym">)</span>
	<span class="num">1</span> counter <span class="sym">+!</span>
	counter &#64; count<span class="sym">-</span>max &#64; <span class="sym">&gt;=</span> <span class="kwa">if</span>
	    state &#64; invert state <span class="sym">!</span>
	    <span class="num">0</span> counter <span class="sym">!</span>
	endif
	<span class="kwa">this</span> <span class="sym">;</span>m
    overrides activate

end<span class="sym">-</span><span class="kwc">class</span> NthToggle

<span class="sym">:</span> flag<span class="sym">. (</span> f <span class="sym">-- )</span>
    <span class="kwa">if</span> <span class="sym">.</span><span class="str">&quot; true&quot;</span> <span class="kwa">else</span> <span class="sym">.</span><span class="str">&quot; false&quot;</span> endif cr <span class="sym">;</span>

<span class="sym">:</span> <span class="kwd">mainloop</span> <span class="sym">( ...</span> <span class="kwc">class</span> <span class="sym">-- )</span>
    <span class="kwa">true</span> swap heap<span class="sym">-</span><span class="kwa">new true</span> NUM <span class="num">0</span> ?<span class="kwa">do</span>
	drop dup activate value
    loop
    flag<span class="sym">.</span> drop <span class="sym">;</span>

<span class="sym">:</span> <span class="kwd">main</span> <span class="sym">( -- )</span>
    Toggle mainloop
    <span class="num">3</span> NthToggle mainloop <span class="sym">;</span>

main bye
