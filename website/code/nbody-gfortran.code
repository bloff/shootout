<span class="slc">! -*- mode: f90 -*-</span>
<span class="slc">!</span>
<span class="slc">! $Id: nbody-gfortran.code,v 1.6 2007-12-04 06:32:51 bfulgham Exp $ ; $Name:  $</span>
<span class="slc">!</span>
<span class="slc">! The Great Computer Language Shootout</span>
<span class="slc">!   http://shootout.alioth.debian.org/</span>
<span class="slc">!</span>
<span class="slc">!   contributed by Simon Geard, translated from  Mark C. Williams nbody.java</span>
<span class="slc">!</span>
<span class="slc">! ifort -O3 -static-libcxa -o nbody nbody.f90</span>
<span class="slc">!</span>

program nbody

  implicit none
  integer result<span class="sym">,</span> num<span class="sym">,</span> i<span class="sym">,</span> k
  character<span class="sym">(</span>len<span class="sym">=</span><span class="num">8</span><span class="sym">)</span> argv
  real<span class="sym">*</span><span class="num">8</span><span class="sym">,</span> parameter <span class="sym">::</span> tstep <span class="sym">=</span> <span class="num">0.01</span>d0
  real<span class="sym">*</span><span class="num">8</span><span class="sym">,</span> parameter <span class="sym">::</span>  PI <span class="sym">=</span> <span class="num">3.141592653589793</span>d0
  real<span class="sym">*</span><span class="num">8</span><span class="sym">,</span> parameter <span class="sym">::</span>  SOLAR_MASS <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> PI <span class="sym">*</span> PI
  real<span class="sym">*</span><span class="num">8</span><span class="sym">,</span> parameter <span class="sym">::</span>  DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span>d0
  real<span class="sym">*</span><span class="num">8</span> <span class="sym">::</span> e
  type body
     real<span class="sym">*</span><span class="num">8</span> x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">,</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> mass
  end type body
  type<span class="sym">(</span>body<span class="sym">),</span> parameter <span class="sym">::</span> jupiter <span class="sym">=</span> body<span class="sym">( &amp;</span>
       <span class="num">4.84143144246472090</span>d0<span class="sym">,    -</span><span class="num">1.16032004402742839</span>d0<span class="sym">, &amp;</span>
       <span class="sym">-</span><span class="num">1.03622044471123109</span>d<span class="sym">-</span><span class="num">01</span><span class="sym">,</span> <span class="num">1.66007664274403694</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="num">7.69901118419740425</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, -</span><span class="num">6.90460016972063023</span>d<span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="num">9.54791938424326609</span>d<span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)</span>

  type<span class="sym">(</span>body<span class="sym">),</span> parameter <span class="sym">::</span> saturn <span class="sym">=</span> body<span class="sym">( &amp;</span>
       <span class="num">8.34336671824457987</span>d<span class="sym">+</span><span class="num">00</span><span class="sym">, &amp;</span>
       <span class="num">4.12479856412430479</span>d<span class="sym">+</span><span class="num">00</span><span class="sym">, &amp;</span>
       <span class="sym">-</span><span class="num">4.03523417114321381</span>d<span class="sym">-</span><span class="num">01</span><span class="sym">, &amp;</span>
       <span class="sym">-</span><span class="num">2.76742510726862411</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="num">4.99852801234917238</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="num">2.30417297573763929</span>d<span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="num">2.85885980666130812</span>d<span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)</span>

  type<span class="sym">(</span>body<span class="sym">),</span> parameter <span class="sym">::</span> uranus <span class="sym">=</span> body<span class="sym">( &amp;</span>
	   <span class="num">1.28943695621391310</span>d<span class="sym">+</span><span class="num">01</span><span class="sym">, &amp;</span>
	   <span class="sym">-</span><span class="num">1.51111514016986312</span>d<span class="sym">+</span><span class="num">01</span><span class="sym">, &amp;</span>
	   <span class="sym">-</span><span class="num">2.23307578892655734</span>d<span class="sym">-</span><span class="num">01</span><span class="sym">, &amp;</span>
	   <span class="num">2.96460137564761618</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
	   <span class="num">2.37847173959480950</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
	   <span class="sym">-</span><span class="num">2.96589568540237556</span>d<span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
	   <span class="num">4.36624404335156298</span>d<span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS <span class="sym">)</span>

  type<span class="sym">(</span>body<span class="sym">),</span> parameter <span class="sym">::</span> neptune <span class="sym">=</span> body<span class="sym">( &amp;</span>
       <span class="num">1.53796971148509165</span>d<span class="sym">+</span><span class="num">01</span><span class="sym">, &amp;</span>
       <span class="sym">-</span><span class="num">2.59193146099879641</span>d<span class="sym">+</span><span class="num">01</span><span class="sym">, &amp;</span>
       <span class="num">1.79258772950371181</span>d<span class="sym">-</span><span class="num">01</span><span class="sym">, &amp;</span>
       <span class="num">2.68067772490389322</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="num">1.62824170038242295</span>d<span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="sym">-</span><span class="num">9.51592254519715870</span>d<span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">, &amp;</span>
       <span class="num">5.15138902046611451</span>d<span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)</span>

  type<span class="sym">(</span>body<span class="sym">),</span> parameter <span class="sym">::</span> sun <span class="sym">=</span> body<span class="sym">(</span><span class="num">0.0</span>d0<span class="sym">,</span> <span class="num">0.0</span>d0<span class="sym">,</span> <span class="num">0.0</span>d0<span class="sym">,</span> <span class="num">0.0</span>d0<span class="sym">,</span> <span class="num">0.0</span>d0<span class="sym">,</span> <span class="num">0.0</span>d0<span class="sym">,</span> SOLAR_MASS<span class="sym">)</span>

  type<span class="sym">(</span>body<span class="sym">),</span> dimension<span class="sym">(</span><span class="num">5</span><span class="sym">) ::</span> bodies
  bodies <span class="sym">= (/</span> sun<span class="sym">,</span> jupiter<span class="sym">,</span> saturn<span class="sym">,</span> uranus<span class="sym">,</span> neptune <span class="sym">/)</span>

  call getarg<span class="sym">(</span><span class="num">1</span><span class="sym">,</span>argv<span class="sym">)</span>
  read<span class="sym">(</span>argv<span class="sym">,*)</span> num

  call offsetMomentum<span class="sym">(</span><span class="num">1</span><span class="sym">,</span>bodies<span class="sym">)</span>
  e <span class="sym">=</span> energy<span class="sym">(</span>bodies<span class="sym">)</span>
  write<span class="sym">(*,</span><span class="str">'(f12.9)'</span><span class="sym">)</span> e
  do i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>num
     call advance<span class="sym">(</span>tstep<span class="sym">,</span> bodies<span class="sym">)</span>
  end do
  e <span class="sym">=</span> energy<span class="sym">(</span>bodies<span class="sym">)</span>
  write<span class="sym">(*,</span><span class="str">'(f12.9)'</span><span class="sym">)</span> e

contains

  subroutine offsetMomentum<span class="sym">(</span>k<span class="sym">,</span> bodies<span class="sym">)</span>
    integer<span class="sym">,</span> intent<span class="sym">(</span>in<span class="sym">) ::</span> k
    type<span class="sym">(</span>body<span class="sym">),</span> dimension<span class="sym">(:),</span> intent<span class="sym">(</span>inout<span class="sym">) ::</span> bodies
    real<span class="sym">*</span><span class="num">8</span> <span class="sym">::</span> px<span class="sym">,</span> py<span class="sym">,</span> pz
    px <span class="sym">=</span> <span class="num">0.0</span>d0
    py <span class="sym">=</span> <span class="num">0.0</span>d0
    pz <span class="sym">=</span> <span class="num">0.0</span>d0
    do i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>size<span class="sym">(</span>bodies<span class="sym">)</span>
       px <span class="sym">=</span> px <span class="sym">+</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vx <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>mass<span class="sym">;</span>
       py <span class="sym">=</span> py <span class="sym">+</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vy <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>mass<span class="sym">;</span>
       pz <span class="sym">=</span> pz <span class="sym">+</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vz <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>mass<span class="sym">;</span>
    end do
    bodies<span class="sym">(</span>k<span class="sym">)%</span>vx <span class="sym">= -</span>px<span class="sym">/</span>SOLAR_MASS
    bodies<span class="sym">(</span>k<span class="sym">)%</span>vy <span class="sym">= -</span>py<span class="sym">/</span>SOLAR_MASS
    bodies<span class="sym">(</span>k<span class="sym">)%</span>vz <span class="sym">= -</span>pz<span class="sym">/</span>SOLAR_MASS
  end subroutine offsetMomentum


  subroutine advance<span class="sym">(</span>tstep<span class="sym">,</span> bodies<span class="sym">)</span>
  real<span class="sym">*</span><span class="num">8</span><span class="sym">,</span> intent<span class="sym">(</span>in<span class="sym">) ::</span> tstep
  type<span class="sym">(</span>body<span class="sym">),</span> dimension<span class="sym">(:),</span> intent<span class="sym">(</span>inout<span class="sym">) ::</span> bodies

  real<span class="sym">*</span><span class="num">8</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">,</span> mag
  integer i<span class="sym">,</span> j

  do i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>size<span class="sym">(</span>bodies<span class="sym">)</span>
     do j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">,</span>size<span class="sym">(</span>bodies<span class="sym">)</span>
        dx <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>x <span class="sym">-</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>x
        dy <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>y <span class="sym">-</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>y
        dz <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>z <span class="sym">-</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>z

        distance <span class="sym">=</span> sqrt<span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">)</span>
        mag <span class="sym">=</span> tstep <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)</span>

        bodies<span class="sym">(</span>i<span class="sym">)%</span>vx <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vx <span class="sym">-</span> dx <span class="sym">*</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>mass <span class="sym">*</span> mag
        bodies<span class="sym">(</span>i<span class="sym">)%</span>vy <span class="sym">=</span>  bodies<span class="sym">(</span>i<span class="sym">)%</span>vy <span class="sym">-</span> dy <span class="sym">*</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>mass <span class="sym">*</span> mag
        bodies<span class="sym">(</span>i<span class="sym">)%</span>vz <span class="sym">=</span>  bodies<span class="sym">(</span>i<span class="sym">)%</span>vz <span class="sym">-</span> dz <span class="sym">*</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>mass <span class="sym">*</span> mag

        bodies<span class="sym">(</span>j<span class="sym">)%</span>vx <span class="sym">=</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>vx <span class="sym">+</span> dx <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>mass <span class="sym">*</span> mag
        bodies<span class="sym">(</span>j<span class="sym">)%</span>vy <span class="sym">=</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>vy <span class="sym">+</span> dy <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>mass <span class="sym">*</span> mag
        bodies<span class="sym">(</span>j<span class="sym">)%</span>vz <span class="sym">=</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>vz <span class="sym">+</span> dz <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>mass <span class="sym">*</span> mag
     end do
  end do

  do i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>size<span class="sym">(</span>bodies<span class="sym">)</span>
     bodies<span class="sym">(</span>i<span class="sym">)%</span>x <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>x <span class="sym">+</span> tstep <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vx
     bodies<span class="sym">(</span>i<span class="sym">)%</span>y <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>y <span class="sym">+</span> tstep <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vy
     bodies<span class="sym">(</span>i<span class="sym">)%</span>z <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>z <span class="sym">+</span> tstep <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vz
  end do

  end subroutine advance

  real<span class="sym">*</span><span class="num">8</span> function energy<span class="sym">(</span>bodies<span class="sym">)</span>
    type<span class="sym">(</span>body<span class="sym">),</span> dimension<span class="sym">(:),</span> intent<span class="sym">(</span>in<span class="sym">) ::</span> bodies
    real<span class="sym">*</span><span class="num">8</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance
    integer i<span class="sym">,</span> j

    energy <span class="sym">=</span> <span class="num">0.0</span>d0
    do i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>size<span class="sym">(</span>bodies<span class="sym">)</span>
       energy <span class="sym">=</span> energy <span class="sym">+</span> <span class="num">0.5</span>d0 <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>mass <span class="sym">*  &amp;</span>
            <span class="sym">(</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vx <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vx <span class="sym">+ &amp;</span>
            bodies<span class="sym">(</span>i<span class="sym">)%</span>vy <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vy <span class="sym">+ &amp;</span>
            bodies<span class="sym">(</span>i<span class="sym">)%</span>vz <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>vz<span class="sym">)</span>

       do j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">,</span>size<span class="sym">(</span>bodies<span class="sym">)</span>
          dx <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>x <span class="sym">-</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>x
          dy <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>y <span class="sym">-</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>y
          dz <span class="sym">=</span> bodies<span class="sym">(</span>i<span class="sym">)%</span>z <span class="sym">-</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>z
          distance <span class="sym">=</span> sqrt<span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">)</span>
          energy <span class="sym">=</span> energy <span class="sym">- (</span>bodies<span class="sym">(</span>i<span class="sym">)%</span>mass <span class="sym">*</span> bodies<span class="sym">(</span>j<span class="sym">)%</span>mass<span class="sym">) /</span> distance<span class="sym">;</span>
       end do

    end do
  end function energy

end program nbody
