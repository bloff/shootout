<span class="line">    1 </span><span class="sym">/*</span> The Great Computer Language Shootout
<span class="line">    2 </span>     contributed by Isaac Gouy <span class="sym">(</span>Clean novice<span class="sym">)
</span><span class="line">    3 </span><span class="sym"> </span>   Updated by John van Groningen
<span class="line">    4 </span>
<span class="line">    5 </span>     http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/
</span><span class="line">    6 </span><span class="sym"> 
</span><span class="line">    7 </span><span class="sym"> </span>To compile<span class="sym">:
</span><span class="line">    8 </span><span class="sym">         </span>   cleanIDE.exe <span class="slc">--batch-force-build &quot;e:\shoot\contrib\clean\strcat.prj&quot; 
</span><span class="line">    9 </span><span class="slc"></span>
<span class="line">   10 </span> To run<span class="sym">:
</span><span class="line">   11 </span><span class="sym"> </span>   strcat.exe <span class="sym">-</span>con <span class="num">40000
</span><span class="line">   12 </span><span class="num"> </span><span class="sym">*/
</span><span class="line">   13 </span><span class="sym"> 
</span><span class="line">   14 </span><span class="sym"> 
</span><span class="line">   15 </span><span class="sym"> </span><span class="kwa">module</span> strcat
<span class="line">   16 </span> <span class="kwa">import</span> StdEnv<span class="sym">,</span> LanguageShootout
<span class="line">   17 </span>
<span class="line">   18 </span>  Start <span class="sym">=</span>  toString <span class="sym">(</span>sbLength <span class="sym">(</span>appendLoop argi sbNew<span class="sym">)) +++</span> <span class="str">&quot;\n&quot;</span>
<span class="line">   19 </span>
<span class="line">   20 </span>  appendLoop n sb
<span class="line">   21 </span>    <span class="sym">|</span> n<span class="sym">&gt;</span><span class="num">0</span>   <span class="sym">=</span> appendLoop <span class="sym">(</span>n<span class="num">-1</span><span class="sym">) (</span>sbAppend sb <span class="str">&quot;hello\n&quot;</span><span class="sym">)
</span><span class="line">   22 </span><span class="sym">    =</span> sb
<span class="line">   23 </span>
<span class="line">   24 </span>
<span class="line">   25 </span>
<span class="line">   26 </span>    <span class="sym">//</span> To <span class="kwa">do</span> this <span class="kwa">in</span> the <span class="str">&quot;same way&quot;</span> we need to define a StringBuffer
<span class="line">   27 </span>
<span class="line">   28 </span>   <span class="sym">::</span> StringBuffer <span class="sym">=</span> Sb <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span>.String
<span class="line">   29 </span>
<span class="line">   30 </span>  sbNew <span class="sym">=</span> Sb <span class="num">0</span> <span class="sym">(</span>createArray <span class="num">32</span> <span class="str">' '</span><span class="sym">)
</span><span class="line">   31 </span><span class="sym"> 
</span><span class="line">   32 </span><span class="sym"> </span>sbAppend <span class="sym">(</span>Sb n b<span class="sym">)</span> s
<span class="line">   33 </span>    <span class="sym">=</span> if <span class="sym">(</span>minsize <span class="sym">&gt;</span> size b<span class="sym">)
</span><span class="line">   34 </span><span class="sym">       (</span>Sb minsize <span class="sym">(</span>copyTo s n <span class="sym">(</span>resize b minsize<span class="sym">) ))
</span><span class="line">   35 </span><span class="sym">       (</span>Sb minsize <span class="sym">(</span>copyTo s n b<span class="sym">))
</span><span class="line">   36 </span><span class="sym"> </span>   <span class="kwa">where
</span><span class="line">   37 </span><span class="kwa">  </span>      minsize <span class="sym">=</span> n <span class="sym">+</span> size s
<span class="line">   38 </span>
<span class="line">   39 </span>             copyTo <span class="sym">:: !</span>.{#<span class="kwb">Char</span>} <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!*</span>{#<span class="kwb">Char</span>} <span class="sym">-&gt;</span> .{#<span class="kwb">Char</span>}
<span class="line">   40 </span>       copyTo s n a <span class="sym">=</span> {a <span class="sym">&amp; [</span>n<span class="sym">+</span>i<span class="sym">] =</span> s.<span class="sym">[</span>i<span class="sym">]</span> \\ i <span class="sym">&lt;- [</span><span class="num">0</span>..size s <span class="num">- 1</span><span class="sym">]</span>}
<span class="line">   41 </span>
<span class="line">   42 </span>                 resize b min
<span class="line">   43 </span>          <span class="sym">=</span> if <span class="sym">(</span>newsize <span class="sym">&lt;</span> min<span class="sym">)
</span><span class="line">   44 </span><span class="sym">              (</span>copyTo b <span class="num">0</span> <span class="sym">(</span>createArray min <span class="str">' '</span><span class="sym">))
</span><span class="line">   45 </span><span class="sym">             (</span>copyTo b <span class="num">0</span> <span class="sym">(</span>createArray newsize <span class="str">' '</span><span class="sym">))
</span><span class="line">   46 </span><span class="sym">    </span>         <span class="kwa">where</span> newsize <span class="sym">=</span> size b <span class="sym">*</span> <span class="num">2</span> <span class="sym">+</span> <span class="num">5
</span><span class="line">   47 </span><span class="num">    
</span><span class="line">   48 </span><span class="num">       </span>sbLength <span class="sym">(</span>Sb n b<span class="sym">) =</span> n 
