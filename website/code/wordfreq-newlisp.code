<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/newlisp

<I><FONT COLOR="#B22222">; create a context/namespace to hold words
</FONT></I>
(context 'wc)
(context MAIN)

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B>)
<I><FONT COLOR="#B22222">;;	(HASH:make 'wc)
</FONT></I>
	(while (read-line) 
		(set 'data (parse (lower-case (current-line)) <B><FONT COLOR="#BC8F8F">&quot;[^a-z]+&quot;</FONT></B> 0))
		(dolist (w data)
			(<B><FONT COLOR="#A020F0">if</FONT></B> (set 'result (eval (symbol (append <B><FONT COLOR="#BC8F8F">&quot;_&quot;</FONT></B> w) wc) ))
				(set (symbol (append <B><FONT COLOR="#BC8F8F">&quot;_&quot;</FONT></B> w) wc) (+ result 1)) 
				(set (symbol (append <B><FONT COLOR="#BC8F8F">&quot;_&quot;</FONT></B> w) wc) 1))))

	(dolist (w (symbols wc))
		(set 'wrd (name w))
		(<B><FONT COLOR="#A020F0">if</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (starts-with wrd <B><FONT COLOR="#BC8F8F">&quot;_&quot;</FONT></B>) (!= <B><FONT COLOR="#BC8F8F">&quot;_&quot;</FONT></B> wrd))
			(push (list (eval w) (slice wrd 1) ) words) ))

	(dolist (w (reverse (sort words)))
		(println (format <B><FONT COLOR="#BC8F8F">&quot;%7d %s&quot;</FONT></B> (first w) (last w))))
	)

(main)

<I><FONT COLOR="#B22222">;; eof
</FONT></I></pre></td></tr></table>
