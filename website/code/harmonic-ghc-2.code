<span class="com">{-# OPTIONS -fglasgow-exts #-}</span>
<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- Contributed by Greg Buchholz</span>
<span class="slc">-- Enhanced by Einar Karttunen, Mirko Rahn and Don Stewart</span>

<span class="kwa">import</span> System<span class="sym">;</span> <span class="kwa">import</span> Numeric<span class="sym">;</span> <span class="kwa">import</span> GHC.Base<span class="sym">;</span> <span class="kwa">import</span> GHC.<span class="kwb">Float</span>

main <span class="sym">=</span> putStrLn . <span class="sym">(</span>\<span class="sym">(</span>I# n<span class="sym">) -&gt;</span> showFFloat <span class="sym">(</span>Just <span class="num">9</span><span class="sym">) (</span>D# <span class="sym">(</span>loop n <span class="num">0.0</span>##<span class="sym">)) [])</span> . read . head <span class="sym">=&lt;&lt;</span> getArgs

loop d s <span class="sym">=</span> if d <span class="sym">==</span># <span class="num">0</span># <span class="kwa">then</span> s <span class="kwa">else</span> loop <span class="sym">(</span>d<span class="sym">-</span>#<span class="num">1</span>#<span class="sym">) (</span>s <span class="sym">+</span>## <span class="sym">(</span><span class="num">1.0</span>## <span class="sym">/</span>## int2Double# d<span class="sym">))</span>

