<span class="line">    1 </span><span class="slc">%%% -*- mode: erlang -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%%% $Id: procinst-hipe.code,v 1.4 2004-11-13 07:42:26 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%%% http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">-</span>module<span class="sym">(</span>procinst<span class="sym">)</span>.
<span class="line">    6 </span><span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.
<span class="line">    7 </span>
<span class="line">    8 </span>main<span class="sym">() -&gt;</span> main<span class="sym">([</span><span class="str">'1'</span><span class="sym">])</span>.
<span class="line">    9 </span>main<span class="sym">([</span>Arg<span class="sym">]) -&gt;
</span><span class="line">   10 </span><span class="sym"></span>        Number_of_Processes <span class="sym">=</span> atom_to_integer<span class="sym">(</span> Arg <span class="sym">),
</span><span class="line">   11 </span><span class="sym"></span>        procinst<span class="sym">(</span> Number_of_Processes <span class="sym">),
</span><span class="line">   12 </span><span class="sym"></span>        io<span class="sym">:</span>fwrite<span class="sym">(</span> <span class="str">&quot;~w</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, [</span>Number_of_Processes<span class="sym">] ),
</span><span class="line">   13 </span><span class="sym"></span>        erlang<span class="sym">:</span><span class="kwb">halt</span><span class="sym">()</span>.
<span class="line">   14 </span>
<span class="line">   15 </span>atom_to_integer<span class="sym">(</span> Atom <span class="sym">) -&gt;
</span><span class="line">   16 </span><span class="sym"></span>        erlang<span class="sym">:</span><span class="kwb">list_to_integer</span><span class="sym">(</span>erlang<span class="sym">:</span><span class="kwb">atom_to_list</span><span class="sym">(</span>Atom<span class="sym">))</span>.
<span class="line">   17 </span>
<span class="line">   18 </span>procinst<span class="sym">(</span> <span class="num">0</span> <span class="sym">) -&gt;</span> ok<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>procinst<span class="sym">(</span> N <span class="sym">) -&gt;
</span><span class="line">   20 </span><span class="sym"></span>        erlang<span class="sym">:</span><span class="kwb">spawn</span><span class="sym">(</span> <span class="kwa">fun</span><span class="sym">() -&gt;</span> loop<span class="sym">()</span> <span class="kwa">end</span> <span class="sym">),
</span><span class="line">   21 </span><span class="sym"></span>        procinst<span class="sym">(</span> N<span class="num">-1</span> <span class="sym">)</span>.
<span class="line">   22 </span>
<span class="line">   23 </span>loop<span class="sym">( ) -&gt;
</span><span class="line">   24 </span><span class="sym"></span>        <span class="kwa">receive
</span><span class="line">   25 </span><span class="kwa"></span>        _Something <span class="sym">-&gt;
</span><span class="line">   26 </span><span class="sym"></span>                loop<span class="sym">( )
</span><span class="line">   27 </span><span class="sym"></span>        <span class="kwa">end</span>.
