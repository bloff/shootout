<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
;;; -*- mode: lisp -*-
;;; $Id: ackermann-pop11.code,v 1.1 2004-11-02 08:52:29 bfulgham Exp $
<I><FONT COLOR="#B22222">/*
 Trivial Ackermann implementation.  Does not attempt to force
 Poplog to use tail-recursive calls.
 */</FONT></I>
vars n;

define constant procedure <B><FONT COLOR="#0000FF">fast_ack</FONT></B> (m, n);
   <B><FONT COLOR="#A020F0">if</FONT></B> m == 0 then
      n fi_+ 1
   elseif n == 0 then
      fast_ack(m fi_- 1, 1)
   <B><FONT COLOR="#A020F0">else</FONT></B>
      fast_ack(m fi_- 1, fast_ack(m, n fi_- 1))
   endif
enddefine;

define constant procedure <B><FONT COLOR="#0000FF">get_args</FONT></B>();
   <B><FONT COLOR="#A020F0">if</FONT></B> null(poparglist) then 1 <B><FONT COLOR="#A020F0">else</FONT></B>
      strnumber( hd(poparglist) )
   endif
enddefine;

<B><FONT COLOR="#0000FF">get_args</FONT></B>() -&gt; n;

<B><FONT COLOR="#0000FF">format_print</FONT></B>('Ack(3,~D): ~D\n', [^n ^(fast_ack(3, n))]);</pre></td></tr></table>
