<span class="slc">//</span>
<span class="slc">// Contributed by John Skaller</span>
<span class="slc">//</span>
<span class="kwa">include</span> <span class="str">&quot;std&quot;</span><span class="sym">;</span>
n <span class="sym">:=</span> atoi<span class="sym">(</span>System<span class="sym">::</span>argv <span class="num">1</span><span class="sym">);</span>

<span class="kwa">open</span> List<span class="sym">;</span>
<span class="kwa">open</span> Text_file<span class="sym">;</span>

<span class="kwa">var</span> x <span class="sym">=</span> Empty<span class="sym">[</span><span class="kwb">string</span><span class="sym">];</span>
<span class="kwa">var</span> s <span class="sym">=</span> readln stdin<span class="sym">;</span>
until s <span class="sym">==</span> <span class="str">&quot;&quot;</span> do
  x <span class="sym">=</span> Cons <span class="sym">(</span>s<span class="sym">,</span>x<span class="sym">);</span>
  s <span class="sym">=</span> readln stdin<span class="sym">;</span>
done<span class="sym">;</span>

<span class="kwa">proc</span> plist<span class="sym">(</span>x<span class="sym">:</span>list<span class="sym">[</span><span class="kwb">string</span><span class="sym">]){</span>
  <span class="kwa">match</span> x <span class="kwa">with</span>
  <span class="sym">|</span> Cons <span class="sym">(</span>?s<span class="sym">,</span>?t<span class="sym">) =&gt; {</span> <span class="kwa">print</span> s<span class="sym">;</span> plist t<span class="sym">; }</span>
  <span class="sym">|</span>  _ <span class="sym">=&gt; {}</span>
  <span class="kwa">endmatch</span><span class="sym">;</span>
<span class="sym">};</span>

plist x<span class="sym">;</span>

