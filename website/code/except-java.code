<span class="slc">// $Id: except-java.code,v 1.5 2004-11-22 07:08:55 bfulgham Exp $
</span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="slc">// Collection class code is from my friend Phil Chu, Thanks Phil!
</span>
<span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;
</span><span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;
</span><span class="kwa">import</span> java<span class="sym">.</span>text<span class="sym">.*;

</span><span class="kwa">class</span> Lo_Exception <span class="kwa">extends</span> <span class="kwc">Exception</span> <span class="sym">{
</span>    <span class="kwb">int</span> num <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwa">public</span> Lo_Exception<span class="sym">(</span><span class="kwb">int</span> num<span class="sym">) {
</span>	<span class="kwa">this</span><span class="sym">.</span>num <span class="sym">=</span> num<span class="sym">;
    }
</span>    <span class="kwa">public</span> <span class="kwc">String</span> toString<span class="sym">() {
</span>	<span class="kwa">return</span> <span class="str">&quot;Lo_Exception, num = &quot;</span> <span class="sym">+</span> <span class="kwa">this</span><span class="sym">.</span>num<span class="sym">;
    }
}

</span><span class="kwa">class</span> Hi_Exception <span class="kwa">extends</span> <span class="kwc">Exception</span> <span class="sym">{
</span>    <span class="kwb">int</span> num <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwa">public</span> Hi_Exception<span class="sym">(</span><span class="kwb">int</span> num<span class="sym">) {
</span>	<span class="kwa">this</span><span class="sym">.</span>num <span class="sym">=</span> num<span class="sym">;
    }
</span>    <span class="kwa">public</span> <span class="kwc">String</span> toString<span class="sym">() {
</span>	<span class="kwa">return</span> <span class="str">&quot;Hi_Exception, num = &quot;</span> <span class="sym">+</span> <span class="kwa">this</span><span class="sym">.</span>num<span class="sym">;
    }
}

</span><span class="kwa">public class</span> except <span class="sym">{
</span>    <span class="kwa">static</span> <span class="kwb">int</span> Lo <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwa">static</span> <span class="kwb">int</span> Hi <span class="sym">=</span> <span class="num">0</span><span class="sym">;

</span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[])</span> <span class="kwa">throws</span> <span class="kwc">IOException</span> <span class="sym">{
</span>	<span class="kwb">int</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);

</span>	<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>	    some_function<span class="sym">(</span>i<span class="sym">);
	}
</span>	<span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="str">&quot;Exceptions: HI=&quot;</span> <span class="sym">+</span> Hi <span class="sym">+</span> <span class="str">&quot; / LO=&quot;</span> <span class="sym">+</span> Lo<span class="sym">);
    }

</span>    <span class="kwa">public static</span> <span class="kwb">void</span> some_function<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">) {
</span>	<span class="kwa">try</span> <span class="sym">{
</span>	    hi_function<span class="sym">(</span>n<span class="sym">);
	}</span> <span class="kwa">catch</span> <span class="sym">(</span><span class="kwc">Exception</span> e<span class="sym">) {
</span>	    <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="str">&quot;We shouldn't get here: &quot;</span> <span class="sym">+</span> e<span class="sym">);
	}
    }

</span>    <span class="kwa">public static</span> <span class="kwb">void</span> hi_function<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)</span> <span class="kwa">throws</span> Hi_Exception<span class="sym">,</span> Lo_Exception <span class="sym">{
</span>	<span class="kwa">try</span> <span class="sym">{
</span>	    lo_function<span class="sym">(</span>n<span class="sym">);
	}</span> <span class="kwa">catch</span> <span class="sym">(</span>Hi_Exception e<span class="sym">) {
</span>	    Hi<span class="sym">++;
	}
    }

</span>    <span class="kwa">public static</span> <span class="kwb">void</span> lo_function<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)</span> <span class="kwa">throws</span> Hi_Exception<span class="sym">,</span> Lo_Exception <span class="sym">{
</span>	<span class="kwa">try</span> <span class="sym">{
</span>	    blowup<span class="sym">(</span>n<span class="sym">);
	}</span> <span class="kwa">catch</span> <span class="sym">(</span>Lo_Exception e<span class="sym">) {
</span>	    Lo<span class="sym">++;
	}
    }

</span>    <span class="kwa">public static</span> <span class="kwb">void</span> blowup<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)</span> <span class="kwa">throws</span> Hi_Exception<span class="sym">,</span> Lo_Exception <span class="sym">{
</span>	<span class="kwa">if</span> <span class="sym">((</span>n <span class="sym">%</span> <span class="num">2</span><span class="sym">) ==</span> <span class="num">0</span><span class="sym">) {
</span>	    <span class="kwa">throw new</span> Lo_Exception<span class="sym">(</span>n<span class="sym">);
	}</span> <span class="kwa">else</span> <span class="sym">{
</span>	    <span class="kwa">throw new</span> Hi_Exception<span class="sym">(</span>n<span class="sym">);
	}
    }
}</span>
