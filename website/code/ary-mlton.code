<span class="com">(* -*- mode: sml -*-</span>
<span class="com"> * $Id: ary-mlton.code,v 1.12 2007-12-20 06:02:12 bfulgham Exp $</span>
<span class="com"> * http://www.bagley.org/~doug/shootout/</span>
<span class="com"> *)</span>

<span class="kwa">fun</span> ary n <span class="sym">=</span>
    <span class="kwa">let</span>
	<span class="kwa">val</span> x <span class="sym">=</span> Array.array <span class="sym">(</span>n<span class="sym">,</span> <span class="num">0</span><span class="sym">)</span>
	<span class="kwa">val</span> y <span class="sym">=</span> Array.array <span class="sym">(</span>n<span class="sym">,</span> <span class="num">0</span><span class="sym">)</span>
    <span class="kwa">in</span>
       <span class="kwa">Int</span>.for <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> n<span class="sym">,</span> <span class="kwa">fn</span> i <span class="sym">=&gt;</span> Array.update <span class="sym">(</span>x<span class="sym">,</span> i<span class="sym">,</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">));</span>
       <span class="kwa">Int</span>.for <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">1000</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span>
		<span class="kwa">Int</span>.forDown
		<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> n<span class="sym">,</span> <span class="kwa">fn</span> i <span class="sym">=&gt;</span>
		 Array.update <span class="sym">(</span>y<span class="sym">,</span> i<span class="sym">,</span> Array.sub <span class="sym">(</span>x<span class="sym">,</span> i<span class="sym">) +</span> Array.sub <span class="sym">(</span>y<span class="sym">,</span> i<span class="sym">))));</span>
       print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(</span>Array.sub <span class="sym">(</span>y<span class="sym">,</span> <span class="num">0</span><span class="sym">)));</span>
       print <span class="str">&quot; &quot;</span><span class="sym">;</span>
       print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(</span>Array.sub <span class="sym">(</span>y<span class="sym">,</span> n <span class="sym">-</span> <span class="num">1</span><span class="sym">)));</span>
       print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>
    <span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">fun</span> atoi s <span class="sym">=</span> <span class="kwa">case Int</span>.fromString s <span class="kwa">of</span> SOME num <span class="sym">=&gt;</span> num <span class="sym">|</span> NONE <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">;</span>

<span class="kwa">fun</span> main <span class="sym">(</span>name<span class="sym">,</span> args<span class="sym">) =</span>
    <span class="kwa">let</span>
	<span class="kwa">val</span> arg <span class="sym">=</span> hd <span class="sym">(</span>args &#64; <span class="sym">[</span><span class="str">&quot;1&quot;</span><span class="sym">])</span>
	<span class="kwa">val</span> num <span class="sym">=</span> atoi arg
    <span class="kwa">in</span>
	ary num<span class="sym">;</span>
	OS.Process.success
    <span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">val</span> _ <span class="sym">=</span> main<span class="sym">(</span> CommandLine.name<span class="sym">(),</span> CommandLine.arguments<span class="sym">() );</span>
