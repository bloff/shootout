<span class="line">    1 </span><span class="slc">// $Id: objinst-kaffe.code,v 1.4 2004-11-13 07:42:24 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// Collection class code is from my friend Phil Chu, Thanks Phil!
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">import</span> java<span class="sym">.</span>util<span class="sym">.*;
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">import</span> java<span class="sym">.</span>text<span class="sym">.*;
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">class</span> Toggle <span class="sym">{
</span><span class="line">   10 </span><span class="sym"></span>    <span class="kwb">boolean</span> state <span class="sym">=</span> true<span class="sym">;
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwa">public</span> Toggle<span class="sym">(</span><span class="kwb">boolean</span> start_state<span class="sym">) {
</span><span class="line">   12 </span><span class="sym"></span>        <span class="kwa">this</span><span class="sym">.</span>state <span class="sym">=</span> start_state<span class="sym">;
</span><span class="line">   13 </span><span class="sym">    }
</span><span class="line">   14 </span><span class="sym"></span>    <span class="kwa">public</span> <span class="kwb">boolean</span> value<span class="sym">() {
</span><span class="line">   15 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span><span class="kwa">this</span><span class="sym">.</span>state<span class="sym">);
</span><span class="line">   16 </span><span class="sym">    }
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwa">public</span> Toggle activate<span class="sym">() {
</span><span class="line">   18 </span><span class="sym"></span>        <span class="kwa">this</span><span class="sym">.</span>state <span class="sym">= !</span><span class="kwa">this</span><span class="sym">.</span>state<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span><span class="kwa">this</span><span class="sym">);
</span><span class="line">   20 </span><span class="sym">    }
</span><span class="line">   21 </span><span class="sym">}
</span><span class="line">   22 </span><span class="sym">
</span><span class="line">   23 </span><span class="sym"></span><span class="kwa">class</span> NthToggle <span class="kwa">extends</span> Toggle <span class="sym">{
</span><span class="line">   24 </span><span class="sym"></span>    <span class="kwb">int</span> count_max <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>    <span class="kwb">int</span> counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span>    <span class="kwa">public</span> NthToggle<span class="sym">(</span><span class="kwb">boolean</span> start_state<span class="sym">,</span> <span class="kwb">int</span> max_counter<span class="sym">) {
</span><span class="line">   28 </span><span class="sym"></span>        <span class="kwa">super</span><span class="sym">(</span>start_state<span class="sym">);
</span><span class="line">   29 </span><span class="sym"></span>        <span class="kwa">this</span><span class="sym">.</span>count_max <span class="sym">=</span> max_counter<span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>        <span class="kwa">this</span><span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym">    }
</span><span class="line">   32 </span><span class="sym"></span>    <span class="kwa">public</span> Toggle activate<span class="sym">() {
</span><span class="line">   33 </span><span class="sym"></span>        <span class="kwa">this</span><span class="sym">.</span>counter <span class="sym">+=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   34 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">.</span>counter <span class="sym">&gt;=</span> <span class="kwa">this</span><span class="sym">.</span>count_max<span class="sym">) {
</span><span class="line">   35 </span><span class="sym"></span>            <span class="kwa">this</span><span class="sym">.</span>state <span class="sym">= !</span><span class="kwa">this</span><span class="sym">.</span>state<span class="sym">;
</span><span class="line">   36 </span><span class="sym"></span>            <span class="kwa">this</span><span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   37 </span><span class="sym">        }
</span><span class="line">   38 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span><span class="kwa">this</span><span class="sym">);
</span><span class="line">   39 </span><span class="sym">    }
</span><span class="line">   40 </span><span class="sym">}
</span><span class="line">   41 </span><span class="sym">
</span><span class="line">   42 </span><span class="sym"></span><span class="kwa">public class</span> objinst <span class="sym">{
</span><span class="line">   43 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span> args<span class="sym">[])</span> <span class="kwa">throws</span> <span class="kwc">IOException</span> <span class="sym">{
</span><span class="line">   44 </span><span class="sym"></span>        <span class="kwb">int</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   45 </span><span class="sym"></span>        Toggle toggle1 <span class="sym">=</span> <span class="kwa">new</span> Toggle<span class="sym">(</span>true<span class="sym">);
</span><span class="line">   46 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span><span class="num">5</span><span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   47 </span><span class="sym"></span>            <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">((</span>toggle1<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">())</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span><span class="sym">);
</span><span class="line">   48 </span><span class="sym">        }
</span><span class="line">   49 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   50 </span><span class="sym"></span>            Toggle toggle <span class="sym">=</span> <span class="kwa">new</span> Toggle<span class="sym">(</span>true<span class="sym">);
</span><span class="line">   51 </span><span class="sym">        }
</span><span class="line">   52 </span><span class="sym">
</span><span class="line">   53 </span><span class="sym"></span>        <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="str">&quot;&quot;</span><span class="sym">);
</span><span class="line">   54 </span><span class="sym">
</span><span class="line">   55 </span><span class="sym"></span>        NthToggle ntoggle1 <span class="sym">=</span> <span class="kwa">new</span> NthToggle<span class="sym">(</span>true<span class="sym">,</span> <span class="num">3</span><span class="sym">);
</span><span class="line">   56 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span><span class="num">8</span><span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   57 </span><span class="sym"></span>            <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">((</span>ntoggle1<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">())</span> ? <span class="str">&quot;true&quot;</span> <span class="sym">:</span> <span class="str">&quot;false&quot;</span><span class="sym">);
</span><span class="line">   58 </span><span class="sym">        }
</span><span class="line">   59 </span><span class="sym"></span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   60 </span><span class="sym"></span>            NthToggle toggle <span class="sym">=</span> <span class="kwa">new</span> NthToggle<span class="sym">(</span>true<span class="sym">,</span> <span class="num">3</span><span class="sym">);
</span><span class="line">   61 </span><span class="sym">        }
</span><span class="line">   62 </span><span class="sym">    }
</span><span class="line">   63 </span><span class="sym">}</span>
