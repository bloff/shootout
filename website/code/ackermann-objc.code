<span class="line">    1 </span><span class="com">/* -*- mode: c -*-
</span><span class="line">    2 </span><span class="com"> * $Id: ackermann-objc.code,v 1.4 2004-11-13 07:40:39 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://shootout.alioth.debian.org
</span><span class="line">    4 </span><span class="com"> *
</span><span class="line">    5 </span><span class="com"> * Brent Fulgham
</span><span class="line">    6 </span><span class="com"> */</span>
<span class="line">    7 </span>
<span class="line">    8 </span><span class="dir">#include &lt;stdio.h&gt;
</span><span class="line">    9 </span><span class="dir"></span><span class="dir">#include &lt;stdlib.h&gt;
</span><span class="line">   10 </span><span class="dir"></span><span class="dir">#include &lt;unistd.h&gt;
</span><span class="line">   11 </span><span class="dir"></span>
<span class="line">   12 </span><span class="kwb">int</span> Ack<span class="sym">(</span><span class="kwb">int</span> M<span class="sym">,</span> <span class="kwb">int</span> N<span class="sym">) {</span> <span class="kwa">return</span><span class="sym">(</span>M ? <span class="sym">(</span>Ack<span class="sym">(</span>M<span class="num">-1</span><span class="sym">,</span>N ? Ack<span class="sym">(</span>M<span class="sym">,(</span>N<span class="num">-1</span><span class="sym">)) :</span> <span class="num">1</span><span class="sym">)) :</span> N<span class="sym">+</span><span class="num">1</span><span class="sym">); }
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span><span class="line">   15 </span><span class="sym"></span>    <span class="kwb">int</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym"></span>    printf<span class="sym">(</span><span class="str">&quot;Ack(3,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">,</span> Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">));
</span><span class="line">   18 </span><span class="sym"></span>    <span class="com">/* sleep long enough so we can measure memory usage */</span>
<span class="line">   19 </span>    sleep<span class="sym">(</span><span class="num">1</span><span class="sym">);
</span><span class="line">   20 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
</span><span class="line">   21 </span><span class="sym">}
</span><span class="line">   22 </span><span class="sym"></span>
