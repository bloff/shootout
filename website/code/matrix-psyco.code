<span class="line">    1 </span><span class="slc">#!/usr/bin/python
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: matrix-psyco.code,v 1.3 2004-11-11 07:14:00 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="slc"># This program based on the original from:
</span><span class="line">    6 </span><span class="slc"></span><span class="slc"># &quot;The What, Why, Who, and Where of Python&quot; By Aaron R. Watters
</span><span class="line">    7 </span><span class="slc"></span><span class="slc"># http://www.networkcomputing.com/unixworld/tutorial/005/005.html
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="slc"># modified to pass rows and cols, and avoid matrix size checks
</span><span class="line">   10 </span><span class="slc"></span><span class="slc"># and added one optimization to reduce subscripted references in
</span><span class="line">   11 </span><span class="slc"></span><span class="slc"># inner loop.
</span><span class="line">   12 </span><span class="slc"></span>
<span class="line">   13 </span><span class="kwc">import</span> sys<span class="sym">,</span> psyco
<span class="line">   14 </span>psyco<span class="sym">.</span>full<span class="sym">()
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span>size <span class="sym">=</span> <span class="num">30
</span><span class="line">   17 </span><span class="num">
</span><span class="line">   18 </span><span class="num"></span><span class="kwb">def</span> mkmatrix<span class="sym">(</span>rows<span class="sym">,</span> cols<span class="sym">):
</span><span class="line">   19 </span><span class="sym"></span>    count <span class="sym">=</span> <span class="num">1
</span><span class="line">   20 </span><span class="num"></span>    mx <span class="sym">= [</span> None <span class="sym">] *</span> rows
<span class="line">   21 </span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span>rows<span class="sym">):
</span><span class="line">   22 </span><span class="sym"></span>        mx<span class="sym">[</span>i<span class="sym">] = [</span><span class="num">0</span><span class="sym">] *</span> cols
<span class="line">   23 </span>        <span class="kwb">for</span> j <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span>cols<span class="sym">):
</span><span class="line">   24 </span><span class="sym"></span>            mx<span class="sym">[</span>i<span class="sym">][</span>j<span class="sym">] =</span> count
<span class="line">   25 </span>            count <span class="sym">+=</span> <span class="num">1
</span><span class="line">   26 </span><span class="num"></span>    <span class="kwb">return</span> mx
<span class="line">   27 </span>
<span class="line">   28 </span><span class="kwb">def</span> mmult<span class="sym">(</span>rows<span class="sym">,</span> cols<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">):
</span><span class="line">   29 </span><span class="sym"></span>    m3 <span class="sym">= [</span> None <span class="sym">] *</span> rows
<span class="line">   30 </span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span> rows <span class="sym">):
</span><span class="line">   31 </span><span class="sym"></span>        m3<span class="sym">[</span>i<span class="sym">] = [</span><span class="num">0</span><span class="sym">] *</span> cols
<span class="line">   32 </span>        <span class="kwb">for</span> j <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span> cols <span class="sym">):
</span><span class="line">   33 </span><span class="sym"></span>            val <span class="sym">=</span> <span class="num">0
</span><span class="line">   34 </span><span class="num"></span>            <span class="kwb">for</span> k <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span> cols <span class="sym">):
</span><span class="line">   35 </span><span class="sym"></span>                val <span class="sym">+=</span> m1<span class="sym">[</span>i<span class="sym">][</span>k<span class="sym">] *</span> m2<span class="sym">[</span>k<span class="sym">][</span>j<span class="sym">]
</span><span class="line">   36 </span><span class="sym"></span>            m3<span class="sym">[</span>i<span class="sym">][</span>j<span class="sym">] =</span> val
<span class="line">   37 </span>    <span class="kwb">return</span> m3
<span class="line">   38 </span>
<span class="line">   39 </span><span class="kwb">def</span> mxprint<span class="sym">(</span>m<span class="sym">):
</span><span class="line">   40 </span><span class="sym"></span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span>size<span class="sym">):
</span><span class="line">   41 </span><span class="sym"></span>        <span class="kwb">for</span> j <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span>size<span class="sym">):
</span><span class="line">   42 </span><span class="sym"></span>            <span class="kwb">print</span> m<span class="sym">[</span>i<span class="sym">][</span>j<span class="sym">],
</span><span class="line">   43 </span><span class="sym"></span>        <span class="kwb">print</span> <span class="str">&quot;&quot;</span>
<span class="line">   44 </span>
<span class="line">   45 </span><span class="kwb">def</span> main<span class="sym">():
</span><span class="line">   46 </span><span class="sym"></span>    iter <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])
</span><span class="line">   47 </span><span class="sym"></span>    m1 <span class="sym">=</span> mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">)
</span><span class="line">   48 </span><span class="sym"></span>    m2 <span class="sym">=</span> mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">)
</span><span class="line">   49 </span><span class="sym"></span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>iter<span class="sym">):
</span><span class="line">   50 </span><span class="sym"></span>        mm <span class="sym">=</span> mmult<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">)
</span><span class="line">   51 </span><span class="sym"></span>    <span class="kwb">print</span> mm<span class="sym">[</span><span class="num">0</span><span class="sym">][</span><span class="num">0</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">2</span><span class="sym">][</span><span class="num">3</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">3</span><span class="sym">][</span><span class="num">2</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">4</span><span class="sym">][</span><span class="num">4</span><span class="sym">]
</span><span class="line">   52 </span><span class="sym">
</span><span class="line">   53 </span><span class="sym"></span>main<span class="sym">()</span>
