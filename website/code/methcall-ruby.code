<span class="slc">#!/usr/bin/ruby
</span><span class="slc"># -*- mode: ruby -*-
</span><span class="slc"># $Id: methcall-ruby.code,v 1.5 2005-04-04 14:56:50 bfulgham Exp $
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="slc"># with help from Aristarkh Zagorodnikov
</span>
<span class="kwa">class</span> Toggle
    <span class="kwa">def</span> initialize<span class="sym">(</span>start_state<span class="sym">)
</span>	&#64;bool = start_state
    <span class="kwa">end

    def</span> value
	&#64;bool
    <span class="kwa">end

    def</span> activate
	&#64;bool = <span class="sym">!</span>&#64;bool
	<span class="kwa">self
    end
end

class</span> NthToggle <span class="sym">&lt;</span> Toggle
    <span class="kwa">def</span> initialize<span class="sym">(</span>start_state<span class="sym">,</span> max_counter<span class="sym">)
</span>	<span class="kwa">super</span> start_state
	&#64;count_max = max_counter
	&#64;counter = <span class="num">0
</span>    <span class="kwa">end

    def</span> activate
	&#64;counter <span class="sym">+</span>= <span class="num">1
</span>	<span class="kwa">if</span> &#64;counter <span class="sym">&gt;</span>= &#64;count_max
	    &#64;bool = <span class="sym">!</span>&#64;bool
	    &#64;counter = <span class="num">0
</span>	<span class="kwa">end
	self
    end
end

def</span> main<span class="sym">()
</span>    n = Integer<span class="sym">(</span><span class="kwa">ARGV</span>.shift <span class="sym">||</span> <span class="num">1</span><span class="sym">)

</span>    val = <span class="num">1
</span>    toggle = Toggle.new<span class="sym">(</span>val<span class="sym">)
</span>    n.times <span class="kwa">do
</span>	val = toggle.activate<span class="sym">()</span>.value<span class="sym">()
</span>    <span class="kwa">end
    if</span> val <span class="kwa">then</span> puts <span class="str">&quot;true&quot;</span> <span class="kwa">else</span> puts <span class="str">&quot;false&quot;</span> <span class="kwa">end

</span>    val = <span class="num">1
</span>    ntoggle = NthToggle.new<span class="sym">(</span>val<span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span>    n.times <span class="kwa">do
</span>	val = ntoggle.activate<span class="sym">()</span>.value<span class="sym">()
</span>    <span class="kwa">end
    if</span> val <span class="kwa">then</span> puts <span class="str">&quot;true&quot;</span> <span class="kwa">else</span> puts <span class="str">&quot;false&quot;</span> <span class="kwa">end
end

</span>main<span class="sym">()
</span>
