<span class="line">    1 </span><span class="kwa">program</span> matrix<span class="sym">;
</span><span class="line">    2 </span><span class="sym"></span><span class="kwa">uses</span> SysUtils<span class="sym">;
</span><span class="line">    3 </span><span class="sym">
</span><span class="line">    4 </span><span class="sym"></span><span class="kwa">const
</span><span class="line">    5 </span><span class="kwa"></span>        size <span class="sym">=</span> <span class="num">30</span><span class="sym">;
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">type</span> tMatrix <span class="sym">=</span> <span class="kwa">array</span><span class="sym">[</span><span class="num">0</span>..size<span class="sym">,</span> <span class="num">0</span>..size<span class="sym">]</span> <span class="kwa">of</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">procedure</span> mkmatrix<span class="sym">(</span> rows<span class="sym">,</span> cols <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span> <span class="kwa">var</span> mx <span class="sym">:</span> tMatrix<span class="sym">);
</span><span class="line">   10 </span><span class="sym"></span><span class="kwa">var
</span><span class="line">   11 </span><span class="kwa"></span>        R<span class="sym">,</span> C <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>        count <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   14 </span><span class="kwa"></span>        Dec<span class="sym">(</span>rows<span class="sym">);
</span><span class="line">   15 </span><span class="sym"></span>        Dec<span class="sym">(</span>cols<span class="sym">);
</span><span class="line">   16 </span><span class="sym"></span>        count <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>        <span class="kwa">for</span> R <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">to</span> rows <span class="kwa">do
</span><span class="line">   18 </span><span class="kwa">        begin
</span><span class="line">   19 </span><span class="kwa">                for</span> C <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">to</span> cols <span class="kwa">do
</span><span class="line">   20 </span><span class="kwa">                begin
</span><span class="line">   21 </span><span class="kwa"></span>                        mx<span class="sym">[</span>R<span class="sym">,</span> C<span class="sym">] :=</span> count<span class="sym">;
</span><span class="line">   22 </span><span class="sym"></span>                        Inc<span class="sym">(</span>count<span class="sym">);
</span><span class="line">   23 </span><span class="sym"></span>                <span class="kwa">end</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span><span class="kwa">End</span><span class="sym">;
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span><span class="kwa">procedure</span> mmult<span class="sym">(</span>rows<span class="sym">,</span> cols <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;</span> m1<span class="sym">,</span> m2 <span class="sym">:</span> tMatrix<span class="sym">;</span> <span class="kwa">var</span> mm <span class="sym">:</span> tMatrix <span class="sym">);
</span><span class="line">   28 </span><span class="sym"></span><span class="kwa">var
</span><span class="line">   29 </span><span class="kwa"></span>        i<span class="sym">,</span> j<span class="sym">,</span> k <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>        val<span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   32 </span><span class="kwa"></span>        Dec<span class="sym">(</span>rows<span class="sym">);
</span><span class="line">   33 </span><span class="sym"></span>        Dec<span class="sym">(</span>cols<span class="sym">);
</span><span class="line">   34 </span><span class="sym"></span>        <span class="kwa">For</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">To</span> rows <span class="kwa">do
</span><span class="line">   35 </span><span class="kwa">        begin
</span><span class="line">   36 </span><span class="kwa">                For</span> j <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">To</span> cols <span class="kwa">do
</span><span class="line">   37 </span><span class="kwa">                begin
</span><span class="line">   38 </span><span class="kwa"></span>                        val <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   39 </span><span class="sym"></span>                        <span class="kwa">For</span> k <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">To</span> cols <span class="kwa">do
</span><span class="line">   40 </span><span class="kwa">                        begin
</span><span class="line">   41 </span><span class="kwa"></span>                                Inc<span class="sym">(</span>val<span class="sym">,</span> m1<span class="sym">[</span>i<span class="sym">,</span> k<span class="sym">] *</span> m2<span class="sym">[</span>k<span class="sym">,</span> j<span class="sym">]);
</span><span class="line">   42 </span><span class="sym"></span>                        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   43 </span><span class="sym"></span>                        mm<span class="sym">[</span>i<span class="sym">,</span> j<span class="sym">] :=</span> val<span class="sym">;
</span><span class="line">   44 </span><span class="sym"></span>                <span class="kwa">end</span><span class="sym">;
</span><span class="line">   45 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   46 </span><span class="sym"></span><span class="kwa">End</span><span class="sym">;
</span><span class="line">   47 </span><span class="sym">
</span><span class="line">   48 </span><span class="sym">
</span><span class="line">   49 </span><span class="sym"></span><span class="kwa">var</span> NUM<span class="sym">,</span> I <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;
</span><span class="line">   50 </span><span class="sym"></span>        M1<span class="sym">,</span> M2<span class="sym">,</span> MM <span class="sym">:</span> tMatrix<span class="sym">;
</span><span class="line">   51 </span><span class="sym">
</span><span class="line">   52 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   53 </span><span class="kwa">        if</span> ParamCount <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
</span><span class="line">   54 </span><span class="kwa"></span>                NUM <span class="sym">:=</span> <span class="num">1
</span><span class="line">   55 </span><span class="num"></span>        <span class="kwa">else
</span><span class="line">   56 </span><span class="kwa"></span>                NUM <span class="sym">:=</span> StrToInt<span class="sym">(</span>ParamStr<span class="sym">(</span><span class="num">1</span><span class="sym">));
</span><span class="line">   57 </span><span class="sym">
</span><span class="line">   58 </span><span class="sym"></span>        <span class="kwa">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> NUM <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   59 </span><span class="sym">
</span><span class="line">   60 </span><span class="sym"></span>        mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">,</span> M1<span class="sym">);
</span><span class="line">   61 </span><span class="sym"></span>        mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">,</span> M2<span class="sym">);
</span><span class="line">   62 </span><span class="sym">
</span><span class="line">   63 </span><span class="sym"></span>        <span class="kwa">for</span> I <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">To</span> NUM <span class="kwa">do
</span><span class="line">   64 </span><span class="kwa">        begin
</span><span class="line">   65 </span><span class="kwa"></span>                mmult<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">,</span> M1<span class="sym">,</span> M2<span class="sym">,</span> MM<span class="sym">);
</span><span class="line">   66 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   67 </span><span class="sym"></span>        WriteLn<span class="sym">(</span> IntToStr<span class="sym">(</span>MM<span class="sym">[</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">]) +</span> <span class="str">' '</span> <span class="sym">+</span> IntToStr<span class="sym">(</span>MM<span class="sym">[</span><span class="num">2</span><span class="sym">,</span> <span class="num">3</span><span class="sym">]) +</span> <span class="str">' '</span> <span class="sym">+
</span><span class="line">   68 </span><span class="sym"></span>                         IntToStr<span class="sym">(</span>MM<span class="sym">[</span><span class="num">3</span><span class="sym">,</span> <span class="num">2</span><span class="sym">]) +</span> <span class="str">' '</span> <span class="sym">+</span> IntToStr<span class="sym">(</span>MM<span class="sym">[</span><span class="num">4</span><span class="sym">,</span> <span class="num">4</span><span class="sym">]));
</span><span class="line">   69 </span><span class="sym"></span><span class="kwa">end</span>.
