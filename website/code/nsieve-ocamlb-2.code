<span class="com">(* The Computer Language Benchmarks Game</span>
<span class="com"> * http://shootout.alioth.debian.org/</span>
<span class="com"> *</span>
<span class="com"> * Contributed by Christophe TROESTLER</span>
<span class="com"> * Modified by Vladimir Silyaev</span>
<span class="com"> * Modified by Leonard Schneider</span>
<span class="com"> *)</span>

<span class="kwa">open</span> Bigarray

<span class="kwa">let</span> nsieve m <span class="sym">=</span>
  <span class="kwa">let</span> a <span class="sym">=</span> Array1.create Bigarray.int8_unsigned Bigarray.c_layout m <span class="kwa">in</span>
  Array1.fill a <span class="num">1</span><span class="sym">;</span>
  <span class="kwa">let</span> count <span class="sym">=</span> ref <span class="num">0</span> <span class="kwa">in</span>
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">2</span> <span class="kwa">to</span> m <span class="sym">-</span> <span class="num">1</span> <span class="kwa">do</span>
      <span class="kwa">if</span> a.<span class="sym">{</span>i<span class="sym">} =</span> <span class="num">1</span> <span class="kwa">then</span> <span class="sym">(</span>
      incr count<span class="sym">;</span>
      <span class="kwa">let</span> j <span class="sym">=</span> <span class="kwd">ref</span><span class="sym">(</span>i <span class="kwa">lsl</span> <span class="num">1</span><span class="sym">)</span> <span class="kwa">in</span>
      <span class="kwa">while</span> <span class="sym">!</span>j <span class="sym">&lt;</span> m <span class="kwa">do</span>
        a.<span class="sym">{!</span>j<span class="sym">} &lt;-</span> <span class="num">0</span><span class="sym">;</span>
        j <span class="sym">:= !</span>j<span class="sym">+</span>i
      <span class="kwa">done</span><span class="sym">;</span>
    <span class="sym">)</span>
  <span class="kwa">done</span><span class="sym">;</span>
  Printf.printf <span class="str">&quot;Primes up to %8u %8u</span><span class="esc">\n</span><span class="str">&quot;</span> m <span class="sym">!</span>count


<span class="kwa">let</span> <span class="sym">() =</span>
  <span class="com">(* Use [Array.get] so it raises an exception even if compiled with -unsafe *)</span>
  <span class="kwa">let</span> n <span class="sym">=</span> <span class="kwa">try</span> <span class="kwd">int_of_string</span> <span class="sym">(</span>Array.get Sys.argv <span class="num">1</span><span class="sym">)</span> <span class="kwa">with</span> _ <span class="sym">-&gt;</span> <span class="num">2</span> <span class="kwa">in</span>
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> <span class="num">2</span> <span class="kwa">do</span> <span class="kwd">nsieve</span><span class="sym">(</span><span class="num">10000</span> <span class="kwa">lsl</span> <span class="sym">(</span>n<span class="sym">-</span>i<span class="sym">))</span> <span class="kwa">done</span>

