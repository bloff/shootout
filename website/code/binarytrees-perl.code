<span class="slc">#!/usr/bin/perl
</span><span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># Contributed by Doug King
</span>

<span class="kwa">use</span> integer<span class="sym">;

</span><span class="kwa">sub</span> item_check <span class="sym">{
</span>    <span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$tree</span><span class="sym">) =</span> &#64;_<span class="sym">;

</span>    <span class="kwa">return</span> <span class="kwb">$$tree</span><span class="sym">[</span><span class="num">2</span><span class="sym">]</span> <span class="kwa">unless</span> <span class="sym">(</span>defined <span class="kwb">$$tree</span><span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span>    <span class="kwa">return</span> <span class="kwb">$$tree</span><span class="sym">[</span><span class="num">2</span><span class="sym">] +</span> item_check<span class="sym">(</span><span class="kwb">$$tree</span><span class="sym">[</span><span class="num">0</span><span class="sym">]) -</span> item_check<span class="sym">(</span><span class="kwb">$$tree</span><span class="sym">[</span><span class="num">1</span><span class="sym">]);
}


</span><span class="kwa">sub</span> bottom_up_tree <span class="sym">{
</span>    <span class="kwc">my</span><span class="sym">(</span><span class="kwb">$item</span><span class="sym">,</span> <span class="kwb">$depth</span><span class="sym">) =</span> &#64;_<span class="sym">;

</span>    <span class="kwa">return</span> <span class="sym">[</span> undef<span class="sym">,</span> undef<span class="sym">,</span> <span class="kwb">$item</span> <span class="sym">]</span> <span class="kwa">if</span> <span class="kwb">$depth</span> <span class="sym">&lt;=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwa">return</span> <span class="sym">[</span> bottom_up_tree<span class="sym">(</span><span class="num">2</span> <span class="sym">*</span> <span class="kwb">$item</span> <span class="num">- 1</span><span class="sym">,</span> <span class="kwb">$depth</span> <span class="num">- 1</span><span class="sym">),
</span>             bottom_up_tree<span class="sym">(</span><span class="num">2</span> <span class="sym">*</span> <span class="kwb">$item</span><span class="sym">,</span>     <span class="kwb">$depth</span> <span class="num">- 1</span><span class="sym">),
</span>             <span class="kwb">$item</span> <span class="sym">];
}


</span><span class="kwb">$n</span> <span class="sym">=</span> shift &#64;ARGV<span class="sym">;

</span><span class="kwb">$min_depth</span> <span class="sym">=</span> <span class="num">4</span><span class="sym">;

</span><span class="kwa">if</span> <span class="sym">( (</span><span class="kwb">$min_depth</span> <span class="sym">+</span> <span class="num">2</span><span class="sym">) &gt;</span> <span class="kwb">$n</span><span class="sym">) {
</span>    <span class="kwb">$max_depth</span> <span class="sym">=</span> <span class="kwb">$min_depth</span> <span class="sym">+</span> <span class="num">2</span><span class="sym">;
}</span> <span class="kwa">else</span> <span class="sym">{
</span>    <span class="kwb">$max_depth</span> <span class="sym">=</span> <span class="kwb">$n</span><span class="sym">;
}

</span><span class="kwb">$stretch_depth</span> <span class="sym">=</span> <span class="kwb">$max_depth</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;

</span><span class="kwb">$stretch_tree</span> <span class="sym">=</span> bottom_up_tree<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="kwb">$stretch_depth</span><span class="sym">);
</span>print <span class="str">&quot;stretch tree of depth $stretch_depth</span><span class="esc">\t </span> <span class="str">check: &quot;</span><span class="sym">,</span> item_check<span class="sym">(</span><span class="kwb">$stretch_tree</span><span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="kwb">$stretch_tree</span> <span class="sym">=</span> undef<span class="sym">;

</span><span class="kwb">$long_lived_tree</span> <span class="sym">=</span> bottom_up_tree<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="kwb">$max_depth</span><span class="sym">);

</span><span class="kwb">$depth</span> <span class="sym">=</span> <span class="kwb">$min_depth</span><span class="sym">;
</span><span class="kwa">while</span><span class="sym">(</span> <span class="kwb">$depth</span> <span class="sym">&lt;=</span> <span class="kwb">$max_depth</span> <span class="sym">) {

</span>    <span class="kwb">$iterations</span> <span class="sym">=</span> <span class="num">2</span> <span class="sym">** (</span><span class="kwb">$max_depth</span> <span class="sym">-</span> <span class="kwb">$depth</span> <span class="sym">+</span> <span class="kwb">$min_depth</span><span class="sym">);
</span>    <span class="kwb">$check</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;

</span>    <span class="kwa">for</span> <span class="kwb">$i</span> <span class="sym">(</span><span class="num">1</span>..<span class="kwb">$iterations</span><span class="sym">) {
</span>        <span class="kwb">$temp_tree</span> <span class="sym">=</span> bottom_up_tree<span class="sym">(</span><span class="kwb">$i</span><span class="sym">,</span> <span class="kwb">$depth</span><span class="sym">);
</span>        <span class="kwb">$check</span> <span class="sym">+=</span> item_check<span class="sym">(</span><span class="kwb">$temp_tree</span><span class="sym">);
</span>        <span class="kwb">$temp_tree</span> <span class="sym">=</span> undef<span class="sym">;

</span>        <span class="kwb">$temp_tree</span> <span class="sym">=</span> bottom_up_tree<span class="sym">(-</span><span class="kwb">$i</span><span class="sym">,</span> <span class="kwb">$depth</span><span class="sym">);
</span>        <span class="kwb">$check</span> <span class="sym">+=</span> item_check<span class="sym">(</span><span class="kwb">$temp_tree</span><span class="sym">);
</span>        <span class="kwb">$temp_tree</span> <span class="sym">=</span> undef<span class="sym">;
    }

</span>    print <span class="kwb">$iterations</span> <span class="sym">*</span> <span class="num">2</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\t </span> <span class="str">trees of depth $depth</span><span class="esc">\t </span> <span class="str">check: &quot;</span><span class="sym">,</span> <span class="kwb">$check</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span>    <span class="kwb">$depth</span> <span class="sym">+=</span> <span class="num">2</span><span class="sym">;
}

</span>print <span class="str">&quot;long lived tree of depth $max_depth</span><span class="esc">\t </span> <span class="str">check: &quot;</span><span class="sym">,</span> item_check<span class="sym">(</span><span class="kwb">$long_lived_tree</span><span class="sym">);</span>
