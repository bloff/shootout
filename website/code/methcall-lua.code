<span class="slc">-- $Id: methcall-lua.code,v 1.8 2006-09-20 05:51:57 bfulgham Exp $</span>
<span class="slc">-- http://shootout.alioth.debian.org</span>
<span class="slc">-- contributed by Roberto Ierusalimschy</span>

<span class="slc">--------------------------------------------------------------</span>
<span class="slc">-- Toggle class</span>
<span class="slc">--------------------------------------------------------------</span>

Toggle <span class="sym">= {}</span>

<span class="kwa">function</span> Toggle<span class="sym">:</span>value <span class="sym">()</span>
  <span class="kwa">return</span> self.state
<span class="kwa">end</span>

<span class="kwa">function</span> Toggle<span class="sym">:</span>activate <span class="sym">()</span>
  self.state <span class="sym">=</span> <span class="kwa">not</span> self.state
  <span class="kwa">return</span> self
<span class="kwa">end</span>

<span class="kwa">function</span> Toggle<span class="sym">:</span>new <span class="sym">(</span>start_state<span class="sym">)</span>
  <span class="kwa">local</span> o <span class="sym">= {</span>state <span class="sym">=</span> start_state<span class="sym">}</span>
  self.__index <span class="sym">=</span>self
  setmetatable<span class="sym">(</span>o<span class="sym">,</span> self<span class="sym">)</span>
  <span class="kwa">return</span> o
<span class="kwa">end</span>


<span class="slc">--------------------------------------------------------------</span>
<span class="slc">-- NthToggle class</span>
<span class="slc">--------------------------------------------------------------</span>

NthToggle <span class="sym">=</span> Toggle<span class="sym">:</span>new<span class="sym">()</span>

<span class="kwa">function</span> NthToggle<span class="sym">:</span>activate <span class="sym">()</span>
  self.counter <span class="sym">=</span> self.counter <span class="sym">+</span> <span class="num">1</span>
  <span class="kwa">if</span> self.counter <span class="sym">&gt;=</span> self.count_max <span class="kwa">then</span>
    self.state <span class="sym">=</span> <span class="kwa">not</span> self.state
    self.counter <span class="sym">=</span> <span class="num">0</span>
  <span class="kwa">end</span>
  <span class="kwa">return</span> self
<span class="kwa">end</span>

<span class="kwa">function</span> NthToggle<span class="sym">:</span>new <span class="sym">(</span>start_state<span class="sym">,</span> max_counter<span class="sym">)</span>
  <span class="kwa">local</span> o <span class="sym">=</span> Toggle.new<span class="sym">(</span>self<span class="sym">,</span> start_state<span class="sym">)</span>
  o.count_max <span class="sym">=</span> max_counter
  o.counter <span class="sym">=</span> <span class="num">0</span>
  <span class="kwa">return</span> o
<span class="kwa">end</span>


<span class="slc">-----------------------------------------------------------</span>
<span class="slc">-- main</span>
<span class="slc">-----------------------------------------------------------</span>

<span class="kwa">function</span> main <span class="sym">()</span>
  <span class="kwa">local</span> N <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">((</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span> <span class="kwa">or</span> <span class="num">1</span>

  <span class="kwa">local</span> val <span class="sym">=</span> <span class="num">1</span>
  <span class="kwa">local</span> toggle <span class="sym">=</span> Toggle<span class="sym">:</span>new<span class="sym">(</span>val<span class="sym">)</span>
  <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>N <span class="kwa">do</span>
    val <span class="sym">=</span> toggle<span class="sym">:</span>activate<span class="sym">():</span>value<span class="sym">()</span>
  <span class="kwa">end</span>
  <span class="kwa">print</span><span class="sym">(</span>val <span class="kwa">and</span> <span class="str">&quot;true&quot;</span> <span class="kwa">or</span> <span class="str">&quot;false&quot;</span><span class="sym">)</span>

  val <span class="sym">=</span> <span class="num">1</span>
  <span class="kwa">local</span> ntoggle <span class="sym">=</span> NthToggle<span class="sym">:</span>new<span class="sym">(</span>val<span class="sym">,</span> <span class="num">3</span><span class="sym">)</span>
  <span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span>N <span class="kwa">do</span>
    val <span class="sym">=</span> ntoggle<span class="sym">:</span>activate<span class="sym">():</span>value<span class="sym">()</span>
  <span class="kwa">end</span>
  <span class="kwa">print</span><span class="sym">(</span>val <span class="kwa">and</span> <span class="str">&quot;true&quot;</span> <span class="kwa">or</span> <span class="str">&quot;false&quot;</span><span class="sym">)</span>
<span class="kwa">end</span>

main<span class="sym">()</span>


