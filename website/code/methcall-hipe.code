<span class="line">    1 </span><span class="slc">%%% -*- mode: erlang -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%%% $Id: methcall-hipe.code,v 1.3 2004-11-11 07:14:00 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%%% http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">%%%
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">%%% Provided by Bengt Kleberg (Erlang Guru!)
</span><span class="line">    6 </span><span class="slc"></span><span class="sym">-</span>module<span class="sym">(</span>methcall<span class="sym">)</span>.
<span class="line">    7 </span><span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.
<span class="line">    8 </span>
<span class="line">    9 </span><span class="sym">-</span><span class="kwb">record</span><span class="sym">(</span> toggle_base<span class="sym">, {</span>state<span class="sym">,</span> value <span class="sym">=</span> <span class="kwa">fun</span> value<span class="sym">/</span><span class="num">1</span><span class="sym">,</span> activate <span class="sym">=</span> <span class="kwa">fun</span> activate<span class="sym">/</span><span class="num">1</span><span class="sym">} )</span>.
<span class="line">   10 </span><span class="sym">-</span><span class="kwb">record</span><span class="sym">(</span> toggle<span class="sym">, {</span>toggle_base<span class="sym">} )</span>.
<span class="line">   11 </span><span class="sym">-</span><span class="kwb">record</span><span class="sym">(</span> nth_toggle<span class="sym">, {</span> toggle_base<span class="sym">,</span> counter <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> max_count <span class="sym">} )</span>.
<span class="line">   12 </span>
<span class="line">   13 </span><span class="slc">%% ignore program argument
</span><span class="line">   14 </span><span class="slc"></span>main<span class="sym">() -&gt;</span> main<span class="sym">([</span><span class="str">'1'</span><span class="sym">])</span>.
<span class="line">   15 </span>main<span class="sym">([</span>Arg<span class="sym">]) -&gt;
</span><span class="line">   16 </span><span class="sym"></span>        Number_of_Times <span class="sym">=</span> erlang<span class="sym">:</span><span class="kwb">list_to_integer</span><span class="sym">(</span>erlang<span class="sym">:</span><span class="kwb">atom_to_list</span><span class="sym">(</span>Arg<span class="sym">)),
</span><span class="line">   17 </span><span class="sym"></span>        State <span class="sym">=</span> activate_toggle<span class="sym">(</span> Number_of_Times<span class="sym">,</span> toggle_new<span class="sym">(</span> true <span class="sym">) ),
</span><span class="line">   18 </span><span class="sym"></span>        io<span class="sym">:</span>fwrite<span class="sym">(</span><span class="str">&quot;~w</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, [</span>State<span class="sym">]),
</span><span class="line">   19 </span><span class="sym"></span>        Nth_State <span class="sym">=</span> activate_toggle<span class="sym">(</span> Number_of_Times<span class="sym">,</span> nth_toggle_new<span class="sym">(</span> true<span class="sym">,</span> <span class="num">3</span> <span class="sym">) ),
</span><span class="line">   20 </span><span class="sym"></span>        io<span class="sym">:</span>fwrite<span class="sym">(</span><span class="str">&quot;~w</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, [</span>Nth_State<span class="sym">]),
</span><span class="line">   21 </span><span class="sym"></span>        erlang<span class="sym">:</span><span class="kwb">halt</span><span class="sym">()</span>.
<span class="line">   22 </span>
<span class="line">   23 </span>activate_toggle<span class="sym">(</span> <span class="num">0</span><span class="sym">,</span> Toggle <span class="sym">) -&gt;
</span><span class="line">   24 </span><span class="sym"></span>        Value <span class="sym">= (</span>Toggle#toggle.toggle_base<span class="sym">)</span>#toggle_base.value<span class="sym">,
</span><span class="line">   25 </span><span class="sym"></span>        Value<span class="sym">(</span> Toggle <span class="sym">);
</span><span class="line">   26 </span><span class="sym"></span>activate_toggle<span class="sym">(</span> Number_of_Times<span class="sym">,</span> Toggle <span class="sym">) -&gt;
</span><span class="line">   27 </span><span class="sym"></span>        Activate <span class="sym">= (</span>Toggle#toggle.toggle_base<span class="sym">)</span>#toggle_base.activate<span class="sym">,
</span><span class="line">   28 </span><span class="sym"></span>        activate_toggle<span class="sym">(</span> Number_of_Times <span class="num">- 1</span><span class="sym">,</span> Activate<span class="sym">(</span> Toggle <span class="sym">))</span>.
<span class="line">   29 </span>
<span class="line">   30 </span>
<span class="line">   31 </span>toggle_base_new<span class="sym">(</span> State <span class="sym">) -&gt;
</span><span class="line">   32 </span><span class="sym"></span>        #toggle_base<span class="sym">{</span>state <span class="sym">=</span> State<span class="sym">}</span>.
<span class="line">   33 </span>
<span class="line">   34 </span>toggle_new<span class="sym">(</span> State <span class="sym">) -&gt;
</span><span class="line">   35 </span><span class="sym"></span>        Toggle <span class="sym">=</span> toggle_base_new<span class="sym">(</span> State <span class="sym">),
</span><span class="line">   36 </span><span class="sym"></span>        #toggle<span class="sym">{</span>toggle_base <span class="sym">=</span> Toggle<span class="sym">}</span>.
<span class="line">   37 </span>
<span class="line">   38 </span>nth_toggle_new<span class="sym">(</span> State<span class="sym">,</span> Max_Count <span class="sym">) -&gt;
</span><span class="line">   39 </span><span class="sym"></span>        Toggle <span class="sym">=</span> toggle_base_new<span class="sym">(</span> State <span class="sym">),
</span><span class="line">   40 </span><span class="sym"></span>        #nth_toggle<span class="sym">{</span>toggle_base <span class="sym">=</span> Toggle<span class="sym">,</span> max_count <span class="sym">=</span> Max_Count <span class="num">- 1</span><span class="sym">}</span>.
<span class="line">   41 </span>
<span class="line">   42 </span>
<span class="line">   43 </span>activate<span class="sym">(</span> #toggle_base<span class="sym">{</span>state <span class="sym">=</span> true<span class="sym">} =</span> Toggle_Base <span class="sym">) -&gt;
</span><span class="line">   44 </span><span class="sym"></span>        Toggle_Base#toggle_base<span class="sym">{</span>state <span class="sym">=</span> false<span class="sym">};
</span><span class="line">   45 </span><span class="sym"></span>activate<span class="sym">(</span> #toggle_base<span class="sym">{</span>state <span class="sym">=</span> false<span class="sym">} =</span> Toggle_Base <span class="sym">) -&gt;
</span><span class="line">   46 </span><span class="sym"></span>        Toggle_Base#toggle_base<span class="sym">{</span>state <span class="sym">=</span> true<span class="sym">};
</span><span class="line">   47 </span><span class="sym"></span>activate<span class="sym">(</span> #toggle<span class="sym">{</span>toggle_base <span class="sym">=</span> Toggle_Base<span class="sym">} =</span> Toggle <span class="sym">) -&gt;
</span><span class="line">   48 </span><span class="sym"></span>        Toggle#toggle<span class="sym">{</span>toggle_base <span class="sym">=</span> activate<span class="sym">(</span> Toggle_Base <span class="sym">)};
</span><span class="line">   49 </span><span class="sym"></span>activate<span class="sym">(</span> #nth_toggle<span class="sym">{</span>counter <span class="sym">=</span> Max_Count<span class="sym">,</span> max_count <span class="sym">=</span> Max_Count<span class="sym">,</span> toggle_base <span class="sym">=</span> Toggle_Base<span class="sym">} =</span> Nth_Toggle <span class="sym">) -&gt;
</span><span class="line">   50 </span><span class="sym"></span>        Nth_Toggle#nth_toggle<span class="sym">{</span>toggle_base <span class="sym">=</span> activate<span class="sym">(</span> Toggle_Base <span class="sym">),</span> counter <span class="sym">=</span> <span class="num">0</span><span class="sym">};
</span><span class="line">   51 </span><span class="sym"></span>activate<span class="sym">(</span> #nth_toggle<span class="sym">{</span>counter <span class="sym">=</span> Count<span class="sym">} =</span> Nth_Toggle <span class="sym">) -&gt;
</span><span class="line">   52 </span><span class="sym"></span>        Nth_Toggle#nth_toggle<span class="sym">{</span>counter <span class="sym">=</span> Count <span class="sym">+</span> <span class="num">1</span><span class="sym">}</span>.
<span class="line">   53 </span>
<span class="line">   54 </span>value<span class="sym">(</span> #toggle_base<span class="sym">{</span>state <span class="sym">=</span> State<span class="sym">} ) -&gt;
</span><span class="line">   55 </span><span class="sym"></span>        State<span class="sym">;
</span><span class="line">   56 </span><span class="sym"></span>value<span class="sym">(</span> #toggle<span class="sym">{</span>toggle_base <span class="sym">=</span> Toggle_Base<span class="sym">} ) -&gt;
</span><span class="line">   57 </span><span class="sym"></span>        value<span class="sym">(</span> Toggle_Base <span class="sym">);
</span><span class="line">   58 </span><span class="sym"></span>value<span class="sym">(</span> #nth_toggle<span class="sym">{</span>toggle_base <span class="sym">=</span> Toggle_Base<span class="sym">} ) -&gt;
</span><span class="line">   59 </span><span class="sym"></span>        value<span class="sym">(</span> Toggle_Base <span class="sym">)</span>.
<span class="line">   60 </span>
