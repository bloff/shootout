<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
/* The Great Computer Language Shootout 
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy (Clean novice)
   
To compile:	
   cleanIDE.exe <I><FONT COLOR="#B22222">--batch-force-build &quot;e:\shoot\contrib\clean\matrix.prj&quot;
</FONT></I>
To run:
   matrix.exe -con 300
*/


<B><FONT COLOR="#A020F0">module</FONT></B> matrix
<B><FONT COLOR="#A020F0">import</FONT></B> StdEnv, LanguageShootout

SIZE :== 30

Start = resultString (mmultLoop argi SIZE SIZE a b c)
   <B><FONT COLOR="#A020F0">where</FONT></B>
      a = initm (mkm SIZE SIZE) 0 1 SIZE SIZE
      b = initm (mkm SIZE SIZE) 0 1 SIZE SIZE      
      c = mkm SIZE SIZE
      
      mkm <B><FONT COLOR="#228B22">:: Int Int -&gt; {#.{#Int}}   
</FONT></B>      mkm nrows ncols = {createArray ncols 0 \\ i&lt;-[0..nrows-1]} 

      initm m i count nrows ncols
         | i&lt;nrows = initm {m&amp;[i,j]=count+j \\ j&lt;-[0..ncols-1]} 
            (i+1) (count+ncols) nrows ncols 
         = m

      resultString a =
         toString(a.[0,0]) +++ <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> +++
         toString(a.[2,3]) +++ <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> +++
         toString(a.[3,2]) +++ <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> +++
         toString(a.[4,4]) +++ <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>
     
    
mmultLoop n nrows ncols a b c
   | n==0 = c
   = mmultLoop (n-1) nrows ncols a b 
      (mmult nrows ncols a (transpose ncols nrows b) c)
      

mmult nrows ncols a bt c
   = {c&amp;[i,j]= rmult 0 ncols 0 a.[i] bt.[j] \\ i&lt;-[0..nrows-1], j&lt;-[0..nrows-1]}
   <B><FONT COLOR="#A020F0">where</FONT></B>
      rmult <B><FONT COLOR="#228B22">:: !Int !.Int !Int !{#Int} !{#Int} -&gt; Int
</FONT></B>      rmult k n v a b
         | k&lt;n = rmult (k+1) n (v + a.[k]*b.[k]) a b
         = v

transpose <B><FONT COLOR="#228B22">:: !Int !Int !{#.{#Int}} -&gt; {#.{#Int}}
</FONT></B>transpose nrows ncols m = { {m.[i,j] \\ i&lt;-[0..nrows-1]} \\ j&lt;-[0..ncols-1]} 

   </pre></td></tr></table>
