#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>php <span class="sym">-</span>f
<span class="sym">&lt;</span>?php
<span class="com">/*</span>
<span class="com"> $Id: heapsort-php.code,v 1.7 2006-09-20 05:51:34 bfulgham Exp $</span>
<span class="com"> http://shootout.alioth.debian.org/</span>
<span class="com">*/</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;IM&quot;</span><span class="sym">,</span> <span class="num">139968</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;IA&quot;</span><span class="sym">,</span> <span class="num">3877</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;IC&quot;</span><span class="sym">,</span> <span class="num">29573</span><span class="sym">);</span>

<span class="kwb">$LAST</span> <span class="sym">=</span> <span class="num">42</span><span class="sym">;</span>
<span class="kwa">function</span> gen_random <span class="sym">(</span><span class="kwb">$n</span><span class="sym">) {</span>
    <span class="kwa">global</span> <span class="kwb">$LAST</span><span class="sym">;</span>
    <span class="kwa">return</span><span class="sym">( (</span><span class="kwb">$n</span> <span class="sym">* (</span><span class="kwb">$LAST</span> <span class="sym">= (</span><span class="kwb">$LAST</span> <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">)</span> % IM<span class="sym">)) /</span> IM <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">function</span> heapsort <span class="sym">(</span><span class="kwb">$n</span><span class="sym">, &amp;</span><span class="kwb">$ra</span><span class="sym">) {</span>
    <span class="kwb">$l</span> <span class="sym">= (</span><span class="kwb">$n</span> <span class="sym">&gt;&gt;</span> <span class="num">1</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwb">$ir</span> <span class="sym">=</span> <span class="kwb">$n</span><span class="sym">;</span>

    <span class="kwa">while</span> <span class="sym">(</span><span class="num">1</span><span class="sym">) {</span>
	<span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$l</span> <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">) {</span>
	    <span class="kwb">$rra</span> <span class="sym">=</span> <span class="kwb">$ra</span><span class="sym">[--</span><span class="kwb">$l</span><span class="sym">];</span>
	<span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
	    <span class="kwb">$rra</span> <span class="sym">=</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$ir</span><span class="sym">];</span>
	    <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$ir</span><span class="sym">] =</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
	    <span class="kwa">if</span> <span class="sym">(--</span><span class="kwb">$ir</span> <span class="sym">==</span> <span class="num">1</span><span class="sym">) {</span>
		<span class="kwb">$ra</span><span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> <span class="kwb">$rra</span><span class="sym">;</span>
		<span class="kwa">return</span><span class="sym">;</span>
	    <span class="sym">}</span>
	<span class="sym">}</span>
	<span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$l</span><span class="sym">;</span>
	<span class="kwb">$j</span> <span class="sym">=</span> <span class="kwb">$l</span> <span class="sym">&lt;&lt;</span> <span class="num">1</span><span class="sym">;</span>
	<span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$j</span> <span class="sym">&lt;=</span> <span class="kwb">$ir</span><span class="sym">) {</span>
	    <span class="kwa">if</span> <span class="sym">((</span><span class="kwb">$j</span> <span class="sym">&lt;</span> <span class="kwb">$ir</span><span class="sym">) &amp;&amp; (</span><span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">] &lt;</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">+</span><span class="num">1</span><span class="sym">])) {</span>
		<span class="kwb">$j</span><span class="sym">++;</span>
	    <span class="sym">}</span>
	    <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$rra</span> <span class="sym">&lt;</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">]) {</span>
		<span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">];</span>
		<span class="kwb">$j</span> <span class="sym">+= (</span><span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$j</span><span class="sym">);</span>
	    <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
		<span class="kwb">$j</span> <span class="sym">=</span> <span class="kwb">$ir</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
	    <span class="sym">}</span>
	<span class="sym">}</span>
	<span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$rra</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>


<span class="kwb">$N</span> <span class="sym">= (</span><span class="kwb">$argc</span> <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">] :</span> <span class="num">1</span><span class="sym">;</span>

<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">1</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;=</span><span class="kwb">$N</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++) {</span>
    <span class="kwb">$ary</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> gen_random<span class="sym">(</span><span class="num">1</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="com">/*</span>
<span class="com">for ($i=0; $i&lt;$N; $i++) {</span>
<span class="com">    printf(&quot;%4d %.15f\n&quot;, $i, $ary[$i]);</span>
<span class="com">}</span>
<span class="com">*/</span>

heapsort<span class="sym">(</span><span class="kwb">$N</span><span class="sym">,</span> <span class="kwb">$ary</span><span class="sym">);</span>

<span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;%.10f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwb">$ary</span><span class="sym">[</span><span class="kwb">$N</span><span class="sym">]);</span>
?<span class="sym">&gt;</span>
