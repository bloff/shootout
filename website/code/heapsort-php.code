<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>php <span class="sym">-</span>f
<span class="line">    2 </span><span class="sym">&lt;</span>?php
<span class="line">    3 </span><span class="com">/*
</span><span class="line">    4 </span><span class="com"> $Id: heapsort-php.code,v 1.4 2004-11-13 07:41:41 bfulgham Exp $
</span><span class="line">    5 </span><span class="com"> http://shootout.alioth.debian.org/
</span><span class="line">    6 </span><span class="com">*/</span>
<span class="line">    7 </span><span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;IM&quot;</span><span class="sym">,</span> <span class="num">139968</span><span class="sym">);
</span><span class="line">    8 </span><span class="sym"></span><span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;IA&quot;</span><span class="sym">,</span> <span class="num">3877</span><span class="sym">);
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;IC&quot;</span><span class="sym">,</span> <span class="num">29573</span><span class="sym">);
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span><span class="kwb">$LAST</span> <span class="sym">=</span> <span class="num">42</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span><span class="kwa">function</span> gen_random <span class="sym">(</span><span class="kwb">$n</span><span class="sym">) {
</span><span class="line">   13 </span><span class="sym"></span>    <span class="kwa">global</span> <span class="kwb">$LAST</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">( (</span><span class="kwb">$n</span> <span class="sym">* (</span><span class="kwb">$LAST</span> <span class="sym">= (</span><span class="kwb">$LAST</span> <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">)</span> % IM<span class="sym">)) /</span> IM <span class="sym">);
</span><span class="line">   15 </span><span class="sym">}
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym"></span><span class="kwa">function</span> heapsort <span class="sym">(</span><span class="kwb">$n</span><span class="sym">, &amp;</span><span class="kwb">$ra</span><span class="sym">) {
</span><span class="line">   18 </span><span class="sym"></span>    <span class="kwb">$l</span> <span class="sym">= (</span><span class="kwb">$n</span> <span class="sym">&gt;&gt;</span> <span class="num">1</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>    <span class="kwb">$ir</span> <span class="sym">=</span> <span class="kwb">$n</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym"></span>    <span class="kwa">while</span> <span class="sym">(</span><span class="num">1</span><span class="sym">) {
</span><span class="line">   22 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$l</span> <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">) {
</span><span class="line">   23 </span><span class="sym"></span>            <span class="kwb">$rra</span> <span class="sym">=</span> <span class="kwb">$ra</span><span class="sym">[--</span><span class="kwb">$l</span><span class="sym">];
</span><span class="line">   24 </span><span class="sym">        }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   25 </span><span class="sym"></span>            <span class="kwb">$rra</span> <span class="sym">=</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$ir</span><span class="sym">];
</span><span class="line">   26 </span><span class="sym"></span>            <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$ir</span><span class="sym">] =</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="num">1</span><span class="sym">];
</span><span class="line">   27 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">(--</span><span class="kwb">$ir</span> <span class="sym">==</span> <span class="num">1</span><span class="sym">) {
</span><span class="line">   28 </span><span class="sym"></span>                <span class="kwb">$ra</span><span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> <span class="kwb">$rra</span><span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span>                <span class="kwa">return</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym">            }
</span><span class="line">   31 </span><span class="sym">        }
</span><span class="line">   32 </span><span class="sym"></span>        <span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$l</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span>        <span class="kwb">$j</span> <span class="sym">=</span> <span class="kwb">$l</span> <span class="sym">&lt;&lt;</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   34 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$j</span> <span class="sym">&lt;=</span> <span class="kwb">$ir</span><span class="sym">) {
</span><span class="line">   35 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">((</span><span class="kwb">$j</span> <span class="sym">&lt;</span> <span class="kwb">$ir</span><span class="sym">) &amp;&amp; (</span><span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">] &lt;</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">+</span><span class="num">1</span><span class="sym">])) {
</span><span class="line">   36 </span><span class="sym"></span>                <span class="kwb">$j</span><span class="sym">++;
</span><span class="line">   37 </span><span class="sym">            }
</span><span class="line">   38 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$rra</span> <span class="sym">&lt;</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">]) {
</span><span class="line">   39 </span><span class="sym"></span>                <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$j</span><span class="sym">];
</span><span class="line">   40 </span><span class="sym"></span>                <span class="kwb">$j</span> <span class="sym">+= (</span><span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$j</span><span class="sym">);
</span><span class="line">   41 </span><span class="sym">            }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   42 </span><span class="sym"></span>                <span class="kwb">$j</span> <span class="sym">=</span> <span class="kwb">$ir</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   43 </span><span class="sym">            }
</span><span class="line">   44 </span><span class="sym">        }
</span><span class="line">   45 </span><span class="sym"></span>        <span class="kwb">$ra</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="kwb">$rra</span><span class="sym">;
</span><span class="line">   46 </span><span class="sym">    }
</span><span class="line">   47 </span><span class="sym">}
</span><span class="line">   48 </span><span class="sym">
</span><span class="line">   49 </span><span class="sym">
</span><span class="line">   50 </span><span class="sym"></span><span class="kwb">$N</span> <span class="sym">= (</span><span class="kwb">$argc</span> <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">] :</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   51 </span><span class="sym">
</span><span class="line">   52 </span><span class="sym"></span><span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">1</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;=</span><span class="kwb">$N</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++) {
</span><span class="line">   53 </span><span class="sym"></span>    <span class="kwb">$ary</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> gen_random<span class="sym">(</span><span class="num">1</span><span class="sym">);
</span><span class="line">   54 </span><span class="sym">}
</span><span class="line">   55 </span><span class="sym">
</span><span class="line">   56 </span><span class="sym"></span><span class="com">/*
</span><span class="line">   57 </span><span class="com">for ($i=0; $i&lt;$N; $i++) {
</span><span class="line">   58 </span><span class="com">    printf(&quot;%4d %.15f\n&quot;, $i, $ary[$i]);
</span><span class="line">   59 </span><span class="com">}
</span><span class="line">   60 </span><span class="com">*/</span>
<span class="line">   61 </span>
<span class="line">   62 </span>heapsort<span class="sym">(</span><span class="kwb">$N</span><span class="sym">,</span> <span class="kwb">$ary</span><span class="sym">);
</span><span class="line">   63 </span><span class="sym">
</span><span class="line">   64 </span><span class="sym"></span><span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">%.</span><span class="str">10f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwb">$ary</span><span class="sym">[</span><span class="kwb">$N</span><span class="sym">]);
</span><span class="line">   65 </span><span class="sym"></span>?<span class="sym">&gt;</span>
