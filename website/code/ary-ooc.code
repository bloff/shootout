<span class="com">(* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy (Oberon-2 novice)</span>
<span class="com">*)</span>

<span class="kwa">MODULE</span> ary<span class="sym">;</span>
<span class="kwa">IMPORT</span> Shootout<span class="sym">,</span> Out<span class="sym">;</span>

<span class="kwa">VAR</span> n<span class="sym">,</span> m<span class="sym">,</span> i<span class="sym">,</span> j<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
    x<span class="sym">,</span> y<span class="sym">:</span> <span class="kwb">POINTER</span> <span class="kwa">TO ARRAY OF</span> <span class="kwb">LONGINT</span><span class="sym">;</span>

<span class="kwa">BEGIN</span>
   n <span class="sym">:=</span> Shootout<span class="sym">.</span><span class="kwd">Argi</span><span class="sym">();</span>
   m <span class="sym">:=</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">;</span>

   <span class="kwa">NEW</span><span class="sym">(</span>x<span class="sym">,</span> n<span class="sym">);</span>
   <span class="kwa">NEW</span><span class="sym">(</span>y<span class="sym">,</span> n<span class="sym">);</span>

   FOR i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> m <span class="kwa">DO</span>
      x<span class="sym">[</span>i<span class="sym">] :=</span> i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>

   FOR j <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">TO</span> <span class="num">1000</span> <span class="kwa">DO</span>
      FOR i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> m <span class="kwa">DO</span>
         <span class="kwa">INC</span><span class="sym">(</span>y<span class="sym">[</span>i<span class="sym">],</span> x<span class="sym">[</span>i<span class="sym">]);</span>
      <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>

   Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>y<span class="sym">[</span><span class="num">0</span><span class="sym">],</span><span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">String</span><span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>y<span class="sym">[</span>m<span class="sym">],</span><span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;</span>
<span class="kwa">END</span> ary<span class="sym">.</span>
