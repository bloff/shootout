BUILD COMMANDS FOR: nestedloop.gcl

Sat Feb 19 01:15:49 PST 2005

cp /opt/shootout/shootout/bench/nestedloop/nestedloop.gcl nestedloop.gcl
GCL_ANSI=1; export GCL_ANSI; \
  /usr/bin/gclcvs -compile nestedloop.gcl

Compiling nestedloop.gcl.

;; Note: var #:G4526 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4717 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4812 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4859 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4882 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4893 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4893 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4893 N)) declared ((FIXNUM #:G4893))

;; Note: var #:G4882 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4882 N)) declared ((FIXNUM #:G4882))

;; Note: var #:G4910 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4910 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4910 N)) declared ((FIXNUM #:G4910))

;; Note: var #:G4859 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4859 N)) declared ((FIXNUM #:G4859))

;; Note: var #:G4939 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4950 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4950 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4950 N)) declared ((FIXNUM #:G4950))

;; Note: var #:G4939 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4939 N)) declared ((FIXNUM #:G4939))

;; Note: var #:G4967 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G4967 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4967 N)) declared ((FIXNUM #:G4967))

;; Note: var #:G4812 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4812 N)) declared ((FIXNUM #:G4812))

;; Note: var #:G5020 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5043 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5054 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5054 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5054 N)) declared ((FIXNUM #:G5054))

;; Note: var #:G5043 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5043 N)) declared ((FIXNUM #:G5043))

;; Note: var #:G5071 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5071 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5071 N)) declared ((FIXNUM #:G5071))

;; Note: var #:G5020 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5020 N)) declared ((FIXNUM #:G5020))

;; Note: var #:G5100 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5111 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5111 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5111 N)) declared ((FIXNUM #:G5111))

;; Note: var #:G5100 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5100 N)) declared ((FIXNUM #:G5100))

;; Note: var #:G5128 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5128 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5128 N)) declared ((FIXNUM #:G5128))

;; Note: var #:G4717 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4717 N)) declared ((FIXNUM #:G4717))

;; Note: var #:G5229 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5276 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5299 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5310 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5310 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5310 N)) declared ((FIXNUM #:G5310))

;; Note: var #:G5299 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5299 N)) declared ((FIXNUM #:G5299))

;; Note: var #:G5327 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5327 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5327 N)) declared ((FIXNUM #:G5327))

;; Note: var #:G5276 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5276 N)) declared ((FIXNUM #:G5276))

;; Note: var #:G5356 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5367 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5367 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5367 N)) declared ((FIXNUM #:G5367))

;; Note: var #:G5356 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5356 N)) declared ((FIXNUM #:G5356))

;; Note: var #:G5384 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5384 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5384 N)) declared ((FIXNUM #:G5384))

;; Note: var #:G5229 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5229 N)) declared ((FIXNUM #:G5229))

;; Note: var #:G5437 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5460 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5471 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5471 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5471 N)) declared ((FIXNUM #:G5471))

;; Note: var #:G5460 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5460 N)) declared ((FIXNUM #:G5460))

;; Note: var #:G5488 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5488 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5488 N)) declared ((FIXNUM #:G5488))

;; Note: var #:G5437 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5437 N)) declared ((FIXNUM #:G5437))

;; Note: var #:G5517 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5528 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5528 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5528 N)) declared ((FIXNUM #:G5528))

;; Note: var #:G5517 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5517 N)) declared ((FIXNUM #:G5517))

;; Note: var #:G5545 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5545 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5545 N)) declared ((FIXNUM #:G5545))

;; Note: var #:G4526 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G4526 N)) declared ((FIXNUM #:G4526))

;; Note: var #:G5742 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5837 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5884 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5907 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5918 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5918 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5918 N)) declared ((FIXNUM #:G5918))

;; Note: var #:G5907 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5907 N)) declared ((FIXNUM #:G5907))

;; Note: var #:G5935 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5935 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5935 N)) declared ((FIXNUM #:G5935))

;; Note: var #:G5884 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5884 N)) declared ((FIXNUM #:G5884))

;; Note: var #:G5964 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5975 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5975 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5975 N)) declared ((FIXNUM #:G5975))

;; Note: var #:G5964 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5964 N)) declared ((FIXNUM #:G5964))

;; Note: var #:G5992 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G5992 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5992 N)) declared ((FIXNUM #:G5992))

;; Note: var #:G5837 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5837 N)) declared ((FIXNUM #:G5837))

;; Note: var #:G6045 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6068 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6079 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6079 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6079 N)) declared ((FIXNUM #:G6079))

;; Note: var #:G6068 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6068 N)) declared ((FIXNUM #:G6068))

;; Note: var #:G6096 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6096 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6096 N)) declared ((FIXNUM #:G6096))

;; Note: var #:G6045 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6045 N)) declared ((FIXNUM #:G6045))

;; Note: var #:G6125 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6136 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6136 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6136 N)) declared ((FIXNUM #:G6136))

;; Note: var #:G6125 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6125 N)) declared ((FIXNUM #:G6125))

;; Note: var #:G6153 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6153 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6153 N)) declared ((FIXNUM #:G6153))

;; Note: var #:G5742 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G5742 N)) declared ((FIXNUM #:G5742))

;; Note: var #:G6254 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6301 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6324 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6335 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6335 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6335 N)) declared ((FIXNUM #:G6335))

;; Note: var #:G6324 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6324 N)) declared ((FIXNUM #:G6324))

;; Note: var #:G6352 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6352 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6352 N)) declared ((FIXNUM #:G6352))

;; Note: var #:G6301 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6301 N)) declared ((FIXNUM #:G6301))

;; Note: var #:G6381 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6392 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6392 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6392 N)) declared ((FIXNUM #:G6392))

;; Note: var #:G6381 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6381 N)) declared ((FIXNUM #:G6381))

;; Note: var #:G6409 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6409 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6409 N)) declared ((FIXNUM #:G6409))

;; Note: var #:G6254 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6254 N)) declared ((FIXNUM #:G6254))

;; Note: var #:G6462 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6485 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6496 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6496 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6496 N)) declared ((FIXNUM #:G6496))

;; Note: var #:G6485 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6485 N)) declared ((FIXNUM #:G6485))

;; Note: var #:G6513 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6513 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6513 N)) declared ((FIXNUM #:G6513))

;; Note: var #:G6462 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6462 N)) declared ((FIXNUM #:G6462))

;; Note: var #:G6542 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6553 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6553 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6553 N)) declared ((FIXNUM #:G6553))

;; Note: var #:G6542 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6542 N)) declared ((FIXNUM #:G6542))

;; Note: var #:G6570 is type FIXNUM from outer scope, but is already declared

;; Note: var #:G6570 is type FIXNUM from outer scope, declaring

;; Note: Let bindings ((#:G6570 N)) declared ((FIXNUM #:G6570))
End of Pass 1.  
End of Pass 2.  
OPTIMIZE levels: Safety=0 (No runtime error checking), Space=0, Speed=3, (Debug quality ignored)
Finished compiling nestedloop.gcl.
touch nestedloop.gcl_run

=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/gclcvs -batch -load nestedloop.o -eval '(main)' -f nestedloop.gcl %A


PROGRAM OUTPUT
==============
34012224
