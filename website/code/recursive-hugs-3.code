<span class="com">{-# OPTIONS -fbang-patterns #-}</span>
<span class="slc">--</span>
<span class="slc">-- The Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">--</span>
<span class="slc">-- Translated from the Clean by Don Stewart</span>
<span class="slc">--</span>

<span class="kwa">import</span> System
<span class="kwa">import</span> Numeric

main <span class="sym">=</span> <span class="kwa">do</span>
    n <span class="sym">&lt;-</span> getArgs <span class="sym">&gt;&gt;=</span> readIO . head
    <span class="kwa">let</span> m  <span class="sym">=</span> n<span class="sym">-</span><span class="num">1</span>
        a  <span class="sym">=</span> <span class="num">27</span> <span class="sym">+</span> fromIntegral n
    putStr $
       line <span class="str">&quot;Ack&quot;</span> <span class="sym">[</span><span class="num">3</span><span class="sym">,</span>n<span class="sym">]       (</span>ack <span class="num">3</span> n<span class="sym">)</span>                     show <span class="sym">++</span>
       line <span class="str">&quot;Fib&quot;</span> <span class="sym">[</span>a<span class="sym">]         (</span>fib a             <span class="sym">::</span> <span class="kwb">Double</span><span class="sym">) (</span>\n <span class="sym">-&gt;</span> showFFloat <span class="sym">(</span>Just <span class="num">1</span><span class="sym">)</span> n <span class="sym">[]) ++</span>
       line <span class="str">&quot;Tak&quot;</span> <span class="sym">[</span><span class="num">3</span><span class="sym">*</span>m<span class="sym">,</span><span class="num">2</span><span class="sym">*</span>m<span class="sym">,</span>m<span class="sym">] (</span>tak <span class="sym">(</span><span class="num">3</span><span class="sym">*</span>m<span class="sym">) (</span><span class="num">2</span><span class="sym">*</span>m<span class="sym">)</span> m <span class="sym">::</span> <span class="kwb">Int</span><span class="sym">)</span>    show <span class="sym">++</span>
       line <span class="str">&quot;Fib&quot;</span> <span class="sym">[</span><span class="num">3</span><span class="sym">]         (</span>fib <span class="num">3</span>             <span class="sym">::</span> <span class="kwb">Int</span><span class="sym">)</span>    show <span class="sym">++</span>
       line <span class="str">&quot;Tak&quot;</span> <span class="sym">[</span><span class="num">3</span><span class="sym">,</span><span class="num">2</span><span class="sym">,</span><span class="num">1</span><span class="sym">]     (</span>tak <span class="num">3 2 1</span>         <span class="sym">::</span> <span class="kwb">Double</span><span class="sym">)</span> show
    <span class="kwa">where</span>
       line pre a r f <span class="sym">=</span> pre <span class="sym">++</span> <span class="str">&quot;(&quot;</span> <span class="sym">++</span> csv f a <span class="str">&quot;&quot;</span> <span class="sym">++</span> <span class="str">&quot;): &quot;</span> <span class="sym">++</span> f r <span class="sym">++</span> <span class="str">&quot;\n&quot;</span>
       csv f <span class="sym">[</span>a<span class="sym">]</span>   s  <span class="sym">=</span> s <span class="sym">++</span> f a
       csv f <span class="sym">(</span>a<span class="sym">:</span>b<span class="sym">)</span> s  <span class="sym">=</span> s <span class="sym">++</span> f a <span class="sym">++</span> <span class="str">&quot;,&quot;</span> <span class="sym">++</span> csv f b s

ack <span class="sym">::</span> <span class="kwb">Int</span> <span class="sym">-&gt;</span> <span class="kwb">Int</span> <span class="sym">-&gt;</span> <span class="kwb">Int</span>
ack <span class="num">0</span> n <span class="sym">=</span> n<span class="sym">+</span><span class="num">1</span>
ack m <span class="num">0</span> <span class="sym">=</span> ack <span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> <span class="num">1</span>
ack m n <span class="sym">=</span> ack <span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">) (</span>ack m <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">))</span>

fib <span class="sym">:: (</span>Num a<span class="sym">,</span> Ord a<span class="sym">) =&gt;</span> a <span class="sym">-&gt;</span> a
fib     n <span class="sym">=</span> if n <span class="sym">&gt;=</span> <span class="num">2</span> <span class="kwa">then</span> fib  <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">) +</span> fib  <span class="sym">(</span>n<span class="sym">-</span><span class="num">2</span><span class="sym">)</span> <span class="kwa">else</span> <span class="num">1</span>

tak <span class="sym">:: (</span>Num a<span class="sym">,</span> Ord a<span class="sym">) =&gt;</span> a <span class="sym">-&gt;</span> a <span class="sym">-&gt;</span> a <span class="sym">-&gt;</span> a
tak x y z <span class="sym">=</span> if y <span class="sym">&lt;</span> x <span class="kwa">then</span> tak <span class="sym">(</span>tak <span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> y z<span class="sym">) (</span>tak <span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> z x<span class="sym">) (</span>tak <span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> x y<span class="sym">)</span> <span class="kwa">else</span> z
