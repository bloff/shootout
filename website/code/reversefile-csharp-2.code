<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy
*/</span>

<span class="kwa">using</span> System<span class="sym">;
</span><span class="kwa">using</span> System<span class="sym">.</span>IO<span class="sym">;
</span><span class="kwa">using</span> System<span class="sym">.</span>Collections<span class="sym">;
</span><span class="kwa">using</span> System<span class="sym">.</span>Text<span class="sym">;

</span><span class="kwc">class</span> reversefile
<span class="sym">{
</span>   <span class="kwb">static void</span> Main<span class="sym">(</span>string<span class="sym">[]</span> args<span class="sym">)
   {
</span>      <span class="kwb">const int</span> bufferSize <span class="sym">=</span> <span class="num">4096</span><span class="sym">;
</span>      Encoding e <span class="sym">=</span> Encoding<span class="sym">.</span>GetEncoding<span class="sym">(</span><span class="num">0</span><span class="sym">);
</span>      Stream s <span class="sym">=</span> Console<span class="sym">.</span>OpenStandardInput<span class="sym">(</span> bufferSize <span class="sym">);
</span>      StreamReader stdin <span class="sym">=</span> <span class="kwa">new</span> StreamReader<span class="sym">(</span>s<span class="sym">,</span> e<span class="sym">,</span> <span class="kwa">false</span><span class="sym">,</span> bufferSize<span class="sym">);

</span>      s <span class="sym">=</span> Console<span class="sym">.</span>OpenStandardOutput<span class="sym">(</span> bufferSize <span class="sym">);
</span>      StreamWriter stdout <span class="sym">=</span> <span class="kwa">new</span> StreamWriter<span class="sym">(</span>s<span class="sym">,</span> e<span class="sym">,</span> bufferSize<span class="sym">);
</span>      stdout<span class="sym">.</span>AutoFlush <span class="sym">=</span> <span class="kwa">false</span><span class="sym">;</span> <span class="slc">// only flush when buffer is full
</span>

      Stack lines <span class="sym">=</span> <span class="kwa">new</span> Stack<span class="sym">();
</span>      String line<span class="sym">;
</span>      <span class="kwa">while</span> <span class="sym">( (</span>line <span class="sym">=</span> stdin<span class="sym">.</span>ReadLine<span class="sym">()) !=</span> null <span class="sym">)</span> lines<span class="sym">.</span>Push<span class="sym">(</span>line<span class="sym">);

</span>      System<span class="sym">.</span>Collections<span class="sym">.</span>IEnumerator items <span class="sym">=</span> lines<span class="sym">.</span>GetEnumerator<span class="sym">();
</span>      <span class="kwa">while</span> <span class="sym">(</span> items<span class="sym">.</span>MoveNext<span class="sym">() )</span> stdout<span class="sym">.</span>WriteLine<span class="sym">(</span> items<span class="sym">.</span>Current <span class="sym">);

</span>      <span class="slc">// need to flush stdout
</span>      stdout<span class="sym">.</span>Close<span class="sym">();
   }
}
</span>
