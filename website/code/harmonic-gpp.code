<span class="dir">#include &lt;cstdlib&gt;
</span><span class="dir">#include &lt;iostream&gt;
</span><span class="dir">#include &lt;iomanip&gt;
</span>
<span class="kwa">using namespace</span> std<span class="sym">;

</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[])
{
</span>    <span class="kwb">double</span> n<span class="sym">;
</span>    <span class="kwb">double</span> partialSum <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    n <span class="sym">= (</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atof<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">10000000</span><span class="sym">;
</span>    cout <span class="sym">&lt;&lt;</span> setiosflags<span class="sym">(</span>ios<span class="sym">::</span>fixed<span class="sym">) &lt;&lt;</span> setprecision<span class="sym">(</span><span class="num">9</span><span class="sym">);

</span>    <span class="kwa">for</span><span class="sym">(</span><span class="kwb">double</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">;</span> i<span class="sym">&lt;=</span>n<span class="sym">;</span> i<span class="sym">++)
</span>            partialSum <span class="sym">+=</span> <span class="num">1.0</span><span class="sym">/</span>i<span class="sym">;
</span>    cout <span class="sym">&lt;&lt;</span> partialSum <span class="sym">&lt;&lt;</span> endl<span class="sym">;
</span>    <span class="kwa">return</span> EXIT_SUCCESS<span class="sym">;
}</span>
