<span class="line">    1 </span><span class="kwb">module</span><span class="sym">:</span>         wc
<span class="line">    2 </span><span class="kwb">synopsis</span><span class="sym">:</span>       implementation of <span class="str">&quot;Count Lines/Words/Chars&quot;</span> benchmark
<span class="line">    3 </span><span class="kwb">author</span><span class="sym">:</span>         Peter Hinely
<span class="line">    4 </span><span class="kwb">copyright</span><span class="sym">:</span>      public <span class="kwa">domain
</span><span class="line">    5 </span><span class="kwa">use</span><span class="sym">-</span>libraries<span class="sym">:</span>  common<span class="sym">-</span>dylan<span class="sym">,</span> io
<span class="line">    6 </span><span class="kwa">use</span><span class="sym">-</span>modules<span class="sym">:</span>    common<span class="sym">-</span>dylan<span class="sym">,</span> standard<span class="sym">-</span>io<span class="sym">,</span> streams<span class="sym">,</span> format<span class="sym">-</span>out
<span class="line">    7 </span>
<span class="line">    8 </span><span class="kwa">define function</span> count <span class="sym">() =</span>&gt; <span class="sym">()
</span><span class="line">    9 </span><span class="sym"></span>  <span class="kwa">let</span> number<span class="sym">-</span>of<span class="sym">-</span>lines <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym"></span>  <span class="kwa">let</span> number<span class="sym">-</span>of<span class="sym">-</span>words <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   11 </span><span class="sym"></span>  <span class="kwa">let</span> number<span class="sym">-</span>of<span class="sym">-</span>characters <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>  <span class="kwa">let in</span><span class="sym">-</span>word <span class="sym">=</span> #f<span class="sym">;
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span>  <span class="kwa">let</span> chunk<span class="sym">-</span>size <span class="sym">=</span> <span class="num">4096</span><span class="sym">;
</span><span class="line">   15 </span><span class="sym"></span>  <span class="kwa">let</span> buffer <span class="sym">=</span> make<span class="sym">(</span><span class="kwa">&lt;byte-string&gt;</span><span class="sym">,</span> size<span class="sym">:</span> chunk<span class="sym">-</span>size<span class="sym">);
</span><span class="line">   16 </span><span class="sym"></span>  <span class="kwa">let</span> bytes<span class="sym">-</span>read <span class="sym">::</span> <span class="kwa">&lt;integer&gt;</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym">
</span><span class="line">   18 </span><span class="sym"></span>  <span class="kwa">while</span> <span class="sym">((</span>bytes<span class="sym">-</span>read <span class="sym">:=</span> read<span class="sym">-</span>into<span class="sym">!(*</span>standard<span class="sym">-</span>input<span class="sym">*,</span> chunk<span class="sym">-</span>size<span class="sym">,</span> buffer<span class="sym">,</span> on<span class="sym">-</span><span class="kwa">end</span><span class="sym">-</span>of<span class="sym">-</span>stream<span class="sym">:</span> <span class="num">0</span><span class="sym">))</span> &gt; <span class="num">0</span><span class="sym">)
</span><span class="line">   19 </span><span class="sym"></span>    number<span class="sym">-</span>of<span class="sym">-</span>characters <span class="sym">:=</span> number<span class="sym">-</span>of<span class="sym">-</span>characters <span class="sym">+</span> bytes<span class="sym">-</span>read<span class="sym">;
</span><span class="line">   20 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">(</span>c keyed<span class="sym">-</span><span class="kwa">by</span> i <span class="kwa">in</span> buffer<span class="sym">,</span> <span class="kwa">while</span><span class="sym">:</span> i <span class="kwa">&lt; bytes-read)
</span><span class="line">   21 </span><span class="sym">      if (c ==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="kwa">)
</span><span class="line">   22 </span><span class="kwa">        number-of-lines := number-of-lines +</span> <span class="num">1</span><span class="kwa">;
</span><span class="line">   23 </span><span class="kwa">      end;
</span><span class="line">   24 </span><span class="kwa">      select (c)
</span><span class="line">   25 </span><span class="sym"></span>        <span class="str">' '</span><span class="kwa">,</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="kwa">,</span> <span class="str">'</span><span class="esc">\t</span><span class="str">'</span><span class="kwa"> =&gt;</span> <span class="kwa">in</span><span class="sym">-</span>word <span class="sym">:=</span> #f<span class="sym">;
</span><span class="line">   26 </span><span class="sym"></span>        <span class="kwa">otherwise</span>       <span class="sym">=</span>&gt; <span class="kwa">if</span> <span class="sym">(</span>~<span class="kwa">in</span><span class="sym">-</span>word<span class="sym">)
</span><span class="line">   27 </span><span class="sym"></span>                             number<span class="sym">-</span>of<span class="sym">-</span>words <span class="sym">:=</span> number<span class="sym">-</span>of<span class="sym">-</span>words <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>                             <span class="kwa">in</span><span class="sym">-</span>word <span class="sym">:=</span> #t<span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span>                           <span class="kwa">end if</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>      <span class="kwa">end select</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwa">end for</span><span class="sym">;
</span><span class="line">   32 </span><span class="sym"></span>  <span class="kwa">end while</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym"></span>  format<span class="sym">-</span>out<span class="sym">(</span><span class="str">&quot;%d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> number<span class="sym">-</span>of<span class="sym">-</span>lines<span class="sym">,</span> number<span class="sym">-</span>of<span class="sym">-</span>words<span class="sym">,</span> number<span class="sym">-</span>of<span class="sym">-</span>characters<span class="sym">);
</span><span class="line">   35 </span><span class="sym"></span><span class="kwa">end function</span><span class="sym">;
</span><span class="line">   36 </span><span class="sym">
</span><span class="line">   37 </span><span class="sym"></span>count<span class="sym">();</span>
