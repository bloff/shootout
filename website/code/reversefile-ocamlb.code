<span class="line">    1 </span><span class="com">(*
</span><span class="line">    2 </span><span class="com"> * $Id: reversefile-ocamlb.code,v 1.3 2004-11-11 07:14:14 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * author: Jean-Francois Monin
</span><span class="line">    5 </span><span class="com"> * date: Thu Jan 27 00:28:51 CET 2001
</span><span class="line">    6 </span><span class="com"> * France Telecom R &amp; D, Lannion
</span><span class="line">    7 </span><span class="com"> * ocamlopt -noassert -unsafe -ccopt -O3 rev.ml -o rev
</span><span class="line">    8 </span><span class="com"> *)</span>
<span class="line">    9 </span>
<span class="line">   10 </span><span class="kwa">let</span> size <span class="sym">=</span> <span class="num">10000
</span><span class="line">   11 </span><span class="num">
</span><span class="line">   12 </span><span class="num"></span><span class="kwa">let rec</span> lect stack buf pos free <span class="sym">=
</span><span class="line">   13 </span><span class="sym"></span>  <span class="kwa">let</span> nrd <span class="sym">=</span> input stdin buf pos free <span class="kwa">in
</span><span class="line">   14 </span><span class="kwa">  if</span> nrd <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span> stack<span class="sym">,</span> buf<span class="sym">,</span> pos <span class="com">(* buf filled only until pos *)</span>
<span class="line">   15 </span>  <span class="kwa">else if</span> nrd <span class="sym">=</span> free <span class="kwa">then</span> lect <span class="sym">(</span>buf <span class="sym">::</span> stack<span class="sym">) (</span>String.create size<span class="sym">)</span> <span class="num">0</span> size
<span class="line">   16 </span>  <span class="kwa">else</span> lect stack buf <span class="sym">(</span>pos <span class="sym">+</span> nrd<span class="sym">) (</span>free <span class="sym">-</span> nrd<span class="sym">)
</span><span class="line">   17 </span><span class="sym">
</span><span class="line">   18 </span><span class="sym"></span><span class="kwa">let</span> output_buf <span class="sym">(</span>buf<span class="sym">,</span> len<span class="sym">) =</span> output stdout buf <span class="num">0</span> len
<span class="line">   19 </span>
<span class="line">   20 </span><span class="kwa">let rec</span> rev_write tail stack buf len pos <span class="sym">=
</span><span class="line">   21 </span><span class="sym"></span>  <span class="kwa">if</span> pos <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
</span><span class="line">   22 </span><span class="kwa">    match</span> stack <span class="kwa">with
</span><span class="line">   23 </span><span class="kwa"></span>    <span class="sym">| [] -&gt;</span> output stdout buf <span class="num">0</span> len<span class="sym">;</span> List.iter output_buf tail
<span class="line">   24 </span>    <span class="sym">|</span> topbuf <span class="sym">::</span> stack <span class="sym">-&gt;
</span><span class="line">   25 </span><span class="sym"></span>        <span class="kwa">let</span> toplen <span class="sym">=</span> String.length topbuf <span class="kwa">in
</span><span class="line">   26 </span><span class="kwa"></span>        rev_write <span class="sym">((</span>buf<span class="sym">,</span> len<span class="sym">) ::</span> tail<span class="sym">)</span> stack topbuf toplen toplen
<span class="line">   27 </span>  <span class="kwa">else if</span> buf.<span class="sym">[</span>pos <span class="num">- 1</span><span class="sym">] =</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span> <span class="kwa">then
</span><span class="line">   28 </span><span class="kwa">    begin
</span><span class="line">   29 </span><span class="kwa"></span>      output stdout buf pos <span class="sym">(</span>len <span class="sym">-</span> pos<span class="sym">);
</span><span class="line">   30 </span><span class="sym"></span>      List.iter output_buf tail<span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>      rev_write <span class="sym">[]</span> stack buf pos <span class="sym">(</span>pos <span class="num">- 1</span><span class="sym">)
</span><span class="line">   32 </span><span class="sym"></span>    <span class="kwa">end
</span><span class="line">   33 </span><span class="kwa">  else</span> rev_write tail stack buf len <span class="sym">(</span>pos <span class="num">- 1</span><span class="sym">);;
</span><span class="line">   34 </span><span class="sym">
</span><span class="line">   35 </span><span class="sym"></span><span class="kwa">let</span> stack<span class="sym">,</span> buf<span class="sym">,</span> length <span class="sym">=</span> lect <span class="sym">[] (</span>String.create size<span class="sym">)</span> <span class="num">0</span> size<span class="sym">;;
</span><span class="line">   36 </span><span class="sym"></span>rev_write <span class="sym">[]</span> stack buf length length
