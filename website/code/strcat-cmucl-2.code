<span class="line">    1 </span><span class="slc">;;; -*- mode: lisp -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: strcat-cmucl-2.code,v 1.3 2004-11-13 08:28:18 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">;;; from Eric Marsden
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">;;; Multi-lisp modifications by Brent Fulgham
</span><span class="line">    6 </span><span class="slc"></span>
<span class="line">    7 </span><span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">()
</span><span class="line">    8 </span><span class="sym">  (</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> <span class="sym">(</span><span class="kwa">last</span> #<span class="sym">+</span>sbcl sb<span class="sym">-</span>ext<span class="sym">:*</span>posix<span class="sym">-</span>argv<span class="sym">*
</span><span class="line">    9 </span><span class="sym"></span>                                         #<span class="sym">+</span>cmu  extensions<span class="sym">:*</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>strings<span class="sym">*))</span> <span class="str">&quot;1&quot;</span><span class="sym">))))
</span><span class="line">   10 </span><span class="sym">    (</span>declare <span class="sym">(</span>fixnum n<span class="sym">)
</span><span class="line">   11 </span><span class="sym">             (</span>optimize <span class="sym">(</span>speed <span class="num">3</span><span class="sym">) (</span>debug <span class="num">0</span><span class="sym">) (</span>safety <span class="num">0</span><span class="sym">)))
</span><span class="line">   12 </span><span class="sym">    (</span>let <span class="sym">((</span>str <span class="sym">(</span>string<span class="sym">-</span>concat n<span class="sym">)))
</span><span class="line">   13 </span><span class="sym">      (</span>format t <span class="str">&quot;~A~%&quot;</span> <span class="sym">(</span><span class="kwa">length</span> str<span class="sym">)))))
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym">(</span><span class="kwa">defun</span> string<span class="sym">-</span>concat <span class="sym">(</span>n<span class="sym">)
</span><span class="line">   16 </span><span class="sym">   (</span>declare <span class="sym">(</span>fixnum n<span class="sym">))
</span><span class="line">   17 </span><span class="sym">   (</span>let <span class="sym">((</span>hi <span class="sym">(</span>format nil <span class="str">&quot;hello~%&quot;</span><span class="sym">)))
</span><span class="line">   18 </span><span class="sym">     (</span>with<span class="sym">-</span>output<span class="sym">-</span>to<span class="sym">-</span>string <span class="sym">(</span>concatenated<span class="sym">)
</span><span class="line">   19 </span><span class="sym">       (</span>dotimes <span class="sym">(</span>i n<span class="sym">)
</span><span class="line">   20 </span><span class="sym">         (</span>write<span class="sym">-</span>string hi concatenated<span class="sym">)))))</span>
