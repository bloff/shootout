<span class="com">(* The Great Computer Language Shootout
    http://shootout.alioth.debian.org
 
    contributed by Isaac Gouy (Oberon-2 novice)
 
 See:
 OBJECT-ORIENTED PROGRAMMING IN OBERON-2
 http://www.cas.mcmaster.ca/~kahl/SE3E03/2002/Oberon2/Oberon2.OOP.pdf
 *)</span>

  <span class="kwa">MODULE</span> Methcall<span class="sym">;
 </span><span class="kwa">IMPORT</span> LangShootout<span class="sym">,</span> Out<span class="sym">;
 
 </span><span class="kwa">TYPE
 </span>   ToggleDesc <span class="sym">=</span> <span class="kwa">RECORD
 </span>      state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;
 </span>   <span class="kwa">END</span><span class="sym">;
 
 </span>   Toggle <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> ToggleDesc<span class="sym">;
 
 
 </span>   NthToggleDesc <span class="sym">=</span> <span class="kwa">RECORD</span> <span class="sym">(</span>ToggleDesc<span class="sym">)
 </span>      countMax<span class="sym">,</span> counter<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
 </span>   <span class="kwa">END</span><span class="sym">;
 
 </span>   NthToggle <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> NthToggleDesc<span class="sym">;
 
 </span><span class="kwa">VAR
 </span>   n<span class="sym">,</span> i<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
 </span>   toggle<span class="sym">:</span> Toggle<span class="sym">;
 </span>   ntoggle<span class="sym">:</span> NthToggle<span class="sym">;
 </span>   v<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;
 
 
 </span><span class="kwa">PROCEDURE</span> NewToggle<span class="sym">(</span>state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">):</span> Toggle<span class="sym">;
 </span><span class="kwa">VAR</span> t<span class="sym">:</span> Toggle<span class="sym">;
 </span><span class="kwa">BEGIN
    NEW</span><span class="sym">(</span>t<span class="sym">);</span> t<span class="sym">.</span>state <span class="sym">:=</span> state<span class="sym">;
 </span>   <span class="kwa">RETURN</span> t<span class="sym">;
 </span><span class="kwa">END</span> NewToggle<span class="sym">;
 
 </span><span class="kwa">PROCEDURE</span> <span class="sym">(</span>t<span class="sym">:</span>Toggle<span class="sym">)</span> Activate<span class="sym">();
 </span><span class="kwa">BEGIN
 </span>   t<span class="sym">.</span>state <span class="sym">:=</span> ~t<span class="sym">.</span>state<span class="sym">;
 </span><span class="kwa">END</span> Activate<span class="sym">;
 
 </span><span class="kwa">PROCEDURE</span> <span class="sym">(</span>t<span class="sym">:</span>Toggle<span class="sym">)</span> Value<span class="sym">():</span> <span class="kwb">BOOLEAN</span><span class="sym">;
 </span><span class="kwa">BEGIN
    RETURN</span> t<span class="sym">.</span>state<span class="sym">;
 </span><span class="kwa">END</span> Value<span class="sym">;
 
 
 </span><span class="kwa">PROCEDURE</span> NewNthToggle<span class="sym">(</span>state<span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span> countMax<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">):</span> NthToggle<span class="sym">;
 </span><span class="kwa">VAR</span> t<span class="sym">:</span> NthToggle<span class="sym">;
 </span><span class="kwa">BEGIN
    NEW</span><span class="sym">(</span>t<span class="sym">);
 </span>   t<span class="sym">.</span>state <span class="sym">:=</span> state<span class="sym">;
 </span>   t<span class="sym">.</span>countMax <span class="sym">:=</span> countMax<span class="sym">;
 </span>   <span class="kwa">RETURN</span> t<span class="sym">;
 </span><span class="kwa">END</span> NewNthToggle<span class="sym">;
 
 </span><span class="kwa">PROCEDURE</span> <span class="sym">(</span>t<span class="sym">:</span>NthToggle<span class="sym">)</span> Activate<span class="sym">();
 </span><span class="kwa">BEGIN
    INC</span><span class="sym">(</span>t<span class="sym">.</span>counter<span class="sym">);
 </span>   <span class="kwa">IF</span> t<span class="sym">.</span>counter <span class="sym">&gt;=</span> t<span class="sym">.</span>countMax <span class="kwa">THEN
 </span>      t<span class="sym">.</span>state <span class="sym">:=</span> ~t<span class="sym">.</span>state<span class="sym">;
 </span>      t<span class="sym">.</span>counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
 </span>   <span class="kwa">END</span><span class="sym">;
 </span><span class="kwa">END</span> Activate<span class="sym">;
 
 
 </span><span class="kwa">BEGIN
 </span>   n <span class="sym">:=</span> LangShootout<span class="sym">.</span>Argi<span class="sym">();
 </span>   toggle <span class="sym">:=</span> NewToggle<span class="sym">(</span>TRUE<span class="sym">);
 </span>   FOR i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">TO</span> n <span class="kwa">DO
 </span>      toggle<span class="sym">.</span>Activate<span class="sym">();
 </span>      v <span class="sym">:=</span> toggle<span class="sym">.</span>Value<span class="sym">();
 </span>   <span class="kwa">END</span><span class="sym">;
 </span>   <span class="kwa">IF</span> v <span class="kwa">THEN</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;true&quot;</span><span class="sym">);
 </span>        <span class="kwa">ELSE</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;false&quot;</span><span class="sym">);</span> <span class="kwa">END</span><span class="sym">;
 </span>   Out<span class="sym">.</span>Ln<span class="sym">;
 
 </span>   ntoggle <span class="sym">:=</span> NewNthToggle<span class="sym">(</span>TRUE<span class="sym">,</span><span class="num">3</span><span class="sym">);
 </span>   FOR i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">TO</span> n <span class="kwa">DO
 </span>      ntoggle<span class="sym">.</span>Activate<span class="sym">();
 </span>      v <span class="sym">:=</span> ntoggle<span class="sym">.</span>Value<span class="sym">();
 </span>   <span class="kwa">END</span><span class="sym">;
 </span>   <span class="kwa">IF</span> v <span class="kwa">THEN</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;true&quot;</span><span class="sym">);
 </span>        <span class="kwa">ELSE</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;false&quot;</span><span class="sym">);</span> <span class="kwa">END</span><span class="sym">;
 </span>   Out<span class="sym">.</span>Ln<span class="sym">;
 </span><span class="kwa">END</span> Methcall<span class="sym">.</span> 
