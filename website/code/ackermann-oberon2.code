<span class="line">    1 </span><span class="com">(*
</span><span class="line">    2 </span><span class="com"> * The Great Computer Language Shootout
</span><span class="line">    3 </span><span class="com"> * http://dada.perl.it/shootout/
</span><span class="line">    4 </span><span class="com"> *
</span><span class="line">    5 </span><span class="com"> * contributed by Isaac Gouy (Oberon2 novice)
</span><span class="line">    6 </span><span class="com"> * oo2c-ified by Brent Fulgham (Oberon2 novice)
</span><span class="line">    7 </span><span class="com"> *
</span><span class="line">    8 </span><span class="com"> *  To build: oo2c -M ackermann
</span><span class="line">    9 </span><span class="com"> *  To run:     ackermann 8
</span><span class="line">   10 </span><span class="com"> *)</span>
<span class="line">   11 </span>
<span class="line">   12 </span><span class="kwa">MODULE</span> Ackermann<span class="sym">;
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span><span class="kwa">IMPORT</span> LangShootout<span class="sym">,</span> Out<span class="sym">;
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span><span class="kwa">VAR</span> n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym">
</span><span class="line">   18 </span><span class="sym"></span><span class="kwa">PROCEDURE</span> Ack <span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">) :</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span><span class="kwa">BEGIN
</span><span class="line">   20 </span><span class="kwa">  IF</span> <span class="sym">(</span>m<span class="sym">=</span><span class="num">0</span><span class="sym">)</span> <span class="kwa">THEN RETURN</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> <span class="kwa">END</span><span class="sym">;
</span><span class="line">   21 </span><span class="sym"></span>  <span class="kwa">IF</span> <span class="sym">(</span>n<span class="sym">=</span><span class="num">0</span><span class="sym">)</span> <span class="kwa">THEN RETURN</span> Ack<span class="sym">(</span>m<span class="num">-1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);</span> <span class="kwa">END</span><span class="sym">;
</span><span class="line">   22 </span><span class="sym"></span>  <span class="kwa">RETURN</span> Ack<span class="sym">(</span>m<span class="num">-1</span><span class="sym">,</span> Ack<span class="sym">(</span>m<span class="sym">,</span> n<span class="num">-1</span><span class="sym">));
</span><span class="line">   23 </span><span class="sym"></span><span class="kwa">END</span> Ack<span class="sym">;
</span><span class="line">   24 </span><span class="sym">
</span><span class="line">   25 </span><span class="sym"></span><span class="kwa">BEGIN
</span><span class="line">   26 </span><span class="kwa"></span>  n <span class="sym">:=</span> LangShootout<span class="sym">.</span>Argi<span class="sym">();
</span><span class="line">   27 </span><span class="sym"></span>  Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span> <span class="sym">);</span> Out<span class="sym">.</span>Int<span class="sym">(</span>n<span class="sym">,</span> <span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;): &quot;</span><span class="sym">);
</span><span class="line">   28 </span><span class="sym"></span>  Out<span class="sym">.</span>LongInt<span class="sym">(</span> Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span>n<span class="sym">),</span> <span class="num">1</span> <span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span><span class="kwa">END</span> Ackermann<span class="sym">.</span>
