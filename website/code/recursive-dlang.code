<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com"></span>
<span class="com">   converted to D by Bob W</span>
<span class="com">   compile: dmd -O -inline -release recursive.d</span>
<span class="com">*/</span>

<span class="kwa">import</span> std<span class="sym">.</span>stdio<span class="sym">,</span> std<span class="sym">.</span>string<span class="sym">;</span>

<span class="kwa">void</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwa">char</span><span class="sym">[][]</span> args<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwa">int</span> n <span class="sym">= (</span>args<span class="sym">.</span>length <span class="sym">&gt;</span> <span class="num">1</span> ? <span class="kwd">atoi</span><span class="sym">(</span>args<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">) -</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwd">writefln</span><span class="sym">(</span><span class="str">&quot;Ack(3,%d): %d&quot;</span><span class="sym">,</span>n <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span><span class="kwb">A</span>ck<span class="sym">(</span><span class="num">3</span><span class="sym">,</span>n <span class="sym">+</span> <span class="num">1</span><span class="sym">));</span>
    <span class="kwd">writefln</span><span class="sym">(</span><span class="str">&quot;Fib(%.1f): %.1f&quot;</span><span class="sym">,</span><span class="num">28.0</span><span class="sym">+</span>n<span class="sym">,</span><span class="kwb">F</span>ib<span class="sym">!(</span><span class="kwa">double</span><span class="sym">)(</span><span class="num">28.0</span><span class="sym">+</span>n<span class="sym">));</span>
    <span class="kwd">writefln</span><span class="sym">(</span><span class="str">&quot;Tak(%d,%d,%d): %d&quot;</span><span class="sym">,</span><span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span><span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span>n<span class="sym">,</span><span class="kwb">T</span>ak<span class="sym">!(</span><span class="kwa">int</span><span class="sym">)(</span><span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span><span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span>n<span class="sym">));</span>
    <span class="kwd">writefln</span><span class="sym">(</span><span class="str">&quot;Fib(3): %d&quot;</span><span class="sym">,</span><span class="kwb">F</span>ib<span class="sym">!(</span><span class="kwa">int</span><span class="sym">)(</span><span class="num">3</span><span class="sym">));</span>
    <span class="kwd">writefln</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0): %.1f&quot;</span><span class="sym">,</span><span class="kwb">T</span>ak<span class="sym">!(</span><span class="kwa">double</span><span class="sym">)(</span><span class="num">3.0</span><span class="sym">,</span><span class="num">2.0</span><span class="sym">,</span><span class="num">1.0</span><span class="sym">));</span>
<span class="sym">}</span>

<span class="kwa">int</span> <span class="kwb">A</span>ck<span class="sym">(</span><span class="kwa">int</span> m<span class="sym">,</span> <span class="kwa">int</span> n<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwa">if</span><span class="sym">(</span>m <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span> n <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwa">else if</span><span class="sym">(</span>n <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span> <span class="kwb">A</span>ck<span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);</span>
    <span class="kwa">else return</span> <span class="kwb">A</span>ck<span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="kwb">A</span>ck<span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">));</span>
<span class="sym">}</span>

<span class="kwa">template</span> <span class="kwb">F</span>ib<span class="sym">(</span><span class="kwb">T</span><span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwb">T F</span>ib<span class="sym">(</span><span class="kwb">T</span> n<span class="sym">)</span>
    <span class="sym">{</span>
        <span class="kwa">if</span><span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span> <span class="kwa">return</span> <span class="num">1</span><span class="sym">;</span>
        <span class="kwa">else return</span> <span class="kwb">F</span>ib<span class="sym">(</span>n<span class="sym">-</span><span class="num">2</span><span class="sym">) +</span> <span class="kwb">F</span>ib<span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">);</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">template</span> <span class="kwb">T</span>ak<span class="sym">(</span><span class="kwb">T</span><span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwb">T T</span>ak<span class="sym">(</span><span class="kwb">T</span> x<span class="sym">,</span> <span class="kwb">T</span> y<span class="sym">,</span> <span class="kwb">T</span> z<span class="sym">)</span>
    <span class="sym">{</span>
        <span class="kwa">if</span><span class="sym">(</span>y <span class="sym">&lt;</span> x<span class="sym">)</span> <span class="kwa">return</span> <span class="kwb">T</span>ak<span class="sym">(</span><span class="kwb">T</span>ak<span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> <span class="kwb">T</span>ak<span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> <span class="kwb">T</span>ak<span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">));</span>
        <span class="kwa">else return</span> z<span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>
