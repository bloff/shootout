<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/guile \
-e main -s
!#

<I><FONT COLOR="#B22222">;;; $Id: hash2-guile.code,v 1.2 2004-11-08 08:15:14 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(use-modules (ice-9 format))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> args)
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((n (<B><FONT COLOR="#A020F0">or</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (= (length args) 2) (string-&gt;number (cadr args))) 1))
	 (hash1 (make-hash-table 10000))
	 (hash2 (make-hash-table 10000)))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	((= i 10000))
      (hash-set! hash1 (string-append <B><FONT COLOR="#BC8F8F">&quot;foo_&quot;</FONT></B> (number-&gt;string i 10)) i))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	((= i n))
      (hash-fold (<B><FONT COLOR="#A020F0">lambda</FONT></B> (key val init)
		   (hash-set! hash2 key (+ (hash-ref hash2 key 0)
					   (hash-ref hash1 key))))
		 '() hash1))
    (display (format <B><FONT COLOR="#BC8F8F">&quot;~D ~D ~D ~D\n&quot;</FONT></B>
		     (hash-ref hash1 <B><FONT COLOR="#BC8F8F">&quot;foo_1&quot;</FONT></B>)
		     (hash-ref hash1 <B><FONT COLOR="#BC8F8F">&quot;foo_9999&quot;</FONT></B>)
		     (hash-ref hash2 <B><FONT COLOR="#BC8F8F">&quot;foo_1&quot;</FONT></B>)
		     (hash-ref hash2 <B><FONT COLOR="#BC8F8F">&quot;foo_9999&quot;</FONT></B>)))))</pre></td></tr></table>
