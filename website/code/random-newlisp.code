<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>newlisp
<span class="line">    2 </span>
<span class="line">    3 </span># random <span class="sym">-</span> benchmark
<span class="line">    4 </span>#
<span class="line">    5 </span># note<span class="sym">,</span> that newLISP has various fast built<span class="sym">-</span>in random
<span class="line">    6 </span># functions which are <span class="kwa">not</span> used here
<span class="line">    7 </span>#
<span class="line">    8 </span># Contributed by Lutz Mueller
<span class="line">    9 </span>
<span class="line">   10 </span><span class="sym">(</span><span class="kwa">set</span> <span class="str">'IM 139968)
</span><span class="line">   11 </span><span class="str">(set '</span>IA <span class="num">3877</span><span class="sym">)
</span><span class="line">   12 </span><span class="sym">(</span><span class="kwa">set</span> <span class="str">'IC 29573)
</span><span class="line">   13 </span><span class="str">
</span><span class="line">   14 </span><span class="str">(set '</span>LAST <span class="num">42</span><span class="sym">)
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym">(</span>define <span class="sym">(</span>gen_random maximum<span class="sym">)
</span><span class="line">   17 </span><span class="sym">        (</span><span class="kwa">set</span> <span class="str">'LAST (mod (add (mul LAST IA) IC) IM))
</span><span class="line">   18 </span><span class="str">        (div (mul maximum LAST) IM))
</span><span class="line">   19 </span><span class="str">
</span><span class="line">   20 </span><span class="str">
</span><span class="line">   21 </span><span class="str">(define (main)
</span><span class="line">   22 </span><span class="str">        (set '</span>N <span class="sym">(</span>integer <span class="sym">(</span><span class="kwa">nth</span> <span class="num">2</span> <span class="sym">(</span>main<span class="sym">-</span>args<span class="sym">))))
</span><span class="line">   23 </span><span class="sym">        (</span>dotimes <span class="sym">(</span>i <span class="sym">(-</span> N <span class="num">1</span><span class="sym">)) (</span>gen_random <span class="num">100.0</span><span class="sym">))
</span><span class="line">   24 </span><span class="sym">
</span><span class="line">   25 </span><span class="sym">        (</span>println <span class="sym">(</span>format <span class="str">&quot;%.9f&quot;</span> <span class="sym">(</span>gen_random <span class="num">100.0</span><span class="sym">))) )
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym">(</span>main<span class="sym">)
</span><span class="line">   28 </span><span class="sym">
</span><span class="line">   29 </span><span class="sym">(</span><span class="kwa">exit</span><span class="sym">)
</span><span class="line">   30 </span><span class="sym"></span>
