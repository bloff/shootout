<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   http://www.bagley.org/~doug/shootout/</span>
<span class="com"></span>
<span class="com">   converted to D by Dave Fladebo</span>
<span class="com">   compile: dmd -O -inline -release spellcheck.d</span>
<span class="com">*/</span>

<span class="kwa">import</span> std<span class="sym">.</span>stream<span class="sym">;</span>

<span class="kwa">const int</span> MAXLINELEN <span class="sym">=</span> <span class="num">128</span><span class="sym">;</span>

<span class="kwa">int</span> <span class="kwd">main</span><span class="sym">()</span>
<span class="sym">{</span>
    <span class="kwa">byte</span><span class="sym">[</span><span class="kwa">char</span><span class="sym">[]]</span>    <span class="kwc">da</span><span class="sym">;</span>
    <span class="kwa">char</span><span class="sym">[]</span>          bufr <span class="sym">=</span> <span class="kwa">new char</span><span class="sym">[</span>MAXLINELEN<span class="sym">];</span>

    BufferedFile dct <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">BufferedFile</span><span class="sym">(</span><span class="str">&quot;Usr.Dict.Words&quot;</span><span class="sym">);</span>
    <span class="kwa">while</span><span class="sym">(!</span>dct<span class="sym">.</span>eof<span class="sym">)</span>
    <span class="sym">{</span>
        <span class="kwc">da</span><span class="sym">[</span>dct<span class="sym">.</span><span class="kwd">readLine</span><span class="sym">(</span>bufr<span class="sym">).</span>dup<span class="sym">];</span>
    <span class="sym">}</span>
    dct<span class="sym">.</span><span class="kwd">close</span><span class="sym">();</span>

    <span class="kwa">char</span><span class="sym">[]</span>          line<span class="sym">;</span>
    BufferedStream  bsi <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">BufferedStream</span><span class="sym">(</span>std<span class="sym">.</span>stream<span class="sym">.</span>stdin<span class="sym">,</span> <span class="num">4096</span><span class="sym">);</span>
    BufferedStream  bso <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">BufferedStream</span><span class="sym">(</span>std<span class="sym">.</span>stream<span class="sym">.</span>stdout<span class="sym">,</span><span class="num">4096</span><span class="sym">);</span>
    <span class="kwa">while</span><span class="sym">(!</span>bsi<span class="sym">.</span>eof<span class="sym">)</span>
    <span class="sym">{</span>
        line <span class="sym">=</span> bsi<span class="sym">.</span><span class="kwd">readLine</span><span class="sym">(</span>bufr<span class="sym">);</span>
        <span class="kwa">if</span><span class="sym">(!(</span>line <span class="kwa">in</span> <span class="kwc">da</span><span class="sym">))</span> bso<span class="sym">.</span><span class="kwd">writeLine</span><span class="sym">(</span>line<span class="sym">);</span>
    <span class="sym">}</span>
    bso<span class="sym">.</span><span class="kwd">close</span><span class="sym">();</span>
    bsi<span class="sym">.</span><span class="kwd">close</span><span class="sym">();</span>

    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>
