<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   http://www.bagley.org/~doug/shootout/

   converted to D by Dave Fladebo
   compile: dmd -O -inline -release spellcheck.d
*/</span>

import std<span class="sym">.</span>stream<span class="sym">;

</span><span class="kwb">const int</span> MAXLINELEN <span class="sym">=</span> <span class="num">128</span><span class="sym">;

</span><span class="kwb">void</span> main<span class="sym">()
{
</span>    byte<span class="sym">[</span><span class="kwb">char</span><span class="sym">[]]</span>    da<span class="sym">;
</span>    <span class="kwb">char</span><span class="sym">[]</span>          bufr <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">char</span><span class="sym">[</span>MAXLINELEN<span class="sym">];

</span>    BufferedFile dct <span class="sym">=</span> <span class="kwa">new</span> BufferedFile<span class="sym">(</span><span class="str">&quot;Usr.Dict.Words&quot;</span><span class="sym">);
</span>    <span class="kwa">while</span><span class="sym">(!</span>dct<span class="sym">.</span>eof<span class="sym">)
    {
</span>        da<span class="sym">[</span>dct<span class="sym">.</span>readLine<span class="sym">(</span>bufr<span class="sym">).</span>dup<span class="sym">];
    }
</span>    dct<span class="sym">.</span>close<span class="sym">();

</span>    <span class="kwb">char</span><span class="sym">[]</span>          line<span class="sym">;
</span>    BufferedStream  bsi <span class="sym">=</span> <span class="kwa">new</span> BufferedStream<span class="sym">(</span>std<span class="sym">.</span>stream<span class="sym">.</span>stdin<span class="sym">,</span> <span class="num">4096</span><span class="sym">);
</span>    BufferedStream  bso <span class="sym">=</span> <span class="kwa">new</span> BufferedStream<span class="sym">(</span>std<span class="sym">.</span>stream<span class="sym">.</span>stdout<span class="sym">,</span><span class="num">4096</span><span class="sym">);
</span>    <span class="kwa">while</span><span class="sym">(!</span>bsi<span class="sym">.</span>eof<span class="sym">)
    {
</span>        line <span class="sym">=</span> bsi<span class="sym">.</span>readLine<span class="sym">(</span>bufr<span class="sym">);
</span>        <span class="kwa">if</span><span class="sym">(!(</span>line in da<span class="sym">))</span> bso<span class="sym">.</span>writeLine<span class="sym">(</span>line<span class="sym">);
    }
</span>    bso<span class="sym">.</span>close<span class="sym">();
</span>    bsi<span class="sym">.</span>close<span class="sym">();
}</span>
