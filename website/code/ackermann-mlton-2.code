<span class="com">(* -*- mode: sml -*-</span>
<span class="com"> * The Computer Language Shootout</span>
<span class="com"> * http://shootout.alioth.debian.org/</span>
<span class="com"> *</span>
<span class="com"> * A fairly concise version by Vesa Karvonen.</span>
<span class="com"> *)</span>

<span class="kwa">fun</span> ack <span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">) =</span> <span class="kwa">if</span> <span class="num">0</span><span class="sym">=</span>m <span class="kwa">then</span> n<span class="sym">+</span><span class="num">1</span> <span class="kwa">else</span> ack <span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">if</span> <span class="num">0</span><span class="sym">=</span>n <span class="kwa">then</span> <span class="num">1</span> <span class="kwa">else</span> ack <span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">))</span>

<span class="kwa">val</span> arg <span class="sym">=</span> hd <span class="sym">(</span>CommandLine.arguments <span class="sym">())</span> <span class="kwa">handle</span> _ <span class="sym">=&gt;</span> <span class="str">&quot;1&quot;</span>
<span class="kwa">val</span> res <span class="sym">=</span> ack <span class="sym">(</span><span class="num">3</span><span class="sym">,</span> getOpt <span class="sym">(</span><span class="kwa">Int</span>.fromString arg<span class="sym">,</span> <span class="num">0</span><span class="sym">))</span>
<span class="kwa">val</span> <span class="sym">() =</span> app print <span class="sym">[</span><span class="str">&quot;Ack(3,&quot;</span><span class="sym">,</span> arg<span class="sym">,</span> <span class="str">&quot;): &quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString res<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">]</span>
