<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>newlisp
<span class="line">    2 </span>#
<span class="line">    3 </span># matrix <span class="sym">-</span> benchmark
<span class="line">    4 </span>#
<span class="line">    5 </span># Note<span class="sym">,</span> that newLISP<span class="str">'s matrix functions work on lists not array type
</span><span class="line">    6 </span><span class="str">#
</span><span class="line">    7 </span><span class="str"># Contributed by Lutz Mueller
</span><span class="line">    8 </span><span class="str">
</span><span class="line">    9 </span><span class="str">(set '</span>size <span class="num">30</span><span class="sym">)
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym">(</span>define <span class="sym">(</span>mkmatrix rows cols<span class="sym">)
</span><span class="line">   12 </span><span class="sym">         (</span>map <span class="sym">(</span>fn <span class="sym">(</span>i<span class="sym">) (</span>sequence <span class="sym">(+ (*</span> i cols<span class="sym">)</span> <span class="num">1</span><span class="sym">)  (+ (*</span> i cols<span class="sym">)</span> cols<span class="sym">))) (</span>sequence <span class="num">0</span> <span class="sym">(-</span> rows <span class="num">1</span><span class="sym">))))
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym">(</span>define <span class="sym">(</span>main n<span class="sym">)
</span><span class="line">   16 </span><span class="sym">        (</span><span class="kwa">set</span> <span class="str">'m1 (mkmatrix size size))
</span><span class="line">   17 </span><span class="str">        (set '</span>m2 m1<span class="sym">)
</span><span class="line">   18 </span><span class="sym">        (</span>dotimes <span class="sym">(</span>i n<span class="sym">)
</span><span class="line">   19 </span><span class="sym">                (</span><span class="kwa">set</span> <span class="str">'m3 (multiply m1 m2)))
</span><span class="line">   20 </span><span class="str">        (println (nth 0 0 m3) &quot; &quot; (nth 2 3 m3) &quot; &quot; (nth 3 2 m3) &quot; &quot; (nth 4 4 m3)))
</span><span class="line">   21 </span><span class="str">
</span><span class="line">   22 </span><span class="str">
</span><span class="line">   23 </span><span class="str">(set '</span>n <span class="sym">(</span>integer <span class="sym">(</span><span class="kwa">nth</span> <span class="num">2</span> <span class="sym">(</span>main<span class="sym">-</span>args<span class="sym">))))
</span><span class="line">   24 </span><span class="sym">
</span><span class="line">   25 </span><span class="sym">(</span>main n<span class="sym">)
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym">(</span><span class="kwa">exit</span><span class="sym">)
</span><span class="line">   28 </span><span class="sym">
</span><span class="line">   29 </span><span class="sym"></span>
