<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; $Id: objinst-chicken.code,v 1.1 2004-11-02 08:52:38 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222">;;; from: Benedikt Rosenau
</FONT></I>
(declare (fixnum) (disable-interrupts) (uses tinyclos))

(define-generic print-bool)
(define-generic activate!)

(define-method (print-bool (b &lt;boolean&gt;))
   (display (<B><FONT COLOR="#A020F0">if</FONT></B> b <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>)))

(define-class &lt;toggle&gt; () (state))

(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">value?</FONT></B> (cut slot-ref &lt;&gt; 'state))

(define-class &lt;nth-toggle&gt; (&lt;toggle&gt;) (count-max counter))

(define-method (initialize (nt &lt;nth-toggle&gt;) initargs)
  (initialize-slots nt initargs) )

(define-method (activate! (t &lt;toggle&gt;))
  (slot-set! t 'state (not (slot-ref t 'state)))
   t)

(define-method (activate! (n-t &lt;nth-toggle&gt;))
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((counter (+ 1 (slot-ref n-t 'counter))))
    (slot-set! n-t 'counter counter)
    (<B><FONT COLOR="#A020F0">if</FONT></B> (&gt;= counter (slot-ref n-t 'count-max))
      (<B><FONT COLOR="#A020F0">begin</FONT></B> (slot-set! n-t 'state (not (slot-ref n-t 'state)))
             (slot-set! n-t 'counter 0)))
     n-t))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> #!optional (n <B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>))
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((n (string-&gt;number n)))
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((tog (make &lt;toggle&gt; 'state #t)))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i 5))
	(print-bool (value? (activate! tog)))))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i n))
      (make &lt;toggle&gt; 'state #t))
    (newline)
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((ntog (make &lt;nth-toggle&gt; 'state #t 'count-max 3 'counter 0)))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i 8))
	(print-bool (value? (activate! ntog)))))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i n))
      (make &lt;nth-toggle&gt; 'state #t 'count-max 3 'counter 0))))
            
(apply main (command-line-arguments))</pre></td></tr></table>
