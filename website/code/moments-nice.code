<span class="com">/* The Great Computer Language Shootout
    http://shootout.alioth.debian.org/
   contributed by Isaac Gouy

To compile:
	   nicec --sourcepath=.. -d=. -a moments.jar moments

To run:
   java -jar moments.jar &lt; input.txt &gt; out.txt
*/</span>


<span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;
</span><span class="kwa">import</span> java<span class="sym">.</span>text<span class="sym">.*;

</span><span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span>   var num <span class="sym">=</span> <span class="num">0.0</span><span class="sym">,</span> sum <span class="sym">=</span> <span class="num">0.0d</span><span class="sym">;
</span>   <span class="kwa">let</span> numbers <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">ArrayList</span><span class="sym">();
</span>   <span class="kwa">try</span> <span class="sym">{
</span>      <span class="kwa">let</span> r <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">BufferedReader</span><span class="sym">(</span><span class="kwa">new</span> <span class="kwc">InputStreamReader</span><span class="sym">(</span><span class="kwc">System</span><span class="sym">.</span>in<span class="sym">));
</span>      ?<span class="kwc">String</span> line<span class="sym">;
</span>      <span class="kwa">while</span> <span class="sym">((</span>line <span class="sym">=</span> r<span class="sym">.</span>readLine<span class="sym">) !=</span> null<span class="sym">){
</span>         num <span class="sym">=</span> <span class="kwc">Double</span><span class="sym">.</span>parseDouble<span class="sym">(</span>line<span class="sym">);
</span>         sum <span class="sym">+=</span> num<span class="sym">;
 </span>         numbers<span class="sym">.</span>add<span class="sym">(</span>num<span class="sym">);
      }
   }
 </span>   <span class="kwa">catch</span> <span class="sym">(</span><span class="kwc">IOException</span> e<span class="sym">) {
 </span>      <span class="kwc">System</span><span class="sym">.</span>err<span class="sym">.</span>println<span class="sym">(</span>e<span class="sym">);
</span>      <span class="kwa">return</span><span class="sym">;
    }

</span>   <span class="kwa">let</span> n <span class="sym">=</span> numbers<span class="sym">.</span>size<span class="sym">;</span> <span class="kwa">if</span> <span class="sym">(</span>n<span class="sym">&lt;</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">return</span><span class="sym">;
</span>   <span class="kwa">let</span> mean <span class="sym">=</span> sum<span class="sym">/</span>n<span class="sym">;
</span>   var median <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>   var average_deviation <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>   var standard_deviation <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>   var variance <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>   var skew <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>   var kurtosis <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>   var deviation <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;

</span>   <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">double</span> each <span class="sym">:</span> numbers<span class="sym">) {
</span>      deviation <span class="sym">=</span> each <span class="sym">-</span> mean<span class="sym">;
</span>      average_deviation <span class="sym">+=</span> <span class="kwc">Math</span><span class="sym">.</span>abs<span class="sym">(</span>deviation<span class="sym">);
</span>      variance <span class="sym">+=</span> deviation <span class="sym">**</span> <span class="num">2</span><span class="sym">;
</span>      skew <span class="sym">+=</span> deviation <span class="sym">**</span> <span class="num">3</span><span class="sym">;
</span>      kurtosis <span class="sym">+=</span> deviation <span class="sym">**</span> <span class="num">4</span><span class="sym">;
   }
 
</span>   average_deviation <span class="sym">/=</span> n<span class="sym">;
</span>   variance <span class="sym">/= (</span>n <span class="num">- 1</span><span class="sym">);
</span>   standard_deviation <span class="sym">=</span> <span class="kwc">Math</span><span class="sym">.</span>sqrt<span class="sym">(</span>variance<span class="sym">);
</span>   <span class="kwa">if</span> <span class="sym">(</span>variance <span class="sym">!=</span> <span class="num">0.0</span><span class="sym">) {
</span>      skew <span class="sym">/= (</span>n <span class="sym">*</span> variance <span class="sym">*</span> standard_deviation<span class="sym">);
</span>      kurtosis <span class="sym">=</span> kurtosis<span class="sym">/(</span>n <span class="sym">*</span> variance <span class="sym">*</span> variance<span class="sym">) -</span> <span class="num">3.0</span><span class="sym">;
   }

</span>   <span class="kwc">Collections</span><span class="sym">.</span>sort<span class="sym">(</span>numbers<span class="sym">);

</span>   <span class="kwa">let</span> mid <span class="sym">=</span> n<span class="sym">/</span><span class="num">2</span><span class="sym">;
 </span>   <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">) {
</span>      median <span class="sym">= (</span>n <span class="sym">%</span> <span class="num">2</span> <span class="sym">!=</span> <span class="num">0</span><span class="sym">)</span> ?
         numbers<span class="sym">[</span>mid<span class="sym">] : (</span>numbers<span class="sym">[</span>mid<span class="sym">] +</span> numbers<span class="sym">[</span>mid<span class="num">-1</span><span class="sym">])/</span><span class="num">2</span><span class="sym">;
   }

</span>   <span class="kwa">let</span> f <span class="sym">=</span> floatFormat<span class="sym">(</span><span class="num">6</span><span class="sym">);
</span>   print<span class="sym">(</span><span class="str">&quot;n:                  &quot;</span><span class="sym">);</span> println<span class="sym">(</span>n<span class="sym">);
</span>   println<span class="sym">(</span><span class="str">&quot;median:             &quot;</span> <span class="sym">+</span> f<span class="sym">.</span>format<span class="sym">(</span>median<span class="sym">));
</span>   println<span class="sym">(</span><span class="str">&quot;mean:               &quot;</span> <span class="sym">+</span> f<span class="sym">.</span>format<span class="sym">(</span>mean<span class="sym">));
</span>   println<span class="sym">(</span><span class="str">&quot;average_deviation:  &quot;</span> <span class="sym">+</span> f<span class="sym">.</span>format<span class="sym">(</span>average_deviation<span class="sym">));
</span>   println<span class="sym">(</span><span class="str">&quot;standard_deviation: &quot;</span> <span class="sym">+</span> f<span class="sym">.</span>format<span class="sym">(</span>standard_deviation<span class="sym">));
</span>   println<span class="sym">(</span><span class="str">&quot;variance:           &quot;</span> <span class="sym">+</span> f<span class="sym">.</span>format<span class="sym">(</span>variance<span class="sym">));
</span>   println<span class="sym">(</span><span class="str">&quot;skew:               &quot;</span> <span class="sym">+</span> f<span class="sym">.</span>format<span class="sym">(</span>skew<span class="sym">));
</span>   println<span class="sym">(</span><span class="str">&quot;kurtosis:           &quot;</span> <span class="sym">+</span> f<span class="sym">.</span>format<span class="sym">(</span>kurtosis<span class="sym">));
}


</span><span class="kwc">NumberFormat</span> floatFormat<span class="sym">(</span><span class="kwb">int</span> digits<span class="sym">){
</span>   <span class="kwa">let</span> f <span class="sym">=</span> <span class="kwc">NumberFormat</span><span class="sym">.</span>getInstance<span class="sym">();
</span>   f<span class="sym">.</span>setGroupingUsed<span class="sym">(</span>false<span class="sym">);
</span>   f<span class="sym">.</span>setMaximumFractionDigits<span class="sym">(</span>digits<span class="sym">);
</span>   f<span class="sym">.</span>setMinimumFractionDigits<span class="sym">(</span>digits<span class="sym">);
</span>   <span class="kwa">return</span> f<span class="sym">;
}
 </span>
