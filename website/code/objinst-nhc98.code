<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: objinst-nhc98.code,v 1.1 2004-11-02 08:52:38 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">-- Author: Einar Karttunen
</FONT></I><I><FONT COLOR="#B22222">-- compile with: ghc -O2 -o objinst objinst.hs
</FONT></I>
<B><FONT COLOR="#A020F0">import</FONT></B> Control.Monad
<B><FONT COLOR="#A020F0">import</FONT></B> Data.IORef
<B><FONT COLOR="#A020F0">import</FONT></B> System

<B><FONT COLOR="#A020F0">class</FONT></B> Toggle a <B><FONT COLOR="#A020F0">where</FONT></B>
    activate <B><FONT COLOR="#228B22">:: a -&gt; IO ()
</FONT></B>    value <B><FONT COLOR="#228B22">:: a -&gt; IO Bool
</FONT></B>
newtype ToggleC    = ToggleC (IORef Bool)
newtype NthToggleC = NthToggleC (IORef (Bool, Int, Int))

newToggle s = newIORef s &gt;&gt;= return . ToggleC
newNthToggle s m = newIORef (s,0,m) &gt;&gt;= return . NthToggleC

<B><FONT COLOR="#A020F0">instance</FONT></B> Toggle ToggleC <B><FONT COLOR="#A020F0">where</FONT></B> 
    activate (ToggleC t) = modifyIORef t not
    value (ToggleC t)    = readIORef t

<B><FONT COLOR="#A020F0">instance</FONT></B> Toggle NthToggleC <B><FONT COLOR="#A020F0">where</FONT></B>
    activate (NthToggleC t) = modifyIORef t (\(s,v,m) -&gt; <B><FONT COLOR="#A020F0">if</FONT></B> v+1 == m <B><FONT COLOR="#A020F0">then</FONT></B> (not s,0,m) <B><FONT COLOR="#A020F0">else</FONT></B> (s,v+1,m))
    value    (NthToggleC t) = readIORef t &gt;&gt;= \(s,<B><FONT COLOR="#A020F0">_,_</FONT></B>) -&gt; return s

out b = putStrLn $ <B><FONT COLOR="#A020F0">if</FONT></B> b <B><FONT COLOR="#A020F0">then</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;true&quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false&quot;</FONT></B>

main = do [num] &lt;- getArgs
	  toggle&lt;- newToggle True
	  replicateM_ 5 (activate toggle &gt;&gt; value toggle &gt;&gt;= out)
	  replicateM_ (read num) (newToggle True)
	  putStrLn <B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B>
	  ntoggle &lt;- newNthToggle True 3
	  replicateM_ 8 (activate ntoggle&gt;&gt; value ntoggle&gt;&gt;= out)
	  replicateM_ (read num) (newNthToggle True 3)</pre></td></tr></table>
