<span class="slc">//</span>
<span class="slc">// Contributed by John Skaller</span>
<span class="slc">//</span>
<span class="kwa">include</span> <span class="str">&quot;std&quot;</span><span class="sym">;</span>
n <span class="sym">:=</span> atoi<span class="sym">(</span>System<span class="sym">::</span>argv <span class="num">1</span><span class="sym">);</span>
<span class="kwa">include</span> <span class="str">&quot;stl&quot;</span><span class="sym">;</span>
<span class="kwa">open</span> Stl<span class="sym">;</span>
<span class="kwa">open</span> Stl<span class="sym">::</span>HashMap<span class="sym">;</span>

requires ext_string_hash<span class="sym">;</span>

<span class="kwa">var</span> h1 <span class="sym">=</span> HashMap<span class="sym">::</span>create<span class="sym">[</span><span class="kwb">string</span><span class="sym">,</span><span class="kwb">int</span><span class="sym">]();</span>

<span class="kwa">var</span> i <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span> until i <span class="sym">==</span> <span class="num">10000</span> do
  s <span class="sym">:=</span> <span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> str i<span class="sym">;</span>
  insert <span class="sym">(</span>h1<span class="sym">,</span> s<span class="sym">,</span> i<span class="sym">);</span>
  <span class="sym">++</span>i<span class="sym">;</span>
done<span class="sym">;</span>

<span class="kwa">var</span> h2 <span class="sym">=</span> HashMap<span class="sym">::</span>create<span class="sym">[</span><span class="kwb">string</span><span class="sym">,</span><span class="kwb">int</span><span class="sym">]();</span>

i<span class="sym">=</span>n<span class="sym">;</span> until i <span class="sym">==</span> <span class="num">0</span> do
  <span class="kwa">var</span> j <span class="sym">=</span> begin h1<span class="sym">;</span> until j <span class="sym">==</span> end h1 do
    k<span class="sym">,</span> v <span class="sym">:=</span> deref j<span class="sym">;</span>
    <span class="slc">//h2.[k] = h2.[k] + v;</span>
    h2.<span class="sym">[</span>k<span class="sym">] +=</span> v<span class="sym">;</span>
    <span class="sym">++</span>j<span class="sym">;</span>
  done<span class="sym">;</span>
  <span class="sym">--</span>i<span class="sym">;</span>
done<span class="sym">;</span>

<span class="kwa">print</span> h1.<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">];</span> <span class="kwa">print</span> <span class="str">&quot; &quot;</span><span class="sym">;</span> <span class="kwa">print</span> h1.<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">];</span> <span class="kwa">print</span> <span class="str">&quot; &quot;</span> <span class="sym">;</span>
<span class="kwa">print</span> h2.<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">];</span> <span class="kwa">print</span> <span class="str">&quot; &quot;</span><span class="sym">;</span> <span class="kwa">print</span> h2.<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">];</span> <span class="kwa">endl</span><span class="sym">;</span>

