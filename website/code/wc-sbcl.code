<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: lisp -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: wc-sbcl.code,v 1.1 2004-11-02 08:53:32 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">;;; from Bulent Murtezaoglu (with some code from Andrew McDowell)
</FONT></I><I><FONT COLOR="#B22222">;;; Multi-lisp modifications by Brent Fulgham
</FONT></I>
(declaim (optimize (speed 3) (debug 0) (safety 0) (space 0) (compilation-speed 0)))
	 
(defun main ()
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((start 0)
	 (current #\X)			<I><FONT COLOR="#B22222">;junk char save me the locally
</FONT></I>	 (end 0)
	 (nc 0)
	 (buffer (make-string 4096)))
    (declare (type (simple-base-string 4096) buffer) (fixnum start end nc)
	     (base-char current))
    (labels
	((get-char ()
		   (when (= start end)
		     (setf start 0)
		     (setf end (read-sequence buffer *standard-input*))
		     (incf nc end)
		     (when (zerop end)
		       (return-from get-char nil)))
		   (setf current (schar buffer start))
		   (incf start)))
      (<B><FONT COLOR="#A020F0">let</FONT></B> ((nl 0)
	    (nw 0)
	    (inword nil))
	(declare (fixnum nl nw))
	(loop while (get-char) <B><FONT COLOR="#A020F0">do</FONT></B>
	  (<B><FONT COLOR="#A020F0">cond</FONT></B> ((char= current #\newline)
		 (incf nl)
		 (setq inword nil))
		((<B><FONT COLOR="#A020F0">or</FONT></B> (char= current #\space) (char= current #\tab))
		 (setq inword nil))
		((not inword) <I><FONT COLOR="#B22222">;; only tested if we have a word constituent
</FONT></I>		 (incf nw) (setq inword t))))
	(format t <B><FONT COLOR="#BC8F8F">&quot;~A ~A ~A~%&quot;</FONT></B> nl nw nc)))))</pre></td></tr></table>
