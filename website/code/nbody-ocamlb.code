<span class="com">(*
 * The Great Computer Language Shootout
 * http://shootout.alioth.debian.org/
 *
 * contributed by Christophe TROESTLER
 *)</span>


<span class="kwa">let</span> pi <span class="sym">=</span> <span class="num">3.141592653589793
</span><span class="kwa">let</span> solar_mass <span class="sym">=</span> <span class="num">4</span>. <span class="sym">*</span>. pi <span class="sym">*</span>. pi
<span class="kwa">let</span> days_per_year <span class="sym">=</span> <span class="num">365.24

</span><span class="kwa">type</span> planet <span class="sym">= {
</span>  <span class="kwa">mutable</span> x <span class="sym">:</span> <span class="kwb">float</span><span class="sym">;</span>  <span class="kwa">mutable</span> y <span class="sym">:</span> <span class="kwb">float</span><span class="sym">;</span>  <span class="kwa">mutable</span> z <span class="sym">:</span> <span class="kwb">float</span><span class="sym">;
</span>  <span class="kwa">mutable</span> vx<span class="sym">:</span> <span class="kwb">float</span><span class="sym">;</span>  <span class="kwa">mutable</span> vy<span class="sym">:</span> <span class="kwb">float</span><span class="sym">;</span>  <span class="kwa">mutable</span> vz<span class="sym">:</span> <span class="kwb">float</span><span class="sym">;
</span>  mass <span class="sym">:</span> <span class="kwb">float</span><span class="sym">;
}


</span><span class="kwa">let</span> advance bodies dt <span class="sym">=
</span>  <span class="kwa">let</span> n <span class="sym">=</span> Array.length bodies <span class="num">- 1</span> <span class="kwa">in
  for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> n <span class="kwa">do
    let</span> b <span class="sym">=</span> bodies.<span class="sym">(</span>i<span class="sym">)</span> <span class="kwa">in
    for</span> j <span class="sym">=</span> i<span class="sym">+</span><span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do
      let</span> b<span class="str">' = bodies.(j) in
      let dx = b.x -. b'</span>.x  <span class="kwa">and</span> dy <span class="sym">=</span> b.y <span class="sym">-</span>. b<span class="str">'.y  and dz = b.z -. b'</span>.z <span class="kwa">in
      let</span> distance <span class="sym">=</span> sqrt<span class="sym">(</span>dx <span class="sym">*</span>. dx <span class="sym">+</span>. dy <span class="sym">*</span>. dy <span class="sym">+</span>. dz <span class="sym">*</span>. dz<span class="sym">)</span> <span class="kwa">in
      let</span> mag <span class="sym">=</span> dt <span class="sym">/</span>. <span class="sym">(</span>distance <span class="sym">*</span>. distance <span class="sym">*</span>. distance<span class="sym">)</span> <span class="kwa">in

</span>      b.vx <span class="sym">&lt;-</span> b.vx <span class="sym">-</span>. dx <span class="sym">*</span>. b<span class="str">'.mass *. mag;
      b.vy &lt;- b.vy -. dy *. b'</span>.mass <span class="sym">*</span>. mag<span class="sym">;
</span>      b.vz <span class="sym">&lt;-</span> b.vz <span class="sym">-</span>. dz <span class="sym">*</span>. b<span class="str">'.mass *. mag;

      b'</span>.vx <span class="sym">&lt;-</span> b<span class="str">'.vx +. dx *. b.mass *. mag;
      b'</span>.vy <span class="sym">&lt;-</span> b<span class="str">'.vy +. dy *. b.mass *. mag;
      b'</span>.vz <span class="sym">&lt;-</span> b<span class="str">'.vz +. dz *. b.mass *. mag;
    done
  done;
  for i = 0 to n do
    let b = bodies.(i) in
    b.x &lt;- b.x +. dt *. b.vx;
    b.y &lt;- b.y +. dt *. b.vy;
    b.z &lt;- b.z +. dt *. b.vz;
  done


let energy bodies =
  let e = ref 0. in
  for i = 0 to Array.length bodies - 1 do
    let b = bodies.(i) in
    e := !e +. 0.5 *. b.mass *. (b.vx *. b.vx +. b.vy *. b.vy +. b.vz *. b.vz);
    for j = i+1 to Array.length bodies - 1 do
      let b'</span> <span class="sym">=</span> bodies.<span class="sym">(</span>j<span class="sym">)</span> <span class="kwa">in
      let</span> dx <span class="sym">=</span> b.x <span class="sym">-</span>. b<span class="str">'.x  and dy = b.y -. b'</span>.y  <span class="kwa">and</span> dz <span class="sym">=</span> b.z <span class="sym">-</span>. b<span class="str">'.z in
      let distance = sqrt(dx *. dx +. dy *. dy +. dz *. dz) in
      e := !e -. (b.mass *. b'</span>.mass<span class="sym">) /</span>. distance
    <span class="kwa">done
  done</span><span class="sym">;
  !</span>e


<span class="kwa">let</span> offset_momentum bodies <span class="sym">=
</span>  <span class="kwa">let</span> px <span class="sym">=</span> ref <span class="num">0</span>. <span class="kwa">and</span> py <span class="sym">=</span> ref <span class="num">0</span>. <span class="kwa">and</span> pz <span class="sym">=</span> ref <span class="num">0</span>. <span class="kwa">in
  for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> Array.length bodies <span class="num">- 1</span> <span class="kwa">do
</span>    px <span class="sym">:= !</span>px <span class="sym">+</span>. bodies.<span class="sym">(</span>i<span class="sym">)</span>.vx <span class="sym">*</span>. bodies.<span class="sym">(</span>i<span class="sym">)</span>.mass<span class="sym">;
</span>    py <span class="sym">:= !</span>py <span class="sym">+</span>. bodies.<span class="sym">(</span>i<span class="sym">)</span>.vy <span class="sym">*</span>. bodies.<span class="sym">(</span>i<span class="sym">)</span>.mass<span class="sym">;
</span>    pz <span class="sym">:= !</span>pz <span class="sym">+</span>. bodies.<span class="sym">(</span>i<span class="sym">)</span>.vz <span class="sym">*</span>. bodies.<span class="sym">(</span>i<span class="sym">)</span>.mass<span class="sym">;
</span>  <span class="kwa">done</span><span class="sym">;
</span>  bodies.<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vx <span class="sym">&lt;- -</span>. <span class="sym">!</span>px <span class="sym">/</span>. solar_mass<span class="sym">;
</span>  bodies.<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vy <span class="sym">&lt;- -</span>. <span class="sym">!</span>py <span class="sym">/</span>. solar_mass<span class="sym">;
</span>  bodies.<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vz <span class="sym">&lt;- -</span>. <span class="sym">!</span>pz <span class="sym">/</span>. solar_mass


<span class="kwa">let</span> jupiter <span class="sym">= {
</span>  x <span class="sym">=</span> <span class="num">4.84143144246472090e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>  y <span class="sym">= -</span><span class="num">1.16032004402742839e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>  z <span class="sym">= -</span><span class="num">1.03622044471123109e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>  vx <span class="sym">=</span> <span class="num">1.66007664274403694e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vy <span class="sym">=</span> <span class="num">7.69901118419740425e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vz <span class="sym">= -</span><span class="num">6.90460016972063023e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  mass <span class="sym">=</span> <span class="num">9.54791938424326609e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span>. solar_mass<span class="sym">;
}

</span><span class="kwa">let</span> saturn <span class="sym">= {
</span>  x <span class="sym">=</span> <span class="num">8.34336671824457987e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>  y <span class="sym">=</span> <span class="num">4.12479856412430479e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>  z <span class="sym">= -</span><span class="num">4.03523417114321381e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>  vx <span class="sym">= -</span><span class="num">2.76742510726862411e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vy <span class="sym">=</span> <span class="num">4.99852801234917238e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vz <span class="sym">=</span> <span class="num">2.30417297573763929e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  mass <span class="sym">=</span> <span class="num">2.85885980666130812e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span>. solar_mass<span class="sym">;
}

</span><span class="kwa">let</span> uranus <span class="sym">= {
</span>  x <span class="sym">=</span> <span class="num">1.28943695621391310e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>  y <span class="sym">= -</span><span class="num">1.51111514016986312e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>  z <span class="sym">= -</span><span class="num">2.23307578892655734e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>  vx <span class="sym">=</span> <span class="num">2.96460137564761618e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vy <span class="sym">=</span> <span class="num">2.37847173959480950e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vz <span class="sym">= -</span><span class="num">2.96589568540237556e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  mass <span class="sym">=</span> <span class="num">4.36624404335156298e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span>. solar_mass<span class="sym">;
}

</span><span class="kwa">let</span> neptune <span class="sym">= {
</span>  x <span class="sym">=</span> <span class="num">1.53796971148509165e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>  y <span class="sym">= -</span><span class="num">2.59193146099879641e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>  z <span class="sym">=</span> <span class="num">1.79258772950371181e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>  vx <span class="sym">=</span> <span class="num">2.68067772490389322e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vy <span class="sym">=</span> <span class="num">1.62824170038242295e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  vz <span class="sym">= -</span><span class="num">9.51592254519715870e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span>. days_per_year<span class="sym">;
</span>  mass <span class="sym">=</span> <span class="num">5.15138902046611451e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span>. solar_mass<span class="sym">;
}

</span><span class="kwa">let</span> sun <span class="sym">= {
</span>  x <span class="sym">=</span> <span class="num">0</span>.<span class="sym">;</span>  y <span class="sym">=</span> <span class="num">0</span>.<span class="sym">;</span>  z <span class="sym">=</span> <span class="num">0</span>.<span class="sym">;</span>  vx <span class="sym">=</span> <span class="num">0</span>.<span class="sym">;</span>  vy <span class="sym">=</span> <span class="num">0</span>.<span class="sym">;</span> vz <span class="sym">=</span> <span class="num">0</span>.<span class="sym">;
</span>  mass<span class="sym">=</span> solar_mass<span class="sym">;
}

</span><span class="kwa">let</span> bodies <span class="sym">= [|</span> sun<span class="sym">;</span> jupiter<span class="sym">;</span> saturn<span class="sym">;</span> uranus<span class="sym">;</span> neptune <span class="sym">|]

</span><span class="kwa">let</span> <span class="sym">() =
</span>  <span class="kwa">let</span> n <span class="sym">=</span> int_of_string<span class="sym">(</span>Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">))</span> <span class="kwa">in
</span>  offset_momentum bodies<span class="sym">;
</span>  Printf.printf <span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">(</span>energy bodies<span class="sym">);
</span>  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do
</span>    advance bodies <span class="num">0.01
</span>  <span class="kwa">done</span><span class="sym">;
</span>  Printf.printf <span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">(</span>energy bodies<span class="sym">)</span>
