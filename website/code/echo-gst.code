<span class="str">&quot;  The Great Computer Language Shootout
   contributed by Isaac Gouy

   To run: gst -QI /usr/share/gnu-smalltalk/gst.im ackermann.st -a 8
&quot;</span>

<span class="sym">!</span>Integer methodsFor<span class="sym">:</span> <span class="str">'shootout'</span><span class="sym">!

</span>ackermann<span class="sym">:</span> anInteger
   ^self <span class="sym">=</span> <span class="num">0
</span>      ifTrue<span class="sym">: [</span>anInteger <span class="sym">+</span> <span class="num">1</span><span class="sym">]
</span>      ifFalse<span class="sym">: [
</span>         anInteger <span class="sym">=</span> <span class="num">0
</span>            ifTrue<span class="sym">: [</span>self <span class="num">- 1</span> ackermann<span class="sym">:</span>  <span class="num">1</span><span class="sym">]
</span>            ifFalse<span class="sym">: [</span>self <span class="num">- 1</span> ackermann<span class="sym">: (</span>self ackermann<span class="sym">:</span> anInteger <span class="num">- 1</span><span class="sym">)] ] ! !

|</span> n <span class="sym">|
</span>n <span class="sym">:=</span> Smalltalk arguments first asInteger.

Transcript show<span class="sym">:</span> <span class="str">'Ack(3,'</span><span class="sym">;</span> show<span class="sym">:</span> n printString<span class="sym">;</span> show<span class="sym">:</span> <span class="str">'): '</span><span class="sym">;
</span>           show<span class="sym">: (</span><span class="num">3</span> ackermann<span class="sym">:</span> n<span class="sym">)</span> printString<span class="sym">;</span> nl<span class="sym">!</span>
