<span class="slc">%%% -*- mode: erlang -*-</span>
<span class="slc">%%% $Id: wc-erlang.code,v 1.11 2006-03-30 16:07:52 bfulgham Exp $</span>
<span class="slc">%%% http://shootout.alioth.debian.org/</span>
<span class="slc">%%%</span>
<span class="slc">%%% Super-fast implementation by Mark Scandariato</span>
<span class="slc">%%% Mega-improvement by Alexey Shchepin &lt;alexey&#64;sevcom.net&gt;</span>
<span class="slc">%%% Corrected to meet Shootout criteria, and made Hyper-fast</span>
<span class="slc">%%%    by Mark Scandariato</span>

<span class="sym">-</span><span class="kwd">module</span><span class="sym">(</span>wc<span class="sym">)</span>.
<span class="sym">-</span><span class="kwd">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

<span class="sym">-</span><span class="kwd">define</span><span class="sym">(</span>BUFSIZE<span class="sym">,</span> <span class="num">4096</span><span class="sym">)</span>.

<span class="kwd">main</span><span class="sym">(</span>_Args<span class="sym">) -&gt;</span>
    ok <span class="sym">=</span> io<span class="sym">:</span><span class="kwd">setopts</span><span class="sym">([</span><span class="kwb">binary</span><span class="sym">]),</span>
    <span class="sym">{</span>L<span class="sym">,</span> W<span class="sym">,</span> C<span class="sym">} =</span> <span class="kwd">s</span><span class="sym">(</span><span class="kwd">next</span><span class="sym">(),</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;~p ~p ~p~n&quot;</span><span class="sym">, [</span>L<span class="sym">,</span>W<span class="sym">,</span>C<span class="sym">]),</span>
    erlang<span class="sym">:</span><span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.

<span class="kwd">next</span><span class="sym">() -&gt;</span> <span class="kwd">next</span><span class="sym">(</span>io<span class="sym">:</span><span class="kwd">get_chars</span><span class="sym">(</span><span class="str">''</span><span class="sym">,</span>?BUFSIZE<span class="sym">))</span>.

<span class="kwd">next</span><span class="sym">(</span>eof<span class="sym">) -&gt;</span> eof<span class="sym">;</span>
<span class="kwd">next</span><span class="sym">(</span>Bin<span class="sym">) -&gt;</span> <span class="kwb">binary_to_list</span><span class="sym">(</span>Bin<span class="sym">)</span>.

<span class="kwd">s</span><span class="sym">([</span>$\s<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">) -&gt;</span> <span class="kwd">s</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">s</span><span class="sym">([</span>$\t<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">) -&gt;</span> <span class="kwd">s</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">s</span><span class="sym">([</span>$\n<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">) -&gt;</span> <span class="kwd">s</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">s</span><span class="sym">([</span>_<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">)   -&gt;</span> <span class="kwd">w</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">+</span><span class="num">1</span><span class="sym">);</span>
<span class="kwd">s</span><span class="sym">([],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">)      -&gt;</span> <span class="kwd">s</span><span class="sym">(</span><span class="kwd">next</span><span class="sym">(),</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">s</span><span class="sym">(</span>eof<span class="sym">,</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">)     -&gt; {</span>L<span class="sym">,</span> W<span class="sym">,</span> C<span class="sym">}</span>.

<span class="kwd">w</span><span class="sym">([</span>$\s<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">) -&gt;</span> <span class="kwd">s</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">w</span><span class="sym">([</span>$\t<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">) -&gt;</span> <span class="kwd">s</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">w</span><span class="sym">([</span>$\n<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">) -&gt;</span> <span class="kwd">s</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">w</span><span class="sym">([</span>_<span class="sym">|</span>T<span class="sym">],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">)   -&gt;</span> <span class="kwd">w</span><span class="sym">(</span>T<span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">w</span><span class="sym">([],</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">)      -&gt;</span> <span class="kwd">w</span><span class="sym">(</span><span class="kwd">next</span><span class="sym">(),</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">);</span>
<span class="kwd">w</span><span class="sym">(</span>eof<span class="sym">,</span> C<span class="sym">,</span> L<span class="sym">,</span> W<span class="sym">)     -&gt; {</span>L<span class="sym">,</span> W<span class="sym">,</span> C<span class="sym">}</span>.

