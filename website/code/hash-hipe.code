<span class="slc">%%% -*- mode: erlang -*-
</span><span class="slc">%%% $Id: hash-hipe.code,v 1.5 2005-03-22 09:05:06 bfulgham Exp $
</span><span class="slc">%%% http://shootout.alioth.debian.org/
</span>
<span class="slc">%% Use ETS tables (Erlang's associative store).
</span><span class="slc">%%
</span><span class="slc">%% Optimizations provided by Einar Karttunen.
</span><span class="slc">%% An off-by-one error corrected by Brent Fulgham
</span>
<span class="sym">-</span>module<span class="sym">(</span><span class="kwb">hash</span><span class="sym">)</span>.
<span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

main<span class="sym">() -&gt;</span> main<span class="sym">([</span><span class="str">'1'</span><span class="sym">])</span>.
main<span class="sym">([</span>Arg<span class="sym">]) -&gt;
</span>    N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span><span class="kwb">atom_to_list</span><span class="sym">(</span>Arg<span class="sym">)),
</span>    H <span class="sym">=</span> ets<span class="sym">:</span>new<span class="sym">(</span>i_am_a_carrot<span class="sym">, [</span>set<span class="sym">]),
</span>    doinserts<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> N <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> H<span class="sym">),
</span>    Count <span class="sym">=</span> dolookups<span class="sym">(</span>N <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> H<span class="sym">),
</span>    io<span class="sym">:</span>format<span class="sym">(</span><span class="str">&quot;~w~n&quot;</span><span class="sym">, [</span>Count<span class="sym">]),
</span>    <span class="kwb">halt</span><span class="sym">()</span>.

doinserts<span class="sym">(</span>N<span class="sym">,</span> N<span class="sym">,</span> H<span class="sym">) -&gt;</span> ok<span class="sym">;
</span>doinserts<span class="sym">(</span>I<span class="sym">,</span> N<span class="sym">,</span> H<span class="sym">) -&gt;
</span>    ets<span class="sym">:</span>insert<span class="sym">(</span>H<span class="sym">, {</span> erlang<span class="sym">:</span><span class="kwb">integer_to_list</span><span class="sym">(</span>I<span class="sym">,</span> <span class="num">16</span><span class="sym">),</span> I <span class="sym">}),
</span>    doinserts<span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> N<span class="sym">,</span> H<span class="sym">)</span>.

dolookups<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> C<span class="sym">,</span> H<span class="sym">) -&gt;</span> C<span class="sym">;
</span>dolookups<span class="sym">(</span>I<span class="sym">,</span> C<span class="sym">,</span> H<span class="sym">) -&gt;
</span>    Nx <span class="sym">=</span> <span class="kwb">integer_to_list</span><span class="sym">(</span>I<span class="sym">),
</span>    <span class="kwa">case</span> ets<span class="sym">:</span>lookup<span class="sym">(</span>H<span class="sym">,</span> Nx<span class="sym">)</span> <span class="kwa">of
</span>	<span class="sym">[] -&gt;</span>    dolookups<span class="sym">(</span>I<span class="num">-1</span><span class="sym">,</span> C<span class="sym">,</span> H<span class="sym">);
</span>	Found <span class="sym">-&gt;</span> dolookups<span class="sym">(</span>I<span class="num">-1</span><span class="sym">,</span> C<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> H<span class="sym">)
</span>    <span class="kwa">end</span>.
