<span class="line">    1 </span><span class="com">/* The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="com">     http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="com">    contributed by Isaac Gouy
</span><span class="line">    4 </span><span class="com"> 
</span><span class="line">    5 </span><span class="com"> To compile:
</span><span class="line">    6 </span><span class="com">            nicec --sourcepath=.. -d=. -a nestedloop.jar nestedloop
</span><span class="line">    7 </span><span class="com"> 
</span><span class="line">    8 </span><span class="com"> To run:
</span><span class="line">    9 </span><span class="com">    java -ea -jar nestedloop.jar 16
</span><span class="line">   10 </span><span class="com"> */</span>
<span class="line">   11 </span>
<span class="line">   12 </span>
<span class="line">   13 </span>   <span class="kwa">import</span> ackermann<span class="sym">;</span> <span class="slc">// reuse toSinglePositiveInt 
</span><span class="line">   14 </span><span class="slc"></span>
<span class="line">   15 </span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span><span class="line">   16 </span><span class="sym"> </span>   <span class="kwa">let</span> n <span class="sym">=</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">);
</span><span class="line">   17 </span><span class="sym"> </span>   <span class="kwb">int</span> count <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym"> 
</span><span class="line">   19 </span><span class="sym"> </span>   <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> a<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> a<span class="sym">&lt;</span>n<span class="sym">;</span> a<span class="sym">++)
</span><span class="line">   20 </span><span class="sym"> </span>      <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> b<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> b<span class="sym">&lt;</span>n<span class="sym">;</span> b<span class="sym">++)
</span><span class="line">   21 </span><span class="sym"> </span>         <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> c<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> c<span class="sym">&lt;</span>n<span class="sym">;</span> c<span class="sym">++)
</span><span class="line">   22 </span><span class="sym"> </span>            <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> d<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> d<span class="sym">&lt;</span>n<span class="sym">;</span> d<span class="sym">++)
</span><span class="line">   23 </span><span class="sym"> </span>               <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> e<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> e<span class="sym">&lt;</span>n<span class="sym">;</span> e<span class="sym">++)
</span><span class="line">   24 </span><span class="sym"> </span>                  <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> f<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> f<span class="sym">&lt;</span>n<span class="sym">;</span> f<span class="sym">++)</span> count<span class="sym">++;
</span><span class="line">   25 </span><span class="sym"> 
</span><span class="line">   26 </span><span class="sym"> </span>   println<span class="sym">(</span>count<span class="sym">);
</span><span class="line">   27 </span><span class="sym">  }</span> 
