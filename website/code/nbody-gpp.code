<span class="slc">// The Great Computer Language Shootout
</span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="slc">//
</span><span class="slc">// contributed by Mark C. Lewis
</span>
<span class="dir">#include &lt;cmath&gt;
</span><span class="dir">#include &lt;cstdio&gt;
</span><span class="dir">#include &lt;cstdlib&gt;
</span>
<span class="kwc">class</span> Body <span class="sym">{
</span>	<span class="kwc">public</span><span class="sym">:
</span>		<span class="kwb">static const double</span> PI <span class="sym">=</span> <span class="num">3.141592653589793</span><span class="sym">;
</span>		<span class="kwb">static const double</span> SOLAR_MASS <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> PI <span class="sym">*</span> PI<span class="sym">;
</span>		<span class="kwb">static const double</span> DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span><span class="sym">;

</span>		<span class="kwb">double</span> x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">,</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> mass<span class="sym">;

</span>		Body<span class="sym">():</span>x<span class="sym">(</span><span class="num">0.0</span><span class="sym">),</span>y<span class="sym">(</span><span class="num">0.0</span><span class="sym">),</span>z<span class="sym">(</span><span class="num">0.0</span><span class="sym">),</span>vx<span class="sym">(</span><span class="num">0.0</span><span class="sym">),</span>vy<span class="sym">(</span><span class="num">0.0</span><span class="sym">),</span>vz<span class="sym">(</span><span class="num">0.0</span><span class="sym">),</span>mass<span class="sym">(</span><span class="num">0.0</span><span class="sym">){}

</span>		<span class="kwb">static</span> Body planetJupiter<span class="sym">(){
</span>		   Body p<span class="sym">;
</span>		   p<span class="sym">.</span>x <span class="sym">=</span> <span class="num">4.84143144246472090e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>		   p<span class="sym">.</span>y <span class="sym">= -</span><span class="num">1.16032004402742839e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>		   p<span class="sym">.</span>z <span class="sym">= -</span><span class="num">1.03622044471123109e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>vx <span class="sym">=</span> <span class="num">1.66007664274403694e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">7.69901118419740425e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vz <span class="sym">= -</span><span class="num">6.90460016972063023e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">9.54791938424326609e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;
</span>		   <span class="kwa">return</span> p<span class="sym">;
		}

</span>		<span class="kwb">static</span> Body planetSaturn<span class="sym">(){
</span>		   Body p<span class="sym">;
</span>		   p<span class="sym">.</span>x <span class="sym">=</span> <span class="num">8.34336671824457987e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>		   p<span class="sym">.</span>y <span class="sym">=</span> <span class="num">4.12479856412430479e</span><span class="sym">+</span><span class="num">00</span><span class="sym">;
</span>		   p<span class="sym">.</span>z <span class="sym">= -</span><span class="num">4.03523417114321381e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>vx <span class="sym">= -</span><span class="num">2.76742510726862411e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">4.99852801234917238e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vz <span class="sym">=</span> <span class="num">2.30417297573763929e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">2.85885980666130812e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;
</span>		   <span class="kwa">return</span> p<span class="sym">;
		}

</span>		<span class="kwb">static</span> Body planetUranus<span class="sym">(){
</span>		   Body p<span class="sym">;
</span>		   p<span class="sym">.</span>x <span class="sym">=</span> <span class="num">1.28943695621391310e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>y <span class="sym">= -</span><span class="num">1.51111514016986312e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>z <span class="sym">= -</span><span class="num">2.23307578892655734e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>vx <span class="sym">=</span> <span class="num">2.96460137564761618e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">2.37847173959480950e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vz <span class="sym">= -</span><span class="num">2.96589568540237556e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">4.36624404335156298e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;
</span>		   <span class="kwa">return</span> p<span class="sym">;
		}

</span>		<span class="kwb">static</span> Body planetNeptune<span class="sym">(){
</span>		   Body p<span class="sym">;
</span>		   p<span class="sym">.</span>x <span class="sym">=</span> <span class="num">1.53796971148509165e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>y <span class="sym">= -</span><span class="num">2.59193146099879641e</span><span class="sym">+</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>z <span class="sym">=</span> <span class="num">1.79258772950371181e</span><span class="sym">-</span><span class="num">01</span><span class="sym">;
</span>		   p<span class="sym">.</span>vx <span class="sym">=</span> <span class="num">2.68067772490389322e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vy <span class="sym">=</span> <span class="num">1.62824170038242295e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>vz <span class="sym">= -</span><span class="num">9.51592254519715870e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">;
</span>		   p<span class="sym">.</span>mass <span class="sym">=</span> <span class="num">5.15138902046611451e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">;
</span>		   <span class="kwa">return</span> p<span class="sym">;
		}

</span>		<span class="kwb">static</span> Body centralBody<span class="sym">(){
</span>		   Body p<span class="sym">;
</span>		   p<span class="sym">.</span>mass <span class="sym">=</span> SOLAR_MASS<span class="sym">;
</span>		   <span class="kwa">return</span> p<span class="sym">;
		}

</span>		<span class="kwb">void</span> momentum<span class="sym">(</span><span class="kwb">double</span> px<span class="sym">,</span> <span class="kwb">double</span> py<span class="sym">){
</span>		   vx <span class="sym">= -</span>px <span class="sym">/</span> SOLAR_MASS<span class="sym">;
</span>		   vy <span class="sym">= -</span>py <span class="sym">/</span> SOLAR_MASS<span class="sym">;
		}
};

</span><span class="kwc">class</span> NBodySystem <span class="sym">{
</span>	<span class="kwc">private</span><span class="sym">:
</span>		<span class="kwb">int</span> numBodies<span class="sym">;
</span>		Body bodies<span class="sym">[</span><span class="num">5</span><span class="sym">];

</span>	<span class="kwc">public</span><span class="sym">:
</span>		NBodySystem<span class="sym">():</span>numBodies<span class="sym">(</span><span class="num">5</span><span class="sym">) {
</span>			bodies<span class="sym">[</span><span class="num">0</span><span class="sym">] =</span> Body<span class="sym">::</span>centralBody<span class="sym">();
</span>			bodies<span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> Body<span class="sym">::</span>planetJupiter<span class="sym">();
</span>			bodies<span class="sym">[</span><span class="num">2</span><span class="sym">] =</span> Body<span class="sym">::</span>planetSaturn<span class="sym">();
</span>			bodies<span class="sym">[</span><span class="num">3</span><span class="sym">] =</span> Body<span class="sym">::</span>planetUranus<span class="sym">();
</span>			bodies<span class="sym">[</span><span class="num">4</span><span class="sym">] =</span> Body<span class="sym">::</span>planetNeptune<span class="sym">();

</span>			<span class="kwb">double</span> px <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>			<span class="kwb">double</span> py <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>			<span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> numBodies<span class="sym">; ++</span>i<span class="sym">) {
</span>				px <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass<span class="sym">;
</span>				py <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass<span class="sym">;
			}
</span>			bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>momentum<span class="sym">(</span>px<span class="sym">,</span>py<span class="sym">);
		}


</span>		<span class="kwb">double</span> energy<span class="sym">(){
</span>			<span class="kwb">double</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">;
</span>			<span class="kwb">double</span> e <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;

</span>			<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> numBodies<span class="sym">; ++</span>i<span class="sym">) {
</span>				e <span class="sym">+=</span> <span class="num">0.5</span> <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*
				   (</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx
				   <span class="sym">+</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy
				   <span class="sym">+</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vz <span class="sym">);

</span>				<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> numBodies<span class="sym">; ++</span>j<span class="sym">) {
</span>					dx <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>x <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>x<span class="sym">;
</span>					dy <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>y <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>y<span class="sym">;
</span>					dz <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>z <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>z<span class="sym">;

</span>					distance <span class="sym">=</span> std<span class="sym">::</span>sqrt<span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);
</span>					e <span class="sym">-= (</span>bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass<span class="sym">) /</span> distance<span class="sym">;
				}
			}
</span>			<span class="kwa">return</span> e<span class="sym">;
		}

</span>		<span class="kwb">void</span> advance<span class="sym">(</span><span class="kwb">double</span> dt<span class="sym">) {
</span>		   <span class="kwb">double</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">,</span> mag<span class="sym">;

</span>			<span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> numBodies<span class="sym">; ++</span>i<span class="sym">) {
</span>				<span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> numBodies<span class="sym">; ++</span>j<span class="sym">) {

</span>					dx <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>x <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>x<span class="sym">;
</span>					dy <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>y <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>y<span class="sym">;
</span>					dz <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>z <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>z<span class="sym">;

</span>					distance <span class="sym">=</span> std<span class="sym">::</span>sqrt<span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);
</span>					mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">);

</span>					bodies<span class="sym">[</span>i<span class="sym">].</span>vx <span class="sym">-=</span> dx <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>					bodies<span class="sym">[</span>i<span class="sym">].</span>vy <span class="sym">-=</span> dy <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>					bodies<span class="sym">[</span>i<span class="sym">].</span>vz <span class="sym">-=</span> dz <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;

</span>					bodies<span class="sym">[</span>j<span class="sym">].</span>vx <span class="sym">+=</span> dx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>					bodies<span class="sym">[</span>j<span class="sym">].</span>vy <span class="sym">+=</span> dy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>					bodies<span class="sym">[</span>j<span class="sym">].</span>vz <span class="sym">+=</span> dz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;
				}
			}

</span>			<span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> numBodies<span class="sym">; ++</span>i<span class="sym">) {
</span>				bodies<span class="sym">[</span>i<span class="sym">].</span>x <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx<span class="sym">;
</span>				bodies<span class="sym">[</span>i<span class="sym">].</span>y <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy<span class="sym">;
</span>				bodies<span class="sym">[</span>i<span class="sym">].</span>z <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vz<span class="sym">;
			}
		}
};


</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span><span class="kwb">char</span> <span class="sym">**</span>argv<span class="sym">) {
</span>   <span class="kwb">int</span> n <span class="sym">=</span> std<span class="sym">::</span>atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);

</span>	NBodySystem solarSystem<span class="sym">;

</span>	std<span class="sym">::</span>printf<span class="sym">(</span><span class="str">&quot;%e</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> solarSystem<span class="sym">.</span>energy<span class="sym">() );
</span>	<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">; ++</span>i<span class="sym">) {
</span>	   solarSystem<span class="sym">.</span>advance<span class="sym">(</span><span class="num">0.01</span><span class="sym">);
	}
</span>	std<span class="sym">::</span>printf<span class="sym">(</span><span class="str">&quot;%e</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> solarSystem<span class="sym">.</span>energy<span class="sym">() );

</span>	<span class="kwa">return</span> <span class="num">0</span><span class="sym">;
}
</span>
