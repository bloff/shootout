<span class="com">/*
 * The Great Computer Language Shootout
 * http://shootout.alioth.debian.org/
 *
 * contributed by Christoph Bauer
 *
 * C --&gt; C++ mods by David McCombs
 */</span>

<span class="dir">#include &lt;cmath&gt;
</span><span class="dir">#include &lt;cstdio&gt;
</span><span class="dir">#include &lt;cstdlib&gt;
</span><span class="dir">#include &lt;iostream&gt;
</span><span class="dir">#include &lt;iomanip&gt;
</span><span class="kwa">using namespace</span> std<span class="sym">;

</span><span class="dir">#define pi 3.141592653589793
</span><span class="dir">#define solar_mass (4 * pi * pi)
</span><span class="dir">#define days_per_year 365.24
</span><span class="dir">#define NBODIES 5
</span>
<span class="kwc">class</span> planet <span class="sym">{
</span><span class="kwc">public</span><span class="sym">:
</span>  <span class="kwb">double</span> x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">;
</span>  <span class="kwb">double</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">;
</span>  <span class="kwb">double</span> mass<span class="sym">;
</span>  planet<span class="sym">(){;}
</span>  <span class="kwb">void</span> set<span class="sym">(</span> <span class="kwb">double</span> x<span class="sym">,</span> <span class="kwb">double</span> y<span class="sym">,</span> <span class="kwb">double</span> z<span class="sym">,</span> <span class="kwb">double</span> vx<span class="sym">,</span> <span class="kwb">double</span> vy<span class="sym">,</span><span class="kwb">double</span> vz<span class="sym">,</span> <span class="kwb">double</span> mass <span class="sym">)
  {
</span>    <span class="kwa">this</span><span class="sym">-&gt;</span>x<span class="sym">=</span>x<span class="sym">;
</span>    <span class="kwa">this</span><span class="sym">-&gt;</span>y<span class="sym">=</span>y<span class="sym">;
</span>    <span class="kwa">this</span><span class="sym">-&gt;</span>z<span class="sym">=</span>z<span class="sym">;
</span>    <span class="kwa">this</span><span class="sym">-&gt;</span>vx<span class="sym">=</span>vx<span class="sym">;
</span>    <span class="kwa">this</span><span class="sym">-&gt;</span>vy<span class="sym">=</span>vy<span class="sym">;
</span>    <span class="kwa">this</span><span class="sym">-&gt;</span>vz<span class="sym">=</span>vz<span class="sym">;
</span>    <span class="kwa">this</span><span class="sym">-&gt;</span>mass<span class="sym">=</span>mass<span class="sym">;
  }
  ~</span>planet<span class="sym">(){;}
};

</span><span class="kwc">class</span> theBodies <span class="sym">{
</span><span class="kwc">public</span><span class="sym">:
</span>  <span class="kwb">const int</span> nbodies<span class="sym">;
</span>  planet bodies<span class="sym">[</span>NBODIES<span class="sym">];
</span>  theBodies<span class="sym">():</span>nbodies<span class="sym">(</span>NBODIES<span class="sym">)
  {
</span>    bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>set<span class="sym">(</span>               <span class="slc">// sun
</span>      <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> solar_mass <span class="sym">);
</span>    bodies<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>set<span class="sym">(</span>                <span class="slc">// jupiter
</span>      <span class="num">4.84143144246472090e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
      -</span><span class="num">1.16032004402742839e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
      -</span><span class="num">1.03622044471123109e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
</span>      <span class="num">1.66007664274403694e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">7.69901118419740425e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
      -</span><span class="num">6.90460016972063023e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">9.54791938424326609e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> solar_mass
    <span class="sym">);
</span>    bodies<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>set<span class="sym">(</span>                <span class="slc">// saturn
</span>      <span class="num">8.34336671824457987e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
</span>      <span class="num">4.12479856412430479e</span><span class="sym">+</span><span class="num">00</span><span class="sym">,
      -</span><span class="num">4.03523417114321381e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
      -</span><span class="num">2.76742510726862411e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">4.99852801234917238e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">2.30417297573763929e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">2.85885980666130812e</span><span class="sym">-</span><span class="num">04</span> <span class="sym">*</span> solar_mass
    <span class="sym">);
</span>    bodies<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>set<span class="sym">(</span>                <span class="slc">// uranus
</span>      <span class="num">1.28943695621391310e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
      -</span><span class="num">1.51111514016986312e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
      -</span><span class="num">2.23307578892655734e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
</span>      <span class="num">2.96460137564761618e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">2.37847173959480950e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
      -</span><span class="num">2.96589568540237556e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">4.36624404335156298e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> solar_mass
    <span class="sym">);
</span>    bodies<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>set<span class="sym">(</span>                <span class="slc">// neptune
</span>      <span class="num">1.53796971148509165e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
      -</span><span class="num">2.59193146099879641e</span><span class="sym">+</span><span class="num">01</span><span class="sym">,
</span>      <span class="num">1.79258772950371181e</span><span class="sym">-</span><span class="num">01</span><span class="sym">,
</span>      <span class="num">2.68067772490389322e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">1.62824170038242295e</span><span class="sym">-</span><span class="num">03</span> <span class="sym">*</span> days_per_year<span class="sym">,
      -</span><span class="num">9.51592254519715870e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> days_per_year<span class="sym">,
</span>      <span class="num">5.15138902046611451e</span><span class="sym">-</span><span class="num">05</span> <span class="sym">*</span> solar_mass
    <span class="sym">);
  }
  ~</span>theBodies<span class="sym">(){;}

</span>  <span class="kwb">void</span> advance<span class="sym">(</span> <span class="kwb">double</span> dt<span class="sym">)
  {
</span>    <span class="kwb">int</span> i<span class="sym">,</span> j<span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> nbodies<span class="sym">;</span> i<span class="sym">++) {
</span>      planet <span class="sym">&amp;</span> b <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">];
</span>      <span class="kwa">for</span> <span class="sym">(</span>j <span class="sym">=</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> nbodies<span class="sym">;</span> j<span class="sym">++) {
</span>        planet <span class="sym">&amp;</span> b2 <span class="sym">=</span> bodies<span class="sym">[</span>j<span class="sym">];
</span>        <span class="kwb">double</span> dx <span class="sym">=</span> b<span class="sym">.</span>x <span class="sym">-</span> b2<span class="sym">.</span>x<span class="sym">;
</span>        <span class="kwb">double</span> dy <span class="sym">=</span> b<span class="sym">.</span>y <span class="sym">-</span> b2<span class="sym">.</span>y<span class="sym">;
</span>        <span class="kwb">double</span> dz <span class="sym">=</span> b<span class="sym">.</span>z <span class="sym">-</span> b2<span class="sym">.</span>z<span class="sym">;
</span>        <span class="kwb">double</span> distance <span class="sym">=</span> sqrt<span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">);
</span>        <span class="kwb">double</span> mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">);
</span>        b<span class="sym">.</span>vx <span class="sym">-=</span> dx <span class="sym">*</span> b2<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>        b<span class="sym">.</span>vy <span class="sym">-=</span> dy <span class="sym">*</span> b2<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>        b<span class="sym">.</span>vz <span class="sym">-=</span> dz <span class="sym">*</span> b2<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>        b2<span class="sym">.</span>vx <span class="sym">+=</span> dx <span class="sym">*</span> b<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>        b2<span class="sym">.</span>vy <span class="sym">+=</span> dy <span class="sym">*</span> b<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;
</span>        b2<span class="sym">.</span>vz <span class="sym">+=</span> dz <span class="sym">*</span> b<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;
      }
    }
</span>    <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> nbodies<span class="sym">;</span> i<span class="sym">++) {
</span>      planet <span class="sym">&amp;</span> b <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">];
</span>      b<span class="sym">.</span>x <span class="sym">+=</span> dt <span class="sym">*</span> b<span class="sym">.</span>vx<span class="sym">;
</span>      b<span class="sym">.</span>y <span class="sym">+=</span> dt <span class="sym">*</span> b<span class="sym">.</span>vy<span class="sym">;
</span>      b<span class="sym">.</span>z <span class="sym">+=</span> dt <span class="sym">*</span> b<span class="sym">.</span>vz<span class="sym">;
    }
  }
</span>  <span class="kwb">double</span> energy<span class="sym">(</span><span class="kwb">void</span><span class="sym">)
  {
</span>    <span class="kwb">double</span> e<span class="sym">;
</span>    <span class="kwb">int</span> i<span class="sym">,</span> j<span class="sym">;
</span>    e <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> nbodies<span class="sym">;</span> i<span class="sym">++) {
</span>      planet <span class="sym">&amp;</span> b <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">];
</span>      e <span class="sym">+=</span> <span class="num">0.5</span> <span class="sym">*</span> b<span class="sym">.</span>mass <span class="sym">* (</span>b<span class="sym">.</span>vx <span class="sym">*</span> b<span class="sym">.</span>vx <span class="sym">+</span> b<span class="sym">.</span>vy <span class="sym">*</span> b<span class="sym">.</span>vy <span class="sym">+</span> b<span class="sym">.</span>vz <span class="sym">*</span> b<span class="sym">.</span>vz<span class="sym">);
</span>      <span class="kwa">for</span> <span class="sym">(</span>j <span class="sym">=</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> nbodies<span class="sym">;</span> j<span class="sym">++) {
</span>        planet <span class="sym">&amp;</span> b2 <span class="sym">=</span> bodies<span class="sym">[</span>j<span class="sym">];
</span>        <span class="kwb">double</span> dx <span class="sym">=</span> b<span class="sym">.</span>x <span class="sym">-</span> b2<span class="sym">.</span>x<span class="sym">;
</span>        <span class="kwb">double</span> dy <span class="sym">=</span> b<span class="sym">.</span>y <span class="sym">-</span> b2<span class="sym">.</span>y<span class="sym">;
</span>        <span class="kwb">double</span> dz <span class="sym">=</span> b<span class="sym">.</span>z <span class="sym">-</span> b2<span class="sym">.</span>z<span class="sym">;
</span>        <span class="kwb">double</span> distance <span class="sym">=</span> sqrt<span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">);
</span>        e <span class="sym">-= (</span>b<span class="sym">.</span>mass <span class="sym">*</span> b2<span class="sym">.</span>mass<span class="sym">) /</span> distance<span class="sym">;
      }
    }
</span>    <span class="kwa">return</span> e<span class="sym">;
  }
</span>  <span class="kwb">void</span> offset_momentum<span class="sym">(</span><span class="kwb">void</span><span class="sym">)
  {
</span>    <span class="kwb">double</span> px <span class="sym">=</span> <span class="num">0.0</span><span class="sym">,</span> py <span class="sym">=</span> <span class="num">0.0</span><span class="sym">,</span> pz <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;
</span>    <span class="kwb">int</span> i<span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> nbodies<span class="sym">;</span> i<span class="sym">++) {
</span>      px <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass<span class="sym">;
</span>      py <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass<span class="sym">;
</span>      pz <span class="sym">+=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass<span class="sym">;
    }
</span>    bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>vx <span class="sym">= -</span> px <span class="sym">/</span> solar_mass<span class="sym">;
</span>    bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>vy <span class="sym">= -</span> py <span class="sym">/</span> solar_mass<span class="sym">;
</span>    bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>vz <span class="sym">= -</span> pz <span class="sym">/</span> solar_mass<span class="sym">;
  }
};

</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">**</span> argv<span class="sym">)
{
</span>  <span class="kwb">int</span> n <span class="sym">=</span> atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);
</span>  <span class="kwb">int</span> i<span class="sym">;
</span>  theBodies bodies<span class="sym">;
</span>  bodies<span class="sym">.</span>offset_momentum<span class="sym">();

</span>  cout <span class="sym">&lt;&lt;</span> setprecision<span class="sym">(</span><span class="num">9</span><span class="sym">) &lt;&lt;</span> setiosflags<span class="sym">(</span>ios_base<span class="sym">::</span>fixed<span class="sym">) &lt;&lt;</span> bodies<span class="sym">.</span>energy<span class="sym">() &lt;&lt;</span> endl<span class="sym">;

</span>  <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span> i <span class="sym">&lt;=</span> n<span class="sym">;</span> i<span class="sym">++)</span> bodies<span class="sym">.</span>advance<span class="sym">(</span><span class="num">0.01</span><span class="sym">);

</span>  cout <span class="sym">&lt;&lt;</span> bodies<span class="sym">.</span>energy<span class="sym">() &lt;&lt;</span> endl<span class="sym">;

</span>  <span class="kwa">return</span> <span class="num">0</span><span class="sym">;
}</span>
