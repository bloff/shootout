<span class="kwb">module</span><span class="sym">:</span> nestedloop

<span class="kwa">begin
  let</span> arg <span class="sym">=</span> application<span class="sym">-</span>arguments<span class="sym">()[</span><span class="num">0</span><span class="sym">]</span>.string<span class="sym">-</span><span class="kwa">to</span><span class="sym">-</span>integer<span class="sym">;
</span>  <span class="kwa">let</span> x <span class="sym">::</span> <span class="kwa">&lt;integer&gt;</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;

</span>  <span class="kwa">for</span> <span class="sym">(</span>a <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> arg<span class="sym">)
</span>    <span class="kwa">for</span> <span class="sym">(</span>b <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> arg<span class="sym">)
</span>      <span class="kwa">for</span> <span class="sym">(</span>c <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> arg<span class="sym">)
</span>        <span class="kwa">for</span> <span class="sym">(</span>d <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> arg<span class="sym">)
</span>	  <span class="kwa">for</span> <span class="sym">(</span>e <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> arg<span class="sym">)
</span>	    <span class="kwa">for</span> <span class="sym">(</span>f <span class="kwa">from</span> <span class="num">0</span> <span class="kwa">below</span> arg<span class="sym">)
</span>	      x <span class="sym">:=</span> x <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span>	    <span class="kwa">end for</span><span class="sym">;
</span>	  <span class="kwa">end for</span><span class="sym">;
</span>	<span class="kwa">end for</span><span class="sym">;
</span>      <span class="kwa">end for</span><span class="sym">;
</span>    <span class="kwa">end for</span><span class="sym">;
</span>  <span class="kwa">end for</span><span class="sym">;

</span>  format<span class="sym">-</span>out<span class="sym">(</span><span class="str">&quot;%=</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> x<span class="sym">);
</span><span class="kwa">end</span><span class="sym">;
</span>
