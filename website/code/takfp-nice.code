<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy

To compile:
   nicec --sourcepath=.. -d=. -a takfp.jar takfp

To run:
   java -jar takfp.jar 11
*/</span>


<span class="kwa">import</span> ackermann<span class="sym">;</span> <span class="slc">// reuse toSinglePositiveInt
</span>
<span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span>   <span class="kwa">let</span> n <span class="sym">=</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">);
</span>   println<span class="sym">(</span> Tak<span class="sym">(</span>n<span class="sym">*</span><span class="num">3.0f</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">2.0f</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">1.0f</span><span class="sym">) );
}


</span><span class="kwb">float</span> Tak <span class="sym">(</span><span class="kwb">float</span> x<span class="sym">,</span> <span class="kwb">float</span> y<span class="sym">,</span> <span class="kwb">float</span> z<span class="sym">) {
</span>    <span class="kwa">if</span> <span class="sym">(</span>y <span class="sym">&gt;=</span> x<span class="sym">)</span> <span class="kwa">return</span> z<span class="sym">;
</span>    <span class="kwa">return</span> Tak<span class="sym">(</span>Tak<span class="sym">(</span>x<span class="num">-1.0f</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> Tak<span class="sym">(</span>y<span class="num">-1.0f</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> Tak<span class="sym">(</span>z<span class="num">-1.0f</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">));
}

</span><span class="com">/*
 * vim: ts=4 ft=nice
 */</span>
