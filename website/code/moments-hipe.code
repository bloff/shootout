<span class="slc">%% The Great Computer Language Shootout</span>
<span class="slc">%% contributed by Bengt Kleberg (Erlang Guru)</span>
<span class="slc">%%</span>
<span class="slc">%% http://shootout.alioth.debian.org/</span>
<span class="slc">%%</span>
<span class="slc">%% Usage: start from command line with</span>
<span class="slc">%%     erlc moments.erl</span>
<span class="slc">%%     erl -noinput -s moments main &lt; InputFile</span>

<span class="sym">-</span><span class="kwd">module</span><span class="sym">(</span>moments<span class="sym">)</span>.
<span class="sym">-</span><span class="kwd">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

<span class="slc">%% ignore program argument</span>
<span class="kwd">main</span><span class="sym">() -&gt;</span> <span class="kwd">main</span><span class="sym">([</span><span class="str">'1'</span><span class="sym">])</span>.
<span class="kwd">main</span><span class="sym">(</span>_Args<span class="sym">) -&gt;</span>
    Numbers <span class="sym">=</span> <span class="kwd">input_floats</span><span class="sym">(),</span>
    How_many <span class="sym">=</span> erlang<span class="sym">:</span><span class="kwb">length</span><span class="sym">(</span> Numbers <span class="sym">),</span>
    Median <span class="sym">=</span> <span class="kwd">median</span><span class="sym">(</span> Numbers<span class="sym">,</span> How_many <span class="sym">),</span>
    Mean <span class="sym">=</span> lists<span class="sym">:</span><span class="kwd">sum</span><span class="sym">(</span> Numbers <span class="sym">) /</span> How_many<span class="sym">,</span>
    <span class="sym">{</span>Ad<span class="sym">,</span> Av<span class="sym">,</span> As<span class="sym">,</span> Ak<span class="sym">} =</span> <span class="kwd">various_averages</span><span class="sym">(</span> Numbers<span class="sym">,</span> Mean<span class="sym">),</span>
    Average_deviation <span class="sym">=</span> Ad <span class="sym">/</span> How_many<span class="sym">,</span>
    Variance <span class="sym">=</span> Av <span class="sym">/ (</span>How_many <span class="sym">-</span> <span class="num">1</span><span class="sym">),</span>
    Standard_deviation <span class="sym">=</span> <span class="kwb">math</span><span class="sym">:</span><span class="kwb">sqrt</span><span class="sym">(</span>Variance<span class="sym">),</span>
    Skew <span class="sym">=</span> <span class="kwd">skew</span><span class="sym">(</span>How_many<span class="sym">,</span> As<span class="sym">,</span> Variance<span class="sym">,</span> Standard_deviation<span class="sym">),</span>
    Kurtosis <span class="sym">=</span> <span class="kwd">kurtosis</span><span class="sym">(</span>How_many<span class="sym">,</span> Ak<span class="sym">,</span> Variance<span class="sym">),</span>
    <span class="kwd">print</span><span class="sym">(</span>How_many<span class="sym">,</span> Median<span class="sym">,</span> Mean<span class="sym">,</span> Average_deviation<span class="sym">,</span> Standard_deviation<span class="sym">,</span>
    	Variance<span class="sym">,</span> Skew<span class="sym">,</span> Kurtosis<span class="sym">),</span>
    <span class="kwb">halt</span><span class="sym">()</span>.

<span class="kwd">input_floats</span><span class="sym">() -&gt;</span> <span class="slc">% &quot;list of (double precision floating point) numbers&quot;? no,integers.</span>
    <span class="kwd">input_floats</span><span class="sym">(</span>io<span class="sym">:</span><span class="kwd">fread</span><span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~d&quot;</span><span class="sym">), [])</span>.
<span class="kwd">input_floats</span><span class="sym">(</span>eof<span class="sym">,</span> Numbers<span class="sym">) -&gt;</span>
    Numbers<span class="sym">;</span>
<span class="kwd">input_floats</span><span class="sym">({</span>ok<span class="sym">, [</span>Float<span class="sym">]},</span> Numbers<span class="sym">) -&gt;</span>
    <span class="kwd">input_floats</span><span class="sym">(</span> io<span class="sym">:</span><span class="kwd">fread</span><span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~d&quot;</span><span class="sym">), [</span>Float<span class="sym">|</span>Numbers<span class="sym">] )</span>.

<span class="kwd">various_averages</span><span class="sym">(</span> Numbers<span class="sym">,</span> Mean <span class="sym">) -&gt;</span>
    Fun <span class="sym">=</span> <span class="kwa">fun</span><span class="sym">(</span> Float<span class="sym">, {</span>Ad<span class="sym">,</span> Av<span class="sym">,</span> As<span class="sym">,</span> Ak<span class="sym">} ) -&gt;</span>
            D <span class="sym">=</span> Float <span class="sym">-</span> Mean<span class="sym">,</span>
	    D2 <span class="sym">=</span> D <span class="sym">*</span> D<span class="sym">,</span>
	    <span class="sym">{</span>Ad <span class="sym">+</span> erlang<span class="sym">:</span><span class="kwb">abs</span><span class="sym">(</span>D<span class="sym">),</span> Av <span class="sym">+</span> D2<span class="sym">,</span> As <span class="sym">+ (</span>D2 <span class="sym">*</span> D<span class="sym">),</span> Ak <span class="sym">+ (</span>D2 <span class="sym">*</span> D2<span class="sym">)}</span>
	  <span class="kwa">end</span><span class="sym">,</span>
    lists<span class="sym">:</span><span class="kwd">foldl</span><span class="sym">(</span> Fun<span class="sym">, {</span><span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">},</span> Numbers <span class="sym">)</span>.

<span class="kwd">median</span><span class="sym">(</span>L<span class="sym">,</span> N<span class="sym">) -&gt;</span> <span class="kwd">medianS</span><span class="sym">(</span>lists<span class="sym">:</span><span class="kwd">sort</span><span class="sym">(</span>L<span class="sym">),</span> N<span class="sym">)</span>.

<span class="kwd">medianS</span><span class="sym">(</span>L<span class="sym">,</span> N<span class="sym">) -&gt;</span>
    Mid <span class="sym">= (</span>N div <span class="num">2</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">,</span> <span class="slc">% 1-based list access</span>
    <span class="kwa">case</span> N rem <span class="num">2</span> <span class="kwa">of</span>
        <span class="num">0</span> <span class="sym">-&gt; (</span>lists<span class="sym">:</span><span class="kwd">nth</span><span class="sym">(</span>Mid<span class="sym">,</span> L<span class="sym">) +</span> lists<span class="sym">:</span><span class="kwd">nth</span><span class="sym">(</span>Mid <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> L<span class="sym">)) /</span> <span class="num">2</span><span class="sym">;</span>
        <span class="num">1</span> <span class="sym">-&gt;</span> lists<span class="sym">:</span><span class="kwd">nth</span><span class="sym">(</span>Mid<span class="sym">,</span> L<span class="sym">)</span>
    <span class="kwa">end</span>.

<span class="kwd">skew</span><span class="sym">(</span>N<span class="sym">,</span> As<span class="sym">,</span> V<span class="sym">,</span> SD<span class="sym">)</span> <span class="kwa">when</span> V <span class="sym">&gt;</span> <span class="num">0.0</span> <span class="sym">-&gt;</span> As <span class="sym">/ (</span>N <span class="sym">*</span> V <span class="sym">*</span> SD<span class="sym">);</span>
<span class="kwd">skew</span><span class="sym">(</span>_N<span class="sym">,</span> _As<span class="sym">,</span> _V<span class="sym">,</span> _SD<span class="sym">) -&gt;</span> <span class="num">0</span>.

<span class="kwd">kurtosis</span><span class="sym">(</span>N<span class="sym">,</span> Ak<span class="sym">,</span> V<span class="sym">)</span> <span class="kwa">when</span> V <span class="sym">&gt;</span> <span class="num">0.0</span> <span class="sym">-&gt;</span> Ak <span class="sym">/ (</span>N <span class="sym">*</span> V <span class="sym">*</span> V<span class="sym">) -</span> <span class="num">3</span><span class="sym">;</span>
<span class="kwd">kurtosis</span><span class="sym">(</span>_N<span class="sym">,</span> _Ak<span class="sym">,</span> _V<span class="sym">) -&gt;</span> <span class="num">0</span>.

<span class="kwd">print</span><span class="sym">(</span>How_many<span class="sym">,</span> Median<span class="sym">,</span> Mean<span class="sym">,</span> Average_deviation<span class="sym">,</span> Standard_deviation<span class="sym">,</span>
        Variance<span class="sym">,</span> Skew<span class="sym">,</span> Kurtosis<span class="sym">) -&gt;</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;n:                  ~w~n&quot;</span><span class="sym">, [</span>How_many<span class="sym">]),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;median:             ~f~n&quot;</span><span class="sym">, [</span>Median<span class="sym">]),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;mean:               ~f~n&quot;</span><span class="sym">, [</span>Mean<span class="sym">]),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;average_deviation:  ~f~n&quot;</span><span class="sym">, [</span>Average_deviation<span class="sym">]),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;standard_deviation: ~f~n&quot;</span><span class="sym">, [</span>Standard_deviation<span class="sym">]),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;variance:           ~f~n&quot;</span><span class="sym">, [</span>Variance<span class="sym">]),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;skew:               ~f~n&quot;</span><span class="sym">, [</span>Skew<span class="sym">]),</span>
    io<span class="sym">:</span><span class="kwd">fwrite</span><span class="sym">(</span><span class="str">&quot;kurtosis:           ~f~n&quot;</span><span class="sym">, [</span>Kurtosis<span class="sym">])</span>.
