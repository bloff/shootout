<span class="sym">(</span>defconstant <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+</span> <span class="num">365.24d0</span><span class="sym">)
(</span>defconstant <span class="sym">+</span>solar<span class="sym">-</span>mass<span class="sym">+ (</span>the double<span class="sym">-</span><span class="kwa">float</span> <span class="sym">(*</span> <span class="num">4d0</span> pi pi<span class="sym">)))

(</span>defstruct body
  <span class="sym">(</span>pos <span class="sym">(</span>make<span class="sym">-</span>array <span class="num">3</span> <span class="sym">:</span>element<span class="sym">-</span><span class="kwa">type</span> <span class="str">'double-float) :type (simple-array double-float (3)))
  (vel (make-array 3 :element-type '</span>double<span class="sym">-</span><span class="kwa">float</span><span class="sym">) :</span><span class="kwa">type</span> <span class="sym">(</span>simple<span class="sym">-</span>array double<span class="sym">-</span><span class="kwa">float</span> <span class="sym">(</span><span class="num">3</span><span class="sym">)))
  (</span>mass <span class="num">0.0d0</span> <span class="sym">:</span><span class="kwa">type</span> double<span class="sym">-</span><span class="kwa">float</span><span class="sym">))

(</span><span class="kwa">defun</span> make<span class="sym">-</span>body1 <span class="sym">(</span>x y z vx vy vz m<span class="sym">)
  (</span>let <span class="sym">((</span>b <span class="sym">(</span>make<span class="sym">-</span>body<span class="sym">))
	(</span>pos <span class="sym">(</span>make<span class="sym">-</span>array <span class="num">3</span> <span class="sym">:</span>element<span class="sym">-</span><span class="kwa">type</span> <span class="str">'double-float
 			 :initial-contents (list x y z)))
	(vel (make-array 3 :element-type '</span>double<span class="sym">-</span><span class="kwa">float
 </span>			 <span class="sym">:</span>initial<span class="sym">-</span>contents <span class="sym">(</span><span class="kwa">list</span> vx vy vz<span class="sym">))))
    (</span>setf <span class="sym">(</span>body<span class="sym">-</span>pos b<span class="sym">)</span> pos<span class="sym">)
    (</span>setf <span class="sym">(</span>body<span class="sym">-</span>vel b<span class="sym">)</span> vel<span class="sym">)
    (</span>setf <span class="sym">(</span>body<span class="sym">-</span>mass b<span class="sym">)</span> m<span class="sym">)
</span>    b<span class="sym">))

(</span>defparameter <span class="sym">*</span>jupiter<span class="sym">*
  (</span>make<span class="sym">-</span>body1 <span class="num">4.84143144246472090d0
</span>	     <span class="sym">-</span><span class="num">1.16032004402742839d0
</span>	     <span class="sym">-</span><span class="num">1.03622044471123109d</span><span class="sym">-</span><span class="num">1
</span>	     <span class="sym">(*</span> <span class="num">1.66007664274403694d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
	     (*</span> <span class="num">7.69901118419740425d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
	     (* -</span><span class="num">6.90460016972063023d</span><span class="sym">-</span><span class="num">5</span>  <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
	     (*</span> <span class="num">9.54791938424326609d</span><span class="sym">-</span><span class="num">4</span> <span class="sym">+</span>solar<span class="sym">-</span>mass<span class="sym">+)))

(</span>defparameter <span class="sym">*</span>saturn<span class="sym">*
  (</span>make<span class="sym">-</span>body1 <span class="num">8.34336671824457987d0
    4.12479856412430479d0
</span>    <span class="sym">-</span><span class="num">4.03523417114321381d</span><span class="sym">-</span><span class="num">1
</span>    <span class="sym">(* -</span><span class="num">2.76742510726862411d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (*</span> <span class="num">4.99852801234917238d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (*</span> <span class="num">2.30417297573763929d</span><span class="sym">-</span><span class="num">5</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (*</span> <span class="num">2.85885980666130812d</span><span class="sym">-</span><span class="num">4</span> <span class="sym">+</span>solar<span class="sym">-</span>mass<span class="sym">+)))

(</span>defparameter <span class="sym">*</span>uranus<span class="sym">*
  (</span>make<span class="sym">-</span>body1     <span class="num">1.28943695621391310d1
</span>    <span class="sym">-</span><span class="num">1.51111514016986312d1
</span>    <span class="sym">-</span><span class="num">2.23307578892655734d</span><span class="sym">-</span><span class="num">1
</span>    <span class="sym">(*</span> <span class="num">2.96460137564761618d</span><span class="sym">-</span><span class="num">03</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (*</span> <span class="num">2.37847173959480950d</span><span class="sym">-</span><span class="num">03</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (* -</span><span class="num">2.96589568540237556d</span><span class="sym">-</span><span class="num">05</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (*</span> <span class="num">4.36624404335156298d</span><span class="sym">-</span><span class="num">05</span> <span class="sym">+</span>solar<span class="sym">-</span>mass<span class="sym">+)))

(</span>defparameter <span class="sym">*</span>neptune<span class="sym">*
  (</span>make<span class="sym">-</span>body1  <span class="num">1.53796971148509165d</span><span class="sym">+</span><span class="num">01
</span>    <span class="sym">-</span><span class="num">2.59193146099879641d</span><span class="sym">+</span><span class="num">01
    1.79258772950371181d</span><span class="sym">-</span><span class="num">01
</span>    <span class="sym">(*</span> <span class="num">2.68067772490389322d</span><span class="sym">-</span><span class="num">03</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (*</span> <span class="num">1.62824170038242295d</span><span class="sym">-</span><span class="num">03</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (* -</span><span class="num">9.51592254519715870d</span><span class="sym">-</span><span class="num">05</span> <span class="sym">+</span>days<span class="sym">-</span>per<span class="sym">-</span>year<span class="sym">+)
    (*</span> <span class="num">5.15138902046611451d</span><span class="sym">-</span><span class="num">05</span> <span class="sym">+</span>solar<span class="sym">-</span>mass<span class="sym">+)))

(</span>defparameter <span class="sym">*</span>sun<span class="sym">*
  (</span>make<span class="sym">-</span>body1 <span class="num">0.0d0 0.0d0 0.0d0 0.0d0 0.0d0 0.0d0</span> <span class="sym">+</span>solar<span class="sym">-</span>mass<span class="sym">+))

(</span><span class="kwa">defun</span> applyforces <span class="sym">(</span>x y dt<span class="sym">)
  (</span>declare <span class="sym">(</span>optimize speed<span class="sym">))
  (</span>declare <span class="sym">(</span><span class="kwa">type</span> body x y<span class="sym">)
	   (</span><span class="kwa">type</span> double<span class="sym">-</span><span class="kwa">float</span> dt<span class="sym">))
  (</span>let<span class="sym">* ((</span>dx <span class="sym">(- (</span>aref <span class="sym">(</span>body<span class="sym">-</span>pos x<span class="sym">)</span> <span class="num">0</span><span class="sym">) (</span>aref <span class="sym">(</span>body<span class="sym">-</span>pos y<span class="sym">)</span> <span class="num">0</span><span class="sym">)))
	 (</span>dy <span class="sym">(- (</span>aref <span class="sym">(</span>body<span class="sym">-</span>pos x<span class="sym">)</span> <span class="num">1</span><span class="sym">) (</span>aref <span class="sym">(</span>body<span class="sym">-</span>pos y<span class="sym">)</span> <span class="num">1</span><span class="sym">)))
	 (</span>dz <span class="sym">(- (</span>aref <span class="sym">(</span>body<span class="sym">-</span>pos x<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>aref <span class="sym">(</span>body<span class="sym">-</span>pos y<span class="sym">)</span> <span class="num">2</span><span class="sym">)))
	 (</span><span class="kwa">distance</span> <span class="sym">(</span><span class="kwa">sqrt</span> <span class="sym">(</span>the <span class="sym">(</span>double<span class="sym">-</span><span class="kwa">float</span> <span class="num">0.0d0</span><span class="sym">) (+ (*</span> dx dx<span class="sym">) (*</span> dy dy<span class="sym">) (*</span> dz dz<span class="sym">)))))
	 (</span>mag <span class="sym">(/</span> dt <span class="kwa">distance distance distance</span><span class="sym">)))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel x<span class="sym">)</span> <span class="num">0</span><span class="sym">) (- (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel x<span class="sym">)</span> <span class="num">0</span><span class="sym">) (*</span> dx <span class="sym">(</span>body<span class="sym">-</span>mass y<span class="sym">)</span> mag<span class="sym">)))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel x<span class="sym">)</span> <span class="num">1</span><span class="sym">) (- (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel x<span class="sym">)</span> <span class="num">1</span><span class="sym">) (*</span> dy <span class="sym">(</span>body<span class="sym">-</span>mass y<span class="sym">)</span> mag<span class="sym">)))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel x<span class="sym">)</span> <span class="num">2</span><span class="sym">) (- (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel x<span class="sym">)</span> <span class="num">2</span><span class="sym">) (*</span> dz <span class="sym">(</span>body<span class="sym">-</span>mass y<span class="sym">)</span> mag<span class="sym">)))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel y<span class="sym">)</span> <span class="num">0</span><span class="sym">) (+ (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel y<span class="sym">)</span> <span class="num">0</span><span class="sym">) (*</span> dx <span class="sym">(</span>body<span class="sym">-</span>mass x<span class="sym">)</span> mag<span class="sym">)))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel y<span class="sym">)</span> <span class="num">1</span><span class="sym">) (+ (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel y<span class="sym">)</span> <span class="num">1</span><span class="sym">) (*</span> dy <span class="sym">(</span>body<span class="sym">-</span>mass x<span class="sym">)</span> mag<span class="sym">)))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel y<span class="sym">)</span> <span class="num">2</span><span class="sym">) (+ (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel y<span class="sym">)</span> <span class="num">2</span><span class="sym">) (*</span> dz <span class="sym">(</span>body<span class="sym">-</span>mass x<span class="sym">)</span> mag<span class="sym">))))
</span>  nil<span class="sym">)

(</span><span class="kwa">defun</span> move <span class="sym">(</span>b dt<span class="sym">)
  (</span>declare <span class="sym">(</span><span class="kwa">type</span> body b<span class="sym">)
	   (</span><span class="kwa">type</span> double<span class="sym">-</span><span class="kwa">float</span> dt<span class="sym">))
  (</span>map<span class="sym">-</span>into <span class="sym">(</span>body<span class="sym">-</span>pos b<span class="sym">) (</span><span class="kwa">lambda</span> <span class="sym">(</span>p v<span class="sym">) (+</span> p <span class="sym">(*</span> v dt<span class="sym">))) (</span>body<span class="sym">-</span>pos b<span class="sym">) (</span>body<span class="sym">-</span>vel b<span class="sym">)))

(</span><span class="kwa">defun</span> advance <span class="sym">(</span>system dt<span class="sym">)
  (</span>loop for i from <span class="num">0</span> below <span class="sym">(</span><span class="kwa">length</span> system<span class="sym">)</span> do
       <span class="sym">(</span>loop for j from <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)</span> below <span class="sym">(</span><span class="kwa">length</span> system<span class="sym">)</span> do
	    <span class="sym">(</span>applyforces <span class="sym">(</span>aref system i<span class="sym">) (</span>aref system j<span class="sym">)</span> dt<span class="sym">)))
  (</span>loop for i across system do
       <span class="sym">(</span>move i dt<span class="sym">)))

(</span><span class="kwa">defun</span> energy <span class="sym">(</span>system<span class="sym">)
  (</span>let <span class="sym">((</span>e <span class="num">0.0d0</span><span class="sym">))
    (</span>loop for i from <span class="num">0</span> below <span class="sym">(</span>array<span class="sym">-</span>dimension system <span class="num">0</span><span class="sym">)</span> do
	  <span class="sym">(</span>let <span class="sym">((</span>b <span class="sym">(</span>aref system i<span class="sym">)))
	    (</span>setf e <span class="sym">(+</span> e <span class="sym">(*</span> <span class="num">0.5d0</span> <span class="sym">(</span>body<span class="sym">-</span>mass b<span class="sym">) (</span>loop for v across <span class="sym">(</span>body<span class="sym">-</span>vel b<span class="sym">)</span> sum <span class="sym">(*</span> v v<span class="sym">)))))
	    (</span>loop for j from <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)</span> below <span class="sym">(</span>array<span class="sym">-</span>dimension system <span class="num">0</span><span class="sym">)</span> do
		  <span class="sym">(</span>let<span class="sym">* ((</span>b2 <span class="sym">(</span>aref system j<span class="sym">))
			 (</span>dist <span class="sym">(</span><span class="kwa">sqrt</span> <span class="sym">(</span>loop for b across <span class="sym">(</span>body<span class="sym">-</span>pos b<span class="sym">)</span> <span class="kwa">and
</span>					   b2 across <span class="sym">(</span>body<span class="sym">-</span>pos b2<span class="sym">)</span> sum <span class="sym">(* (-</span> b b2<span class="sym">) (-</span> b b2<span class="sym">))))))
		    (</span>setf e <span class="sym">(-</span> e <span class="sym">(/ (* (</span>body<span class="sym">-</span>mass b<span class="sym">) (</span>body<span class="sym">-</span>mass b2<span class="sym">))</span> dist<span class="sym">)))))))
</span>    e<span class="sym">))

(</span><span class="kwa">defun</span> offset<span class="sym">-</span>momentum <span class="sym">(</span>system<span class="sym">)
  (</span>let <span class="sym">((</span>px <span class="num">0.0d0</span><span class="sym">)
	(</span>py <span class="num">0.0d0</span><span class="sym">)
	(</span>pz <span class="num">0.0d0</span><span class="sym">))
    (</span>loop for p across system do
	  <span class="sym">(</span>setf px <span class="sym">(+</span> px <span class="sym">(* (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel p<span class="sym">)</span> <span class="num">0</span><span class="sym">) (</span>body<span class="sym">-</span>mass p<span class="sym">))))
	  (</span>setf py <span class="sym">(+</span> py <span class="sym">(* (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel p<span class="sym">)</span> <span class="num">1</span><span class="sym">) (</span>body<span class="sym">-</span>mass p<span class="sym">))))
	  (</span>setf pz <span class="sym">(+</span> pz <span class="sym">(* (</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel p<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>body<span class="sym">-</span>mass p<span class="sym">)))))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel <span class="sym">(</span>aref system <span class="num">0</span><span class="sym">))</span> <span class="num">0</span><span class="sym">) (/ (-</span> px<span class="sym">) +</span>solar<span class="sym">-</span>mass<span class="sym">+))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel <span class="sym">(</span>aref system <span class="num">0</span><span class="sym">))</span> <span class="num">1</span><span class="sym">) (/ (-</span> py<span class="sym">) +</span>solar<span class="sym">-</span>mass<span class="sym">+))
    (</span>setf <span class="sym">(</span>aref <span class="sym">(</span>body<span class="sym">-</span>vel <span class="sym">(</span>aref system <span class="num">0</span><span class="sym">))</span> <span class="num">2</span><span class="sym">) (/ (-</span> pz<span class="sym">) +</span>solar<span class="sym">-</span>mass<span class="sym">+))))


(</span><span class="kwa">defun</span> nbody <span class="sym">(</span>n<span class="sym">)
  (</span>let <span class="sym">((</span>system <span class="sym">(</span>make<span class="sym">-</span>array <span class="num">5</span> <span class="sym">:</span>element<span class="sym">-</span><span class="kwa">type</span> <span class="str">'body :initial-contents
			    (list *sun* *jupiter* *saturn* *uranus* *neptune*))))
    (offset-momentum system)
    (format t &quot;~,9F~%&quot; (energy system))
    (loop for i from 1 upto n do
	  (advance system 0.01d0))
    (format t &quot;~,9F~%&quot; (energy system))))

(defun main ()
  (let ((n (parse-integer (or (car (last #+sbcl sb-ext:*posix-argv*
                                         #+cmu  extensions:*command-line-strings*
					 #+gcl  si::*command-args*)) &quot;1&quot;))))
    (nbody n)))</span>
