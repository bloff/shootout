<span class="line">    1 </span><span class="slc"># -*- mode: icon -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: sieve-icon.code,v 1.4 2004-11-13 07:43:20 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)
</span><span class="line">    6 </span><span class="sym"></span>    n <span class="sym">:=</span> argv<span class="sym">[</span><span class="num">1</span><span class="sym">] |</span> <span class="num">1
</span><span class="line">    7 </span><span class="num"></span>    <span class="kwa">every</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do</span> count <span class="sym">:=</span> sieve<span class="sym">()
</span><span class="line">    8 </span><span class="sym"></span>    write<span class="sym">(</span><span class="str">&quot;Count: &quot;</span><span class="sym">,</span> count<span class="sym">)
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">end
</span><span class="line">   10 </span><span class="kwa">
</span><span class="line">   11 </span><span class="kwa"></span><span class="slc"># algorithm from a test program that is distributed with
</span><span class="line">   12 </span><span class="slc"></span><span class="slc"># the icon source
</span><span class="line">   13 </span><span class="slc"></span>
<span class="line">   14 </span><span class="kwa">procedure</span> sieve<span class="sym">()
</span><span class="line">   15 </span><span class="sym"></span>   <span class="kwa">local</span> limit<span class="sym">,</span> s<span class="sym">,</span> i
<span class="line">   16 </span>   limit <span class="sym">:=</span> <span class="num">8192
</span><span class="line">   17 </span><span class="num"></span>   s <span class="sym">:=</span> <span class="kwb">set</span><span class="sym">()
</span><span class="line">   18 </span><span class="sym"></span>   <span class="kwa">every</span> insert<span class="sym">(</span>s<span class="sym">,</span><span class="num">1</span> <span class="kwa">to</span> limit<span class="sym">)
</span><span class="line">   19 </span><span class="sym"></span>   <span class="kwa">every</span> member<span class="sym">(</span>s<span class="sym">,</span>i <span class="sym">:=</span> <span class="num">2</span> <span class="kwa">to</span> limit<span class="sym">)</span> <span class="kwa">do
</span><span class="line">   20 </span><span class="kwa">      every</span> delete<span class="sym">(</span>s<span class="sym">,</span>i <span class="sym">+</span> i <span class="kwa">to</span> limit <span class="kwa">by</span> i<span class="sym">)
</span><span class="line">   21 </span><span class="sym"></span>   delete<span class="sym">(</span>s<span class="sym">,</span><span class="num">1</span><span class="sym">)
</span><span class="line">   22 </span><span class="sym"></span>   <span class="kwa">return</span><span class="sym">(*</span>s<span class="sym">);
</span><span class="line">   23 </span><span class="sym"></span><span class="kwa">end</span>
