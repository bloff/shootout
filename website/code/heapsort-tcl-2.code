<span class="slc">#!/usr/bin/tclsh
</span><span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># sped up by Miguel Sofer's function generator
</span><span class="slc"># modified by Daniel South
</span>
<span class="kwa">foreach</span> <span class="sym">{</span>IM IA IC last<span class="sym">} {</span><span class="num">139968 3877 29573 42</span><span class="sym">}</span> <span class="kwa">break

proc</span> make_gen_random <span class="sym">{} {
</span>    <span class="kwa">set</span> params <span class="sym">[</span><span class="kwa">list</span> IM <span class="kwb">$</span><span class="sym">::</span>IM IA <span class="kwb">$</span><span class="sym">::</span>IA IC <span class="kwb">$</span><span class="sym">::</span>IC<span class="sym">]
</span>    <span class="kwa">set</span> body <span class="sym">[</span><span class="kwa">string</span> map <span class="kwb">$params</span> <span class="sym">{
</span>	<span class="kwa">expr</span> <span class="sym">{(</span><span class="kwb">$max</span> <span class="sym">* [</span><span class="kwa">set</span> <span class="sym">::</span>last <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{(</span><span class="kwb">$</span><span class="sym">::</span>last <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">) %</span> IM<span class="sym">}]]) /</span> IM<span class="sym">}}]
</span>    <span class="kwa">proc</span> gen_random <span class="sym">{</span>max<span class="sym">}</span> <span class="kwb">$body
</span><span class="sym">}

</span><span class="kwa">proc</span> heapsort <span class="sym">{</span>n ra_name<span class="sym">} {
</span>    <span class="kwa">upvar</span> <span class="num">1</span> <span class="kwb">$ra_name</span> ra

    <span class="kwa">set</span> l <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{(</span><span class="kwb">$n</span> <span class="sym">&gt;&gt;</span> <span class="num">1</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">}]
</span>    <span class="kwa">while</span> <span class="num">1</span> <span class="sym">{
</span>        <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$l</span> <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">} {
</span>            <span class="kwa">set</span> rra <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$ra</span> <span class="sym">[</span><span class="kwa">incr</span> l <span class="num">-1</span><span class="sym">]]
        }</span> else <span class="sym">{
</span>	    <span class="kwa">set</span> rra <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$ra $n</span><span class="sym">]
</span>	    <span class="kwa">lset</span> ra <span class="kwb">$n</span> <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$ra</span> <span class="num">1</span><span class="sym">]
</span>	    <span class="kwa">if</span> <span class="sym">{[</span><span class="kwa">incr</span> n <span class="num">-1</span><span class="sym">] ==</span> <span class="num">1</span><span class="sym">} {</span><span class="kwa">return</span> <span class="sym">[</span><span class="kwa">lset</span> ra <span class="num">1</span> <span class="kwb">$rra</span><span class="sym">]}
        }
</span>	<span class="kwa">set</span> i <span class="kwb">$l
</span>	<span class="kwa">set</span> j <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$l</span> <span class="sym">&lt;&lt;</span> <span class="num">1</span><span class="sym">}]
</span>        <span class="kwa">while</span> <span class="sym">{</span><span class="kwb">$j</span> <span class="sym">&lt;=</span> <span class="kwb">$n</span><span class="sym">} {
</span>	    <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$j</span> <span class="sym">&lt;</span> <span class="kwb">$n</span> <span class="sym">&amp;&amp; [</span><span class="kwa">lindex</span> <span class="kwb">$ra $j</span><span class="sym">] &lt; [</span><span class="kwa">lindex</span> <span class="kwb">$ra</span> <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$j</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">}]]} {
</span>		<span class="kwa">incr</span> j
	    <span class="sym">}
</span>            <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$rra</span> <span class="sym">&lt; [</span><span class="kwa">lindex</span> <span class="kwb">$ra $j</span><span class="sym">]} {
</span>		<span class="kwa">lset</span> ra <span class="kwb">$i</span> <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$ra $j</span><span class="sym">]
</span>		<span class="kwa">set</span> i <span class="kwb">$j
</span>                <span class="kwa">incr</span> j <span class="kwb">$j
</span>            <span class="sym">}</span> else <span class="sym">{
</span>		<span class="kwa">set</span> j <span class="kwb">$n
</span>		<span class="kwa">incr</span> j
            <span class="sym">}
        }
</span>        <span class="kwa">lset</span> ra <span class="kwb">$i $rra
</span>    <span class="sym">}
}

</span><span class="kwa">proc</span> main <span class="sym">{</span>n<span class="sym">} {
</span>    make_gen_random
    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">1</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;=</span> <span class="kwb">$n</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span><span class="kwa">lappend</span> data <span class="sym">[</span>gen_random <span class="num">1.0</span><span class="sym">]}
</span>    <span class="kwa">incr</span> n <span class="num">-1
</span>    heapsort <span class="kwb">$n</span> data
    <span class="kwa">puts</span> <span class="sym">[</span><span class="kwa">format</span> <span class="str">&quot;%.10f&quot;</span> <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$data $n</span><span class="sym">]]
}

</span><span class="kwa">set</span> N <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]
</span><span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$N</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">} {</span><span class="kwa">set</span> N <span class="num">1</span><span class="sym">}
</span>main <span class="kwb">$N</span>
