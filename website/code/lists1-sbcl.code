<span class="slc">;;; -*- mode: lisp -*-
</span><span class="slc">;;; $Id: lists1-sbcl.code,v 1.6 2005-02-26 08:53:42 bfulgham Exp $
</span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="slc">;;; Multi-lisp modifications by Brent Fulgham
</span>

<span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">()
  (</span>let<span class="sym">* ((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> <span class="sym">(</span><span class="kwa">last</span> #<span class="sym">+</span>sbcl sb<span class="sym">-</span>ext<span class="sym">:*</span>posix<span class="sym">-</span>argv<span class="sym">*
</span>                                          #<span class="sym">+</span>cmu  extensions<span class="sym">:*</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>strings<span class="sym">*))</span> <span class="str">&quot;1&quot;</span><span class="sym">)))
	 (</span>A <span class="str">'())
	 ;; create empty list B
	 (B '</span><span class="sym">())
	 (</span>mid <span class="sym">(/</span> N <span class="num">2</span><span class="sym">))
	 (</span>sum <span class="num">0</span><span class="sym">))

</span>    <span class="slc">;; create list (A) of integers from 1 through N
</span>    <span class="sym">(</span>do <span class="sym">((</span>i N <span class="sym">(-</span> i <span class="num">1</span><span class="sym">)))
	((=</span> i <span class="num">0</span><span class="sym">))
      (</span><span class="kwa">setq</span> A <span class="sym">(</span><span class="kwa">cons</span> i A<span class="sym">)))

</span>    <span class="slc">;; move each individual item from A to B, in a loop, reversing order
</span>    <span class="sym">(</span>do <span class="sym">((</span>empty <span class="sym">(</span><span class="kwa">null</span> A<span class="sym">) (</span><span class="kwa">null</span> A<span class="sym">)))
	(</span>empty<span class="sym">)
      (</span><span class="kwa">setq</span> B <span class="sym">(</span><span class="kwa">cons</span> <span class="sym">(</span><span class="kwa">car</span> A<span class="sym">)</span> B<span class="sym">))
      (</span><span class="kwa">setq</span> A <span class="sym">(</span><span class="kwa">cdr</span> A<span class="sym">)))

</span>    <span class="slc">;; print first 2 elements of B
</span>    <span class="sym">(</span>format t <span class="str">&quot;~a ~a~%&quot;</span> <span class="sym">(</span><span class="kwa">car</span> B<span class="sym">) (</span><span class="kwa">cadr</span> B<span class="sym">))

</span>    <span class="slc">;; reverse B (can be done in place)
</span>    <span class="sym">(</span><span class="kwa">setq</span> B <span class="sym">(</span><span class="kwa">reverse</span> B<span class="sym">))

</span>    <span class="slc">;; is 0 a member of B?
</span>    <span class="sym">(</span>format t <span class="str">&quot;~a~%&quot;</span> <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">member</span> <span class="num">0</span> B<span class="sym">)</span> <span class="str">&quot;true&quot;</span> <span class="str">&quot;false&quot;</span><span class="sym">))

</span>    <span class="slc">;; is N a member of B?
</span>    <span class="sym">(</span>format t <span class="str">&quot;~a~%&quot;</span> <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">member</span> N B<span class="sym">)</span> <span class="str">&quot;true&quot;</span> <span class="str">&quot;false&quot;</span><span class="sym">))

</span>    <span class="slc">;; filter values from B to A that are less than N/2, preserving order
</span>    <span class="sym">(</span>loop for x in B do <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(&lt;</span> x mid<span class="sym">) (</span><span class="kwa">setq</span> A <span class="sym">(</span><span class="kwa">cons</span> x A<span class="sym">))))
    (</span><span class="kwa">setq</span> A <span class="sym">(</span><span class="kwa">reverse</span> A<span class="sym">))

</span>    <span class="slc">;; print first ten items of A
</span>    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">))
	 (</span>x A <span class="sym">(</span><span class="kwa">cdr</span> x<span class="sym">)))
	((</span><span class="kwa">or</span> <span class="sym">(=</span> i <span class="num">10</span><span class="sym">) (</span><span class="kwa">null</span> x<span class="sym">)))
      (</span>format t  <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(&lt;</span> i <span class="num">9</span><span class="sym">)</span> <span class="str">&quot;~a &quot;</span> <span class="str">&quot;~a~%&quot;</span><span class="sym">) (</span><span class="kwa">car</span> x<span class="sym">)))

</span>    <span class="slc">;; print sum of items in A that are less than 1000
</span>    <span class="sym">(</span>loop for x in A do <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(&lt;</span> x <span class="num">1000</span><span class="sym">) (</span><span class="kwa">setq</span> sum <span class="sym">(+</span> x sum<span class="sym">))))
    (</span>format t <span class="str">&quot;~a~%&quot;</span> sum<span class="sym">)

</span>    <span class="slc">;; append B to end of A
</span>    <span class="slc">;(nconc A B)
</span>    <span class="sym">(</span>setf <span class="sym">(</span><span class="kwa">cdr</span> <span class="sym">(</span><span class="kwa">last</span> A<span class="sym">))</span> B<span class="sym">)

</span>    <span class="slc">;; print length of A
</span>    <span class="sym">(</span>format t <span class="str">&quot;~a ~a~%&quot;</span> <span class="sym">(</span><span class="kwa">length</span> A<span class="sym">) (</span><span class="kwa">car</span> <span class="sym">(</span><span class="kwa">last</span> A<span class="sym">)))))
</span>
