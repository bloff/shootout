#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="sym">-</span>e main <span class="sym">-</span>s
<span class="sym">!</span>#

<span class="slc">;;; $Id: hash-guile.code,v 1.8 2005-11-06 23:11:13 bfulgham Exp $</span>
<span class="slc">;;; http://www.bagley.org/~doug/shootout/</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>use<span class="sym">-</span>modules <span class="sym">(</span>ice<span class="sym">-</span><span class="num">9</span> format<span class="sym">))</span>
  <span class="sym">(</span>let<span class="sym">* ((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))</span>
	 <span class="sym">(</span><span class="kwa">last</span> <span class="sym">(-</span> n <span class="num">1</span><span class="sym">))</span>
	 <span class="sym">(</span>c <span class="num">0</span><span class="sym">)</span>
	 <span class="sym">(</span>x <span class="sym">(</span>make<span class="sym">-</span>hash<span class="sym">-</span>table n<span class="sym">)))</span>
    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">1</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))</span>
	<span class="sym">((&gt;</span> i n<span class="sym">))</span>
      <span class="sym">(</span>hash<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> x <span class="sym">(</span>number<span class="sym">-&gt;</span>string i <span class="num">16</span><span class="sym">)</span> i<span class="sym">))</span>
    <span class="sym">(</span>do <span class="sym">((</span>i <span class="kwa">last</span> <span class="sym">(-</span> i <span class="num">1</span><span class="sym">)))</span>
	<span class="sym">((&lt;</span> i <span class="num">0</span><span class="sym">))</span>
      <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>hash<span class="sym">-</span>ref x <span class="sym">(</span>number<span class="sym">-&gt;</span>string i <span class="num">10</span><span class="sym">))</span>
	  <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> c <span class="sym">(+</span> c <span class="num">1</span><span class="sym">))))</span>
    <span class="sym">(</span>display <span class="sym">(</span>format <span class="str">&quot;~D</span><span class="esc">\n</span><span class="str">&quot;</span> c<span class="sym">))))</span>
