<span class="line">    1 </span><span class="dir">#!/usr/bin/pike
</span><span class="line">    2 </span><span class="dir"></span><span class="slc">// -*- mode: pike -*-
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// $Id: wordfreq-pike.code,v 1.4 2004-11-13 07:43:35 bfulgham Exp $
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">// from: Fredrik Noring
</span><span class="line">    6 </span><span class="slc"></span>
<span class="line">    7 </span><span class="kwb">void</span> main<span class="sym">()
</span><span class="line">    8 </span><span class="sym">{
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwb">mapping</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">:</span><span class="kwb">int</span><span class="sym">)</span> dictionary <span class="sym">= ([]);
</span><span class="line">   10 </span><span class="sym"></span>    <span class="kwb">string</span> buffer <span class="sym">=</span> <span class="str">&quot;&quot;</span><span class="sym">;
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym"></span>    <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> f <span class="sym">=</span> <span class="kwa">filter</span><span class="sym">(</span><span class="kwa">map</span><span class="sym">(</span><span class="kwa">enumerate</span><span class="sym">(</span><span class="num">128</span><span class="sym">),
</span><span class="line">   13 </span><span class="sym"></span>                                   lambda<span class="sym">(</span><span class="kwb">int</span> i<span class="sym">)
</span><span class="line">   14 </span><span class="sym">                                   {
</span><span class="line">   15 </span><span class="sym"></span>                                       return <span class="sym">!(</span><span class="str">'A'</span> <span class="sym">&lt;=</span> i <span class="sym">&amp;&amp;</span> i <span class="sym">&lt;=</span> <span class="str">'Z'</span> <span class="sym">||
</span><span class="line">   16 </span><span class="sym"></span>                                                <span class="str">'a'</span> <span class="sym">&lt;=</span> i <span class="sym">&amp;&amp;</span> i <span class="sym">&lt;=</span> <span class="str">'z'</span> <span class="sym">||
</span><span class="line">   17 </span><span class="sym"></span>                                                i <span class="sym">==</span> <span class="str">' '</span><span class="sym">) &amp;&amp;
</span><span class="line">   18 </span><span class="sym"></span>                                              <span class="kwa">sprintf</span><span class="sym">(</span><span class="str">&quot;%c&quot;</span><span class="sym">,</span> i<span class="sym">);
</span><span class="line">   19 </span><span class="sym">                                   }),</span> `<span class="sym">!=,</span> <span class="num">0</span><span class="sym">);
</span><span class="line">   20 </span><span class="sym"></span>    <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> t <span class="sym">=</span> <span class="kwa">allocate</span><span class="sym">(</span><span class="kwa">sizeof</span><span class="sym">(</span>f<span class="sym">),</span> <span class="str">&quot; &quot;</span><span class="sym">);
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span>    for<span class="sym">(;;)
</span><span class="line">   23 </span><span class="sym">    {
</span><span class="line">   24 </span><span class="sym"></span>          <span class="kwb">string</span> data <span class="sym">=
</span><span class="line">   25 </span><span class="sym"></span>              buffer <span class="sym">+</span> <span class="kwa">replace</span><span class="sym">(</span><span class="kwa">lower_case</span><span class="sym">(</span>Stdio.stdin.read<span class="sym">(</span><span class="num">4096</span><span class="sym">)),</span> f<span class="sym">,</span> t<span class="sym">);
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span>          if<span class="sym">(!</span><span class="kwa">sizeof</span><span class="sym">(</span>data<span class="sym">))
</span><span class="line">   28 </span><span class="sym"></span>              break<span class="sym">;
</span><span class="line">   29 </span><span class="sym">
</span><span class="line">   30 </span><span class="sym"></span>          <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> words <span class="sym">=</span> data<span class="sym">/</span><span class="str">&quot; &quot;</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym">
</span><span class="line">   32 </span><span class="sym"></span>          if<span class="sym">(</span><span class="num">1</span> <span class="sym">&lt;</span> <span class="kwa">sizeof</span><span class="sym">(</span>words<span class="sym">) &amp;&amp;</span> <span class="kwa">sizeof</span><span class="sym">(</span>words<span class="sym">[-</span><span class="num">1</span><span class="sym">]))
</span><span class="line">   33 </span><span class="sym"></span>              buffer <span class="sym">=</span> words<span class="sym">[-</span><span class="num">1</span><span class="sym">],
</span><span class="line">   34 </span><span class="sym"></span>               words <span class="sym">=</span> words<span class="sym">[</span>..<span class="kwa">sizeof</span><span class="sym">(</span>words<span class="sym">)-</span><span class="num">2</span><span class="sym">];
</span><span class="line">   35 </span><span class="sym"></span>          else
<span class="line">   36 </span>              buffer <span class="sym">=</span> <span class="str">&quot;&quot;</span><span class="sym">;
</span><span class="line">   37 </span><span class="sym">
</span><span class="line">   38 </span><span class="sym"></span>          foreach<span class="sym">(</span>words<span class="sym">,</span> <span class="kwb">string</span> word<span class="sym">)
</span><span class="line">   39 </span><span class="sym"></span>              dictionary<span class="sym">[</span>word<span class="sym">]++;
</span><span class="line">   40 </span><span class="sym">    }
</span><span class="line">   41 </span><span class="sym">
</span><span class="line">   42 </span><span class="sym"></span>    <span class="kwa">m_delete</span><span class="sym">(</span>dictionary<span class="sym">,</span> <span class="str">&quot;&quot;</span><span class="sym">);
</span><span class="line">   43 </span><span class="sym">
</span><span class="line">   44 </span><span class="sym"></span>    <span class="kwb">mapping</span><span class="sym">(</span><span class="kwb">int</span><span class="sym">:</span><span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">))</span> revdictionary <span class="sym">= ([]);
</span><span class="line">   45 </span><span class="sym"></span>    <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> words <span class="sym">=</span> <span class="kwa">indices</span><span class="sym">(</span>dictionary<span class="sym">);
</span><span class="line">   46 </span><span class="sym"></span>    <span class="kwb">array</span><span class="sym">(</span><span class="kwb">int</span><span class="sym">)</span> freqs <span class="sym">=</span> <span class="kwa">values</span><span class="sym">(</span>dictionary<span class="sym">);
</span><span class="line">   47 </span><span class="sym">
</span><span class="line">   48 </span><span class="sym"></span>    for<span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> <span class="kwa">sizeof</span><span class="sym">(</span>dictionary<span class="sym">);</span> i<span class="sym">++)
</span><span class="line">   49 </span><span class="sym"></span>          revdictionary<span class="sym">[</span>freqs<span class="sym">[</span>i<span class="sym">]] += ({</span> words<span class="sym">[</span>i<span class="sym">] });
</span><span class="line">   50 </span><span class="sym">
</span><span class="line">   51 </span><span class="sym"></span>    freqs <span class="sym">=</span> <span class="kwa">sort</span><span class="sym">(</span><span class="kwa">indices</span><span class="sym">(</span>revdictionary<span class="sym">));
</span><span class="line">   52 </span><span class="sym"></span>    for<span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="kwa">sizeof</span><span class="sym">(</span>freqs<span class="sym">)-</span><span class="num">1</span><span class="sym">;</span> <span class="num">0</span> <span class="sym">&lt;=</span> i<span class="sym">;</span> i<span class="sym">--)
</span><span class="line">   53 </span><span class="sym">    {
</span><span class="line">   54 </span><span class="sym"></span>          <span class="kwb">int</span> freq <span class="sym">=</span> freqs<span class="sym">[</span>i<span class="sym">];
</span><span class="line">   55 </span><span class="sym"></span>          words <span class="sym">=</span> <span class="kwa">sort</span><span class="sym">(</span>revdictionary<span class="sym">[</span>freq<span class="sym">]);
</span><span class="line">   56 </span><span class="sym">
</span><span class="line">   57 </span><span class="sym"></span>          for<span class="sym">(</span><span class="kwb">int</span> j <span class="sym">=</span> <span class="kwa">sizeof</span><span class="sym">(</span>words<span class="sym">)-</span><span class="num">1</span><span class="sym">;</span> <span class="num">0</span> <span class="sym">&lt;=</span> j<span class="sym">;</span> j<span class="sym">--)
</span><span class="line">   58 </span><span class="sym"></span>              <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%7d %s</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> freq<span class="sym">,</span> words<span class="sym">[</span>j<span class="sym">]);
</span><span class="line">   59 </span><span class="sym">    }
</span><span class="line">   60 </span><span class="sym">}</span>
