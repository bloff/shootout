<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">#!/usr/bin/perl 
</FONT></I><I><FONT COLOR="#B22222"># $Id: heapsort-perl.code,v 1.1 2004-11-02 08:52:32 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222"># http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222"># Matt Harris suggested passing the array via typeglob
</FONT></I>
<B><FONT COLOR="#A020F0">use</FONT></B> strict;

<B><FONT COLOR="#A020F0">use</FONT></B> constant IM =&gt; 139968;
<B><FONT COLOR="#A020F0">use</FONT></B> constant IA =&gt;   3877;
<B><FONT COLOR="#A020F0">use</FONT></B> constant IC =&gt;  29573;

<B><FONT COLOR="#A020F0">use</FONT></B> vars <B><FONT COLOR="#A020F0">qw</FONT></B>(@ra);

<B><FONT COLOR="#A020F0">my</FONT></B> $LAST = 42;
<B><FONT COLOR="#A020F0">sub</FONT></B> gen_random { ($_[0] * ($LAST = ($LAST * IA + IC) % IM)) / IM }

<B><FONT COLOR="#A020F0">sub</FONT></B> heapsort ($\@) {
    <B><FONT COLOR="#A020F0">my</FONT></B> $n = <B><FONT COLOR="#A020F0">shift</FONT></B>;
    <I><FONT COLOR="#B22222"># use typeglob ra to refer to array.
</FONT></I>    <B><FONT COLOR="#A020F0">local</FONT></B> *ra = <B><FONT COLOR="#A020F0">shift</FONT></B>;

    <B><FONT COLOR="#A020F0">my</FONT></B>($rra, $i, $j);

    <B><FONT COLOR="#A020F0">my</FONT></B> $l = ($n &gt;&gt; 1) + 1;
    <B><FONT COLOR="#A020F0">my</FONT></B> $ir = $n;
    <B><FONT COLOR="#A020F0">while</FONT></B> (1) {
	<B><FONT COLOR="#A020F0">if</FONT></B> ($l &gt; 1) {
	    $rra = $ra[--$l];
	} <B><FONT COLOR="#A020F0">else</FONT></B> {
	    $rra = $ra[$ir];
	    $ra[$ir] = $ra[1];
	    <B><FONT COLOR="#A020F0">if</FONT></B> (--$ir == 1) {
		$ra[1] = $rra;
		<B><FONT COLOR="#A020F0">return</FONT></B>;
	    }
	}
	$i = $l;
	$j = $l &lt;&lt; 1;
	<B><FONT COLOR="#A020F0">while</FONT></B> ($j &lt;= $ir) {
	    $j++ <B><FONT COLOR="#A020F0">if</FONT></B> (($j &lt; $ir) &amp;&amp; ($ra[$j] &lt; $ra[$j+1]));
	    <B><FONT COLOR="#A020F0">if</FONT></B> ($rra &lt; $ra[$j]) {
		$ra[$i] = $ra[$j];
		$j += ($i = $j);
	    } <B><FONT COLOR="#A020F0">else</FONT></B> {
		$j = $ir + 1;
	    }
	}
	$ra[$i] = $rra;
    }
}


<B><FONT COLOR="#A020F0">my</FONT></B> $N = $ARGV[0];
$N = 1 <B><FONT COLOR="#A020F0">if</FONT></B> ($N &lt; 1);

<I><FONT COLOR="#B22222"># create an array of N random doubles
</FONT></I><B><FONT COLOR="#A020F0">my</FONT></B> @ary = ();
<B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">my</FONT></B> $i=1; $i&lt;=$N; $i++) {
    $ary[$i] = gen_random(1.0);
}

heapsort($N, @ary);

<B><FONT COLOR="#A020F0">printf</FONT></B>(<B><FONT COLOR="#BC8F8F">&quot;%.10f\n&quot;</FONT></B>, $ary[-1]);
</pre></td></tr></table>
