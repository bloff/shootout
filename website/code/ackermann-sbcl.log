BUILD COMMANDS FOR: ackermann.sbcl

Sun Oct 30 18:26:23 PST 2005

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "ackermann.sbcl_compile")'
### START ackermann.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "ackermann.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END ackermann.sbcl_compile


; compiling file "/opt/shootout/shootout/bench/ackermann/tmp/ackermann.sbcl" (written 30 OCT 2005 06:26:23 PM):
; compiling (DEFUN FAST-ACK ...)
; compiling (DEFUN MAIN ...)

; /opt/shootout/shootout/bench/ackermann/tmp/ackermann.fasl written
; compilation finished in 0:00:00
[doing purification: roots handlers stack bindings static cleanup done]
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /opt/shootout/shootout/bench/ackermann/tmp/sbcl.core:
writing 20065792 bytes from the read-only space at 0x01000000
writing 6658904 bytes from the static space at 0x05000000
writing 4096 bytes from the dynamic space at 0x09000000
done]
### START ackermann.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END ackermann.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load ackermann.sbcl_run %A


PROGRAM OUTPUT
==============
Ack(3,9): 4093
