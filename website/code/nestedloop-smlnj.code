<span class="com">(* nestedloop.sml</span>
<span class="com"> *</span>
<span class="com"> *   Nested loop benchmark.</span>
<span class="com"> *</span>
<span class="com"> * Copyright (c) 2004 by The Fellowship of SML/NJ</span>
<span class="com"> *</span>
<span class="com"> * Author: Matthias Blume (blume&#64;tti-c.org)</span>
<span class="com"> *)</span>
<span class="kwa">structure</span> Test <span class="sym">:</span> <span class="kwa">sig</span>
    <span class="kwa">val</span> main <span class="sym">: (</span><span class="kwb">string</span> <span class="sym">*</span> <span class="kwb">string</span> list<span class="sym">) -&gt;</span> OS.Process.status
<span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct</span>
    <span class="kwa">fun</span> x <span class="sym">+</span> y <span class="sym">=</span> <span class="kwa">Word</span>.toIntX <span class="sym">(</span><span class="kwa">Word</span>.<span class="sym">+ (</span><span class="kwa">Word</span>.fromInt x<span class="sym">,</span> <span class="kwa">Word</span>.fromInt y<span class="sym">))</span>
    <span class="kwa">fun</span> x <span class="sym">-</span> y <span class="sym">=</span> <span class="kwa">Word</span>.toIntX <span class="sym">(</span><span class="kwa">Word</span>.<span class="sym">- (</span><span class="kwa">Word</span>.fromInt x<span class="sym">,</span> <span class="kwa">Word</span>.fromInt y<span class="sym">))</span>

    <span class="kwa">fun</span> loops n <span class="sym">=</span>
	<span class="kwa">let fun</span> lf <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> x<span class="sym">) =</span> x <span class="sym">|</span> lf <span class="sym">(</span>f<span class="sym">,</span> x<span class="sym">) =</span> lf <span class="sym">(</span>f <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> x <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span>
	    <span class="kwa">fun</span> le <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> x<span class="sym">) =</span> x <span class="sym">|</span> le <span class="sym">(</span>e<span class="sym">,</span> x<span class="sym">) =</span> le <span class="sym">(</span>e <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> lf <span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">))</span>
	    <span class="kwa">fun</span> ld <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> x<span class="sym">) =</span> x <span class="sym">|</span> ld <span class="sym">(</span>d<span class="sym">,</span> x<span class="sym">) =</span> ld <span class="sym">(</span>d <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> le <span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">))</span>
	    <span class="kwa">fun</span> lc <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> x<span class="sym">) =</span> x <span class="sym">|</span> lc <span class="sym">(</span>c<span class="sym">,</span> x<span class="sym">) =</span> lc <span class="sym">(</span>c <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> ld <span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">))</span>
	    <span class="kwa">fun</span> lb <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> x<span class="sym">) =</span> x <span class="sym">|</span> lb <span class="sym">(</span>b<span class="sym">,</span> x<span class="sym">) =</span> lb <span class="sym">(</span>b <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> lc <span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">))</span>
	    <span class="kwa">fun</span> la <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> x<span class="sym">) =</span> x <span class="sym">|</span> la <span class="sym">(</span>a<span class="sym">,</span> x<span class="sym">) =</span> la <span class="sym">(</span>a <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> lb <span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">))</span>
	<span class="kwa">in</span> la <span class="sym">(</span>n<span class="sym">,</span> <span class="num">0</span><span class="sym">)</span>
	<span class="kwa">end</span>

    <span class="kwa">fun</span> main' n <span class="sym">= (</span>print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(</span>loops n<span class="sym">)</span> ^ <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span> OS.Process.success<span class="sym">)</span>
    <span class="kwa">fun</span> main <span class="sym">(</span>_<span class="sym">, []) =</span> main' <span class="num">1</span>
      <span class="sym">|</span> main <span class="sym">(</span>_<span class="sym">,</span> arg <span class="sym">::</span> _<span class="sym">) =</span> main' <span class="sym">(</span>getOpt <span class="sym">(</span><span class="kwa">Int</span>.fromString arg<span class="sym">,</span> <span class="num">1</span><span class="sym">))</span>
<span class="kwa">end</span>
