#<span class="sym">!</span>.<span class="sym">/</span>parrot <span class="sym">-</span>j
#
# partialsums N  <span class="sym">(</span>N <span class="sym">=</span> <span class="num">2500000</span> for shootout<span class="sym">)</span>
#
# By Joshua Isom

.<span class="kwa">sub</span> main <span class="sym">:</span>main
	.param pmc argv
	.<span class="kwa">local int</span> k<span class="sym">,</span> n
	.<span class="kwa">local</span> num sum1<span class="sym">,</span> sum2<span class="sym">,</span> sum3<span class="sym">,</span> sum4<span class="sym">,</span> sum5<span class="sym">,</span> sum6<span class="sym">,</span> sum7<span class="sym">,</span> sum8<span class="sym">,</span> sum9<span class="sym">,</span> a
	.<span class="kwa">local</span> pmc parray
	.<span class="kwa">local</span> string result
	parray <span class="sym">=</span> new .FixedFloatArray
	parray <span class="sym">=</span> <span class="num">9</span>
	$I0 <span class="sym">=</span> argv
	n <span class="sym">=</span> <span class="num">2500000</span>
	unless $I0 <span class="sym">==</span> <span class="num">2</span> goto argok
	$S0 <span class="sym">=</span> argv<span class="sym">[</span><span class="num">1</span><span class="sym">]</span>
	n <span class="sym">=</span> $S0
argok<span class="sym">:</span>

	sum1 <span class="sym">=</span> <span class="num">0.0</span>
	sum2 <span class="sym">=</span> <span class="num">0.0</span>
	sum3 <span class="sym">=</span> <span class="num">0.0</span>
	sum4 <span class="sym">=</span> <span class="num">0.0</span>
	sum5 <span class="sym">=</span> <span class="num">0.0</span>
	sum6 <span class="sym">=</span> <span class="num">0.0</span>
	sum7 <span class="sym">=</span> <span class="num">0.0</span>
	sum8 <span class="sym">=</span> <span class="num">0.0</span>
	sum9 <span class="sym">=</span> <span class="num">0.0</span>
	a <span class="sym">= -</span><span class="num">1.0</span>
	$N0 <span class="sym">=</span> <span class="num">2.0</span> <span class="sym">/</span> <span class="num">3.0</span>
	$I2 <span class="sym">=</span> <span class="num">2</span>
	k <span class="sym">=</span> <span class="num">1</span>
beginfor<span class="sym">:</span>
	# <span class="kwa">This</span> is what overoptimized looks like....
	$N1 <span class="sym">=</span> sqrt k
	$N1 <span class="sym">=</span> <span class="num">1.0</span> <span class="sym">/</span> $N1
	sum2 <span class="sym">+=</span> $N1
	$N1 <span class="sym">=</span> k <span class="sym">+</span> <span class="num">1.0</span>
	$N1 <span class="sym">*=</span> k
	$N1 <span class="sym">=</span> <span class="num">1.0</span> <span class="sym">/</span> $N1
	sum3 <span class="sym">+=</span> $N1
	$N1 <span class="sym">=</span> k <span class="sym">*</span> k
	$N2 <span class="sym">=</span> <span class="num">1.0</span> <span class="sym">/</span> $N1
	sum7 <span class="sym">+=</span> $N2
	$N1 <span class="sym">*=</span> k
	$N2 <span class="sym">=</span> sin k
	$N2 <span class="sym">*=</span> $N2
	$N2 <span class="sym">*=</span> $N1
	$N2 <span class="sym">=</span> <span class="num">1.0</span> <span class="sym">/</span> $N2
	sum4 <span class="sym">+=</span> $N2
	$N2 <span class="sym">=</span> cos k
	$N2 <span class="sym">*=</span> $N2
	$N2 <span class="sym">*=</span> $N1
	$N2 <span class="sym">=</span> <span class="num">1.0</span> <span class="sym">/</span> $N2
	sum5 <span class="sym">+=</span> $N2
	$N1 <span class="sym">=</span> <span class="num">1.0</span> <span class="sym">/</span> k
	sum6 <span class="sym">+=</span> $N1
	<span class="kwa">neg</span> a
	$N1 <span class="sym">=</span> a <span class="sym">/</span> k
	sum8 <span class="sym">+=</span> $N1
	$N1 <span class="sym">=</span> <span class="num">2.0</span> <span class="sym">*</span> k
	<span class="kwa">dec</span> $N1
	$N1 <span class="sym">=</span> a <span class="sym">/</span> $N1
	sum9 <span class="sym">+=</span> $N1
lastfor<span class="sym">:</span>
	$I1 <span class="sym">=</span> k <span class="sym">-</span> <span class="num">1</span>
	$N1 <span class="sym">=</span> pow $N0<span class="sym">,</span> $I1
	sum1 <span class="sym">+=</span> $N1
	<span class="kwa">inc</span> k
	if k <span class="sym">&lt;=</span> n goto beginfor
	<span class="kwa">dec</span> $I2
	if $I2 goto lastfor

	parray<span class="sym">[</span><span class="num">0</span><span class="sym">] =</span> sum1
	parray<span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> sum2
	parray<span class="sym">[</span><span class="num">2</span><span class="sym">] =</span> sum3
	parray<span class="sym">[</span><span class="num">3</span><span class="sym">] =</span> sum4
	parray<span class="sym">[</span><span class="num">4</span><span class="sym">] =</span> sum5
	parray<span class="sym">[</span><span class="num">5</span><span class="sym">] =</span> sum6
	parray<span class="sym">[</span><span class="num">6</span><span class="sym">] =</span> sum7
	parray<span class="sym">[</span><span class="num">7</span><span class="sym">] =</span> sum8
	parray<span class="sym">[</span><span class="num">8</span><span class="sym">] =</span> sum9

	result <span class="sym">=</span> sprintf <span class="sym">&lt;&lt;</span><span class="str">&quot;END&quot;</span><span class="sym">,</span> parray
<span class="sym">%</span><span class="num">.9</span>f\t<span class="sym">(</span><span class="num">2</span><span class="sym">/</span><span class="num">3</span><span class="sym">)</span>^k
<span class="sym">%</span><span class="num">.9</span>f\tk^<span class="sym">-</span><span class="num">0.5</span>
<span class="sym">%</span><span class="num">.9</span>f\t1<span class="sym">/</span>k<span class="sym">(</span>k<span class="sym">+</span><span class="num">1</span><span class="sym">)</span>
<span class="sym">%</span><span class="num">.9</span>f\tFlint Hills
<span class="sym">%</span><span class="num">.9</span>f\tCookson Hills
<span class="sym">%</span><span class="num">.9</span>f\tHarmonic
<span class="sym">%</span><span class="num">.9</span>f\tRiemann Zeta
<span class="sym">%</span><span class="num">.9</span>f\tAlternating Harmonic
<span class="sym">%</span><span class="num">.9</span>f\tGregory
<span class="kwa">END</span>
	print result

.<span class="kwa">end</span>

