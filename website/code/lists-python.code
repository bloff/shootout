<span class="line">    1 </span><span class="slc">#!/usr/bin/python
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: lists-python.code,v 1.4 2004-11-13 07:41:50 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc"># with improvements from Mark Baker
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="kwc">import</span> sys
<span class="line">    7 </span>
<span class="line">    8 </span>SIZE <span class="sym">=</span> <span class="num">10000
</span><span class="line">    9 </span><span class="num">
</span><span class="line">   10 </span><span class="num"></span><span class="kwb">def</span> test_lists<span class="sym">():
</span><span class="line">   11 </span><span class="sym"></span>    Li1 <span class="sym">=</span> <span class="kwa">range</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span> SIZE <span class="sym">+</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   12 </span><span class="sym"></span>    Li2 <span class="sym">=</span> Li1<span class="sym">[:]
</span><span class="line">   13 </span><span class="sym"></span>    Li3 <span class="sym">= []
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span>    <span class="slc"># remove each individual item from left side of Li2 and
</span><span class="line">   16 </span><span class="slc"></span>    <span class="slc"># append to right side of Li3 (preserving order)
</span><span class="line">   17 </span><span class="slc"></span>    <span class="slc">#
</span><span class="line">   18 </span><span class="slc"></span>    <span class="slc"># popping the first element is *expensive*
</span><span class="line">   19 </span><span class="slc"></span>    <span class="slc">#
</span><span class="line">   20 </span><span class="slc"></span>    <span class="slc">#while Li2:
</span><span class="line">   21 </span><span class="slc"></span>    <span class="slc">#    Li3.append(Li2.pop(0))
</span><span class="line">   22 </span><span class="slc"></span>    Li2<span class="sym">.</span>reverse<span class="sym">()
</span><span class="line">   23 </span><span class="sym"></span>    <span class="kwb">while</span> Li2<span class="sym">:
</span><span class="line">   24 </span><span class="sym"></span>        Li3<span class="sym">.</span>append<span class="sym">(</span>Li2<span class="sym">.</span>pop<span class="sym">())
</span><span class="line">   25 </span><span class="sym"></span>    <span class="kwb">while</span> Li3<span class="sym">:
</span><span class="line">   26 </span><span class="sym"></span>        Li2<span class="sym">.</span>append<span class="sym">(</span>Li3<span class="sym">.</span>pop<span class="sym">())
</span><span class="line">   27 </span><span class="sym"></span>    Li1<span class="sym">.</span>reverse<span class="sym">()
</span><span class="line">   28 </span><span class="sym"></span>    <span class="kwb">if</span> Li1<span class="sym">[</span><span class="num">0</span><span class="sym">] !=</span> SIZE<span class="sym">:
</span><span class="line">   29 </span><span class="sym"></span>        <span class="kwb">return</span> <span class="num">0
</span><span class="line">   30 </span><span class="num"></span>    <span class="kwb">if</span> Li1 <span class="sym">==</span> Li2<span class="sym">:
</span><span class="line">   31 </span><span class="sym"></span>        <span class="kwb">return</span> <span class="kwa">len</span><span class="sym">(</span>Li1<span class="sym">)
</span><span class="line">   32 </span><span class="sym"></span>    <span class="kwb">else</span><span class="sym">:
</span><span class="line">   33 </span><span class="sym"></span>        <span class="kwb">return</span> <span class="num">0
</span><span class="line">   34 </span><span class="num">
</span><span class="line">   35 </span><span class="num"></span><span class="kwb">def</span> main<span class="sym">():
</span><span class="line">   36 </span><span class="sym"></span>    NUM <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])
</span><span class="line">   37 </span><span class="sym"></span>    <span class="kwb">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">:
</span><span class="line">   38 </span><span class="sym"></span>        NUM <span class="sym">=</span> <span class="num">1
</span><span class="line">   39 </span><span class="num"></span>    <span class="kwb">while</span> NUM <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">:
</span><span class="line">   40 </span><span class="sym"></span>        result <span class="sym">=</span> test_lists<span class="sym">()
</span><span class="line">   41 </span><span class="sym"></span>        NUM <span class="sym">=</span> NUM <span class="num">- 1
</span><span class="line">   42 </span><span class="num"></span>    <span class="kwb">print</span> result
<span class="line">   43 </span>
<span class="line">   44 </span>main<span class="sym">()</span>
