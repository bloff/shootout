<span class="str">&quot;  The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy

   To run: gst -QI /usr/share/gnu-smalltalk/gst.im nbody.gst -a 1000
&quot;</span>

Object subclass<span class="sym">:</span> <span class="slc">#NBodySystem
</span>instanceVariableNames<span class="sym">:</span> <span class="str">'bodies'</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!


!</span>NBodySystem methodsFor<span class="sym">:</span> <span class="str">'initialize-release'</span><span class="sym">!

</span>initialize
   <span class="sym">|</span> px py pz <span class="sym">|
</span>   bodies <span class="sym">:=</span> OrderedCollection new add<span class="sym">:</span> Body sun<span class="sym">;</span> add<span class="sym">:</span> Body jupiter<span class="sym">;</span> add<span class="sym">:</span> Body saturn<span class="sym">;
</span>      add<span class="sym">:</span> Body uranus<span class="sym">;</span> add<span class="sym">:</span> Body neptune<span class="sym">;</span> yourself.

   px <span class="sym">:=</span> <span class="num">0.0d</span>.
   py <span class="sym">:=</span> <span class="num">0.0d</span>.
   pz <span class="sym">:=</span> <span class="num">0.0d</span>.
   bodies <span class="kwa">do</span><span class="sym">: [:</span>body<span class="sym">|
</span>      px <span class="sym">:=</span> px <span class="sym">+ (</span>body vx <span class="sym">*</span> body mass<span class="sym">)</span>.
      py <span class="sym">:=</span> py <span class="sym">+ (</span>body vy <span class="sym">*</span> body mass<span class="sym">)</span>.
      pz <span class="sym">:=</span> pz <span class="sym">+ (</span>body vz <span class="sym">*</span> body mass<span class="sym">)</span>.
   <span class="sym">]</span>.

   bodies first offsetMomentum<span class="sym">:</span> px y<span class="sym">:</span> py z<span class="sym">:</span> pz <span class="sym">! !


!</span>NBodySystem methodsFor<span class="sym">:</span> <span class="str">'nbody'</span><span class="sym">!

</span>advance<span class="sym">:</span> dt
<span class="str">&quot;Fortran written in Smalltalk!&quot;</span>
   <span class="sym">|</span> dx dy dz distance mag <span class="sym">|
</span>   <span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|
</span>      i<span class="sym">+</span><span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>j<span class="sym">|
</span>         dx <span class="sym">:= (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> x <span class="sym">- (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> x.
         dy <span class="sym">:= (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> y <span class="sym">- (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> y.
         dz <span class="sym">:= (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> z <span class="sym">- (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> z.

         distance <span class="sym">:= ((</span>dx<span class="sym">*</span>dx<span class="sym">) + (</span>dy<span class="sym">*</span>dy<span class="sym">) + (</span>dz<span class="sym">*</span>dz<span class="sym">))</span> sqrt.
         mag <span class="sym">:=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)</span>.

         <span class="sym">(</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vx<span class="sym">: (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vx <span class="sym">- (</span>dx <span class="sym">* (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> mass <span class="sym">*</span> mag<span class="sym">)</span>.
         <span class="sym">(</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vy<span class="sym">: (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vy <span class="sym">- (</span>dy <span class="sym">* (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> mass <span class="sym">*</span> mag<span class="sym">)</span>.
         <span class="sym">(</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vz<span class="sym">: (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vz <span class="sym">- (</span>dz <span class="sym">* (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> mass <span class="sym">*</span> mag<span class="sym">)</span>.

         <span class="sym">(</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> vx<span class="sym">: (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> vx <span class="sym">+ (</span>dx <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> mass <span class="sym">*</span> mag<span class="sym">)</span>.
         <span class="sym">(</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> vy<span class="sym">: (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> vy <span class="sym">+ (</span>dy <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> mass <span class="sym">*</span> mag<span class="sym">)</span>.
         <span class="sym">(</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> vz<span class="sym">: (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> vz <span class="sym">+ (</span>dz <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> mass <span class="sym">*</span> mag<span class="sym">)</span>.
      <span class="sym">]</span>.
   <span class="sym">]</span>.
   <span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|
      (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> x<span class="sym">: (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> x <span class="sym">+ (</span>dt <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vx<span class="sym">)</span>.
      <span class="sym">(</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> y<span class="sym">: (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> y <span class="sym">+ (</span>dt <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vy<span class="sym">)</span>.
      <span class="sym">(</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> z<span class="sym">: (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> z <span class="sym">+ (</span>dt <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vz<span class="sym">)</span>.
   <span class="sym">] !


</span>energy
<span class="str">&quot;Fortran written in Smalltalk!&quot;</span>
   <span class="sym">|</span> dx dy dz distance e <span class="sym">|
</span>   e <span class="sym">:=</span> <span class="num">0.0d</span>.
   <span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|
</span>      e <span class="sym">:=</span> e <span class="sym">+ (</span><span class="num">0.5d</span> <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> mass <span class="sym">*
         (((</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vx <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vx<span class="sym">) +
         ((</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vy <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vy<span class="sym">) +
         ((</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vz <span class="sym">* (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> vz<span class="sym">)))</span>.

      i<span class="sym">+</span><span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>j<span class="sym">|
</span>         dx <span class="sym">:= (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> x <span class="sym">- (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> x.
         dy <span class="sym">:= (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> y <span class="sym">- (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> y.
         dz <span class="sym">:= (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> z <span class="sym">- (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> z.

         distance <span class="sym">:= ((</span>dx<span class="sym">*</span>dx<span class="sym">) + (</span>dy<span class="sym">*</span>dy<span class="sym">) + (</span>dz<span class="sym">*</span>dz<span class="sym">))</span> sqrt.
         e <span class="sym">:=</span> e <span class="sym">- ((</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> mass <span class="sym">* (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> mass <span class="sym">/</span> distance<span class="sym">)</span>.
      <span class="sym">]</span>.
   <span class="sym">]</span>.
   ^e <span class="sym">! !



</span>Object subclass<span class="sym">:</span> <span class="slc">#Body
</span>instanceVariableNames<span class="sym">:</span> <span class="str">'x y z vx vy vz mass'</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>Body class methodsFor<span class="sym">:</span> <span class="str">'constants'</span><span class="sym">!

</span>daysPerYear
	^<span class="num">365.24d</span> <span class="sym">!

</span>pi
	^<span class="num">3.141592653589793d</span> <span class="sym">!

</span>solarMass
	^<span class="num">4.0d</span> <span class="sym">*</span> self pi <span class="sym">*</span> self pi <span class="sym">!

</span>sun
	^self new
		x<span class="sym">:</span> <span class="num">0.0d0</span><span class="sym">;
</span>		y<span class="sym">:</span> <span class="num">0.0d0</span><span class="sym">;
</span>		z<span class="sym">:</span> <span class="num">0.0d0</span><span class="sym">;
</span>		vx<span class="sym">:</span> <span class="num">0.0d0</span><span class="sym">;
</span>		vy<span class="sym">:</span> <span class="num">0.0d0</span><span class="sym">;
</span>		vz<span class="sym">:</span> <span class="num">0.0d0</span><span class="sym">;
</span>		mass<span class="sym">:</span> self solarMass <span class="sym">!


</span>jupiter
	^self new
		x<span class="sym">:</span> <span class="num">4.84143144246472090d0</span><span class="sym">;
</span>		y<span class="sym">: -</span><span class="num">1.16032004402742839d0</span><span class="sym">;
</span>		z<span class="sym">: -</span><span class="num">1.03622044471123109d</span><span class="sym">-</span><span class="num">1</span><span class="sym">;
</span>		vx<span class="sym">:</span> <span class="num">1.66007664274403694d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vy<span class="sym">:</span> <span class="num">7.69901118419740425d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vz<span class="sym">: -</span><span class="num">6.90460016972063023d</span><span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		mass<span class="sym">:</span> <span class="num">9.54791938424326609d</span><span class="sym">-</span><span class="num">4</span> <span class="sym">*</span> self solarMass <span class="sym">!

</span>saturn
	^self new
		x<span class="sym">:</span> <span class="num">8.34336671824457987d0</span><span class="sym">;
</span>		y<span class="sym">:</span> <span class="num">4.12479856412430479d0</span><span class="sym">;
</span>		z<span class="sym">: -</span><span class="num">4.03523417114321381d</span><span class="sym">-</span><span class="num">1</span><span class="sym">;
</span>		vx<span class="sym">: -</span><span class="num">2.76742510726862411d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vy<span class="sym">:</span> <span class="num">4.99852801234917238d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vz<span class="sym">:</span> <span class="num">2.30417297573763929d</span><span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		mass<span class="sym">:</span> <span class="num">2.85885980666130812d</span><span class="sym">-</span><span class="num">4</span> <span class="sym">*</span> self solarMass <span class="sym">!

</span>uranus
	^self new
		x<span class="sym">:</span> <span class="num">1.28943695621391310d1</span><span class="sym">;
</span>		y<span class="sym">: -</span><span class="num">1.51111514016986312d1</span><span class="sym">;
</span>		z<span class="sym">: -</span><span class="num">2.23307578892655734d</span><span class="sym">-</span><span class="num">1</span><span class="sym">;
</span>		vx<span class="sym">:</span> <span class="num">2.96460137564761618d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vy<span class="sym">:</span> <span class="num">2.37847173959480950d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vz<span class="sym">: -</span><span class="num">2.96589568540237556d</span><span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		mass<span class="sym">:</span> <span class="num">4.36624404335156298d</span><span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self solarMass <span class="sym">!


</span>neptune
	^self new
		x<span class="sym">:</span> <span class="num">1.53796971148509165d1</span><span class="sym">;
</span>		y<span class="sym">: -</span><span class="num">2.59193146099879641d1</span><span class="sym">;
</span>		z<span class="sym">:</span> <span class="num">1.79258772950371181d</span><span class="sym">-</span><span class="num">1</span><span class="sym">;
</span>		vx<span class="sym">:</span> <span class="num">2.68067772490389322d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vy<span class="sym">:</span> <span class="num">1.62824170038242295d</span><span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		vz<span class="sym">: -</span><span class="num">9.51592254519715870d</span><span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear<span class="sym">;
</span>		mass<span class="sym">:</span> <span class="num">5.15138902046611451d</span><span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self solarMass <span class="sym">!	!


!</span>Body methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!

</span>mass
	^mass <span class="sym">!

</span>mass<span class="sym">:</span> aDouble
	mass <span class="sym">:=</span> aDouble <span class="sym">!

</span>vx
	^vx <span class="sym">!

</span>vx<span class="sym">:</span> aDouble
	vx <span class="sym">:=</span> aDouble <span class="sym">!

</span>vy
	^vy <span class="sym">!

</span>vy<span class="sym">:</span> aDouble
	vy <span class="sym">:=</span> aDouble <span class="sym">!

</span>vz
	^vz <span class="sym">!

</span>vz<span class="sym">:</span> aDouble
	vz <span class="sym">:=</span> aDouble <span class="sym">!

</span>x
	^x <span class="sym">!

</span>x<span class="sym">:</span> aDouble
	x <span class="sym">:=</span> aDouble <span class="sym">!

</span>y
	^y <span class="sym">!

</span>y<span class="sym">:</span> aDouble
	y <span class="sym">:=</span> aDouble <span class="sym">!

</span>z
	^z <span class="sym">!

</span>z<span class="sym">:</span> aDouble
	z <span class="sym">:=</span> aDouble <span class="sym">! !


!</span>Body methodsFor<span class="sym">:</span> <span class="str">'nbody'</span><span class="sym">!

</span>offsetMomentum<span class="sym">:</span> px y<span class="sym">:</span> py z<span class="sym">:</span> pz
	<span class="sym">|</span> m <span class="sym">|
</span>	m <span class="sym">:=</span> self class solarMass.
	vx <span class="sym">:=</span> px negated <span class="sym">/</span> m.
	vy <span class="sym">:=</span> py negated <span class="sym">/</span> m.
	vz <span class="sym">:=</span> pz negated <span class="sym">/</span> m <span class="sym">! !


!</span>Float methodsFor<span class="sym">:</span> <span class="str">'printing'</span><span class="sym">!

</span>printStringRoundedTo<span class="sym">:</span> anInteger
   <span class="sym">|</span> n s <span class="sym">|
</span>   n <span class="sym">:=</span> <span class="num">0.5d</span> <span class="sym">* (</span><span class="num">10</span> raisedToInteger<span class="sym">:</span> anInteger negated<span class="sym">)</span>.
   s <span class="sym">:= ((</span>self sign <span class="sym">&lt;</span> <span class="num">0</span><span class="sym">)</span> ifTrue<span class="sym">: [</span>self <span class="sym">-</span> n<span class="sym">]</span> ifFalse<span class="sym">: [</span>self <span class="sym">+</span> n<span class="sym">])</span> printString.
   ^s copyFrom<span class="sym">:</span> <span class="num">1</span> to<span class="sym">: (</span>s indexOf<span class="sym">:</span> <span class="kwb">$</span>.<span class="sym">) +</span> anInteger <span class="sym">! !



|</span> n bodies <span class="sym">|
</span>n <span class="sym">:=</span> Smalltalk arguments first asInteger.
bodies <span class="sym">:=</span> NBodySystem new initialize.

<span class="sym">(</span>bodies energy printStringRoundedTo<span class="sym">:</span> <span class="num">9</span><span class="sym">)</span> displayNl.
n timesRepeat<span class="sym">: [</span>bodies advance<span class="sym">:</span> <span class="num">0.01</span><span class="sym">]</span>.
<span class="sym">(</span>bodies energy printStringRoundedTo<span class="sym">:</span> <span class="num">9</span><span class="sym">)</span> displayNl <span class="sym">!</span>
