<span class="str">&quot;*  The Great Computer Language Shootout</span>
<span class="str">   http://shootout.alioth.debian.org/</span>
<span class="str"></span>
<span class="str">   contributed by Isaac Gouy</span>
<span class="str"></span>
<span class="str">   To run: gst -QI /usr/share/gnu-smalltalk/gst.im nbody.gst -a 1000</span>
<span class="str">*&quot;</span>

Object subclass<span class="sym">:</span> <span class="slc">#NBodySystem</span>
instanceVariableNames<span class="sym">:</span> <span class="str">'bodies'</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!</span>


<span class="sym">!</span>NBodySystem methodsFor<span class="sym">:</span> <span class="str">'nbody'</span><span class="sym">!</span>

after<span class="sym">:</span> dt
   <span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|</span>
      i<span class="sym">+</span><span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>j<span class="sym">|</span>
         <span class="sym">(</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> <span class="kwa">and</span><span class="sym">: (</span>bodies at<span class="sym">:</span> j<span class="sym">)</span> velocityAfter<span class="sym">:</span> dt<span class="sym">]</span>.
   <span class="sym">]</span>.
   bodies <span class="kwa">do</span><span class="sym">: [:</span>each<span class="sym">|</span> each positionAfter<span class="sym">:</span> dt<span class="sym">] !</span>


energy
   <span class="sym">|</span> e <span class="sym">|</span>
   e <span class="sym">:=</span> <span class="num">0.0</span>d.
   <span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|</span>
      e <span class="sym">:=</span> e <span class="sym">+ (</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> kineticEnergy.
      i<span class="sym">+</span><span class="num">1</span> to<span class="sym">:</span> bodies size <span class="kwa">do</span><span class="sym">: [:</span>j<span class="sym">|</span>
         e <span class="sym">:=</span> e <span class="sym">- ((</span>bodies at<span class="sym">:</span> i<span class="sym">)</span> potentialEnergy<span class="sym">: (</span>bodies at<span class="sym">:</span> j<span class="sym">))]</span>.
   <span class="sym">]</span>.
   ^e <span class="sym">! !</span>


<span class="sym">!</span>NBodySystem methodsFor<span class="sym">:</span> <span class="str">'initialize-release'</span><span class="sym">!</span>

initialize
   bodies <span class="sym">:= (</span>OrderedCollection new
      add<span class="sym">:</span> Body sun<span class="sym">;</span> add<span class="sym">:</span> Body jupiter<span class="sym">;</span> add<span class="sym">:</span> Body saturn<span class="sym">;</span>
      add<span class="sym">:</span> Body uranus<span class="sym">;</span> add<span class="sym">:</span> Body neptune<span class="sym">;</span> yourself<span class="sym">)</span> asArray.

   bodies first offsetMomentum<span class="sym">:</span>
      <span class="sym">(</span>bodies inject<span class="sym">: (</span>Array with<span class="sym">:</span> <span class="num">0.0</span>d with<span class="sym">:</span> <span class="num">0.0</span>d with<span class="sym">:</span> <span class="num">0.0</span>d<span class="sym">)</span>
         into<span class="sym">: [:</span>m <span class="sym">:</span>each <span class="sym">|</span> each addMomentumTo<span class="sym">:</span> m<span class="sym">]) ! !</span>


Object subclass<span class="sym">:</span> <span class="slc">#Body</span>
instanceVariableNames<span class="sym">:</span> <span class="str">'x y z vx vy vz mass'</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!</span>

<span class="sym">!</span>Body class methodsFor<span class="sym">:</span> <span class="str">'constants'</span><span class="sym">!</span>

daysPerYear
   ^<span class="num">365.24</span>d <span class="sym">!</span>

pi
   ^<span class="num">3.141592653589793</span>d <span class="sym">!</span>

solarMass
   ^<span class="num">4.0</span>d <span class="sym">*</span> self pi <span class="sym">*</span> self pi <span class="sym">!</span>

sun
   ^self new
      x<span class="sym">:</span> <span class="num">0.0</span>d0
      y<span class="sym">:</span> <span class="num">0.0</span>d0
      z<span class="sym">:</span> <span class="num">0.0</span>d0
      vx<span class="sym">:</span> <span class="num">0.0</span>d0
      vy<span class="sym">:</span> <span class="num">0.0</span>d0
      vz<span class="sym">:</span> <span class="num">0.0</span>d0
      mass<span class="sym">:</span> self solarMass <span class="sym">!</span>


jupiter
   ^self new
      x<span class="sym">:</span> <span class="num">4.84143144246472090</span>d0
      y<span class="sym">: -</span><span class="num">1.16032004402742839</span>d0
      z<span class="sym">: -</span><span class="num">1.03622044471123109</span>d<span class="sym">-</span><span class="num">1</span>
      vx<span class="sym">:</span> <span class="num">1.66007664274403694</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vy<span class="sym">:</span> <span class="num">7.69901118419740425</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vz<span class="sym">: -</span><span class="num">6.90460016972063023</span>d<span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear
      mass<span class="sym">:</span> <span class="num">9.54791938424326609</span>d<span class="sym">-</span><span class="num">4</span> <span class="sym">*</span> self solarMass <span class="sym">!</span>

saturn
   ^self new
      x<span class="sym">:</span> <span class="num">8.34336671824457987</span>d0
      y<span class="sym">:</span> <span class="num">4.12479856412430479</span>d0
      z<span class="sym">: -</span><span class="num">4.03523417114321381</span>d<span class="sym">-</span><span class="num">1</span>
      vx<span class="sym">: -</span><span class="num">2.76742510726862411</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vy<span class="sym">:</span> <span class="num">4.99852801234917238</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vz<span class="sym">:</span> <span class="num">2.30417297573763929</span>d<span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear
      mass<span class="sym">:</span> <span class="num">2.85885980666130812</span>d<span class="sym">-</span><span class="num">4</span> <span class="sym">*</span> self solarMass <span class="sym">!</span>

uranus
   ^self new
      x<span class="sym">:</span> <span class="num">1.28943695621391310</span>d1
      y<span class="sym">: -</span><span class="num">1.51111514016986312</span>d1
      z<span class="sym">: -</span><span class="num">2.23307578892655734</span>d<span class="sym">-</span><span class="num">1</span>
      vx<span class="sym">:</span> <span class="num">2.96460137564761618</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vy<span class="sym">:</span> <span class="num">2.37847173959480950</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vz<span class="sym">: -</span><span class="num">2.96589568540237556</span>d<span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear
      mass<span class="sym">:</span> <span class="num">4.36624404335156298</span>d<span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self solarMass <span class="sym">!</span>

neptune
   ^self new
      x<span class="sym">:</span> <span class="num">1.53796971148509165</span>d1
      y<span class="sym">: -</span><span class="num">2.59193146099879641</span>d1
      z<span class="sym">:</span> <span class="num">1.79258772950371181</span>d<span class="sym">-</span><span class="num">1</span>
      vx<span class="sym">:</span> <span class="num">2.68067772490389322</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vy<span class="sym">:</span> <span class="num">1.62824170038242295</span>d<span class="sym">-</span><span class="num">3</span> <span class="sym">*</span> self daysPerYear
      vz<span class="sym">: -</span><span class="num">9.51592254519715870</span>d<span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self daysPerYear
      mass<span class="sym">:</span> <span class="num">5.15138902046611451</span>d<span class="sym">-</span><span class="num">5</span> <span class="sym">*</span> self solarMass <span class="sym">!	!</span>


<span class="sym">!</span>Body methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!</span>

mass
   ^mass <span class="sym">!</span>

x
   ^x <span class="sym">!</span>

y
   ^y <span class="sym">!</span>

z
   ^z <span class="sym">!</span>

x<span class="sym">:</span> d1 y<span class="sym">:</span> d2 z<span class="sym">:</span> d3 vx<span class="sym">:</span> d4 vy<span class="sym">:</span> d5 vz<span class="sym">:</span> d6 mass<span class="sym">:</span> d7
   x <span class="sym">:=</span> d1.
   y <span class="sym">:=</span> d2.
   z <span class="sym">:=</span> d3.
   vx <span class="sym">:=</span> d4.
   vy <span class="sym">:=</span> d5.
   vz <span class="sym">:=</span> d6.
   mass <span class="sym">:=</span> d7 <span class="sym">! !</span>


<span class="sym">!</span>Body methodsFor<span class="sym">:</span> <span class="str">'nbody'</span><span class="sym">!</span>

<span class="kwa">and</span><span class="sym">:</span> aBody velocityAfter<span class="sym">:</span> dt
   <span class="sym">|</span> dx dy dz distance mag <span class="sym">|</span>
   dx <span class="sym">:=</span> x <span class="sym">-</span> aBody x.
   dy <span class="sym">:=</span> y <span class="sym">-</span> aBody y.
   dz <span class="sym">:=</span> z <span class="sym">-</span> aBody z.

   distance <span class="sym">:= ((</span>dx<span class="sym">*</span>dx<span class="sym">) + (</span>dy<span class="sym">*</span>dy<span class="sym">) + (</span>dz<span class="sym">*</span>dz<span class="sym">))</span> sqrt.
   mag <span class="sym">:=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)</span>.

   self decreaseVelocity<span class="sym">:</span> dx y<span class="sym">:</span> dy z<span class="sym">:</span> dz m<span class="sym">:</span> aBody mass <span class="sym">*</span> mag.
   aBody increaseVelocity<span class="sym">:</span> dx y<span class="sym">:</span> dy z<span class="sym">:</span> dz m<span class="sym">:</span> mass <span class="sym">*</span> mag <span class="sym">!</span>

increaseVelocity<span class="sym">:</span> dx y<span class="sym">:</span> dy z<span class="sym">:</span> dz m<span class="sym">:</span> m
   vx <span class="sym">:=</span> vx <span class="sym">+ (</span>dx <span class="sym">*</span> m<span class="sym">)</span>.
   vy <span class="sym">:=</span> vy <span class="sym">+ (</span>dy <span class="sym">*</span> m<span class="sym">)</span>.
   vz <span class="sym">:=</span> vz <span class="sym">+ (</span>dz <span class="sym">*</span> m<span class="sym">) !</span>

decreaseVelocity<span class="sym">:</span> dx y<span class="sym">:</span> dy z<span class="sym">:</span> dz m<span class="sym">:</span> m
   vx <span class="sym">:=</span> vx <span class="sym">- (</span>dx <span class="sym">*</span> m<span class="sym">)</span>.
   vy <span class="sym">:=</span> vy <span class="sym">- (</span>dy <span class="sym">*</span> m<span class="sym">)</span>.
   vz <span class="sym">:=</span> vz <span class="sym">- (</span>dz <span class="sym">*</span> m<span class="sym">) !</span>

positionAfter<span class="sym">:</span> dt
   x <span class="sym">:=</span> x <span class="sym">+ (</span>dt <span class="sym">*</span> vx<span class="sym">)</span>.
   y <span class="sym">:=</span> y <span class="sym">+ (</span>dt <span class="sym">*</span> vy<span class="sym">)</span>.
   z <span class="sym">:=</span> z <span class="sym">+ (</span>dt <span class="sym">*</span> vz<span class="sym">) !</span>

kineticEnergy
   ^<span class="num">0.5</span>d <span class="sym">*</span> mass <span class="sym">* ((</span>vx <span class="sym">*</span> vx<span class="sym">) + (</span>vy <span class="sym">*</span> vy<span class="sym">) + (</span>vz <span class="sym">*</span> vz<span class="sym">)) !</span>

potentialEnergy<span class="sym">:</span> aBody
   <span class="sym">|</span> dx dy dz distance <span class="sym">|</span>
   dx <span class="sym">:=</span> x <span class="sym">-</span> aBody x.
   dy <span class="sym">:=</span> y <span class="sym">-</span> aBody y.
   dz <span class="sym">:=</span> z <span class="sym">-</span> aBody z.
   distance <span class="sym">:= ((</span>dx<span class="sym">*</span>dx<span class="sym">) + (</span>dy<span class="sym">*</span>dy<span class="sym">) + (</span>dz<span class="sym">*</span>dz<span class="sym">))</span> sqrt.
   ^mass <span class="sym">*</span> aBody mass <span class="sym">/</span> distance <span class="sym">!</span>

addMomentumTo<span class="sym">:</span> anArray <span class="str">&quot;cleaner to use a 3d point&quot;</span>
   anArray at<span class="sym">:</span> <span class="num">1</span> put<span class="sym">: (</span>anArray at<span class="sym">:</span> <span class="num">1</span><span class="sym">) + (</span>vx <span class="sym">*</span> mass<span class="sym">)</span>.
   anArray at<span class="sym">:</span> <span class="num">2</span> put<span class="sym">: (</span>anArray at<span class="sym">:</span> <span class="num">2</span><span class="sym">) + (</span>vy <span class="sym">*</span> mass<span class="sym">)</span>.
   anArray at<span class="sym">:</span> <span class="num">3</span> put<span class="sym">: (</span>anArray at<span class="sym">:</span> <span class="num">3</span><span class="sym">) + (</span>vz <span class="sym">*</span> mass<span class="sym">)</span>.
   ^anArray <span class="sym">!</span>

offsetMomentum<span class="sym">:</span> anArray <span class="str">&quot;cleaner to use a 3d point&quot;</span>
   <span class="sym">|</span> m <span class="sym">|</span>
   m <span class="sym">:=</span> self class solarMass.
   vx <span class="sym">:= (</span>anArray at<span class="sym">:</span> <span class="num">1</span><span class="sym">)</span> negated <span class="sym">/</span> m.
   vy <span class="sym">:= (</span>anArray at<span class="sym">:</span> <span class="num">2</span><span class="sym">)</span> negated <span class="sym">/</span> m.
   vz <span class="sym">:= (</span>anArray at<span class="sym">:</span> <span class="num">3</span><span class="sym">)</span> negated <span class="sym">/</span> m <span class="sym">! !</span>


<span class="sym">!</span>Float methodsFor<span class="sym">:</span> <span class="str">'printing'</span><span class="sym">!</span>

printStringRoundedTo<span class="sym">:</span> anInteger
   <span class="sym">|</span> n s <span class="sym">|</span>
   n <span class="sym">:=</span> <span class="num">0.5</span>d <span class="sym">* (</span><span class="num">10</span> raisedToInteger<span class="sym">:</span> anInteger negated<span class="sym">)</span>.
   s <span class="sym">:= ((</span>self sign <span class="sym">&lt;</span> <span class="num">0</span><span class="sym">)</span> ifTrue<span class="sym">: [</span>self <span class="sym">-</span> n<span class="sym">]</span> ifFalse<span class="sym">: [</span>self <span class="sym">+</span> n<span class="sym">])</span> printString.
   ^s copyFrom<span class="sym">:</span> <span class="num">1</span> to<span class="sym">: (</span>s indexOf<span class="sym">: $</span>.<span class="sym">) +</span> anInteger <span class="sym">! !</span>


<span class="sym">|</span> n bodies <span class="sym">|</span>
n <span class="sym">:=</span> Smalltalk arguments first asInteger.
bodies <span class="sym">:=</span> NBodySystem new initialize.

<span class="sym">(</span>bodies energy printStringRoundedTo<span class="sym">:</span> <span class="num">9</span><span class="sym">)</span> displayNl.
n timesRepeat<span class="sym">: [</span>bodies after<span class="sym">:</span> <span class="num">0.01</span><span class="sym">]</span>.
<span class="sym">(</span>bodies energy printStringRoundedTo<span class="sym">:</span> <span class="num">9</span><span class="sym">)</span> displayNl <span class="sym">!</span>
