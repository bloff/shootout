<span class="slc">// $Id: random-csharp.code,v 1.5 2005-02-25 08:57:53 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="slc">// Some clean-ups by Brent Fulgham
</span>
<span class="kwa">using</span> System<span class="sym">;

</span><span class="kwc">class</span> random <span class="sym">{

</span>    <span class="kwc">public</span> <span class="kwb">static int</span> IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;
</span>    <span class="kwc">public</span> <span class="kwb">static int</span> IA <span class="sym">=</span> <span class="num">3877</span><span class="sym">;
</span>    <span class="kwc">public</span> <span class="kwb">static int</span> IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">;
</span>    <span class="kwc">public</span> <span class="kwb">static long</span> last <span class="sym">=</span> <span class="num">42</span><span class="sym">;

</span>    <span class="kwc">public</span> <span class="kwb">static double</span> gen_random<span class="sym">(</span><span class="kwb">double</span> max<span class="sym">)
    {
</span>        last <span class="sym">= (</span>last <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">) %</span> IM<span class="sym">;
</span>        <span class="kwa">return</span><span class="sym">(</span> max <span class="sym">*</span> last <span class="sym">/</span> IM <span class="sym">);
    }

</span>    <span class="kwc">public</span> <span class="kwb">static void</span> Main<span class="sym">(</span>String<span class="sym">[]</span> args<span class="sym">)
    {
</span>        <span class="kwb">double</span> result <span class="sym">=</span> <span class="num">0</span><span class="sym">;

</span>        <span class="kwb">int</span> n <span class="sym">=</span> System<span class="sym">.</span>Convert<span class="sym">.</span>ToInt32<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span>        <span class="kwa">if</span><span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;

</span>        <span class="kwa">while</span> <span class="sym">(</span>n<span class="sym">-- &gt;</span> <span class="num">0</span><span class="sym">) {
</span>            result <span class="sym">=</span> gen_random<span class="sym">(</span><span class="num">100.0</span><span class="sym">);
        }

</span>        Console<span class="sym">.</span>WriteLine<span class="sym">(</span><span class="str">&quot;{0:f9}&quot;</span><span class="sym">,</span> result<span class="sym">);
    }
}</span>
