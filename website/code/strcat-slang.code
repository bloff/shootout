<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
define <B><FONT COLOR="#0000FF">main_slow</FONT></B>()
{
   variable n = integer (__argv[1]);
   variable str = typecast (<B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B>, BString_Type);
   variable hello = typecast (<B><FONT COLOR="#BC8F8F">&quot;hello\n&quot;</FONT></B>, BString_Type);
   loop (n)
     str += hello;
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;%S\n&quot;</FONT></B>, strlen (str));
}

variable Buffer = <B><FONT COLOR="#228B22">struct</FONT></B>
{
   size, data, len
};

define <B><FONT COLOR="#0000FF">new_buffer</FONT></B> (s)
{
   variable b = @Buffer;
   s = typecast (s, BString_Type);
   b.data = bstring_to_array (s);
   b.len = bstrlen (s);
   b.size = b.len;
   <B><FONT COLOR="#A020F0">return</FONT></B> b;
}

define <B><FONT COLOR="#0000FF">append</FONT></B> (b, b1)
{
   variable len = b.len;
   variable len1 = b1.len;
   variable new_len = len + len1;
   variable data = b.data;
   variable i;

   <B><FONT COLOR="#A020F0">if</FONT></B> (b.size &lt; new_len)
     {
	b.size = new_len * 2;
	variable new_data = UChar_Type[2*new_len];
	<B><FONT COLOR="#A020F0">if</FONT></B> (len)
	  {
	     i = [0:len-1];
	     new_data[i] = data[i];
	  }

	data = new_data;
	b.data = data;
     }
   
   i = [len:new_len-1];
   data[i] = b1.data[[0:len1-1]];
   b.len = new_len;
}


define <B><FONT COLOR="#0000FF">main_faster</FONT></B> ()
{
   variable n;
   <B><FONT COLOR="#A020F0">if</FONT></B> (__argc &gt; 1) n = integer (__argv[1]); <B><FONT COLOR="#A020F0">else</FONT></B> n = 1;

   variable hello = new_buffer (<B><FONT COLOR="#BC8F8F">&quot;hello\n&quot;</FONT></B>);
   variable str = new_buffer (<B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B>);
   loop (n)
     append (str, hello);
   fprintf (stdout, <B><FONT COLOR="#BC8F8F">&quot;%S\n&quot;</FONT></B>, str.len);
}

<B><FONT COLOR="#0000FF">main_faster</FONT></B> ();</pre></td></tr></table>
