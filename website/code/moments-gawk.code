<span class="line">    1 </span><span class="slc"># $Id: moments-gawk.code,v 1.4 2004-11-13 07:42:19 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="kwa">BEGIN</span> <span class="sym">{
</span><span class="line">    5 </span><span class="sym"></span>    <span class="kwa">delete</span> <span class="kwb">ARGV</span><span class="sym">;
</span><span class="line">    6 </span><span class="sym"></span>    sum <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">    7 </span><span class="sym"></span>    n <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym">}
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym">{
</span><span class="line">   11 </span><span class="sym"></span>    nums<span class="sym">[</span>n<span class="sym">++] =</span> $<span class="num">1</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>    sum <span class="sym">+=</span> $<span class="num">1</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym">}
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span><span class="kwa">END</span> <span class="sym">{
</span><span class="line">   16 </span><span class="sym"></span>    mean <span class="sym">=</span> sum<span class="sym">/</span>n<span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">(</span>num in nums<span class="sym">) {
</span><span class="line">   18 </span><span class="sym"></span>        dev <span class="sym">=</span> num <span class="sym">-</span> mean<span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">(</span>dev <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">) {</span> avg_dev <span class="sym">+=</span> dev<span class="sym">; }</span> <span class="kwa">else</span> <span class="sym">{</span> avg_dev <span class="sym">-=</span> dev<span class="sym">; }
</span><span class="line">   20 </span><span class="sym"></span>        vari <span class="sym">+=</span> dev^<span class="num">2</span><span class="sym">;
</span><span class="line">   21 </span><span class="sym"></span>        skew <span class="sym">+=</span> dev^<span class="num">3</span><span class="sym">;
</span><span class="line">   22 </span><span class="sym"></span>        kurt <span class="sym">+=</span> dev^<span class="num">4</span><span class="sym">;
</span><span class="line">   23 </span><span class="sym">    }
</span><span class="line">   24 </span><span class="sym"></span>    avg_dev <span class="sym">/=</span> n<span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>    vari <span class="sym">/= (</span>n <span class="num">- 1</span><span class="sym">);
</span><span class="line">   26 </span><span class="sym"></span>    std_dev <span class="sym">=</span> sqrt<span class="sym">(</span>vari<span class="sym">);
</span><span class="line">   27 </span><span class="sym">
</span><span class="line">   28 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>vari <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">) {
</span><span class="line">   29 </span><span class="sym"></span>        skew <span class="sym">/= (</span>n <span class="sym">*</span> vari <span class="sym">*</span> std_dev<span class="sym">);
</span><span class="line">   30 </span><span class="sym"></span>        kurt <span class="sym">=</span> kurt<span class="sym">/(</span>n <span class="sym">*</span> vari <span class="sym">*</span> vari<span class="sym">) -</span> <span class="num">3.0</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym">    }
</span><span class="line">   32 </span><span class="sym">
</span><span class="line">   33 </span><span class="sym"></span>    nums<span class="sym">[</span>n<span class="sym">] =</span> nums<span class="sym">[</span><span class="num">0</span><span class="sym">];
</span><span class="line">   34 </span><span class="sym"></span>    heapsort<span class="sym">(</span>n<span class="sym">,</span> nums<span class="sym">);
</span><span class="line">   35 </span><span class="sym">
</span><span class="line">   36 </span><span class="sym"></span>    mid <span class="sym">=</span> int<span class="sym">(</span>n<span class="sym">/</span><span class="num">2</span><span class="sym">)+</span><span class="num">1</span><span class="sym">;
</span><span class="line">   37 </span><span class="sym"></span>    median <span class="sym">= (</span>n % <span class="num">2</span><span class="sym">)</span> ? nums<span class="sym">[</span>mid<span class="sym">] : (</span>nums<span class="sym">[</span>mid<span class="sym">] +</span> nums<span class="sym">[</span>mid<span class="num">-1</span><span class="sym">])/</span><span class="num">2</span><span class="sym">;
</span><span class="line">   38 </span><span class="sym">
</span><span class="line">   39 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;n:</span>                  <span class="esc">%d\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">);
</span><span class="line">   40 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;median:</span>             <span class="esc">%f\n</span><span class="str">&quot;</span><span class="sym">,</span> median<span class="sym">);
</span><span class="line">   41 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;mean:</span>               <span class="esc">%f\n</span><span class="str">&quot;</span><span class="sym">,</span> mean<span class="sym">);
</span><span class="line">   42 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;average_deviation:</span>  <span class="esc">%f\n</span><span class="str">&quot;</span><span class="sym">,</span> avg_dev<span class="sym">);
</span><span class="line">   43 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;standard_deviation:</span> <span class="esc">%f\n</span><span class="str">&quot;</span><span class="sym">,</span> std_dev<span class="sym">);
</span><span class="line">   44 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;variance:</span>           <span class="esc">%f\n</span><span class="str">&quot;</span><span class="sym">,</span> vari<span class="sym">);
</span><span class="line">   45 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;skew:</span>               <span class="esc">%f\n</span><span class="str">&quot;</span><span class="sym">,</span> skew<span class="sym">);
</span><span class="line">   46 </span><span class="sym"></span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;kurtosis:</span>           <span class="esc">%f\n</span><span class="str">&quot;</span><span class="sym">,</span> kurt<span class="sym">);
</span><span class="line">   47 </span><span class="sym">}
</span><span class="line">   48 </span><span class="sym">
</span><span class="line">   49 </span><span class="sym"></span><span class="kwc">function</span> heapsort <span class="sym">(</span>n<span class="sym">,</span> ra<span class="sym">) {
</span><span class="line">   50 </span><span class="sym"></span>    l <span class="sym">=</span> int<span class="sym">(</span><span class="num">0.5</span><span class="sym">+</span>n<span class="sym">/</span><span class="num">2</span><span class="sym">) +</span> <span class="num">1
</span><span class="line">   51 </span><span class="num"></span>    ir <span class="sym">=</span> n<span class="sym">;
</span><span class="line">   52 </span><span class="sym"></span>    <span class="kwa">for</span> <span class="sym">(;;) {
</span><span class="line">   53 </span><span class="sym"></span>        <span class="kwa">if</span> <span class="sym">(</span>l <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">) {
</span><span class="line">   54 </span><span class="sym"></span>            rra <span class="sym">=</span> ra<span class="sym">[--</span>l<span class="sym">];
</span><span class="line">   55 </span><span class="sym">        }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   56 </span><span class="sym"></span>            rra <span class="sym">=</span> ra<span class="sym">[</span>ir<span class="sym">];
</span><span class="line">   57 </span><span class="sym"></span>            ra<span class="sym">[</span>ir<span class="sym">] =</span> ra<span class="sym">[</span><span class="num">1</span><span class="sym">];
</span><span class="line">   58 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">(--</span>ir <span class="sym">==</span> <span class="num">1</span><span class="sym">) {
</span><span class="line">   59 </span><span class="sym"></span>                ra<span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> rra<span class="sym">;
</span><span class="line">   60 </span><span class="sym"></span>                <span class="kwa">return</span><span class="sym">;
</span><span class="line">   61 </span><span class="sym">            }
</span><span class="line">   62 </span><span class="sym">        }
</span><span class="line">   63 </span><span class="sym"></span>        i <span class="sym">=</span> l<span class="sym">;
</span><span class="line">   64 </span><span class="sym"></span>        j <span class="sym">=</span> l <span class="sym">*</span> <span class="num">2</span><span class="sym">;
</span><span class="line">   65 </span><span class="sym"></span>        <span class="kwa">while</span> <span class="sym">(</span>j <span class="sym">&lt;=</span> ir<span class="sym">) {
</span><span class="line">   66 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">(</span>j <span class="sym">&lt;</span> ir <span class="sym">&amp;&amp;</span> ra<span class="sym">[</span>j<span class="sym">] &lt;</span> ra<span class="sym">[</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">]) { ++</span>j<span class="sym">; }
</span><span class="line">   67 </span><span class="sym"></span>            <span class="kwa">if</span> <span class="sym">(</span>rra <span class="sym">&lt;</span> ra<span class="sym">[</span>j<span class="sym">]) {
</span><span class="line">   68 </span><span class="sym"></span>                ra<span class="sym">[</span>i<span class="sym">] =</span> ra<span class="sym">[</span>j<span class="sym">];
</span><span class="line">   69 </span><span class="sym"></span>                j <span class="sym">+= (</span>i <span class="sym">=</span> j<span class="sym">);
</span><span class="line">   70 </span><span class="sym">            }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   71 </span><span class="sym"></span>                j <span class="sym">=</span> ir <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   72 </span><span class="sym">            }
</span><span class="line">   73 </span><span class="sym">        }
</span><span class="line">   74 </span><span class="sym"></span>        ra<span class="sym">[</span>i<span class="sym">] =</span> rra<span class="sym">;
</span><span class="line">   75 </span><span class="sym">    }
</span><span class="line">   76 </span><span class="sym">}</span>
