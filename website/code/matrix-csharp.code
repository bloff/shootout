<span class="slc">// $Id: matrix-csharp.code,v 1.5 2005-02-25 08:57:53 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="slc">// Some clean-ups by Brent Fulgham
</span>
<span class="kwa">using</span> System<span class="sym">;

</span><span class="kwc">class</span> matrix <span class="sym">{

</span>    <span class="kwb">static int</span> SIZE <span class="sym">=</span> <span class="num">30</span><span class="sym">;

</span>    <span class="kwc">public</span> <span class="kwb">static int</span><span class="sym">[,]</span> mkmatrix <span class="sym">(</span><span class="kwb">int</span> rows<span class="sym">,</span> <span class="kwb">int</span> cols<span class="sym">) {
</span>        <span class="kwb">int</span> count <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span>        <span class="kwb">int</span><span class="sym">[,]</span> m <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>rows<span class="sym">,</span>cols<span class="sym">];
</span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> rows<span class="sym">;</span> i<span class="sym">++) {
</span>            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> j <span class="sym">&lt;</span> cols<span class="sym">;</span> j<span class="sym">++) {
</span>                m<span class="sym">[</span>i<span class="sym">,</span>j<span class="sym">] =</span> count<span class="sym">++;
            }
        }
</span>        <span class="kwa">return</span><span class="sym">(</span>m<span class="sym">);
    }

</span>    <span class="kwc">public</span> <span class="kwb">static void</span> mmult <span class="sym">(</span><span class="kwb">int</span> rows<span class="sym">,</span> <span class="kwb">int</span> cols<span class="sym">,
</span>                          <span class="kwb">int</span><span class="sym">[,]</span> m1<span class="sym">,</span> <span class="kwb">int</span><span class="sym">[,]</span> m2<span class="sym">,</span> <span class="kwb">int</span><span class="sym">[,]</span> m3<span class="sym">) {
</span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> rows<span class="sym">;</span> i<span class="sym">++) {
</span>            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> j <span class="sym">&lt;</span> cols<span class="sym">;</span> j<span class="sym">++) {
</span>                <span class="kwb">int</span> val <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>                <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> k <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> k <span class="sym">&lt;</span> cols<span class="sym">;</span> k<span class="sym">++) {
</span>                    val <span class="sym">+=</span> m1<span class="sym">[</span>i<span class="sym">,</span>k<span class="sym">] *</span> m2<span class="sym">[</span>k<span class="sym">,</span>j<span class="sym">];
                }
</span>                m3<span class="sym">[</span>i<span class="sym">,</span>j<span class="sym">] =</span> val<span class="sym">;
            }
        }
    }

</span>    <span class="kwc">public</span> <span class="kwb">static void</span> Main<span class="sym">(</span>String<span class="sym">[]</span> args<span class="sym">) {
</span>        <span class="kwb">int</span><span class="sym">[,]</span> m1 <span class="sym">=</span> mkmatrix<span class="sym">(</span>SIZE<span class="sym">,</span> SIZE<span class="sym">);
</span>        <span class="kwb">int</span><span class="sym">[,]</span> m2 <span class="sym">=</span> mkmatrix<span class="sym">(</span>SIZE<span class="sym">,</span> SIZE<span class="sym">);
</span>        <span class="kwb">int</span><span class="sym">[,]</span> mm <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">int</span><span class="sym">[</span>SIZE<span class="sym">,</span>SIZE<span class="sym">];

</span>        <span class="kwb">int</span> n <span class="sym">=</span> System<span class="sym">.</span>Convert<span class="sym">.</span>ToInt32<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span>        <span class="kwa">if</span><span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;

</span>        <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>            mmult<span class="sym">(</span>SIZE<span class="sym">,</span> SIZE<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">,</span> mm<span class="sym">);
        }

</span>        Console<span class="sym">.</span>WriteLine<span class="sym">(</span><span class="str">&quot;{0} {1} {2} {3}&quot;</span><span class="sym">,</span> mm<span class="sym">[</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">2</span><span class="sym">,</span><span class="num">3</span><span class="sym">],
</span>		mm<span class="sym">[</span><span class="num">3</span><span class="sym">,</span><span class="num">2</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">4</span><span class="sym">,</span><span class="num">4</span><span class="sym">]);
    }
}</span>
