<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   Contributed by Dennis Decker Jensen</span>
<span class="com">*/</span>

arg n <span class="sym">.</span>
<span class="kwa">if</span> n <span class="sym">&gt;=</span> <span class="num">0</span> then call test n
<span class="kwa">if</span> n <span class="sym">&gt;=</span> <span class="num">1</span> then call test n<span class="sym">-</span><span class="num">1</span>
<span class="kwa">if</span> n <span class="sym">&gt;=</span> <span class="num">2</span> then call test n<span class="sym">-</span><span class="num">2</span>
exit

test<span class="sym">:</span> procedure
arg n
m <span class="sym">=</span> <span class="num">10000</span> <span class="sym">*</span> <span class="num">2</span><span class="sym">**</span>n
say <span class="str">&quot;Primes up to&quot;</span> <span class="kwd">right</span><span class="sym">(</span>m<span class="sym">,</span> <span class="num">8</span><span class="sym">)</span> <span class="kwd">right</span><span class="sym">(</span><span class="kwd">nsievebits</span><span class="sym">(</span>m<span class="sym">),</span> <span class="num">7</span><span class="sym">)</span>
<span class="kwa">return</span>

nsievebits<span class="sym">:</span> procedure
arg m
count <span class="sym">=</span> <span class="num">0</span>
bits<span class="sym">. =</span> <span class="num">1</span> <span class="com">/* bit array */</span>
<span class="kwa">do</span> i <span class="sym">=</span> <span class="num">2</span> to m <span class="sym">-</span> <span class="num">1</span>
	<span class="kwa">if</span> bits<span class="sym">.</span>i <span class="sym">==</span> <span class="num">1</span> then <span class="kwa">do</span>
		count <span class="sym">=</span> count <span class="sym">+</span> <span class="num">1</span>
		<span class="kwa">do</span> j <span class="sym">=</span> i <span class="sym">+</span> i to m <span class="sym">-</span> <span class="num">1</span> by i
			bits<span class="sym">.</span>j <span class="sym">=</span> <span class="num">0</span>
		end j
	end
end i
<span class="kwa">return</span> count
