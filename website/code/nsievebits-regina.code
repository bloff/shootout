<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   Contributed by Dennis Decker Jensen</span>
<span class="com">*/</span>

<span class="kwa">arg</span> n .
<span class="kwa">if</span> n <span class="sym">&gt;=</span> <span class="num">0</span> <span class="kwa">then call</span> test n
<span class="kwa">if</span> n <span class="sym">&gt;=</span> <span class="num">1</span> <span class="kwa">then call</span> test n<span class="sym">-</span><span class="num">1</span>
<span class="kwa">if</span> n <span class="sym">&gt;=</span> <span class="num">2</span> <span class="kwa">then call</span> test n<span class="sym">-</span><span class="num">2</span>
<span class="kwa">exit</span>

test<span class="sym">:</span> <span class="kwa">procedure</span>
<span class="kwa">arg</span> n
m <span class="sym">=</span> <span class="num">10000</span> <span class="sym">*</span> <span class="num">2</span><span class="sym">**</span>n
<span class="kwa">say</span> <span class="str">&quot;Primes up to&quot;</span> <span class="kwb">right</span><span class="sym">(</span>m<span class="sym">,</span> <span class="num">8</span><span class="sym">)</span> <span class="kwb">right</span><span class="sym">(</span>nsievebits<span class="sym">(</span>m<span class="sym">),</span> <span class="num">7</span><span class="sym">)</span>
<span class="kwa">return</span>

nsievebits<span class="sym">:</span> <span class="kwa">procedure</span>
<span class="kwa">arg</span> m
count <span class="sym">=</span> <span class="num">0</span>
bits. <span class="sym">=</span> <span class="num">1</span> <span class="com">/* bit array */</span>
<span class="kwa">do</span> i <span class="sym">=</span> <span class="num">2</span> <span class="kwa">to</span> m <span class="sym">-</span> <span class="num">1</span>
	<span class="kwa">if</span> bits.i <span class="sym">==</span> <span class="num">1</span> <span class="kwa">then do</span>
		count <span class="sym">=</span> count <span class="sym">+</span> <span class="num">1</span>
		<span class="kwa">do</span> j <span class="sym">=</span> i <span class="sym">+</span> i <span class="kwa">to</span> m <span class="sym">-</span> <span class="num">1</span> <span class="kwa">by</span> i
			bits.j <span class="sym">=</span> <span class="num">0</span>
		<span class="kwa">end</span> j
	<span class="kwa">end</span>
<span class="kwa">end</span> i
<span class="kwa">return</span> count
