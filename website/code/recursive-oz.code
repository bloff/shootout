<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Great Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Code based on / inspired by existing, relevant Shootout submissions</span>
<span class="slc">%</span>
<span class="slc">% Floating point conversion routines courtesy Juergen Stuber and Jorge</span>
<span class="slc">% Marques Pelizzoni [previously used in other Mozart/Oz Shooutout</span>
<span class="slc">% submissions].</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

<span class="kwa">functor</span>

<span class="kwa">import</span>
  System Application

<span class="kwb">define</span> N NFlt NAdj
  <span class="kwb">fun</span> <span class="sym">{</span>Ack X Y<span class="sym">}</span>
    <span class="kwb">if</span> X <span class="sym">==</span> <span class="num">0</span> <span class="kwb">then</span> Y <span class="sym">+</span> <span class="num">1</span>
    <span class="kwb">elseif</span> Y <span class="sym">==</span> <span class="num">0</span> <span class="kwb">then</span> <span class="sym">{</span>Ack <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> <span class="num">1</span><span class="sym">}</span>
    <span class="kwb">else</span> <span class="sym">{</span>Ack <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1</span><span class="sym">) {</span>Ack X <span class="sym">(</span>Y <span class="sym">-</span> <span class="num">1</span><span class="sym">)}}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>Fib N<span class="sym">}</span>
    <span class="kwb">if</span> N <span class="sym">&lt;</span> <span class="num">2</span> <span class="kwb">then</span> <span class="num">1</span>
    <span class="kwb">else</span> <span class="sym">{</span>Fib <span class="sym">(</span>N <span class="sym">-</span> <span class="num">2</span><span class="sym">)} + {</span>Fib <span class="sym">(</span>N <span class="sym">-</span> <span class="num">1</span><span class="sym">)}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FibFlt N<span class="sym">}</span>
    <span class="kwb">if</span> N <span class="sym">&lt;</span> <span class="num">2.0</span> <span class="kwb">then</span> <span class="num">1.0</span>
    <span class="kwb">else</span> <span class="sym">{</span>FibFlt <span class="sym">(</span>N <span class="sym">-</span> <span class="num">2.0</span><span class="sym">)} + {</span>FibFlt <span class="sym">(</span>N <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>Tak X Y Z<span class="sym">}</span>
    <span class="kwb">if</span> Y <span class="sym">&lt;</span> X <span class="kwb">then</span> <span class="sym">{</span>Tak <span class="sym">{</span>Tak <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> Y Z<span class="sym">} {</span>Tak <span class="sym">(</span>Y <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> Z X<span class="sym">} {</span>Tak <span class="sym">(</span>Z <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> X Y<span class="sym">}}</span>
    <span class="kwb">else</span> Z
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>TakFlt X Y Z<span class="sym">}</span>
    <span class="kwb">if</span> Y <span class="sym">&lt;</span> X <span class="kwb">then</span> <span class="sym">{</span>TakFlt <span class="sym">{</span>TakFlt <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> Y Z<span class="sym">} {</span>TakFlt <span class="sym">(</span>Y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> Z X<span class="sym">} {</span>TakFlt <span class="sym">(</span>Z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> X Y<span class="sym">}}</span>
    <span class="kwb">else</span> Z
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>CmdlNArg Nth Default<span class="sym">}</span>
    N Nt <span class="kwb">in</span>
    <span class="kwa">try</span>
      Nt <span class="sym">= {</span>String.toInt <span class="sym">{</span>Application.getArgs plain<span class="sym">}</span>.Nth<span class="sym">}</span>
      N <span class="sym">=</span> <span class="kwb">if</span> Nt <span class="sym">&lt;</span> Default <span class="kwb">then</span> Default <span class="kwb">else</span> Nt <span class="kwb">end</span>
    <span class="kwa">catch</span> error<span class="sym">(</span>...<span class="sym">)</span> <span class="kwb">then</span>
      N <span class="sym">=</span> Default
    <span class="kwb">end</span>
    N
  <span class="kwb">end</span>

  <span class="slc">%% Floating Point Conversion Routines</span>
  <span class="kwb">fun</span> <span class="sym">{</span>FloatAbs X<span class="sym">}</span>
    <span class="kwb">if</span> X <span class="sym">&gt;=</span> <span class="num">0.0</span> <span class="kwb">then</span> X <span class="kwb">else</span> ~X <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatSquare X<span class="sym">}</span>
    X <span class="sym">*</span> X
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatPower X E<span class="sym">}</span>
    <span class="kwb">if</span> E<span class="sym">==</span><span class="num">0</span> <span class="kwb">then</span> <span class="num">1.0</span>
    <span class="kwb">elseif</span> E<span class="sym">&lt;</span><span class="num">0</span> <span class="kwb">then</span> <span class="kwa">raise</span> negativeExponent<span class="sym">(</span>E<span class="sym">)</span> <span class="kwb">end</span>
    <span class="kwb">else</span>
      <span class="kwb">if</span> E mod <span class="num">2</span> <span class="sym">==</span> <span class="num">1</span> <span class="kwb">then</span> X <span class="kwb">else</span> <span class="num">1.0</span> <span class="kwb">end</span>
      <span class="sym">* {</span>FloatSquare <span class="sym">{</span>FloatPower X E div <span class="num">2</span><span class="sym">}}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>MakePadding Ch L<span class="sym">}</span>
    <span class="kwb">if</span> L <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwb">then</span>
      Padding <span class="sym">= {</span>MakeList L<span class="sym">}</span>
    <span class="kwb">in</span>
      <span class="kwb">for</span> V <span class="kwb">in</span> Padding <span class="kwb">do</span> V <span class="sym">=</span> Ch <span class="kwb">end</span>
        Padding
      <span class="kwb">else</span>
        <span class="kwa">nil</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>PadLeft Ch String L<span class="sym">}</span>
    PL <span class="sym">=</span> L <span class="sym">- {</span>List.length String<span class="sym">}</span>
  <span class="kwb">in</span>
    <span class="sym">{</span>MakePadding Ch PL<span class="sym">}</span> # String
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatToVS F Prec<span class="sym">}</span>
    <span class="kwb">fun</span> <span class="sym">{</span>FractionToString Frac Prec<span class="sym">}</span>
      <span class="kwb">if</span> Prec <span class="sym">=&lt;</span> <span class="num">0</span> <span class="kwb">then</span> <span class="str">&quot;&quot;</span>
      <span class="kwb">elseif</span> Prec <span class="sym">&gt;</span> <span class="num">9</span> <span class="kwb">then</span> <span class="kwa">raise</span> excessivePrecision<span class="sym">(</span>Prec<span class="sym">)</span> <span class="kwb">end</span>
      <span class="kwb">else</span>
        Shifted <span class="sym">= {</span>FloatPower <span class="num">10.0</span> Prec<span class="sym">} *</span> Frac
        Digits <span class="sym">= {</span>FloatToInt <span class="sym">{</span>Round Shifted<span class="sym">}}</span>
        <span class="kwb">in</span> <span class="sym">{</span>PadLeft <span class="sym">&amp;</span><span class="num">0</span> <span class="sym">{</span>IntToString Digits<span class="sym">}</span> Prec<span class="sym">}</span>
      <span class="kwb">end</span>
    <span class="kwb">end</span>

    I <span class="sym">= {</span>FloatToInt <span class="sym">{</span><span class="kwb">if</span> F <span class="sym">&gt;=</span> <span class="num">0.0</span> <span class="kwb">then</span> Floor <span class="kwb">else</span> Ceil <span class="kwb">end</span> F<span class="sym">}}</span>
    Frac <span class="sym">= {</span>FloatAbs F <span class="sym">- {</span>IntToFloat I<span class="sym">}}</span>
  <span class="kwb">in</span>
    <span class="sym">{</span>IntToString I<span class="sym">}</span> # <span class="str">&quot;.&quot;</span> # <span class="sym">{</span>FractionToString Frac Prec<span class="sym">}</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatToString F Prec<span class="sym">}</span>
    P <span class="sym">=</span> <span class="kwb">fun</span> <span class="sym">{</span>$ C<span class="sym">}</span> <span class="kwb">if</span> C <span class="sym">== &amp;</span>~ <span class="kwb">then</span> <span class="sym">&amp;-</span> <span class="kwb">else</span> C <span class="kwb">end end</span>
    <span class="kwb">in</span>
    <span class="sym">{</span>Map <span class="sym">{</span>VirtualString.toString <span class="sym">{</span>FloatToVS F Prec<span class="sym">}}</span> P<span class="sym">}</span>
  <span class="kwb">end</span>

<span class="kwb">in</span>
  N <span class="sym">= {</span>CmdlNArg <span class="num">1 1</span><span class="sym">}</span> NFlt <span class="sym">= {</span>Int.toFloat N<span class="sym">}</span> NAdj <span class="sym">=</span> N <span class="sym">-</span> <span class="num">1</span>

  <span class="sym">{</span>System.showInfo <span class="str">&quot;Ack(3,&quot;</span> # N # <span class="str">&quot;): &quot;</span> # <span class="sym">{</span>Ack <span class="num">3</span> N<span class="sym">}}</span>
  <span class="sym">{</span>System.showInfo <span class="str">&quot;Fib(&quot;</span> # <span class="sym">(</span><span class="num">27.0</span> <span class="sym">+</span> NFlt<span class="sym">)</span> # <span class="str">&quot;): &quot;</span> # <span class="sym">{</span>FloatToString <span class="sym">{</span>FibFlt <span class="sym">(</span><span class="num">27.0</span> <span class="sym">+</span> NFlt<span class="sym">)}</span> <span class="num">1</span><span class="sym">}}</span>

  <span class="sym">{</span>System.showInfo <span class="str">&quot;Tak(&quot;</span> # NAdj <span class="sym">*</span> <span class="num">3</span> # <span class="str">&quot;,&quot;</span> # NAdj <span class="sym">*</span> <span class="num">2</span> # <span class="str">&quot;,&quot;</span> # NAdj # <span class="str">&quot;): &quot;</span> # <span class="sym">{</span>Tak <span class="sym">(</span>NAdj <span class="sym">*</span> <span class="num">3</span><span class="sym">) (</span>NAdj <span class="sym">*</span> <span class="num">2</span><span class="sym">)</span> NAdj<span class="sym">}}</span>

  <span class="sym">{</span>System.showInfo <span class="str">&quot;Fib(3): &quot;</span> # <span class="sym">{</span>Fib <span class="num">3</span><span class="sym">}}</span>
  <span class="sym">{</span>System.showInfo <span class="str">&quot;Tak(3.0,2.0,1.0): &quot;</span> # <span class="sym">{</span>FloatToString <span class="sym">{</span>TakFlt <span class="num">3.0 2.0 1.0</span><span class="sym">}</span> <span class="num">1</span><span class="sym">}}</span>

  <span class="sym">{</span>Application.exit <span class="num">0</span><span class="sym">}</span>
<span class="kwb">end</span>

