<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% modified by Isaac Gouy</span>
<span class="slc">% ----------------------------------------------------------------------</span>

<span class="kwa">functor</span>

<span class="kwa">import</span>
  System<span class="sym">(</span>showInfo<span class="sym">)</span> Application<span class="sym">(</span>exit getArgs<span class="sym">)</span>
   S <span class="kwb">at</span> <span class="str">'../../Include/oz/shootout.ozf'</span>

<span class="kwb">define</span>



  <span class="kwb">fun</span> <span class="sym">{</span>Ack X Y<span class="sym">}</span>
    <span class="kwb">if</span> X <span class="sym">==</span> <span class="num">0</span> <span class="kwb">then</span> Y <span class="sym">+</span> <span class="num">1</span>
    <span class="kwb">elseif</span> Y <span class="sym">==</span> <span class="num">0</span> <span class="kwb">then</span> <span class="sym">{</span>Ack <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> <span class="num">1</span><span class="sym">}</span>
    <span class="kwb">else</span> <span class="sym">{</span>Ack <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1</span><span class="sym">) {</span>Ack X <span class="sym">(</span>Y <span class="sym">-</span> <span class="num">1</span><span class="sym">)}}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>



  <span class="kwb">fun</span> <span class="sym">{</span>Fib N<span class="sym">}</span>
    <span class="kwb">if</span> N <span class="sym">&lt;</span> <span class="num">2</span> <span class="kwb">then</span> <span class="num">1</span>
    <span class="kwb">else</span> <span class="sym">{</span>Fib <span class="sym">(</span>N <span class="sym">-</span> <span class="num">2</span><span class="sym">)} + {</span>Fib <span class="sym">(</span>N <span class="sym">-</span> <span class="num">1</span><span class="sym">)}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>



  <span class="kwb">fun</span> <span class="sym">{</span>FibFlt N<span class="sym">}</span>
    <span class="kwb">if</span> N <span class="sym">&lt;</span> <span class="num">2.0</span> <span class="kwb">then</span> <span class="num">1.0</span>
    <span class="kwb">else</span> <span class="sym">{</span>FibFlt <span class="sym">(</span>N <span class="sym">-</span> <span class="num">2.0</span><span class="sym">)} + {</span>FibFlt <span class="sym">(</span>N <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>



  <span class="kwb">fun</span> <span class="sym">{</span>Tak X Y Z<span class="sym">}</span>
    <span class="kwb">if</span> Y <span class="sym">&lt;</span> X <span class="kwb">then</span> <span class="sym">{</span>Tak <span class="sym">{</span>Tak <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> Y Z<span class="sym">} {</span>Tak <span class="sym">(</span>Y <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> Z X<span class="sym">} {</span>Tak <span class="sym">(</span>Z <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> X Y<span class="sym">}}</span>
    <span class="kwb">else</span> Z
    <span class="kwb">end</span>
  <span class="kwb">end</span>



  <span class="kwb">fun</span> <span class="sym">{</span>TakFlt X Y Z<span class="sym">}</span>
    <span class="kwb">if</span> Y <span class="sym">&lt;</span> X <span class="kwb">then</span> <span class="sym">{</span>TakFlt <span class="sym">{</span>TakFlt <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> Y Z<span class="sym">} {</span>TakFlt <span class="sym">(</span>Y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> Z X<span class="sym">} {</span>TakFlt <span class="sym">(</span>Z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> X Y<span class="sym">}}</span>
    <span class="kwb">else</span> Z
    <span class="kwb">end</span>
  <span class="kwb">end</span>



  <span class="kwb">fun</span> <span class="sym">{</span>CmdlNArg Nth Default<span class="sym">}</span>
    N Nt <span class="kwb">in</span>
    <span class="kwa">try</span>
      Nt <span class="sym">= {</span>String.toInt <span class="sym">{</span>Application.getArgs plain<span class="sym">}</span>.Nth<span class="sym">}</span>
      N <span class="sym">=</span> <span class="kwb">if</span> Nt <span class="sym">&lt;</span> Default <span class="kwb">then</span> Default <span class="kwb">else</span> Nt <span class="kwb">end</span>
    <span class="kwa">catch</span> error<span class="sym">(</span>...<span class="sym">)</span> <span class="kwb">then</span>
      N <span class="sym">=</span> Default
    <span class="kwb">end</span>
    N
  <span class="kwb">end</span>


  N NFlt NAdj


<span class="kwb">in</span>
  N <span class="sym">= {</span>CmdlNArg <span class="num">1 1</span><span class="sym">}</span> NFlt <span class="sym">= {</span>Int.toFloat N<span class="sym">}</span> NAdj <span class="sym">=</span> N <span class="sym">-</span> <span class="num">1</span>

  <span class="sym">{</span>System.showInfo <span class="str">&quot;Ack(3,&quot;</span> # N # <span class="str">&quot;): &quot;</span> # <span class="sym">{</span>Ack <span class="num">3</span> N<span class="sym">}}</span>
  <span class="sym">{</span>System.showInfo <span class="str">&quot;Fib(&quot;</span> # <span class="sym">(</span><span class="num">27.0</span> <span class="sym">+</span> NFlt<span class="sym">)</span> # <span class="str">&quot;): &quot;</span> # <span class="sym">{</span>S.floatToString <span class="sym">{</span>FibFlt <span class="sym">(</span><span class="num">27.0</span> <span class="sym">+</span> NFlt<span class="sym">)}</span> <span class="num">1</span><span class="sym">}}</span>

  <span class="sym">{</span>System.showInfo <span class="str">&quot;Tak(&quot;</span> # NAdj <span class="sym">*</span> <span class="num">3</span> # <span class="str">&quot;,&quot;</span> # NAdj <span class="sym">*</span> <span class="num">2</span> # <span class="str">&quot;,&quot;</span> # NAdj # <span class="str">&quot;): &quot;</span> # <span class="sym">{</span>Tak <span class="sym">(</span>NAdj <span class="sym">*</span> <span class="num">3</span><span class="sym">) (</span>NAdj <span class="sym">*</span> <span class="num">2</span><span class="sym">)</span> NAdj<span class="sym">}}</span>

  <span class="sym">{</span>System.showInfo <span class="str">&quot;Fib(3): &quot;</span> # <span class="sym">{</span>Fib <span class="num">3</span><span class="sym">}}</span>
  <span class="sym">{</span>System.showInfo <span class="str">&quot;Tak(3.0,2.0,1.0): &quot;</span> # <span class="sym">{</span>S.floatToString <span class="sym">{</span>TakFlt <span class="num">3.0 2.0 1.0</span><span class="sym">}</span> <span class="num">1</span><span class="sym">}}</span>

  <span class="sym">{</span>Application.exit <span class="num">0</span><span class="sym">}</span>
<span class="kwb">end</span>

