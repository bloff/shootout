<span class="line">    1 </span>define main<span class="sym">()
</span><span class="line">    2 </span><span class="sym">{
</span><span class="line">    3 </span><span class="sym"></span>   variable count <span class="sym">=</span> Assoc_Type<span class="sym">[</span>Int_Type<span class="sym">,</span> <span class="num">0</span><span class="sym">];
</span><span class="line">    4 </span><span class="sym"></span>   foreach <span class="sym">(</span>stdin<span class="sym">)</span> <span class="kwa">using</span> <span class="sym">(</span><span class="str">&quot;line&quot;</span><span class="sym">)
</span><span class="line">    5 </span><span class="sym">     {
</span><span class="line">    6 </span><span class="sym"></span>        variable line <span class="sym">= ();
</span><span class="line">    7 </span><span class="sym"></span>        foreach <span class="sym">(</span>strtok <span class="sym">(</span>strlow <span class="sym">(</span>line<span class="sym">),</span> <span class="str">&quot;^a-z&quot;</span><span class="sym">))
</span><span class="line">    8 </span><span class="sym">          {
</span><span class="line">    9 </span><span class="sym"></span>             variable word <span class="sym">= ();
</span><span class="line">   10 </span><span class="sym"></span>             count <span class="sym">[</span>word<span class="sym">] +=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   11 </span><span class="sym">          }
</span><span class="line">   12 </span><span class="sym">     }
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span>   variable words <span class="sym">=</span> assoc_get_keys <span class="sym">(</span>count<span class="sym">);
</span><span class="line">   15 </span><span class="sym"></span>   variable freqs <span class="sym">=</span> assoc_get_values <span class="sym">(</span>count<span class="sym">);
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym"></span>   variable i <span class="sym">=</span> array_sort <span class="sym">(</span>array_map <span class="sym">(</span>String_Type<span class="sym">, &amp;</span>sprintf<span class="sym">,</span> <span class="str">&quot;%12d&quot;</span><span class="sym">,</span> freqs<span class="sym">)
</span><span class="line">   18 </span><span class="sym">                            +</span> words<span class="sym">);
</span><span class="line">   19 </span><span class="sym"></span>   i <span class="sym">=</span> i<span class="sym">[[-</span><span class="num">1</span><span class="sym">:</span><span class="num">0</span><span class="sym">:-</span><span class="num">1</span><span class="sym">]];
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym"></span>   foreach <span class="sym">(</span>i<span class="sym">)
</span><span class="line">   22 </span><span class="sym">     {
</span><span class="line">   23 </span><span class="sym"></span>        i <span class="sym">= ();
</span><span class="line">   24 </span><span class="sym">        ()=</span>fprintf <span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;%7d %s</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> freqs<span class="sym">[</span>i<span class="sym">],</span> words<span class="sym">[</span>i<span class="sym">]);
</span><span class="line">   25 </span><span class="sym">     }
</span><span class="line">   26 </span><span class="sym">}
</span><span class="line">   27 </span><span class="sym">
</span><span class="line">   28 </span><span class="sym"></span>main<span class="sym">();</span>
