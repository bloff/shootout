<span class="com">/* The Great Computer Language Shootout
    http://shootout.alioth.debian.org/
   contributed by Isaac Gouy

To compile:
	   nicec --sourcepath=.. -d=. -a objinst.jar objinst

To run:
   java -ea -jar objinst.jar 1000000
*/</span>


<span class="kwa">import</span> methcall<span class="sym">;</span> <span class="slc">// reuse Toggle &amp; NToggle 
</span>                 <span class="slc">// &amp; toSinglePositiveInt
</span>
<span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span>   <span class="kwa">let</span> n <span class="sym">=</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">);

</span>   var toggle <span class="sym">=</span> <span class="kwa">new</span> Toggle<span class="sym">();
</span>   <span class="kwa">for</span><span class="sym">(</span>var i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span><span class="num">5</span><span class="sym">;</span> i<span class="sym">++)</span> println<span class="sym">(</span> toggle<span class="sym">.</span>activate<span class="sym">.</span>value <span class="sym">);
</span>   <span class="kwa">for</span><span class="sym">(</span>var i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++)</span> toggle <span class="sym">=</span> <span class="kwa">new</span> Toggle<span class="sym">();

</span>   print<span class="sym">(</span><span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">);

</span>   var ntoggle <span class="sym">=</span> <span class="kwa">new</span> NToggle<span class="sym">(</span>toggleTrigger<span class="sym">:</span> <span class="num">3</span><span class="sym">);
</span>   <span class="kwa">for</span><span class="sym">(</span>var i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span><span class="num">8</span><span class="sym">;</span> i<span class="sym">++)</span> println<span class="sym">(</span> ntoggle<span class="sym">.</span>activate<span class="sym">.</span>value <span class="sym">);
</span>   <span class="kwa">for</span><span class="sym">(</span>var i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++)</span> ntoggle <span class="sym">=</span> <span class="kwa">new</span> NToggle<span class="sym">(</span>toggleTrigger<span class="sym">:</span> <span class="num">3</span><span class="sym">);
}</span>
