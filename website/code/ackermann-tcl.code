<span class="line">    1 </span><span class="slc">#!/usr/bin/tclsh
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: ackermann-tcl.code,v 1.3 2004-11-11 07:13:56 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">set</span> NUM <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$NUM</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">} {
</span><span class="line">    7 </span><span class="sym"></span>    <span class="kwa">set</span> NUM <span class="num">1
</span><span class="line">    8 </span><span class="num"></span><span class="sym">}
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym"></span><span class="kwa">proc</span> ack <span class="sym">{</span>m n<span class="sym">} {
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$m</span> <span class="sym">==</span> <span class="num">0</span><span class="sym">} {
</span><span class="line">   12 </span><span class="sym"></span>        <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$n</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">}]
</span><span class="line">   13 </span><span class="sym">    }</span> elseif <span class="sym">{</span><span class="kwb">$n</span> <span class="sym">==</span> <span class="num">0</span><span class="sym">} {
</span><span class="line">   14 </span><span class="sym"></span>        <span class="kwa">return</span> <span class="sym">[</span>ack <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$m</span> <span class="num">- 1</span><span class="sym">}]</span> <span class="num">1</span><span class="sym">]
</span><span class="line">   15 </span><span class="sym">    }</span> else <span class="sym">{
</span><span class="line">   16 </span><span class="sym"></span>        <span class="kwa">return</span> <span class="sym">[</span>ack <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$m</span> <span class="num">- 1</span><span class="sym">}] [</span>ack <span class="kwb">$m</span> <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$n</span> <span class="num">- 1</span><span class="sym">}]]]
</span><span class="line">   17 </span><span class="sym">    }
</span><span class="line">   18 </span><span class="sym">}
</span><span class="line">   19 </span><span class="sym">
</span><span class="line">   20 </span><span class="sym"></span><span class="kwa">set</span> ack <span class="sym">[</span>ack <span class="num">3</span> <span class="kwb">$NUM</span><span class="sym">]
</span><span class="line">   21 </span><span class="sym"></span><span class="kwa">puts</span> <span class="str">&quot;Ack(3,$NUM): $ack&quot;</span>
