<span class="str">&quot;  The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy

   To run: gst -QI /usr/share/gnu-smalltalk/gst.im dispatch.gst -a 1000
&quot;</span>

Object subclass<span class="sym">:</span> <span class="slc">#BottleState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">'tag'</span>
classVariableNames<span class="sym">:</span> <span class="str">'Empty Full Sealed'</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!


!</span>BottleState class methodsFor<span class="sym">:</span> <span class="str">'class initialization'</span><span class="sym">!

</span>initialize
   Empty <span class="sym">:=</span> EmptyState new tag<span class="sym">:</span> <span class="num">1</span>.
   Full <span class="sym">:=</span> FullState new tag<span class="sym">:</span> <span class="num">2</span>.
   Sealed <span class="sym">:=</span> SealedState new tag<span class="sym">:</span> <span class="num">3</span> <span class="sym">! !

!</span>BottleState class methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!

</span>initialState
   ^Empty <span class="sym">! !

!</span>BottleState methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!

</span>tag
   ^tag <span class="sym">!

</span>tag<span class="sym">:</span> anInteger
   <span class="str">&quot;only exists for checksum&quot;</span>
   tag <span class="sym">:=</span> anInteger <span class="sym">! !

!</span>BottleState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   self subclassResponsibility <span class="sym">! !


</span>BottleState subclass<span class="sym">:</span> <span class="slc">#EmptyState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>EmptyState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   aBottle state<span class="sym">:</span> Full <span class="sym">! !



</span>BottleState subclass<span class="sym">:</span> <span class="slc">#FullState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>FullState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   aBottle state<span class="sym">:</span> Sealed <span class="sym">! !



</span>BottleState subclass<span class="sym">:</span> <span class="slc">#SealedState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>SealedState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   aBottle state<span class="sym">:</span> Empty <span class="sym">! !



</span>BottleState subclass<span class="sym">:</span> <span class="slc">#PressurizedBottleState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">'UnpressurizedEmpty UnpressurizedFull PressurizedUnsealed PressurizedSealed'</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>PressurizedBottleState class methodsFor<span class="sym">:</span> <span class="str">'class initialization'</span><span class="sym">!

</span>initialize
   UnpressurizedEmpty <span class="sym">:=</span> UnpressurizedEmptyState new tag<span class="sym">:</span> <span class="num">4</span>.
   UnpressurizedFull <span class="sym">:=</span> UnpressurizedFullState new tag<span class="sym">:</span> <span class="num">5</span>.
   PressurizedUnsealed <span class="sym">:=</span> PressurizedUnsealedState new tag<span class="sym">:</span> <span class="num">6</span>.
   PressurizedSealed <span class="sym">:=</span> PressurizedSealedState new tag<span class="sym">:</span> <span class="num">7</span> <span class="sym">! !

!</span>PressurizedBottleState class methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!

</span>initialState
   ^UnpressurizedEmpty <span class="sym">! !



</span>PressurizedBottleState subclass<span class="sym">:</span> <span class="slc">#UnpressurizedEmptyState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>UnpressurizedEmptyState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   aBottle state<span class="sym">:</span> UnpressurizedFull <span class="sym">! !



</span>PressurizedBottleState subclass<span class="sym">:</span> <span class="slc">#UnpressurizedFullState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>UnpressurizedFullState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   aBottle state<span class="sym">:</span> PressurizedUnsealed <span class="sym">! !



</span>PressurizedBottleState subclass<span class="sym">:</span> <span class="slc">#PressurizedUnsealedState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>PressurizedUnsealedState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   aBottle state<span class="sym">:</span> PressurizedSealed <span class="sym">! !



</span>PressurizedBottleState subclass<span class="sym">:</span> <span class="slc">#PressurizedSealedState
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>PressurizedSealedState methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span><span class="kwa">next</span><span class="sym">:</span> aBottle
   aBottle state<span class="sym">:</span> UnpressurizedEmpty <span class="sym">! !



</span>Object subclass<span class="sym">:</span> <span class="slc">#Bottle
</span>instanceVariableNames<span class="sym">:</span> <span class="str">'state id'</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>Bottle class methodsFor<span class="sym">:</span> <span class="str">'instance creation'</span><span class="sym">!

</span>new<span class="sym">:</span> anInteger
   ^super new initialize<span class="sym">:</span> anInteger <span class="sym">! !

!</span>Bottle class methodsFor<span class="sym">:</span> <span class="str">'private'</span><span class="sym">!

</span>initialState
   ^BottleState initialState<span class="sym">! !

!</span>Bottle methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span>empty
   state <span class="kwa">next</span><span class="sym">:</span> self <span class="sym">!

</span>fill
   state <span class="kwa">next</span><span class="sym">:</span> self <span class="sym">!

</span>seal
   state <span class="kwa">next</span><span class="sym">:</span> self <span class="sym">!

</span>cycle
   self fill<span class="sym">;</span> seal<span class="sym">;</span> empty <span class="sym">! !


!</span>Bottle methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!

</span>check<span class="sym">:</span> anInteger
   ^state tag <span class="sym">+</span> id <span class="sym">+</span> anInteger <span class="sym">!

</span>checkWith<span class="sym">:</span> aBottle2 with<span class="sym">:</span> aBottle3 with<span class="sym">:</span> aBottle4 with<span class="sym">:</span> aBottle5 with<span class="sym">:</span> anInteger
   <span class="sym">|</span> c <span class="sym">|
</span>   self cycle.
   aBottle2 cycle.
   aBottle3 cycle.
   aBottle4 cycle.
   aBottle5 cycle.

   c <span class="sym">:=</span> anInteger rem<span class="sym">:</span> <span class="num">2</span>.
   ^<span class="sym">(</span>self check<span class="sym">:</span> c<span class="sym">) + (</span>aBottle2 check<span class="sym">:</span> c<span class="sym">) + (</span>aBottle3 check<span class="sym">:</span> c<span class="sym">) +
      (</span>aBottle4 check<span class="sym">:</span> c<span class="sym">) + (</span>aBottle5 check<span class="sym">:</span> c<span class="sym">) !

</span>state<span class="sym">:</span> aBottleState
   state <span class="sym">:=</span> aBottleState <span class="sym">! !

!</span>Bottle methodsFor<span class="sym">:</span> <span class="str">'initialize-release'</span><span class="sym">!

</span>initialize<span class="sym">:</span> anInteger
   state <span class="sym">:=</span> self class initialState.
   id <span class="sym">:=</span> anInteger <span class="sym">! !



</span>Bottle subclass<span class="sym">:</span> <span class="slc">#PressurizedBottle
</span>instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
classVariableNames<span class="sym">:</span> <span class="str">''</span>
poolDictionaries<span class="sym">:</span> <span class="str">''</span>
category<span class="sym">:</span> nil <span class="sym">!

!</span>PressurizedBottle class methodsFor<span class="sym">:</span> <span class="str">'private'</span><span class="sym">!

</span>initialState
   ^PressurizedBottleState initialState<span class="sym">! !

!</span>PressurizedBottle methodsFor<span class="sym">:</span> <span class="str">'controlling'</span><span class="sym">!

</span>cycle
   self fill<span class="sym">;</span> pressurize<span class="sym">;</span> seal<span class="sym">;</span> empty <span class="sym">!

</span>pressurize
   state <span class="kwa">next</span><span class="sym">:</span> self <span class="sym">! !



|</span> n b1 b2 b3 b4 b5 b6 b7 b8 b9 b0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p0 check <span class="sym">|

</span>BottleState initialize.
PressurizedBottleState initialize.

n <span class="sym">:=</span> Smalltalk arguments first asInteger.

b1 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">1</span>. b2 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">2</span>.
b3 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">3</span>. b4 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">4</span>.
b5 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">5</span>. b6 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">6</span>.
b7 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">7</span>. b8 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">8</span>.
b9 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">9</span>. b0 <span class="sym">:=</span> Bottle new<span class="sym">:</span> <span class="num">0</span>.

p1 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">1</span>. p2 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">2</span>.
p3 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">3</span>. p4 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">4</span>.
p5 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">5</span>. p6 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">6</span>.
p7 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">7</span>. p8 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">8</span>.
p9 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">9</span>. p0 <span class="sym">:=</span> PressurizedBottle new<span class="sym">:</span> <span class="num">0</span>.

check <span class="sym">:=</span> <span class="num">0</span>.
<span class="num">1</span> to<span class="sym">:</span> n <span class="kwa">do</span><span class="sym">: [:</span>i<span class="sym">|
</span>   check <span class="sym">:=</span> check <span class="sym">+ (</span>b1 checkWith<span class="sym">:</span> b2 with<span class="sym">:</span> b3 with<span class="sym">:</span> b4 with<span class="sym">:</span> b5 with<span class="sym">:</span> i<span class="sym">)</span>.
   check <span class="sym">:=</span> check <span class="sym">+ (</span>b6 checkWith<span class="sym">:</span> b7 with<span class="sym">:</span> b8 with<span class="sym">:</span> b9 with<span class="sym">:</span> b0 with<span class="sym">:</span> i<span class="sym">)</span>.

   check <span class="sym">:=</span> check <span class="sym">+ (</span>p1 checkWith<span class="sym">:</span> p2 with<span class="sym">:</span> p3 with<span class="sym">:</span> p4 with<span class="sym">:</span> p5 with<span class="sym">:</span> i<span class="sym">)</span>.
   check <span class="sym">:=</span> check <span class="sym">- (</span>p6 checkWith<span class="sym">:</span> p7 with<span class="sym">:</span> p8 with<span class="sym">:</span> p9 with<span class="sym">:</span> p0 with<span class="sym">:</span> i<span class="sym">)</span>.
<span class="sym">]</span>.

check printString displayNl<span class="sym">!
</span>
