<span class="line">    1 </span><span class="slc">%%  Always 10000's times faster to append to the head of 
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%%  the list (and then Reverse) rather than traversing 
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%%  the entire list in each append before adding to tail. 
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">%% 
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">%%  http://shootout.alioth.debian.org/ 
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">%% 
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">%%  contributed by Isaac Gouy 
</span><span class="line">    8 </span><span class="slc"></span><span class="slc">%% 
</span><span class="line">    9 </span><span class="slc"></span><span class="slc">%%  Usage: start from command line with 
</span><span class="line">   10 </span><span class="slc"></span><span class="slc">%%     ozc -x lists.oz -o lists.oz.exe 
</span><span class="line">   11 </span><span class="slc"></span><span class="slc">%%     lists.oz.exe 16 
</span><span class="line">   12 </span><span class="slc"></span>
<span class="line">   13 </span> <span class="kwa">functor
</span><span class="line">   14 </span><span class="kwa"> import</span> System Application
<span class="line">   15 </span>
<span class="line">   16 </span>  <span class="kwb">define
</span><span class="line">   17 </span><span class="kwb"> </span>   L1 L2 L3
<span class="line">   18 </span>
<span class="line">   19 </span>        <span class="kwb">fun</span> <span class="sym">{</span>MoveLeftRight Li2 Li3<span class="sym">}
</span><span class="line">   20 </span><span class="sym"> </span>      <span class="slc">%% list|item requires list to be traversed to end 
</span><span class="line">   21 </span><span class="slc"></span>      <span class="slc">%% before appending item. item|list always faster. 
</span><span class="line">   22 </span><span class="slc"></span>      <span class="slc">%% {Reverse item|list} result same as list|item 
</span><span class="line">   23 </span><span class="slc"></span>      <span class="kwa">local</span> H T <span class="kwb">in
</span><span class="line">   24 </span><span class="kwb">           if</span> Li2 <span class="sym">==</span> <span class="kwa">nil</span> <span class="kwb">then</span> Li2<span class="sym">|[{</span>Reverse Li3<span class="sym">}]
</span><span class="line">   25 </span><span class="sym"> </span>         <span class="kwb">else
</span><span class="line">   26 </span><span class="kwb"> </span>            H<span class="sym">|</span>T <span class="sym">=</span> Li2               <span class="slc">%% take from left 
</span><span class="line">   27 </span><span class="slc"></span>            <span class="sym">{</span>MoveLeftRight T H<span class="sym">|</span>Li3<span class="sym">}</span> <span class="slc">%% append to left, reverse later 
</span><span class="line">   28 </span><span class="slc"></span>         <span class="kwb">end
</span><span class="line">   29 </span><span class="kwb">       end
</span><span class="line">   30 </span><span class="kwb">    end
</span><span class="line">   31 </span><span class="kwb"> 
</span><span class="line">   32 </span><span class="kwb">    proc</span> <span class="sym">{</span>AssignL2L3 L<span class="sym">}
</span><span class="line">   33 </span><span class="sym"> </span>      <span class="slc">%% Factor out the assignment to allow simple reuse 
</span><span class="line">   34 </span><span class="slc"></span>      <span class="sym">{</span>Assign L2 <span class="sym">{</span>Nth L <span class="num">1</span><span class="sym">}}
</span><span class="line">   35 </span><span class="sym">       {</span>Assign L3 <span class="sym">{</span>List.last L<span class="sym">}}
</span><span class="line">   36 </span><span class="sym"> </span>   <span class="kwb">end
</span><span class="line">   37 </span><span class="kwb"> 
</span><span class="line">   38 </span><span class="kwb">    in
</span><span class="line">   39 </span><span class="kwb"> </span>   <span class="kwa">local</span> Args N Size <span class="kwb">in
</span><span class="line">   40 </span><span class="kwb"> </span>      <span class="sym">[</span>Args<span class="sym">] = {</span>Application.getArgs plain<span class="sym">}
</span><span class="line">   41 </span><span class="sym"> </span>      N <span class="sym">= {</span>String.toInt Args<span class="sym">}
</span><span class="line">   42 </span><span class="sym"> </span>      Size <span class="sym">=</span> <span class="num">10000
</span><span class="line">   43 </span><span class="num"> </span>      <span class="sym">{</span>NewCell <span class="kwa">nil</span> L1<span class="sym">}{</span>NewCell <span class="kwa">nil</span> L2<span class="sym">}{</span>NewCell <span class="kwa">nil</span> L3<span class="sym">}
</span><span class="line">   44 </span><span class="sym">     </span>      <span class="kwb">for</span> I <span class="kwb">in</span> <span class="num">1</span>..N <span class="kwb">do
</span><span class="line">   45 </span><span class="kwb"> </span>            <span class="slc">%% Create L1 
</span><span class="line">   46 </span><span class="slc"></span>         <span class="sym">{</span>Assign L1 <span class="sym">{</span>List.number <span class="num">1</span> Size <span class="num">1</span><span class="sym">} }
</span><span class="line">   47 </span><span class="sym"> </span>            <span class="slc">%% Copy L1 to L2 
</span><span class="line">   48 </span><span class="slc"></span>         <span class="sym">{</span>Assign L2 <span class="sym">{</span>List.take <span class="sym">{</span>Access L1<span class="sym">}</span> Size<span class="sym">} }
</span><span class="line">   49 </span><span class="sym">          {</span>Assign L3 <span class="kwa">nil</span><span class="sym">}
</span><span class="line">   50 </span><span class="sym"> 
</span><span class="line">   51 </span><span class="sym"> </span>            <span class="slc">%% Move items from L2 to L3 
</span><span class="line">   52 </span><span class="slc"></span>         <span class="sym">{</span>AssignL2L3 <span class="sym">{</span>MoveLeftRight <span class="sym">{</span>Access L2<span class="sym">}{</span>Access L3<span class="sym">} }}
</span><span class="line">   53 </span><span class="sym"> </span>            <span class="slc">%% Move items from L3 to L2 
</span><span class="line">   54 </span><span class="slc"></span>         <span class="sym">{</span>AssignL2L3 <span class="sym">{</span>Reverse <span class="sym">{</span>MoveLeftRight <span class="sym">{</span>Reverse <span class="sym">{</span>Access L3<span class="sym">}}{</span>Access L2<span class="sym">}} }}
</span><span class="line">   55 </span><span class="sym"> </span>            <span class="slc">%% Reverse L1 
</span><span class="line">   56 </span><span class="slc"></span>         <span class="sym">{</span>Assign L1 <span class="sym">{</span>Reverse <span class="sym">{</span>Access L1<span class="sym">}}}
</span><span class="line">   57 </span><span class="sym"> </span>         <span class="kwb">if</span> <span class="sym">{</span>Not <span class="sym">{</span>Nth <span class="sym">{</span>Access L1<span class="sym">}</span> <span class="num">1</span><span class="sym">} ==</span> Size andthen <span class="sym">{</span>Access L1<span class="sym">} == {</span>Access L2<span class="sym">}}</span> <span class="kwb">then
</span><span class="line">   58 </span><span class="kwb"> </span>            <span class="sym">{</span>System.showInfo <span class="str">'L1 != L2'</span><span class="sym">}
</span><span class="line">   59 </span><span class="sym"> </span>         <span class="kwb">end
</span><span class="line">   60 </span><span class="kwb">       end
</span><span class="line">   61 </span><span class="kwb"> </span>      <span class="sym">{</span>System.showInfo <span class="sym">{</span>Length <span class="sym">{</span>Access L1<span class="sym">}}}
</span><span class="line">   62 </span><span class="sym">    {</span>Application.exit <span class="num">0</span><span class="sym">}
</span><span class="line">   63 </span><span class="sym"> </span>   <span class="kwb">end
</span><span class="line">   64 </span><span class="kwb"> end</span> 
