<span class="line">    1 </span><span class="slc">// -*- mode: c++ -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// $Id: ackermann-gpp.code,v 1.3 2004-11-13 07:40:39 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="dir">#include &lt;iostream&gt;
</span><span class="line">    6 </span><span class="dir"></span><span class="dir">#include &lt;stdlib.h&gt;
</span><span class="line">    7 </span><span class="dir"></span>
<span class="line">    8 </span><span class="kwa">using namespace</span> std<span class="sym">;
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym"></span><span class="kwb">int</span> Ack<span class="sym">(</span><span class="kwb">int</span> M<span class="sym">,</span> <span class="kwb">int</span> N<span class="sym">) {</span> <span class="kwa">return</span><span class="sym">(</span>M ? <span class="sym">(</span>Ack<span class="sym">(</span>M<span class="num">-1</span><span class="sym">,</span>N ? Ack<span class="sym">(</span>M<span class="sym">,(</span>N<span class="num">-1</span><span class="sym">)) :</span> <span class="num">1</span><span class="sym">)) :</span> N<span class="sym">+</span><span class="num">1</span><span class="sym">); }
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym"></span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span><span class="line">   13 </span><span class="sym"></span>    <span class="kwb">int</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span>    cout <span class="sym">&lt;&lt;</span> <span class="str">&quot;Ack(3,&quot;</span> <span class="sym">&lt;&lt;</span> n <span class="sym">&lt;&lt;</span> <span class="str">&quot;): &quot;</span> <span class="sym">&lt;&lt;</span> Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">) &lt;&lt;</span> endl<span class="sym">;
</span><span class="line">   16 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
</span><span class="line">   17 </span><span class="sym">}</span>
