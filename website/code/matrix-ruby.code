<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">#!/usr/bin/ruby
</FONT></I><I><FONT COLOR="#B22222"># -*- mode: ruby -*-
</FONT></I><I><FONT COLOR="#B22222"># $Id: matrix-ruby.code,v 1.1 2004-11-02 08:52:36 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222"># http://www.bagley.org/~doug/shootout/
</FONT></I>
n = Integer(ARGV.shift || 1)

size = 30

<B><FONT COLOR="#A020F0">def</FONT></B> <B><FONT COLOR="#0000FF">mkmatrix</FONT></B>(rows, cols)
    count = 1
    mx = Array.new(rows)
    <B><FONT COLOR="#A020F0">for</FONT></B> i <B><FONT COLOR="#A020F0">in</FONT></B> 0 .. (rows - 1)
	row = Array.new(cols, 0)
	<B><FONT COLOR="#A020F0">for</FONT></B> j <B><FONT COLOR="#A020F0">in</FONT></B> 0 .. (cols - 1)
	    row[j] = count
	    count += 1
	<B><FONT COLOR="#A020F0">end</FONT></B>
	mx[i] = row
    <B><FONT COLOR="#A020F0">end</FONT></B>
    mx
<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">def</FONT></B> <B><FONT COLOR="#0000FF">mmult</FONT></B>(rows, cols, m1, m2)
    m3 = Array.new(rows)
    <B><FONT COLOR="#A020F0">for</FONT></B> i <B><FONT COLOR="#A020F0">in</FONT></B> 0 .. (rows - 1)
	row = Array.new(cols, 0)
	<B><FONT COLOR="#A020F0">for</FONT></B> j <B><FONT COLOR="#A020F0">in</FONT></B> 0 .. (cols - 1)
	    val = 0
	    <B><FONT COLOR="#A020F0">for</FONT></B> k <B><FONT COLOR="#A020F0">in</FONT></B> 0 .. (cols - 1)
		val += m1.at(i).at(k) * m2.at(k).at(j)
	    <B><FONT COLOR="#A020F0">end</FONT></B>
	    row[j] = val
	<B><FONT COLOR="#A020F0">end</FONT></B>
	m3[i] = row
    <B><FONT COLOR="#A020F0">end</FONT></B>
    m3
<B><FONT COLOR="#A020F0">end</FONT></B>

m1 = mkmatrix(size, size)
m2 = mkmatrix(size, size)
mm = Array.new
n.times <B><FONT COLOR="#A020F0">do</FONT></B>
    mm = mmult(size, size, m1, m2)
<B><FONT COLOR="#A020F0">end</FONT></B>
puts <B><FONT COLOR="#BC8F8F">&quot;#{mm[0][0]} #{mm[2][3]} #{mm[3][2]} #{mm[4][4]}&quot;</FONT></B></pre></td></tr></table>
