<span class="slc">#!/usr/bin/ruby</span>
<span class="slc"># -*- mode: ruby -*-</span>
<span class="slc"># $Id: matrix-ruby.code,v 1.12 2006-09-20 05:51:54 bfulgham Exp $</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Christopher Williams</span>

n = <span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">60</span>)<span class="sym">.</span>to_i
size = <span class="num">30</span>

<span class="kwa">def</span> <span class="kwd">mkmatrix</span><span class="sym">(</span>rows<span class="sym">,</span> cols)
  count = <span class="num">0</span>
  Array<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>rows) <span class="kwa">do</span> <span class="sym">|</span>i<span class="sym">|</span>
    Array<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>cols) <span class="sym">{|</span>j<span class="sym">|</span> count <span class="sym">+</span>=<span class="num">1</span> <span class="sym">}</span>
  <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">mmult</span><span class="sym">(</span>rows<span class="sym">,</span> cols<span class="sym">,</span> m1<span class="sym">,</span> m2)
  m3 = <span class="sym">[]</span>
  <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">0</span> <span class="sym">.. (</span>rows <span class="sym">-</span> <span class="num">1</span>)
    row = <span class="sym">[]</span>
    <span class="kwa">for</span> j <span class="kwa">in</span> <span class="num">0</span> <span class="sym">.. (</span>cols <span class="sym">-</span> <span class="num">1</span>)
      val = <span class="num">0</span>
      <span class="kwa">for</span> k <span class="kwa">in</span> <span class="num">0</span> <span class="sym">.. (</span>cols <span class="sym">-</span> <span class="num">1</span>)
        val <span class="sym">+</span>= m1<span class="sym">[</span>i<span class="sym">][</span>k<span class="sym">] *</span> m2<span class="sym">[</span>k<span class="sym">][</span>j<span class="sym">]</span>
      <span class="kwa">end</span>
      row <span class="sym">&lt;&lt;</span> val
    <span class="kwa">end</span>
    m3 <span class="sym">&lt;&lt;</span> row
  <span class="kwa">end</span>
  m3
<span class="kwa">end</span>

m1 = <span class="kwd">mkmatrix</span><span class="sym">(</span>size<span class="sym">,</span> size)
m2 = <span class="kwd">mkmatrix</span><span class="sym">(</span>size<span class="sym">,</span> size)
mm = <span class="sym">[]</span>
n<span class="sym">.</span>times <span class="kwa">do</span>
  mm = <span class="kwd">mmult</span><span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">,</span> m1<span class="sym">,</span> m2)
<span class="kwa">end</span>
puts <span class="str">&quot;#{mm[0][0]} #{mm[2][3]} #{mm[3][2]} #{mm[4][4]}&quot;</span>
