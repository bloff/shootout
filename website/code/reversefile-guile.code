<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="line">    2 </span><span class="sym">-</span>e main <span class="sym">-</span>s
<span class="line">    3 </span><span class="sym">!</span>#
<span class="line">    4 </span>
<span class="line">    5 </span><span class="slc">;;; $Id: reversefile-guile.code,v 1.3 2004-11-11 07:14:09 bfulgham Exp $
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">;;; from Brad Knotwell
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">   10 </span><span class="sym">  (</span>let <span class="sym">((</span>lines <span class="str">'()))
</span><span class="line">   11 </span><span class="str">    (do ((line (read-line) (read-line)))
</span><span class="line">   12 </span><span class="str">        ((eof-object? line) (map write-line lines))
</span><span class="line">   13 </span><span class="str">      (set! lines (cons line lines)))))</span>
