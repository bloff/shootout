#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>mzscheme <span class="sym">-</span>r
<span class="slc">;;; -*- mode: scheme -*-</span>
<span class="slc">;;; $Id: takfp-mzscheme.code,v 1.4 2006-06-18 01:54:03 bfulgham Exp $</span>
<span class="slc">;;; http://shootout.alioth.debian.org/</span>
<span class="slc">;;;</span>
<span class="slc">;;; Contributed by Will M. Farr</span>
<span class="slc">;;; Converted for MzScheme by Brent Fulgham</span>

<span class="sym">(</span>define <span class="sym">(</span>tak x y z<span class="sym">)</span>
  <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(&gt;=</span> y x<span class="sym">)</span>
      z
      <span class="sym">(</span>tak <span class="sym">(</span>tak <span class="sym">(-</span> x <span class="num">1.0</span><span class="sym">)</span> y z<span class="sym">)</span>
           <span class="sym">(</span>tak <span class="sym">(-</span> y <span class="num">1.0</span><span class="sym">)</span> z x<span class="sym">)</span>
           <span class="sym">(</span>tak <span class="sym">(-</span> z <span class="num">1.0</span><span class="sym">)</span> x y<span class="sym">))))</span>

<span class="sym">(</span>define <span class="sym">(</span>takn n<span class="sym">)</span>
  <span class="sym">(</span>tak <span class="sym">(*</span> <span class="num">3.0</span> n<span class="sym">) (*</span> <span class="num">2.0</span> n<span class="sym">) (*</span> <span class="num">1.0</span> n<span class="sym">)))</span>

<span class="sym">(</span>define <span class="sym">(</span>main argv<span class="sym">)</span>
	<span class="sym">(</span>display <span class="sym">(</span>takn <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span>vector<span class="sym">-</span>ref argv <span class="num">0</span><span class="sym">))))</span>
	<span class="sym">(</span>newline<span class="sym">))</span>

<span class="sym">(</span>main <span class="sym">(</span>current<span class="sym">-</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>arguments<span class="sym">))</span>
<span class="slc">; vim: ts=4 ft=scheme</span>
