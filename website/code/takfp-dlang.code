<span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   Contributed by Brent Fulgham

   converted to D by Dave Fladebo
   compile: dmd -O -inline -release takfp.d
*/</span>

import std<span class="sym">.</span>string<span class="sym">,</span> std<span class="sym">.</span>stdio<span class="sym">;

</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">char</span><span class="sym">[][]</span> args<span class="sym">)
{
</span>    <span class="kwb">int</span> n <span class="sym">=</span> args<span class="sym">.</span>length <span class="sym">&gt;</span> <span class="num">1</span> ? atoi<span class="sym">(</span>args<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">;

</span>    writefln<span class="sym">(</span><span class="str">&quot;%.1f&quot;</span><span class="sym">,</span> Tak<span class="sym">(</span>n<span class="sym">*</span><span class="num">3.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">2.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">1.0</span><span class="sym">));

</span>    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;
}

</span><span class="kwb">double</span> Tak<span class="sym">(</span><span class="kwb">double</span> x<span class="sym">,</span> <span class="kwb">double</span> y<span class="sym">,</span> <span class="kwb">double</span> z<span class="sym">)
{
</span>    <span class="kwa">if</span><span class="sym">(</span>y <span class="sym">&gt;=</span> x<span class="sym">)</span> <span class="kwa">return</span> z<span class="sym">;
</span>    <span class="kwa">return</span><span class="sym">(</span>Tak<span class="sym">(</span>Tak<span class="sym">(</span>x<span class="num">-1</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> Tak<span class="sym">(</span>y<span class="num">-1</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> Tak<span class="sym">(</span>z<span class="num">-1</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">)));
}</span>
