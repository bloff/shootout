<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   Contributed by Brent Fulgham</span>
<span class="com"></span>
<span class="com">   converted to D by Dave Fladebo</span>
<span class="com">   optimized to use float instead of double by Rafal Rusin</span>
<span class="com"></span>
<span class="com">   compile: dmd -O -inline -release takfp.d</span>
<span class="com">*/</span>

import std<span class="sym">.</span>string<span class="sym">,</span> std<span class="sym">.</span>stdio<span class="sym">;</span>

<span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">char</span><span class="sym">[][]</span> args<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwb">int</span> n <span class="sym">=</span> args<span class="sym">.</span>length <span class="sym">&gt;</span> <span class="num">1</span> ? atoi<span class="sym">(</span>args<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">;</span>

    writefln<span class="sym">(</span><span class="str">&quot;%.1f&quot;</span><span class="sym">,</span> Tak<span class="sym">!(</span><span class="kwb">float</span><span class="sym">)(</span>n<span class="sym">*</span><span class="num">3.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">2.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">1.0</span><span class="sym">));</span>

    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="kwc">template</span> Tak<span class="sym">(</span>T<span class="sym">)</span>
<span class="sym">{</span>
    T Tak<span class="sym">(</span>T x<span class="sym">,</span> T y<span class="sym">,</span> T z<span class="sym">)</span>
    <span class="sym">{</span>
        <span class="kwa">return</span><span class="sym">(</span>y <span class="sym">&lt;</span> x ? Tak<span class="sym">(</span>Tak<span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> Tak<span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> Tak<span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">)) :</span> z<span class="sym">);</span>
    <span class="sym">}</span>
<span class="sym">}</span>
