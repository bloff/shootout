\ <span class="sym">-*-</span> mode<span class="sym">:</span> forth <span class="sym">-*-</span>
\ $Id<span class="sym">:</span> except<span class="sym">.</span>gforth<span class="sym">,</span>v <span class="num">1.1 2004</span><span class="sym">/</span><span class="num">05</span><span class="sym">/</span><span class="num">25 02</span><span class="sym">:</span><span class="num">53</span><span class="sym">:</span><span class="num">22</span> bfulgham Exp $
\ http<span class="sym">:</span><span class="slc">//www.bagley.org/~doug/shootout/</span>
\ from Anton Ertl

\ read NUM from last command line argument
<span class="num">0</span><span class="sym">.</span> argc &#64; <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span>drop drop constant NUM

<span class="num">1</span> constant <span class="sym">*</span>hi<span class="sym">*</span>
<span class="num">2</span> constant <span class="sym">*</span>lo<span class="sym">*</span>

variable lo
variable hi

<span class="sym">:</span> <span class="kwd">blowup</span> <span class="sym">(</span> n <span class="sym">-- )</span>
    <span class="num">1</span> <span class="kwa">and if</span>
        <span class="sym">*</span>lo<span class="sym">*</span> <span class="kwa">throw</span>
    <span class="kwa">else</span>
        <span class="sym">*</span>hi<span class="sym">*</span> <span class="kwa">throw</span>
    endif <span class="sym">;</span>

<span class="sym">:</span> lo<span class="sym">-</span><span class="kwd">function</span> <span class="sym">(</span> n1 <span class="sym">--</span> n2 <span class="sym">)</span>
    <span class="sym">[</span><span class="str">'] blowup catch           ( n2 ball )</span>
<span class="str">    dup *lo* &lt;&gt; tuck and throw ( n2 f )</span>
<span class="str">    1+ lo +! ;</span>
<span class="str"></span>
<span class="str">: hi-function ( n1 -- n2 )</span>
<span class="str">    ['</span><span class="sym">]</span> lo<span class="sym">-</span>function <span class="kwa">catch</span>      <span class="sym">(</span> n2 ball <span class="sym">)</span>
    dup <span class="sym">*</span>hi<span class="sym">* &lt;&gt;</span> tuck <span class="kwa">and throw</span> <span class="sym">(</span> n2 f <span class="sym">)</span>
    <span class="num">1</span><span class="sym">+</span> hi <span class="sym">+! ;</span>

<span class="sym">:</span> some<span class="sym">-</span><span class="kwd">function</span> <span class="sym">(</span> n1 <span class="sym">--</span> n2 <span class="sym">)</span>
    <span class="sym">[</span><span class="str">'] hi-function catch abort&quot; We shouldn'</span>t get here<span class="str">&quot; ;</span>
<span class="str"></span>
<span class="str">: main ( -- )</span>
<span class="str">    NUM 0 ?do</span>
<span class="str">        i some-function drop</span>
<span class="str">        loop</span>
<span class="str">    .&quot;</span> Exceptions<span class="sym">:</span> HI<span class="sym">=</span><span class="str">&quot; hi ? .&quot;</span> <span class="sym">/</span> LO<span class="sym">=</span><span class="str">&quot; lo &#64; 1 u.r cr ;</span>
<span class="str"></span>
<span class="str">main bye</span>
