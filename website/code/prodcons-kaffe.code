<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">// $Id: prodcons-kaffe.code,v 1.2 2004-11-08 08:15:18 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">// http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222">// Producer-Consumer Example by Bill Lear
</FONT></I><I><FONT COLOR="#B22222">// Adapted from http://java.sun.com/docs/books/tutorial/essential/threads
</FONT></I>
<B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">class</FONT></B> prodcons {
    <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">class</FONT></B> CubbyHole {
        <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> m_contents;
        <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">boolean</FONT></B> m_available = <B><FONT COLOR="#A020F0">false</FONT></B>;

        <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">synchronized</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> get() {
            <B><FONT COLOR="#A020F0">while</FONT></B> (m_available == <B><FONT COLOR="#A020F0">false</FONT></B>) {
                <B><FONT COLOR="#A020F0">try</FONT></B> {
                    wait();
                } <B><FONT COLOR="#A020F0">catch</FONT></B> (InterruptedException e) { }
            }
            m_available = <B><FONT COLOR="#A020F0">false</FONT></B>;
            notifyAll();
            <B><FONT COLOR="#A020F0">return</FONT></B> m_contents;
        }

        <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">synchronized</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> put(<B><FONT COLOR="#A020F0">int</FONT></B> value) {
            <B><FONT COLOR="#A020F0">while</FONT></B> (m_available == <B><FONT COLOR="#A020F0">true</FONT></B>) {
                <B><FONT COLOR="#A020F0">try</FONT></B> {
                    wait();
                } <B><FONT COLOR="#A020F0">catch</FONT></B> (InterruptedException e) { }
            }
            m_contents = value;
            m_available = <B><FONT COLOR="#A020F0">true</FONT></B>;
            notifyAll();
        }
    }

    <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">class</FONT></B> Producer <B><FONT COLOR="#A020F0">extends</FONT></B> Thread {
        <B><FONT COLOR="#A020F0">private</FONT></B> CubbyHole m_cubbyhole;
        <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> m_count;

        <B><FONT COLOR="#A020F0">public</FONT></B> Producer(CubbyHole c, <B><FONT COLOR="#A020F0">int</FONT></B> count) {
            m_cubbyhole = c;
            m_count = count;
        }

        <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> run() {
            <B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> i = 0; i &lt; m_count; i++) {
                m_cubbyhole.put(i);
                ++m_produced;
            }
        }
    }

    <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">class</FONT></B> Consumer <B><FONT COLOR="#A020F0">extends</FONT></B> Thread {
        <B><FONT COLOR="#A020F0">private</FONT></B> CubbyHole m_cubbyhole;
        <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> m_count;

        <B><FONT COLOR="#A020F0">public</FONT></B> Consumer(CubbyHole c, <B><FONT COLOR="#A020F0">int</FONT></B> count) {
            m_cubbyhole = c;
            m_count = count;
        }

        <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> run() {
            <B><FONT COLOR="#A020F0">int</FONT></B> value = 0;
            <B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> i = 0; i &lt; m_count; i++) {
                value = m_cubbyhole.get();
                ++m_consumed;
            }
        }
    }

    <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> run() {
        m_producer.start();
        m_consumer.start();
        <B><FONT COLOR="#A020F0">try</FONT></B> { m_producer.join(); } <B><FONT COLOR="#A020F0">catch</FONT></B> (InterruptedException e) { }
        <B><FONT COLOR="#A020F0">try</FONT></B> { m_consumer.join(); } <B><FONT COLOR="#A020F0">catch</FONT></B> (InterruptedException e) { }
        System.out.println(m_produced + <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> + m_consumed);
    }

    <B><FONT COLOR="#A020F0">public</FONT></B> prodcons(<B><FONT COLOR="#A020F0">int</FONT></B> count) {
        CubbyHole m_cubbyhole = <B><FONT COLOR="#A020F0">new</FONT></B> CubbyHole();
        m_producer = <B><FONT COLOR="#A020F0">new</FONT></B> Producer(m_cubbyhole, count);
        m_consumer = <B><FONT COLOR="#A020F0">new</FONT></B> Consumer(m_cubbyhole, count);
    }

    <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> main(String[] args) {
        <B><FONT COLOR="#A020F0">int</FONT></B> count = 1;
        <B><FONT COLOR="#A020F0">try</FONT></B> { count = Integer.parseInt(args[0]); } <B><FONT COLOR="#A020F0">catch</FONT></B> (Exception e) { }
        <B><FONT COLOR="#A020F0">new</FONT></B> prodcons(count).run();
    }

    <B><FONT COLOR="#A020F0">private</FONT></B> Producer m_producer;
    <B><FONT COLOR="#A020F0">private</FONT></B> Consumer m_consumer;
    <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> m_produced = 0;
    <B><FONT COLOR="#A020F0">private</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> m_consumed = 0;
}</pre></td></tr></table>
