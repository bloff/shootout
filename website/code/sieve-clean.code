<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
/* The Great Computer Language Shootout 
   contributed by Isaac Gouy (Clean novice)
   updated by John van Groningen

   http://shootout.alioth.debian.org/

To compile:	
   cleanIDE.exe <I><FONT COLOR="#B22222">--batch-force-build &quot;e:\shoot\contrib\clean\sieve.prj&quot;
</FONT></I>
To run:
   sieve.exe -con 900
*/

<B><FONT COLOR="#A020F0">module</FONT></B> sieve
<B><FONT COLOR="#A020F0">import</FONT></B> StdEnv, LanguageShootout

Start = <B><FONT COLOR="#BC8F8F">&quot;Count: &quot;</FONT></B> +++ toString (sieve primes lBound 0 argi) +++ <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>
   <B><FONT COLOR="#A020F0">where</FONT></B> primes = {True \\ i&lt;-[0..uBound]}

lBound :== 2
uBound :== 8192

sieve <B><FONT COLOR="#228B22">:: !*{#.Bool} !Int !Int !Int -&gt; Int
</FONT></B>sieve primes i count rep
   | i&gt;uBound 
      | rep==0     = count 
                   = sieve {primes&amp;[j]=True \\ j&lt;-[0..uBound]} lBound 0 (rep-1)   
      | primes.[i] = sieve (loop primes i i) (i+1) (count+1) rep 
                   = sieve primes (i+1) count rep

   <B><FONT COLOR="#A020F0">where</FONT></B>
   loop primes i ii 
      | ii&lt;=uBound  = loop {primes&amp;[ii]=False} i (ii+i)
                    = primes
     </pre></td></tr></table>
