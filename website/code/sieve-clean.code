<span class="line">    1 </span><span class="sym">/*</span> The Great Computer Language Shootout
<span class="line">    2 </span>     contributed by Isaac Gouy <span class="sym">(</span>Clean novice<span class="sym">)
</span><span class="line">    3 </span><span class="sym"> </span>   updated by John van Groningen
<span class="line">    4 </span>
<span class="line">    5 </span>     http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/
</span><span class="line">    6 </span><span class="sym"> 
</span><span class="line">    7 </span><span class="sym"> </span>To compile<span class="sym">:
</span><span class="line">    8 </span><span class="sym">         </span>   cleanIDE.exe <span class="slc">--batch-force-build &quot;e:\shoot\contrib\clean\sieve.prj&quot; 
</span><span class="line">    9 </span><span class="slc"></span>
<span class="line">   10 </span> To run<span class="sym">:
</span><span class="line">   11 </span><span class="sym"> </span>   sieve.exe <span class="sym">-</span>con <span class="num">900
</span><span class="line">   12 </span><span class="num"> </span><span class="sym">*/
</span><span class="line">   13 </span><span class="sym"> 
</span><span class="line">   14 </span><span class="sym"> </span><span class="kwa">module</span> sieve
<span class="line">   15 </span> <span class="kwa">import</span> StdEnv<span class="sym">,</span> LanguageShootout
<span class="line">   16 </span>
<span class="line">   17 </span>  Start <span class="sym">=</span> <span class="str">&quot;Count: &quot;</span> <span class="sym">+++</span> toString <span class="sym">(</span>sieve primes lBound <span class="num">0</span> argi<span class="sym">) +++</span> <span class="str">&quot;\n&quot;</span>
<span class="line">   18 </span>    <span class="kwa">where</span> primes <span class="sym">=</span> {<span class="kwa">True</span> \\ i<span class="sym">&lt;-[</span><span class="num">0</span>..uBound<span class="sym">]</span>}
<span class="line">   19 </span>
<span class="line">   20 </span>  lBound <span class="sym">:==</span> <span class="num">2
</span><span class="line">   21 </span><span class="num"> </span>uBound <span class="sym">:==</span> <span class="num">8192
</span><span class="line">   22 </span><span class="num"> 
</span><span class="line">   23 </span><span class="num"> </span>sieve <span class="sym">:: !*</span>{#.<span class="kwb">Bool</span>} <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">-&gt;</span> <span class="kwb">Int
</span><span class="line">   24 </span><span class="kwb"> </span>sieve primes i count rep
<span class="line">   25 </span>    <span class="sym">|</span> i<span class="sym">&gt;</span>uBound
<span class="line">   26 </span>        <span class="sym">|</span> rep<span class="sym">==</span><span class="num">0</span>     <span class="sym">=</span> count
<span class="line">   27 </span>                     <span class="sym">=</span> sieve {primes<span class="sym">&amp;[</span>j<span class="sym">]=</span><span class="kwa">True</span> \\ j<span class="sym">&lt;-[</span><span class="num">0</span>..uBound<span class="sym">]</span>} lBound <span class="num">0</span> <span class="sym">(</span>rep<span class="num">-1</span><span class="sym">)
</span><span class="line">   28 </span><span class="sym">          |</span> primes.<span class="sym">[</span>i<span class="sym">] =</span> sieve <span class="sym">(</span>loop primes i i<span class="sym">) (</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">) (</span>count<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> rep
<span class="line">   29 </span>                     <span class="sym">=</span> sieve primes <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> count rep
<span class="line">   30 </span>
<span class="line">   31 </span>     <span class="kwa">where
</span><span class="line">   32 </span><span class="kwa"> </span>   loop primes i ii
<span class="line">   33 </span>        <span class="sym">|</span> ii<span class="sym">&lt;=</span>uBound  <span class="sym">=</span> loop {primes<span class="sym">&amp;[</span>ii<span class="sym">]=</span><span class="kwa">False</span>} i <span class="sym">(</span>ii<span class="sym">+</span>i<span class="sym">)
</span><span class="line">   34 </span><span class="sym">                     =</span> primes
<span class="line">   35 </span>       
