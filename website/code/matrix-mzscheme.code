#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>mzscheme <span class="sym">-</span>qu
<span class="slc">;; Matrix.scm</span>

<span class="sym">(</span>module matrix mzscheme
  <span class="sym">(</span>define size <span class="num">30</span><span class="sym">)</span>

  <span class="sym">(</span>define <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> x<span class="sym">) (+</span> x <span class="num">1</span><span class="sym">))</span>

  <span class="sym">(</span>define <span class="sym">(</span>mkmatrix rows cols<span class="sym">)</span>
    <span class="sym">(</span>let <span class="sym">((</span>mx <span class="sym">(</span>make<span class="sym">-</span>vector rows <span class="num">0</span><span class="sym">))</span>
	  <span class="sym">(</span>count <span class="num">1</span><span class="sym">))</span>
      <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))</span>
	  <span class="sym">((=</span> i rows<span class="sym">))</span>
	<span class="sym">(</span>let <span class="sym">((</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))</span>
	  <span class="sym">(</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> j<span class="sym">)))</span>
	      <span class="sym">((=</span> j cols<span class="sym">))</span>
	    <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> row j count<span class="sym">)</span>
	    <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> count <span class="sym">(+</span> count <span class="num">1</span><span class="sym">)))</span>
	  <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> mx i row<span class="sym">)))</span>
      mx<span class="sym">))</span>

  <span class="sym">(</span>define <span class="sym">(</span>num<span class="sym">-</span>cols mx<span class="sym">)</span>
    <span class="sym">(</span>let <span class="sym">((</span>row <span class="sym">(</span>vector<span class="sym">-</span>ref mx <span class="num">0</span><span class="sym">)))</span>
      <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">length</span> row<span class="sym">)))</span>

  <span class="sym">(</span>define <span class="sym">(</span>num<span class="sym">-</span>rows mx<span class="sym">)</span>
    <span class="sym">(</span>vector<span class="sym">-</span><span class="kwa">length</span> mx<span class="sym">))</span>

  <span class="sym">(</span>define <span class="sym">(</span>mmult rows cols m1 m2<span class="sym">)</span>
    <span class="sym">(</span>let <span class="sym">((</span>m3 <span class="sym">(</span>make<span class="sym">-</span>vector rows <span class="num">0</span><span class="sym">)))</span>
      <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))</span>
	  <span class="sym">((=</span> i rows<span class="sym">))</span>
	<span class="sym">(</span>let <span class="sym">((</span>m1i <span class="sym">(</span>vector<span class="sym">-</span>ref m1 i<span class="sym">))</span>
	      <span class="sym">(</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))</span>
	  <span class="sym">(</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> j<span class="sym">)))</span>
	      <span class="sym">((=</span> j cols<span class="sym">))</span>
	    <span class="sym">(</span>let <span class="sym">((</span>val <span class="num">0</span><span class="sym">))</span>
	      <