<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- for se from jose</span>

<span class="slc">--SPLITFILE=dispatch.e</span>

<span class="kwa">class</span> DISPATCH creation make <span class="kwa">feature</span>
	make <span class="kwa">is local</span> i<span class="sym">,</span>n<span class="sym">,</span>ctrl<span class="sym">:</span><span class="kwb">INTEGER</span> <span class="kwa">do</span>
		<span class="kwa">if</span> argument_count<span class="sym">&gt;=</span><span class="num">1</span> <span class="kwa">and then</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.is_integer <span class="kwa">then</span>
			n<span class="sym">:=</span><span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer <span class="kwa">end</span>
		<span class="kwa">from</span> until i<span class="sym">&gt;=</span>n <span class="kwa">loop</span> ctrl<span class="sym">:=</span>ctrl<span class="sym">+</span><span class="kwd">test</span><span class="sym">(</span>b1<span class="sym">,</span>b2<span class="sym">,</span>b3<span class="sym">,</span>b4<span class="sym">,</span>b5<span class="sym">,</span>i<span class="sym">) +</span>
				<span class="kwd">test</span><span class="sym">(</span>b6<span class="sym">,</span>b7<span class="sym">,</span>b8<span class="sym">,</span>b9<span class="sym">,</span>b0<span class="sym">,</span>i<span class="sym">)+</span><span class="kwd">test</span><span class="sym">(</span>p1<span class="sym">,</span>p2<span class="sym">,</span>p3<span class="sym">,</span>p4<span class="sym">,</span>p5<span class="sym">,</span>i<span class="sym">)-</span>
				<span class="kwd">test</span><span class="sym">(</span>p6<span class="sym">,</span>p7<span class="sym">,</span>p8<span class="sym">,</span>p9<span class="sym">,</span>p0<span class="sym">,</span>i<span class="sym">)</span>
			i<span class="sym">:=</span>i<span class="sym">+</span><span class="num">1</span> <span class="kwa">end</span>
		<span class="kwd">print</span><span class="sym">(</span>ctrl.out<span class="sym">+</span><span class="str">&quot;%N&quot;</span><span class="sym">)</span> <span class="kwa">end</span>
	<span class="kwd">test</span><span class="sym">(</span>a1<span class="sym">,</span>a2<span class="sym">,</span>a3<span class="sym">,</span>a4<span class="sym">,</span>a5<span class="sym">:</span>BOTTLE<span class="sym">;</span>i<span class="sym">:</span><span class="kwb">INTEGER</span><span class="sym">):</span><span class="kwb">INTEGER</span> <span class="kwa">is local</span> c<span class="sym">:</span><span class="kwb">INTEGER</span> <span class="kwa">do</span>
		a1.cycle a2.cycle a3.cycle a4.cycle a5.cycle c<span class="sym">:=</span>i\\<span class="num">2</span>
		<span class="kwa">Result</span><span class="sym">:=</span>a1.<span class="kwd">test</span><span class="sym">(</span>c<span class="sym">)+</span>a2.<span class="kwd">test</span><span class="sym">(</span>c<span class="sym">)+</span>a3.<span class="kwd">test</span><span class="sym">(</span>c<span class="sym">)+</span>a4.<span class="kwd">test</span><span class="sym">(</span>c<span class="sym">)+</span>
			a5.<span class="kwd">test</span><span class="sym">(</span>c<span class="sym">)</span> <span class="kwa">end</span>
	b1<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">end</span>
	b2<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">2</span><span class="sym">)</span> <span class="kwa">end</span>
	b3<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">3</span><span class="sym">)</span> <span class="kwa">end</span>
	b4<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">4</span><span class="sym">)</span> <span class="kwa">end</span>
	b5<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">5</span><span class="sym">)</span> <span class="kwa">end</span>
	b6<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">6</span><span class="sym">)</span> <span class="kwa">end</span>
	b7<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">7</span><span class="sym">)</span> <span class="kwa">end</span>
	b8<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">8</span><span class="sym">)</span> <span class="kwa">end</span>
	b9<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">9</span><span class="sym">)</span> <span class="kwa">end</span>
	b0<span class="sym">:</span>BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span> <span class="kwa">end</span>
	p1<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">end</span>
	p2<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">2</span><span class="sym">)</span> <span class="kwa">end</span>
	p3<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">3</span><span class="sym">)</span> <span class="kwa">end</span>
	p4<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">4</span><span class="sym">)</span> <span class="kwa">end</span>
	p5<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">5</span><span class="sym">)</span> <span class="kwa">end</span>
	p6<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">6</span><span class="sym">)</span> <span class="kwa">end</span>
	p7<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">7</span><span class="sym">)</span> <span class="kwa">end</span>
	p8<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">8</span><span class="sym">)</span> <span class="kwa">end</span>
	p9<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">9</span><span class="sym">)</span> <span class="kwa">end</span>
	p0<span class="sym">:</span>PRESSURIZED_BOTTLE <span class="kwa">is once create Result</span>.<span class="kwd">make</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span> <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=bottle.e</span>

<span class="kwa">class</span> BOTTLE insert BOTTLE_STATE_CONSTANTS creation make <span class="kwa">feature</span>
	id<span class="sym">:</span><span class="kwb">INTEGER</span>
	state<span class="sym">:</span>BOTTLE_STATE
	<span class="kwd">make</span><span class="sym">(</span>i<span class="sym">:</span><span class="kwb">INTEGER</span><span class="sym">)</span> <span class="kwa">is do</span> id<span class="sym">:=</span>i state<span class="sym">:=</span>initial_state <span class="kwa">end</span>
	cycle <span class="kwa">is do</span> fill seal empty <span class="kwa">end</span>
	fill<span class="sym">,</span> seal<span class="sym">,</span> empty <span class="kwa">is do</span> state<span class="sym">:=</span>state.next <span class="kwa">end</span>
	<span class="kwd">test</span><span class="sym">(</span>c<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">):</span> <span class="kwb">INTEGER</span> <span class="kwa">is do Result</span><span class="sym">:=</span>state.tag<span class="sym">+</span>id<span class="sym">+</span>c <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=bottle_state_constants.e</span>

<span class="kwa">class</span> BOTTLE_STATE_CONSTANTS <span class="kwa">feature</span>
	initial_state<span class="sym">:</span> BOTTLE_STATE <span class="kwa">is do Result</span><span class="sym">:=</span>empty_state <span class="kwa">end</span>
	empty_state<span class="sym">:</span> EMPTY_BOTTLE_STATE <span class="kwa">is once create Result end</span>
	full_state<span class="sym">:</span> FULL_BOTTLE_STATE <span class="kwa">is once create Result end</span>
	sealed_state<span class="sym">:</span> SEALED_BOTTLE_STATE <span class="kwa">is once create Result end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=bottle_state.e</span>

<span class="kwa">deferred class</span> BOTTLE_STATE insert BOTTLE_STATE_CONSTANTS <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is deferred end</span>
	next<span class="sym">:</span> BOTTLE_STATE <span class="kwa">is deferred end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=empty_bottle_state.e</span>

<span class="kwa">class</span> EMPTY_BOTTLE_STATE <span class="kwa">inherit</span> BOTTLE_STATE <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span> <span class="num">1</span>
	next<span class="sym">:</span> BOTTLE_STATE <span class="kwa">is do Result</span><span class="sym">:=</span>full_state <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=full_bottle_state.e</span>

<span class="kwa">class</span> FULL_BOTTLE_STATE <span class="kwa">inherit</span> BOTTLE_STATE <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span> <span class="num">2</span>
	next<span class="sym">:</span> BOTTLE_STATE <span class="kwa">is do Result</span><span class="sym">:=</span>sealed_state <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=sealed_bottle_state.e</span>

<span class="kwa">class</span> SEALED_BOTTLE_STATE <span class="kwa">inherit</span> BOTTLE_STATE <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span> <span class="num">3</span>
	next<span class="sym">:</span> BOTTLE_STATE <span class="kwa">is do Result</span><span class="sym">:=</span>empty_state <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=pressurized_bottle_state_constants.e</span>

<span class="kwa">class</span> PRESSURIZED_BOTTLE_STATE_CONSTANTS insert
	BOTTLE_STATE_CONSTANTS <span class="kwa">redefine</span> initial_state <span class="kwa">end</span>
<span class="kwa">feature</span>
	initial_state<span class="sym">:</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">is do</span>
		<span class="kwa">Result</span><span class="sym">:=</span>unpressurized_empty_state <span class="kwa">end</span>
	unpressurized_empty_state<span class="sym">:</span> UNPRESSURIZED_EMPTY_BOTTLE_STATE <span class="kwa">is once</span>
		<span class="kwa">create Result end</span>
	unpressurized_full_state<span class="sym">:</span> UNPRESSURIZED_FULL_BOTTLE_STATE <span class="kwa">is once</span>
		<span class="kwa">create Result end</span>
	pressurized_unsealed_state<span class="sym">:</span> PRESSURIZED_UNSEALED_BOTTLE_STATE <span class="kwa">is once</span>
		<span class="kwa">create Result end</span>
	pressurized_sealed_state<span class="sym">:</span> PRESSURIZED_SEALED_BOTTLE_STATE <span class="kwa">is once</span>
		<span class="kwa">create Result end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=pressurized_bottle_state.e</span>

<span class="kwa">deferred class</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">inherit</span>
	BOTTLE_STATE <span class="kwa">undefine</span> initial_state <span class="kwa">end</span>
insert
	PRESSURIZED_BOTTLE_STATE_CONSTANTS
<span class="kwa">feature</span>
	next<span class="sym">:</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">is deferred end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=unpressurized_empty_bottle_state.e</span>

<span class="kwa">class</span> UNPRESSURIZED_EMPTY_BOTTLE_STATE <span class="kwa">inherit</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span> <span class="num">4</span>
	next<span class="sym">:</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">is do</span>
		<span class="kwa">Result</span><span class="sym">:=</span>unpressurized_full_state <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=unpressurized_full_bottle_state.e</span>

<span class="kwa">class</span> UNPRESSURIZED_FULL_BOTTLE_STATE <span class="kwa">inherit</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span> <span class="num">5</span>
	next<span class="sym">:</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">is do</span>
		<span class="kwa">Result</span><span class="sym">:=</span>pressurized_unsealed_state <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=pressurized_unsealed_bottle_state.e</span>

<span class="kwa">class</span> PRESSURIZED_UNSEALED_BOTTLE_STATE <span class="kwa">inherit</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span> <span class="num">6</span>
	next<span class="sym">:</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">is do</span>
		<span class="kwa">Result</span><span class="sym">:=</span>pressurized_sealed_state <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=pressurized_sealed_bottle_state.e</span>

<span class="kwa">class</span> PRESSURIZED_SEALED_BOTTLE_STATE <span class="kwa">inherit</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">feature</span>
	tag<span class="sym">:</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span> <span class="num">7</span>
	next<span class="sym">:</span> PRESSURIZED_BOTTLE_STATE <span class="kwa">is do</span>
		<span class="kwa">Result</span><span class="sym">:=</span>unpressurized_empty_state <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">--SPLITFILE=pressurized_bottle.e</span>

<span class="kwa">class</span> PRESSURIZED_BOTTLE <span class="kwa">inherit</span>
	BOTTLE <span class="kwa">undefine</span> initial_state <span class="kwa">redefine</span> cycle <span class="kwa">end</span>
insert
	PRESSURIZED_BOTTLE_STATE_CONSTANTS
creation make <span class="kwa">feature</span>
	cycle <span class="kwa">is do</span> fill pressurize seal empty <span class="kwa">end</span>
	pressurize <span class="kwa">is do</span> state<span class="sym">:=</span>state.next <span class="kwa">end</span>
<span class="kwa">end</span>

