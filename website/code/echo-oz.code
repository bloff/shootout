<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">%%% $Id: echo-oz.code,v 1.1 2004-11-02 08:52:30 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">%%% http://dada.perl.it/shootout/
</FONT></I><I><FONT COLOR="#B22222">%%%
</FONT></I><I><FONT COLOR="#B22222">%%% contributed by Isaac Gouy
</FONT></I>
<I><FONT COLOR="#B22222">%%  Usage: start from command line with
</FONT></I><I><FONT COLOR="#B22222">%%     ozc -x echo.oz -o echo.oz.exe
</FONT></I><I><FONT COLOR="#B22222">%%     echo.oz.exe 100000
</FONT></I>
<B><FONT COLOR="#228B22">functor</FONT></B>
<B><FONT COLOR="#5F9EA0">import</FONT></B>
   System
   Application
   Open
   OS

<B><FONT COLOR="#A020F0">define</FONT></B>
   Data <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;Hello there sailor\n&quot;</FONT></B>

<B><FONT COLOR="#A020F0">proc</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ServerThread</FONT></I></B></FONT></B> Sock SPort Bytes}
   Sock <B><FONT COLOR="#5F9EA0">=</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">New</FONT></I></B></FONT></B> Open.socket server(port:SPort)}
   {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ServerLoop</FONT></I></B></FONT></B> Sock 0 Bytes}
   {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sock</FONT></I></B></FONT></B> shutDown(how: [receive send])}{<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sock</FONT></I></B></FONT></B> close}
<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">proc</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ServerLoop</FONT></I></B></FONT></B> Sock Sum Bytes}
   <B><FONT COLOR="#5F9EA0">local</FONT></B> Message NewSum DR DW CR ST <B><FONT COLOR="#A020F0">in</FONT></B>

      <I><FONT COLOR="#B22222">%% low-level Selects seem ~6% faster total
</FONT></I>      {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sock</FONT></I></B></FONT></B> getDesc(DR DW)}{<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.readSelect DR}
      {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.read DR 1024 Message <B><FONT COLOR="#228B22">nil</FONT></B> CR}      
      <I><FONT COLOR="#B22222">%% {Sock read(list: Message)} %% normal read
</FONT></I>      
      <B><FONT COLOR="#A020F0">if</FONT></B> Message <B><FONT COLOR="#5F9EA0">==</FONT></B> <B><FONT COLOR="#228B22">nil</FONT></B> <B><FONT COLOR="#A020F0">then</FONT></B> <I><FONT COLOR="#B22222">%% connection has been closed
</FONT></I>         Bytes <B><FONT COLOR="#5F9EA0">=</FONT></B> Sum
      <B><FONT COLOR="#A020F0">else</FONT></B>
         NewSum <B><FONT COLOR="#5F9EA0">=</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Length</FONT></I></B></FONT></B> Message} + Sum

         {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.writeSelect DW}{<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.write DW Message ST}
         <I><FONT COLOR="#B22222">%% {Sock write(vs: Message)} %% normal write
</FONT></I>      
         {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ServerLoop</FONT></I></B></FONT></B> Sock NewSum Bytes}
      <B><FONT COLOR="#A020F0">end</FONT></B>
   <B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">end</FONT></B>


<B><FONT COLOR="#A020F0">proc</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ClientThread</FONT></I></B></FONT></B> SPort N}
   <B><FONT COLOR="#5F9EA0">local</FONT></B> Sock <B><FONT COLOR="#A020F0">in</FONT></B> 
      Sock <B><FONT COLOR="#5F9EA0">=</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">New</FONT></I></B></FONT></B> Open.socket client(port:SPort)}
      {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ClientLoop</FONT></I></B></FONT></B> Sock N}
      {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sock</FONT></I></B></FONT></B> shutDown(how: [receive send])}{<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sock</FONT></I></B></FONT></B> close}
   <B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">proc</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ClientLoop</FONT></I></B></FONT></B> Sock N}
   <B><FONT COLOR="#5F9EA0">local</FONT></B> Message DR DW CR ST <B><FONT COLOR="#A020F0">in</FONT></B>
      <B><FONT COLOR="#A020F0">if</FONT></B> N &gt; 0 <B><FONT COLOR="#A020F0">then</FONT></B>

         {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Sock</FONT></I></B></FONT></B> getDesc(DR DW)}
         {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.writeSelect DW}{<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.write DW Data ST}     
             {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.readSelect DR}{<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">OS</FONT></I></B></FONT></B>.read DR 1024 Message <B><FONT COLOR="#228B22">nil</FONT></B> CR}
     
         <I><FONT COLOR="#B22222">%% {Sock write(vs: Data)}     %% normal write
</FONT></I>             <I><FONT COLOR="#B22222">%% {Sock read(list: Message)} %% normal read
</FONT></I>
         <B><FONT COLOR="#A020F0">if</FONT></B> Message <B><FONT COLOR="#5F9EA0">==</FONT></B> Data <B><FONT COLOR="#A020F0">then</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ClientLoop</FONT></I></B></FONT></B> Sock N-1} <B><FONT COLOR="#A020F0">end</FONT></B>
      <B><FONT COLOR="#A020F0">end</FONT></B>
   <B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">in</FONT></B>
   <B><FONT COLOR="#5F9EA0">local</FONT></B> Args A1 A2 A3 Socket SPort Bytes ArgList Pid <B><FONT COLOR="#A020F0">in</FONT></B>
      Args <B><FONT COLOR="#5F9EA0">=</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Application</FONT></I></B></FONT></B>.getArgs plain}

      <B><FONT COLOR="#A020F0">if</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Length</FONT></I></B></FONT></B> Args} <B><FONT COLOR="#5F9EA0">==</FONT></B> 1 <B><FONT COLOR="#A020F0">then</FONT></B>
         <I><FONT COLOR="#B22222">%% We are the server process      
</FONT></I>
         A3<B><FONT COLOR="#5F9EA0">|</FONT></B><B><FONT COLOR="#228B22">nil</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B> Args

         <B><FONT COLOR="#A020F0">thread</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ServerThread</FONT></I></B></FONT></B> Socket SPort Bytes} <B><FONT COLOR="#A020F0">end</FONT></B>

         <I><FONT COLOR="#B22222">%% Prepare to fork an OS process for the client 
</FONT></I>         <I><FONT COLOR="#B22222">%%    automatically close cmd.exe
</FONT></I>         <I><FONT COLOR="#B22222">%%    start echo.oz.exe
</FONT></I>         <I><FONT COLOR="#B22222">%%    pass a flag indicating the client process
</FONT></I>         <I><FONT COLOR="#B22222">%%    pass the open server port SPort 
</FONT></I>         <I><FONT COLOR="#B22222">%%    pass the number of times the client should send the data
</FONT></I>
         ArgList <B><FONT COLOR="#5F9EA0">=</FONT></B> [<B><FONT COLOR="#BC8F8F">&quot;/C&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;echo.oz&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;client&quot;</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">IntToString</FONT></I></B></FONT></B> SPort} A3]
         Pid <B><FONT COLOR="#5F9EA0">=</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">New</FONT></I></B></FONT></B> Open.pipe init(cmd: <B><FONT COLOR="#BC8F8F">&quot;cmd.exe&quot;</FONT></B> args: ArgList)}

         <I><FONT COLOR="#B22222">%% Synchronize with server thread completion and indirectly with
</FONT></I>         <I><FONT COLOR="#B22222">%% the client process. Wait here until the dataflow variable Bytes 
</FONT></I>         <I><FONT COLOR="#B22222">%% has been given a value in the server thread. That happens after
</FONT></I>         <I><FONT COLOR="#B22222">%% the client process closes the socket connection, when the client
</FONT></I>         <I><FONT COLOR="#B22222">%% process has sent all it's data and received all the replies.
</FONT></I> 
         {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">System</FONT></I></B></FONT></B>.showInfo 'server processed '#{<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">IntToString</FONT></I></B></FONT></B> Bytes}#' bytes'} 

      <B><FONT COLOR="#A020F0">elseif</FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Length</FONT></I></B></FONT></B> Args} <B><FONT COLOR="#5F9EA0">==</FONT></B> 3 <B><FONT COLOR="#A020F0">then</FONT></B> 
         <I><FONT COLOR="#B22222">%% We are the client process
</FONT></I>
         <I><FONT COLOR="#B22222">%% Take the flag, server port, times-to-repeat from the args
</FONT></I>         <I><FONT COLOR="#B22222">%% and use the main thread for the client
</FONT></I>         A1<B><FONT COLOR="#5F9EA0">|</FONT></B>A2<B><FONT COLOR="#5F9EA0">|</FONT></B>A3<B><FONT COLOR="#5F9EA0">|</FONT></B><B><FONT COLOR="#228B22">nil</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B> Args
         <B><FONT COLOR="#A020F0">if</FONT></B> A1 <B><FONT COLOR="#5F9EA0">==</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;client&quot;</FONT></B> <B><FONT COLOR="#A020F0">then</FONT></B>
            {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ClientThread</FONT></I></B></FONT></B> {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">StringToInt</FONT></I></B></FONT></B> A2} {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">StringToInt</FONT></I></B></FONT></B> A3}}
         <B><FONT COLOR="#A020F0">end</FONT></B>  
      <B><FONT COLOR="#A020F0">end</FONT></B>
   <B><FONT COLOR="#A020F0">end</FONT></B>
   {<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Application</FONT></I></B></FONT></B>.exit 0}
<B><FONT COLOR="#A020F0">end</FONT></B></pre></td></tr></table>
