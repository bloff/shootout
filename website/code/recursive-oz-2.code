<span class="slc">% The Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">% contributed by Isaac Gouy</span>

<span class="kwa">functor</span>
<span class="kwa">import</span>
   Application System
   S <span class="kwb">at</span> <span class="str">'../../Include/oz/shootout.ozf'</span>

<span class="kwb">define</span>
   <span class="kwb">fun</span> <span class="sym">{</span>Fib One Two<span class="sym">}</span>
      F <span class="sym">=</span> <span class="kwb">fun</span> <span class="sym">{</span>$ N<span class="sym">}</span>
         <span class="kwb">if</span> N <span class="sym">&lt;</span> Two <span class="kwb">then</span> One
         <span class="kwb">else</span> <span class="sym">{</span>F N<span class="sym">-</span>One<span class="sym">} + {</span>F N<span class="sym">-</span>Two<span class="sym">}</span> <span class="kwb">end</span>
      <span class="kwb">end</span>
   <span class="kwb">in</span> F <span class="kwb">end</span>

   <span class="kwb">fun</span> <span class="sym">{</span>Tak One<span class="sym">}</span>
      F <span class="sym">=</span> <span class="kwb">fun</span> <span class="sym">{</span>$ X Y Z<span class="sym">}</span>
         <span class="kwb">if</span> Y <span class="sym">&lt;</span> X <span class="kwb">then</span> <span class="sym">{</span>F <span class="sym">{</span>F X<span class="sym">-</span>One Y Z<span class="sym">} {</span>F Y<span class="sym">-</span>One Z X<span class="sym">} {</span>F Z<span class="sym">-</span>One X Y<span class="sym">}}</span>
         <span class="kwb">else</span> Z <span class="kwb">end</span>
      <span class="kwb">end</span>
   <span class="kwb">in</span> F <span class="kwb">end</span>

   FibI <span class="sym">= {</span>Fib <span class="num">1   2</span>  <span class="sym">}</span>
   FibF <span class="sym">= {</span>Fib <span class="num">1.0 2.0</span><span class="sym">}</span>
   TakI <span class="sym">= {</span>Tak <span class="num">1</span>  <span class="sym">}</span>
   TakF <span class="sym">= {</span>Tak <span class="num">1.0</span><span class="sym">}</span>

   <span class="kwb">fun</span> <span class="sym">{</span>AckI M N<span class="sym">}</span>
      <span class="kwb">if</span> M <span class="sym">==</span> <span class="num">0</span> <span class="kwb">then</span> N <span class="sym">+</span> <span class="num">1</span>
      <span class="kwb">elseif</span> N <span class="sym">==</span> <span class="num">0</span> <span class="kwb">then</span> <span class="sym">{</span>AckI M<span class="sym">-</span><span class="num">1 1</span><span class="sym">}</span>
      <span class="kwb">else</span> <span class="sym">{</span>AckI M<span class="sym">-</span><span class="num">1</span> <span class="sym">{</span>AckI M N<span class="sym">-</span><span class="num">1</span><span class="sym">}}</span> <span class="kwb">end</span>
   <span class="kwb">end</span>

   <span class="sym">[</span>Arg<span class="sym">] = {</span>Application.getArgs plain<span class="sym">}</span>
   N <span class="sym">= {</span>String.toInt Arg<span class="sym">}</span>
   M <span class="sym">=</span> N<span class="sym">-</span><span class="num">1</span>
   A <span class="sym">=</span> <span class="num">27.0</span> <span class="sym">+ {</span>IntToFloat N<span class="sym">}</span>

   Prefix1 <span class="sym">=</span> <span class="str">&quot;Fib(&quot;</span> # <span class="sym">{</span>S.floatToString A <span class="num">1</span><span class="sym">}</span> # <span class="str">&quot;): &quot;</span>
   Prefix2 <span class="sym">=</span> <span class="str">&quot;Tak(&quot;</span> # <span class="num">3</span><span class="sym">*</span>M # <span class="str">&quot;,&quot;</span> # <span class="num">2</span><span class="sym">*</span>M # <span class="str">&quot;,&quot;</span> # M # <span class="str">&quot;): &quot;</span>
<span class="kwb">in</span>
   <span class="sym">{</span>System.showInfo <span class="str">&quot;Ack(3,&quot;</span> # N # <span class="str">&quot;): &quot;</span> # <span class="sym">{</span>AckI <span class="num">3</span> N<span class="sym">}}</span>
   <span class="sym">{</span>System.showInfo Prefix1 # <span class="sym">{</span>S.floatToString <span class="sym">{</span>FibF A<span class="sym">}</span> <span class="num">1</span><span class="sym">} }</span>
   <span class="sym">{</span>System.showInfo Prefix2 # <span class="sym">{</span>TakI <span class="num">3</span><span class="sym">*</span>M <span class="num">2</span><span class="sym">*</span>M <span class="num">1</span><span class="sym">*</span>M<span class="sym">}}</span>
   <span class="sym">{</span>System.showInfo <span class="str">&quot;Fib(3): &quot;</span> # <span class="sym">{</span>FibI <span class="num">3</span><span class="sym">}}</span>
   <span class="sym">{</span>System.showInfo <span class="str">&quot;Tak(3.0,2.0,1.0): &quot;</span> # <span class="sym">{</span>S.floatToString <span class="sym">{</span>TakF <span class="num">3.0 2.0 1.0</span><span class="sym">}</span> <span class="num">1</span><span class="sym">} }</span>
   <span class="sym">{</span>Application.exit <span class="num">0</span><span class="sym">}</span>
<span class="kwb">end</span>
