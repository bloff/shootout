<span class="com">(* nsieve-bits benchmark for The Computer Language Shootout
 * Written by Dima Dorfman, 2004
 * Compile: ocamlopt -o nsieve_bits_ocaml bigarray.cmxa nsieve_bits.ml *)</span>

<span class="kwa">open</span> Bigarray

<span class="kwa">let</span> nsieve m <span class="sym">=
</span>  <span class="kwa">let</span> nbits <span class="sym">=</span> <span class="num">8</span> <span class="kwa">in let</span> full <span class="sym">= (</span><span class="num">1</span> <span class="kwa">lsl</span> nbits<span class="sym">) -</span> <span class="num">1</span> <span class="kwa">in
  let</span> bits <span class="sym">=</span> Array1.create int8_unsigned c_layout <span class="sym">(</span>m <span class="sym">/</span> nbits<span class="sym">)</span> <span class="kwa">in
</span>  Array1.fill bits full<span class="sym">;
</span>  <span class="kwa">let</span> clear i <span class="sym">=
</span>    <span class="kwa">let rec</span> clear<span class="str">' j = if j &lt; m then
      begin
	let ix = j / nbits in
	let old = Array1.get bits ix in
	Array1.set bits ix (old land ((1 lsl (j mod nbits)) lxor full));
	clear'</span> <span class="sym">(</span>j <span class="sym">+</span> i<span class="sym">)
</span>      <span class="kwa">end</span><span class="sym">;</span> <span class="kwa">in
</span>    clear<span class="str">' (i + i) in
  let rec loop i n =
    if i &gt;= m then n
    else if (Array1.get bits (i / nbits)) land (1 lsl (i mod nbits)) != 0 then
      (clear i; loop (succ i) (succ n))
    else loop (succ i) n in
  loop 2 0

let test n =
  let m = 1 lsl n * 10000 in
  let count = nsieve m in
  Printf.printf &quot;Primes up to %8d%8d</span><span class="esc">\n</span><span class="str">&quot; m count

let main () =
  if Array.length Sys.argv &lt; 2
  then (Printf.printf &quot;An argument is required</span><span class="esc">\n</span><span class="str">&quot;; 2)
  else
    let nopt =
      try Some (int_of_string Sys.argv.(1)) with
	| Failure _ -&gt; (Printf.printf &quot;An integer is required</span><span class="esc">\n</span><span class="str">&quot;; None) in
    match nopt with
      | None -&gt; 2
      | Some n -&gt;
	  if n &gt;= 0 then test n;
	  if n &gt;= 1 then test (n - 1);
	  if n &gt;= 2 then test (n - 2);
	  0
;;

exit (main ())</span>
