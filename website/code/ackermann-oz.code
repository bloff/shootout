<span class="slc">%%% $Id: ackermann-oz.code,v 1.8 2006-10-02 01:08:41 bfulgham Exp $</span>
<span class="slc">%%% http://dada.perl.it/shootout/</span>
<span class="kwa">functor</span>
<span class="kwa">import</span> System Application
<span class="kwa">define</span>
<span class="kwa">fun</span> <span class="sym">{</span>Ack M N<span class="sym">}</span>
    <span class="kwa">if</span> M<span class="sym">==</span><span class="num">0</span> <span class="kwa">then</span> N <span class="sym">+</span> <span class="num">1</span>
    <span class="kwa">elseif</span> N <span class="sym">==</span> <span class="num">0</span> <span class="kwa">then</span> <span class="sym">{</span>Ack M<span class="sym">-</span><span class="num">1 1</span><span class="sym">}</span>
    <span class="kwa">else</span> <span class="sym">{</span>Ack M<span class="sym">-</span><span class="num">1</span> <span class="sym">{</span>Ack M N<span class="sym">-</span><span class="num">1</span><span class="sym">}}</span>
    <span class="kwa">end</span>
<span class="kwa">end</span>
<span class="kwa">in</span>
    <span class="kwa">local</span> A <span class="kwa">in</span>
        <span class="sym">[</span>A<span class="sym">] = {</span>Application<span class="sym">.</span>getArgs plain<span class="sym">}</span>
        <span class="sym">{</span>System<span class="sym">.</span>printInfo &quot;Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span>&quot;<span class="sym">}</span>
        <span class="sym">{</span>System<span class="sym">.</span>printInfo A<span class="sym">}</span>
        <span class="sym">{</span>System<span class="sym">.</span>printInfo &quot;<span class="sym">):</span> &quot;<span class="sym">}</span>
        <span class="sym">{</span>System<span class="sym">.</span>printInfo <span class="sym">{</span>Ack <span class="num">3</span> <span class="sym">{</span>String<span class="sym">.</span>toInt A<span class="sym">}}}</span>
	<span class="sym">{</span>System<span class="sym">.</span>printInfo &quot;<span class="sym">\</span>n&quot;<span class="sym">}</span>
    <span class="kwa">end</span>
    <span class="sym">{</span>Application<span class="sym">.</span>exit <span class="num">0</span><span class="sym">}</span>
<span class="kwa">end</span>
