<span class="com">/* -*- mode: c -*-</span>
<span class="com"> * $Id: hash-icc.code,v 1.12 2006-04-01 21:26:58 bfulgham Exp $</span>
<span class="com"> * http://www.bagley.org/~doug/shootout/</span>
<span class="com"> */</span>

<span class="dir">#include &lt;stdio.h&gt;</span>
<span class="dir">#include &lt;stdlib.h&gt;</span>
<span class="dir">#include &lt;unistd.h&gt;</span>
<span class="dir">#include</span> <span class="dstr">&quot;../../Include/simple_hash.h&quot;</span><span class="dir"></span>

<span class="kwb">int</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {</span>
    <span class="kwb">int</span> i<span class="sym">,</span> c<span class="sym">=</span><span class="num">0</span><span class="sym">,</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwd">atoi</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);</span>
    <span class="kwb">char</span> buf<span class="sym">[</span><span class="num">32</span><span class="sym">];</span>

    <span class="kwb">struct</span> ht_ht <span class="sym">*</span>ht <span class="sym">=</span> <span class="kwd">ht_create</span><span class="sym">(</span>n<span class="sym">);</span>

    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">1</span><span class="sym">;</span> i<span class="sym">&lt;=</span>n<span class="sym">;</span> i<span class="sym">++) {</span>
	<span class="kwd">sprintf</span><span class="sym">(</span>buf<span class="sym">,</span> <span class="str">&quot;%x&quot;</span><span class="sym">,</span> i<span class="sym">);</span>
	<span class="sym">(</span><span class="kwd">ht_find_new</span><span class="sym">(</span>ht<span class="sym">,</span> buf<span class="sym">))-&gt;</span>val <span class="sym">=</span> i<span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span>n<span class="sym">;</span> i<span class="sym">&gt;</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">--) {</span>
	<span class="kwd">sprintf</span><span class="sym">(</span>buf<span class="sym">,</span> <span class="str">&quot;%d&quot;</span><span class="sym">,</span> i<span class="sym">);</span>
	<span class="kwa">if</span> <span class="sym">(</span><span class="kwd">ht_find</span><span class="sym">(</span>ht<span class="sym">,</span> buf<span class="sym">))</span> c<span class="sym">++;</span>
    <span class="sym">}</span>

    <span class="kwd">ht_destroy</span><span class="sym">(</span>ht<span class="sym">);</span>

    <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;%d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> c<span class="sym">);</span>
    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);</span>
<span class="sym">}</span>
