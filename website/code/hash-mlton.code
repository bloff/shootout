<span class="com">(* -*- mode: sml -*-</span>
<span class="com"> * $Id: hash-mlton.code,v 1.8 2006-03-11 17:57:24 bfulgham Exp $</span>
<span class="com"> * http://www.bagley.org/~doug/shootout/</span>
<span class="com"> *)</span>

<span class="kwa">fun</span> hashtest n <span class="sym">=</span>
   <span class="kwa">let</span>
      <span class="kwa">val</span> hx <span class="sym">=</span> HashTable.new <span class="sym">{</span>equals <span class="sym">=</span> <span class="kwa">op</span> <span class="sym">=,</span>
			      hash <span class="sym">=</span> <span class="kwa">String</span>.hash<span class="sym">,</span>
			      size <span class="sym">=</span> n<span class="sym">}</span>
      <span class="kwa">val</span> <span class="sym">() =</span> <span class="kwa">Int</span>.for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> n <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> i <span class="sym">=&gt;</span>
			HashTable.insert <span class="sym">(</span>hx<span class="sym">,</span> <span class="kwa">Int</span>.fmt <span class="kwa">StringCvt</span>.HEX i<span class="sym">,</span> i<span class="sym">))</span>
      <span class="kwa">val</span> r <span class="sym">=</span> ref <span class="num">0</span>
      <span class="kwa">val</span> <span class="sym">() =</span>
	 <span class="kwa">Int</span>.forDown <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> n <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> i <span class="sym">=&gt;</span>
		      <span class="kwa">if</span> isSome <span class="sym">(</span>HashTable.peek <span class="sym">(</span>hx<span class="sym">,</span> <span class="kwa">Int</span>.toString i<span class="sym">))</span>
			 <span class="kwa">then Int</span>.inc r
		      <span class="kwa">else</span> <span class="sym">())</span>
   <span class="kwa">in</span>
      <span class="sym">!</span>r
   <span class="kwa">end</span>

<span class="kwa">fun</span> atoi s <span class="sym">=</span> <span class="kwa">case Int</span>.fromString s <span class="kwa">of</span> SOME num <span class="sym">=&gt;</span> num <span class="sym">|</span> NONE <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">;</span>

<span class="kwa">fun</span> main<span class="sym">(</span>name<span class="sym">,</span> args<span class="sym">) =</span>
    <span class="kwa">let</span>
	<span class="kwa">val</span> arg <span class="sym">=</span> hd<span class="sym">(</span>args &#64; <span class="sym">[</span><span class="str">&quot;1&quot;</span><span class="sym">])</span>
	<span class="kwa">val</span> num <span class="sym">=</span> atoi arg
	<span class="kwa">val</span> result <span class="sym">=</span> hashtest num
    <span class="kwa">in</span>
	print <span class="sym">(</span><span class="kwa">Int</span>.toString result<span class="sym">) ;</span> print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">;</span>
	OS.Process.success
    <span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">val</span> _ <span class="sym">=</span> main<span class="sym">(</span> CommandLine.name<span class="sym">(),</span> CommandLine.arguments<span class="sym">() );</span>
