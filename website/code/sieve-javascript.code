<span class="slc">// The Great Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">//</span>
<span class="slc">// contributed by David Hedbor</span>
<span class="slc">// modified by Isaac Gouy</span>

<span class="kwa">var</span> flags<span class="sym">,</span> flagsorig <span class="sym">=</span> <span class="kwc">Array</span><span class="sym">(</span><span class="num">8193</span><span class="sym">);</span>
<span class="kwa">var</span> i<span class="sym">,</span> k<span class="sym">,</span> count<span class="sym">;</span>
<span class="kwa">var</span> n <span class="sym">=</span> arguments<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>

<span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">2</span><span class="sym">;</span> i <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> i<span class="sym">++) {</span>  flagsorig<span class="sym">[</span>i<span class="sym">] =</span> <span class="num">1</span><span class="sym">; }</span>
<span class="kwa">while</span> <span class="sym">(</span>n<span class="sym">--) {</span>
  count <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
  flags <span class="sym">=</span> flagsorig<span class="sym">.</span><span class="kwc">concat</span><span class="sym">();</span>
  <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">2</span><span class="sym">;</span> i <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> i<span class="sym">++) {</span>
    <span class="kwa">if</span> <span class="sym">(</span>flags<span class="sym">[</span>i<span class="sym">]) {</span>
      <span class="kwa">for</span> <span class="sym">(</span>k<span class="sym">=</span>i<span class="sym">+</span>i<span class="sym">;</span> k <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> k<span class="sym">+=</span>i<span class="sym">)</span>
	flags<span class="sym">[</span>k<span class="sym">] =</span> <span class="num">0</span><span class="sym">;</span>
      count<span class="sym">++;</span>
    <span class="sym">}</span>
  <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwc">print</span><span class="sym">(</span><span class="str">&quot;Count:&quot;</span><span class="sym">,</span> count<span class="sym">);</span>
