<span class="line">    1 </span><span class="slc">-- $Id: methcall-gnat.code,v 1.3 2004-11-11 07:14:00 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- http://dada.perl.it/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- Ada 95 code by C.C.
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">with</span> Text_IO<span class="sym">,</span> Ada.Command_Line<span class="sym">,</span> Ada.Characters.Handling<span class="sym">;
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">procedure</span> MethCall <span class="kwa">is
</span><span class="line">    8 </span><span class="kwa">   package</span> Toggles <span class="kwa">is
</span><span class="line">    9 </span><span class="kwa">      type</span> A_Rec <span class="kwa">is</span>                          <span class="slc">--  'tagged' implies hidden field,
</span><span class="line">   10 </span><span class="slc"></span>         <span class="kwa">tagged record</span>                       <span class="slc">--   and can append new fields
</span><span class="line">   11 </span><span class="slc"></span>            Value       <span class="sym">:</span> <span class="kwb">Boolean</span> <span class="sym">:=</span> True<span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>         <span class="kwa">end record</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span>      <span class="kwa">procedure</span> Activate <span class="sym">(</span>A <span class="sym">:</span> <span class="kwa">in out</span> A_Rec<span class="sym">);
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span>      <span class="kwa">type</span> B_Rec <span class="kwa">is new</span> A_Rec <span class="kwa">with</span>                 <span class="slc">--  Add more fields to A_Rec
</span><span class="line">   17 </span><span class="slc"></span>         <span class="kwa">record
</span><span class="line">   18 </span><span class="kwa"></span>            Flip_Period <span class="sym">:</span> <span class="kwb">Positive</span> <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>            Count       <span class="sym">:</span> <span class="kwb">Natural</span> <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym"></span>         <span class="kwa">end record</span><span class="sym">;
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span>      <span class="kwa">procedure</span> Activate <span class="sym">(</span>B <span class="sym">:</span> <span class="kwa">in out</span> B_Rec<span class="sym">);
</span><span class="line">   23 </span><span class="sym"></span>      <span class="kwa">pragma</span> Inline <span class="sym">(</span>Activate<span class="sym">);
</span><span class="line">   24 </span><span class="sym"></span>   <span class="kwa">end</span> Toggles<span class="sym">;
</span><span class="line">   25 </span><span class="sym">
</span><span class="line">   26 </span><span class="sym"></span>   <span class="kwa">package body</span> Toggles <span class="kwa">is
</span><span class="line">   27 </span><span class="kwa">      procedure</span> Activate <span class="sym">(</span>A <span class="sym">:</span> <span class="kwa">in out</span> A_Rec<span class="sym">)</span> <span class="kwa">is
</span><span class="line">   28 </span><span class="kwa">      begin
</span><span class="line">   29 </span><span class="kwa"></span>         A.Value <span class="sym">:=</span> <span class="kwa">not</span> A.Value<span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>      <span class="kwa">end</span> Activate<span class="sym">;
</span><span class="line">   31 </span><span class="sym">
</span><span class="line">   32 </span><span class="sym"></span>      <span class="kwa">procedure</span> Activate <span class="sym">(</span>B <span class="sym">:</span> <span class="kwa">in out</span> B_Rec<span class="sym">)</span> <span class="kwa">is
</span><span class="line">   33 </span><span class="kwa">      begin
</span><span class="line">   34 </span><span class="kwa"></span>         B.Count <span class="sym">:=</span> B.Count <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   35 </span><span class="sym"></span>         <span class="kwa">if</span> B.Count <span class="sym">=</span> B.Flip_Period <span class="kwa">then
</span><span class="line">   36 </span><span class="kwa"></span>            B.Count <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   37 </span><span class="sym"></span>            B.Value <span class="sym">:=</span> <span class="kwa">not</span> B.Value<span class="sym">;
</span><span class="line">   38 </span><span class="sym"></span>         <span class="kwa">end if</span><span class="sym">;
</span><span class="line">   39 </span><span class="sym"></span>      <span class="kwa">end</span> Activate<span class="sym">;
</span><span class="line">   40 </span><span class="sym"></span>   <span class="kwa">end</span> Toggles<span class="sym">;
</span><span class="line">   41 </span><span class="sym">
</span><span class="line">   42 </span><span class="sym"></span>   X        <span class="sym">:</span> Toggles.A_Rec <span class="sym">:= (</span>Value <span class="sym">=&gt;</span> True<span class="sym">);
</span><span class="line">   43 </span><span class="sym"></span>   Y        <span class="sym">:</span> Toggles.B_Rec <span class="sym">:= (</span>Value <span class="sym">=&gt;</span> True<span class="sym">,</span> Count <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">,</span> Flip_Period <span class="sym">=&gt;</span> <span class="num">3</span><span class="sym">);
</span><span class="line">   44 </span><span class="sym"></span>   Val      <span class="sym">:</span> <span class="kwb">Boolean</span><span class="sym">;
</span><span class="line">   45 </span><span class="sym"></span>   N        <span class="sym">:</span> <span class="kwb">Positive</span> <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   46 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   47 </span><span class="kwa">   begin
</span><span class="line">   48 </span><span class="kwa"></span>      N <span class="sym">:=</span> <span class="kwb">Positive</span><span class="sym">'</span>Value <span class="sym">(</span>Ada.Command_Line.Argument <span class="sym">(</span><span class="num">1</span><span class="sym">));
</span><span class="line">   49 </span><span class="sym"></span>   <span class="kwa">exception
</span><span class="line">   50 </span><span class="kwa">      when</span> Constraint_Error <span class="sym">=&gt;</span> <span class="kwa">null</span><span class="sym">;
</span><span class="line">   51 </span><span class="sym"></span>   <span class="kwa">end</span><span class="sym">;
</span><span class="line">   52 </span><span class="sym"></span>   <span class="kwa">for</span> Iter <span class="kwa">in</span> <span class="num">1</span> .. N <span class="kwa">loop
</span><span class="line">   53 </span><span class="kwa"></span>      Toggles.Activate <span class="sym">(</span>X<span class="sym">);
</span><span class="line">   54 </span><span class="sym"></span>      Val <span class="sym">:=</span> X.Value<span class="sym">;
</span><span class="line">   55 </span><span class="sym"></span>   <span class="kwa">end loop</span><span class="sym">;
</span><span class="line">   56 </span><span class="sym"></span>   Text_IO.Put_Line <span class="sym">(</span>Ada.Characters.Handling.To_Lower <span class="sym">(</span><span class="kwb">Boolean</span><span class="sym">'</span>Image <span class="sym">(</span>Val<span class="sym">)));
</span><span class="line">   57 </span><span class="sym"></span>   <span class="kwa">for</span> Iter <span class="kwa">in</span> <span class="num">1</span> .. N <span class="kwa">loop
</span><span class="line">   58 </span><span class="kwa"></span>      Toggles.Activate <span class="sym">(</span>Y<span class="sym">);
</span><span class="line">   59 </span><span class="sym"></span>      Val <span class="sym">:=</span> Y.Value<span class="sym">;
</span><span class="line">   60 </span><span class="sym"></span>   <span class="kwa">end loop</span><span class="sym">;
</span><span class="line">   61 </span><span class="sym"></span>   Text_IO.Put_Line <span class="sym">(</span>Ada.Characters.Handling.To_Lower <span class="sym">(</span><span class="kwb">Boolean</span><span class="sym">'</span>Image <span class="sym">(</span>Val<span class="sym">)));
</span><span class="line">   62 </span><span class="sym"></span><span class="kwa">end</span> MethCall<span class="sym">;</span>
