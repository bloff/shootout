<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: methcall-gnat.code,v 1.2 2004-11-08 08:15:17 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://dada.perl.it/shootout/
</FONT></I><I><FONT COLOR="#B22222">-- Ada 95 code by C.C.
</FONT></I>
<B><FONT COLOR="#A020F0">with</FONT></B> Text_IO, Ada.Command_Line, Ada.Characters.Handling;

<B><FONT COLOR="#A020F0">procedure</FONT></B> MethCall <B><FONT COLOR="#A020F0">is</FONT></B>
   <B><FONT COLOR="#A020F0">package</FONT></B> Toggles <B><FONT COLOR="#A020F0">is</FONT></B>
      <B><FONT COLOR="#A020F0">type</FONT></B> A_Rec <B><FONT COLOR="#A020F0">is</FONT></B>                          <I><FONT COLOR="#B22222">--  'tagged' implies hidden field,
</FONT></I>         <B><FONT COLOR="#A020F0">tagged</FONT></B> <B><FONT COLOR="#A020F0">record</FONT></B>                       <I><FONT COLOR="#B22222">--   and can append new fields
</FONT></I>            Value       : Boolean := True;
         <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">record</FONT></B>;

      <B><FONT COLOR="#A020F0">procedure</FONT></B> Activate (A : <B><FONT COLOR="#A020F0">in</FONT></B> <B><FONT COLOR="#A020F0">out</FONT></B> A_Rec);

      <B><FONT COLOR="#A020F0">type</FONT></B> B_Rec <B><FONT COLOR="#A020F0">is</FONT></B> <B><FONT COLOR="#A020F0">new</FONT></B> A_Rec <B><FONT COLOR="#A020F0">with</FONT></B>                 <I><FONT COLOR="#B22222">--  Add more fields to A_Rec
</FONT></I>         <B><FONT COLOR="#A020F0">record</FONT></B>
            Flip_Period : Positive := 1;
            Count       : Natural := 0;
         <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">record</FONT></B>;

      <B><FONT COLOR="#A020F0">procedure</FONT></B> Activate (B : <B><FONT COLOR="#A020F0">in</FONT></B> <B><FONT COLOR="#A020F0">out</FONT></B> B_Rec);
      <B><FONT COLOR="#A020F0">pragma</FONT></B> Inline (Activate);
   <B><FONT COLOR="#A020F0">end</FONT></B> Toggles;

   <B><FONT COLOR="#A020F0">package</FONT></B> <B><FONT COLOR="#A020F0">body</FONT></B> Toggles <B><FONT COLOR="#A020F0">is</FONT></B>
      <B><FONT COLOR="#A020F0">procedure</FONT></B> Activate (A : <B><FONT COLOR="#A020F0">in</FONT></B> <B><FONT COLOR="#A020F0">out</FONT></B> A_Rec) <B><FONT COLOR="#A020F0">is</FONT></B>
      <B><FONT COLOR="#A020F0">begin</FONT></B>
         A.Value := <B><FONT COLOR="#A020F0">not</FONT></B> A.Value;
      <B><FONT COLOR="#A020F0">end</FONT></B> Activate;

      <B><FONT COLOR="#A020F0">procedure</FONT></B> Activate (B : <B><FONT COLOR="#A020F0">in</FONT></B> <B><FONT COLOR="#A020F0">out</FONT></B> B_Rec) <B><FONT COLOR="#A020F0">is</FONT></B>
      <B><FONT COLOR="#A020F0">begin</FONT></B>
         B.Count := B.Count + 1;
         <B><FONT COLOR="#A020F0">if</FONT></B> B.Count = B.Flip_Period <B><FONT COLOR="#A020F0">then</FONT></B>
            B.Count := 0;
            B.Value := <B><FONT COLOR="#A020F0">not</FONT></B> B.Value;
         <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B>;
      <B><FONT COLOR="#A020F0">end</FONT></B> Activate;
   <B><FONT COLOR="#A020F0">end</FONT></B> Toggles;

   X        : Toggles.A_Rec := (Value =&gt; True);
   Y        : Toggles.B_Rec := (Value =&gt; True, Count =&gt; 0, Flip_Period =&gt; 3);
   Val      : Boolean;
   N        : Positive := 1;
<B><FONT COLOR="#A020F0">begin</FONT></B>
   <B><FONT COLOR="#A020F0">begin</FONT></B>
      N := Positive'Value (Ada.Command_Line.Argument (1));
   <B><FONT COLOR="#A020F0">exception</FONT></B>
      <B><FONT COLOR="#A020F0">when</FONT></B> Constraint_Error =&gt; <B><FONT COLOR="#A020F0">null</FONT></B>;
   <B><FONT COLOR="#A020F0">end</FONT></B>;
   <B><FONT COLOR="#A020F0">for</FONT></B> Iter <B><FONT COLOR="#A020F0">in</FONT></B> 1 .. N <B><FONT COLOR="#A020F0">loop</FONT></B>
      Toggles.Activate (X);
      Val := X.Value;
   <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">loop</FONT></B>;
   Text_IO.Put_Line (Ada.Characters.Handling.To_Lower (Boolean'Image (Val)));
   <B><FONT COLOR="#A020F0">for</FONT></B> Iter <B><FONT COLOR="#A020F0">in</FONT></B> 1 .. N <B><FONT COLOR="#A020F0">loop</FONT></B>
      Toggles.Activate (Y);
      Val := Y.Value;
   <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#A020F0">loop</FONT></B>;
   Text_IO.Put_Line (Ada.Characters.Handling.To_Lower (Boolean'Image (Val)));
<B><FONT COLOR="#A020F0">end</FONT></B> MethCall;</pre></td></tr></table>
