#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>php <span class="sym">-</span>f
<span class="sym">&lt;</span>?php
<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com"></span>
<span class="com">   php -q sieve.php 9000</span>
<span class="com">*/</span>


<span class="kwb">$n</span> <span class="sym">= (</span><span class="kwb">$argc</span> <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">] :</span> <span class="num">1</span><span class="sym">;</span>

<span class="kwb">$stop</span> <span class="sym">=</span> <span class="num">8192</span><span class="sym">;</span>
<span class="kwb">$count</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>

<span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$n</span><span class="sym">-- &gt;</span> <span class="num">0</span><span class="sym">) {</span>
   <span class="kwb">$count</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   <span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$stop</span><span class="sym">;</span> <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">--)</span> <span class="kwb">$isPrime</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> <span class="num">1</span><span class="sym">;</span>

   <span class="kwb">$i</span> <span class="sym">=</span> <span class="num">2</span><span class="sym">;</span> <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">++ &lt;</span> <span class="kwb">$stop</span><span class="sym">){</span>
      <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$isPrime</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]){</span>
         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$k</span><span class="sym">=</span><span class="kwb">$i</span><span class="sym">+</span><span class="kwb">$i</span><span class="sym">;</span> <span class="kwb">$k</span><span class="sym">&lt;=</span><span class="kwb">$stop</span><span class="sym">;</span> <span class="kwb">$k</span><span class="sym">+=</span><span class="kwb">$i</span><span class="sym">)</span> <span class="kwb">$isPrime</span><span class="sym">[</span><span class="kwb">$k</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;</span>
         <span class="kwb">$count</span><span class="sym">++;</span>
      <span class="sym">}</span>
   <span class="sym">}</span>
<span class="sym">}</span>
<span class="kwa">print</span> <span class="str">&quot;Count: $count</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>

?<span class="sym">&gt;</span>
