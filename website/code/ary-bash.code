<span class="line">    1 </span><span class="slc">#!/bin/bash
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="slc"># this program is modified from:
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">#   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html
</span><span class="line">    6 </span><span class="slc"></span><span class="slc"># Timing Trials, or, the Trials of Timing: Experiments with Scripting
</span><span class="line">    7 </span><span class="slc"></span><span class="slc"># and User-Interface Languages by Brian W. Kernighan and
</span><span class="line">    8 </span><span class="slc"></span><span class="slc"># Christopher J. Van Wyk.
</span><span class="line">    9 </span><span class="slc"></span>
<span class="line">   10 </span><span class="slc"># this version creates a $cnt vairable for the for loop
</span><span class="line">   11 </span><span class="slc"></span><span class="slc"># Bash version (samething) by David Pyke JUL-20
</span><span class="line">   12 </span><span class="slc"></span>
<span class="line">   13 </span>n<span class="sym">=</span><span class="kwb">${1:-1}</span>
<span class="line">   14 </span>
<span class="line">   15 </span><span class="kwb">declare</span> <span class="sym">-</span>ai X
<span class="line">   16 </span><span class="kwb">declare</span> <span class="sym">-</span>ai Y
<span class="line">   17 </span><span class="kwb">declare</span> <span class="sym">-</span>i j
<span class="line">   18 </span><span class="kwb">declare</span> <span class="sym">-</span>i i
<span class="line">   19 </span><span class="kwb">declare</span> <span class="sym">-</span>i last
<span class="line">   20 </span>
<span class="line">   21 </span>last<span class="sym">=</span><span class="kwb">$</span><span class="sym">((</span><span class="kwb">$n</span><span class="num">-1</span><span class="sym">));
</span><span class="line">   22 </span><span class="sym"></span>cnt<span class="sym">=
</span><span class="line">   23 </span><span class="sym">
</span><span class="line">   24 </span><span class="sym"></span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span><span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">-</span>le <span class="kwb">$last</span>  <span class="sym">] ;</span> <span class="kwa">do
</span><span class="line">   26 </span><span class="kwa"></span>        j<span class="sym">=</span><span class="kwb">$</span><span class="sym">((</span><span class="kwb">$i</span><span class="sym">+</span><span class="num">1</span><span class="sym">));
</span><span class="line">   27 </span><span class="sym"></span>        X<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]=</span><span class="kwb">$j</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>        cnt<span class="sym">=</span><span class="str">&quot;$i $cnt&quot;</span>
<span class="line">   29 </span>        i<span class="sym">=</span><span class="kwb">$j</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span><span class="kwa">done
</span><span class="line">   31 </span><span class="kwa">
</span><span class="line">   32 </span><span class="kwa"></span>k<span class="sym">=</span><span class="num">0</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span><span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$k</span> <span class="sym">-</span>le <span class="num">999</span>  <span class="sym">] ;</span> <span class="kwa">do
</span><span class="line">   34 </span><span class="kwa">
</span><span class="line">   35 </span><span class="kwa">        for</span> i <span class="kwa">in</span> <span class="kwb">$cnt</span><span class="sym">;</span> <span class="kwa">do
</span><span class="line">   36 </span><span class="kwa"></span>                Y<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]=</span><span class="kwb">$</span><span class="sym">((</span><span class="kwb">${Y[$i]}</span> <span class="sym">+</span> <span class="kwb">${X[$i]}</span><span class="sym">));
</span><span class="line">   37 </span><span class="sym"></span>        <span class="kwa">done</span><span class="sym">;
</span><span class="line">   38 </span><span class="sym">
</span><span class="line">   39 </span><span class="sym"></span>        k<span class="sym">=</span><span class="kwb">$</span><span class="sym">((</span> <span class="kwb">$k</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">));
</span><span class="line">   40 </span><span class="sym"></span><span class="kwa">done
</span><span class="line">   41 </span><span class="kwa">
</span><span class="line">   42 </span><span class="kwa"></span><span class="kwb">echo</span> <span class="str">&quot;${Y[0]} ${Y[$last]}&quot;</span>
<span class="line">   43 </span>
<span class="line">   44 </span>
