<span class="slc">#!/bin/bash</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>

<span class="slc"># this program is modified from:</span>
<span class="slc">#   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html</span>
<span class="slc"># Timing Trials, or, the Trials of Timing: Experiments with Scripting</span>
<span class="slc"># and User-Interface Languages by Brian W. Kernighan and</span>
<span class="slc"># Christopher J. Van Wyk.</span>

<span class="slc"># this version creates a $cnt vairable for the for loop</span>
<span class="slc"># Bash version (samething) by David Pyke JUL-20</span>

n<span class="sym">=</span>$<span class="sym">{</span><span class="num">1</span><span class="sym">:-</span><span class="num">1</span><span class="sym">}</span>

<span class="kwb">declare</span> <span class="sym">-</span>ai X
<span class="kwb">declare</span> <span class="sym">-</span>ai Y
<span class="kwb">declare</span> <span class="sym">-</span>i j
<span class="kwb">declare</span> <span class="sym">-</span>i i
<span class="kwb">declare</span> <span class="sym">-</span>i last

last<span class="sym">=</span>$<span class="sym">((</span><span class="kwb">$n</span><span class="sym">-</span><span class="num">1</span><span class="sym">));</span>
cnt<span class="sym">=</span>

i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span>
<span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">-</span>le <span class="kwb">$last</span>  <span class="sym">] ;</span> <span class="kwa">do</span>
	j<span class="sym">=</span>$<span class="sym">((</span><span class="kwb">$i</span><span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
	X<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]=</span><span class="kwb">$j</span><span class="sym">;</span>
	cnt<span class="sym">=</span><span class="str">&quot;$i $cnt&quot;</span>
	i<span class="sym">=</span><span class="kwb">$j</span><span class="sym">;</span>
<span class="kwa">done</span>

k<span class="sym">=</span><span class="num">0</span><span class="sym">;</span>
<span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$k</span> <span class="sym">-</span>le <span class="num">999</span>  <span class="sym">] ;</span> <span class="kwa">do</span>

	<span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">$cnt</span><span class="sym">;</span> <span class="kwa">do</span>
		Y<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]=</span>$<span class="sym">((</span>$<span class="sym">{</span>Y<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]} +</span> $<span class="sym">{</span>X<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]}));</span>
	<span class="kwa">done</span><span class="sym">;</span>

	k<span class="sym">=</span>$<span class="sym">((</span> <span class="kwb">$k</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">));</span>
<span class="kwa">done</span>

<span class="kwb">echo</span> <span class="str">&quot;${Y[0]} ${Y[$last]}&quot;</span>


