<span class="slc">-- $Id: random-ghc.code,v 1.12 2006-01-16 01:23:09 bfulgham Exp $</span>
<span class="slc">-- http://shootout.alioth.debian.org</span>
<span class="slc">--</span>
<span class="slc">-- Original by Simon Marlow</span>
<span class="slc">-- Heavily modified by Einar Karttunen and Don Stewart</span>

<span class="kwa">import</span> System<span class="sym">;</span> <span class="kwa">import</span> Numeric

main <span class="sym">=</span> putStrLn . <span class="sym">(</span>\n <span class="sym">-&gt;</span> showFFloat <span class="sym">(</span>Just <span class="num">9</span><span class="sym">) (</span>randl <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> <span class="num">42</span><span class="sym">) [])</span> . read . head <span class="sym">=&lt;&lt;</span> getArgs

randl <span class="sym">(</span>n<span class="sym">::</span><span class="kwb">Int</span><span class="sym">) (</span>seed<span class="sym">::</span><span class="kwb">Int</span><span class="sym">) =</span> if n <span class="sym">==</span> <span class="num">0</span> <span class="kwa">then</span> nr <span class="kwa">else</span> randl <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> ns <span class="sym">::</span> <span class="kwb">Double</span>
  <span class="kwa">where</span> <span class="sym">(</span>ns<span class="sym">,</span>nr<span class="sym">)    = ((</span>seed <span class="sym">*</span> ia <span class="sym">+</span> ic<span class="sym">)</span> `mod` im<span class="sym">, (</span>fromIntegral ns<span class="sym">) * (</span><span class="num">100</span> <span class="sym">/</span> fromIntegral im<span class="sym">))</span>
        <span class="sym">(</span>im<span class="sym">,</span>ia<span class="sym">,</span>ic<span class="sym">) = (</span><span class="num">139968</span><span class="sym">,</span><span class="num">3877</span><span class="sym">,</span><span class="num">29573</span><span class="sym">)</span>
