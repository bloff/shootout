<span class="line">    1 </span><span class="com">(* -*- mode: sml -*-
</span><span class="line">    2 </span><span class="com"> * $Id: ary-smlnj.code,v 1.3 2004-11-11 07:13:56 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> *)</span>
<span class="line">    5 </span>
<span class="line">    6 </span><span class="kwa">structure</span> Test <span class="sym">:</span> <span class="kwa">sig
</span><span class="line">    7 </span><span class="kwa">    val</span> main <span class="sym">: (</span><span class="kwb">string</span> <span class="sym">*</span> <span class="kwb">string</span> list<span class="sym">) -&gt;</span> OS.Process.status
<span class="line">    8 </span><span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct
</span><span class="line">    9 </span><span class="kwa">
</span><span class="line">   10 </span><span class="kwa">fun</span> index i <span class="sym">=</span> i<span class="sym">;
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym"></span><span class="kwa">fun</span> ary n <span class="sym">=
</span><span class="line">   13 </span><span class="sym"></span>    <span class="kwa">let
</span><span class="line">   14 </span><span class="kwa">        val</span> x <span class="sym">=</span> Array.array<span class="sym">(</span>n<span class="sym">,</span> <span class="num">0</span><span class="sym">)
</span><span class="line">   15 </span><span class="sym"></span>        <span class="kwa">val</span> y <span class="sym">=</span> Array.array<span class="sym">(</span>n<span class="sym">,</span> <span class="num">0</span><span class="sym">)
</span><span class="line">   16 </span><span class="sym"></span>        <span class="kwa">fun</span> xinit i <span class="sym">=
</span><span class="line">   17 </span><span class="sym"></span>            <span class="kwa">if</span> i <span class="sym">=</span> n <span class="kwa">then</span> <span class="sym">()
</span><span class="line">   18 </span><span class="sym"></span>            <span class="kwa">else</span> <span class="sym">(</span>Array.update<span class="sym">(</span>x<span class="sym">,</span> i<span class="sym">,</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">) ;</span> xinit <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwa">fun</span> xtoy i <span class="sym">=
</span><span class="line">   20 </span><span class="sym"></span>            <span class="kwa">if</span> i <span class="sym">&lt;</span> <span class="num">0</span> <span class="kwa">then</span> <span class="sym">()
</span><span class="line">   21 </span><span class="sym"></span>            <span class="kwa">else</span> <span class="sym">(</span>Array.update<span class="sym">(</span>y<span class="sym">,</span> i<span class="sym">,</span> Array.sub<span class="sym">(</span>x<span class="sym">,</span> i<span class="sym">) +</span> Array.sub<span class="sym">(</span>y<span class="sym">,</span> i<span class="sym">)) ;</span> xtoy <span class="sym">(</span>i <span class="num">- 1</span><span class="sym">))
</span><span class="line">   22 </span><span class="sym"></span>        <span class="kwa">fun</span> aryloop i <span class="sym">=
</span><span class="line">   23 </span><span class="sym"></span>            <span class="kwa">if</span> i <span class="sym">&lt;</span> <span class="num">0</span> <span class="kwa">then</span> <span class="sym">()
</span><span class="line">   24 </span><span class="sym"></span>            <span class="kwa">else</span> <span class="sym">(</span>xtoy<span class="sym">(</span>n<span class="num">-1</span><span class="sym">);</span> aryloop <span class="sym">(</span>i<span class="num">-1</span><span class="sym">))
</span><span class="line">   25 </span><span class="sym"></span>    <span class="kwa">in
</span><span class="line">   26 </span><span class="kwa"></span>        xinit <span class="num">0</span><span class="sym">;
</span><span class="line">   27 </span><span class="sym"></span>        aryloop <span class="num">999</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>        print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(</span>Array.sub<span class="sym">(</span>y<span class="sym">,</span> <span class="num">0</span><span class="sym">)));
</span><span class="line">   29 </span><span class="sym"></span>        print <span class="str">&quot; &quot;</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span>        print <span class="sym">(</span><span class="kwa">Int</span>.toString <span class="sym">(</span>Array.sub<span class="sym">(</span>y<span class="sym">, (</span>n<span class="num">-1</span><span class="sym">))));
</span><span class="line">   31 </span><span class="sym"></span>        print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>
<span class="line">   32 </span>    <span class="kwa">end</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym"></span><span class="kwa">fun</span> atoi s <span class="sym">=</span> <span class="kwa">case Int</span>.fromString s <span class="kwa">of</span> SOME num <span class="sym">=&gt;</span> num <span class="sym">|</span> NONE <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   35 </span><span class="sym">
</span><span class="line">   36 </span><span class="sym"></span><span class="kwa">fun</span> main<span class="sym">(</span>name<span class="sym">,</span> args<span class="sym">) =
</span><span class="line">   37 </span><span class="sym"></span>    <span class="kwa">let
</span><span class="line">   38 </span><span class="kwa">        val</span> arg <span class="sym">=</span> hd<span class="sym">(</span>args &#64; <span class="sym">[</span><span class="str">&quot;1&quot;</span><span class="sym">])
</span><span class="line">   39 </span><span class="sym"></span>        <span class="kwa">val</span> num <span class="sym">=</span> atoi arg
<span class="line">   40 </span>    <span class="kwa">in
</span><span class="line">   41 </span><span class="kwa"></span>        ary num<span class="sym">;
</span><span class="line">   42 </span><span class="sym"></span>        OS.Process.success
<span class="line">   43 </span>    <span class="kwa">end
</span><span class="line">   44 </span><span class="kwa">end
</span><span class="line">   45 </span><span class="kwa">
</span><span class="line">   46 </span><span class="kwa">val</span> _ <span class="sym">=</span> SMLofNJ.exportFn<span class="sym">(</span><span class="str">&quot;ary&quot;</span><span class="sym">,</span> Test.main<span class="sym">);</span>
