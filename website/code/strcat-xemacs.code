<span class="line">    1 </span><span class="slc">;;; -*- mode: emacs-lisp -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: strcat-xemacs.code,v 1.3 2004-11-11 07:14:19 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">()
</span><span class="line">    6 </span><span class="sym">  (</span>let<span class="sym">* ((</span>arg <span class="sym">(</span><span class="kwa">car command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>args<span class="sym">-</span>left<span class="sym">))
</span><span class="line">    7 </span><span class="sym">         (</span>num <span class="sym">(</span><span class="kwa">if</span> arg <span class="sym">(</span>string<span class="sym">-</span>to<span class="sym">-</span>number arg<span class="sym">)</span> <span class="num">1</span><span class="sym">)))
</span><span class="line">    8 </span><span class="sym">    (</span>let <span class="sym">((</span>buf <span class="sym">(</span>get<span class="sym">-</span>buffer<span class="sym">-</span>create <span class="str">&quot;mybuf&quot;</span><span class="sym">))
</span><span class="line">    9 </span><span class="sym">          (</span>str <span class="str">&quot;&quot;</span><span class="sym">))
</span><span class="line">   10 </span><span class="sym">      (</span>dotimes <span class="sym">(</span>iter num<span class="sym">)
</span><span class="line">   11 </span><span class="sym">        (</span>insert<span class="sym">-</span>string <span class="str">&quot;hello</span><span class="esc">\n</span><span class="str">&quot;</span> buf<span class="sym">))
</span><span class="line">   12 </span><span class="sym">      (</span><span class="kwa">princ</span> <span class="sym">(</span>format <span class="str">&quot;%d</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">(</span><span class="kwa">length</span> <span class="sym">(</span>buffer<span class="sym">-</span>substring nil nil buf<span class="sym">)))))))</span>
