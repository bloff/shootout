<span class="slc"># The Computer Language Benchmarks Game</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by Antoine Pitrou</span>
<span class="slc"># modified by Dominique Wahli</span>
<span class="slc"># modified by Heinrich Acker</span>

<span class="kwa">import</span> sys<span class="sym">,</span> gc
gc<span class="sym">.</span><span class="kwd">disable</span><span class="sym">()</span>

<span class="kwa">def</span> <span class="kwd">make_tree</span><span class="sym">(</span>item<span class="sym">,</span> depth<span class="sym">):</span>
    <span class="kwa">if not</span> depth<span class="sym">:</span> <span class="kwa">return</span> item<span class="sym">,</span> <span class="kwa">None</span><span class="sym">,</span> <span class="kwa">None</span>
    item2 <span class="sym">=</span> item <span class="sym">+</span> item
    depth <span class="sym">-=</span> <span class="num">1</span>
    <span class="kwa">return</span> item<span class="sym">,</span> <span class="kwd">make_tree</span><span class="sym">(</span>item2 <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> depth<span class="sym">),</span> <span class="kwd">make_tree</span><span class="sym">(</span>item2<span class="sym">,</span> depth<span class="sym">)</span>

<span class="kwa">def</span> <span class="kwd">check_tree</span><span class="sym">((</span>item<span class="sym">,</span> left<span class="sym">,</span> right<span class="sym">)):</span>
    <span class="kwa">if not</span> left<span class="sym">:</span> <span class="kwa">return</span> item
    <span class="kwa">return</span> item <span class="sym">+</span> <span class="kwd">check_tree</span><span class="sym">(</span>left<span class="sym">) -</span> <span class="kwd">check_tree</span><span class="sym">(</span>right<span class="sym">)</span>

min_depth <span class="sym">=</span> <span class="num">4</span>
max_depth <span class="sym">=</span> <span class="kwb">max</span><span class="sym">(</span>min_depth <span class="sym">+</span> <span class="num">2</span><span class="sym">,</span> <span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span>
stretch_depth <span class="sym">=</span> max_depth <span class="sym">+</span> <span class="num">1</span>

<span class="kwa">print</span> <span class="str">&quot;stretch tree of depth %d</span><span class="esc">\t</span> <span class="str">check:&quot;</span> <span class="sym">%</span> stretch_depth<span class="sym">,</span> <span class="kwd">check_tree</span><span class="sym">(</span><span class="kwd">make_tree</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> stretch_depth<span class="sym">))</span>

long_lived_tree <span class="sym">=</span> <span class="kwd">make_tree</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> max_depth<span class="sym">)</span>

iterations <span class="sym">=</span> <span class="num">2</span><span class="sym">**</span>max_depth
<span class="kwa">for</span> depth <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span>min_depth<span class="sym">,</span> stretch_depth<span class="sym">,</span> <span class="num">2</span><span class="sym">):</span>

    check <span class="sym">=</span> <span class="num">0</span>
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span> iterations <span class="sym">+</span> <span class="num">1</span><span class="sym">):</span>
        check <span class="sym">+=</span> <span class="kwd">check_tree</span><span class="sym">(</span><span class="kwd">make_tree</span><span class="sym">(</span>i<span class="sym">,</span> depth<span class="sym">)) +</span> <span class="kwd">check_tree</span><span class="sym">(</span><span class="kwd">make_tree</span><span class="sym">(-</span>i<span class="sym">,</span> depth<span class="sym">))</span>

    <span class="kwa">print</span> <span class="str">&quot;%d</span><span class="esc">\t</span> <span class="str">trees of depth %d</span><span class="esc">\t</span> <span class="str">check:&quot;</span> <span class="sym">% (</span>iterations <span class="sym">*</span> <span class="num">2</span><span class="sym">,</span> depth<span class="sym">),</span> check
    iterations <span class="sym">/=</span> <span class="num">4</span>

<span class="kwa">print</span> <span class="str">&quot;long lived tree of depth %d</span><span class="esc">\t</span> <span class="str">check:&quot;</span> <span class="sym">%</span> max_depth<span class="sym">,</span> <span class="kwd">check_tree</span><span class="sym">(</span>long_lived_tree<span class="sym">)</span>
