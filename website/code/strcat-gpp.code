<span class="slc">// -*- mode: c++ -*-
</span><span class="slc">// $Id: strcat-gpp.code,v 1.9 2005-10-07 05:43:38 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="slc">// with help from PeterB
</span>
<span class="dir">#include &lt;iostream&gt;
</span><span class="dir">#include &lt;string&gt;
</span><span class="kwa">using namespace</span> std<span class="sym">;

</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[])
{
</span>    <span class="kwb">int</span> i<span class="sym">,</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span>    string str<span class="sym">;
</span>    <span class="kwb">size_t</span> capacity <span class="sym">=</span> <span class="num">31</span><span class="sym">;
</span>    str<span class="sym">.</span>reserve<span class="sym">(</span>capacity<span class="sym">);</span> <span class="slc">// as per C-string
</span>    <span class="kwb">size_t</span> newLength <span class="sym">=</span> <span class="num">6</span><span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span>i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++)
    {
</span>	<span class="kwa">if</span><span class="sym">(</span>newLength <span class="sym">&gt;</span> capacity<span class="sym">)
	{
</span>	    capacity <span class="sym">*=</span> <span class="num">2</span><span class="sym">;
</span>	    str<span class="sym">.</span>reserve<span class="sym">(</span>capacity<span class="sym">);
	}
</span>	str <span class="sym">+=</span> <span class="str">&quot;hello</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span>	newLength <span class="sym">+=</span> <span class="num">6</span><span class="sym">;
    }
</span>    cout <span class="sym">&lt;&lt;</span> str<span class="sym">.</span>length<span class="sym">() &lt;&lt;</span> endl<span class="sym">;
</span>    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;
}</span>
