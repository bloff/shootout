<span class="line">    1 </span><span class="slc">%% The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%% http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%% contributed by Isaac Gouy (Erlang novice)
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">%% 20040619: Nicolas Niclausse: use ets instead of tuples.
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">%% 20040721: Alexey Shchepin: use process dictionary instead of ets.
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">%%
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">%% Quick and Dirty transliteration from the Mercury solution
</span><span class="line">    8 </span><span class="slc"></span><span class="slc">%% with +1 adjustment for array indexes.
</span><span class="line">    9 </span><span class="slc"></span><span class="slc">%% Mercury uses 0..N-1 and Erlang uses 1..N
</span><span class="line">   10 </span><span class="slc"></span><span class="slc">%%
</span><span class="line">   11 </span><span class="slc"></span><span class="slc">%% Usage: start from command line with
</span><span class="line">   12 </span><span class="slc"></span><span class="slc">%%     erlc heapsort.erl
</span><span class="line">   13 </span><span class="slc"></span><span class="slc">%%     erl -noinput -s heapsort main 10000
</span><span class="line">   14 </span><span class="slc"></span>
<span class="line">   15 </span><span class="sym">-</span>module<span class="sym">(</span>heapsort<span class="sym">)</span>.
<span class="line">   16 </span><span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.
<span class="line">   17 </span>
<span class="line">   18 </span>random_heap<span class="sym">(</span>I<span class="sym">,</span> Seed<span class="sym">,</span> N<span class="sym">) -&gt;
</span><span class="line">   19 </span><span class="sym"></span>    <span class="kwa">case</span> I <span class="sym">&lt;</span> N <span class="kwa">of
</span><span class="line">   20 </span><span class="kwa"></span>        true <span class="sym">-&gt;
</span><span class="line">   21 </span><span class="sym">            {</span>NextSeed<span class="sym">,</span> R<span class="sym">} =</span> gen_random<span class="sym">(</span>Seed<span class="sym">),
</span><span class="line">   22 </span><span class="sym"></span>            up_heap<span class="sym">(</span>I<span class="sym">,</span> R<span class="sym">),
</span><span class="line">   23 </span><span class="sym"></span>            random_heap<span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> NextSeed<span class="sym">,</span> N<span class="sym">);
</span><span class="line">   24 </span><span class="sym"></span>        false <span class="sym">-&gt;</span> ok
<span class="line">   25 </span>    <span class="kwa">end</span>.
<span class="line">   26 </span>
<span class="line">   27 </span>up_heap<span class="sym">(</span>N<span class="sym">,</span> Y<span class="sym">) -&gt;
</span><span class="line">   28 </span><span class="sym"></span>    HalfN <span class="sym">=</span> N div <span class="num">2</span><span class="sym">,
</span><span class="line">   29 </span><span class="sym"></span>    X <span class="sym">=</span> <span class="kwb">get</span><span class="sym">(</span>HalfN<span class="sym">+</span><span class="num">1</span><span class="sym">),</span> <span class="slc">%%%% +1
</span><span class="line">   30 </span><span class="slc"></span>    <span class="kwa">case</span> <span class="num">0</span> <span class="sym">&lt;</span> N andalso X <span class="sym">&lt;</span> Y <span class="kwa">of
</span><span class="line">   31 </span><span class="kwa"></span>        true <span class="sym">-&gt;
</span><span class="line">   32 </span><span class="sym"></span>            <span class="kwb">put</span><span class="sym">(</span>N<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> X<span class="sym">),</span> <span class="slc">%%%% +1
</span><span class="line">   33 </span><span class="slc"></span>            up_heap<span class="sym">(</span>HalfN<span class="sym">,</span> Y<span class="sym">);
</span><span class="line">   34 </span><span class="sym"></span>        false <span class="sym">-&gt;
</span><span class="line">   35 </span><span class="sym"></span>            <span class="kwb">put</span><span class="sym">(</span>N<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> Y<span class="sym">)</span> <span class="slc">%%%% +1
</span><span class="line">   36 </span><span class="slc"></span>    <span class="kwa">end</span>.
<span class="line">   37 </span>
<span class="line">   38 </span>heapsort<span class="sym">(</span><span class="num">0</span><span class="sym">) -&gt;</span> ok<span class="sym">;
</span><span class="line">   39 </span><span class="sym"></span>heapsort<span class="sym">(</span>N<span class="sym">) -&gt;
</span><span class="line">   40 </span><span class="sym"></span>    remove_greatest<span class="sym">(</span>N<span class="sym">),
</span><span class="line">   41 </span><span class="sym"></span>    heapsort<span class="sym">(</span>N<span class="num">-1</span><span class="sym">)</span>.
<span class="line">   42 </span>
<span class="line">   43 </span>remove_greatest<span class="sym">(</span>N<span class="sym">) -&gt;
</span><span class="line">   44 </span><span class="sym"></span>    X <span class="sym">=</span> <span class="kwb">get</span><span class="sym">(</span><span class="num">0</span><span class="sym">+</span><span class="num">1</span><span class="sym">),</span> <span class="slc">%%%% +1
</span><span class="line">   45 </span><span class="slc"></span>    Y <span class="sym">=</span> <span class="kwb">get</span><span class="sym">(</span>N<span class="sym">+</span><span class="num">1</span><span class="sym">),</span> <span class="slc">%%%% +1
</span><span class="line">   46 </span><span class="slc"></span>    <span class="kwb">put</span><span class="sym">(</span>N<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> X<span class="sym">),</span> <span class="slc">%%%% +1
</span><span class="line">   47 </span><span class="slc"></span>    down_heap<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> N<span class="num">-1</span><span class="sym">,</span> Y<span class="sym">)</span>.
<span class="line">   48 </span>
<span class="line">   49 </span>down_heap<span class="sym">(</span>I<span class="sym">,</span> N<span class="sym">,</span> X<span class="sym">) -&gt;
</span><span class="line">   50 </span><span class="sym"></span>    L <span class="sym">=</span> I <span class="sym">+</span> I <span class="sym">+</span> <span class="num">1</span><span class="sym">,
</span><span class="line">   51 </span><span class="sym"></span>    R <span class="sym">=</span> L <span class="sym">+</span> <span class="num">1</span><span class="sym">,
</span><span class="line">   52 </span><span class="sym"></span>    <span class="kwa">case</span> N <span class="sym">&lt;</span> L <span class="kwa">of
</span><span class="line">   53 </span><span class="kwa"></span>        true <span class="sym">-&gt;
</span><span class="line">   54 </span><span class="sym"></span>            <span class="kwb">put</span><span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> X<span class="sym">);</span> <span class="slc">%%%% +1
</span><span class="line">   55 </span><span class="slc"></span>        false <span class="sym">-&gt;
</span><span class="line">   56 </span><span class="sym">            {</span>J<span class="sym">,</span> Y<span class="sym">} =</span> <span class="kwa">if
</span><span class="line">   57 </span><span class="kwa"></span>                         R <span class="sym">&lt;</span> N <span class="sym">-&gt;
</span><span class="line">   58 </span><span class="sym"></span>                             RV <span class="sym">=</span> <span class="kwb">get</span><span class="sym">(</span>R<span class="sym">+</span><span class="num">1</span><span class="sym">),
</span><span class="line">   59 </span><span class="sym"></span>                             LV <span class="sym">=</span> <span class="kwb">get</span><span class="sym">(</span>L<span class="sym">+</span><span class="num">1</span><span class="sym">),
</span><span class="line">   60 </span><span class="sym"></span>                             <span class="kwa">if
</span><span class="line">   61 </span><span class="kwa"></span>                                 RV <span class="sym">&gt;</span> LV <span class="sym">-&gt;
</span><span class="line">   62 </span><span class="sym">                                     {</span>R<span class="sym">,</span> RV<span class="sym">};
</span><span class="line">   63 </span><span class="sym"></span>                                 true <span class="sym">-&gt;
</span><span class="line">   64 </span><span class="sym">                                     {</span>L<span class="sym">,</span> LV<span class="sym">}
</span><span class="line">   65 </span><span class="sym"></span>                             <span class="kwa">end</span><span class="sym">;
</span><span class="line">   66 </span><span class="sym"></span>                         true <span class="sym">-&gt;
</span><span class="line">   67 </span><span class="sym">                             {</span>L<span class="sym">,</span> <span class="kwb">get</span><span class="sym">(</span>L<span class="sym">+</span><span class="num">1</span><span class="sym">)}
</span><span class="line">   68 </span><span class="sym"></span>                     <span class="kwa">end</span><span class="sym">,
</span><span class="line">   69 </span><span class="sym"></span>            <span class="kwa">case</span> X <span class="sym">&gt;</span> Y <span class="kwa">of
</span><span class="line">   70 </span><span class="kwa"></span>                true <span class="sym">-&gt;</span> <span class="kwb">put</span><span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> X<span class="sym">);</span> <span class="slc">%%%% +1
</span><span class="line">   71 </span><span class="slc"></span>                false <span class="sym">-&gt;
</span><span class="line">   72 </span><span class="sym"></span>                    <span class="kwb">put</span><span class="sym">(</span>I<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> Y<span class="sym">),</span> <span class="slc">%%%% +1
</span><span class="line">   73 </span><span class="slc"></span>                    down_heap<span class="sym">(</span>J<span class="sym">,</span> N<span class="sym">,</span> X<span class="sym">)
</span><span class="line">   74 </span><span class="sym"></span>            <span class="kwa">end
</span><span class="line">   75 </span><span class="kwa">    end</span>.
<span class="line">   76 </span>
<span class="line">   77 </span>clear_ets_array<span class="sym">(</span><span class="num">0</span><span class="sym">) -&gt;</span> ok<span class="sym">;
</span><span class="line">   78 </span><span class="sym"></span>clear_ets_array<span class="sym">(</span>I<span class="sym">) -&gt;
</span><span class="line">   79 </span><span class="sym"></span>    <span class="kwb">put</span><span class="sym">(</span>I<span class="sym">,</span> <span class="num">0</span><span class="sym">),
</span><span class="line">   80 </span><span class="sym"></span>    clear_ets_array<span class="sym">(</span>I <span class="num">- 1</span><span class="sym">)</span>.
<span class="line">   81 </span>
<span class="line">   82 </span>gen_random<span class="sym">(</span>Seed<span class="sym">) -&gt;
</span><span class="line">   83 </span><span class="sym"></span>    IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">,</span> IA <span class="sym">=</span> <span class="num">3877</span><span class="sym">,</span> IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">,
</span><span class="line">   84 </span><span class="sym"></span>    S <span class="sym">= ((</span>Seed <span class="sym">*</span> IA<span class="sym">) +</span> IC<span class="sym">)</span> rem IM<span class="sym">,
</span><span class="line">   85 </span><span class="sym">    {</span>S<span class="sym">,</span> S<span class="sym">/</span>IM<span class="sym">}</span>.
<span class="line">   86 </span>
<span class="line">   87 </span>main<span class="sym">([</span>Arg<span class="sym">]) -&gt;
</span><span class="line">   88 </span><span class="sym"></span>    N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span><span class="kwb">atom_to_list</span><span class="sym">(</span>Arg<span class="sym">)),
</span><span class="line">   89 </span><span class="sym"></span>    clear_ets_array<span class="sym">(</span>N<span class="sym">),
</span><span class="line">   90 </span><span class="sym"></span>    random_heap<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">42</span><span class="sym">,</span> N<span class="sym">),
</span><span class="line">   91 </span><span class="sym"></span>    heapsort<span class="sym">(</span>N<span class="num">-1</span><span class="sym">),
</span><span class="line">   92 </span><span class="sym"></span>    io<span class="sym">:</span>fwrite<span class="sym">(</span><span class="str">&quot;~.10f~n&quot;</span><span class="sym">, [</span><span class="kwb">get</span><span class="sym">(</span>N<span class="sym">)]),
</span><span class="line">   93 </span><span class="sym"></span>    <span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.
