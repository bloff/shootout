<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="line">    2 </span><span class="sym">-</span>e main <span class="sym">-</span>s
<span class="line">    3 </span><span class="sym">!</span>#
<span class="line">    4 </span>
<span class="line">    5 </span><span class="slc">;;; $Id: lists1-guile.code,v 1.3 2004-11-11 07:13:59 bfulgham Exp $
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    7 </span><span class="slc"></span>
<span class="line">    8 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">    9 </span><span class="sym">  (</span>let<span class="sym">* ((</span>N <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   10 </span><span class="sym"></span>         <span class="slc">;; create list (A) of integers from 1 through N
</span><span class="line">   11 </span><span class="slc"></span>         <span class="sym">(</span>A <span class="sym">(</span><span class="kwa">cdr</span> <span class="sym">(</span>iota <span class="sym">(+</span> N <span class="num">1</span><span class="sym">))))
</span><span class="line">   12 </span><span class="sym"></span>         <span class="slc">;; create empty list B
</span><span class="line">   13 </span><span class="slc"></span>         <span class="sym">(</span>B <span class="str">'())
</span><span class="line">   14 </span><span class="str">         (mid (/ N 2))
</span><span class="line">   15 </span><span class="str">         (sum 0))
</span><span class="line">   16 </span><span class="str">
</span><span class="line">   17 </span><span class="str">    ;; move each individual item from A to B, in a loop, reversing order
</span><span class="line">   18 </span><span class="str">    (while (not (null? A))
</span><span class="line">   19 </span><span class="str">           (set! B (cons (car A) B))
</span><span class="line">   20 </span><span class="str">           (set! A (cdr A)))
</span><span class="line">   21 </span><span class="str">
</span><span class="line">   22 </span><span class="str">    ;; print first 2 elements of B
</span><span class="line">   23 </span><span class="str">    (display (car B)) (display &quot; &quot;) (display (cadr B)) (newline)
</span><span class="line">   24 </span><span class="str">
</span><span class="line">   25 </span><span class="str">    ;; reverse B (can be done in place)
</span><span class="line">   26 </span><span class="str">    (set! B (reverse! B))
</span><span class="line">   27 </span><span class="str">
</span><span class="line">   28 </span><span class="str">    ;; is 0 a member of B?
</span><span class="line">   29 </span><span class="str">    (display (if (member 0 B) &quot;true&quot; &quot;false&quot;)) (newline)
</span><span class="line">   30 </span><span class="str">
</span><span class="line">   31 </span><span class="str">    ;; is N a member of B?
</span><span class="line">   32 </span><span class="str">    (display (if (member N B) &quot;true&quot; &quot;false&quot;)) (newline)
</span><span class="line">   33 </span><span class="str">
</span><span class="line">   34 </span><span class="str">    ;; filter values from B to A that are less than N/2, preserving order
</span><span class="line">   35 </span><span class="str">    (for-each (lambda (x) (if (&lt; x mid) (set! A (cons x A)))) B)
</span><span class="line">   36 </span><span class="str">    (set! A (reverse! A))
</span><span class="line">   37 </span><span class="str">
</span><span class="line">   38 </span><span class="str">    ;; print first ten items of A
</span><span class="line">   39 </span><span class="str">    (do ((i 0 (+ i 1))
</span><span class="line">   40 </span><span class="str">         (x A (cdr x)))
</span><span class="line">   41 </span><span class="str">        ((or (= i 10) (null? x)))
</span><span class="line">   42 </span><span class="str">      (display (car x))
</span><span class="line">   43 </span><span class="str">      (if (&lt; i 9) (display &quot; &quot;) (newline)))
</span><span class="line">   44 </span><span class="str">
</span><span class="line">   45 </span><span class="str">    ;; print sum of items in A that are less than 1000
</span><span class="line">   46 </span><span class="str">    (for-each (lambda (x) (if (&lt; x 1000) (set! sum (+ x sum)))) A)
</span><span class="line">   47 </span><span class="str">    (display sum) (newline)
</span><span class="line">   48 </span><span class="str">
</span><span class="line">   49 </span><span class="str">    ;; append B to end of A
</span><span class="line">   50 </span><span class="str">    (set-cdr! (last-pair A) B)
</span><span class="line">   51 </span><span class="str">
</span><span class="line">   52 </span><span class="str">    ;; print length of A
</span><span class="line">   53 </span><span class="str">    (display (length A)) (display &quot; &quot;)
</span><span class="line">   54 </span><span class="str">    (display (car (last-pair A))) (newline)))</span>
