<span class="line">    1 </span><span class="slc">// $Id: hash2-csharp.code,v 1.3 2004-11-11 07:13:57 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://shootout.alioth.debian.org
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// Updated by Brent Fulgham
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">using</span> System<span class="sym">;
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">using</span> System<span class="sym">.</span>Collections<span class="sym">;
</span><span class="line">    7 </span><span class="sym">
</span><span class="line">    8 </span><span class="sym"></span><span class="kwc">class</span> hash2 <span class="sym">{
</span><span class="line">    9 </span><span class="sym"></span>    <span class="kwc">public</span> <span class="kwb">static int</span> Main<span class="sym">(</span>String<span class="sym">[]</span> args<span class="sym">) {
</span><span class="line">   10 </span><span class="sym"></span>        Hashtable hash1 <span class="sym">=</span> <span class="kwa">new</span> Hashtable<span class="sym">();
</span><span class="line">   11 </span><span class="sym"></span>        Hashtable hash2 <span class="sym">=</span> <span class="kwa">new</span> Hashtable<span class="sym">();
</span><span class="line">   12 </span><span class="sym">
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwb">int</span> n <span class="sym">=</span> System<span class="sym">.</span>Convert<span class="sym">.</span>ToInt32<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   14 </span><span class="sym"></span>        <span class="kwa">if</span><span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span>        <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;=</span><span class="num">9999</span><span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   17 </span><span class="sym"></span>            hash1<span class="sym">.</span>Add<span class="sym">(</span> <span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> i<span class="sym">.</span>ToString<span class="sym">(),</span> i<span class="sym">);
</span><span class="line">   18 </span><span class="sym">        }
</span><span class="line">   19 </span><span class="sym">
</span><span class="line">   20 </span><span class="sym"></span>        <span class="kwa">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> n<span class="sym">;</span> i<span class="sym">++) {
</span><span class="line">   21 </span><span class="sym"></span>            IDictionaryEnumerator it <span class="sym">=</span> hash1<span class="sym">.</span>GetEnumerator<span class="sym">();
</span><span class="line">   22 </span><span class="sym"></span>            <span class="kwa">while</span><span class="sym">(</span>it<span class="sym">.</span>MoveNext<span class="sym">()) {
</span><span class="line">   23 </span><span class="sym"></span>                <span class="kwa">if</span><span class="sym">(</span>hash2<span class="sym">.</span>ContainsKey<span class="sym">(</span>it<span class="sym">.</span>Key<span class="sym">)) {
</span><span class="line">   24 </span><span class="sym"></span>                    <span class="kwb">int</span> v1 <span class="sym">= (</span><span class="kwb">int</span><span class="sym">)</span> hash1<span class="sym">[</span>it<span class="sym">.</span>Key<span class="sym">];
</span><span class="line">   25 </span><span class="sym"></span>                    <span class="kwb">int</span> v2 <span class="sym">= (</span><span class="kwb">int</span><span class="sym">)</span> hash2<span class="sym">[</span>it<span class="sym">.</span>Key<span class="sym">];
</span><span class="line">   26 </span><span class="sym"></span>                    hash2<span class="sym">[</span>it<span class="sym">.</span>Key<span class="sym">] =</span> v1 <span class="sym">+</span> v2<span class="sym">;
</span><span class="line">   27 </span><span class="sym">                }</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   28 </span><span class="sym"></span>                    hash2<span class="sym">.</span>Add<span class="sym">(</span>it<span class="sym">.</span>Key<span class="sym">,</span> hash1<span class="sym">[</span>it<span class="sym">.</span>Key<span class="sym">]);
</span><span class="line">   29 </span><span class="sym">                }
</span><span class="line">   30 </span><span class="sym">            }
</span><span class="line">   31 </span><span class="sym">        }
</span><span class="line">   32 </span><span class="sym"></span>        Console<span class="sym">.</span>WriteLine<span class="sym">(</span><span class="str">&quot;{0} {1} {2} {3}&quot;</span><span class="sym">,</span> hash1<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">],</span> hash1<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">],
</span><span class="line">   33 </span><span class="sym"></span>                hash2<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">],</span> hash2<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">]);
</span><span class="line">   34 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
</span><span class="line">   35 </span><span class="sym">    }
</span><span class="line">   36 </span><span class="sym">}</span>
