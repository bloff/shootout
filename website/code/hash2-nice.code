<span class="line">    1 </span><span class="com">/* The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="com">     http://shootout.alioth.debian.org/
</span><span class="line">    3 </span><span class="com">    contributed by Isaac Gouy
</span><span class="line">    4 </span><span class="com"> 
</span><span class="line">    5 </span><span class="com"> To compile:
</span><span class="line">    6 </span><span class="com">            nicec --sourcepath=.. -d=. -a hash2.jar hash2
</span><span class="line">    7 </span><span class="com"> 
</span><span class="line">    8 </span><span class="com"> To run:
</span><span class="line">    9 </span><span class="com">    java -ea -jar hash2.jar 150
</span><span class="line">   10 </span><span class="com"> */</span>
<span class="line">   11 </span>
<span class="line">   12 </span>
<span class="line">   13 </span>   <span class="kwa">import</span> ackermann<span class="sym">;</span> <span class="slc">// reuse toSinglePositiveInt 
</span><span class="line">   14 </span><span class="slc"></span>
<span class="line">   15 </span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){
</span><span class="line">   16 </span><span class="sym"> </span>   var n <span class="sym">=</span> toSinglePositiveInt<span class="sym">(</span>args<span class="sym">);
</span><span class="line">   17 </span><span class="sym"> </span>   <span class="kwa">let</span> nKeys <span class="sym">=</span> <span class="num">10000</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym"> 
</span><span class="line">   19 </span><span class="sym"> </span>   <span class="kwa">let</span> table1 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">HashMap</span><span class="sym">(</span>nKeys<span class="sym">);
</span><span class="line">   20 </span><span class="sym"> </span>   <span class="kwa">let</span> table2 <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">HashMap</span><span class="sym">();
</span><span class="line">   21 </span><span class="sym"> </span>   <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;=</span> nKeys<span class="sym">;</span> i<span class="sym">++)
</span><span class="line">   22 </span><span class="sym">  </span>      table1<span class="sym">[</span><span class="str">&quot;foo_&quot;</span> <span class="sym">+</span> i<span class="sym">] =</span> <span class="kwa">new</span> Cell<span class="sym">(</span>value<span class="sym">:</span> i<span class="sym">);
</span><span class="line">   23 </span><span class="sym"> 
</span><span class="line">   24 </span><span class="sym"> </span>   <span class="kwc">String</span> key<span class="sym">;
</span><span class="line">   25 </span><span class="sym"> </span>   <span class="kwb">int</span> v1<span class="sym">;
</span><span class="line">   26 </span><span class="sym">         </span>   ?Cell c2<span class="sym">;</span>      <span class="slc">// c2 = table2[key] can be null  
</span><span class="line">   27 </span><span class="slc"></span>
<span class="line">   28 </span>    <span class="kwa">while</span> <span class="sym">(</span>n<span class="sym">-- &gt;</span> <span class="num">0</span><span class="sym">)
</span><span class="line">   29 </span><span class="sym">  </span>     <span class="kwa">for</span> <span class="sym">(</span>each <span class="sym">:</span> table1<span class="sym">.</span>entrySet<span class="sym">) {
</span><span class="line">   30 </span><span class="sym"> </span>         key <span class="sym">=</span> each<span class="sym">.</span>getKey<span class="sym">;
</span><span class="line">   31 </span><span class="sym"> </span>         v1 <span class="sym">=</span> each<span class="sym">.</span>getValue<span class="sym">.</span>value<span class="sym">;
</span><span class="line">   32 </span><span class="sym">                        </span>         <span class="kwa">if</span> <span class="sym">( (</span>c2 <span class="sym">=</span> table2<span class="sym">[</span>key<span class="sym">]) !=</span> null<span class="sym">)
</span><span class="line">   33 </span><span class="sym"> </span>            c2<span class="sym">.</span>value <span class="sym">+=</span> v1<span class="sym">;
</span><span class="line">   34 </span><span class="sym">    </span>         <span class="kwa">else
</span><span class="line">   35 </span><span class="kwa">  </span>            table2<span class="sym">[</span>key<span class="sym">] =</span> <span class="kwa">new</span> Cell<span class="sym">(</span>value<span class="sym">:</span> v1<span class="sym">);
</span><span class="line">   36 </span><span class="sym">       }
</span><span class="line">   37 </span><span class="sym"> 
</span><span class="line">   38 </span><span class="sym">    </span>   print<span class="sym">(</span>table1<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">]);
</span><span class="line">   39 </span><span class="sym"> </span>   print<span class="sym">(</span><span class="str">&quot; &quot;</span> <span class="sym">+</span> table1<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">]);
</span><span class="line">   40 </span><span class="sym"> </span>   print<span class="sym">(</span><span class="str">&quot; &quot;</span> <span class="sym">+</span> table2<span class="sym">[</span><span class="str">&quot;foo_1&quot;</span><span class="sym">]);
</span><span class="line">   41 </span><span class="sym"> </span>   println<span class="sym">(</span><span class="str">&quot; &quot;</span> <span class="sym">+</span> table2<span class="sym">[</span><span class="str">&quot;foo_9999&quot;</span><span class="sym">]);
</span><span class="line">   42 </span><span class="sym"> }
</span><span class="line">   43 </span><span class="sym"> 
</span><span class="line">   44 </span><span class="sym"> 
</span><span class="line">   45 </span><span class="sym"> </span><span class="kwa">class</span> Cell <span class="sym">{</span> <span class="kwb">int</span> value<span class="sym">; }
</span><span class="line">   46 </span><span class="sym"> 
</span><span class="line">   47 </span><span class="sym"> </span>toString<span class="sym">(</span>Cell c<span class="sym">) =</span> c<span class="sym">.</span>value<span class="sym">.</span>toString<span class="sym">;</span> 
