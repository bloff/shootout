<span class="slc"># $Id: sieve-mawk.code,v 1.7 2006-09-20 05:52:36 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">BEGIN</span> <span class="sym">{</span>
    n <span class="sym">= (</span><span class="kwb">ARGV</span><span class="sym">[</span><span class="num">1</span><span class="sym">] &lt;</span> <span class="num">1</span><span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> <span class="kwb">ARGV</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
    <span class="kwa">while</span> <span class="sym">(</span>n<span class="sym">--) {</span>
        count<span class="sym">=</span><span class="num">0</span><span class="sym">;</span>
        <span class="kwa">for</span><span class="sym">(</span>i<span class="sym">=</span><span class="num">2</span><span class="sym">;</span> i <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> flags<span class="sym">[</span>i<span class="sym">++]=</span><span class="num">1</span><span class="sym">);</span>
        <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">2</span><span class="sym">;</span> i <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> i<span class="sym">++) {</span>
	    <span class="kwa">if</span> <span class="sym">(</span>flags<span class="sym">[</span>i<span class="sym">]) {</span>
		<span class="slc"># remove all multiples of prime: i</span>
		<span class="kwa">for</span> <span class="sym">(</span>k<span class="sym">=</span>i<span class="sym">+</span>i<span class="sym">;</span> k <span class="sym">&lt;=</span> <span class="num">8192</span><span class="sym">;</span> k<span class="sym">+=</span>i<span class="sym">) {</span>
                    flags<span class="sym">[</span>k<span class="sym">] =</span> <span class="num">0</span><span class="sym">;</span>
		<span class="sym">}</span>
		count<span class="sym">++;</span>
	    <span class="sym">}</span>
        <span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;Count:</span> <span class="esc">%d\n</span><span class="str">&quot;</span><span class="sym">,</span> count<span class="sym">);</span>
    <span class="kwa">exit</span><span class="sym">;</span>
<span class="sym">}</span>
