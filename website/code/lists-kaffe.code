<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">// $Id: lists-kaffe.code,v 1.2 2004-11-08 08:15:15 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">// http://www.bagley.org/~doug/shootout/
</FONT></I>
<B><FONT COLOR="#A020F0">import</FONT></B> java.io.*;
<B><FONT COLOR="#A020F0">import</FONT></B> java.util.*;
<B><FONT COLOR="#A020F0">import</FONT></B> java.text.*;

<B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">class</FONT></B> lists {
    <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> SIZE = 10000;

    <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">void</FONT></B> main(String args[]) {
	<B><FONT COLOR="#A020F0">int</FONT></B> n = Integer.parseInt(args[0]);
	<B><FONT COLOR="#A020F0">int</FONT></B> result = 0;
	<B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> i = 0; i &lt; n; i++) {
	    result = test_lists();
	}
	System.out.println(result);
    }
    <B><FONT COLOR="#A020F0">public</FONT></B> <B><FONT COLOR="#A020F0">static</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B> test_lists() {
	<B><FONT COLOR="#A020F0">int</FONT></B> result = 0;
	<I><FONT COLOR="#B22222">// create a list of integers (Li1) from 1 to SIZE
</FONT></I>	LinkedList Li1 = <B><FONT COLOR="#A020F0">new</FONT></B> LinkedList();
	<B><FONT COLOR="#A020F0">for</FONT></B> (<B><FONT COLOR="#A020F0">int</FONT></B> i = 1; i &lt; SIZE+1; i++) {
	    Li1.addLast(<B><FONT COLOR="#A020F0">new</FONT></B> Integer(i));
	}
	<I><FONT COLOR="#B22222">// copy the list to Li2 (not by individual items)
</FONT></I>	LinkedList Li2 = <B><FONT COLOR="#A020F0">new</FONT></B> LinkedList(Li1);
	LinkedList Li3 = <B><FONT COLOR="#A020F0">new</FONT></B> LinkedList();
	<I><FONT COLOR="#B22222">// remove each individual item from left side of Li2 and
</FONT></I>	<I><FONT COLOR="#B22222">// append to right side of Li3 (preserving order)
</FONT></I>	<B><FONT COLOR="#A020F0">while</FONT></B> (! Li2.isEmpty()) {
	    Li3.addLast(Li2.removeFirst());
	}
	<I><FONT COLOR="#B22222">// Li2 must now be empty
</FONT></I>	<I><FONT COLOR="#B22222">// remove each individual item from right side of Li3 and
</FONT></I>	<I><FONT COLOR="#B22222">// append to right side of Li2 (reversing list)
</FONT></I>	<B><FONT COLOR="#A020F0">while</FONT></B> (! Li3.isEmpty()) {
	    Li2.addLast(Li3.removeLast());
	}
	<I><FONT COLOR="#B22222">// Li3 must now be empty
</FONT></I>	<I><FONT COLOR="#B22222">// reverse Li1
</FONT></I>	LinkedList tmp = <B><FONT COLOR="#A020F0">new</FONT></B> LinkedList();
	<B><FONT COLOR="#A020F0">while</FONT></B> (! Li1.isEmpty()) {
	    tmp.addFirst(Li1.removeFirst());
	}
	Li1 = tmp;
	<I><FONT COLOR="#B22222">// check that first item is now SIZE
</FONT></I>	<B><FONT COLOR="#A020F0">if</FONT></B> (((Integer)Li1.getFirst()).intValue() != SIZE) {
	    System.err.println(<B><FONT COLOR="#BC8F8F">&quot;first item of Li1 != SIZE&quot;</FONT></B>);
	    <B><FONT COLOR="#A020F0">return</FONT></B>(0);
	}
	<I><FONT COLOR="#B22222">// compare Li1 and Li2 for equality
</FONT></I>	<B><FONT COLOR="#A020F0">if</FONT></B> (! Li1.equals(Li2)) {
	    System.err.println(<B><FONT COLOR="#BC8F8F">&quot;Li1 and Li2 differ&quot;</FONT></B>);
	    System.err.println(<B><FONT COLOR="#BC8F8F">&quot;Li1:&quot;</FONT></B> + Li1);
	    System.err.println(<B><FONT COLOR="#BC8F8F">&quot;Li2:&quot;</FONT></B> + Li2);
	    <B><FONT COLOR="#A020F0">return</FONT></B>(0);
	}
	<I><FONT COLOR="#B22222">// return the length of the list
</FONT></I>	<B><FONT COLOR="#A020F0">return</FONT></B>(Li1.size());
    }
}</pre></td></tr></table>
