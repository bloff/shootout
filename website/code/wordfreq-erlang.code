<span class="line">    1 </span><span class="slc">%%% -*- mode: erlang -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%%% $Id: wordfreq-erlang.code,v 1.3 2004-11-11 07:14:20 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%%% http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">%%%
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">%%% Contributed by Bengt Kleberg (Erlang Guru!)
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">%%% Updated by Alexey Shchepin &lt;alexey&#64;sevcom.net&gt;
</span><span class="line">    7 </span><span class="slc"></span>
<span class="line">    8 </span><span class="sym">-</span>module<span class="sym">(</span>wordfreq<span class="sym">)</span>.
<span class="line">    9 </span><span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.
<span class="line">   10 </span>
<span class="line">   11 </span><span class="sym">-</span>define<span class="sym">(</span>BUFSIZE<span class="sym">,</span> <span class="num">4096</span><span class="sym">)</span>.
<span class="line">   12 </span>
<span class="line">   13 </span><span class="slc">%% ignore program argument
</span><span class="line">   14 </span><span class="slc"></span>main<span class="sym">() -&gt;</span> main<span class="sym">([</span><span class="str">'1'</span><span class="sym">])</span>.
<span class="line">   15 </span>main<span class="sym">(</span>_Args<span class="sym">) -&gt;
</span><span class="line">   16 </span><span class="sym"></span>    ets<span class="sym">:</span>new<span class="sym">(</span>freqtab<span class="sym">, [</span>set<span class="sym">,</span> named_table<span class="sym">]),
</span><span class="line">   17 </span><span class="sym"></span>    ok <span class="sym">=</span> io<span class="sym">:</span>setopts<span class="sym">([</span><span class="kwb">binary</span><span class="sym">]),
</span><span class="line">   18 </span><span class="sym"></span>    insert_input<span class="sym">(</span>io<span class="sym">:</span>get_chars<span class="sym">(</span><span class="str">''</span><span class="sym">,</span> ?BUFSIZE<span class="sym">),</span> <span class="str">&quot;&quot;</span><span class="sym">),
</span><span class="line">   19 </span><span class="sym"></span>    List <span class="sym">=</span> sort<span class="sym">(),
</span><span class="line">   20 </span><span class="sym"></span>    print<span class="sym">(</span>List<span class="sym">),
</span><span class="line">   21 </span><span class="sym"></span>    <span class="kwb">halt</span><span class="sym">()</span>.
<span class="line">   22 </span>
<span class="line">   23 </span>
<span class="line">   24 </span>insert_input<span class="sym">(</span>eof<span class="sym">,</span> _Prev<span class="sym">) -&gt;</span> ok<span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>insert_input<span class="sym">(</span>Buf<span class="sym">,</span> Prev<span class="sym">) -&gt;
</span><span class="line">   26 </span><span class="sym"></span>    Suffix <span class="sym">=</span> words1<span class="sym">(</span>Prev <span class="sym">++</span> <span class="kwb">binary_to_list</span><span class="sym">(</span>Buf<span class="sym">)),
</span><span class="line">   27 </span><span class="sym"></span>    insert_input<span class="sym">(</span>io<span class="sym">:</span>get_chars<span class="sym">(</span><span class="str">''</span><span class="sym">,</span> ?BUFSIZE<span class="sym">),</span> Suffix<span class="sym">)</span>.
<span class="line">   28 </span>
<span class="line">   29 </span>
<span class="line">   30 </span>words1<span class="sym">([</span>C <span class="sym">|</span> S<span class="sym">]) -&gt;
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwa">if
</span><span class="line">   32 </span><span class="kwa"></span>        <span class="sym">(</span>C <span class="sym">&gt;=</span> $a<span class="sym">)</span> and <span class="sym">(</span>C <span class="sym">=&lt;</span> $z<span class="sym">) -&gt;</span> words2<span class="sym">(</span>S<span class="sym">, [</span>C<span class="sym">]);
</span><span class="line">   33 </span><span class="sym">        (</span>C <span class="sym">&gt;=</span> $A<span class="sym">)</span> and <span class="sym">(</span>C <span class="sym">=&lt;</span> $Z<span class="sym">) -&gt;</span> words2<span class="sym">(</span>S<span class="sym">, [</span>C <span class="sym">+</span> <span class="num">32</span><span class="sym">]);
</span><span class="line">   34 </span><span class="sym"></span>        true <span class="sym">-&gt;</span> words1<span class="sym">(</span>S<span class="sym">)
</span><span class="line">   35 </span><span class="sym"></span>    <span class="kwa">end</span><span class="sym">;
</span><span class="line">   36 </span><span class="sym"></span>words1<span class="sym">([]) -&gt;
</span><span class="line">   37 </span><span class="sym"></span>    <span class="str">&quot;&quot;</span>.
<span class="line">   38 </span>
<span class="line">   39 </span>words2<span class="sym">([</span>C <span class="sym">|</span> S<span class="sym">],</span> Cs<span class="sym">) -&gt;
</span><span class="line">   40 </span><span class="sym"></span>    <span class="kwa">if
</span><span class="line">   41 </span><span class="kwa"></span>        <span class="sym">(</span>C <span class="sym">&gt;=</span> $a<span class="sym">)</span> and <span class="sym">(</span>C <span class="sym">=&lt;</span> $z<span class="sym">) -&gt;</span> words2<span class="sym">(</span>S<span class="sym">, [</span>C <span class="sym">|</span> Cs<span class="sym">]);
</span><span class="line">   42 </span><span class="sym">        (</span>C <span class="sym">&gt;=</span> $A<span class="sym">)</span> and <span class="sym">(</span>C <span class="sym">=&lt;</span> $Z<span class="sym">) -&gt;</span> words2<span class="sym">(</span>S<span class="sym">, [</span>C <span class="sym">+</span> <span class="num">32</span> <span class="sym">|</span> Cs<span class="sym">]);
</span><span class="line">   43 </span><span class="sym"></span>        true <span class="sym">-&gt;
</span><span class="line">   44 </span><span class="sym"></span>            update_count<span class="sym">(</span>Cs<span class="sym">),
</span><span class="line">   45 </span><span class="sym"></span>            words1<span class="sym">(</span>S<span class="sym">)
</span><span class="line">   46 </span><span class="sym"></span>    <span class="kwa">end</span><span class="sym">;
</span><span class="line">   47 </span><span class="sym"></span>words2<span class="sym">([],</span> Cs<span class="sym">) -&gt;
</span><span class="line">   48 </span><span class="sym"></span>    lists<span class="sym">:</span>reverse<span class="sym">(</span>Cs<span class="sym">)</span>.
<span class="line">   49 </span>
<span class="line">   50 </span>
<span class="line">   51 </span>update_count<span class="sym">(</span>Word<span class="sym">) -&gt;
</span><span class="line">   52 </span><span class="sym"></span>    <span class="kwa">case</span> <span class="sym">(</span><span class="kwa">catch</span> ets<span class="sym">:</span>update_counter<span class="sym">(</span>freqtab<span class="sym">,</span> Word<span class="sym">,</span> <span class="num">1</span><span class="sym">))</span> <span class="kwa">of
</span><span class="line">   53 </span><span class="kwa"></span>        <span class="sym">{</span><span class="str">'EXIT'</span><span class="sym">, {</span>badarg<span class="sym">,</span> _<span class="sym">}} -&gt;
</span><span class="line">   54 </span><span class="sym"></span>            true <span class="sym">=</span> ets<span class="sym">:</span>insert<span class="sym">(</span>freqtab<span class="sym">, {</span>Word<span class="sym">,</span> <span class="num">1</span><span class="sym">});
</span><span class="line">   55 </span><span class="sym"></span>        _Integer <span class="sym">-&gt;
</span><span class="line">   56 </span><span class="sym"></span>            ok
<span class="line">   57 </span>    <span class="kwa">end</span>.
<span class="line">   58 </span>
<span class="line">   59 </span>sort<span class="sym">() -&gt;
</span><span class="line">   60 </span><span class="sym"></span>    Rev <span class="sym">= [{</span>C<span class="sym">,</span> lists<span class="sym">:</span>reverse<span class="sym">(</span>W<span class="sym">)} || {</span>W<span class="sym">,</span> C<span class="sym">} &lt;-</span> ets<span class="sym">:</span>tab2list<span class="sym">(</span>freqtab<span class="sym">)],
</span><span class="line">   61 </span><span class="sym"></span>    lists<span class="sym">:</span>reverse<span class="sym">(</span>lists<span class="sym">:</span>sort<span class="sym">(</span>Rev<span class="sym">))</span>.
<span class="line">   62 </span>
<span class="line">   63 </span>print<span class="sym">(</span>List<span class="sym">) -&gt;
</span><span class="line">   64 </span><span class="sym"></span>    Fun <span class="sym">=</span> <span class="kwa">fun</span><span class="sym">({</span>Count<span class="sym">,</span> Word<span class="sym">}) -&gt;
</span><span class="line">   65 </span><span class="sym"></span>                  io<span class="sym">:</span>format<span class="sym">(</span><span class="str">&quot;~7w ~s~n&quot;</span><span class="sym">, [</span>Count<span class="sym">,</span> Word<span class="sym">])
</span><span class="line">   66 </span><span class="sym"></span>          <span class="kwa">end</span><span class="sym">,
</span><span class="line">   67 </span><span class="sym"></span>    lists<span class="sym">:</span>foreach<span class="sym">(</span>Fun<span class="sym">,</span> List<span class="sym">)</span>.
<span class="line">   68 </span>
