<span class="line">    1 </span><span class="slc">%% $Id: objinst-mercury.code,v 1.3 2004-11-13 07:42:24 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%% http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%% from Fergus Henderson
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">:-</span> module mytest.
<span class="line">    6 </span><span class="sym">:-</span> interface.
<span class="line">    7 </span><span class="sym">:-</span> import_module io.
<span class="line">    8 </span>
<span class="line">    9 </span><span class="sym">:-</span> pred main<span class="sym">(</span>io__state<span class="sym">::</span>di<span class="sym">,</span> io__state<span class="sym">::</span>uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   10 </span>
<span class="line">   11 </span><span class="sym">:-</span> implementation.
<span class="line">   12 </span><span class="sym">:-</span> import_module bool<span class="sym">,</span> int<span class="sym">,</span> string<span class="sym">,</span> list.
<span class="line">   13 </span>
<span class="line">   14 </span><span class="sym">:-</span> type toggle <span class="sym">---&gt;</span> toggle<span class="sym">(</span>toggle_value<span class="sym">::</span>bool<span class="sym">)</span>.
<span class="line">   15 </span>
<span class="line">   16 </span><span class="sym">:-</span> typeclass toggle<span class="sym">(</span>T<span class="sym">)</span> where <span class="sym">[
</span><span class="line">   17 </span><span class="sym"></span>        func value<span class="sym">(</span>T<span class="sym">) =</span> bool<span class="sym">,
</span><span class="line">   18 </span><span class="sym"></span>        func <span class="str">'value :='</span><span class="sym">(</span>T<span class="sym">,</span> bool<span class="sym">) =</span> T<span class="sym">,
</span><span class="line">   19 </span><span class="sym"></span>        func activate<span class="sym">(</span>T<span class="sym">) =</span> T
<span class="line">   20 </span><span class="sym">]</span>.
<span class="line">   21 </span>
<span class="line">   22 </span><span class="sym">:-</span> instance toggle<span class="sym">(</span>toggle<span class="sym">)</span> where <span class="sym">[
</span><span class="line">   23 </span><span class="sym"></span>        func<span class="sym">(</span>value<span class="sym">/</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">is</span> toggle_value<span class="sym">,
</span><span class="line">   24 </span><span class="sym"></span>        func<span class="sym">(</span><span class="str">'value :='</span><span class="sym">/</span><span class="num">2</span><span class="sym">)</span> <span class="kwa">is</span> <span class="str">'toggle_value :='</span><span class="sym">,
</span><span class="line">   25 </span><span class="sym"></span>        activate<span class="sym">(</span>toggle<span class="sym">(</span>yes<span class="sym">)) =</span> toggle<span class="sym">(</span>no<span class="sym">),
</span><span class="line">   26 </span><span class="sym"></span>        activate<span class="sym">(</span>toggle<span class="sym">(</span>no<span class="sym">)) =</span> toggle<span class="sym">(</span>yes<span class="sym">)
</span><span class="line">   27 </span><span class="sym">]</span>.
<span class="line">   28 </span>
<span class="line">   29 </span><span class="sym">:-</span> type nth_toggle <span class="sym">---&gt;</span> nth_toggle<span class="sym">(</span>base<span class="sym">::</span>toggle<span class="sym">,</span> counter<span class="sym">::</span>int<span class="sym">,</span> limit<span class="sym">::</span>int<span class="sym">)</span>.
<span class="line">   30 </span>
<span class="line">   31 </span><span class="sym">:-</span> func make_nth_toggle<span class="sym">(</span>bool<span class="sym">,</span> int<span class="sym">) =</span> nth_toggle.
<span class="line">   32 </span>make_nth_toggle<span class="sym">(</span>Val<span class="sym">,</span> Max<span class="sym">) =</span> nth_toggle<span class="sym">(</span>toggle<span class="sym">(</span>Val<span class="sym">),</span> <span class="num">0</span><span class="sym">,</span> Max<span class="sym">)</span>.
<span class="line">   33 </span>
<span class="line">   34 </span><span class="sym">:-</span> instance toggle<span class="sym">(</span>nth_toggle<span class="sym">)</span> where <span class="sym">[
</span><span class="line">   35 </span><span class="sym"></span>        value<span class="sym">(</span>T<span class="sym">) =</span> T^base^value<span class="sym">,
</span><span class="line">   36 </span><span class="sym"></span>        <span class="str">'value :='</span><span class="sym">(</span>T<span class="sym">,</span> V<span class="sym">) =</span> T^base^value <span class="sym">:=</span> V<span class="sym">,
</span><span class="line">   37 </span><span class="sym">        (</span>activate<span class="sym">(</span>T<span class="sym">) =</span> NewT <span class="sym">:-
</span><span class="line">   38 </span><span class="sym"></span>                C <span class="sym">=</span> T^counter <span class="sym">+</span> <span class="num">1</span><span class="sym">,
</span><span class="line">   39 </span><span class="sym">                (</span>if C <span class="sym">&gt;=</span> T^limit then
<span class="line">   40 </span>                        NewT <span class="sym">= (</span>T^counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">)</span>^base <span class="sym">:=</span> activate<span class="sym">(</span>T^base<span class="sym">)
</span><span class="line">   41 </span><span class="sym"></span>                else
<span class="line">   42 </span>                        NewT <span class="sym">=</span> T^counter <span class="sym">:=</span> C
<span class="line">   43 </span>                <span class="sym">))
</span><span class="line">   44 </span><span class="sym">]</span>.
<span class="line">   45 </span>
<span class="line">   46 </span>main <span class="sym">--&gt;
</span><span class="line">   47 </span><span class="sym"></span>        io__command_line_arguments<span class="sym">(</span>Args<span class="sym">),
</span><span class="line">   48 </span><span class="sym">        {</span> N <span class="sym">= (</span>if Args <span class="sym">= [</span>Arg<span class="sym">],</span> to_int<span class="sym">(</span>Arg<span class="sym">,</span> N0<span class="sym">)</span> then N0 else <span class="num">1</span><span class="sym">) },
</span><span class="line">   49 </span><span class="sym">        {</span> Toggle1 <span class="sym">=</span> toggle<span class="sym">(</span>yes<span class="sym">) },
</span><span class="line">   50 </span><span class="sym"></span>        loop<span class="sym">(</span><span class="num">5</span><span class="sym">, (</span>pred<span class="sym">(</span>T0<span class="sym">::</span>in<span class="sym">,</span> T<span class="sym">::</span>out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det <span class="sym">--&gt;
</span><span class="line">   51 </span><span class="sym">                        {</span> T <span class="sym">=</span> T0^activate <span class="sym">},
</span><span class="line">   52 </span><span class="sym"></span>                        write_string<span class="sym">(</span>if T^value <span class="sym">=</span> yes then <span class="str">&quot;true&quot;</span> else <span class="str">&quot;false&quot;</span><span class="sym">),
</span><span class="line">   53 </span><span class="sym"></span>                        <span class="kwa">nl</span><span class="sym">),
</span><span class="line">   54 </span><span class="sym"></span>                Toggle1<span class="sym">,</span> Toggle2<span class="sym">),
</span><span class="line">   55 </span><span class="sym"></span>        loop<span class="sym">(</span>N<span class="sym">, (</span>pred<span class="sym">(</span>_T0<span class="sym">::</span>in<span class="sym">,</span> T<span class="sym">::</span>out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det <span class="sym">--&gt;
</span><span class="line">   56 </span><span class="sym">                        {</span> T <span class="sym">=</span> toggle<span class="sym">(</span>yes<span class="sym">) }),
</span><span class="line">   57 </span><span class="sym"></span>                Toggle2<span class="sym">,</span> _Toggle3<span class="sym">),
</span><span class="line">   58 </span><span class="sym"></span>        <span class="kwa">nl</span><span class="sym">,
</span><span class="line">   59 </span><span class="sym">
</span><span class="line">   60 </span><span class="sym">        {</span> Toggle4 <span class="sym">=</span> make_nth_toggle<span class="sym">(</span>yes<span class="sym">,</span> <span class="num">3</span><span class="sym">) },
</span><span class="line">   61 </span><span class="sym"></span>        loop<span class="sym">(</span><span class="num">8</span><span class="sym">, (</span>pred<span class="sym">(</span>T0<span class="sym">::</span>in<span class="sym">,</span> T<span class="sym">::</span>out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det <span class="sym">--&gt;
</span><span class="line">   62 </span><span class="sym">                        {</span> T <span class="sym">=</span> T0^activate <span class="sym">},
</span><span class="line">   63 </span><span class="sym"></span>                        write_string<span class="sym">(</span>if T^value <span class="sym">=</span> yes then <span class="str">&quot;true&quot;</span> else <span class="str">&quot;false&quot;</span><span class="sym">),
</span><span class="line">   64 </span><span class="sym"></span>                        <span class="kwa">nl</span><span class="sym">),
</span><span class="line">   65 </span><span class="sym"></span>                Toggle4<span class="sym">,</span> Toggle5<span class="sym">),
</span><span class="line">   66 </span><span class="sym"></span>        loop<span class="sym">(</span>N<span class="sym">, (</span>pred<span class="sym">(</span>_T0<span class="sym">::</span>in<span class="sym">,</span> T<span class="sym">::</span>out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det <span class="sym">--&gt;
</span><span class="line">   67 </span><span class="sym">                        {</span> T <span class="sym">=</span> make_nth_toggle<span class="sym">(</span>yes<span class="sym">,</span> <span class="num">3</span><span class="sym">) }),
</span><span class="line">   68 </span><span class="sym"></span>                Toggle5<span class="sym">,</span> _Toggle6<span class="sym">)</span>.
<span class="line">   69 </span>
<span class="line">   70 </span><span class="sym">:-</span> pred loop<span class="sym">(</span>int<span class="sym">,</span> pred<span class="sym">(</span>T1<span class="sym">,</span> T1<span class="sym">,</span> T2<span class="sym">,</span> T2<span class="sym">),</span> T1<span class="sym">,</span> T1<span class="sym">,</span> T2<span class="sym">,</span> T2<span class="sym">)</span>.
<span class="line">   71 </span><span class="sym">:-</span> mode loop<span class="sym">(</span>in<span class="sym">,</span> pred<span class="sym">(</span>in<span class="sym">,</span> out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det<span class="sym">,</span> in<span class="sym">,</span> out<span class="sym">,</span> di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   72 </span>loop<span class="sym">(</span>N<span class="sym">,</span> P<span class="sym">,</span> X0<span class="sym">,</span> X<span class="sym">) --&gt;
</span><span class="line">   73 </span><span class="sym">        (</span>if <span class="sym">{</span> N <span class="sym">=</span> <span class="num">0</span> <span class="sym">}</span> then
<span class="line">   74 </span>                <span class="sym">{</span> X <span class="sym">=</span> X0 <span class="sym">}
</span><span class="line">   75 </span><span class="sym"></span>        else
<span class="line">   76 </span>                P<span class="sym">(</span>X0<span class="sym">,</span> X1<span class="sym">),
</span><span class="line">   77 </span><span class="sym"></span>                loop<span class="sym">(</span>N <span class="num">- 1</span><span class="sym">,</span> P<span class="sym">,</span> X1<span class="sym">,</span> X<span class="sym">)
</span><span class="line">   78 </span><span class="sym">        )</span>.
<span class="line">   79 </span>
