<span class="slc">;;; -*- mode: scheme -*-</span>
<span class="slc">;;; $Id: hash-bigloo.code,v 1.7 2006-09-20 05:51:27 bfulgham Exp $</span>
<span class="slc">;;; http://www.bagley.org/~doug/shootout/</span>

<span class="sym">(</span>module hash
	<span class="sym">(</span>option <span class="sym">(</span><span class="kwa">set</span><span class="sym">! *</span>genericity<span class="sym">*</span> #f<span class="sym">))</span>
	<span class="sym">(</span>main main<span class="sym">))</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>let<span class="sym">* ((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))</span>
	 <span class="sym">(</span><span class="kwa">last</span> <span class="sym">(-</span> n <span class="num">1</span><span class="sym">))</span>
	 <span class="sym">(</span><span class="kwa">max</span> <span class="sym">(</span>do <span class="sym">((</span><span class="kwa">max</span> <span class="num">1</span> <span class="sym">(*</span> <span class="kwa">max</span> <span class="num">2</span><span class="sym">))) ((&gt;</span> <span class="kwa">max</span> n<span class="sym">)</span> <span class="kwa">max</span><span class="sym">)))</span>
	 <span class="sym">(</span>x <span class="sym">(</span>make<span class="sym">-</span>hash<span class="sym">-</span>table <span class="kwa">max</span>
			     <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>o<span class="sym">) (</span>string<span class="sym">-&gt;</span><span class="num">0</span>.<span class="num">.2</span>^x<span class="sym">-</span><span class="num">1</span> o <span class="num">14</span><span class="sym">))</span>
			     <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>c<span class="sym">) (</span><span class="kwa">car</span> c<span class="sym">))</span>
			     string<span class="sym">=</span>?
			     <span class="kwa">max</span><span class="sym">))</span>
	 <span class="sym">(</span>c <span class="num">0</span><span class="sym">))</span>
    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">1</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))</span>
	<span class="sym">((&gt;</span> i n<span class="sym">))</span>
      <span class="sym">(</span>put<span class="sym">-</span>hash<span class="sym">! (</span><span class="kwa">cons</span> <span class="sym">(</span>number<span class="sym">-&gt;</span>string i <span class="num">16</span><span class="sym">)</span> i<span class="sym">)</span> x<span class="sym">))</span>
    <span class="sym">(</span>do <span class="sym">((</span>i <span class="kwa">last</span> <span class="sym">(-</span> i <span class="num">1</span><span class="sym">)))</span>
	<span class="sym">((&lt;</span> i <span class="num">0</span><span class="sym">))</span>
      <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>get<span class="sym">-</span>hash <span class="sym">(</span>number<span class="sym">-&gt;</span>string i <span class="num">10</span><span class="sym">)</span> x<span class="sym">)</span>
	  <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> c <span class="sym">(+</span> c <span class="num">1</span><span class="sym">))))</span>
    <span class="sym">(</span>display c<span class="sym">)</span>
    <span class="sym">(</span>newline<span class="sym">)))</span>
