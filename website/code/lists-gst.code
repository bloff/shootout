<span class="str">&quot;  The Great Computer Language Shootout
   contributed by Isaac Gouy

   To run: gst -QI /usr/share/gnu-smalltalk/gst.im lists.st -a 16
&quot;</span>

<span class="sym">|</span> size n list1 list2 list3 count <span class="sym">|
</span>size <span class="sym">:=</span> <span class="num">10000</span>.
n <span class="sym">:=</span> Smalltalk arguments first asInteger.

n timesRepeat<span class="sym">: [
</span>   list1 <span class="sym">:=</span> OrderedCollection new<span class="sym">:</span> size.
   <span class="num">1</span> to<span class="sym">:</span> size <span class="kwa">do</span><span class="sym">: [:</span>each<span class="sym">|</span> list1 addLast<span class="sym">:</span> each<span class="sym">]</span>.
   list2 <span class="sym">:=</span> list1 copy.

   list3 <span class="sym">:=</span> OrderedCollection new<span class="sym">:</span> size.
   <span class="sym">[</span>list2 notEmpty<span class="sym">]</span> whileTrue<span class="sym">: [</span>list3 addLast<span class="sym">:</span> list2 removeFirst<span class="sym">]</span>.
   <span class="sym">[</span>list3 notEmpty<span class="sym">]</span> whileTrue<span class="sym">: [</span>list2 addLast<span class="sym">:</span> list3 removeLast<span class="sym">]</span>.

   list1 <span class="sym">:=</span> list1 reverse.
   count <span class="sym">:= (</span>list1 first <span class="sym">=</span> size <span class="kwa">and</span><span class="sym">: [</span>list1 <span class="sym">=</span> list2<span class="sym">])
</span>      ifTrue<span class="sym">: [</span>list1 size<span class="sym">]</span> ifFalse<span class="sym">: [-</span><span class="num">1</span><span class="sym">]</span>.
   <span class="sym">]</span>.

count displayNl <span class="sym">!</span>
