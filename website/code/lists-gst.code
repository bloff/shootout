<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<B><FONT COLOR="#BC8F8F">&quot;  The Great Computer Language Shootout
   contributed by Isaac Gouy

   To run: gst -QI /usr/local/share/smalltalk/gst.im lists.st -a 16
&quot;</FONT></B>

| size n list1 list2 list3 count |
size := 10000.
n := Smalltalk arguments first asInteger.

n timesRepeat: [
   list1 := OrderedCollection <B><FONT COLOR="#A020F0">new</FONT></B>: size.
   1 to: size <B><FONT COLOR="#A020F0">do</FONT></B>: [:<B><FONT COLOR="#A020F0">each</FONT></B>| list1 addLast: <B><FONT COLOR="#A020F0">each</FONT></B>].
   list2 := list1 copy.

   list3 := OrderedCollection <B><FONT COLOR="#A020F0">new</FONT></B>: size.
   [list2 notEmpty] whileTrue: [list3 addLast: list2 removeFirst]. 
   [list3 notEmpty] whileTrue: [list2 addLast: list3 removeLast].

   list1 := list1 <B><FONT COLOR="#A020F0">reverse</FONT></B>. 
   count := (list1 first = size <B><FONT COLOR="#A020F0">and</FONT></B>: [list1 = list2]) 
      ifTrue: [list1 size] ifFalse: [-1].
   ].

count displayNl !</pre></td></tr></table>
