<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>mzscheme <span class="sym">-</span>r
<span class="line">    2 </span><span class="slc">; Recursive definition, per benchmark requirements (not iterative!)
</span><span class="line">    3 </span><span class="slc"></span><span class="sym">(</span>define <span class="sym">(</span>fib n<span class="sym">)
</span><span class="line">    4 </span><span class="sym">  (</span><span class="kwa">cond</span> <span class="sym">((&lt;</span> n <span class="num">2</span><span class="sym">)</span> <span class="num">1</span><span class="sym">)
</span><span class="line">    5 </span><span class="sym">        (</span>else <span class="sym">(+ (</span>fib <span class="sym">(-</span> n <span class="num">2</span><span class="sym">)) (</span>fib <span class="sym">(-</span> n <span class="num">1</span><span class="sym">))))))
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">    8 </span><span class="sym">  (</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(= (</span>vector<span class="sym">-</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">0</span><span class="sym">)
</span><span class="line">    9 </span><span class="sym"></span>               <span class="num">1
</span><span class="line">   10 </span><span class="num"></span>               <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span>vector<span class="sym">-</span>ref args <span class="num">0</span><span class="sym">)))))
</span><span class="line">   11 </span><span class="sym">    (</span>display <span class="sym">(</span>fib n<span class="sym">))
</span><span class="line">   12 </span><span class="sym">    (</span>newline<span class="sym">)))
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym">(</span>main <span class="sym">(</span>current<span class="sym">-</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>arguments<span class="sym">))
</span><span class="line">   15 </span><span class="sym"></span>
