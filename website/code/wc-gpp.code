<span class="slc">// -*- mode: c++ -*-
</span><span class="slc">// $Id: wc-gpp.code,v 1.5 2004-11-22 07:09:06 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="slc">// with help from Tom Widmer
</span>
<span class="dir">#include &lt;iostream&gt;
</span><span class="dir">#include &lt;vector&gt;
</span>
<span class="kwa">using namespace</span> std<span class="sym">;

</span><span class="kwb">enum</span> <span class="sym">{
</span>    OUT<span class="sym">,</span>			<span class="com">/* outside a word */</span>
    IN				<span class="com">/* inside a word */</span>
<span class="sym">};

</span><span class="kwb">int
</span>main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span>    <span class="kwb">char</span> c<span class="sym">;
</span>    <span class="kwb">int</span> nl<span class="sym">,</span> nw<span class="sym">,</span> nc<span class="sym">,</span> state<span class="sym">;
</span>    <span class="kwb">char</span> buff<span class="sym">[</span><span class="num">4096</span><span class="sym">];
</span>    cin<span class="sym">.</span>rdbuf<span class="sym">()-&gt;</span>pubsetbuf<span class="sym">(</span>buff<span class="sym">,</span> <span class="num">4096</span><span class="sym">);</span> <span class="slc">// enable buffering
</span>
    state <span class="sym">=</span> OUT<span class="sym">;
</span>    nl <span class="sym">=</span> nw <span class="sym">=</span> nc <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwb">int</span> intc<span class="sym">;
</span>    streambuf<span class="sym">*</span> sbuf <span class="sym">=</span> cin<span class="sym">.</span>rdbuf<span class="sym">();
</span>    <span class="kwa">while</span> <span class="sym">((</span>intc <span class="sym">=</span> sbuf<span class="sym">-&gt;</span>sbumpc<span class="sym">()) !=</span> EOF<span class="sym">) {
</span>        c <span class="sym">= (</span><span class="kwb">char</span><span class="sym">)</span>intc<span class="sym">;
	++</span>nc<span class="sym">;
</span>	<span class="kwa">if</span> <span class="sym">(</span>c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">)
	    ++</span>nl<span class="sym">;
</span>	<span class="kwa">if</span> <span class="sym">(</span>c <span class="sym">==</span> <span class="str">' '</span> <span class="sym">||</span> c <span class="sym">==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span> <span class="sym">||</span> c <span class="sym">==</span> <span class="str">'</span><span class="esc">\t</span><span class="str">'</span><span class="sym">)
</span>	    state <span class="sym">=</span> OUT<span class="sym">;
</span>	<span class="kwa">else if</span> <span class="sym">(</span>state <span class="sym">==</span> OUT<span class="sym">) {
</span>	    state <span class="sym">=</span> IN<span class="sym">;
	    ++</span>nw<span class="sym">;
	}
    }
</span>    cout <span class="sym">&lt;&lt;</span> nl <span class="sym">&lt;&lt;</span> <span class="str">&quot; &quot;</span> <span class="sym">&lt;&lt;</span> nw <span class="sym">&lt;&lt;</span> <span class="str">&quot; &quot;</span> <span class="sym">&lt;&lt;</span> nc <span class="sym">&lt;&lt;</span> endl<span class="sym">;
}</span>
