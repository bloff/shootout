<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Great Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Floating point conversion routines courtesy Juergen Stuber and Jorge</span>
<span class="slc">% Marques Pelizzoni [previously used in other Mozart/Oz Shooutout</span>
<span class="slc">% submissions].</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

<span class="kwa">functor</span>

<span class="kwa">import</span>
  System<span class="sym">(</span>showInfo<span class="sym">)</span> Application<span class="sym">(</span>exit<span class="sym">)</span> Open<span class="sym">(</span>file text<span class="sym">)</span>

<span class="kwb">define</span>
  N_ MEDIAN_ MEAN_ AVGDEV_ STDDEV_ VARIANCE_ SKEW_ KURTOSIS_

  <span class="kwa">class</span> TextFile
    <span class="kwb">from</span> Open.file Open.text
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>LoadData FILE<span class="sym">}</span>
    <span class="kwb">case</span> <span class="sym">{</span>FILE getS<span class="sym">(</span>$<span class="sym">)}</span> <span class="kwb">of</span> false <span class="kwb">then</span>
      <span class="kwa">nil</span>
    <span class="kwb">elseof</span> DATUM <span class="kwb">then</span>
      <span class="sym">{</span>Int.toFloat <span class="sym">{</span>String.toInt <span class="sym">{</span>Filter DATUM <span class="kwb">fun</span> <span class="sym">{</span>$ C<span class="sym">}</span> C \= <span class="num">13</span> <span class="kwb">end</span><span class="sym">}}}|{</span>LoadData FILE<span class="sym">}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">proc</span> <span class="sym">{</span>ComputeStatistics DATATBL<span class="sym">}</span>
    N_ <span class="sym">= {</span>IntToFloat <span class="sym">{</span>Length DATATBL<span class="sym">}}</span>
    MEAN_ <span class="sym">= {</span>FoldL DATATBL <span class="kwb">fun</span> <span class="sym">{</span>$ X Y<span class="sym">}</span> Y <span class="sym">+</span> X <span class="kwb">end</span> <span class="num">0.0</span><span class="sym">} /</span> N_

    <span class="slc">%% Spread etc ...</span>
    <span class="kwa">local</span>
      DEV <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> AVGDEV <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>
      VARIANCE <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>
      SKEW <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> KURTOSIS <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>
    <span class="kwb">in</span>
      <span class="kwb">for</span> I <span class="kwb">in</span> DATATBL <span class="kwb">do</span>
        DEV <span class="sym">:=</span> I <span class="sym">-</span> MEAN_
        AVGDEV <span class="sym">:=</span> &#64;AVGDEV <span class="sym">+ {</span>Number.abs &#64;DEV<span class="sym">}</span>
        VARIANCE <span class="sym">:=</span> &#64;VARIANCE <span class="sym">+ {</span>Number.pow &#64;DEV <span class="num">2.0</span><span class="sym">}</span>
        SKEW <span class="sym">:=</span> &#64;SKEW <span class="sym">+ {</span>Number.pow &#64;DEV <span class="num">3.0</span><span class="sym">}</span>
        KURTOSIS <span class="sym">:=</span> &#64;KURTOSIS <span class="sym">+ {</span>Number.pow &#64;DEV <span class="num">4.0</span><span class="sym">}</span>
      <span class="kwb">end</span>

      AVGDEV <span class="sym">:=</span> &#64;AVGDEV <span class="sym">/</span> N_
      VARIANCE <span class="sym">:=</span> &#64;VARIANCE <span class="sym">/ (</span>N_ <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span>

      STDDEV_ <span class="sym">= {</span>Float.sqrt &#64;VARIANCE<span class="sym">}</span>

      <span class="kwb">if</span> &#64;VARIANCE <span class="sym">&gt;</span> <span class="num">0.0</span> <span class="kwb">then</span>
        SKEW <span class="sym">:=</span> &#64;SKEW <span class="sym">/ (</span>N_ <span class="sym">*</span> &#64;VARIANCE <span class="sym">*</span> STDDEV_<span class="sym">)</span>
        KURTOSIS <span class="sym">:=</span> &#64;KURTOSIS <span class="sym">/ (</span>N_ <span class="sym">* {</span>Number.pow &#64;VARIANCE <span class="num">2.0</span><span class="sym">}) -</span> <span class="num">3.0</span>
      <span class="kwb">end</span>

      AVGDEV_ <span class="sym">=</span> &#64;AVGDEV VARIANCE_ <span class="sym">=</span> &#64;VARIANCE SKEW_ <span class="sym">=</span> &#64;SKEW KURTOSIS_ <span class="sym">=</span> &#64;KURTOSIS
    <span class="kwb">end</span>

    <span class="slc">%% Median</span>
    <span class="kwa">local</span> N <span class="sym">= {</span>FloatToInt N_<span class="sym">}</span> Mid <span class="sym">= (</span>N div <span class="num">2</span><span class="sym">)</span> K <span class="sym">= (</span>Mid <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> <span class="kwb">in</span>
      <span class="kwb">if</span> N mod <span class="num">2</span> \= <span class="num">0</span> <span class="kwb">then</span>
        MEDIAN_ <span class="sym">= {</span>Nth DATATBL Mid<span class="sym">}</span>
      <span class="kwb">else</span>
        MEDIAN_ <span class="sym">= ({</span>Nth DATATBL K<span class="sym">} + {</span>Nth DATATBL Mid<span class="sym">}) /</span> <span class="num">2.0</span>
      <span class="kwb">end</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">proc</span> <span class="sym">{</span>ShowStatistics<span class="sym">}</span>
    <span class="sym">{</span>System.showInfo <span class="str">&quot;n:                  &quot;</span>#<span class="sym">{</span>FloatToInt N_<span class="sym">}}</span>

    <span class="sym">{</span>System.showInfo <span class="str">&quot;median:             &quot;</span>#<span class="sym">{</span>FloatToString MEDIAN_ <span class="num">6</span><span class="sym">}}</span>
    <span class="sym">{</span>System.showInfo <span class="str">&quot;mean:               &quot;</span>#<span class="sym">{</span>FloatToString MEAN_ <span class="num">6</span><span class="sym">}}</span>
    <span class="sym">{</span>System.showInfo <span class="str">&quot;average_deviation:  &quot;</span>#<span class="sym">{</span>FloatToString AVGDEV_ <span class="num">6</span><span class="sym">}}</span>
    <span class="sym">{</span>System.showInfo <span class="str">&quot;standard_deviation: &quot;</span>#<span class="sym">{</span>FloatToString STDDEV_ <span class="num">6</span><span class="sym">}}</span>
    <span class="sym">{</span>System.showInfo <span class="str">&quot;variance:           &quot;</span>#<span class="sym">{</span>FloatToString VARIANCE_ <span class="num">6</span><span class="sym">}}</span>
    <span class="sym">{</span>System.showInfo <span class="str">&quot;skew:               &quot;</span>#<span class="sym">{</span>FloatToString SKEW_ <span class="num">6</span><span class="sym">}}</span>
    <span class="sym">{</span>System.showInfo <span class="str">&quot;kurtosis:           &quot;</span>#<span class="sym">{</span>FloatToString KURTOSIS_ <span class="num">6</span><span class="sym">}}</span>
  <span class="kwb">end</span>

  <span class="slc">%% Floating Point Conversion Routines</span>
  <span class="kwb">fun</span> <span class="sym">{</span>FloatAbs X<span class="sym">}</span>
    <span class="kwb">if</span> X <span class="sym">&gt;=</span> <span class="num">0.0</span> <span class="kwb">then</span> X <span class="kwb">else</span> ~X <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatSquare X<span class="sym">}</span>
    X <span class="sym">*</span> X
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatPower X E<span class="sym">}</span>
    <span class="kwb">if</span> E<span class="sym">==</span><span class="num">0</span> <span class="kwb">then</span> <span class="num">1.0</span>
    <span class="kwb">elseif</span> E<span class="sym">&lt;</span><span class="num">0</span> <span class="kwb">then</span> <span class="kwa">raise</span> negativeExponent<span class="sym">(</span>E<span class="sym">)</span> <span class="kwb">end</span>
    <span class="kwb">else</span>
      <span class="kwb">if</span> E mod <span class="num">2</span> <span class="sym">==</span> <span class="num">1</span> <span class="kwb">then</span> X <span class="kwb">else</span> <span class="num">1.0</span> <span class="kwb">end</span>
      <span class="sym">* {</span>FloatSquare <span class="sym">{</span>FloatPower X E div <span class="num">2</span><span class="sym">}}</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>MakePadding Ch L<span class="sym">}</span>
    <span class="kwb">if</span> L <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwb">then</span>
      Padding <span class="sym">= {</span>MakeList L<span class="sym">}</span>
    <span class="kwb">in</span>
      <span class="kwb">for</span> V <span class="kwb">in</span> Padding <span class="kwb">do</span> V <span class="sym">=</span> Ch <span class="kwb">end</span>
        Padding
      <span class="kwb">else</span>
        <span class="kwa">nil</span>
    <span class="kwb">end</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>PadLeft Ch String L<span class="sym">}</span>
    PL <span class="sym">=</span> L <span class="sym">- {</span>List.length String<span class="sym">}</span>
  <span class="kwb">in</span>
    <span class="sym">{</span>MakePadding Ch PL<span class="sym">}</span> # String
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatToVS F Prec<span class="sym">}</span>
    <span class="kwb">fun</span> <span class="sym">{</span>FractionToString Frac Prec<span class="sym">}</span>
      <span class="kwb">if</span> Prec <span class="sym">=&lt;</span> <span class="num">0</span> <span class="kwb">then</span> <span class="str">&quot;&quot;</span>
      <span class="kwb">elseif</span> Prec <span class="sym">&gt;</span> <span class="num">9</span> <span class="kwb">then</span> <span class="kwa">raise</span> excessivePrecision<span class="sym">(</span>Prec<span class="sym">)</span> <span class="kwb">end</span>
      <span class="kwb">else</span>
        Shifted <span class="sym">= {</span>FloatPower <span class="num">10.0</span> Prec<span class="sym">} *</span> Frac
        Digits <span class="sym">= {</span>FloatToInt <span class="sym">{</span>Round Shifted<span class="sym">}}</span>
        <span class="kwb">in</span> <span class="sym">{</span>PadLeft <span class="sym">&amp;</span><span class="num">0</span> <span class="sym">{</span>IntToString Digits<span class="sym">}</span> Prec<span class="sym">}</span>
      <span class="kwb">end</span>
    <span class="kwb">end</span>

    I <span class="sym">= {</span>FloatToInt <span class="sym">{</span><span class="kwb">if</span> F <span class="sym">&gt;=</span> <span class="num">0.0</span> <span class="kwb">then</span> Floor <span class="kwb">else</span> Ceil <span class="kwb">end</span> F<span class="sym">}}</span>
    Frac <span class="sym">= {</span>FloatAbs F <span class="sym">- {</span>IntToFloat I<span class="sym">}}</span>
  <span class="kwb">in</span>
    <span class="sym">{</span>IntToString I<span class="sym">}</span> # <span class="str">&quot;.&quot;</span> # <span class="sym">{</span>FractionToString Frac Prec<span class="sym">}</span>
  <span class="kwb">end</span>

  <span class="kwb">fun</span> <span class="sym">{</span>FloatToString F Prec<span class="sym">}</span>
    P <span class="sym">=</span> <span class="kwb">fun</span> <span class="sym">{</span>$ C<span class="sym">}</span> <span class="kwb">if</span> C <span class="sym">== &amp;</span>~ <span class="kwb">then</span> <span class="sym">&amp;-</span> <span class="kwb">else</span> C <span class="kwb">end end</span>
    <span class="kwb">in</span>
    <span class="sym">{</span>Map <span class="sym">{</span>VirtualString.toString <span class="sym">{</span>FloatToVS F Prec<span class="sym">}}</span> P<span class="sym">}</span>
  <span class="kwb">end</span>

<span class="kwb">in</span>
  <span class="sym">{</span>ComputeStatistics <span class="sym">{</span>Sort <span class="sym">{</span>LoadData <span class="sym">{</span>New TextFile init<span class="sym">(</span>name<span class="sym">:</span>stdin<span class="sym">)}}</span> <span class="kwb">fun</span> <span class="sym">{</span>$ X Y<span class="sym">}</span> X <span class="sym">&lt;</span> Y <span class="kwb">end</span><span class="sym">}}</span>

  <span class="sym">{</span>ShowStatistics<span class="sym">}</span>

  <span class="sym">{</span>Application.exit <span class="num">0</span><span class="sym">}</span>
<span class="kwb">end</span>

