<span class="slc">%%% $Id: hash-oz.code,v 1.8 2006-10-02 01:08:42 bfulgham Exp $</span>
<span class="slc">%%% http://dada.perl.it/shootout/</span>
<span class="slc">%%%</span>
<span class="slc">%%% contributed by Isaac Gouy</span>

<span class="slc">%%  Usage: start from command line with</span>
<span class="slc">%%     ozc -x hash.oz -o hash.oz.exe</span>
<span class="slc">%%     hash.oz.exe 2000</span>

<span class="kwa">functor</span>
<span class="kwa">import</span> System Application

<span class="kwa">define</span>

   <span class="kwa">fun</span> <span class="sym">{</span>IntToHexString I Hex<span class="sym">}</span>
      <span class="kwa">if</span> I <span class="sym">=&lt;</span> <span class="num">0</span> <span class="kwa">then</span> Hex <span class="kwa">else</span>
     <span class="kwa">local</span> M D <span class="kwa">in</span>
        D <span class="sym">=</span> I div <span class="num">16</span>
        M <span class="sym">=</span> I mod <span class="num">16</span>
        <span class="kwa">if</span> M <span class="sym">&lt;</span> <span class="num">10</span> <span class="kwa">then</span>
           <span class="sym">{</span>IntToHexString D M<span class="sym">+&amp;</span><span class="num">0</span><span class="sym">|</span>Hex<span class="sym">}</span>
        <span class="kwa">else</span>
           <span class="sym">{</span>IntToHexString D <span class="sym">(</span>M<span class="sym">-</span><span class="num">10</span><span class="sym">)+&amp;</span>a<span class="sym">|</span>Hex<span class="sym">}</span>
        <span class="kwa">end</span>
     <span class="kwa">end</span>
      <span class="kwa">end</span>
   <span class="kwa">end</span>

   <span class="kwa">proc</span> <span class="sym">{</span>InsertHexKeys H N<span class="sym">}</span>
      <span class="kwa">for</span> I <span class="kwa">in</span> <span class="num">0</span><span class="sym">..</span>N do
    <span class="sym">{</span>Dictionary<span class="sym">.</span>put H <span class="sym">{</span>String<span class="sym">.</span>toAtom <span class="sym">{</span>IntToHexString I nil<span class="sym">}}</span> I<span class="sym">}</span>
      <span class="kwa">end</span>
   <span class="kwa">end</span>

   <span class="kwa">proc</span> <span class="sym">{</span>CountLookups H I S C<span class="sym">}</span>
      <span class="kwa">if</span> I <span class="sym">&gt;=</span> <span class="num">0</span> <span class="kwa">then</span>
     <span class="kwa">if</span> <span class="sym">{</span>Dictionary<span class="sym">.</span>member H <span class="sym">{</span>String<span class="sym">.</span>toAtom <span class="sym">{</span>IntToString I<span class="sym">}}}</span> <span class="kwa">then</span>
        <span class="sym">{</span>CountLookups H I<span class="sym">-</span><span class="num">1</span> S<span class="sym">+</span><span class="num">1</span> C<span class="sym">}</span>
     <span class="kwa">else</span>
        <span class="sym">{</span>CountLookups H I<span class="sym">-</span><span class="num">1</span> S C<span class="sym">}</span>
     <span class="kwa">end</span>
      <span class="kwa">else</span> C <span class="sym">=</span> S <span class="kwa">end</span>
   <span class="kwa">end</span>

<span class="kwa">in</span>
   <span class="kwa">local</span> Args N H Count <span class="kwa">in</span>
      <span class="sym">[</span>Args<span class="sym">] = {</span>Application<span class="sym">.</span>getArgs plain<span class="sym">}</span>
      N <span class="sym">= {</span>String<span class="sym">.</span>toInt Args<span class="sym">}</span>

      <span class="sym">{</span>NewDictionary H<span class="sym">}</span>
      <span class="sym">{</span>InsertHexKeys H N<span class="sym">}</span>
      <span class="sym">{</span>CountLookups H N<span class="sym">+</span><span class="num">1 0</span> Count<span class="sym">}</span>

      <span class="sym">{</span>System<span class="sym">.</span>showInfo Count<span class="sym">}</span>
   <span class="kwa">end</span>
   <span class="sym">{</span>Application<span class="sym">.</span>exit <span class="num">0</span><span class="sym">}</span>
<span class="kwa">end</span>
