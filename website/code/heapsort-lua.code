<span class="line">    1 </span><span class="slc">#!/usr/bin/lua
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: heapsort-lua.code,v 1.3 2004-11-11 07:13:58 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://shootout.alioth.debian.org
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">-- contributed by Roberto Ierusalimschy
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="kwa">local</span> IM <span class="sym">=</span> <span class="num">139968
</span><span class="line">    7 </span><span class="num"></span><span class="kwa">local</span> IA <span class="sym">=</span>   <span class="num">3877
</span><span class="line">    8 </span><span class="num"></span><span class="kwa">local</span> IC <span class="sym">=</span>  <span class="num">29573
</span><span class="line">    9 </span><span class="num">
</span><span class="line">   10 </span><span class="num"></span><span class="kwa">local</span> LAST <span class="sym">=</span> <span class="num">42
</span><span class="line">   11 </span><span class="num"></span><span class="kwa">function</span> gen_random<span class="sym">(</span><span class="kwa">max</span><span class="sym">)
</span><span class="line">   12 </span><span class="sym"></span>    LAST <span class="sym">=</span> math.<span class="kwa">mod</span><span class="sym">((</span>LAST <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">),</span> IM<span class="sym">)
</span><span class="line">   13 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">( (</span><span class="kwa">max</span> <span class="sym">*</span> LAST<span class="sym">) /</span> IM <span class="sym">)
</span><span class="line">   14 </span><span class="sym"></span><span class="kwa">end
</span><span class="line">   15 </span><span class="kwa">
</span><span class="line">   16 </span><span class="kwa">function</span> heapsort<span class="sym">(</span>n<span class="sym">,</span> ra<span class="sym">)
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwa">local</span> j<span class="sym">,</span> i<span class="sym">,</span> rra
<span class="line">   18 </span>    <span class="kwa">local</span> l <span class="sym">=</span> math.<span class="kwa">floor</span><span class="sym">(</span>n<span class="sym">/</span><span class="num">2</span><span class="sym">) +</span> <span class="num">1
</span><span class="line">   19 </span><span class="num"></span>    <span class="kwa">local</span> ir <span class="sym">=</span> n<span class="sym">;
</span><span class="line">   20 </span><span class="sym"></span>    <span class="kwa">while</span> <span class="num">1</span> <span class="kwa">do
</span><span class="line">   21 </span><span class="kwa">        if</span> l <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then
</span><span class="line">   22 </span><span class="kwa"></span>            l <span class="sym">=</span> l <span class="num">- 1
</span><span class="line">   23 </span><span class="num"></span>            rra <span class="sym">=</span> ra<span class="sym">[</span>l<span class="sym">]
</span><span class="line">   24 </span><span class="sym"></span>        <span class="kwa">else
</span><span class="line">   25 </span><span class="kwa"></span>            rra <span class="sym">=</span> ra<span class="sym">[</span>ir<span class="sym">]
</span><span class="line">   26 </span><span class="sym"></span>            ra<span class="sym">[</span>ir<span class="sym">] =</span> ra<span class="sym">[</span><span class="num">1</span><span class="sym">]
</span><span class="line">   27 </span><span class="sym"></span>            ir <span class="sym">=</span> ir <span class="num">- 1
</span><span class="line">   28 </span><span class="num"></span>            <span class="kwa">if</span> <span class="sym">(</span>ir <span class="sym">==</span> <span class="num">1</span><span class="sym">)</span> <span class="kwa">then
</span><span class="line">   29 </span><span class="kwa"></span>                ra<span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> rra
<span class="line">   30 </span>                <span class="kwa">return
</span><span class="line">   31 </span><span class="kwa">            end
</span><span class="line">   32 </span><span class="kwa">        end
</span><span class="line">   33 </span><span class="kwa"></span>        i <span class="sym">=</span> l
<span class="line">   34 </span>        j <span class="sym">=</span> l <span class="sym">*</span> <span class="num">2
</span><span class="line">   35 </span><span class="num"></span>        <span class="kwa">while</span> j <span class="sym">&lt;=</span> ir <span class="kwa">do
</span><span class="line">   36 </span><span class="kwa">            if</span> <span class="sym">(</span>j <span class="sym">&lt;</span> ir<span class="sym">)</span> <span class="kwa">and</span> <span class="sym">(</span>ra<span class="sym">[</span>j<span class="sym">] &lt;</span> ra<span class="sym">[</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">then
</span><span class="line">   37 </span><span class="kwa"></span>                j <span class="sym">=</span> j <span class="sym">+</span> <span class="num">1
</span><span class="line">   38 </span><span class="num"></span>            <span class="kwa">end
</span><span class="line">   39 </span><span class="kwa">            if</span> rra <span class="sym">&lt;</span> ra<span class="sym">[</span>j<span class="sym">]</span> <span class="kwa">then
</span><span class="line">   40 </span><span class="kwa"></span>                ra<span class="sym">[</span>i<span class="sym">] =</span> ra<span class="sym">[</span>j<span class="sym">]
</span><span class="line">   41 </span><span class="sym"></span>                i <span class="sym">=</span> j
<span class="line">   42 </span>                j <span class="sym">=</span> j <span class="sym">+</span> i
<span class="line">   43 </span>            <span class="kwa">else
</span><span class="line">   44 </span><span class="kwa"></span>                j <span class="sym">=</span> ir <span class="sym">+</span> <span class="num">1
</span><span class="line">   45 </span><span class="num"></span>            <span class="kwa">end
</span><span class="line">   46 </span><span class="kwa">        end
</span><span class="line">   47 </span><span class="kwa"></span>        ra<span class="sym">[</span>i<span class="sym">] =</span> rra
<span class="line">   48 </span>    <span class="kwa">end
</span><span class="line">   49 </span><span class="kwa">end
</span><span class="line">   50 </span><span class="kwa">
</span><span class="line">   51 </span><span class="kwa">local</span> ary <span class="sym">= {}
</span><span class="line">   52 </span><span class="sym"></span><span class="kwa">local</span> N <span class="sym">= (</span><span class="kwa">tonumber</span><span class="sym">((</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span> <span class="kwa">or</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   53 </span><span class="sym">
</span><span class="line">   54 </span><span class="sym"></span><span class="kwa">for</span> i<span class="sym">=</span><span class="num">1</span><span class="sym">,</span> N <span class="kwa">do
</span><span class="line">   55 </span><span class="kwa"></span>    ary<span class="sym">[</span>i<span class="sym">] =</span> gen_random<span class="sym">(</span><span class="num">1.0</span><span class="sym">)
</span><span class="line">   56 </span><span class="sym"></span><span class="kwa">end
</span><span class="line">   57 </span><span class="kwa">
</span><span class="line">   58 </span><span class="kwa"></span>heapsort<span class="sym">(</span>N<span class="sym">,</span> ary<span class="sym">)
</span><span class="line">   59 </span><span class="sym">
</span><span class="line">   60 </span><span class="sym"></span>io.<span class="kwa">write</span><span class="sym">(</span><span class="kwb">string</span>.<span class="kwa">format</span><span class="sym">(</span><span class="str">&quot;%0.10f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> ary<span class="sym">[</span>N<span class="sym">]))</span>
