<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Assumes execution using the following command-line usage:</span>
<span class="slc">%</span>
<span class="slc">%   pl -q -g main -t halt -s SOURCENAME -- USERARG1 ... &lt; in &gt; out</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

main <span class="sym">:-</span>
  cmdlNumArg<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> N<span class="sym">),</span>
  X <span class="kwa">is</span> N <span class="sym">*</span> <span class="num">3</span><span class="sym">,</span> Y <span class="kwa">is</span> N <span class="sym">*</span> <span class="num">2</span><span class="sym">,</span> Z <span class="kwa">is</span> N<span class="sym">,</span>
  tak<span class="sym">(</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> R<span class="sym">),</span>
  <span class="kwb">write</span><span class="sym">(</span>R<span class="sym">),</span> <span class="kwa">nl</span>.

<span class="slc">% ------------------------------- %</span>

tak<span class="sym">(</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> R<span class="sym">) :-</span> Y <span class="sym">&gt;=</span> X<span class="sym">,</span> R <span class="sym">=</span> Z<span class="sym">, !</span>.

tak<span class="sym">(</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> R<span class="sym">) :-</span>
  Zm <span class="kwa">is</span> Z <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> Ym <span class="kwa">is</span> Y <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> Xm <span class="kwa">is</span> X <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span>
  tak<span class="sym">(</span>Xm<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> Rx<span class="sym">),</span> tak<span class="sym">(</span>Ym<span class="sym">,</span> Z<span class="sym">,</span> X<span class="sym">,</span> Ry<span class="sym">),</span> tak<span class="sym">(</span>Zm<span class="sym">,</span> X<span class="sym">,</span> Y<span class="sym">,</span> Rz<span class="sym">),</span>
  tak<span class="sym">(</span>Rx<span class="sym">,</span> Ry<span class="sym">,</span> Rz<span class="sym">,</span> R<span class="sym">), !</span>.

<span class="slc">% ------------------------------- %</span>

argument_value<span class="sym">(</span>N<span class="sym">,</span> Arg<span class="sym">) :-</span>
  <span class="kwb">current_prolog_flag</span><span class="sym">(</span>argv<span class="sym">,</span> Cmdline<span class="sym">),</span> append<span class="sym">(</span>_<span class="sym">, [--|</span>UserArgs<span class="sym">],</span> Cmdline<span class="sym">),</span>
  Nth <span class="kwa">is</span> N <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> nth0<span class="sym">(</span>Nth<span class="sym">,</span> UserArgs<span class="sym">,</span> Arg<span class="sym">)</span>.

cmdlNumArg<span class="sym">(</span>Nth<span class="sym">,</span> N<span class="sym">) :-</span>
  argument_value<span class="sym">(</span>Nth<span class="sym">,</span> Arg<span class="sym">),</span> <span class="kwb">catch</span><span class="sym">(</span>atom_number<span class="sym">(</span>Arg<span class="sym">,</span> N<span class="sym">),</span> _<span class="sym">,</span> <span class="kwa">fail</span><span class="sym">) ;</span> <span class="kwa">halt</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.

