<span class="slc">#!/usr/bin/ruby</span>
<span class="slc">#</span>
<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org</span>
<span class="slc">#</span>
<span class="slc"># contributed by Jesse Millikan</span>

<span class="kwa">class</span> BottleState
 attr_reader <span class="sym">:</span>tag
 private_class_method <span class="sym">:</span>new

 <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>tag)
  &#64;tag = tag
 <span class="kwa">end</span>

 <span class="kwa">def</span> BottleState<span class="sym">.</span>initial<span class="sym">;</span> &#64;&#64;empty<span class="sym">;</span> <span class="kwa">end</span>

 <span class="kwa">def</span> BottleState<span class="sym">.</span>pressurized_initial<span class="sym">;</span> &#64;&#64;unpressurized_empty<span class="sym">;</span> <span class="kwa">end</span>

<span class="slc"># Thanks to dbrock on #ruby-lang on freenode for some tips on this.</span>

 &#64;&#64;empty = <span class="kwd">new</span><span class="sym">(</span><span class="num">1</span>)

 <span class="kwa">def</span> &#64;&#64;empty<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span>bottle)<span class="sym">;</span> bottle<span class="sym">.</span>state = &#64;&#64;full<span class="sym">;</span> <span class="kwa">end</span>

 &#64;&#64;full = <span class="kwd">new</span><span class="sym">(</span><span class="num">2</span>)

 <span class="kwa">def</span> &#64;&#64;full<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span>bottle)<span class="sym">;</span> bottle<span class="sym">.</span>state = &#64;&#64;sealed<span class="sym">;</span> <span class="kwa">end</span>

 &#64;&#64;sealed = <span class="kwd">new</span><span class="sym">(</span><span class="num">3</span>)

 <span class="kwa">def</span> &#64;&#64;sealed<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span>bottle)<span class="sym">;</span> bottle<span class="sym">.</span>state = &#64;&#64;empty<span class="sym">;</span> <span class="kwa">end</span>

 &#64;&#64;unpressurized_empty = <span class="kwd">new</span><span class="sym">(</span><span class="num">4</span>)

 <span class="kwa">def</span> &#64;&#64;unpressurized_empty<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span>bottle)<span class="sym">;</span> bottle<span class="sym">.</span>state = &#64;&#64;unpressurized_full<span class="sym">;</span> <span class="kwa">end</span>

 &#64;&#64;unpressurized_full = <span class="kwd">new</span><span class="sym">(</span><span class="num">5</span>)

 <span class="kwa">def</span> &#64;&#64;unpressurized_full<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span>bottle)<span class="sym">;</span> bottle<span class="sym">.</span>state = &#64;&#64;pressurized_unsealed<span class="sym">;</span> <span class="kwa">end</span>

 &#64;&#64;pressurized_unsealed = <span class="kwd">new</span><span class="sym">(</span><span class="num">6</span>)

 <span class="kwa">def</span> &#64;&#64;pressurized_unsealed<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span>bottle)<span class="sym">;</span> bottle<span class="sym">.</span>state = &#64;&#64;pressurized_sealed<span class="sym">;</span> <span class="kwa">end</span>

 &#64;&#64;pressurized_sealed = <span class="kwd">new</span><span class="sym">(</span><span class="num">7</span>)

 <span class="kwa">def</span> &#64;&#64;pressurized_sealed<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span>bottle)<span class="sym">;</span> bottle<span class="sym">.</span>state = &#64;&#64;unpressurized_empty<span class="sym">;</span> <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="slc">#Someone with judgement on style could pare this down a bit.</span>
<span class="kwa">class</span> Bottle
  attr_writer <span class="sym">:</span>state

 <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>id)
  &#64;id = id
  &#64;state = initial
 <span class="kwa">end</span>

 <span class="kwa">def</span> initial<span class="sym">;</span> BottleState<span class="sym">.</span>initial<span class="sym">;</span> <span class="kwa">end</span>

 <span class="kwa">def</span> cycle<span class="sym">;</span> fill<span class="sym">;</span> seal<span class="sym">;</span> empty<span class="sym">;</span> <span class="kwa">end</span>

 <span class="kwa">def next</span><span class="sym">;</span> &#64;state<span class="sym">.</span><span class="kwa">next</span><span class="sym">(</span><span class="kwa">self</span>)<span class="sym">;</span> <span class="kwa">end</span>

 alias_method <span class="sym">:</span>empty<span class="sym">, :</span><span class="kwa">next</span>
 alias_method <span class="sym">:</span>fill<span class="sym">, :</span><span class="kwa">next</span>
 alias_method <span class="sym">:</span>seal<span class="sym">, :</span><span class="kwa">next</span>

 <span class="kwa">def</span> <span class="kwd">check</span><span class="sym">(</span>c)<span class="sym">;</span> &#64;state<span class="sym">.</span>tag <span class="sym">+</span> &#64;id <span class="sym">+</span> c<span class="sym">;</span> <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">class</span> PressurizedBottle <span class="sym">&lt;</span> Bottle
 <span class="kwa">def</span> initial<span class="sym">;</span> BottleState<span class="sym">.</span>pressurized_initial<span class="sym">;</span> <span class="kwa">end</span>

 alias_method <span class="sym">:</span>pressurize<span class="sym">, :</span><span class="kwa">next</span>

 <span class="kwa">def</span> cycle<span class="sym">;</span> fill<span class="sym">;</span> pressurize<span class="sym">;</span> seal<span class="sym">;</span> empty<span class="sym">;</span> <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">bottle_check</span><span class="sym">(</span>a1<span class="sym">,</span> a2<span class="sym">,</span> a3<span class="sym">,</span> a4<span class="sym">,</span> a5<span class="sym">,</span> i)
 a1<span class="sym">.</span>cycle<span class="sym">;</span> a2<span class="sym">.</span>cycle<span class="sym">;</span> a3<span class="sym">.</span>cycle<span class="sym">;</span> a4<span class="sym">.</span>cycle<span class="sym">;</span> a5<span class="sym">.</span>cycle

 c = i % <span class="num">2</span>

 a1<span class="sym">.</span><span class="kwd">check</span><span class="sym">(</span>c) <span class="sym">+</span> a2<span class="sym">.</span><span class="kwd">check</span><span class="sym">(</span>c) <span class="sym">+</span> a3<span class="sym">.</span><span class="kwd">check</span><span class="sym">(</span>c) <span class="sym">+</span> a4<span class="sym">.</span><span class="kwd">check</span><span class="sym">(</span>c) <span class="sym">+</span> a5<span class="sym">.</span><span class="kwd">check</span><span class="sym">(</span>c)
<span class="kwa">end</span>

n = <span class="num">0</span>
n = <span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">].</span>to_i <span class="kwa">unless</span> <span class="kwc">ARGV</span><span class="sym">.</span>empty?

b1 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span>)<span class="sym">;</span> b2 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">2</span>)
b3 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">3</span>)<span class="sym">;</span> b4 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">4</span>)
b5 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">5</span>)<span class="sym">;</span> b6 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">6</span>)
b7 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">7</span>)<span class="sym">;</span> b8 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">8</span>)
b9 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">9</span>)<span class="sym">;</span> b0 = Bottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">0</span>)

p1 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">1</span>)<span class="sym">;</span> p2 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">2</span>)
p3 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">3</span>)<span class="sym">;</span> p4 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">4</span>)
p5 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">5</span>)<span class="sym">;</span> p6 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">6</span>)
p7 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">7</span>)<span class="sym">;</span> p8 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">8</span>)
p9 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">9</span>)<span class="sym">;</span> p0 = PressurizedBottle<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">0</span>)

check = <span class="num">0</span>

<span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">1</span><span class="sym">..</span>n
 check <span class="sym">+</span>= <span class="kwd">bottle_check</span><span class="sym">(</span>b1<span class="sym">,</span> b2<span class="sym">,</span> b3<span class="sym">,</span> b4<span class="sym">,</span> b5<span class="sym">,</span> i)
 check <span class="sym">+</span>= <span class="kwd">bottle_check</span><span class="sym">(</span>b6<span class="sym">,</span> b7<span class="sym">,</span> b8<span class="sym">,</span> b9<span class="sym">,</span> b0<span class="sym">,</span> i)

 check <span class="sym">+</span>= <span class="kwd">bottle_check</span><span class="sym">(</span>p1<span class="sym">,</span> p2<span class="sym">,</span> p3<span class="sym">,</span> p4<span class="sym">,</span> p5<span class="sym">,</span> i)
 check <span class="sym">-</span>= <span class="kwd">bottle_check</span><span class="sym">(</span>p6<span class="sym">,</span> p7<span class="sym">,</span> p8<span class="sym">,</span> p9<span class="sym">,</span> p0<span class="sym">,</span> i)
<span class="kwa">end</span>

puts <span class="str">&quot;#{check}&quot;</span>
