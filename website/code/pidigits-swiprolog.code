<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Great Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

main <span class="sym">:-</span>
  cmdlNumArg<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> N<span class="sym">),</span>
  pidigits<span class="sym">(</span>N<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

pidigits<span class="sym">(</span>N<span class="sym">) :-</span> pidigits_<span class="sym">(</span><span class="num">1</span><span class="sym">, [</span><span class="num">1</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">1</span><span class="sym">],</span> N<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">)</span>.

<span class="slc">% ------------- %</span>

pidigits_<span class="sym">(</span>K<span class="sym">,</span> Z<span class="sym">,</span> N<span class="sym">,</span> Row<span class="sym">,</span> Col<span class="sym">) :-</span>
  <span class="sym">(</span>N <span class="sym">&gt;</span> <span class="num">0</span> <span class="sym">-&gt;</span>
    next<span class="sym">(</span>Z<span class="sym">,</span> Y<span class="sym">),</span> safe<span class="sym">(</span>Z<span class="sym">,</span> Y<span class="sym">,</span> IsSafe<span class="sym">),</span>
    <span class="sym">(</span>IsSafe <span class="sym">-&gt;</span>
      prod<span class="sym">(</span>Z<span class="sym">,</span> Y<span class="sym">,</span> RL<span class="sym">),</span> N1 <span class="kwa">is</span> N <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span>
      <span class="sym">(</span>Col <span class="sym">=:=</span> <span class="num">10</span> <span class="sym">-&gt;</span>
        Cf <span class="kwa">is</span> <span class="num">1</span><span class="sym">,</span> Rf <span class="kwa">is</span> <span class="num">10</span> <span class="sym">+</span> Row<span class="sym">,</span> format<span class="sym">(</span><span class="str">'</span><span class="esc">\t</span><span class="str">:~w</span><span class="esc">\n</span><span class="str">~w'</span><span class="sym">, [</span>Rf<span class="sym">,</span> Y<span class="sym">])</span>
      <span class="sym">;</span>
        Cf <span class="kwa">is</span> <span class="num">1</span> <span class="sym">+</span> Col<span class="sym">,</span> Rf <span class="kwa">is</span> Row<span class="sym">,</span> format<span class="sym">(</span><span class="str">'~w'</span><span class="sym">, [</span>Y<span class="sym">])),</span>
      <span class="sym">!,</span> pidigits_<span class="sym">(</span>K<span class="sym">,</span> RL<span class="sym">,</span> N1<span class="sym">,</span> Rf<span class="sym">,</span> Cf<span class="sym">)</span>
    <span class="sym">;</span>
      cons<span class="sym">(</span>Z<span class="sym">,</span> K<span class="sym">,</span> RL<span class="sym">),</span> K1 <span class="kwa">is</span> K <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span>
      <span class="sym">!,</span> pidigits_<span class="sym">(</span>K1<span class="sym">,</span> RL<span class="sym">,</span> N<span class="sym">,</span> Row<span class="sym">,</span> Col<span class="sym">))</span>
  <span class="sym">;</span>
    NS <span class="kwa">is</span> <span class="num">10</span> <span class="sym">-</span> Col<span class="sym">,</span> tab<span class="sym">(</span>NS<span class="sym">),</span> RC <span class="kwa">is</span> Row <span class="sym">+</span> Col<span class="sym">,</span> format<span class="sym">(</span><span class="str">'</span><span class="esc">\t</span><span class="str">:~w</span><span class="esc">\n</span><span class="str">'</span><span class="sym">, [</span>RC<span class="sym">]))</span>.

<span class="slc">% ------------- %</span>

next<span class="sym">([</span>Q<span class="sym">,</span> R<span class="sym">,</span> S<span class="sym">,</span> T<span class="sym">],</span> RV<span class="sym">) :-</span> RV <span class="kwa">is</span> <span class="sym">(</span><span class="num">3</span> <span class="sym">*</span> Q <span class="sym">+</span> R<span class="sym">) // (</span><span class="num">3</span> <span class="sym">*</span> S <span class="sym">+</span> T<span class="sym">)</span>.

safe<span class="sym">([</span>Q<span class="sym">,</span> R<span class="sym">,</span> S<span class="sym">,</span> T<span class="sym">],</span> N<span class="sym">,</span> RV<span class="sym">) :-</span>
  V <span class="kwa">is</span> <span class="sym">((</span><span class="num">4</span> <span class="sym">*</span> Q <span class="sym">+</span> R<span class="sym">) // (</span><span class="num">4</span> <span class="sym">*</span> S <span class="sym">+</span> T<span class="sym">)), (</span>V <span class="sym">=:=</span> N <span class="sym">-&gt;</span> RV <span class="sym">=</span> <span class="kwa">true</span> <span class="sym">;</span> RV <span class="sym">=</span> <span class="kwa">fail</span><span class="sym">)</span>.

comp<span class="sym">([</span>Q1<span class="sym">,</span> R1<span class="sym">,</span> S1<span class="sym">,</span> T1<span class="sym">], [</span>Q2<span class="sym">,</span> R2<span class="sym">,</span> S2<span class="sym">,</span> T2<span class="sym">], [</span>QO<span class="sym">,</span> RO<span class="sym">,</span> SO<span class="sym">,</span> TO<span class="sym">]) :-</span>
  QO <span class="kwa">is</span> Q1 <span class="sym">*</span> Q2 <span class="sym">+</span> R1 <span class="sym">*</span> S2<span class="sym">,</span> RO <span class="kwa">is</span> Q1 <span class="sym">*</span> R2 <span class="sym">+</span> R1 <span class="sym">*</span> T2<span class="sym">,</span>
  SO <span class="kwa">is</span> S1 <span class="sym">*</span> Q2 <span class="sym">+</span> T1 <span class="sym">*</span> S2<span class="sym">,</span> TO <span class="kwa">is</span> S1 <span class="sym">*</span> R2 <span class="sym">+</span> T1 <span class="sym">*</span> T2.

prod<span class="sym">(</span>Z<span class="sym">,</span> N<span class="sym">,</span> RL<span class="sym">) :-</span> A2 <span class="kwa">is</span> <span class="sym">-</span><span class="num">10</span> <span class="sym">*</span> N<span class="sym">,</span> comp<span class="sym">([</span><span class="num">10</span><span class="sym">,</span> A2<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">1</span><span class="sym">],</span> Z<span class="sym">,</span> RL<span class="sym">)</span>.

cons<span class="sym">(</span>Z<span class="sym">,</span> K<span class="sym">,</span> RL<span class="sym">) :-</span> A2 <span class="kwa">is</span> <span class="num">4</span> <span class="sym">*</span> K <span class="sym">+</span> <span class="num">2</span><span class="sym">,</span> A4 <span class="kwa">is</span> <span class="num">2</span> <span class="sym">*</span> K <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> comp<span class="sym">(</span>Z<span class="sym">, [</span>K<span class="sym">,</span> A2<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> A4<span class="sym">],</span> RL<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

argument_value<span class="sym">(</span>N<span class="sym">,</span> Arg<span class="sym">) :-</span>
  <span class="kwb">current_prolog_flag</span><span class="sym">(</span>argv<span class="sym">,</span> Cmdline<span class="sym">),</span> append<span class="sym">(</span>_<span class="sym">, [--|</span>UserArgs<span class="sym">],</span> Cmdline<span class="sym">),</span>
  Nth <span class="kwa">is</span> N <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> nth0<span class="sym">(</span>Nth<span class="sym">,</span> UserArgs<span class="sym">,</span> Arg<span class="sym">)</span>.

cmdlNumArg<span class="sym">(</span>Nth<span class="sym">,</span> N<span class="sym">) :-</span>
  argument_value<span class="sym">(</span>Nth<span class="sym">,</span> Arg<span class="sym">),</span> <span class="kwb">catch</span><span class="sym">(</span>atom_number<span class="sym">(</span>Arg<span class="sym">,</span> N<span class="sym">),</span> _<span class="sym">,</span> <span class="kwa">fail</span><span class="sym">) ;</span> <span class="kwa">halt</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.

