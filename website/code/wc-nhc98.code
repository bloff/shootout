<span class="line">    1 </span>main <span class="sym">=</span> getContents <span class="sym">&gt;&gt;=</span> putStrLn . showC . foldl<span class="str">' wc (C 0 0 0 False)
</span><span class="line">    2 </span><span class="str">
</span><span class="line">    3 </span><span class="str">foldl'</span> f a <span class="sym">[]     =</span> a
<span class="line">    4 </span>foldl<span class="str">' f a (x:xs) = let a'</span> <span class="sym">=</span> f a x <span class="kwa">in</span> a<span class="str">' `seq` foldl'</span> f a<span class="str">' xs
</span><span class="line">    5 </span><span class="str">
</span><span class="line">    6 </span><span class="str">data C = C !Int !Int !Int !Bool
</span><span class="line">    7 </span><span class="str">--         Line Word Char InWord
</span><span class="line">    8 </span><span class="str">showC (C l w c _) = show l ++ &quot; &quot; ++ show w ++ &quot; &quot; ++ show c
</span><span class="line">    9 </span><span class="str">
</span><span class="line">   10 </span><span class="str">wc :: C  -&gt; Char -&gt; C
</span><span class="line">   11 </span><span class="str">wc (C l w c _)     '</span>\n<span class="str">' = C (l+1) w     (c+1) False
</span><span class="line">   12 </span><span class="str">wc (C l w c _)     '</span> <span class="str">'  = C l     w     (c+1) False
</span><span class="line">   13 </span><span class="str">wc (C l w c _)     '</span>\t<span class="str">' = C l     w     (c+1) False
</span><span class="line">   14 </span><span class="str">wc (C l w c False) _    = C l     (w+1) (c+1) True
</span><span class="line">   15 </span><span class="str">wc (C l w c True)  _    = C l     w     (c+1) True
</span><span class="line">   16 </span><span class="str"></span>
