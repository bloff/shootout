main <span class="sym">=</span> getContents <span class="sym">&gt;&gt;=</span> putStrLn . showC . foldl<span class="str">' wc (C 0 0 0 False)

foldl'</span> f a <span class="sym">[]     =</span> a
foldl<span class="str">' f a (x:xs) = let a'</span> <span class="sym">=</span> f a x <span class="kwa">in</span> a<span class="str">' `seq` foldl'</span> f a<span class="str">' xs

data C = C !Int !Int !Int !Bool
--         Line Word Char InWord
showC (C l w c _) = show l ++ &quot; &quot; ++ show w ++ &quot; &quot; ++ show c

wc :: C  -&gt; Char -&gt; C
wc (C l w c _)     '</span>\n<span class="str">' = C (l+1) w     (c+1) False
wc (C l w c _)     '</span> <span class="str">'  = C l     w     (c+1) False
wc (C l w c _)     '</span>\t<span class="str">' = C l     w     (c+1) False
wc (C l w c False) _    = C l     (w+1) (c+1) True
wc (C l w c True)  _    = C l     w     (c+1) True
</span>
