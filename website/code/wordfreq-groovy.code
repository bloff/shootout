<span class="dir">#!/bin/env groovy
</span><span class="com">/*
	$Id: wordfreq-groovy.code,v 1.5 2005-10-01 07:37:38 bfulgham Exp $

	The Great Computer Language Shootout
	http://shootout.alioth.debian.org/

	contributed by Jochen Hinrichsen
*/</span>

<span class="slc">// def dict = [:]
</span>def dict <span class="sym">=</span> <span class="kwa">new</span> TreeMap<span class="sym">()

</span><span class="slc">// read input, build dictionary
</span>System<span class="sym">.</span>in<span class="sym">.</span>eachLine<span class="sym">() {</span> line <span class="sym">-&gt;
</span>	<span class="slc">// split on words
</span>	line<span class="sym">.</span>split<span class="sym">(</span><span class="str">&quot;</span><span class="esc">\\</span><span class="str">W&quot;</span><span class="sym">).</span>each<span class="sym">() {</span> word <span class="sym">-&gt;
</span>		def s <span class="sym">=</span> word<span class="sym">.</span>toLowerCase<span class="sym">()
</span>		def entry <span class="sym">=</span> dict<span class="sym">[</span>s<span class="sym">]
</span>		dict<span class="sym">[</span>s<span class="sym">] = (</span>entry <span class="sym">==</span> null<span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> entry<span class="sym">+</span><span class="num">1
</span>	<span class="sym">}
}

</span><span class="slc">// default sort() is smallest first
</span><span class="slc">// sort for multiple properties: [ it.value, it.key ]
</span>assert dict <span class="sym">!=</span> null
assert dict<span class="sym">.</span>values<span class="sym">() !=</span> null
assert <span class="sym">(</span>dict<span class="sym">.</span>values<span class="sym">().</span>sort<span class="sym">({</span> l<span class="sym">,</span> r <span class="sym">-&gt;</span> r <span class="sym">&lt;=&gt;</span> l<span class="sym">})) !=</span> null
dict<span class="sym">.</span>values<span class="sym">().</span>sort<span class="sym">({</span> l<span class="sym">,</span> r <span class="sym">-&gt;</span> r <span class="sym">&lt;=&gt;</span> l<span class="sym">}).</span>each<span class="sym">() {</span> value <span class="sym">-&gt;
</span><span class="com">/*
	assert value != null
    def entry = dict.find() { e -&gt;
        def v = e.getValue()
		assert v != null
        e.getValue() == value
    }
	assert entry != null
*/</span>
    <span class="slc">// println &quot;${value.toString().padLeft(8)} ${entry.key}&quot;
</span>    println <span class="str">&quot;${value.toString().padLeft(8)}&quot;</span>
<span class="sym">}

</span><span class="slc">// EOF
</span>
