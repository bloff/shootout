<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(* -*- mode: sml -*-
 * $Id: lists-mlton.code,v 1.1 2004-11-02 08:52:33 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 * from Stephen Weeks
 *)</FONT></I>
<I><FONT COLOR="#B22222">(* Translated from lists.ocaml. *)</FONT></I>
 
<B><FONT COLOR="#A020F0">val</FONT></B> sub <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.sub
<B><FONT COLOR="#A020F0">val</FONT></B> update <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.update
<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for</FONT></I></B></FONT></B> (start, stop, f) <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">let</FONT></B>
<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">loop</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B>
	 <B><FONT COLOR="#A020F0">if</FONT></B> i <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> stop
	    <B><FONT COLOR="#A020F0">then</FONT></B> ()
	 <B><FONT COLOR="#A020F0">else</FONT></B> (f i; loop (i <B><FONT COLOR="#5F9EA0">+</FONT></B> 1))
   <B><FONT COLOR="#A020F0">in</FONT></B>
      loop start
   <B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">failwith</FONT></I></B></FONT></B> s <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">raise</FONT></B> Fail s

<B><FONT COLOR="#5F9EA0">structure</FONT></B> Deque:
  <B><FONT COLOR="#5F9EA0">sig</FONT></B>
    <B><FONT COLOR="#A020F0">type</FONT></B> 'a t
    <B><FONT COLOR="#A020F0">exception</FONT></B> Empty

    <B><FONT COLOR="#A020F0">val</FONT></B> make: <B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#5F9EA0">*</FONT></B> 'a <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 'a t
    <B><FONT COLOR="#A020F0">val</FONT></B> iota: <B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">int</FONT></B> t

    <B><FONT COLOR="#A020F0">val</FONT></B> is_empty: 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">bool</FONT></B>
    <B><FONT COLOR="#A020F0">val</FONT></B> equal: ''a t <B><FONT COLOR="#5F9EA0">*</FONT></B> ''a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">bool</FONT></B>
    <B><FONT COLOR="#A020F0">val</FONT></B> length: 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">int</FONT></B>
    <B><FONT COLOR="#A020F0">val</FONT></B> nth: 'a t <B><FONT COLOR="#5F9EA0">*</FONT></B> <B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 'a

    <B><FONT COLOR="#A020F0">val</FONT></B> push_front: 'a <B><FONT COLOR="#5F9EA0">*</FONT></B> 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">unit</FONT></B>
    <B><FONT COLOR="#A020F0">val</FONT></B> push_back: 'a t <B><FONT COLOR="#5F9EA0">*</FONT></B> 'a <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">unit</FONT></B>

    <B><FONT COLOR="#A020F0">val</FONT></B> take_front: 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 'a
    <B><FONT COLOR="#A020F0">val</FONT></B> take_back: 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 'a

    <B><FONT COLOR="#A020F0">val</FONT></B> copy: 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 'a t
    <B><FONT COLOR="#A020F0">val</FONT></B> reverse: 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 'a t
  <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#5F9EA0">struct</FONT></B>
     <B><FONT COLOR="#A020F0">type</FONT></B> 'a t <B><FONT COLOR="#5F9EA0">=</FONT></B> {size: <B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B>,
		  first: <B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B>,
		  last: <B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B>,
		  field: 'a <B><FONT COLOR="#228B22">array</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B>,
		  fill: 'a}

     <B><FONT COLOR="#A020F0">local</FONT></B>
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">make</FONT></I></B></FONT></B> sel (d: 'a t) <B><FONT COLOR="#5F9EA0">=</FONT></B> sel d
     <B><FONT COLOR="#A020F0">in</FONT></B>
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">fill</FONT></I></B></FONT></B> z <B><FONT COLOR="#5F9EA0">=</FONT></B> make #fill z
     <B><FONT COLOR="#A020F0">end</FONT></B>

     <B><FONT COLOR="#A020F0">local</FONT></B>
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">make</FONT></I></B></FONT></B> sel (d: 'a t) <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>(sel d)
     <B><FONT COLOR="#A020F0">in</FONT></B>
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">field</FONT></I></B></FONT></B> z <B><FONT COLOR="#5F9EA0">=</FONT></B> make #field z
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">first</FONT></I></B></FONT></B> z <B><FONT COLOR="#5F9EA0">=</FONT></B> make #first z
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">last</FONT></I></B></FONT></B> z <B><FONT COLOR="#5F9EA0">=</FONT></B> make #last z
<B><FONT COLOR="#A020F0">	fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">size</FONT></I></B></FONT></B> z <B><FONT COLOR="#5F9EA0">=</FONT></B> make #size z
     <B><FONT COLOR="#A020F0">end</FONT></B>

     <B><FONT COLOR="#A020F0">exception</FONT></B> Empty

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">make</FONT></I></B></FONT></B> (n, dummy) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B> Int.max (n, 0)
	   <B><FONT COLOR="#A020F0">val</FONT></B> nplus <B><FONT COLOR="#5F9EA0">=</FONT></B> Int.max (1, n)
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   {size <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> nplus,
	    first <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> (Int.<B><FONT COLOR="#5F9EA0">quot</FONT></B> (nplus, 2)),
	    last <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> (Int.<B><FONT COLOR="#5F9EA0">quot</FONT></B> (nplus, 2) <B><FONT COLOR="#5F9EA0">-</FONT></B> 1),
	    field <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> (Array.<B><FONT COLOR="#228B22">array</FONT></B> (nplus, dummy)),
	    fill <B><FONT COLOR="#5F9EA0">=</FONT></B> dummy}
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">iota</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B> Int.max (0, i)
	   <B><FONT COLOR="#A020F0">val</FONT></B> iplus <B><FONT COLOR="#5F9EA0">=</FONT></B> Int.max (1, i)
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   {size <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> iplus,
	    first <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0,
	    last <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> (i <B><FONT COLOR="#5F9EA0">-</FONT></B> 1),
	    field <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> (Array.tabulate (iplus, <B><FONT COLOR="#A020F0">fn</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> n <B><FONT COLOR="#5F9EA0">+</FONT></B> 1)),
	    fill <B><FONT COLOR="#5F9EA0">=</FONT></B> i}
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">length</FONT></I></B></FONT></B> buf <B><FONT COLOR="#5F9EA0">=</FONT></B> last buf <B><FONT COLOR="#5F9EA0">-</FONT></B> first buf <B><FONT COLOR="#5F9EA0">+</FONT></B> 1

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">is_empty</FONT></I></B></FONT></B> buf <B><FONT COLOR="#5F9EA0">=</FONT></B> last buf &lt; first buf

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">array_eq</FONT></I></B></FONT></B> (arr1, off1, arr2, off2, i) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
<B><FONT COLOR="#A020F0">	   fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">loop</FONT></I></B></FONT></B> (off1, off2, i) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	      <B><FONT COLOR="#A020F0">case</FONT></B> i <B><FONT COLOR="#A020F0">of</FONT></B>
		 0 <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> true
	       <B><FONT COLOR="#5F9EA0">|</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
		    sub (arr1, off1) <B><FONT COLOR="#5F9EA0">=</FONT></B> sub (arr2, off2)
		    <B><FONT COLOR="#A020F0">andalso</FONT></B> loop (off1 <B><FONT COLOR="#5F9EA0">+</FONT></B> 1, off2 <B><FONT COLOR="#5F9EA0">+</FONT></B> 1, n <B><FONT COLOR="#5F9EA0">-</FONT></B> 1)
	<B><FONT COLOR="#A020F0">in</FONT></B> loop (off1, off2, i)
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">equal</FONT></I></B></FONT></B> (buf1, buf2) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> len <B><FONT COLOR="#5F9EA0">=</FONT></B> length buf1
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   len <B><FONT COLOR="#5F9EA0">=</FONT></B> length buf2
	   <B><FONT COLOR="#A020F0">andalso</FONT></B> array_eq (field buf1, first buf1,
			     field buf2, first buf2,
			     len)
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">nth</FONT></I></B></FONT></B> (buf, n) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">if</FONT></B> n &lt; 0 <B><FONT COLOR="#A020F0">orelse</FONT></B> n <B><FONT COLOR="#5F9EA0">&gt;=</FONT></B> length buf
	   <B><FONT COLOR="#A020F0">then</FONT></B> failwith <B><FONT COLOR="#BC8F8F">&quot;nth&quot;</FONT></B>
	<B><FONT COLOR="#A020F0">else</FONT></B> sub (field buf, first buf <B><FONT COLOR="#5F9EA0">+</FONT></B> n)

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">double_shift</FONT></I></B></FONT></B> buf <B><FONT COLOR="#5F9EA0">=</FONT></B> 
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_size <B><FONT COLOR="#5F9EA0">=</FONT></B> size buf <B><FONT COLOR="#5F9EA0">*</FONT></B> 2
	   <B><FONT COLOR="#A020F0">val</FONT></B> len <B><FONT COLOR="#5F9EA0">=</FONT></B> length buf
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_first <B><FONT COLOR="#5F9EA0">=</FONT></B> Int.<B><FONT COLOR="#5F9EA0">quot</FONT></B> (new_size <B><FONT COLOR="#5F9EA0">-</FONT></B> len, 2)
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_field <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.<B><FONT COLOR="#228B22">array</FONT></B> (new_size, fill buf)
	   <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B>
	      ArraySlice.copy {src <B><FONT COLOR="#5F9EA0">=</FONT></B> ArraySlice.slice (field buf,
						       first buf,
						       <B><FONT COLOR="#5F9EA0">SOME</FONT></B> len),
			       dst <B><FONT COLOR="#5F9EA0">=</FONT></B> new_field,
			       di <B><FONT COLOR="#5F9EA0">=</FONT></B> new_first}
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   #size buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> new_size;
	   #field buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> new_field;
	   #first buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> new_first;
	   #last buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> new_first <B><FONT COLOR="#5F9EA0">+</FONT></B> len <B><FONT COLOR="#5F9EA0">-</FONT></B> 1
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">push_front</FONT></I></B></FONT></B> (elem, buf) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> first buf <B><FONT COLOR="#5F9EA0">=</FONT></B> 0 <B><FONT COLOR="#A020F0">then</FONT></B> double_shift buf <B><FONT COLOR="#A020F0">else</FONT></B> ()
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_first <B><FONT COLOR="#5F9EA0">=</FONT></B> first buf <B><FONT COLOR="#5F9EA0">-</FONT></B> 1
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   update (field buf, new_first, elem);
	   #first buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> new_first
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">push_back</FONT></I></B></FONT></B> (buf, elem) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> last buf <B><FONT COLOR="#5F9EA0">=</FONT></B> size buf <B><FONT COLOR="#5F9EA0">-</FONT></B> 1 <B><FONT COLOR="#A020F0">then</FONT></B> double_shift buf <B><FONT COLOR="#A020F0">else</FONT></B> ()
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_last <B><FONT COLOR="#5F9EA0">=</FONT></B> last buf <B><FONT COLOR="#5F9EA0">+</FONT></B> 1
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   update (field buf, new_last, elem);
	   #last buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> new_last
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">take_front</FONT></I></B></FONT></B> buf <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">if</FONT></B> is_empty buf
	   <B><FONT COLOR="#A020F0">then</FONT></B> <B><FONT COLOR="#A020F0">raise</FONT></B> Empty
	<B><FONT COLOR="#A020F0">else</FONT></B>
	   <B><FONT COLOR="#A020F0">let</FONT></B>
	      <B><FONT COLOR="#A020F0">val</FONT></B> old_first <B><FONT COLOR="#5F9EA0">=</FONT></B> first buf
	   <B><FONT COLOR="#A020F0">in</FONT></B>
	      #first buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> old_first <B><FONT COLOR="#5F9EA0">+</FONT></B> 1;
	      sub (field buf, old_first)
	   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">take_back</FONT></I></B></FONT></B> buf <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">if</FONT></B> is_empty buf
	   <B><FONT COLOR="#A020F0">then</FONT></B> <B><FONT COLOR="#A020F0">raise</FONT></B> Empty
	<B><FONT COLOR="#A020F0">else</FONT></B>
	   <B><FONT COLOR="#A020F0">let</FONT></B>
	      <B><FONT COLOR="#A020F0">val</FONT></B> old_last <B><FONT COLOR="#5F9EA0">=</FONT></B> last buf
	   <B><FONT COLOR="#A020F0">in</FONT></B>
	      #last buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> old_last <B><FONT COLOR="#5F9EA0">-</FONT></B> 1;
	      sub (field buf, old_last)
	   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">copy</FONT></I></B></FONT></B> buf <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> len <B><FONT COLOR="#5F9EA0">=</FONT></B> length buf
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_buf <B><FONT COLOR="#5F9EA0">=</FONT></B> make (len, fill buf)
	   <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B>
	      ArraySlice.copy {src <B><FONT COLOR="#5F9EA0">=</FONT></B> ArraySlice.slice (field buf,
						       first buf,
						       <B><FONT COLOR="#5F9EA0">SOME</FONT></B> len),
			       dst <B><FONT COLOR="#5F9EA0">=</FONT></B> field new_buf,
			       di <B><FONT COLOR="#5F9EA0">=</FONT></B> 0}
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   #first new_buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0;
	   #last new_buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> len <B><FONT COLOR="#5F9EA0">-</FONT></B> 1;
	   new_buf
	<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">     fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">reverse</FONT></I></B></FONT></B> buf <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">let</FONT></B>
	   <B><FONT COLOR="#A020F0">val</FONT></B> len <B><FONT COLOR="#5F9EA0">=</FONT></B> length buf 
	   <B><FONT COLOR="#A020F0">val</FONT></B> fst <B><FONT COLOR="#5F9EA0">=</FONT></B> first buf
	   <B><FONT COLOR="#A020F0">val</FONT></B> fld <B><FONT COLOR="#5F9EA0">=</FONT></B> field buf
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_buf <B><FONT COLOR="#5F9EA0">=</FONT></B> make (len, fill buf)
	   <B><FONT COLOR="#A020F0">val</FONT></B> new_fld <B><FONT COLOR="#5F9EA0">=</FONT></B> field new_buf
	   <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> 
	      for (0, len <B><FONT COLOR="#5F9EA0">-</FONT></B> 1, <B><FONT COLOR="#A020F0">fn</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
		   update (new_fld, len <B><FONT COLOR="#5F9EA0">-</FONT></B> i <B><FONT COLOR="#5F9EA0">-</FONT></B> 1, sub (fld, fst <B><FONT COLOR="#5F9EA0">+</FONT></B> i)))
	<B><FONT COLOR="#A020F0">in</FONT></B>
	   #first new_buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0;
	   #last new_buf <B><FONT COLOR="#5F9EA0">:=</FONT></B> len <B><FONT COLOR="#5F9EA0">-</FONT></B> 1;
	   new_buf
	<B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">open</FONT></B> Deque

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">empty</FONT></I></B></FONT></B> () <B><FONT COLOR="#5F9EA0">=</FONT></B> iota 0

<B><FONT COLOR="#A020F0">val</FONT></B> size <B><FONT COLOR="#5F9EA0">=</FONT></B> 10000

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">test_lists</FONT></I></B></FONT></B> () <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B>
     <B><FONT COLOR="#A020F0">val</FONT></B> d1 <B><FONT COLOR="#5F9EA0">=</FONT></B> iota size
     <B><FONT COLOR="#A020F0">val</FONT></B> d2 <B><FONT COLOR="#5F9EA0">=</FONT></B> copy d1
     <B><FONT COLOR="#A020F0">val</FONT></B> d3 <B><FONT COLOR="#5F9EA0">=</FONT></B> empty ()
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> for (1, length d2, <B><FONT COLOR="#A020F0">fn</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> push_back (d3, take_front d2))
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> for (1, length d3, <B><FONT COLOR="#A020F0">fn</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> push_back (d2, take_back d3))
     <B><FONT COLOR="#A020F0">val</FONT></B> d1 <B><FONT COLOR="#5F9EA0">=</FONT></B> reverse d1
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> size <B><FONT COLOR="#5F9EA0">&lt;&gt;</FONT></B> nth (d1, 0) <B><FONT COLOR="#A020F0">then</FONT></B> failwith <B><FONT COLOR="#BC8F8F">&quot;First test failed&quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> ()
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> length d1 <B><FONT COLOR="#5F9EA0">&lt;&gt;</FONT></B> length d2 <B><FONT COLOR="#A020F0">then</FONT></B> failwith <B><FONT COLOR="#BC8F8F">&quot;Second test failed&quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> ()
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> not (equal (d1, d2)) <B><FONT COLOR="#A020F0">then</FONT></B> failwith <B><FONT COLOR="#BC8F8F">&quot;Third test failed&quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> ()
  <B><FONT COLOR="#A020F0">in</FONT></B>
     length d1
  <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main</FONT></I></B></FONT></B> (name, args) <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B>
     <B><FONT COLOR="#A020F0">val</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B>
	<B><FONT COLOR="#A020F0">case</FONT></B> Int.fromString (<B><FONT COLOR="#5F9EA0">hd</FONT></B> (args <B><FONT COLOR="#5F9EA0">@</FONT></B> [<B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>])) <B><FONT COLOR="#A020F0">of</FONT></B>
	   <B><FONT COLOR="#5F9EA0">NONE</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 1
	 <B><FONT COLOR="#5F9EA0">|</FONT></B> <B><FONT COLOR="#5F9EA0">SOME</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> n
     <B><FONT COLOR="#A020F0">val</FONT></B> result <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> for (1, n, <B><FONT COLOR="#A020F0">fn</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> result <B><FONT COLOR="#5F9EA0">:=</FONT></B> test_lists ())
  <B><FONT COLOR="#A020F0">in</FONT></B>
     <B><FONT COLOR="#A020F0">print</FONT></B> (<B><FONT COLOR="#A020F0">concat</FONT></B> [Int.toString (<B><FONT COLOR="#5F9EA0">!</FONT></B>result), <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>]);
     OS.Process.success
  <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> main( CommandLine.name(), CommandLine.arguments() )</pre></td></tr></table>
