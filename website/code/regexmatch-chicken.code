<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; $Id: regexmatch-chicken.code,v 1.1 2004-11-02 08:52:40 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(declare (fixnum) (disable-interrupts) (uses srfi-1 regex))

(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">rx</FONT></B>
  (string-append
   <B><FONT COLOR="#BC8F8F">&quot;(^|[^0-9\\(])&quot;</FONT></B>			<I><FONT COLOR="#B22222">; (1) preceeding non-digit or bol
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;(&quot;</FONT></B>					<I><FONT COLOR="#B22222">; (2) area code
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;\\(([0-9][0-9][0-9])\\)&quot;</FONT></B>		<I><FONT COLOR="#B22222">; (3) is either 3 digits in parens
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;|&quot;</FONT></B>					<I><FONT COLOR="#B22222">; or
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;([0-9][0-9][0-9])&quot;</FONT></B>			<I><FONT COLOR="#B22222">; (4) just 3 digits
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;)&quot;</FONT></B>					<I><FONT COLOR="#B22222">; end of area code
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>					<I><FONT COLOR="#B22222">; area code is followed by one space
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;([0-9][0-9][0-9])&quot;</FONT></B>			<I><FONT COLOR="#B22222">; (5) exchange is 3 digits
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;[ -]&quot;</FONT></B>				<I><FONT COLOR="#B22222">; separator is either space or dash
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;([0-9][0-9][0-9][0-9])&quot;</FONT></B>		<I><FONT COLOR="#B22222">; (6) last 4 digits
</FONT></I>   <B><FONT COLOR="#BC8F8F">&quot;([^0-9]|$)&quot;</FONT></B>				<I><FONT COLOR="#B22222">; must be followed by a non-digit
</FONT></I>   ))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> #!optional (n <B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>))
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((phonelines '())
	(rx (regexp rx))
	(count 0))
    (<B><FONT COLOR="#A020F0">let</FONT></B> loop ((line (read-line)))
      (<B><FONT COLOR="#A020F0">cond</FONT></B> ((eof-object? line) #f)
	    (<B><FONT COLOR="#A020F0">else</FONT></B>
	     (<B><FONT COLOR="#A020F0">set!</FONT></B> phonelines (cons line phonelines))
	     (loop (read-line)))))
    (<B><FONT COLOR="#A020F0">set!</FONT></B> phonelines (reverse! phonelines))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ([n (string-&gt;number n) (sub1 n)])
	((negative? n))
      (<B><FONT COLOR="#A020F0">let</FONT></B> loop ((phones phonelines)
		 (count 0))
	(<B><FONT COLOR="#A020F0">if</FONT></B> (null? phones)
	    count
	    (<B><FONT COLOR="#A020F0">begin</FONT></B>
	      (match (string-match rx (car phones))
		[(_ _ a1 a2 a3 exch numb _)
		 (<B><FONT COLOR="#A020F0">let</FONT></B> ((area (<B><FONT COLOR="#A020F0">and</FONT></B> a1 (<B><FONT COLOR="#A020F0">or</FONT></B> a2 a3))))
		   (when area
		     (<B><FONT COLOR="#A020F0">let</FONT></B> ((num (string-append <B><FONT COLOR="#BC8F8F">&quot;(&quot;</FONT></B> area <B><FONT COLOR="#BC8F8F">&quot;) &quot;</FONT></B> exch <B><FONT COLOR="#BC8F8F">&quot;-&quot;</FONT></B> numb)))
		       (<B><FONT COLOR="#A020F0">set!</FONT></B> count (add1 count))
		       (when (zero? n) (print count <B><FONT COLOR="#BC8F8F">&quot;: &quot;</FONT></B> num))) ) ) ]
		[_ #f] )
	      (loop (cdr phones) count) ) ) ) ) ) )

(apply main (command-line-arguments))</pre></td></tr></table>
