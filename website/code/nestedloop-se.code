<span class="slc">-- -*- mode: eiffel -*-
</span><span class="slc">-- $Id: nestedloop-se.code,v 1.5 2005-03-29 08:48:36 bfulgham Exp $
</span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span>
<span class="kwa">class</span> NESTEDLOOP

creation make

<span class="kwa">feature

</span>   make <span class="kwa">is

      local
</span>	 n<span class="sym">,</span>a<span class="sym">,</span>b<span class="sym">,</span>c<span class="sym">,</span>d<span class="sym">,</span>e<span class="sym">,</span>f<span class="sym">,</span>x<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span>      <span class="kwa">do
	 if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then
</span>	    n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
	 <span class="kwa">else
</span>	    n <span class="sym">:=</span> <span class="num">1
</span>	 <span class="kwa">end

</span>	 x <span class="sym">:=</span> <span class="num">0
</span>	 <span class="kwa">from
</span>	    a <span class="sym">:=</span> <span class="num">0
</span>	 until
	    a <span class="sym">=</span> n
	 <span class="kwa">loop
	    from
</span>	       b <span class="sym">:=</span> <span class="num">0
</span>	    until
	       b <span class="sym">=</span> n
	    <span class="kwa">loop
	       from
</span>		  c <span class="sym">:=</span> <span class="num">0
</span>	       until
		  c <span class="sym">=</span> n
	       <span class="kwa">loop
		  from
</span>		     d <span class="sym">:=</span> <span class="num">0
</span>		  until
		     d <span class="sym">=</span> n
		  <span class="kwa">loop
		     from
</span>			e <span class="sym">:=</span> <span class="num">0
</span>		     until
			e <span class="sym">=</span> n
		     <span class="kwa">loop
			from
</span>			   f <span class="sym">:=</span> <span class="num">0
</span>			until
			   f <span class="sym">=</span> n
			<span class="kwa">loop
</span>			   x <span class="sym">:=</span> x <span class="sym">+</span> <span class="num">1
</span>			   f <span class="sym">:=</span> f <span class="sym">+</span> <span class="num">1
</span>			<span class="kwa">end
</span>			e <span class="sym">:=</span> e <span class="sym">+</span> <span class="num">1
</span>		     <span class="kwa">end
</span>		     d <span class="sym">:=</span> d <span class="sym">+</span> <span class="num">1
</span>		  <span class="kwa">end
</span>		  c <span class="sym">:=</span> c <span class="sym">+</span> <span class="num">1
</span>	       <span class="kwa">end
</span>	       b <span class="sym">:=</span> b <span class="sym">+</span> <span class="num">1
</span>	    <span class="kwa">end
</span>	    a <span class="sym">:=</span> a <span class="sym">+</span> <span class="num">1
</span>	 <span class="kwa">end

</span>         std_output.put_integer<span class="sym">(</span>x<span class="sym">)
</span>         std_output.put_character<span class="sym">(</span><span class="str">'%N'</span><span class="sym">)
</span>      <span class="kwa">end</span><span class="sym">;

</span><span class="kwa">end</span>
