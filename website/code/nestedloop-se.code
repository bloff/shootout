<span class="slc">-- -*- mode: eiffel -*-</span>
<span class="slc">-- $Id: nestedloop-se.code,v 1.7 2005-11-15 08:27:32 bfulgham Exp $</span>
<span class="slc">-- http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">class</span> NESTEDLOOP

creation make

<span class="kwa">feature</span>

   make <span class="kwa">is</span>

      <span class="kwa">local</span>
	 n<span class="sym">,</span>a<span class="sym">,</span>b<span class="sym">,</span>c<span class="sym">,</span>d<span class="sym">,</span>e<span class="sym">,</span>f<span class="sym">,</span>x<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span>
      <span class="kwa">do</span>
	 <span class="kwa">if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then</span>
	    n <span class="sym">:=</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
	 <span class="kwa">else</span>
	    n <span class="sym">:=</span> <span class="num">1</span>
	 <span class="kwa">end</span>

	 x <span class="sym">:=</span> <span class="num">0</span>
	 <span class="kwa">from</span>
	    a <span class="sym">:=</span> <span class="num">0</span>
	 until
	    a <span class="sym">=</span> n
	 <span class="kwa">loop</span>
	    <span class="kwa">from</span>
	       b <span class="sym">:=</span> <span class="num">0</span>
	    until
	       b <span class="sym">=</span> n
	    <span class="kwa">loop</span>
	       <span class="kwa">from</span>
		  c <span class="sym">:=</span> <span class="num">0</span>
	       until
		  c <span class="sym">=</span> n
	       <span class="kwa">loop</span>
		  <span class="kwa">from</span>
		     d <span class="sym">:=</span> <span class="num">0</span>
		  until
		     d <span class="sym">=</span> n
		  <span class="kwa">loop</span>
		     <span class="kwa">from</span>
			e <span class="sym">:=</span> <span class="num">0</span>
		     until
			e <span class="sym">=</span> n
		     <span class="kwa">loop</span>
			<span class="kwa">from</span>
			   f <span class="sym">:=</span> <span class="num">0</span>
			until
			   f <span class="sym">=</span> n
			<span class="kwa">loop</span>
			   x <span class="sym">:=</span> x <span class="sym">+</span> <span class="num">1</span>
			   f <span class="sym">:=</span> f <span class="sym">+</span> <span class="num">1</span>
			<span class="kwa">end</span>
			e <span class="sym">:=</span> e <span class="sym">+</span> <span class="num">1</span>
		     <span class="kwa">end</span>
		     d <span class="sym">:=</span> d <span class="sym">+</span> <span class="num">1</span>
		  <span class="kwa">end</span>
		  c <span class="sym">:=</span> c <span class="sym">+</span> <span class="num">1</span>
	       <span class="kwa">end</span>
	       b <span class="sym">:=</span> b <span class="sym">+</span> <span class="num">1</span>
	    <span class="kwa">end</span>
	    a <span class="sym">:=</span> a <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">end</span>

         std_output.<span class="kwd">put_integer</span><span class="sym">(</span>x<span class="sym">)</span>
         std_output.<span class="kwd">put_character</span><span class="sym">(</span><span class="str">'%N'</span><span class="sym">)</span>
      <span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">end</span>
