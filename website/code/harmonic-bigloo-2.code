<span class="slc">;; The Great Computer Language Shootout
</span><span class="slc">;; Harmonic benchmark
</span><span class="slc">;;
</span><span class="slc">;; Implemented by Will M. Farr
</span>
<span class="sym">(</span>module harmonic
   <span class="sym">(</span>main main<span class="sym">))

(</span>define <span class="sym">(</span>int<span class="sym">-&gt;</span>double<span class="sym">::</span>double i<span class="sym">::</span>int<span class="sym">)
   (</span>pragma<span class="sym">::</span>double <span class="str">&quot;((double) ($1))&quot;</span> i<span class="sym">))

(</span>define <span class="sym">(</span>sum<span class="sym">-</span>harmonic<span class="sym">::</span>double n<span class="sym">::</span>int<span class="sym">)
   (</span>do <span class="sym">((</span>i <span class="num">1</span> <span class="sym">(+</span>fx i <span class="num">1</span><span class="sym">))
	(</span>sum <span class="num">0.0</span> <span class="sym">(+</span>fl sum <span class="sym">(/</span>fl <span class="num">1.0</span> <span class="sym">(</span>int<span class="sym">-&gt;</span>double i<span class="sym">)))))
       ((&gt;</span>fx i n<span class="sym">)</span> sum<span class="sym">)))

(</span>define <span class="sym">(</span>main argv<span class="sym">)
   (</span>let <span class="sym">((</span>n <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> argv<span class="sym">))))
      (</span>display <span class="sym">(</span>sum<span class="sym">-</span>harmonic n<span class="sym">))
      (</span>newline<span class="sym">)))</span>
