<span class="com">(*</span>
<span class="com"> * $Id: wordfreq-ocamlb.code,v 1.7 2006-09-20 05:52:50 bfulgham Exp $</span>
<span class="com"> * http://shootout.alioth.debian.org/</span>
<span class="com"> * with help from Markus Mottl</span>
<span class="com"> *)</span>

<span class="kwa">let</span> max <span class="sym">=</span> <span class="num">4096</span>
<span class="kwa">let</span> buf <span class="sym">=</span> String.create max
<span class="kwa">let</span> count <span class="sym">=</span> Hashtbl.create <span class="num">75000</span> <span class="kwa">and</span> wbuf <span class="sym">=</span> Buffer.create <span class="num">64</span>
<span class="kwa">let</span> to_list w c l <span class="sym">=</span> Printf.sprintf <span class="str">&quot;%7d %s&quot;</span> <span class="sym">!</span>c w <span class="sym">::</span> l

<span class="kwa">let rec</span> scan_words i n inword <span class="sym">=</span>
  <span class="kwa">if</span> i <span class="sym">&lt;</span> n <span class="kwa">then</span>
    <span class="kwa">let</span> c <span class="sym">=</span> buf.<span class="sym">[</span>i<span class="sym">]</span> <span class="kwa">in</span>
    <span class="kwa">if</span> <span class="str">'a'</span> <span class="sym">&lt;=</span> c <span class="sym">&amp;&amp;</span> c <span class="sym">&lt;=</span> <span class="str">'z'</span> <span class="kwa">then begin</span>
      Buffer.add_char wbuf c<span class="sym">;</span>
      <span class="kwd">scan_words</span> <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> n <span class="kwa">true</span>
    <span class="kwa">end</span>
    <span class="kwa">else if</span> <span class="str">'A'</span> <span class="sym">&lt;=</span> c <span class="sym">&amp;&amp;</span> c <span class="sym">&lt;=</span> <span class="str">'Z'</span> <span class="kwa">then begin</span>
      Buffer.add_char <span class="kwd">wbuf</span> <span class="sym">(</span>Char.<span class="kwd">unsafe_chr</span> <span class="sym">(</span>Char.code c <span class="sym">+</span> <span class="num">32</span><span class="sym">));</span>
      <span class="kwd">scan_words</span> <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> n <span class="kwa">true</span>
    <span class="kwa">end</span>
    <span class="kwa">else if</span> inword <span class="kwa">then begin</span>
      <span class="kwa">let</span> <span class="kwb">word</span> <span class="sym">=</span> Buffer.contents wbuf <span class="kwa">in</span>
      <span class="kwa">begin try</span> <span class="kwd">incr</span> <span class="sym">(</span>Hashtbl.find count <span class="kwb">word</span><span class="sym">)</span>
      <span class="kwa">with</span> Not_found <span class="sym">-&gt;</span> Hashtbl.add count <span class="kwb">word</span> <span class="sym">(</span>ref <span class="num">1</span><span class="sym">)</span> <span class="kwa">end</span><span class="sym">;</span>
      Buffer.clear wbuf<span class="sym">;</span>
      <span class="kwd">scan_words</span> <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> n <span class="kwa">false</span>
    <span class="kwa">end</span>
    <span class="kwa">else</span> <span class="kwd">scan_words</span> <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> n <span class="kwa">false</span>
  <span class="kwa">else</span>
    <span class="kwa">let</span> nread <span class="sym">=</span> input stdin buf <span class="num">0</span> max <span class="kwa">in</span>
    <span class="kwa">if</span> nread <span class="sym">&lt;&gt;</span> <span class="num">0</span> <span class="kwa">then</span> scan_words <span class="num">0</span> nread inword<span class="sym">;;</span>

scan_words <span class="num">0 0</span> <span class="kwa">false</span><span class="sym">;</span>

<span class="kwa">let</span> out_lines <span class="sym">=</span> Hashtbl.<span class="kwd">fold</span> <span class="sym">(</span><span class="kwa">fun</span> k d l <span class="sym">-&gt; (</span>k<span class="sym">, !</span>d<span class="sym">) ::</span> l<span class="sym">)</span> count <span class="sym">[]</span> <span class="kwa">in</span>
List.<span class="kwd">iter</span> <span class="sym">(</span><span class="kwa">fun</span> <span class="sym">(</span>k<span class="sym">,</span> d<span class="sym">) -&gt;</span> Printf.printf <span class="str">&quot;%7d %s</span><span class="esc">\n</span><span class="str">&quot;</span> d k<span class="sym">)</span>
  <span class="sym">(</span>List.<span class="kwd">sort</span> <span class="sym">(</span><span class="kwa">fun</span> <span class="sym">(</span>ka<span class="sym">,</span> da<span class="sym">) (</span>kb<span class="sym">,</span> db<span class="sym">) -&gt;</span>
                <span class="kwa">let</span> c <span class="sym">=</span> compare db da <span class="kwa">in</span>
                <span class="kwa">if</span> c <span class="sym">&lt;&gt;</span> <span class="num">0</span> <span class="kwa">then</span> c
                <span class="kwa">else</span> String.compare kb ka<span class="sym">)</span> out_lines<span class="sym">)</span>

