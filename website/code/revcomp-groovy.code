<span class="dir">#!/bin/env groovy
</span><span class="com">/*
	$Id: revcomp-groovy.code,v 1.5 2005-10-01 07:37:29 bfulgham Exp $

	The Great Computer Language Shootout
	http://shootout.alioth.debian.org/

	contributed by Jochen Hinrichsen
*/</span>

def complements <span class="sym">= [</span><span class="str">'A'</span><span class="sym">:</span><span class="str">'T'</span><span class="sym">,</span> <span class="str">'C'</span><span class="sym">:</span><span class="str">'G'</span><span class="sym">,</span> <span class="str">'G'</span><span class="sym">:</span><span class="str">'C'</span><span class="sym">,</span> <span class="str">'T'</span><span class="sym">:</span><span class="str">'A'</span><span class="sym">,</span> <span class="str">'M'</span><span class="sym">:</span><span class="str">'K'</span><span class="sym">,</span> <span class="str">'R'</span><span class="sym">:</span><span class="str">'Y'</span><span class="sym">,</span> <span class="str">'W'</span><span class="sym">:</span><span class="str">'W'</span><span class="sym">,</span> <span class="str">'S'</span><span class="sym">:</span><span class="str">'S'</span><span class="sym">,</span> <span class="str">'Y'</span><span class="sym">:</span><span class="str">'R'</span><span class="sym">,</span> <span class="str">'K'</span><span class="sym">:</span><span class="str">'M'</span><span class="sym">,</span> <span class="str">'V'</span><span class="sym">:</span><span class="str">'B'</span><span class="sym">,</span> <span class="str">'H'</span><span class="sym">:</span><span class="str">'D'</span><span class="sym">,</span> <span class="str">'D'</span><span class="sym">:</span><span class="str">'H'</span><span class="sym">,</span> <span class="str">'B'</span><span class="sym">:</span><span class="str">'V'</span><span class="sym">,</span> <span class="str">'N'</span><span class="sym">:</span><span class="str">'N'</span><span class="sym">]

</span>def revComp<span class="sym">(</span>s<span class="sym">) {
</span>    def rev <span class="sym">=</span> <span class="str">&quot;&quot;</span>
    s<span class="sym">.</span>toUpperCase<span class="sym">().</span>each<span class="sym">() {
</span>        def ch <span class="sym">=</span> complements<span class="sym">[</span>it<span class="sym">]
</span>        <span class="kwa">if</span> <span class="sym">(</span>ch <span class="sym">==</span> null<span class="sym">) {
</span>            println <span class="str">&quot;&quot;</span>
            println <span class="sym">(</span>it<span class="sym">)
        }
</span>        rev <span class="sym">+=</span> ch
    <span class="sym">}
</span>    rev
<span class="sym">}

</span>System<span class="sym">.</span>in<span class="sym">.</span>newReader<span class="sym">().</span>eachLine<span class="sym">() {</span> line <span class="sym">-&gt;
</span>    println <span class="sym">(</span>line<span class="sym">.</span>startsWith<span class="sym">(</span><span class="str">&quot;&gt;&quot;</span><span class="sym">)</span> ? line <span class="sym">:</span> revComp<span class="sym">(</span>line<span class="sym">))
}

</span><span class="slc">// EOF</span>
