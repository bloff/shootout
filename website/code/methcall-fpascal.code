<span class="line">    1 </span><span class="kwa">program</span> methcall<span class="sym">;
</span><span class="line">    2 </span><span class="sym"></span><span class="com">{$MODE objfpc}</span>
<span class="line">    3 </span>
<span class="line">    4 </span><span class="kwa">uses</span> SysUtils<span class="sym">;
</span><span class="line">    5 </span><span class="sym">
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">type</span> TToggle <span class="sym">=</span> <span class="kwa">class
</span><span class="line">    7 </span><span class="kwa">        private
</span><span class="line">    8 </span><span class="kwa"></span>                value <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym"></span>        <span class="kwa">public
</span><span class="line">   11 </span><span class="kwa">                property</span> Bool <span class="sym">:</span> <span class="kwb">boolean</span> read value write value<span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>                <span class="kwa">procedure</span> Activate<span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym"></span><span class="kwa">type</span> TNthToggle <span class="sym">=</span> <span class="kwa">class
</span><span class="line">   16 </span><span class="kwa">        constructor</span> Create<span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>        <span class="kwa">private
</span><span class="line">   18 </span><span class="kwa"></span>                value <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;
</span><span class="line">   19 </span><span class="sym"></span>                counter <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym"></span>                cmax <span class="sym">:</span> <span class="kwb">integer</span><span class="sym">;
</span><span class="line">   21 </span><span class="sym"></span>        <span class="kwa">public
</span><span class="line">   22 </span><span class="kwa">                property</span> CountMax <span class="sym">:</span> <span class="kwb">integer</span> read cmax write cmax<span class="sym">;
</span><span class="line">   23 </span><span class="sym"></span>                <span class="kwa">property</span> Bool <span class="sym">:</span> <span class="kwb">boolean</span> read value write value<span class="sym">;
</span><span class="line">   24 </span><span class="sym"></span>                <span class="kwa">procedure</span> Activate<span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span><span class="kwa">constructor</span> TNthToggle.Create<span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   29 </span><span class="kwa"></span>        counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;
</span><span class="line">   31 </span><span class="sym">
</span><span class="line">   32 </span><span class="sym"></span><span class="kwa">procedure</span> TToggle.Activate<span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   34 </span><span class="kwa">        if</span> value <span class="sym">=</span> <span class="kwb">True</span> <span class="kwa">Then
</span><span class="line">   35 </span><span class="kwa"></span>                value <span class="sym">:=</span> <span class="kwb">False
</span><span class="line">   36 </span><span class="kwb"></span>        <span class="kwa">else
</span><span class="line">   37 </span><span class="kwa"></span>                value <span class="sym">:=</span> <span class="kwb">True</span><span class="sym">;
</span><span class="line">   38 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;
</span><span class="line">   39 </span><span class="sym">
</span><span class="line">   40 </span><span class="sym"></span><span class="kwa">procedure</span> TNthToggle.Activate<span class="sym">;
</span><span class="line">   41 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   42 </span><span class="kwa"></span>        counter <span class="sym">:=</span> counter <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   43 </span><span class="sym"></span>        <span class="kwa">if</span> counter <span class="sym">&gt;=</span> cmax <span class="kwa">Then begin
</span><span class="line">   44 </span><span class="kwa">                if</span> value <span class="sym">=</span> <span class="kwb">True</span> <span class="kwa">Then
</span><span class="line">   45 </span><span class="kwa"></span>                        value <span class="sym">:=</span> <span class="kwb">False
</span><span class="line">   46 </span><span class="kwb"></span>                <span class="kwa">Else
</span><span class="line">   47 </span><span class="kwa"></span>                        value <span class="sym">:=</span> <span class="kwb">True</span><span class="sym">;
</span><span class="line">   48 </span><span class="sym"></span>                counter <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   49 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   50 </span><span class="sym"></span><span class="kwa">end</span><span class="sym">;
</span><span class="line">   51 </span><span class="sym">
</span><span class="line">   52 </span><span class="sym">
</span><span class="line">   53 </span><span class="sym"></span><span class="kwa">var
</span><span class="line">   54 </span><span class="kwa"></span>        NUM<span class="sym">,</span> i <span class="sym">:</span> <span class="kwb">longint</span><span class="sym">;
</span><span class="line">   55 </span><span class="sym"></span>        val <span class="sym">:</span> <span class="kwb">boolean</span><span class="sym">;
</span><span class="line">   56 </span><span class="sym"></span>        oToggle <span class="sym">:</span> TToggle<span class="sym">;
</span><span class="line">   57 </span><span class="sym"></span>        onToggle <span class="sym">:</span> TNthToggle<span class="sym">;
</span><span class="line">   58 </span><span class="sym"></span><span class="kwa">begin
</span><span class="line">   59 </span><span class="kwa">        if</span> ParamCount <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then
</span><span class="line">   60 </span><span class="kwa"></span>                NUM <span class="sym">:=</span> <span class="num">1
</span><span class="line">   61 </span><span class="num"></span>        <span class="kwa">else
</span><span class="line">   62 </span><span class="kwa"></span>                NUM <span class="sym">:=</span> StrToInt<span class="sym">(</span>ParamStr<span class="sym">(</span><span class="num">1</span><span class="sym">));
</span><span class="line">   63 </span><span class="sym">
</span><span class="line">   64 </span><span class="sym"></span>        <span class="kwa">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> NUM <span class="sym">:=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   65 </span><span class="sym">
</span><span class="line">   66 </span><span class="sym"></span>        val <span class="sym">:=</span> <span class="kwb">True</span><span class="sym">;
</span><span class="line">   67 </span><span class="sym"></span>        oToggle <span class="sym">:=</span> TToggle.Create<span class="sym">;
</span><span class="line">   68 </span><span class="sym"></span>        oToggle.Bool <span class="sym">:=</span> val<span class="sym">;
</span><span class="line">   69 </span><span class="sym"></span>        <span class="kwa">For</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> NUM <span class="kwa">do
</span><span class="line">   70 </span><span class="kwa">        begin
</span><span class="line">   71 </span><span class="kwa"></span>                oToggle.Activate<span class="sym">;
</span><span class="line">   72 </span><span class="sym"></span>                val <span class="sym">:=</span> oToggle.Bool<span class="sym">;
</span><span class="line">   73 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   74 </span><span class="sym"></span>        <span class="kwa">If</span> val <span class="sym">=</span> <span class="kwb">True</span> <span class="kwa">Then
</span><span class="line">   75 </span><span class="kwa"></span>                WriteLn<span class="sym">(</span><span class="str">'true'</span><span class="sym">)
</span><span class="line">   76 </span><span class="sym"></span>        <span class="kwa">else
</span><span class="line">   77 </span><span class="kwa"></span>                WriteLn<span class="sym">(</span><span class="str">'false'</span><span class="sym">);
</span><span class="line">   78 </span><span class="sym">
</span><span class="line">   79 </span><span class="sym"></span>        val <span class="sym">:=</span> <span class="kwb">True</span><span class="sym">;
</span><span class="line">   80 </span><span class="sym"></span>        onToggle <span class="sym">:=</span> TNthToggle.Create<span class="sym">;
</span><span class="line">   81 </span><span class="sym"></span>        onToggle.Bool <span class="sym">:=</span> val<span class="sym">;
</span><span class="line">   82 </span><span class="sym"></span>        onToggle.CountMax <span class="sym">:=</span> <span class="num">3</span><span class="sym">;
</span><span class="line">   83 </span><span class="sym"></span>        <span class="kwa">For</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> NUM <span class="kwa">do
</span><span class="line">   84 </span><span class="kwa">        begin
</span><span class="line">   85 </span><span class="kwa"></span>                onToggle.Activate<span class="sym">;
</span><span class="line">   86 </span><span class="sym"></span>                val <span class="sym">:=</span> onToggle.Bool<span class="sym">;
</span><span class="line">   87 </span><span class="sym"></span>        <span class="kwa">end</span><span class="sym">;
</span><span class="line">   88 </span><span class="sym"></span>        <span class="kwa">If</span> val <span class="sym">=</span> <span class="kwb">True</span> <span class="kwa">Then
</span><span class="line">   89 </span><span class="kwa"></span>                WriteLn<span class="sym">(</span><span class="str">'true'</span><span class="sym">)
</span><span class="line">   90 </span><span class="sym"></span>        <span class="kwa">else
</span><span class="line">   91 </span><span class="kwa"></span>                WriteLn<span class="sym">(</span><span class="str">'false'</span><span class="sym">);
</span><span class="line">   92 </span><span class="sym"></span><span class="kwa">end</span>.
