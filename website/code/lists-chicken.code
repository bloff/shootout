<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; lists.scm
</FONT></I><I><FONT COLOR="#B22222">;;;
</FONT></I><I><FONT COLOR="#B22222">;;; Contributed by Felix Winkelmann
</FONT></I><I><FONT COLOR="#B22222">;;; -Ob
</FONT></I>
(declare (fixnum) (disable-interrupts) (uses srfi-1))

(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">SIZE</FONT></B> 10000)

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">sequence</FONT></B> start stop)
  (<B><FONT COLOR="#A020F0">if</FONT></B> (&gt; start stop)
      '()
      (cons start (sequence (+ start 1) stop))))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">head-to-tail!</FONT></B> headlist taillist)
  (when (null? taillist)
    (<B><FONT COLOR="#A020F0">set!</FONT></B> taillist (list (car headlist)))
    (<B><FONT COLOR="#A020F0">set!</FONT></B> headlist (cdr headlist)))
  (<B><FONT COLOR="#A020F0">letrec</FONT></B> ((htt-helper (<B><FONT COLOR="#A020F0">lambda</FONT></B> (dest)
			 (when (not (null? headlist))
			   (<B><FONT COLOR="#A020F0">let</FONT></B> ((headlink headlist))
			     (set-cdr! dest headlink)
			     (<B><FONT COLOR="#A020F0">set!</FONT></B> headlist (cdr headlist))
			     (htt-helper headlink))))))
    (htt-helper taillist)
    (values headlist taillist)))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">test-lists</FONT></B>)
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ([L1 (sequence 1 SIZE)]
	 [L2 (append L1 '())]
	 [L3 '()])
    (<B><FONT COLOR="#A020F0">set!</FONT></B>-values (L2 L3) (head-to-tail! L2 L3))
    (<B><FONT COLOR="#A020F0">set!</FONT></B>-values (L3 L2) (head-to-tail! (reverse! L3) L2))
    (<B><FONT COLOR="#A020F0">set!</FONT></B> L1 (reverse! L1))
    (<B><FONT COLOR="#A020F0">cond</FONT></B> ((not (= SIZE (car L1))) 0)
	  ((not (equal? L1 L2))	   0)
	  (<B><FONT COLOR="#A020F0">else</FONT></B>           (length L1)))))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> args)
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((result #f))
    (<B><FONT COLOR="#A020F0">let</FONT></B> loop ((counter (<B><FONT COLOR="#A020F0">if</FONT></B> (null? args)
			    1
			    (string-&gt;number (car args)))))
      (when (&gt; counter 0)
	(<B><FONT COLOR="#A020F0">set!</FONT></B> result (test-lists))
	(loop (- counter 1))))
    (print result)))

(main (command-line-arguments))</pre></td></tr></table>
