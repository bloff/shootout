<span class="line">    1 </span><span class="slc">-- -*- mode: eiffel -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: wordfreq-se.code,v 1.3 2004-11-11 07:14:24 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">--
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">-- By Brent Fulgham
</span><span class="line">    6 </span><span class="slc"></span>
<span class="line">    7 </span><span class="kwa">class</span> WORDFREQ
<span class="line">    8 </span>
<span class="line">    9 </span>creation make
<span class="line">   10 </span>
<span class="line">   11 </span><span class="kwa">feature
</span><span class="line">   12 </span><span class="kwa">
</span><span class="line">   13 </span><span class="kwa"></span>    make <span class="kwa">is
</span><span class="line">   14 </span><span class="kwa">
</span><span class="line">   15 </span><span class="kwa">        local
</span><span class="line">   16 </span><span class="kwa"></span>            count<span class="sym">,</span> highlevel<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>            c<span class="sym">:</span> <span class="kwb">CHARACTER</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>            dictionary<span class="sym">:</span> DICTIONARY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">,</span> STRING<span class="sym">];
</span><span class="line">   19 </span><span class="sym"></span>            outcol<span class="sym">:</span> ARRAY<span class="sym">[</span>STRING<span class="sym">];
</span><span class="line">   20 </span><span class="sym"></span>            sorter<span class="sym">:</span> REVERSE_COLLECTION_SORTER<span class="sym">[</span>STRING<span class="sym">];
</span><span class="line">   21 </span><span class="sym"></span>            word<span class="sym">,</span> temp<span class="sym">:</span> STRING<span class="sym">;
</span><span class="line">   22 </span><span class="sym"></span>            iter<span class="sym">:</span> ITERATOR<span class="sym">[</span>STRING<span class="sym">];
</span><span class="line">   23 </span><span class="sym"></span>        <span class="kwa">do
</span><span class="line">   24 </span><span class="kwa"></span>            count <span class="sym">:=</span> <span class="num">0
</span><span class="line">   25 </span><span class="num"></span>            <span class="kwa">from
</span><span class="line">   26 </span><span class="kwa"></span>                <span class="sym">!!</span>dictionary.with_capacity<span class="sym">(</span><span class="num">60000</span><span class="sym">)
</span><span class="line">   27 </span><span class="sym">                !!</span>word.make<span class="sym">(</span><span class="num">40</span><span class="sym">)
</span><span class="line">   28 </span><span class="sym"></span>                io.read_character
<span class="line">   29 </span>            until
<span class="line">   30 </span>                io.end_of_input
<span class="line">   31 </span>            <span class="kwa">loop
</span><span class="line">   32 </span><span class="kwa"></span>                c <span class="sym">:=</span> io.last_character.to_lower
<span class="line">   33 </span>                <span class="kwa">if not</span> c.is_letter <span class="kwa">then
</span><span class="line">   34 </span><span class="kwa"></span>                    <span class="slc">-- insert word into dictionary
</span><span class="line">   35 </span><span class="slc"></span>                    <span class="kwa">if not</span> word.is_empty <span class="kwa">then
</span><span class="line">   36 </span><span class="kwa">                        if not</span> dictionary.has<span class="sym">(</span>word<span class="sym">)</span> <span class="kwa">then
</span><span class="line">   37 </span><span class="kwa"></span>                            dictionary.add<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> clone<span class="sym">(</span>word<span class="sym">))
</span><span class="line">   38 </span><span class="sym"></span>                        <span class="kwa">else
</span><span class="line">   39 </span><span class="kwa"></span>                            count <span class="sym">:=</span> dictionary.at<span class="sym">(</span>word<span class="sym">);
</span><span class="line">   40 </span><span class="sym"></span>                            count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   41 </span><span class="sym"></span>                            dictionary.put<span class="sym">(</span>count<span class="sym">,</span>word<span class="sym">)
</span><span class="line">   42 </span><span class="sym"></span>                            <span class="kwa">if</span> highlevel <span class="sym">&lt;</span> count <span class="kwa">then
</span><span class="line">   43 </span><span class="kwa"></span>                                    highlevel <span class="sym">:=</span> count
<span class="line">   44 </span>                            <span class="kwa">end
</span><span class="line">   45 </span><span class="kwa">                        end
</span><span class="line">   46 </span><span class="kwa">                    end
</span><span class="line">   47 </span><span class="kwa"></span>                    word.clear
<span class="line">   48 </span>                <span class="kwa">else
</span><span class="line">   49 </span><span class="kwa"></span>                    <span class="slc">-- append to constructing word
</span><span class="line">   50 </span><span class="slc"></span>                    word.add_last<span class="sym">(</span>c<span class="sym">)
</span><span class="line">   51 </span><span class="sym"></span>                <span class="kwa">end
</span><span class="line">   52 </span><span class="kwa"></span>                io.read_character
<span class="line">   53 </span>            <span class="kwa">end</span><span class="sym">;
</span><span class="line">   54 </span><span class="sym">
</span><span class="line">   55 </span><span class="sym">            !!</span>outcol.with_capacity<span class="sym">(</span>dictionary.count<span class="sym">,</span> <span class="num">0</span><span class="sym">)
</span><span class="line">   56 </span><span class="sym">
</span><span class="line">   57 </span><span class="sym"></span>            <span class="kwa">from
</span><span class="line">   58 </span><span class="kwa"></span>                iter <span class="sym">:=</span> dictionary.get_new_iterator_on_keys
<span class="line">   59 </span>                iter.start
<span class="line">   60 </span>            until
<span class="line">   61 </span>                iter.is_off
<span class="line">   62 </span>            <span class="kwa">loop
</span><span class="line">   63 </span><span class="kwa"></span>                temp <span class="sym">:=</span> dictionary.at<span class="sym">(</span>iter.item<span class="sym">)</span>.to_string
<span class="line">   64 </span>                temp.precede_to_count<span class="sym">(</span><span class="str">' '</span><span class="sym">,</span> <span class="num">7</span><span class="sym">)
</span><span class="line">   65 </span><span class="sym"></span>                temp.extend<span class="sym">(</span><span class="str">' '</span><span class="sym">)
</span><span class="line">   66 </span><span class="sym"></span>                temp.append<span class="sym">(</span>iter.item<span class="sym">)
</span><span class="line">   67 </span><span class="sym">
</span><span class="line">   68 </span><span class="sym"></span>                outcol.add_first<span class="sym">(</span>temp<span class="sym">)
</span><span class="line">   69 </span><span class="sym"></span>                iter.next
<span class="line">   70 </span>            <span class="kwa">end
</span><span class="line">   71 </span><span class="kwa">
</span><span class="line">   72 </span><span class="kwa"></span>            sorter.sort<span class="sym">(</span>outcol<span class="sym">)
</span><span class="line">   73 </span><span class="sym">
</span><span class="line">   74 </span><span class="sym"></span>            <span class="kwa">from
</span><span class="line">   75 </span><span class="kwa"></span>                iter <span class="sym">:=</span> outcol.get_new_iterator
<span class="line">   76 </span>                iter.start
<span class="line">   77 </span>            until
<span class="line">   78 </span>                iter.is_off
<span class="line">   79 </span>            <span class="kwa">loop
</span><span class="line">   80 </span><span class="kwa"></span>                std_output.put_string<span class="sym">(</span>iter.item <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)
</span><span class="line">   81 </span><span class="sym"></span>                iter.next
<span class="line">   82 </span>            <span class="kwa">end
</span><span class="line">   83 </span><span class="kwa">        end
</span><span class="line">   84 </span><span class="kwa">    end
</span><span class="line">   85 </span><span class="kwa"></span>
