<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- -*- mode: eiffel -*-
</FONT></I><I><FONT COLOR="#B22222">-- $Id: wordfreq-se.code,v 1.1 2004-11-02 08:53:35 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">--
</FONT></I><I><FONT COLOR="#B22222">-- By Brent Fulgham
</FONT></I>
<B><FONT COLOR="#A020F0">class</FONT></B> WORDFREQ

<B><FONT COLOR="#A020F0">creation</FONT></B> make

<B><FONT COLOR="#A020F0">feature</FONT></B>

<B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">    make</FONT></I></B></FONT></B> <B><FONT COLOR="#A020F0">is</FONT></B>

        <B><FONT COLOR="#A020F0">local</FONT></B>
<B><FONT COLOR="#5F9EA0">	    count, highlevel: </FONT></B><B><FONT COLOR="#228B22">INTEGER</FONT></B>;
<B><FONT COLOR="#5F9EA0">	    c: </FONT></B><B><FONT COLOR="#228B22">CHARACTER</FONT></B>;
<B><FONT COLOR="#5F9EA0">	    dictionary: </FONT></B><B><FONT COLOR="#228B22">DICTIONARY</FONT></B>[<B><FONT COLOR="#228B22">INTEGER</FONT></B>, <B><FONT COLOR="#228B22">STRING</FONT></B>];
<B><FONT COLOR="#5F9EA0">	    outcol: </FONT></B><B><FONT COLOR="#228B22">ARRAY</FONT></B>[<B><FONT COLOR="#228B22">STRING</FONT></B>];
<B><FONT COLOR="#5F9EA0">	    sorter: </FONT></B><B><FONT COLOR="#228B22">REVERSE_COLLECTION_SORTER</FONT></B>[<B><FONT COLOR="#228B22">STRING</FONT></B>];
<B><FONT COLOR="#5F9EA0">	    word, temp: </FONT></B><B><FONT COLOR="#228B22">STRING</FONT></B>;
<B><FONT COLOR="#5F9EA0">	    iter: </FONT></B><B><FONT COLOR="#228B22">ITERATOR</FONT></B>[<B><FONT COLOR="#228B22">STRING</FONT></B>];
	<B><FONT COLOR="#A020F0">do</FONT></B>
	    count <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0
	    <B><FONT COLOR="#A020F0">from</FONT></B>
	        <B><FONT COLOR="#5F9EA0">!!</FONT></B>dictionary.with_capacity(60000)
		<B><FONT COLOR="#5F9EA0">!!</FONT></B>word.make(40)
	        io.read_character
	    <B><FONT COLOR="#A020F0">until</FONT></B>
	        io.end_of_input
	    <B><FONT COLOR="#A020F0">loop</FONT></B>
	        c <B><FONT COLOR="#5F9EA0">:=</FONT></B> io.last_character.to_lower
		<B><FONT COLOR="#A020F0">if</FONT></B> <B><FONT COLOR="#A020F0">not</FONT></B> c.is_letter <B><FONT COLOR="#A020F0">then</FONT></B>
		    <I><FONT COLOR="#B22222">-- insert word into dictionary
</FONT></I>		    <B><FONT COLOR="#A020F0">if</FONT></B> <B><FONT COLOR="#A020F0">not</FONT></B> word.is_empty <B><FONT COLOR="#A020F0">then</FONT></B>
		        <B><FONT COLOR="#A020F0">if</FONT></B> <B><FONT COLOR="#A020F0">not</FONT></B> dictionary.has(word) <B><FONT COLOR="#A020F0">then</FONT></B>
			    dictionary.add(1, clone(word))
			<B><FONT COLOR="#A020F0">else</FONT></B>
			    count <B><FONT COLOR="#5F9EA0">:=</FONT></B> dictionary.at(word);
			    count <B><FONT COLOR="#5F9EA0">:=</FONT></B> count + 1;
			    dictionary.put(count,word)
			    <B><FONT COLOR="#A020F0">if</FONT></B> highlevel &lt; count <B><FONT COLOR="#A020F0">then</FONT></B>
			    	highlevel <B><FONT COLOR="#5F9EA0">:=</FONT></B> count
			    <B><FONT COLOR="#A020F0">end</FONT></B>
			<B><FONT COLOR="#A020F0">end</FONT></B>
		    <B><FONT COLOR="#A020F0">end</FONT></B>
		    word.clear
		<B><FONT COLOR="#A020F0">else</FONT></B>
		    <I><FONT COLOR="#B22222">-- append to constructing word
</FONT></I>		    word.add_last(c)
		<B><FONT COLOR="#A020F0">end</FONT></B>
		io.read_character
	    <B><FONT COLOR="#A020F0">end</FONT></B>;

	    <B><FONT COLOR="#5F9EA0">!!</FONT></B>outcol.with_capacity(dictionary.count, 0)

	    <B><FONT COLOR="#A020F0">from</FONT></B>
	        iter <B><FONT COLOR="#5F9EA0">:=</FONT></B> dictionary.get_new_iterator_on_keys
		iter.start
	    <B><FONT COLOR="#A020F0">until</FONT></B>
	        iter.is_off
	    <B><FONT COLOR="#A020F0">loop</FONT></B>
	        temp <B><FONT COLOR="#5F9EA0">:=</FONT></B> dictionary.at(iter.item).to_string
		temp.precede_to_count(<B><FONT COLOR="#BC8F8F">' '</FONT></B>, 7)
		temp.extend(<B><FONT COLOR="#BC8F8F">' '</FONT></B>)
		temp.append(iter.item)

		outcol.add_first(temp)
		iter.next
	    <B><FONT COLOR="#A020F0">end</FONT></B>

	    sorter.sort(outcol)

	    <B><FONT COLOR="#A020F0">from</FONT></B>
	        iter <B><FONT COLOR="#5F9EA0">:=</FONT></B> outcol.get_new_iterator
		iter.start
	    <B><FONT COLOR="#A020F0">until</FONT></B>
	        iter.is_off
	    <B><FONT COLOR="#A020F0">loop</FONT></B>
	        std_output.put_string(iter.item + <B><FONT COLOR="#BC8F8F">&quot;%N&quot;</FONT></B>)
		iter.next
	    <B><FONT COLOR="#A020F0">end</FONT></B>
	<B><FONT COLOR="#A020F0">end</FONT></B>
    <B><FONT COLOR="#A020F0">end</FONT></B>
</pre></td></tr></table>
