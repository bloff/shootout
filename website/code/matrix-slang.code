<span class="line">    1 </span>variable size <span class="sym">=</span> <span class="num">30</span><span class="sym">;
</span><span class="line">    2 </span><span class="sym">
</span><span class="line">    3 </span><span class="sym"></span>define mkmatrix<span class="sym">(</span>rows<span class="sym">,</span> cols<span class="sym">)
</span><span class="line">    4 </span><span class="sym">{
</span><span class="line">    5 </span><span class="sym"></span>   variable mx <span class="sym">= [</span><span class="num">1</span><span class="sym">:</span>rows<span class="sym">*</span>cols<span class="sym">];
</span><span class="line">    6 </span><span class="sym"></span>   reshape <span class="sym">(</span>mx<span class="sym">, [</span>rows<span class="sym">,</span> cols<span class="sym">]);
</span><span class="line">    7 </span><span class="sym"></span>   <span class="kwa">return</span> mx<span class="sym">;
</span><span class="line">    8 </span><span class="sym">}
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym"></span>define main<span class="sym">()
</span><span class="line">   11 </span><span class="sym">{
</span><span class="line">   12 </span><span class="sym"></span>   variable iter <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span>   <span class="kwa">if</span> <span class="sym">(</span>__argc <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">)</span> iter <span class="sym">=</span> integer <span class="sym">(</span>__argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);
</span><span class="line">   14 </span><span class="sym"></span>   variable m1 <span class="sym">=</span> mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">);
</span><span class="line">   15 </span><span class="sym"></span>   variable m2 <span class="sym">=</span> mkmatrix<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">);
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym"></span>   loop <span class="sym">(</span>iter<span class="sym">)
</span><span class="line">   18 </span><span class="sym"></span>     variable mm <span class="sym">=</span> m1 <span class="dir"># m2;
</span><span class="line">   19 </span><span class="dir"></span>
<span class="line">   20 </span>   fprintf <span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;%.10g %.10g %.10g %.10g</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> mm<span class="sym">[</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">2</span><span class="sym">,</span><span class="num">3</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">3</span><span class="sym">,</span><span class="num">2</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">4</span><span class="sym">,</span><span class="num">4</span><span class="sym">]);
</span><span class="line">   21 </span><span class="sym">}
</span><span class="line">   22 </span><span class="sym">
</span><span class="line">   23 </span><span class="sym"></span>main <span class="sym">();</span>
