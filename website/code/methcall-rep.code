<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/bin/bash
# -*- mode: lisp -*-
PROG=${0%.jl}
[ \! -f $PROG.jlc -o $0 -nt $PROG.jlc ] &amp;&amp;
    rep --batch --no-rc -l compiler -f compile-batch $0
exec rep <B><FONT COLOR="#BC8F8F">&quot;$PROG.jlc&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$@&quot;</FONT></B>
!#

<I><FONT COLOR="#B22222">;;; $Id: methcall-rep.code,v 1.2 2004-11-08 08:15:17 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(define-structure main ()
  (open rep rep.system rep.data.objects)

  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">print-bool</FONT></B> b)
    (format standard-output (<B><FONT COLOR="#A020F0">if</FONT></B> b <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>)))
  
  (<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">toggle</FONT></B>
    (object nil
	    ((new obj state)
	     (put obj 'state state)
	     obj)
	    ((value tog) (get tog 'state))
	    ((activate tog)
	     (put tog 'state (not (get tog 'state)))
	     tog)))

  (<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">nth-toggle</FONT></B>
    (object toggle
	    ((new obj state max)
	     (toggle 'new obj state)
	     (put obj 'count-max max)
	     (put obj 'counter 0)
	     obj)
	    ((activate obj)
	     (<B><FONT COLOR="#A020F0">let</FONT></B> ((c (get obj 'counter)))
	       (<B><FONT COLOR="#A020F0">if</FONT></B> (= (+ c 1) (get obj 'count-max))
		   (progn
		     (put obj 'state (not (get obj 'state)))
		     (put obj 'counter 0))
		 (put obj 'counter (+ c 1)))
	       obj))))

  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((arg (get-command-line-option <B><FONT COLOR="#BC8F8F">&quot;--num&quot;</FONT></B> t))
	 (n (<B><FONT COLOR="#A020F0">if</FONT></B> arg (read-from-string arg) 1)))
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((tog (toggle 'new 'my-tog 't))
	  (val 't))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	  ((= i n))
	(setq val (toggle 'value (toggle 'activate tog))))
      (print-bool val))

    (<B><FONT COLOR="#A020F0">let</FONT></B> ((ntog (nth-toggle 'new 'my-ntog 't 3))
	  (val 't))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	  ((= i n))
	(setq val (nth-toggle 'value (nth-toggle 'activate ntog))))
      (print-bool val))))
</pre></td></tr></table>
