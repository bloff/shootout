<span class="slc">#!/usr/bin/python
</span><span class="slc">#
</span><span class="slc"># Contributed by Daniel Skiles
</span><span class="slc">#
</span><span class="kwc">import</span> sys

comps <span class="sym">= {</span><span class="str">'A'</span><span class="sym">:</span><span class="str">&quot;T&quot;</span><span class="sym">,</span> <span class="str">'C'</span><span class="sym">:</span><span class="str">&quot;G&quot;</span><span class="sym">,</span> <span class="str">'G'</span><span class="sym">:</span><span class="str">&quot;C&quot;</span><span class="sym">,</span> <span class="str">'T'</span><span class="sym">:</span><span class="str">&quot;A&quot;</span><span class="sym">,
</span>         <span class="str">'B'</span><span class="sym">:</span><span class="str">&quot;V&quot;</span><span class="sym">,</span> <span class="str">'D'</span><span class="sym">:</span><span class="str">&quot;H&quot;</span><span class="sym">,</span> <span class="str">'H'</span><span class="sym">:</span><span class="str">&quot;D&quot;</span><span class="sym">,</span> <span class="str">'K'</span><span class="sym">:</span><span class="str">&quot;M&quot;</span><span class="sym">,
</span>	 <span class="str">'M'</span><span class="sym">:</span><span class="str">&quot;K&quot;</span><span class="sym">,</span> <span class="str">'R'</span><span class="sym">:</span><span class="str">&quot;Y&quot;</span><span class="sym">,</span> <span class="str">'V'</span><span class="sym">:</span><span class="str">&quot;B&quot;</span><span class="sym">,</span> <span class="str">'Y'</span><span class="sym">:</span><span class="str">&quot;R&quot;</span><span class="sym">,
</span>	 <span class="str">'W'</span><span class="sym">:</span><span class="str">'W'</span><span class="sym">,</span> <span class="str">'N'</span><span class="sym">:</span><span class="str">'N'</span><span class="sym">,</span> <span class="str">'S'</span><span class="sym">:</span><span class="str">'S'</span><span class="sym">}

</span><span class="kwb">def</span> flip<span class="sym">(</span>line<span class="sym">):
</span>    <span class="kwb">if</span> line<span class="sym">[</span><span class="num">0</span><span class="sym">] ==</span> <span class="str">&quot;&gt;&quot;</span><span class="sym">:
</span>        <span class="kwb">return</span> line
    <span class="kwb">else</span><span class="sym">:
</span>        <span class="kwb">return</span> <span class="str">''</span><span class="sym">.</span>join<span class="sym">([</span>comps<span class="sym">[</span>x<span class="sym">]</span> <span class="kwb">for</span> x <span class="kwb">in</span> line<span class="sym">.</span>upper<span class="sym">()])

</span>f <span class="sym">=</span> file<span class="sym">(</span><span class="str">'fastaOut.txt'</span><span class="sym">,</span> <span class="str">'w'</span><span class="sym">)
</span>sys<span class="sym">.</span>stdout<span class="sym">.</span>writelines<span class="sym">([</span><span class="str">&quot;%s</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">% (</span>flip<span class="sym">(</span>x<span class="sym">.</span>strip<span class="sym">()))</span> <span class="kwb">for</span> x <span class="kwb">in</span> sys<span class="sym">.</span>stdin<span class="sym">])</span>
