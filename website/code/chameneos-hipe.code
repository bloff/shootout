<span class="slc">%%% The Great Computer Language Shootout
</span><span class="slc">%%% http://shootout.alioth.debian.org/
</span><span class="slc">%%%
</span><span class="slc">%%% contributed by Isaac Gouy (Erlang novice)
</span>
<span class="sym">-</span>module<span class="sym">(</span>chameneos<span class="sym">)</span>.
<span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">,</span>complement<span class="sym">/</span><span class="num">2</span><span class="sym">,</span>creature<span class="sym">/</span><span class="num">4</span><span class="sym">,</span>meetingPlace<span class="sym">/</span><span class="num">3</span><span class="sym">])</span>.


meetingPlace<span class="sym">(</span>N<span class="sym">,</span> Creature<span class="sym">,</span> Colour<span class="sym">) -&gt;
</span>    <span class="kwa">receive
</span>        <span class="sym">{</span>SomeCreature<span class="sym">,</span> SomeColour<span class="sym">} -&gt;
</span>            <span class="kwa">case</span> Creature <span class="kwa">of
</span>               first <span class="sym">-&gt;
</span>                  <span class="kwa">case</span> N <span class="kwa">of
</span>                     <span class="num">0</span> <span class="sym">-&gt;
</span>                        SomeCreature <span class="sym">!</span> faded<span class="sym">,
</span>                        meetingPlace<span class="sym">(</span>N<span class="sym">,</span> first<span class="sym">,</span> first<span class="sym">);
</span>                     _ <span class="sym">-&gt;
</span>                        meetingPlace<span class="sym">(</span>N<span class="num">-1</span><span class="sym">,</span> SomeCreature<span class="sym">,</span> SomeColour<span class="sym">)
</span>                  <span class="kwa">end</span><span class="sym">;

</span>               _ <span class="sym">-&gt;
</span>                  Creature <span class="sym">!</span> SomeColour<span class="sym">,
</span>                  SomeCreature <span class="sym">!</span> Colour<span class="sym">,
</span>                  meetingPlace<span class="sym">(</span>N<span class="sym">,</span> first<span class="sym">,</span> first<span class="sym">)
</span>            <span class="kwa">end</span><span class="sym">;

</span>        done <span class="sym">-&gt;
</span>            ok
    <span class="kwa">end</span>.


creature<span class="sym">(</span>Count<span class="sym">,</span> Colour<span class="sym">,</span> MeetingPlace<span class="sym">,</span> Main<span class="sym">) -&gt;
</span>   MeetingPlace <span class="sym">! {</span><span class="kwb">self</span><span class="sym">(),</span>Colour<span class="sym">},
</span>   <span class="kwa">receive
</span>      faded <span class="sym">-&gt;
</span>         Main <span class="sym">! {</span><span class="kwb">self</span><span class="sym">(),</span>Count<span class="sym">};
</span>      OtherColour <span class="sym">-&gt;
</span>         creature<span class="sym">(</span>Count<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> complement<span class="sym">(</span>Colour<span class="sym">,</span>OtherColour<span class="sym">),</span> MeetingPlace<span class="sym">,</span> Main<span class="sym">)
</span>   <span class="kwa">end</span>.


complement<span class="sym">(</span>Colour<span class="sym">,</span>OtherColour<span class="sym">) -&gt;
</span>   <span class="kwa">if
</span>      Colour <span class="sym">==</span> OtherColour <span class="sym">-&gt;</span> Colour<span class="sym">;

</span>      true <span class="sym">-&gt;
</span>         <span class="kwa">case</span> Colour <span class="kwa">of
</span>            blue <span class="sym">-&gt;
</span>               <span class="kwa">case</span> OtherColour <span class="kwa">of</span> red <span class="sym">-&gt;</span> yellow<span class="sym">;</span> yellow <span class="sym">-&gt;</span> red <span class="kwa">end</span><span class="sym">;
</span>            red <span class="sym">-&gt;
</span>               <span class="kwa">case</span> OtherColour <span class="kwa">of</span> blue <span class="sym">-&gt;</span> yellow<span class="sym">;</span> yellow <span class="sym">-&gt;</span> blue <span class="kwa">end</span><span class="sym">;
</span>            yellow <span class="sym">-&gt;
</span>               <span class="kwa">case</span> OtherColour <span class="kwa">of</span> blue <span class="sym">-&gt;</span> red<span class="sym">;</span> red <span class="sym">-&gt;</span> blue <span class="kwa">end
         end
   end</span>.


meetingCount<span class="sym">([],</span>Meetings<span class="sym">) -&gt;</span> Meetings<span class="sym">;
</span>meetingCount<span class="sym">(</span>Creatures<span class="sym">,</span>Meetings<span class="sym">) -&gt;
</span>   <span class="kwa">receive
</span>      <span class="sym">{</span>Pid<span class="sym">,</span>Count<span class="sym">} -&gt;
</span>         meetingCount<span class="sym">(</span>lists<span class="sym">:</span>delete<span class="sym">(</span>Pid<span class="sym">,</span>Creatures<span class="sym">),</span> Meetings<span class="sym">+</span>Count<span class="sym">)
</span>   <span class="kwa">end</span>.


main<span class="sym">([</span>Arg<span class="sym">]) -&gt;
</span>    N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span>Arg<span class="sym">),
</span>    MeetingPlace <span class="sym">=</span> <span class="kwb">spawn</span><span class="sym">(</span>chameneos<span class="sym">,</span> meetingPlace<span class="sym">, [</span>N<span class="sym">,</span>first<span class="sym">,</span>first<span class="sym">]),
</span>    Creatures <span class="sym">=</span> lists<span class="sym">:</span>map<span class="sym">(
</span>      <span class="kwa">fun</span><span class="sym">(</span>C<span class="sym">) -&gt;</span> <span class="kwb">spawn</span><span class="sym">(</span>chameneos<span class="sym">,</span> creature<span class="sym">, [</span><span class="num">0</span><span class="sym">,</span>C<span class="sym">,</span>MeetingPlace<span class="sym">,</span><span class="kwb">self</span><span class="sym">()])</span> <span class="kwa">end</span><span class="sym">,
      [</span>blue<span class="sym">,</span>red<span class="sym">,</span>yellow<span class="sym">]
      ),
</span>    Meetings <span class="sym">=</span> meetingCount<span class="sym">(</span>Creatures<span class="sym">,</span><span class="num">0</span><span class="sym">),
</span>    MeetingPlace <span class="sym">!</span> done<span class="sym">,
</span>    io<span class="sym">:</span>format<span class="sym">(</span><span class="str">&quot;~w~n&quot;</span><span class="sym">, [</span>Meetings<span class="sym">]),
</span>    <span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.
