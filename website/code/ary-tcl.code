<span class="slc">#!/usr/bin/tclsh</span>
<span class="slc"># $Id: ary-tcl.code,v 1.5 2005-11-06 23:11:10 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="slc"># this program is modified from:</span>
<span class="slc">#   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html</span>
<span class="slc"># Timing Trials, or, the Trials of Timing: Experiments with Scripting</span>
<span class="slc"># and User-Interface Languages&lt;/a&gt; by Brian W. Kernighan and</span>
<span class="slc"># Christopher J. Van Wyk.</span>
<span class="slc"># With suggestions by Juan Carlos Gil Montoro</span>

<span class="kwa">proc</span> main <span class="sym">{} {</span>
    <span class="kwa">global</span> argv
    <span class="kwa">set</span> n <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]</span>
    <span class="kwa">set</span> last <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$n</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">}]</span>
    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="kwb">$n</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {</span>
	<span class="kwa">set</span> x<span class="sym">(</span><span class="kwb">$i</span><span class="sym">) [</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">}]</span>
	<span class="kwa">set</span> y<span class="sym">(</span><span class="kwb">$i</span><span class="sym">)</span> <span class="num">0</span>
    <span class="sym">}</span>
    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> k <span class="num">0</span><span class="sym">} {</span><span class="kwb">$k</span> <span class="sym">&lt;</span> <span class="num">1000</span><span class="sym">} {</span><span class="kwa">incr</span> k<span class="sym">} {</span>
	<span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> j <span class="kwb">$last</span><span class="sym">} {</span><span class="kwb">$j</span> <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">} {</span><span class="kwa">incr</span> j <span class="sym">-</span><span class="num">1</span><span class="sym">} {</span>
	    <span class="kwa">incr</span> y<span class="sym">(</span><span class="kwb">$j</span><span class="sym">)</span> <span class="kwb">$x</span><span class="sym">(</span><span class="kwb">$j</span><span class="sym">)</span>
	<span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">puts</span> <span class="str">&quot;$y(0) $y($last)&quot;</span>
<span class="sym">}</span>

main
