<span class="line">    1 </span><span class="slc">// -*- mode: c++ -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// $Id: random-gpp.code,v 1.4 2004-11-13 07:42:29 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="dir">#include &lt;iostream&gt;
</span><span class="line">    6 </span><span class="dir"></span><span class="dir">#include &lt;stdlib.h&gt;
</span><span class="line">    7 </span><span class="dir"></span><span class="dir">#include &lt;math.h&gt;
</span><span class="line">    8 </span><span class="dir"></span>
<span class="line">    9 </span><span class="kwa">using namespace</span> std<span class="sym">;
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span><span class="dir">#define IM 139968
</span><span class="line">   12 </span><span class="dir"></span><span class="dir">#define IA 3877
</span><span class="line">   13 </span><span class="dir"></span><span class="dir">#define IC 29573
</span><span class="line">   14 </span><span class="dir"></span>
<span class="line">   15 </span><span class="kwc">inline</span> <span class="kwb">double</span> gen_random<span class="sym">(</span><span class="kwb">double</span> max<span class="sym">) {
</span><span class="line">   16 </span><span class="sym"></span>    <span class="kwb">static long</span> last <span class="sym">=</span> <span class="num">42</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span>    last <span class="sym">= (</span>last <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">) %</span> IM<span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span> max <span class="sym">*</span> last <span class="sym">/</span> IM <span class="sym">);
</span><span class="line">   19 </span><span class="sym">}
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym"></span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span><span class="line">   22 </span><span class="sym"></span>    <span class="kwb">int</span> N <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span><span class="line">   23 </span><span class="sym"></span>    <span class="kwb">double</span> result <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym">
</span><span class="line">   25 </span><span class="sym"></span>    <span class="kwa">while</span> <span class="sym">(</span>N<span class="sym">--) {
</span><span class="line">   26 </span><span class="sym"></span>        result <span class="sym">=</span> gen_random<span class="sym">(</span><span class="num">100.0</span><span class="sym">);
</span><span class="line">   27 </span><span class="sym">    }
</span><span class="line">   28 </span><span class="sym"></span>    cout<span class="sym">.</span>precision<span class="sym">(</span><span class="num">9</span><span class="sym">);
</span><span class="line">   29 </span><span class="sym"></span>    cout<span class="sym">.</span>setf<span class="sym">(</span>ios<span class="sym">::</span>fixed<span class="sym">);
</span><span class="line">   30 </span><span class="sym"></span>    cout <span class="sym">&lt;&lt;</span> result <span class="sym">&lt;&lt;</span> endl<span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
</span><span class="line">   32 </span><span class="sym">}
</span><span class="line">   33 </span><span class="sym"></span>
