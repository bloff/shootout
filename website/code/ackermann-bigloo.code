<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: scheme -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: ackermann-bigloo.code,v 1.2 2004-11-08 08:15:11 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://shootout.alioth.debian.org/
</FONT></I>
(module ackermann
	(main main)
	(option (<B><FONT COLOR="#A020F0">set!</FONT></B> *genericity* #f)))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> args)
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((n (<B><FONT COLOR="#A020F0">or</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (= (length args) 2) (string-&gt;number (cadr args))) 1)))
    (print-list <B><FONT COLOR="#BC8F8F">&quot;Ack(3,&quot;</FONT></B> n <B><FONT COLOR="#BC8F8F">&quot;): &quot;</FONT></B> (ack 3 n))))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">ack::int</FONT></B> m::int n::int)
  (<B><FONT COLOR="#A020F0">cond</FONT></B> ((zero? m) (+ n 1))
	((zero? n) (ack (- m 1) 1))
	(<B><FONT COLOR="#A020F0">else</FONT></B>      (ack (- m 1) (ack m (- n 1))))))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">print-list</FONT></B> . items) (for-each display items) (newline))</pre></td></tr></table>
