BUILD COMMANDS FOR: fibo.sbcl-2.sbcl

Wed Nov 10 23:25:07 PST 2004

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "fibo.sbcl-2.sbcl_compile")'
### START fibo.sbcl-2.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "fibo.sbcl-2.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END fibo.sbcl-2.sbcl_compile

; compiling file "/opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.sbcl" (written 10 NOV 2004 11:25:07 PM):
; compiling top level form: 
; compiling top level form: 
; compiling top level form: 
; recognizing DEFUN FIB

; file: /opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.sbcl
; in: DEFUN FIB
;     (FIB (- N 1))
; 
; note: *INLINE-EXPANSION-LIMIT* (200) was exceeded, probably trying to
;   inline a recursive function.

; compiling DEFUN FIB: 
; compiling top level form: 
; recognizing DEFUN MAIN

; file: /opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.sbcl
; in: DEFUN FIB
;     (FIB (- N 1))
; 
; note: *INLINE-EXPANSION-LIMIT* (200) was exceeded, probably trying to
;   inline a recursive function.

; compiling DEFUN MAIN: 
; compiling top level form: 
; compilation unit finished
;   printed 2 notes

; /opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.fasl written
; compilation finished in 0:00:03
[doing purification: roots handlers stack bindings static cleanup done]
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /opt/shootout/shootout/bench/fibo/tmp/sbcl.core:
writing 18277440 bytes from the read-only space at 0x01000000
writing 5841672 bytes from the static space at 0x05000000
writing 4096 bytes from the dynamic space at 0x09000000
done]
### START fibo.sbcl-2.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END fibo.sbcl-2.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load fibo.sbcl-2.sbcl_run %A


PROGRAM OUTPUT
==============
3524578
