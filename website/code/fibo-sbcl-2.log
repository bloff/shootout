BUILD COMMANDS FOR: fibo.sbcl-2.sbcl

Sun Mar 20 18:55:03 PST 2005

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "fibo.sbcl-2.sbcl_compile")'
### START fibo.sbcl-2.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "fibo.sbcl-2.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END fibo.sbcl-2.sbcl_compile

; compiling file "/opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.sbcl" (written 20 MAR 2005 06:55:03 PM):
; compiling (DECLAIM (OPTIMIZE # ...) ...)
; compiling (DECLAIM (INLINE FIB))
; compiling (DEFUN FIB ...)

; file: /opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.sbcl
; in: DEFUN FIB
;     (FIB (- N 1))
; 
; note: *INLINE-EXPANSION-LIMIT* (200) was exceeded, probably trying to
;   inline a recursive function.

; compiling (DEFUN MAIN ...)

; file: /opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.sbcl
; in: DEFUN FIB
;     (FIB (- N 1))
; 
; note: *INLINE-EXPANSION-LIMIT* (200) was exceeded, probably trying to
;   inline a recursive function.
; 
; compilation unit finished
;   printed 2 notes

; /opt/shootout/shootout/bench/fibo/tmp/fibo.sbcl-2.fasl written
; compilation finished in 0:00:03
[doing purification: roots handlers stack bindings staticControl stack guard page temporarily disabled: proceed with caution
unhandled SB-KERNEL::CONTROL-STACK-EXHAUSTED in thread 19557:
  Control stack exhausted (no more space for function call frames).  This is probably due to heavily nested or infinitely recursive function calls, or a tail call that SBCL cannot or has not optimized away.

0: ("hairy arg processor for top level local call SB!DEBUG:BACKTRACE"
    128
    #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDERR* {5057FC9}>)
1: (SB-DEBUG::DEBUGGER-DISABLED-HOOK
    2
    #<SB-KERNEL::CONTROL-STACK-EXHAUSTED {99BD3F1}>
    #<unavailable argument>)[:EXTERNAL]
2: (INVOKE-DEBUGGER 1 #<SB-KERNEL::CONTROL-STACK-EXHAUSTED {99BD3F1}>)[:EXTERNAL]
3: (ERROR 1 SB-KERNEL::CONTROL-STACK-EXHAUSTED)[:EXTERNAL]
4: (SB-KERNEL::CONTROL-STACK-EXHAUSTED-ERROR 0)[:EXTERNAL]
5: ("foreign function: call_into_lisp")
6: ("foreign function: post_signal_tramp")
7: ("foreign function: #x8053410")
8: ("foreign function: #x8053E73")
9: ("foreign function: #x8053423")
10: ("foreign function: #x8053E73")
11: ("foreign function: #x8053423")
12: ("foreign function: #x8053E73")
13: ("foreign function: #x8053423")
14: ("foreign function: #x8053E73")
15: ("foreign function: #x8053423")
16: ("foreign function: #x8053E73")
17: ("foreign function: #x8053423")
18: ("foreign function: #x8053E73")
19: ("foreign function: #x8053423")
20: ("foreign function: #x8053E73")
21: ("foreign function: #x8053423")
22: ("foreign function: #x8053E73")
23: ("foreign function: #x8053423")
24: ("foreign function: #x8053E73")
25: ("foreign function: #x8053423")
26: ("foreign function: #x8053E73")
27: ("foreign function: #x8053423")
28: ("foreign function: #x8053E73")
29: ("foreign function: #x8053423")
30: ("foreign function: #x8053E73")
31: ("foreign function: #x8053423")
32: ("foreign function: #x8053E73")
33: ("foreign function: #x8053423")
34: ("foreign function: #x8053E73")
35: ("foreign function: #x8053423")
36: ("foreign function: #x8053E73")
37: ("foreign function: #x8053423")
38: ("foreign function: #x8053E73")
39: ("foreign function: #x8053423")
40: ("foreign function: #x8053E73")
41: ("foreign function: #x8053423")
42: ("foreign function: #x8053E73")
43: ("foreign function: #x8053423")
44: ("foreign function: #x8053E73")
45: ("foreign function: #x8053423")
46: ("foreign function: #x8053E73")
47: ("foreign function: #x8053423")
48: ("foreign function: #x8053E73")
49: ("foreign function: #x8053423")
50: ("foreign function: #x8053E73")
51: ("foreign function: #x8053423")
52: ("foreign function: #x8053E73")
53: ("foreign function: #x8053423")
54: ("foreign function: #x8053E73")
55: ("foreign function: #x8053423")
56: ("foreign function: #x8053E73")
57: ("foreign function: #x8053423")
58: ("foreign function: #x8053E73")
59: ("foreign function: #x8053423")
60: ("foreign function: #x8053E73")
61: ("foreign function: #x8053423")
62: ("foreign function: #x8053E73")
63: ("foreign function: #x8053423")
64: ("foreign function: #x8053E73")
65: ("foreign function: #x8053423")
66: ("foreign function: #x8053E73")
67: ("foreign function: #x8053423")
68: ("foreign function: #x8053E73")
69: ("foreign function: #x8053423")
70: ("foreign function: #x8053E73")
71: ("foreign function: #x8053423")
72: ("foreign function: #x8053E73")
73: ("foreign function: #x8053423")
74: ("foreign function: #x8053E73")
75: ("foreign function: #x8053423")
76: ("foreign function: #x8053E73")
77: ("foreign function: #x8053423")
78: ("foreign function: #x8053E73")
79: ("foreign function: #x8053423")
80: ("foreign function: #x8053E73")
81: ("foreign function: #x8053423")
82: ("foreign function: #x8053E73")
83: ("foreign function: #x8053423")
84: ("foreign function: #x8053E73")
85: ("foreign function: #x8053423")
86: ("foreign function: #x8053E73")
87: ("foreign function: #x8053423")
88: ("foreign function: #x8053E73")
89: ("foreign function: #x8053423")
90: ("foreign function: #x8053E73")
91: ("foreign function: #x8053423")
92: ("foreign function: #x8053E73")
93: ("foreign function: #x8053423")
94: ("foreign function: #x8053E73")
95: ("foreign function: #x8053423")
96: ("foreign function: #x8053E73")
97: ("foreign function: #x8053423")
98: ("foreign function: #x8053E73")
99: ("foreign function: #x8053423")
100: ("foreign function: #x8053E73")
101: ("foreign function: #x8053423")
102: ("foreign function: #x80535B0")
103: ("foreign function: #x8053E73")
104: ("foreign function: #x8053423")
105: ("foreign function: #x8053E73")
106: ("foreign function: #x8053423")
107: ("foreign function: #x80535B0")
108: ("foreign function: #x8053E73")
109: ("foreign function: #x8053423")
110: ("foreign function: #x8053E73")
111: ("foreign function: #x8053423")
112: ("foreign function: #x8053E73")
113: ("foreign function: #x8053423")
114: ("foreign function: #x8053E73")
115: ("foreign function: #x8053423")
116: ("foreign function: #x8053E73")
117: ("foreign function: #x8053423")
118: ("foreign function: #x8053E73")
119: ("foreign function: #x8053423")
120: ("foreign function: #x8053E73")
121: ("foreign function: #x8053423")
122: ("foreign function: #x8053E73")
123: ("foreign function: #x8053423")
124: ("foreign function: #x8053E73")
125: ("foreign function: #x8053423")
126: ("foreign function: #x8053E73")
127: ("foreign function: #x8053423")

unhandled condition in --disable-debugger mode, quitting
### START fibo.sbcl-2.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END fibo.sbcl-2.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load fibo.sbcl-2.sbcl_run %A


PROGRAM OUTPUT
==============
2178309
