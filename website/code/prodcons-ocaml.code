<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(*
 * $Id: prodcons-ocaml.code,v 1.2 2004-11-08 08:15:18 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 *
 * ocamlopt -thread unix.cmxa threads.cmxa prodcons.ml -o prodcons
 *  or
 * ocamlc -thread unix.cma threads.cma prodcons.ml -o prodcons
 *)</FONT></I>

<B><FONT COLOR="#A020F0">let</FONT></B> count <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0
<B><FONT COLOR="#A020F0">let</FONT></B> data <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0
<B><FONT COLOR="#A020F0">let</FONT></B> produced <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0
<B><FONT COLOR="#A020F0">let</FONT></B> consumed <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0
<B><FONT COLOR="#A020F0">let</FONT></B> m <B><FONT COLOR="#5F9EA0">=</FONT></B> Mutex.create ()
<B><FONT COLOR="#A020F0">let</FONT></B> c <B><FONT COLOR="#5F9EA0">=</FONT></B> Condition.create ()

<B><FONT COLOR="#A020F0">let</FONT></B> producer n <B><FONT COLOR="#5F9EA0">=</FONT></B>
  for i <B><FONT COLOR="#5F9EA0">=</FONT></B> 1 to n <B><FONT COLOR="#A020F0">do</FONT></B>
    Mutex.lock m;
    <B><FONT COLOR="#A020F0">while</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>count <B><FONT COLOR="#5F9EA0">=</FONT></B> 1 <B><FONT COLOR="#A020F0">do</FONT></B> Condition.wait c m done;
    data <B><FONT COLOR="#5F9EA0">:=</FONT></B> i;
    incr count;
    Condition.signal c;
    Mutex.unlock m;
    incr produced
  done

<B><FONT COLOR="#A020F0">let</FONT></B> consumer n <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0 <B><FONT COLOR="#A020F0">in</FONT></B>
  <B><FONT COLOR="#A020F0">while</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>i <B><FONT COLOR="#5F9EA0">&lt;&gt;</FONT></B> n <B><FONT COLOR="#A020F0">do</FONT></B>
    Mutex.lock m;
    <B><FONT COLOR="#A020F0">while</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>count <B><FONT COLOR="#5F9EA0">=</FONT></B> 0 <B><FONT COLOR="#A020F0">do</FONT></B> Condition.wait c m done;
    i <B><FONT COLOR="#5F9EA0">:=</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>data;
    decr count;
    Condition.signal c;
    Mutex.unlock m;
    incr consumed
  done

<B><FONT COLOR="#A020F0">let</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> Array.length Sys.argv <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 1 <B><FONT COLOR="#A020F0">then</FONT></B> int_of_string Sys.argv.(1) <B><FONT COLOR="#A020F0">else</FONT></B> 1
<B><FONT COLOR="#A020F0">let</FONT></B> p <B><FONT COLOR="#5F9EA0">=</FONT></B> Thread.create producer n <B><FONT COLOR="#A020F0">and</FONT></B> c <B><FONT COLOR="#5F9EA0">=</FONT></B> Thread.create consumer n;;
Thread.join p; Thread.join c;
Printf.printf <B><FONT COLOR="#BC8F8F">&quot;%d %d\n&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>produced <B><FONT COLOR="#5F9EA0">!</FONT></B>consumed</pre></td></tr></table>
