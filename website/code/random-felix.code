<span class="line">    1 </span><span class="slc">//
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// Contributed by John Skaller
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">//
</span><span class="line">    4 </span><span class="slc"></span><span class="kwa">include</span> <span class="str">&quot;std&quot;</span><span class="sym">;
</span><span class="line">    5 </span><span class="sym"></span>n <span class="sym">:=</span> atoi<span class="sym">(</span>System<span class="sym">::</span>argv <span class="num">1</span><span class="sym">);
</span><span class="line">    6 </span><span class="sym"></span><span class="slc">//adapted from Ocaml solution
</span><span class="line">    7 </span><span class="slc"></span>im <span class="sym">:=</span> <span class="num">139968</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym"></span>ia <span class="sym">:=</span> <span class="num">3877</span><span class="sym">;
</span><span class="line">    9 </span><span class="sym"></span>ic <span class="sym">:=</span> <span class="num">29573</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym"></span>first_last <span class="sym">:=</span> <span class="num">42</span><span class="sym">;
</span><span class="line">   11 </span><span class="sym">
</span><span class="line">   12 </span><span class="sym">
</span><span class="line">   13 </span><span class="sym"></span><span class="kwa">fun</span> gen_random <span class="sym">(</span>max<span class="sym">:</span><span class="kwb">double</span><span class="sym">,</span> last<span class="sym">:</span><span class="kwb">int</span><span class="sym">,</span> i<span class="sym">:</span><span class="kwb">int</span><span class="sym">):</span><span class="kwb">double</span> <span class="sym">=&gt;
</span><span class="line">   14 </span><span class="sym"></span>  <span class="kwa">let</span> ?new_last <span class="sym">= (</span>last <span class="sym">*</span> ia <span class="sym">+</span> ic<span class="sym">) %</span> im <span class="kwa">in
</span><span class="line">   15 </span><span class="kwa">  if</span> i <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span> gen_random <span class="sym">(</span>max<span class="sym">,</span> new_last<span class="sym">, (</span>i <span class="num">- 1</span><span class="sym">))
</span><span class="line">   16 </span><span class="sym"></span>  <span class="kwa">else</span> max <span class="sym">*</span> double_of new_last <span class="sym">/</span> double_of im
<span class="line">   17 </span>  <span class="kwa">endif
</span><span class="line">   18 </span><span class="kwa"></span><span class="sym">;
</span><span class="line">   19 </span><span class="sym">
</span><span class="line">   20 </span><span class="sym"></span><span class="kwa">print</span> <span class="sym">(</span>gen_random <span class="sym">(</span><span class="num">100.0</span><span class="sym">,</span> first_last<span class="sym">,</span> n<span class="sym">));</span> <span class="kwa">endl</span><span class="sym">;
</span><span class="line">   21 </span><span class="sym"></span>
