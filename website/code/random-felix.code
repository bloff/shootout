<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">//
</FONT></I><I><FONT COLOR="#B22222">// Contributed by John Skaller
</FONT></I><I><FONT COLOR="#B22222">//
</FONT></I>include <B><FONT COLOR="#BC8F8F">&quot;std&quot;</FONT></B>;
n := atoi(System::argv 1);
<I><FONT COLOR="#B22222">//adapted from Ocaml solution
</FONT></I>im := 139968;
ia := 3877;
ic := 29573;
first_last := 42;


fun <B><FONT COLOR="#0000FF">gen_random</FONT></B> (max:<B><FONT COLOR="#228B22">double</FONT></B>, last:<B><FONT COLOR="#228B22">int</FONT></B>, i:<B><FONT COLOR="#228B22">int</FONT></B>):<B><FONT COLOR="#228B22">double</FONT></B> =&gt;
  let ?new_last = (last * ia + ic) % im in
  <B><FONT COLOR="#A020F0">if</FONT></B> i &gt; 1 then gen_random (max, new_last, (i - 1))
  <B><FONT COLOR="#A020F0">else</FONT></B> max * double_of new_last / double_of im
  endif
;

<B><FONT COLOR="#0000FF">print</FONT></B> (gen_random (100.0, first_last, n)); endl;
</pre></td></tr></table>
