<span class="com">(* wc.sml</span>
<span class="com"> *</span>
<span class="com"> *   Word count. (Optimized for machine with few registers.)</span>
<span class="com"> *</span>
<span class="com"> * Copyright (c) 2004 by The Fellowship of SML/NJ</span>
<span class="com"> *</span>
<span class="com"> * Author: Matthias Blume (blume&#64;tti-c.org)</span>
<span class="com"> *)</span>
<span class="kwa">structure</span> Test <span class="sym">:</span> <span class="kwa">sig</span>
    <span class="kwa">val</span> main <span class="sym">: (</span><span class="kwb">string</span> <span class="sym">*</span> <span class="kwb">string</span> list<span class="sym">) -&gt;</span> OS.Process.status
<span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct</span>
    <span class="kwa">val</span> max <span class="sym">=</span> <span class="num">4096</span>
    <span class="kwa">val</span> buf <span class="sym">=</span> Word8Array.array <span class="sym">(</span>max<span class="sym">,</span> <span class="num">0</span>w0<span class="sym">)</span>
    <span class="kwa">val</span> sub <span class="sym">=</span> Byte.byteToChar <span class="kwa">o</span> Unsafe.Word8Array.sub
    <span class="kwa">fun</span> x <span class="sym">+</span> y <span class="sym">=</span> <span class="kwa">Word</span>.toIntX <span class="sym">(</span><span class="kwa">Word</span>.<span class="sym">+ (</span><span class="kwa">Word</span>.fromInt x<span class="sym">,</span> <span class="kwa">Word</span>.fromInt y<span class="sym">))</span>

    <span class="kwa">val</span> <span class="sym">(</span>c<span class="sym">,</span> l<span class="sym">) = (</span>ref <span class="num">0</span><span class="sym">,</span> ref <span class="num">0</span><span class="sym">)</span>

    <span class="kwa">fun</span> newblock <span class="sym">(</span>w<span class="sym">,</span> ow<span class="sym">) =</span>
	<span class="kwa">let val</span> n <span class="sym">=</span> Posix.IO.readArr <span class="sym">(</span>Posix.FileSys.stdin<span class="sym">,</span>
				      Word8ArraySlice.full buf<span class="sym">)</span>
	<span class="kwa">in if</span> n <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span> w <span class="kwa">else</span> <span class="sym">(</span>c <span class="sym">:= (</span>n <span class="sym">+ !</span>c<span class="sym">);</span> scan <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> n<span class="sym">,</span> w<span class="sym">,</span> ow<span class="sym">))</span>
	<span class="kwa">end</span>

    <span class="kwa">and</span> scan <span class="sym">(</span>i<span class="sym">,</span> n<span class="sym">,</span> w<span class="sym">,</span> ow<span class="sym">) =</span>
	<span class="kwa">if</span> i <span class="sym">&gt;=</span> n <span class="kwa">then</span> newblock <span class="sym">(</span>w<span class="sym">,</span> ow<span class="sym">)</span>
	<span class="kwa">else let val</span> i' <span class="sym">=</span> i <span class="sym">+</span> <span class="num">1</span>
	     <span class="kwa">in case</span> sub <span class="sym">(</span>buf<span class="sym">,</span> i<span class="sym">)</span> <span class="kwa">of</span>
		    #<span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">=&gt; (</span>l <span class="sym">:= (</span><span class="num">1</span> <span class="sym">+ !</span>l<span class="sym">);</span> scan <span class="sym">(</span>i'<span class="sym">,</span> n<span class="sym">,</span> w<span class="sym">,</span> <span class="num">1</span><span class="sym">))</span>
		  <span class="sym">| (</span>#<span class="str">&quot; &quot;</span> <span class="sym">|</span> #<span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span> <span class="sym">|</span> #<span class="str">&quot;</span><span class="esc">\r</span><span class="str">&quot;</span><span class="sym">) =&gt;</span> scan <span class="sym">(</span>i'<span class="sym">,</span> n<span class="sym">,</span> w<span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
		  <span class="sym">|</span> _ <span class="sym">=&gt;</span> scan <span class="sym">(</span>i'<span class="sym">,</span> n<span class="sym">,</span> w <span class="sym">+</span> ow<span class="sym">,</span> <span class="num">0</span><span class="sym">)</span>
	     <span class="kwa">end</span>

    <span class="kwa">fun</span> main _ <span class="sym">=</span>
	<span class="kwa">let val</span> w <span class="sym">=</span> newblock <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
	    <span class="kwa">open</span> FormatComb
	<span class="kwa">in</span> print <span class="sym">(</span>format <span class="sym">(</span><span class="kwb">int</span> <span class="kwa">o</span> sp <span class="num">1</span> <span class="kwa">o</span> <span class="kwb">int</span> <span class="kwa">o</span> sp <span class="num">1</span> <span class="kwa">o</span> <span class="kwb">int</span> <span class="kwa">o</span> nl<span class="sym">) (!</span>l<span class="sym">)</span> w <span class="sym">(!</span>c<span class="sym">));</span>
	   OS.Process.success
	<span class="kwa">end</span>
<span class="kwa">end</span>
