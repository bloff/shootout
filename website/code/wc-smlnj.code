<span class="line">    1 </span><span class="com">(* -*- mode: sml -*-
</span><span class="line">    2 </span><span class="com"> * $Id: wc-smlnj.code,v 1.3 2004-11-11 07:14:20 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * from Stephen Weeks
</span><span class="line">    5 </span><span class="com"> *)</span>
<span class="line">    6 </span><span class="com">(* Translated from wc.ocaml. *)</span>
<span class="line">    7 </span>
<span class="line">    8 </span><span class="kwa">structure</span> Test <span class="sym">:</span> <span class="kwa">sig
</span><span class="line">    9 </span><span class="kwa">    val</span> main <span class="sym">: (</span><span class="kwb">string</span> <span class="sym">*</span> <span class="kwb">string</span> list<span class="sym">) -&gt;</span> OS.Process.status
<span class="line">   10 </span><span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct
</span><span class="line">   11 </span><span class="kwa">
</span><span class="line">   12 </span><span class="kwa">fun</span> incr r <span class="sym">=</span> r <span class="sym">:= !</span>r <span class="sym">+</span> <span class="num">1
</span><span class="line">   13 </span><span class="num">
</span><span class="line">   14 </span><span class="num"></span><span class="kwa">val</span> nl <span class="sym">=</span> ref <span class="num">0
</span><span class="line">   15 </span><span class="num"></span><span class="kwa">val</span> nw <span class="sym">=</span> ref <span class="num">0
</span><span class="line">   16 </span><span class="num"></span><span class="kwa">val</span> nc <span class="sym">=</span> ref <span class="num">0
</span><span class="line">   17 </span><span class="num"></span><span class="kwa">val</span> max <span class="sym">=</span> <span class="num">4096
</span><span class="line">   18 </span><span class="num"></span><span class="kwa">val</span> buf <span class="sym">=</span> Word8Array.array <span class="sym">(</span>max<span class="sym">,</span> <span class="num">0w0</span><span class="sym">)
</span><span class="line">   19 </span><span class="sym"></span><span class="kwa">val</span> sub <span class="sym">=</span> Word8Array.sub
<span class="line">   20 </span>
<span class="line">   21 </span><span class="kwa">fun</span> readblock scanfun <span class="sym">=
</span><span class="line">   22 </span><span class="sym"></span>   <span class="kwa">let
</span><span class="line">   23 </span><span class="kwa">      val</span> nread <span class="sym">=</span> Posix.IO.readArr <span class="sym">(</span>Posix.FileSys.stdin<span class="sym">,
</span><span class="line">   24 </span><span class="sym"></span>                                    Word8ArraySlice.slice<span class="sym">(</span>buf<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> NONE<span class="sym">))
</span><span class="line">   25 </span><span class="sym"></span>   <span class="kwa">in
</span><span class="line">   26 </span><span class="kwa">      if</span> nread <span class="sym">=</span> <span class="num">0
</span><span class="line">   27 </span><span class="num"></span>         <span class="kwa">then</span> <span class="sym">()
</span><span class="line">   28 </span><span class="sym"></span>      <span class="kwa">else</span> <span class="sym">(</span>nc <span class="sym">:= !</span>nc <span class="sym">+</span> nread<span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span>            scanfun <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> nread<span class="sym">))
</span><span class="line">   30 </span><span class="sym"></span>   <span class="kwa">end
</span><span class="line">   31 </span><span class="kwa">
</span><span class="line">   32 </span><span class="kwa">val</span> c2b <span class="sym">=</span> Byte.charToByte
<span class="line">   33 </span><span class="kwa">val</span> newline <span class="sym">=</span> c2b #<span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>
<span class="line">   34 </span><span class="kwa">val</span> space <span class="sym">=</span> c2b #<span class="str">&quot; &quot;</span>
<span class="line">   35 </span><span class="kwa">val</span> tab <span class="sym">=</span> c2b #<span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span>
<span class="line">   36 </span>
<span class="line">   37 </span><span class="kwa">fun</span> scan_out_of_word <span class="sym">(</span>i<span class="sym">,</span> n<span class="sym">) =
</span><span class="line">   38 </span><span class="sym"></span>   <span class="kwa">if</span> i <span class="sym">&lt;</span> n
<span class="line">   39 </span>      <span class="kwa">then
</span><span class="line">   40 </span><span class="kwa">         let
</span><span class="line">   41 </span><span class="kwa">            val</span> c <span class="sym">=</span> sub <span class="sym">(</span>buf<span class="sym">,</span> i<span class="sym">)
</span><span class="line">   42 </span><span class="sym"></span>         <span class="kwa">in
</span><span class="line">   43 </span><span class="kwa">            if</span> c <span class="sym">=</span> newline
<span class="line">   44 </span>               <span class="kwa">then</span> <span class="sym">(</span>incr nl<span class="sym">;</span> scan_out_of_word <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> n<span class="sym">))
</span><span class="line">   45 </span><span class="sym"></span>            <span class="kwa">else if</span> c <span class="sym">=</span> space <span class="kwa">orelse</span> c <span class="sym">=</span> tab
<span class="line">   46 </span>                    <span class="kwa">then</span> scan_out_of_word <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> n<span class="sym">)
</span><span class="line">   47 </span><span class="sym"></span>                 <span class="kwa">else</span> <span class="sym">(</span>incr nw<span class="sym">;</span> scan_in_word <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> n<span class="sym">))
</span><span class="line">   48 </span><span class="sym"></span>         <span class="kwa">end
</span><span class="line">   49 </span><span class="kwa">   else</span> readblock scan_out_of_word
<span class="line">   50 </span>
<span class="line">   51 </span><span class="kwa">and</span> scan_in_word <span class="sym">(</span>i<span class="sym">,</span> n<span class="sym">) =
</span><span class="line">   52 </span><span class="sym"></span>  <span class="kwa">if</span> i <span class="sym">&lt;</span> n <span class="kwa">then
</span><span class="line">   53 </span><span class="kwa">     let
</span><span class="line">   54 </span><span class="kwa">        val</span> c <span class="sym">=</span> sub <span class="sym">(</span>buf<span class="sym">,</span> i<span class="sym">)
</span><span class="line">   55 </span><span class="sym"></span>     <span class="kwa">in
</span><span class="line">   56 </span><span class="kwa">        if</span> c <span class="sym">=</span> newline
<span class="line">   57 </span>           <span class="kwa">then</span> <span class="sym">(</span>incr nl<span class="sym">;</span> scan_out_of_word <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> n<span class="sym">))
</span><span class="line">   58 </span><span class="sym"></span>        <span class="kwa">else if</span> c <span class="sym">=</span> space <span class="kwa">orelse</span> c <span class="sym">=</span> tab
<span class="line">   59 </span>                <span class="kwa">then</span> scan_out_of_word <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> n<span class="sym">)
</span><span class="line">   60 </span><span class="sym"></span>             <span class="kwa">else</span> scan_in_word <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> n<span class="sym">)
</span><span class="line">   61 </span><span class="sym"></span>     <span class="kwa">end
</span><span class="line">   62 </span><span class="kwa">  else</span> readblock scan_in_word
<span class="line">   63 </span>
<span class="line">   64 </span><span class="kwa">fun</span> printl <span class="sym">[] =</span> print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">|</span> printl<span class="sym">(</span>h<span class="sym">::</span>t<span class="sym">) = (</span> print h <span class="sym">;</span> printl t <span class="sym">)
</span><span class="line">   65 </span><span class="sym">
</span><span class="line">   66 </span><span class="sym"></span><span class="kwa">fun</span> main <span class="sym">(</span>name<span class="sym">,</span> args<span class="sym">) =
</span><span class="line">   67 </span><span class="sym"></span>  <span class="kwa">let
</span><span class="line">   68 </span><span class="kwa">    val</span> _ <span class="sym">=
</span><span class="line">   69 </span><span class="sym">        (</span>scan_out_of_word <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">);
</span><span class="line">   70 </span><span class="sym"></span>        printl <span class="sym">[</span><span class="kwa">Int</span>.toString <span class="sym">(!</span>nl<span class="sym">),</span> <span class="str">&quot; &quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString <span class="sym">(!</span>nw<span class="sym">),</span> <span class="str">&quot; &quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString <span class="sym">(!</span>nc<span class="sym">)])
</span><span class="line">   71 </span><span class="sym"></span>  <span class="kwa">in
</span><span class="line">   72 </span><span class="kwa"></span>    OS.Process.success
<span class="line">   73 </span>  <span class="kwa">end
</span><span class="line">   74 </span><span class="kwa">end
</span><span class="line">   75 </span><span class="kwa">
</span><span class="line">   76 </span><span class="kwa">val</span> _ <span class="sym">=</span> SMLofNJ.exportFn<span class="sym">(</span><span class="str">&quot;wc&quot;</span><span class="sym">,</span> Test.main<span class="sym">);</span>
