<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/<B><FONT COLOR="#5F9EA0">usr/bin/pike</FONT></B>
<I><FONT COLOR="#B22222">// -*- mode: pike -*-
</FONT></I><I><FONT COLOR="#B22222">// $Id: lists-pike.code,v 1.2 2004-11-08 08:15:15 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">// http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222">// from: Per Hedbor
</FONT></I>

#<B><FONT COLOR="#5F9EA0">define</FONT></B> <FONT COLOR="#B8860B">SIZE</FONT> 10000

#<B><FONT COLOR="#5F9EA0">define</FONT></B> <B><FONT COLOR="#0000FF">TB</FONT></B>(X) werror( <B><FONT COLOR="#BC8F8F">&quot;%s: %.2f\n&quot;</FONT></B>, X, gauge {
#<B><FONT COLOR="#5F9EA0">define</FONT></B> <B><FONT COLOR="#0000FF">TE</FONT></B>()  })

<B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#0000FF">test_lists</FONT></B>()
{
    mixed Li1, Li2, Li3;
    <I><FONT COLOR="#B22222">// create a list of integers from 1 to SIZE.
</FONT></I>    Li1 = (string)indices(allocate(SIZE+1))[1..];
    <I><FONT COLOR="#B22222">// copy the list to Li2.
</FONT></I>    Li2 = copy_value( Li1 );
    <I><FONT COLOR="#B22222">// remove each element from left side of Li2 and append to
</FONT></I>    <I><FONT COLOR="#B22222">// the right side of Li3 (preserving order)
</FONT></I>  
    Li3 = <B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B>;

    <B><FONT COLOR="#A020F0">while</FONT></B>( <B><FONT COLOR="#A020F0">sizeof</FONT></B>( Li2 ) )
    {
	Li3 += Li2[..0];
	Li2 = Li2[1..];
    }
    <I><FONT COLOR="#B22222">// Li2 is now empty.
</FONT></I>    <I><FONT COLOR="#B22222">// Remove each element from right side of Li3 and append to right
</FONT></I>    <I><FONT COLOR="#B22222">// side of Li2
</FONT></I>    <B><FONT COLOR="#A020F0">while</FONT></B>( <B><FONT COLOR="#A020F0">sizeof</FONT></B>( Li3 ) )
    {
	Li2 += Li3[<B><FONT COLOR="#A020F0">sizeof</FONT></B>( Li3 )-1..];
	Li3 = Li3[..<B><FONT COLOR="#A020F0">sizeof</FONT></B>( Li3 )-2];
    }
    <I><FONT COLOR="#B22222">// Li2 is now reversed, and Li3 empty.
</FONT></I>    <I><FONT COLOR="#B22222">// Reverse Li1 in place.
</FONT></I>    Li1 = reverse( Li1 );
    <B><FONT COLOR="#A020F0">if</FONT></B>( Li1[0] != SIZE )
	<B><FONT COLOR="#A020F0">return</FONT></B> 0;
    <I><FONT COLOR="#B22222">// compare Li1 and Li2 for equality, and return the length of the list.
</FONT></I>    <B><FONT COLOR="#A020F0">if</FONT></B>( equal( Li1, Li2 ) )
	<B><FONT COLOR="#A020F0">return</FONT></B> <B><FONT COLOR="#A020F0">sizeof</FONT></B>( Li1 );
    <B><FONT COLOR="#A020F0">return</FONT></B> 0;
}

<B><FONT COLOR="#228B22">void</FONT></B> <B><FONT COLOR="#0000FF">main</FONT></B>(<B><FONT COLOR="#228B22">int</FONT></B> argc, array argv)
{
    <B><FONT COLOR="#228B22">int</FONT></B> result, num = (<B><FONT COLOR="#228B22">int</FONT></B>)argv[-1];
    <B><FONT COLOR="#A020F0">if</FONT></B>( num &lt;=  0 )
	num = 1;
    <B><FONT COLOR="#A020F0">while</FONT></B>( num-- )
	result = test_lists();
    write(<B><FONT COLOR="#BC8F8F">&quot;%d\n&quot;</FONT></B>, result );
}</pre></td></tr></table>
