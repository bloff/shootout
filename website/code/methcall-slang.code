variable Toggle <span class="sym">=</span> <span class="kwb">struct</span> <span class="sym">{</span> state<span class="sym">,</span> value<span class="sym">,</span> activate <span class="sym">};</span>

define <span class="kwd">toggle_value</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">)</span>
<span class="sym">{</span>
   <span class="kwa">return this</span><span class="sym">.</span>state<span class="sym">;</span>
<span class="sym">}</span>

define <span class="kwd">toggle_activate</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">)</span>
<span class="sym">{</span>
   <span class="kwa">this</span><span class="sym">.</span>state <span class="sym">=</span> <span class="kwa">not this</span><span class="sym">.</span>state<span class="sym">;</span>
   <span class="kwa">return this</span><span class="sym">;</span>
<span class="sym">}</span>

define <span class="kwd">init_Toggle</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">,</span> start_state<span class="sym">)</span>
<span class="sym">{</span>
   <span class="kwa">this</span><span class="sym">.</span>state <span class="sym">=</span> start_state<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>value <span class="sym">= &amp;</span>toggle_value<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>activate <span class="sym">= &amp;</span>toggle_activate<span class="sym">;</span>
   <span class="kwa">return this</span><span class="sym">;</span>
<span class="sym">}</span>
define <span class="kwd">new_Toggle</span> <span class="sym">(</span>start_state<span class="sym">)</span>
<span class="sym">{</span>
   <span class="kwa">return</span> <span class="kwd">init_Toggle</span> <span class="sym">(</span>&#64;Toggle<span class="sym">,</span> start_state<span class="sym">);</span>
<span class="sym">}</span>

define <span class="kwd">NthToggle_activate</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">)</span>
<span class="sym">{</span>
   variable counter <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>counter<span class="sym">;</span>
   counter<span class="sym">++;</span>
   <span class="kwa">if</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">.</span>count_max <span class="sym">&lt;=</span> counter<span class="sym">)</span>
     <span class="sym">{</span>
	<span class="kwa">this</span><span class="sym">.</span>state <span class="sym">=</span> <span class="kwa">not</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">.</span>state<span class="sym">);</span>
	counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
    <span class="sym">}</span>
   <span class="kwa">this</span><span class="sym">.</span>counter <span class="sym">=</span> counter<span class="sym">;</span>
   <span class="kwa">return this</span><span class="sym">;</span>
<span class="sym">}</span>

define <span class="kwd">init_NthToggle</span> <span class="sym">(</span><span class="kwa">this</span><span class="sym">,</span> max_count<span class="sym">)</span>
<span class="sym">{</span>
   <span class="kwa">this</span><span class="sym">.</span>count_max <span class="sym">=</span> max_count<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>activate <span class="sym">= &amp;</span>NthToggle_activate<span class="sym">;</span>
   <span class="kwa">return this</span><span class="sym">;</span>
<span class="sym">}</span>

define <span class="kwd">new_NthToggle</span> <span class="sym">(</span>start_state<span class="sym">,</span> max_count<span class="sym">)</span>
<span class="sym">{</span>
   variable <span class="kwa">this</span> <span class="sym">=</span> &#64;Struct_Type
     <span class="sym">([</span><span class="kwd">get_struct_field_names</span><span class="sym">(</span>Toggle<span class="sym">),</span> <span class="str">&quot;count_max&quot;</span><span class="sym">,</span> <span class="str">&quot;counter&quot;</span><span class="sym">]);</span>
   <span class="kwa">this</span> <span class="sym">=</span> <span class="kwd">init_Toggle</span><span class="sym">(</span><span class="kwa">this</span><span class="sym">,</span> start_state<span class="sym">);</span>
   <span class="kwa">return</span> <span class="kwd">init_NthToggle</span><span class="sym">(</span><span class="kwa">this</span><span class="sym">,</span> max_count<span class="sym">);</span>
<span class="sym">}</span>

define <span class="kwd">do_toggle</span> <span class="sym">(</span>tog<span class="sym">,</span> n<span class="sym">)</span>
<span class="sym">{</span>
   variable val<span class="sym">;</span>
   <span class="kwd">loop</span> <span class="sym">(</span>n<span class="sym">)</span>
     val <span class="sym">=</span> &#64;<span class="sym">((</span>&#64;tog<span class="sym">.</span>activate<span class="sym">)(</span>tog<span class="sym">).</span>value<span class="sym">)(</span>tog<span class="sym">);</span>
   <span class="kwa">if</span> <span class="sym">(</span>val<span class="sym">)</span>
     <span class="kwd">fprintf</span> <span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;true</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
   <span class="kwa">else</span>
     <span class="kwd">fprintf</span> <span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;false</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
<span class="sym">}</span>

define <span class="kwd">main</span> <span class="sym">()</span>
<span class="sym">{</span>
   variable n <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
   <span class="kwa">if</span> <span class="sym">(</span>__argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> n <span class="sym">=</span> <span class="kwd">integer</span> <span class="sym">(</span>__argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);</span>

   <span class="kwd">do_toggle</span> <span class="sym">(</span><span class="kwd">new_Toggle</span> <span class="sym">(</span><span class="num">1</span><span class="sym">),</span> n<span class="sym">);</span>
   <span class="kwd">do_toggle</span> <span class="sym">(</span><span class="kwd">new_NthToggle</span> <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="num">3</span><span class="sym">),</span> n<span class="sym">);</span>
<span class="sym">}</span>
<span class="kwd">main</span><span class="sym">();</span>
