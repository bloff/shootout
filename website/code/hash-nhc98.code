<span class="slc">-- $Id: hash-nhc98.code,v 1.5 2005-03-31 10:40:19 bfulgham Exp $
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">-- rewritten by Malcolm Wallace
</span>
<span class="kwa">import</span> System <span class="sym">(</span>getArgs<span class="sym">)
</span><span class="kwa">import</span> Data.HashTable <span class="kwa">as</span> HT
<span class="kwa">import</span> Numeric <span class="sym">(</span>showHex<span class="sym">)
</span><span class="kwa">import</span> Monad <span class="sym">(</span>liftM<span class="sym">)
</span><span class="kwa">import</span> Maybe <span class="sym">(</span>isJust<span class="sym">)

</span>main <span class="sym">=</span> <span class="kwa">do</span> num <span class="sym">&lt;-</span> liftM <span class="sym">(</span>\a<span class="sym">-&gt;</span> <span class="kwa">case</span> a <span class="kwa">of</span> <span class="sym">[</span>n<span class="sym">]-&gt;</span> read n<span class="sym">;</span> _<span class="sym">-&gt;</span><span class="num">1</span><span class="sym">)</span> getArgs
          tbl <span class="sym">&lt;-</span> HT.fromList hashString
                             <span class="sym">(</span>map <span class="sym">(</span>\i<span class="sym">-&gt;(</span>showHex i <span class="str">&quot;&quot;</span><span class="sym">,</span> <span class="kwa">True</span><span class="sym">)) [(</span><span class="num">1</span><span class="sym">::</span><span class="kwb">Int</span><span class="sym">)</span>..num<span class="sym">])
</span>          res <span class="sym">&lt;-</span> mapM <span class="sym">(</span>HT.lookup tbl . show<span class="sym">) [</span>num<span class="sym">,(</span>num<span class="num">-1</span><span class="sym">)</span>.<span class="num">.1</span><span class="sym">]
</span>          print <span class="sym">(</span>length <span class="sym">(</span>filter isJust res<span class="sym">))</span>
