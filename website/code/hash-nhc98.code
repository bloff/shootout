<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: hash-nhc98.code,v 1.1 2004-11-02 08:52:31 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">-- rewritten by Malcolm Wallace
</FONT></I>
<B><FONT COLOR="#A020F0">import</FONT></B> System (getArgs)
<B><FONT COLOR="#A020F0">import</FONT></B> Data.HashTable as HT
<B><FONT COLOR="#A020F0">import</FONT></B> Numeric (showHex)
<B><FONT COLOR="#A020F0">import</FONT></B> Monad (liftM)
<B><FONT COLOR="#A020F0">import</FONT></B> Maybe (isJust)

main = do num &lt;- liftM (\a-&gt; <B><FONT COLOR="#A020F0">case</FONT></B> a <B><FONT COLOR="#A020F0">of</FONT></B> [n]-&gt; read n; <B><FONT COLOR="#A020F0">_-&gt;1) </FONT></B>getArgs
          tbl &lt;- HT.fromList hashString
                             (map (\i-&gt;(showHex i <B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B>, True)) [(1<B><FONT COLOR="#228B22">::Int)..num])
</FONT></B>          res &lt;- mapM (HT.lookup tbl . show) [num,(num-1)..1]
          print (length (filter isJust res))</pre></td></tr></table>
