<span class="slc"># $Id: matrix-mawk.code,v 1.5 2005-03-31 10:40:30 bfulgham Exp $
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span>
<span class="kwc">function</span> mkmatrix<span class="sym">(</span>mx<span class="sym">,</span> rows<span class="sym">,</span> cols<span class="sym">) {
</span>    count <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>rows<span class="sym">;</span> i<span class="sym">++) {
</span>	<span class="kwa">for</span> <span class="sym">(</span>j<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> j<span class="sym">&lt;</span>cols<span class="sym">;</span> j<span class="sym">++) {
</span>	    mx<span class="sym">[</span>i<span class="sym">,</span>j<span class="sym">] =</span> count<span class="sym">++;
	}
    }
}

</span><span class="kwc">function</span> mmult<span class="sym">(</span>rows<span class="sym">,</span> cols<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">,</span> m3<span class="sym">) {
</span>    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>rows<span class="sym">;</span> i<span class="sym">++) {
</span>	<span class="kwa">for</span> <span class="sym">(</span>j<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> j<span class="sym">&lt;</span>cols<span class="sym">;</span> j<span class="sym">++) {
</span>	    val <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>	    <span class="kwa">for</span> <span class="sym">(</span>k<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> k<span class="sym">&lt;</span>cols<span class="sym">;</span> k<span class="sym">++) {
</span>		val <span class="sym">+=</span> m1<span class="sym">[</span>i<span class="sym">,</span>k<span class="sym">] *</span> m2<span class="sym">[</span>k<span class="sym">,</span>j<span class="sym">];
	    }
</span>	    m3<span class="sym">[</span>i<span class="sym">,</span>j<span class="sym">] =</span> val<span class="sym">;
	}
    }
}


</span><span class="kwa">BEGIN</span> <span class="sym">{
</span>    n <span class="sym">= (</span><span class="kwb">ARGV</span><span class="sym">[</span><span class="num">1</span><span class="sym">] &lt;</span> <span class="num">1</span><span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> <span class="kwb">ARGV</span><span class="sym">[</span><span class="num">1</span><span class="sym">];
</span>    size <span class="sym">=</span> <span class="num">30</span><span class="sym">;
</span>    m1<span class="sym">[</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;
</span>    m2<span class="sym">[</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;
</span>    mkmatrix<span class="sym">(</span>m1<span class="sym">,</span> size<span class="sym">,</span> size<span class="sym">);
</span>    mkmatrix<span class="sym">(</span>m2<span class="sym">,</span> size<span class="sym">,</span> size<span class="sym">);
</span>    mm<span class="sym">[</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>	mmult<span class="sym">(</span>size<span class="sym">,</span> size<span class="sym">,</span> m1<span class="sym">,</span> m2<span class="sym">,</span> mm<span class="sym">);
    }
</span>    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">%d  %d  %d  %d\n</span><span class="str">&quot;</span><span class="sym">,</span> mm<span class="sym">[</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">2</span><span class="sym">,</span><span class="num">3</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">3</span><span class="sym">,</span><span class="num">2</span><span class="sym">],</span> mm<span class="sym">[</span><span class="num">4</span><span class="sym">,</span><span class="num">4</span><span class="sym">]);
</span>    <span class="kwa">exit</span><span class="sym">;
}</span>
