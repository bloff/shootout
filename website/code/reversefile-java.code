<span class="line">    1 </span><span class="slc">// $Id: reversefile-java.code,v 1.3 2004-11-11 07:14:11 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">// from Stephen Darnell
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">public class</span> reversefile <span class="sym">{
</span><span class="line">    8 </span><span class="sym"></span>    <span class="kwa">final static</span> <span class="kwb">int</span> BUFF_SIZE <span class="sym">=</span> <span class="num">4096</span><span class="sym">;
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym"></span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span> <span class="kwc">String</span><span class="sym">[]</span> args <span class="sym">) {
</span><span class="line">   11 </span><span class="sym"></span>        <span class="kwc">InputStream</span> in <span class="sym">=</span> <span class="kwc">System</span><span class="sym">.</span>in<span class="sym">;
</span><span class="line">   12 </span><span class="sym">
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwb">byte</span><span class="sym">[]</span> buff <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">byte</span><span class="sym">[</span>BUFF_SIZE<span class="sym">];
</span><span class="line">   14 </span><span class="sym"></span>        <span class="kwb">byte</span><span class="sym">[]</span> obuff <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">byte</span><span class="sym">[</span>BUFF_SIZE<span class="sym">];
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span>        <span class="kwa">try</span> <span class="sym">{
</span><span class="line">   17 </span><span class="sym"></span>            <span class="kwb">int</span> pos <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym"></span>            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> n <span class="sym">; (</span>n <span class="sym">=</span> in<span class="sym">.</span>read<span class="sym">(</span>buff<span class="sym">,</span> pos<span class="sym">,</span> BUFF_SIZE<span class="sym">)) &gt;</span> <span class="num">0</span> <span class="sym">;) {
</span><span class="line">   19 </span><span class="sym"></span>                pos <span class="sym">+=</span> n<span class="sym">;
</span><span class="line">   20 </span><span class="sym"></span>                <span class="kwa">if</span> <span class="sym">((</span>pos <span class="sym">+</span> BUFF_SIZE<span class="sym">) &gt;</span> buff<span class="sym">.</span>length<span class="sym">) {
</span><span class="line">   21 </span><span class="sym"></span>                    <span class="kwb">byte</span><span class="sym">[]</span> new_buff <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">byte</span><span class="sym">[</span>buff<span class="sym">.</span>length <span class="sym">&lt;&lt;</span> <span class="num">1</span><span class="sym">];
</span><span class="line">   22 </span><span class="sym"></span>                    <span class="kwc">System</span><span class="sym">.</span>arraycopy<span class="sym">(</span>buff<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> new_buff<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> buff<span class="sym">.</span>length<span class="sym">);
</span><span class="line">   23 </span><span class="sym"></span>                    buff <span class="sym">=</span> new_buff<span class="sym">;
</span><span class="line">   24 </span><span class="sym">                }
</span><span class="line">   25 </span><span class="sym">            }
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span>            <span class="kwb">int</span> opos <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   28 </span><span class="sym">
</span><span class="line">   29 </span><span class="sym"></span>            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> p <span class="sym">= --</span>pos <span class="sym">; ;) {
</span><span class="line">   30 </span><span class="sym">                --</span>p<span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>                <span class="kwa">if</span> <span class="sym">(</span>p <span class="sym">&lt;</span> <span class="num">0</span> <span class="sym">||</span> buff<span class="sym">[</span>p<span class="sym">] ==</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">) {
</span><span class="line">   32 </span><span class="sym"></span>                    <span class="kwa">for</span><span class="sym">(</span> <span class="kwb">int</span> bp <span class="sym">=</span> p <span class="sym">; ++</span>bp <span class="sym">&lt;=</span> pos <span class="sym">; ) {
</span><span class="line">   33 </span><span class="sym"></span>                        obuff<span class="sym">[</span>opos<span class="sym">] =</span> buff<span class="sym">[</span>bp<span class="sym">];
</span><span class="line">   34 </span><span class="sym"></span>                        <span class="kwa">if</span> <span class="sym">(++</span>opos <span class="sym">&gt;=</span> BUFF_SIZE<span class="sym">) {
</span><span class="line">   35 </span><span class="sym"></span>                            <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>write<span class="sym">(</span>obuff<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> opos<span class="sym">);
</span><span class="line">   36 </span><span class="sym"></span>                            opos <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   37 </span><span class="sym">                        }
</span><span class="line">   38 </span><span class="sym">                    }
</span><span class="line">   39 </span><span class="sym"></span>                    pos <span class="sym">=</span> p<span class="sym">;
</span><span class="line">   40 </span><span class="sym">
</span><span class="line">   41 </span><span class="sym"></span>                    <span class="kwa">if</span> <span class="sym">(</span>p <span class="sym">&lt;</span> <span class="num">0</span><span class="sym">)
</span><span class="line">   42 </span><span class="sym"></span>                        <span class="kwa">break</span><span class="sym">;
</span><span class="line">   43 </span><span class="sym">                }
</span><span class="line">   44 </span><span class="sym">            }
</span><span class="line">   45 </span><span class="sym">
</span><span class="line">   46 </span><span class="sym"></span>            <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>write<span class="sym">(</span>obuff<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> opos<span class="sym">);
</span><span class="line">   47 </span><span class="sym">        }
</span><span class="line">   48 </span><span class="sym"></span>        <span class="kwa">catch</span><span class="sym">(</span><span class="kwc">IOException</span> ex<span class="sym">) {
</span><span class="line">   49 </span><span class="sym">        }
</span><span class="line">   50 </span><span class="sym">    }
</span><span class="line">   51 </span><span class="sym">}</span>
