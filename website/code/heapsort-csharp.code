<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">// $Id: heapsort-csharp.code,v 1.2 2004-11-08 08:15:14 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">// http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">// contributed by Erik Saltwell
</FONT></I><I><FONT COLOR="#B22222">// Modified to meet string formatting specification for test
</FONT></I><I><FONT COLOR="#B22222">//   by Brent Fulgham
</FONT></I>
using System;

class heapsort
{
    public <B><FONT COLOR="#228B22">const</FONT></B> <B><FONT COLOR="#228B22">long</FONT></B> IM = 139968;
    public <B><FONT COLOR="#228B22">const</FONT></B> <B><FONT COLOR="#228B22">long</FONT></B> IA =   3877;
    public <B><FONT COLOR="#228B22">const</FONT></B> <B><FONT COLOR="#228B22">long</FONT></B> IC =  29573;

    public <B><FONT COLOR="#228B22">static</FONT></B> <B><FONT COLOR="#228B22">long</FONT></B> last = 42;
        
    public <B><FONT COLOR="#228B22">static</FONT></B> <B><FONT COLOR="#228B22">double</FONT></B> gen_random(<B><FONT COLOR="#228B22">double</FONT></B> max) 
    {
        last = (last * IA + IC) % IM;
        <B><FONT COLOR="#A020F0">return</FONT></B> ((max * last) / IM);
    }

    public <B><FONT COLOR="#228B22">static</FONT></B> <B><FONT COLOR="#228B22">int</FONT></B> count = 0;

    [STAThread]
    <B><FONT COLOR="#228B22">static</FONT></B> <B><FONT COLOR="#228B22">void</FONT></B> Main(string[] args)
    {
        count = <B><FONT COLOR="#228B22">int</FONT></B>.Parse(args[0]);
        <B><FONT COLOR="#228B22">double</FONT></B>[] ary = new <B><FONT COLOR="#228B22">double</FONT></B>[count+1];
        <B><FONT COLOR="#A020F0">for</FONT></B>(<B><FONT COLOR="#228B22">int</FONT></B> i = 0; i &lt;= count; ++i)
        {
            ary[i]=gen_random(1);
        }
        _heapsort(ary);
        Console.WriteLine(<B><FONT COLOR="#BC8F8F">&quot;{0:f10}&quot;</FONT></B>, ary[count]);
    }
    
    public <B><FONT COLOR="#228B22">static</FONT></B> <B><FONT COLOR="#228B22">void</FONT></B> _heapsort(<B><FONT COLOR="#228B22">double</FONT></B>[] ra) 
    {
        <B><FONT COLOR="#228B22">int</FONT></B> j, i;
        <B><FONT COLOR="#228B22">double</FONT></B> rra;

        <B><FONT COLOR="#228B22">int</FONT></B> l = (count &gt;&gt; 1) + 1;
        <B><FONT COLOR="#228B22">int</FONT></B> ir = count;

        <B><FONT COLOR="#A020F0">while</FONT></B> (true)
        {
            <B><FONT COLOR="#A020F0">if</FONT></B> (l &gt; 1) 
            {
                rra = ra[--l];
            } 
            <B><FONT COLOR="#A020F0">else</FONT></B> 
            {
                rra = ra[ir];
                ra[ir] = ra[1];
                <B><FONT COLOR="#A020F0">if</FONT></B> (--ir == 1) 
                {
                    ra[1] = rra;
                    <B><FONT COLOR="#A020F0">return</FONT></B>;
                }
            }
            i = l;
            j = l &lt;&lt; 1;
            <B><FONT COLOR="#A020F0">while</FONT></B> (j &lt;= ir) 
            {
                <B><FONT COLOR="#A020F0">if</FONT></B> (j &lt; ir &amp;&amp; ra[j] &lt; ra[j+1]) { ++j; }
                <B><FONT COLOR="#A020F0">if</FONT></B> (rra &lt; ra[j]) 
                {
                    ra[i] = ra[j];
                    j += (i = j);
                } 
                <B><FONT COLOR="#A020F0">else</FONT></B> 
                {
                    j = ir + 1;
                }
            }
            ra[i] = rra;
        }
    }
}</pre></td></tr></table>
