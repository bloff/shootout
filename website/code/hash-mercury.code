<span class="slc">%% $Id: hash-mercury.code,v 1.4 2005-04-13 15:28:59 bfulgham Exp $
</span><span class="slc">%% http://www.bagley.org/~doug/shootout/
</span><span class="slc">%% from Fergus Henderson
</span>
<span class="sym">:-</span> module mytest.
<span class="sym">:-</span> interface.
<span class="sym">:-</span> import_module io.

<span class="sym">:-</span> pred main<span class="sym">(</span>state<span class="sym">::</span>di<span class="sym">,</span> state<span class="sym">::</span>uo<span class="sym">)</span> <span class="kwa">is</span> det.

<span class="sym">:-</span> implementation.
<span class="sym">:-</span> import_module string<span class="sym">,</span> hash_table<span class="sym">,</span> list<span class="sym">,</span> int.

main <span class="sym">--&gt;
</span>	io__command_line_arguments<span class="sym">(</span>Args<span class="sym">),
	{</span> N <span class="sym">= (</span>if Args <span class="sym">= [</span>Arg<span class="sym">],</span> to_int<span class="sym">(</span>Arg<span class="sym">,</span> N0<span class="sym">)</span> then N0 else <span class="num">1</span><span class="sym">) },
	{</span> X <span class="sym">=</span> insert_values<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> N<span class="sym">,</span> hash_table__new<span class="sym">(</span>string_double_hash<span class="sym">,</span> <span class="num">18</span><span class="sym">,</span> <span class="num">0.33</span><span class="sym">)) },
</span>	print<span class="sym">(</span>count<span class="sym">(</span>N<span class="sym">,</span> X<span class="sym">,</span> <span class="num">0</span><span class="sym">)),</span> <span class="kwa">nl</span>.

<span class="sym">:-</span> func insert_values<span class="sym">(</span>int<span class="sym">,</span> int<span class="sym">,</span> hash_table<span class="sym">(</span>string<span class="sym">,</span> int<span class="sym">)) =</span> hash_table<span class="sym">(</span>string<span class="sym">,</span> int<span class="sym">)</span>.
<span class="sym">:-</span> mode insert_values<span class="sym">(</span>in<span class="sym">,</span> in<span class="sym">,</span> hash_table_di<span class="sym">) =</span> hash_table_uo.
insert_values<span class="sym">(</span>I<span class="sym">,</span> N<span class="sym">,</span> X0<span class="sym">) =
	(</span>if I <span class="sym">&gt;</span> N then X0
	else insert_values<span class="sym">(</span>I <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> N<span class="sym">,</span> X0^elem<span class="sym">(</span>int_to_base_string<span class="sym">(</span>I<span class="sym">,</span> <span class="num">16</span><span class="sym">)) :=</span> I<span class="sym">))</span>.

<span class="sym">:-</span> func count<span class="sym">(</span>int<span class="sym">,</span> hash_table<span class="sym">(</span>string<span class="sym">,</span> int<span class="sym">),</span> int<span class="sym">) =</span> int.
<span class="sym">:-</span> mode count<span class="sym">(</span>in<span class="sym">,</span> hash_table_ui<span class="sym">,</span> in<span class="sym">) =</span> out.
count<span class="sym">(</span>I<span class="sym">,</span> X<span class="sym">,</span> C0<span class="sym">) =
	(</span>if I <span class="sym">=</span> <span class="num">0</span> then C0
	else count<span class="sym">(</span>I <span class="num">- 1</span><span class="sym">,</span> X<span class="sym">,
		(</span>if search<span class="sym">(</span>X<span class="sym">,</span> int_to_string<span class="sym">(</span>I<span class="sym">),</span> _<span class="sym">)</span> then C0 <span class="sym">+</span> <span class="num">1</span> else C0<span class="sym">)))</span>.
