<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
%% $Id: hash-mercury.code,v 1.2 2004-11-08 08:15:13 bfulgham Exp $
%% http:<I><FONT COLOR="#B22222">//www.bagley.org/~doug/shootout/
</FONT></I>%% from Fergus Henderson

:- module mytest.
:- <B><FONT COLOR="#A020F0">interface</FONT></B>.
:- import_module io.

:- pred main(state::di, state::uo) <B><FONT COLOR="#A020F0">is</FONT></B> det.

:- <B><FONT COLOR="#A020F0">implementation</FONT></B>.
:- import_module <B><FONT COLOR="#A020F0">string</FONT></B>, hash_table, list, int.

main --&gt;
	io__command_line_arguments(Args),
	<I><FONT COLOR="#B22222">{ N = (if Args = [Arg], to_int(Arg, N0) then N0 else 1) }</FONT></I>,
	<I><FONT COLOR="#B22222">{ X = insert_values(1, N, hash_table__new(string_double_hash, 18, 0.33)) }</FONT></I>,
	print(count(N, X, 0)), nl.

:- func insert_values(int, int, hash_table(<B><FONT COLOR="#A020F0">string</FONT></B>, int)) = hash_table(<B><FONT COLOR="#A020F0">string</FONT></B>, int).
:- mode insert_values(<B><FONT COLOR="#A020F0">in</FONT></B>, <B><FONT COLOR="#A020F0">in</FONT></B>, hash_table_di) = hash_table_uo.
insert_values(I, N, X0) =
	(<B><FONT COLOR="#A020F0">if</FONT></B> I &gt; N <B><FONT COLOR="#A020F0">then</FONT></B> X0
	<B><FONT COLOR="#A020F0">else</FONT></B> insert_values(I + 1, N, X0^elem(int_to_base_string(I, 16)) := I)).

:- func count(int, hash_table(<B><FONT COLOR="#A020F0">string</FONT></B>, int), int) = int.
:- mode count(<B><FONT COLOR="#A020F0">in</FONT></B>, hash_table_ui, <B><FONT COLOR="#A020F0">in</FONT></B>) = out.
count(I, X, C0) =
	(<B><FONT COLOR="#A020F0">if</FONT></B> I = 0 <B><FONT COLOR="#A020F0">then</FONT></B> C0
	<B><FONT COLOR="#A020F0">else</FONT></B> count(I - 1, X,
		(<B><FONT COLOR="#A020F0">if</FONT></B> search(X, int_to_string(I), _) <B><FONT COLOR="#A020F0">then</FONT></B> C0 + 1 <B><FONT COLOR="#A020F0">else</FONT></B> C0))).</pre></td></tr></table>
