<span class="sym">/*</span>
   The Computer Language Shootout
   http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/</span>

   contributed by anon
<span class="sym">*/</span>


<span class="kwa">module</span> nbody

<span class="kwa">import</span> StdEnv
<span class="kwa">import</span> StdOverloaded
<span class="kwa">import</span> StdDebug
<span class="kwa">import</span> ArgEnv
<span class="sym">// [!] !!!</span><span class="kwa">import</span> M_PI
pi <span class="sym">:==</span> <span class="num">3.1415926535897932384626433832795028841971693993751058209749445</span>

<span class="sym">::</span> Coord <span class="sym">:==</span> Real
<span class="sym">::</span> <span class="kwb">Double</span> <span class="sym">:==</span> Real <span class="sym">/*</span> for Scaling <span class="sym">*/</span>
<span class="sym">::</span> Vector3 <span class="sym">=</span> Vector3 <span class="sym">!</span>Coord <span class="sym">!</span>Coord <span class="sym">!</span>Coord
<span class="sym">/* [!]</span> Vector3 <span class="sym">= (</span>Coord<span class="sym">,</span> Coord<span class="sym">,</span> Coord<span class="sym">) !!! */</span>

<span class="kwa">class</span> Vector3Ops a
<span class="kwa">where</span>
	dot <span class="sym">:: !</span>a <span class="sym">!</span>a <span class="sym">-&gt;</span> Coord
	magnitude <span class="sym">:: !</span>a <span class="sym">-&gt;</span> Coord
	magnitude2 <span class="sym">:: !</span>a <span class="sym">-&gt;</span> Coord
	<span class="sym">(*</span>.<span class="sym">)</span> <span class="kwa">infixl</span> <span class="num">7</span> <span class="sym">:: !</span>a <span class="sym">!</span><span class="kwb">Double</span> <span class="sym">-&gt;</span> a
	<span class="sym">(/</span>.<span class="sym">)</span> <span class="kwa">infixl</span> <span class="num">7</span> <span class="sym">:: !</span>a <span class="sym">!</span><span class="kwb">Double</span> <span class="sym">-&gt;</span> a

<span class="kwa">instance</span> Vector3Ops Vector3
<span class="kwa">where</span>
	dot <span class="sym">(</span>Vector3 x1 y1 z1<span class="sym">) (</span>Vector3 x2 y2 z2<span class="sym">) = (</span>x1<span class="sym">*</span>x2<span class="sym">) + (</span>y1<span class="sym">*</span>y2<span class="sym">) + (</span>z1<span class="sym">*</span>z2<span class="sym">)</span>
	magnitude2 v <span class="sym">=</span> dot v v
	magnitude v <span class="sym">=</span> sqrt<span class="sym">(</span>magnitude2 v<span class="sym">)</span>
	<span class="sym">(*</span>.<span class="sym">) (</span>Vector3 x y z<span class="sym">)</span> k <span class="sym">=</span> Vector3 <span class="sym">(</span>x<span class="sym">*</span>k<span class="sym">) (</span>y<span class="sym">*</span>k<span class="sym">) (</span>z<span class="sym">*</span>k<span class="sym">)</span>
	<span class="sym">(/</span>.<span class="sym">) (</span>Vector3 x y z<span class="sym">)</span> k <span class="sym">=</span> Vector3 <span class="sym">(</span>x<span class="sym">/</span>k<span class="sym">) (</span>y<span class="sym">/</span>k<span class="sym">) (</span>z<span class="sym">/</span>k<span class="sym">)</span>
<span class="kwa">instance</span> <span class="sym">~</span> Vector3
<span class="kwa">where</span>
	<span class="sym">(~) (</span>Vector3 x y z<span class="sym">) =</span> Vector3 <span class="sym">(~</span>x<span class="sym">) (~</span>y<span class="sym">) (~</span>z<span class="sym">)</span>
<span class="kwa">instance</span> zero Vector3
<span class="kwa">where</span>
	zero <span class="sym">=</span> Vector3 <span class="num">0.0 0.0 0.0</span>
<span class="kwa">instance</span> <span class="sym">+</span> Vector3
<span class="kwa">where</span>
	<span class="sym">(+) (</span>Vector3 x1 y1 z1<span class="sym">) (</span>Vector3 x2 y2 z2<span class="sym">) =</span> Vector3 <span class="sym">(</span>x1<span class="sym">+</span>x2<span class="sym">) (</span>y1<span class="sym">+</span>y2<span class="sym">) (</span>z1<span class="sym">+</span>z2<span class="sym">)</span>
<span class="kwa">instance</span> <span class="sym">-</span> Vector3
<span class="kwa">where</span>
	<span class="sym">(-) (</span>Vector3 x1 y1 z1<span class="sym">) (</span>Vector3 x2 y2 z2<span class="sym">) =</span> Vector3 <span class="sym">(</span>x1<span class="sym">-</span>x2<span class="sym">) (</span>y1<span class="sym">-</span>y2<span class="sym">) (</span>z1<span class="sym">-</span>z2<span class="sym">)</span>


<span class="sym">/*</span> Objects <span class="sym">*/</span>

<span class="sym">::</span> Mass <span class="sym">:==</span> Real
<span class="sym">::</span> DTime <span class="sym">:==</span> Real
<span class="sym">::</span> Planet <span class="sym">=</span> Planet <span class="sym">!</span>Mass <span class="sym">!</span>Vector3 <span class="sym">!</span>Vector3 <span class="sym">/*</span> Mass Position Velocity <span class="sym">*/</span>
<span class="sym">::</span> Cosmos <span class="sym">=</span>
	{	number_of_planets <span class="sym">::</span> <span class="kwb">Int</span>
	<span class="sym">,</span>	days_per_year <span class="sym">::</span> Real
	<span class="sym">,</span>	solar_mass <span class="sym">::</span> Real
	<span class="sym">,</span>	planets <span class="sym">:: [</span>Planet<span class="sym">]</span>
	}

givenCosmos <span class="sym">:: *</span>Cosmos
givenCosmos <span class="sym">=</span>
	{	number_of_planets <span class="sym">=</span> <span class="num">5</span>
	<span class="sym">,</span>	days_per_year <span class="sym">=</span> days_per_year
	<span class="sym">,</span>	solar_mass <span class="sym">=</span> solar_mass
	<span class="sym">,</span>	planets <span class="sym">=</span>
		<span class="sym">[</span>	Planet solar_mass
			<span class="sym">(</span>Vector3 <span class="num">0.0 0.0 0.0</span><span class="sym">)</span>
			<span class="sym">(</span>Vector3 <span class="num">0.0 0.0 0.0</span><span class="sym">)</span>
		<span class="sym">,</span>	Planet <span class="sym">(</span><span class="num">9.54791938424326609E-04</span><span class="sym">*</span>solar_mass<span class="sym">)</span>
			<span class="sym">(</span>Vector3 <span class="num">4.84143144246472090E+00</span> <span class="sym">-</span><span class="num">1.16032004402742839E+00</span> <span class="sym">-</span><span class="num">1.03622044471123109E-01</span><span class="sym">)</span>
			<span class="sym">(</span>Vector3 <span class="sym">(</span><span class="num">1.66007664274403694E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(</span><span class="num">7.69901118419740425E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(-</span><span class="num">6.90460016972063023E-05</span><span class="sym">*</span>days_per_year<span class="sym">))</span>
		<span class="sym">,</span>	Planet <span class="sym">(</span><span class="num">2.85885980666130812E-04</span><span class="sym">*</span>solar_mass<span class="sym">)</span>
			<span class="sym">(</span>Vector3 <span class="sym">(</span><span class="num">8.34336671824457987E+00</span><span class="sym">) (</span><span class="num">4.12479856412430479E+00</span><span class="sym">) (-</span><span class="num">4.03523417114321381E-01</span><span class="sym">))</span>
			<span class="sym">(</span>Vector3 <span class="sym">(-</span><span class="num">2.76742510726862411E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(</span><span class="num">4.99852801234917238E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(</span><span class="num">2.30417297573763929E-05</span><span class="sym">*</span>days_per_year<span class="sym">))</span>
		<span class="sym">,</span>	Planet <span class="sym">(</span><span class="num">4.36624404335156298E-05</span><span class="sym">*</span>solar_mass<span class="sym">)</span>
			<span class="sym">(</span>Vector3 <span class="sym">(</span><span class="num">1.28943695621391310E+01</span><span class="sym">) (-</span><span class="num">1.51111514016986312E+01</span><span class="sym">) (-</span><span class="num">2.23307578892655734E-01</span><span class="sym">))</span>
			<span class="sym">(</span>Vector3 <span class="sym">(</span><span class="num">2.96460137564761618E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(</span><span class="num">2.37847173959480950E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(-</span><span class="num">2.96589568540237556E-05</span><span class="sym">*</span>days_per_year<span class="sym">))</span>
		<span class="sym">,</span>	Planet <span class="sym">(</span><span class="num">5.15138902046611451E-05</span><span class="sym">*</span>solar_mass<span class="sym">)</span>
			<span class="sym">(</span>Vector3 <span class="sym">(</span><span class="num">1.53796971148509165E+01</span><span class="sym">) (-</span><span class="num">2.59193146099879641E+01</span><span class="sym">) (</span><span class="num">1.79258772950371181E-01</span><span class="sym">))</span>
			<span class="sym">(</span>Vector3 <span class="sym">(</span><span class="num">2.68067772490389322E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(</span><span class="num">1.62824170038242295E-03</span><span class="sym">*</span>days_per_year<span class="sym">)</span>
			<span class="sym">(-</span><span class="num">9.51592254519715870E-05</span><span class="sym">*</span>days_per_year<span class="sym">))</span>
		<span class="sym">]</span>

	}
<span class="kwa">where</span>
	days_per_year <span class="sym">=</span> <span class="num">365.24</span>
	solar_mass <span class="sym">=</span> <span class="num">4.0</span><span class="sym">*</span>pi<span class="sym">*</span>pi

<span class="sym">/* ==</span> Solution <span class="sym">== */</span>

<span class="sym">/*</span> Physics <span class="sym">*/</span>

calcVel <span class="sym">:: !</span>DTime <span class="sym">!</span>Planet <span class="sym">!</span>Planet <span class="sym">-&gt; (</span>Planet<span class="sym">,</span>Planet<span class="sym">)</span>
calcVel delta_time <span class="sym">(</span>Planet p1mass p1position p1velocity<span class="sym">) (</span>Planet p2mass p2position p2velocity<span class="sym">)</span>
	#<span class="sym">!</span>	difference <span class="sym">=</span> p1position <span class="sym">-</span> p2position
		distance_squared <span class="sym">=</span> magnitude2<span class="sym">(</span>difference<span class="sym">)</span>
		distance <span class="sym">=</span> sqrt<span class="sym">(</span>distance_squared<span class="sym">)</span>
		magnitude <span class="sym">=</span> delta_time <span class="sym">/ (</span>distance <span class="sym">*</span> distance_squared<span class="sym">)</span>
		p2mass_magnitude <span class="sym">=</span> p2mass <span class="sym">*</span> magnitude
		p1mass_magnitude <span class="sym">=</span> p1mass <span class="sym">*</span> magnitude
		p1velocity <span class="sym">=</span> p1velocity <span class="sym">-</span> difference <span class="sym">*</span>. p2mass_magnitude
		p2velocity <span class="sym">=</span> p2velocity <span class="sym">+</span> difference <span class="sym">*</span>. p1mass_magnitude
	<span class="sym">=	(</span>Planet p1mass p1position p1velocity<span class="sym">,</span> Planet p2mass p2position p2velocity<span class="sym">)</span>

calcPos <span class="sym">::</span> DTime <span class="sym">!</span>Planet <span class="sym">-&gt;</span> Planet
calcPos dtime <span class="sym">(</span>Planet mass pos vel<span class="sym">)</span>
	<span class="sym">=</span> Planet mass new_pos vel
<span class="kwa">where</span>
	new_pos <span class="sym">=</span> pos <span class="sym">+</span> vel <span class="sym">*</span>. dtime

<span class="sym">/*</span> End <span class="kwa">of</span> Physics <span class="sym">*/</span>

advance <span class="sym">::</span> DTime <span class="sym">!*</span>{Planet} <span class="sym">-&gt; *</span>{Planet}
advance dtime planets
	# planets <span class="sym">=</span> updateHalfCartesian <span class="sym">(</span>calcVel dtime<span class="sym">)</span> planets
	# planets <span class="sym">=</span> updateA <span class="sym">(</span>calcPos dtime<span class="sym">)</span> planets
	<span class="sym">=</span> planets

offset_momentum <span class="sym">:: !*</span>{Planet} <span class="sym">-&gt; *</span>{Planet}
offset_momentum planets
	# <span class="sym">(</span>m<span class="sym">,</span>planets<span class="sym">) =</span> collectA getmom zero planets
	# <span class="sym">(</span>solar<span class="sym">,</span>planets<span class="sym">) =</span> uselect planets <span class="num">0</span>
	# solar <span class="sym">=</span> updSolar m solar
	# planets <span class="sym">=</span> update planets <span class="num">0</span> solar
	<span class="sym">=</span> planets
<span class="kwa">where</span>
	getmom <span class="sym">(</span>Planet mass pos vel<span class="sym">)</span> acc <span class="sym">=</span> acc <span class="sym">+</span> vel <span class="sym">*</span>. mass
	updSolar momentum <span class="sym">(</span>Planet mass pos vel<span class="sym">)</span>
		# momentum <span class="sym">=</span> momentum <span class="sym">-</span> vel <span class="sym">*</span>. mass <span class="sym">/*</span> correct garbled momentum <span class="sym">*/</span>
		# vel <span class="sym">= ~</span> momentum <span class="sym">/</span>. mass
		<span class="sym">=</span> Planet mass pos vel

energy <span class="sym">:: !*</span>{Planet} <span class="sym">-&gt; (</span>Real<span class="sym">,!*</span>{Planet}<span class="sym">)</span>
energy planets
	#<span class="sym">! (</span>cn<span class="sym">,</span>planets<span class="sym">) =</span> usize planets
	#<span class="sym">! (</span>total_energy<span class="sym">,</span>planets<span class="sym">) =</span> collectA setEnergy <span class="num">0.0</span> planets
	#<span class="sym">! (</span>total_energy<span class="sym">,</span>planets<span class="sym">) =</span> collectHalfCartesian calcEnergy total_energy planets
	<span class="sym">= (</span>total_energy<span class="sym">,</span>planets<span class="sym">)</span>
<span class="kwa">where</span>
	setEnergy <span class="sym">(</span>Planet mass pos vel<span class="sym">)</span> a <span class="sym">=</span> a <span class="sym">+</span> <span class="num">0.5</span><span class="sym">*</span>mass<span class="sym">*</span>magnitude2<span class="sym">(</span>vel<span class="sym">)</span>
	calcEnergy <span class="sym">(</span>Planet p1mass p1pos p1vel<span class="sym">) (</span>Planet p2mass p2pos p2vel<span class="sym">)</span> a
		#<span class="sym">!</span> difference <span class="sym">=</span> p1pos <span class="sym">-</span> p2pos
        #<span class="sym">!</span> distance <span class="sym">=</span> magnitude<span class="sym">(</span>difference<span class="sym">)</span>
        <span class="sym">=</span> a <span class="sym">- (</span>p1mass <span class="sym">*</span> p2mass<span class="sym">) /</span> distance

<span class="sym">/* ==</span> Helpers <span class="sym">== */</span>

collectHalfCartesian <span class="sym">:: (</span>x x a<span class="sym">-&gt;</span>a<span class="sym">) !</span>a <span class="sym">!*</span>{x} <span class="sym">-&gt; (</span>a<span class="sym">,*</span>{x}<span class="sym">) |</span> Array {} x
collectHalfCartesian fn a x
	# <span class="sym">(</span>sz<span class="sym">,</span>x<span class="sym">) =</span> usize x
	<span class="sym">=</span> iloop a x <span class="sym">(</span>sz<span class="sym">-</span><span class="num">2</span><span class="sym">)</span>
<span class="kwa">where</span>
	iloop a x i
		<span class="sym">|</span> i <span class="sym">&lt;</span> <span class="num">0</span> <span class="sym">= (</span>a<span class="sym">,</span>x<span class="sym">)</span>
		#<span class="sym">! (</span>sz<span class="sym">,</span>x<span class="sym">) =</span> usize x
		#<span class="sym">! (</span>a<span class="sym">,</span>x<span class="sym">) =</span> jloop a x i <span class="sym">(</span>sz<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
		<span class="sym">=</span> iloop a x <span class="sym">(</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
	jloop a x i j
		<span class="sym">|</span> i <span class="sym">==</span> j	<span class="sym">= (</span>a<span class="sym">,</span>x<span class="sym">)</span>
		#<span class="sym">! (</span>a<span class="sym">,</span>x<span class="sym">) =</span> cr a x i j
		<span class="sym">|</span> otherwise	<span class="sym">=</span> jloop a x i <span class="sym">(</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
	cr a x i j
		#<span class="sym">! (</span>xi<span class="sym">,</span>x<span class="sym">) =</span> uselect x i
		#<span class="sym">! (</span>xj<span class="sym">,</span>x<span class="sym">) =</span> uselect x j
		#<span class="sym">!</span> a <span class="sym">=</span> fn xi xj a
		<span class="sym">= (</span>a<span class="sym">,</span>x<span class="sym">)</span>

updateHalfCartesian <span class="sym">:: (</span>x x<span class="sym">-&gt;(</span>x<span class="sym">,</span>x<span class="sym">)) !*</span>{x} <span class="sym">-&gt; *</span>{x} <span class="sym">|</span> Array {} x
updateHalfCartesian fn x
	# <span class="sym">(</span>sz<span class="sym">,</span>x<span class="sym">) =</span> usize x
	<span class="sym">=</span> iloop x <span class="sym">(</span>sz<span class="sym">-</span><span class="num">2</span><span class="sym">)</span>
<span class="kwa">where</span>
	iloop x i
		<span class="sym">|</span> i <span class="sym">&lt;</span> <span class="num">0</span> <span class="sym">=</span> x
		#<span class="sym">! (</span>sz<span class="sym">,</span>x<span class="sym">) =</span> usize x
		#<span class="sym">!</span> x <span class="sym">=</span> jloop x i <span class="sym">(</span>sz<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
		<span class="sym">=</span> iloop x <span class="sym">(</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
	jloop x i j
		<span class="sym">|</span> i <span class="sym">==</span> j	<span class="sym">=</span> x
		#<span class="sym">!</span> x <span class="sym">=</span> cr x i j
		<span class="sym">|</span> otherwise	<span class="sym">=</span> jloop x i <span class="sym">(</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
	cr x i j
		#<span class="sym">! (</span>xi<span class="sym">,</span>x<span class="sym">) =</span> uselect x i
		#<span class="sym">! (</span>xj<span class="sym">,</span>x<span class="sym">) =</span> uselect x j
		#<span class="sym">! (</span>xi<span class="sym">,</span>xj<span class="sym">) =</span> fn xi xj
		#<span class="sym">!</span> x <span class="sym">=</span> update x i xi
		#<span class="sym">!</span> x <span class="sym">=</span> update x j xj
		<span class="sym">=</span> x


updateA <span class="sym">:: (</span>x<span class="sym">-&gt;</span>x<span class="sym">) !*</span>{x} <span class="sym">-&gt; *</span>{x} <span class="sym">|</span> Array {} x
updateA fn x
		# <span class="sym">(</span>sz<span class="sym">,</span>x<span class="sym">) =</span> usize x
		<span class="sym">=</span> loop <span class="sym">(</span>sz<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> x
<span class="kwa">where</span>
	loop n x
		<span class="sym">|</span> n <span class="sym">&lt;</span> <span class="num">0</span> <span class="sym">=</span> x
		#<span class="sym">! (</span>xn<span class="sym">,</span>x<span class="sym">) =</span> uselect x n
		#<span class="sym">!</span> xn <span class="sym">=</span> fn xn
		#<span class="sym">!</span> x <span class="sym">=</span> update x n xn
		<span class="sym">=</span> loop <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> x

collectA <span class="sym">:: (</span>x a<span class="sym">-&gt;</span>a<span class="sym">) !</span>a <span class="sym">!*</span>{x} <span class="sym">-&gt; (</span>a<span class="sym">,*</span>{x}<span class="sym">) |</span> Array {} x
collectA fn a x
		# <span class="sym">(</span>sz<span class="sym">,</span>x<span class="sym">) =</span> usize x
		<span class="sym">=</span> loop <span class="sym">(</span>sz<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> a x
<span class="kwa">where</span>
	loop n a x
		<span class="sym">|</span> n <span class="sym">&lt;</span> <span class="num">0</span> <span class="sym">= (</span>a<span class="sym">,</span>x<span class="sym">)</span>
		#<span class="sym">! (</span>xn<span class="sym">,</span>x<span class="sym">) =</span> uselect x n
		#<span class="sym">!</span> a <span class="sym">=</span> fn xn a
		<span class="sym">=</span> loop <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> a x

<span class="sym">/* ==</span> End <span class="kwa">of</span> Helpers <span class="sym">== */</span>

Start
	# f <span class="sym">=</span> stderr
	# planets <span class="sym">=</span> { p \\ p <span class="sym">&lt;-</span> givenCosmos.planets }
	# cmd <span class="sym">=</span> getCommandLine
	# n <span class="sym">=</span> if <span class="sym">(</span>size cmd <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span> <span class="num">1</span> <span class="sym">(</span>toInt cmd.<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>

	# planets <span class="sym">=</span> offset_momentum planets

	# <span class="sym">(</span>e<span class="sym">,</span>planets<span class="sym">) =</span> energy planets
	# f <span class="sym">=</span> fwrites <span class="sym">(</span>toString e<span class="sym">+++</span><span class="str">&quot;\n&quot;</span><span class="sym">)</span> f

	# planets <span class="sym">=</span> advance_loop n <span class="num">0.01</span> planets

	# <span class="sym">(</span>e<span class="sym">,</span>planets<span class="sym">) =</span> energy planets
	# f <span class="sym">=</span> fwrites <span class="sym">(</span>toString e<span class="sym">+++</span><span class="str">&quot;\n&quot;</span><span class="sym">)</span> f

 <span class="sym">=</span>	f
<span class="kwa">where</span>
	advance_loop <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span>DTime <span class="sym">!*</span>{Planet} <span class="sym">-&gt; *</span>{Planet}
	advance_loop n dt p
		<span class="sym">|</span> n <span class="sym">&lt;</span> <span class="num">0</span> <span class="sym">=</span> p
		# p <span class="sym">=</span> advance dt p
		<span class="sym">=</span> advance_loop <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> dt p


