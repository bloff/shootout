#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="sym">-</span>e main <span class="sym">-</span>s
<span class="sym">!</span>#

<span class="slc">;;; $Id: strcat-guile-2.code,v 1.8 2006-09-20 05:52:40 bfulgham Exp $</span>
<span class="slc">;;; http://shootout.alioth.debian.org/</span>

<span class="slc">;;; this version uses guile's &quot;native&quot; string concatention function</span>

<span class="sym">(</span>use<span class="sym">-</span>modules <span class="sym">(</span>ice<span class="sym">-</span><span class="num">9</span> format<span class="sym">))</span>

<span class="sym">(</span>define hello <span class="str">&quot;hello</span>
<span class="str">&quot;</span><span class="sym">)</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))</span>
	<span class="sym">(</span>str <span class="str">&quot;&quot;</span><span class="sym">))</span>
    <span class="sym">(</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(+</span> i <span class="num">1</span><span class="sym">)))</span>
	<span class="sym">((=</span> i n<span class="sym">))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> str <span class="sym">(</span>string<span class="sym">-</span><span class="kwa">append</span> str hello<span class="sym">)))</span>
    <span class="sym">(</span>display <span class="sym">(</span>string<span class="sym">-</span><span class="kwa">length</span> str<span class="sym">))</span>
    <span class="sym">(</span>newline<span class="sym">)))</span>
