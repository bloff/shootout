<span class="com">(* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Johannes Wei√ül (OCaml version of Isaac Gouy's clean version)</span>
<span class="com">*)</span>

<span class="kwa">let rec</span> loop k n alt a1 a2 a3 a4 a5 a6 a7 a8 a9 <span class="sym">=</span>
  <span class="kwa">if</span> k <span class="sym">&lt;=</span> n <span class="kwa">then</span>
    loop <span class="sym">(</span>k <span class="sym">+</span>. <span class="num">1.0</span><span class="sym">)</span> n <span class="sym">(-</span>.alt<span class="sym">)</span>
      <span class="sym">(</span>a1 <span class="sym">+</span>. <span class="sym">(</span><span class="num">2.0</span> <span class="sym">/</span>. <span class="num">3.0</span><span class="sym">) ** (</span>k <span class="sym">-</span>. <span class="num">1.0</span><span class="sym">))</span>
      <span class="sym">(</span>a2 <span class="sym">+</span>. k <span class="sym">** (-</span><span class="num">0.5</span><span class="sym">))</span>
      <span class="sym">(</span>a3 <span class="sym">+</span>. <span class="num">1.0</span> <span class="sym">/</span>. <span class="sym">(</span>k <span class="sym">*</span>. <span class="sym">(</span>k <span class="sym">+</span>. <span class="num">1.0</span><span class="sym">)))</span>
      <span class="sym">(</span>a4 <span class="sym">+</span>. <span class="num">1.0</span> <span class="sym">/</span>. <span class="sym">((</span>k <span class="sym">*</span>. k<span class="sym">) *</span>. k <span class="sym">*</span>. <span class="sym">((</span>sin k<span class="sym">) *</span>. <span class="sym">(</span>sin k<span class="sym">))))</span>
      <span class="sym">(</span>a5 <span class="sym">+</span>. <span class="num">1.0</span> <span class="sym">/</span>. <span class="sym">((</span>k <span class="sym">*</span>. k<span class="sym">) *</span>. k <span class="sym">*</span>. <span class="sym">((</span>cos k<span class="sym">) *</span>. <span class="sym">(</span>cos k<span class="sym">))))</span>
      <span class="sym">(</span>a6 <span class="sym">+</span>. <span class="num">1.0</span> <span class="sym">/</span>. k<span class="sym">)</span>
      <span class="sym">(</span>a7 <span class="sym">+</span>. <span class="num">1.0</span> <span class="sym">/</span>. <span class="sym">(</span>k <span class="sym">*</span>. k<span class="sym">))</span>
      <span class="sym">(</span>a8 <span class="sym">+</span>. alt <span class="sym">/</span>. k<span class="sym">)</span>
      <span class="sym">(</span>a9 <span class="sym">+</span>. alt <span class="sym">/</span>. <span class="sym">(</span><span class="num">2.0</span> <span class="sym">*</span>. k <span class="sym">-</span>. <span class="num">1.0</span><span class="sym">))</span>
  <span class="kwa">else</span>
    <span class="sym">[</span>a1<span class="sym">;</span> a2<span class="sym">;</span> a3<span class="sym">;</span> a4<span class="sym">;</span> a5<span class="sym">;</span> a6<span class="sym">;</span> a7<span class="sym">;</span> a8<span class="sym">;</span> a9<span class="sym">]</span>

<span class="kwa">let</span> _ <span class="sym">=</span>
  <span class="kwa">if</span> Array.length Sys.argv <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwa">then</span>
    <span class="kwa">let</span> n <span class="sym">=</span> float_of_string Sys.argv.<span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">in</span>
    <span class="kwa">let</span> names <span class="sym">= [</span><span class="str">&quot;(2/3)^k&quot;</span><span class="sym">;</span> <span class="str">&quot;k^-0.5&quot;</span><span class="sym">;</span> <span class="str">&quot;1/k(k+1)&quot;</span><span class="sym">;</span> <span class="str">&quot;Flint Hills&quot;</span><span class="sym">;</span>
                 <span class="str">&quot;Cookson Hills&quot;</span><span class="sym">;</span> <span class="str">&quot;Harmonic&quot;</span><span class="sym">;</span> <span class="str">&quot;Riemann Zeta&quot;</span><span class="sym">;</span>
                 <span class="str">&quot;Alternating Harmonic&quot;</span><span class="sym">;</span> <span class="str">&quot;Gregory&quot;</span><span class="sym">]</span> <span class="kwa">in</span>
    <span class="kwa">let</span> sums <span class="sym">=</span> loop <span class="num">1.0</span> n <span class="num">1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0</span> <span class="kwa">in</span>
    List.iter2 <span class="sym">(</span><span class="kwa">fun</span> x y <span class="sym">-&gt;</span> Printf.printf <span class="str">&quot;%.9f</span><span class="esc">\t</span><span class="str">%s</span><span class="esc">\n</span><span class="str">&quot;</span> x y<span class="sym">)</span> sums names
