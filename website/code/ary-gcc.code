<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">/* -*- mode: c -*-
 * $Id: ary-gcc.code,v 1.2 2004-11-08 08:15:12 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 *
 * this program is modified from:
 *   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html
 * Timing Trials, or, the Trials of Timing: Experiments with Scripting
 * and User-Interface Languages&lt;/a&gt; by Brian W. Kernighan and
 * Christopher J. Van Wyk.
 *
 * I added free() to deallocate memory.
 */</FONT></I>

#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;stdio.h&gt;</FONT></B>
#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;stdlib.h&gt;</FONT></B>

<B><FONT COLOR="#228B22">int</FONT></B>
<B><FONT COLOR="#0000FF">main</FONT></B>(<B><FONT COLOR="#228B22">int</FONT></B> argc, <B><FONT COLOR="#228B22">char</FONT></B> *argv[]) {
    <B><FONT COLOR="#228B22">int</FONT></B> n = ((argc == 2) ? atoi(argv[1]) : 1);
    <B><FONT COLOR="#228B22">int</FONT></B> i, k, *x, *y;
	
    x = (<B><FONT COLOR="#228B22">int</FONT></B> *) calloc(n, <B><FONT COLOR="#A020F0">sizeof</FONT></B>(<B><FONT COLOR="#228B22">int</FONT></B>));
    y = (<B><FONT COLOR="#228B22">int</FONT></B> *) calloc(n, <B><FONT COLOR="#A020F0">sizeof</FONT></B>(<B><FONT COLOR="#228B22">int</FONT></B>));

    <B><FONT COLOR="#A020F0">for</FONT></B> (i = 0; i &lt; n; i++) {
	x[i] = i + 1;
    }
    <B><FONT COLOR="#A020F0">for</FONT></B> (k=0; k&lt;1000; k++) {
	<B><FONT COLOR="#A020F0">for</FONT></B> (i = n-1; i &gt;= 0; i--) {
	    y[i] += x[i];
	}
    }

    fprintf(stdout, <B><FONT COLOR="#BC8F8F">&quot;%d %d\n&quot;</FONT></B>, y[0], y[n-1]);

    free(x);
    free(y);

    <B><FONT COLOR="#A020F0">return</FONT></B>(0);
}</pre></td></tr></table>
