<span class="slc">// -*- mode: c++ -*-
</span><span class="slc">// $Id: ary-icpp.code,v 1.5 2005-06-08 07:55:41 bfulgham Exp $
</span><span class="slc">// http://shootout.alioth.debian.org/
</span>
<span class="dir">#include &lt;iostream&gt;
</span><span class="dir">#include &lt;vector&gt;
</span>
<span class="kwa">using namespace</span> std<span class="sym">;

</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {
</span>    <span class="kwb">int</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span>    <span class="kwc">typedef</span> vector<span class="sym">&lt;</span><span class="kwb">int</span><span class="sym">&gt;</span> ARY<span class="sym">;
</span>    ARY x<span class="sym">(</span>n<span class="sym">);
</span>    ARY y<span class="sym">(</span>n<span class="sym">);

</span>    <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>	x<span class="sym">[</span>i<span class="sym">] =</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">;
    }
</span>    <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> k<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> k<span class="sym">&lt;</span><span class="num">1000</span><span class="sym">;</span> k<span class="sym">++) {
</span>	<span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> n <span class="num">- 1</span><span class="sym">;</span> i <span class="sym">&gt;=</span> <span class="num">0</span><span class="sym">; --</span>i<span class="sym">) {
</span>	    y<span class="sym">[</span>i<span class="sym">] +=</span> x<span class="sym">[</span>i<span class="sym">];
	}
    }

</span>    cout <span class="sym">&lt;&lt;</span> y<span class="sym">[</span><span class="num">0</span><span class="sym">] &lt;&lt;</span> <span class="str">&quot; &quot;</span> <span class="sym">&lt;&lt;</span> y<span class="sym">.</span>back<span class="sym">() &lt;&lt;</span> endl<span class="sym">;
}</span>
