<span class="slc">#!/usr/bin/ruby</span>
<span class="slc"># -*- mode: ruby -*-</span>
<span class="slc"># $Id: except-ruby.code,v 1.7 2005-12-31 16:45:33 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwb">$HI</span> = <span class="num">0</span>
<span class="kwb">$LO</span> = <span class="num">0</span>
NUM = <span class="kwd">Integer</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">1</span>)


<span class="kwa">class</span> Lo_Exception <span class="sym">&lt;</span> Exception
    <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>num)
        &#64;value = num
        <span class="kwa">return self</span>
    <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">class</span> Hi_Exception <span class="sym">&lt;</span> Exception
    <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>num)
        &#64;value = num
        <span class="kwa">return self</span>
    <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">some_function</span><span class="sym">(</span>num)
    <span class="kwa">begin</span>
	<span class="kwd">hi_function</span><span class="sym">(</span>num)
    <span class="kwa">rescue</span>
        print <span class="str">&quot;We shouldn't get here, exception is: #{$!.type}</span><span class="esc">\n</span><span class="str">&quot;</span>
    <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">hi_function</span><span class="sym">(</span>num)
    <span class="kwa">begin</span>
	<span class="kwd">lo_function</span><span class="sym">(</span>num)
    <span class="kwa">rescue</span> Hi_Exception
	<span class="kwb">$HI</span> = <span class="kwb">$HI</span> <span class="sym">+</span> <span class="num">1</span>
    <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">lo_function</span><span class="sym">(</span>num)
    <span class="kwa">begin</span>
	<span class="kwd">blowup</span><span class="sym">(</span>num)
    <span class="kwa">rescue</span> Lo_Exception
	<span class="kwb">$LO</span> = <span class="kwb">$LO</span> <span class="sym">+</span> <span class="num">1</span>
    <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">blowup</span><span class="sym">(</span>num)
    <span class="kwa">if</span> num % <span class="num">2</span> == <span class="num">0</span>
	raise Lo_Exception<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>num)
    <span class="kwa">else</span>
	raise Hi_Exception<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>num)
    <span class="kwa">end</span>
<span class="kwa">end</span>


<span class="kwa">for</span> iter <span class="kwa">in</span> <span class="num">1</span> <span class="sym">..</span> NUM
    <span class="kwd">some_function</span><span class="sym">(</span>iter)
<span class="kwa">end</span>
print <span class="str">&quot;Exceptions: HI=&quot;</span><span class="sym">,</span> <span class="kwb">$HI</span><span class="sym">,</span> <span class="str">&quot; / LO=&quot;</span><span class="sym">,</span> <span class="kwb">$LO</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>
