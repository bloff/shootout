<span class="line">    1 </span><span class="slc">%%% $Id: matrix-oz.code,v 1.4 2004-11-13 07:42:14 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">%%% http://dada.perl.it/shootout/
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">%%%
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">%%% contributed by Isaac Gouy
</span><span class="line">    5 </span><span class="slc"></span>
<span class="line">    6 </span><span class="slc">%%  Usage: start from command line with
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">%%     ozc -x matrix.oz -o matrix.oz.exe
</span><span class="line">    8 </span><span class="slc"></span><span class="slc">%%     matrix.oz.exe 300
</span><span class="line">    9 </span><span class="slc"></span>
<span class="line">   10 </span><span class="kwa">functor
</span><span class="line">   11 </span><span class="kwa">import</span> System Application
<span class="line">   12 </span>
<span class="line">   13 </span><span class="kwb">define
</span><span class="line">   14 </span><span class="kwb">
</span><span class="line">   15 </span><span class="kwb">   proc</span> <span class="sym">{</span>MakeMatrix Rows Cols M<span class="sym">}
</span><span class="line">   16 </span><span class="sym"></span>      <span class="kwa">local</span> Count <span class="kwb">in
</span><span class="line">   17 </span><span class="kwb"></span>     <span class="sym">{</span>NewArray <span class="num">0</span> Rows<span class="num">-1 0</span> M<span class="sym">}
</span><span class="line">   18 </span><span class="sym"></span>     Count <span class="sym">={</span>NewCell <span class="num">0</span><span class="sym">}
</span><span class="line">   19 </span><span class="sym"></span>     <span class="kwb">for</span> I <span class="kwb">in</span> <span class="num">0</span>..Rows<span class="num">-1</span> <span class="kwb">do
</span><span class="line">   20 </span><span class="kwb"></span>        <span class="kwa">local</span> R <span class="kwb">in
</span><span class="line">   21 </span><span class="kwb"></span>           <span class="sym">{</span>NewArray <span class="num">0</span> Cols<span class="num">-1 0</span> R<span class="sym">}
</span><span class="line">   22 </span><span class="sym">           {</span>Put M I R<span class="sym">}
</span><span class="line">   23 </span><span class="sym"></span>           <span class="kwb">for</span> J <span class="kwb">in</span> <span class="num">0</span>..Cols<span class="num">-1</span> <span class="kwb">do
</span><span class="line">   24 </span><span class="kwb"></span>          <span class="sym">{</span>Assign Count <span class="sym">{</span>Access Count<span class="sym">}+</span><span class="num">1</span><span class="sym">}
</span><span class="line">   25 </span><span class="sym">          {</span>Put R J <span class="sym">{</span>Access Count<span class="sym">}}
</span><span class="line">   26 </span><span class="sym"></span>           <span class="kwb">end
</span><span class="line">   27 </span><span class="kwb">        end
</span><span class="line">   28 </span><span class="kwb">     end
</span><span class="line">   29 </span><span class="kwb">      end
</span><span class="line">   30 </span><span class="kwb">   end
</span><span class="line">   31 </span><span class="kwb">
</span><span class="line">   32 </span><span class="kwb">
</span><span class="line">   33 </span><span class="kwb">   proc</span> <span class="sym">{</span>MMult M1 M2 MM<span class="sym">}
</span><span class="line">   34 </span><span class="sym"></span>      <span class="kwa">local</span> S1 N1 Prod S2 N2 <span class="kwb">in
</span><span class="line">   35 </span><span class="kwb"></span>     S1 <span class="sym">= {</span>Array.low M1<span class="sym">}
</span><span class="line">   36 </span><span class="sym"></span>     N1 <span class="sym">= {</span>Array.high M1<span class="sym">}
</span><span class="line">   37 </span><span class="sym"></span>     S2 <span class="sym">= {</span>Array.low <span class="sym">{</span>Get M1 S1<span class="sym">}}
</span><span class="line">   38 </span><span class="sym"></span>     N2 <span class="sym">= {</span>Array.high <span class="sym">{</span>Get M1 S1<span class="sym">}}
</span><span class="line">   39 </span><span class="sym"></span>     Prod <span class="sym">= {</span>NewCell <span class="num">0</span><span class="sym">}
</span><span class="line">   40 </span><span class="sym">     {</span>NewArray S1 N1 <span class="num">0</span> MM<span class="sym">}
</span><span class="line">   41 </span><span class="sym"></span>     <span class="kwb">for</span> I <span class="kwb">in</span> S1..N1 <span class="kwb">do
</span><span class="line">   42 </span><span class="kwb"></span>        <span class="kwa">local</span> R <span class="kwb">in
</span><span class="line">   43 </span><span class="kwb"></span>           <span class="sym">{</span>NewArray S1 N1 <span class="num">0</span> R<span class="sym">}
</span><span class="line">   44 </span><span class="sym">           {</span>Put MM I R<span class="sym">}
</span><span class="line">   45 </span><span class="sym"></span>           <span class="kwb">for</span> J <span class="kwb">in</span> S1..N1 <span class="kwb">do
</span><span class="line">   46 </span><span class="kwb"></span>          <span class="sym">{</span>Assign Prod <span class="num">0</span><span class="sym">}
</span><span class="line">   47 </span><span class="sym"></span>          <span class="kwb">for</span> K <span class="kwb">in</span> S2..N2 <span class="kwb">do
</span><span class="line">   48 </span><span class="kwb"></span>             <span class="sym">{</span>Assign Prod <span class="sym">{</span>Get <span class="sym">{</span>Get M1 I<span class="sym">}</span> K<span class="sym">}*
</span><span class="line">   49 </span><span class="sym">              {</span>Get <span class="sym">{</span>Get M2 K<span class="sym">}</span> J<span class="sym">}+{</span>Access Prod<span class="sym">}}
</span><span class="line">   50 </span><span class="sym"></span>          <span class="kwb">end
</span><span class="line">   51 </span><span class="kwb"></span>          <span class="sym">{</span>Put R J <span class="sym">{</span>Access Prod<span class="sym">}}
</span><span class="line">   52 </span><span class="sym"></span>           <span class="kwb">end
</span><span class="line">   53 </span><span class="kwb">        end
</span><span class="line">   54 </span><span class="kwb">     end
</span><span class="line">   55 </span><span class="kwb">      end
</span><span class="line">   56 </span><span class="kwb">   end
</span><span class="line">   57 </span><span class="kwb">
</span><span class="line">   58 </span><span class="kwb">   proc</span> <span class="sym">{</span>RepeatMMult N M1 M2 MM<span class="sym">}
</span><span class="line">   59 </span><span class="sym"></span>      <span class="kwa">local</span> T <span class="kwb">in
</span><span class="line">   60 </span><span class="kwb">     if</span> N <span class="sym">&gt;</span> <span class="num">1</span> <span class="kwb">then
</span><span class="line">   61 </span><span class="kwb"></span>        <span class="sym">{</span>MMult M1 M2 T<span class="sym">}
</span><span class="line">   62 </span><span class="sym">        {</span>RepeatMMult N<span class="num">-1</span> M1 M2 MM<span class="sym">}
</span><span class="line">   63 </span><span class="sym"></span>     <span class="kwb">else</span> <span class="sym">{</span>MMult M1 M2 T<span class="sym">}</span> MM <span class="sym">=</span> T <span class="kwb">end
</span><span class="line">   64 </span><span class="kwb">      end
</span><span class="line">   65 </span><span class="kwb">   end
</span><span class="line">   66 </span><span class="kwb">
</span><span class="line">   67 </span><span class="kwb">in
</span><span class="line">   68 </span><span class="kwb"></span>   <span class="kwa">local</span> Args Repeat N M1 M2 MM <span class="kwb">in
</span><span class="line">   69 </span><span class="kwb"></span>      <span class="sym">[</span>Args<span class="sym">] = {</span>Application.getArgs plain<span class="sym">}
</span><span class="line">   70 </span><span class="sym"></span>      Repeat <span class="sym">= {</span>String.toInt Args<span class="sym">}
</span><span class="line">   71 </span><span class="sym"></span>      N <span class="sym">=</span> <span class="num">30
</span><span class="line">   72 </span><span class="num"></span>      <span class="sym">{</span>MakeMatrix N N M1<span class="sym">}
</span><span class="line">   73 </span><span class="sym">      {</span>MakeMatrix N N M2<span class="sym">}
</span><span class="line">   74 </span><span class="sym">      {</span>RepeatMMult Repeat M1 M2 MM<span class="sym">}
</span><span class="line">   75 </span><span class="sym">
</span><span class="line">   76 </span><span class="sym">      {</span>System.printInfo <span class="sym">{</span>Get <span class="sym">{</span>Get MM <span class="num">0</span><span class="sym">}</span> <span class="num">0</span><span class="sym">}}{</span>System.printInfo <span class="str">' '</span><span class="sym">}
</span><span class="line">   77 </span><span class="sym">      {</span>System.printInfo <span class="sym">{</span>Get <span class="sym">{</span>Get MM <span class="num">2</span><span class="sym">}</span> <span class="num">3</span><span class="sym">}}{</span>System.printInfo <span class="str">' '</span><span class="sym">}</span> <span class="slc">% get col 3 out of row 2
</span><span class="line">   78 </span><span class="slc"></span>      <span class="sym">{</span>System.printInfo <span class="sym">{</span>Get <span class="sym">{</span>Get MM <span class="num">3</span><span class="sym">}</span> <span class="num">2</span><span class="sym">}}{</span>System.printInfo <span class="str">' '</span><span class="sym">}</span> <span class="slc">% get col 2 out of row 3
</span><span class="line">   79 </span><span class="slc"></span>      <span class="sym">{</span>System.showInfo <span class="sym">{</span>Get <span class="sym">{</span>Get MM <span class="num">4</span><span class="sym">}</span> <span class="num">4</span><span class="sym">} }
</span><span class="line">   80 </span><span class="sym"></span>   <span class="kwb">end
</span><span class="line">   81 </span><span class="kwb"></span>   <span class="sym">{</span>Application.exit <span class="num">0</span><span class="sym">}
</span><span class="line">   82 </span><span class="sym"></span><span class="kwb">end</span>
