<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/bin/bash
# -*- mode: lisp -*-
PROG=${0%.jl}
[ \! -f $PROG.jlc -o $0 -nt $PROG.jlc ] &amp;&amp;
    rep --batch --no-rc -l compiler -f compile-batch $0
exec rep <B><FONT COLOR="#BC8F8F">&quot;$PROG.jlc&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$@&quot;</FONT></B>
!#

<I><FONT COLOR="#B22222">;;; $Id: nestedloop-rep.code,v 1.2 2004-11-08 08:15:18 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(define-structure main ()
  (open rep rep.system)

  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((arg (get-command-line-option <B><FONT COLOR="#BC8F8F">&quot;--num&quot;</FONT></B> t))
	 (n (<B><FONT COLOR="#A020F0">if</FONT></B> arg (read-from-string arg) 1))
	 (x 0))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((a 0 (+ a 1)))
	((= a n))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((b 0 (+ b 1)))
	  ((= b n))
	(<B><FONT COLOR="#A020F0">do</FONT></B> ((c 0 (+ c 1)))
	    ((= c n))
	  (<B><FONT COLOR="#A020F0">do</FONT></B> ((d 0 (+ d 1)))
	      ((= d n))
	    (<B><FONT COLOR="#A020F0">do</FONT></B> ((e 0 (+ e 1)))
		((= e n))
	      (<B><FONT COLOR="#A020F0">do</FONT></B> ((f 0 (+ f 1)))
		  ((= f n))
		(setq x (+ x 1))))))))
    (format standard-output <B><FONT COLOR="#BC8F8F">&quot;%d\n&quot;</FONT></B> x)))</pre></td></tr></table>
