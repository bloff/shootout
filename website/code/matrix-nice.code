<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">/* The Great Computer Language Shootout 
   http://shootout.alioth.debian.org/
   contributed by Isaac Gouy

   Transliterated from the Java implementation

To compile:	
   nicec --sourcepath=.. -d=. -a matrix.jar matrix

To run:
   java -ea -jar matrix.jar 300
*/</FONT></I>


<B><FONT COLOR="#A020F0">import</FONT></B> ackermann; <I><FONT COLOR="#B22222">// reuse toSinglePositiveInt
</FONT></I>
<B><FONT COLOR="#A020F0">void</FONT></B> main(String[] args){
   var n =  toSinglePositiveInt(args);
   let <B><FONT COLOR="#A020F0">int</FONT></B> SIZE = 30;

   let m1 = mkmatrix(SIZE, SIZE);
   let m2 = mkmatrix(SIZE, SIZE);
   let mm = <B><FONT COLOR="#A020F0">new</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B>[SIZE][SIZE];

   <B><FONT COLOR="#A020F0">while</FONT></B> (n-- &gt; 0) mmult(m1, m2, mm);

   print(mm[0][0]); print(<B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>);
   print(mm[2][3]); print(<B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>);      
   print(mm[3][2]); print(<B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>);
   println(mm[4][4]);
}


<B><FONT COLOR="#A020F0">int</FONT></B>[][] mkmatrix(<B><FONT COLOR="#A020F0">int</FONT></B> nRows, <B><FONT COLOR="#A020F0">int</FONT></B> nCols) {
   var count = 1;
   let m = <B><FONT COLOR="#A020F0">new</FONT></B> <B><FONT COLOR="#A020F0">int</FONT></B>[nRows][nCols];
   <B><FONT COLOR="#A020F0">for</FONT></B> (var i = 0; i &lt; nRows; i++) 
      <B><FONT COLOR="#A020F0">for</FONT></B> (var j = 0; j &lt; nCols; j++) 
         m[i][j] = count++;
   <B><FONT COLOR="#A020F0">return</FONT></B> m;
}


<B><FONT COLOR="#A020F0">void</FONT></B> mmult(<B><FONT COLOR="#A020F0">int</FONT></B>[][] m1, <B><FONT COLOR="#A020F0">int</FONT></B>[][] m2, <B><FONT COLOR="#A020F0">int</FONT></B>[][] m) {
   let nRows = m1.length;
   let nCols = nRows; <I><FONT COLOR="#B22222">// Assume a square matrix
</FONT></I>   <B><FONT COLOR="#A020F0">for</FONT></B> (var i=0; i &lt; nRows; i++) 
      <B><FONT COLOR="#A020F0">for</FONT></B> (var j = 0; j &lt; nCols; j++) {
         <B><FONT COLOR="#A020F0">int</FONT></B> val = 0;
         <B><FONT COLOR="#A020F0">for</FONT></B> (var k = 0; k &lt; nCols; k++) 
            val += m1[i][k] * m2[k][j];
         m[i][j] = val;
      }
}</pre></td></tr></table>
