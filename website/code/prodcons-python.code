<span class="slc">#!/usr/bin/python</span>
<span class="slc"># $Id: prodcons-python.code,v 1.12 2007-05-18 03:09:58 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">import</span> sys
<span class="kwa">from</span> threading <span class="kwa">import</span> <span class="sym">*</span>

access <span class="sym">=</span> <span class="kwd">Condition</span><span class="sym">()</span>
count <span class="sym">=</span> <span class="num">0</span>
consumed <span class="sym">=</span> <span class="num">0</span>
produced <span class="sym">=</span> <span class="num">0</span>
data <span class="sym">=</span> <span class="num">0</span>

<span class="kwa">def</span> <span class="kwd">consumer</span><span class="sym">(</span>n<span class="sym">):</span>
    <span class="kwa">global</span> count<span class="sym">,</span> data<span class="sym">,</span> consumed
    <span class="kwa">while</span> <span class="num">1</span><span class="sym">:</span>
        access<span class="sym">.</span><span class="kwd">acquire</span><span class="sym">()</span>
        <span class="kwa">while</span> count <span class="sym">==</span> <span class="num">0</span><span class="sym">:</span>
            access<span class="sym">.</span><span class="kwd">wait</span><span class="sym">()</span>
        i <span class="sym">=</span> data
        count <span class="sym">=</span> <span class="num">0</span>
        access<span class="sym">.</span><span class="kwd">notify</span><span class="sym">()</span>
        access<span class="sym">.</span><span class="kwd">release</span><span class="sym">()</span>
        consumed <span class="sym">+=</span> <span class="num">1</span>
        <span class="kwa">if</span> i <span class="sym">==</span> n<span class="sym">:</span>
            <span class="kwa">break</span>

<span class="kwa">def</span> <span class="kwd">producer</span><span class="sym">(</span>n<span class="sym">):</span>
    <span class="kwa">global</span> count<span class="sym">,</span> data<span class="sym">,</span> produced
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">):</span>
        access<span class="sym">.</span><span class="kwd">acquire</span><span class="sym">()</span>
        <span class="kwa">while</span> count <span class="sym">==</span> <span class="num">1</span><span class="sym">:</span>
            access<span class="sym">.</span><span class="kwd">wait</span><span class="sym">()</span>
        data <span class="sym">=</span> i
        count <span class="sym">=</span> <span class="num">1</span>
        access<span class="sym">.</span><span class="kwd">notify</span><span class="sym">()</span>
        access<span class="sym">.</span><span class="kwd">release</span><span class="sym">()</span>
        produced <span class="sym">+=</span> <span class="num">1</span>

<span class="kwa">def</span> <span class="kwd">main</span><span class="sym">(</span>n<span class="sym">):</span>
    t1 <span class="sym">=</span> <span class="kwd">Thread</span><span class="sym">(</span>target<span class="sym">=</span>producer<span class="sym">,</span> args<span class="sym">=(</span>n<span class="sym">,))</span>
    t2 <span class="sym">=</span> <span class="kwd">Thread</span><span class="sym">(</span>target<span class="sym">=</span>consumer<span class="sym">,</span> args<span class="sym">=(</span>n<span class="sym">,))</span>
    t1<span class="sym">.</span><span class="kwd">start</span><span class="sym">()</span>
    t2<span class="sym">.</span><span class="kwd">start</span><span class="sym">()</span>
    t1<span class="sym">.</span><span class="kwd">join</span><span class="sym">()</span>
    t2<span class="sym">.</span><span class="kwd">join</span><span class="sym">()</span>
    <span class="kwa">print</span> produced<span class="sym">,</span> consumed

<span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span>


