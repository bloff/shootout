<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">-- $Id: lists-hugs.code,v 1.2 2004-11-08 08:15:15 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">-- http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">-- from Aaron Denney
</FONT></I><I><FONT COLOR="#B22222">-- modified by Einar Karttunen
</FONT></I><I><FONT COLOR="#B22222">-- Uses edison library - compile with &quot;-package data&quot;
</FONT></I>
<B><FONT COLOR="#A020F0">import</FONT></B> System(getArgs)
<B><FONT COLOR="#A020F0">import</FONT></B> qualified SimpleQueue as L

copy = fmap id

test <B><FONT COLOR="#228B22">:: Int -&gt; Int
</FONT></B>test size | isok1 &amp;&amp; isok2 = L.size l1'
          | otherwise = error <B><FONT COLOR="#BC8F8F">&quot;not OK&quot;</FONT></B>
                  <B><FONT COLOR="#A020F0">where</FONT></B> l1 = L.fromList [1..size]
                        l2 = copy l1
                        l3 = L.foldl (L.snoc) L.empty l2
                        l2' = L.foldr (flip L.snoc) L.empty l3
                        l1' = L.reverse l1
                        isok1 = L.lhead l1' == size
                        isok2 = l1' == l2'

for n = foldl (\p <B><FONT COLOR="#A020F0">_ </FONT></B>-&gt; <B><FONT COLOR="#A020F0">if</FONT></B> test p == p <B><FONT COLOR="#A020F0">then</FONT></B> p <B><FONT COLOR="#A020F0">else</FONT></B> 0) 10000 [1..n]
main  = getArgs &gt;&gt;= print . for . read . head</pre></td></tr></table>
