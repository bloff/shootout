<span class="slc">-- $Id: lists-hugs.code,v 1.5 2005-03-15 11:07:58 bfulgham Exp $
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">-- from Aaron Denney
</span><span class="slc">-- modified by Einar Karttunen
</span><span class="slc">-- Uses edison library - compile with &quot;-package data&quot;
</span>
<span class="kwa">import</span> System<span class="sym">(</span>getArgs<span class="sym">)
</span><span class="kwa">import qualified</span> SimpleQueue <span class="kwa">as</span> L

copy <span class="sym">=</span> fmap id

test <span class="sym">::</span> <span class="kwb">Int</span> <span class="sym">-&gt;</span> <span class="kwb">Int
</span>test size <span class="sym">|</span> isok1 <span class="sym">&amp;&amp;</span> isok2 <span class="sym">=</span> L.size l1<span class="str">'
          | otherwise = error &quot;not OK&quot;
                  where l1 = L.fromList [1..size]
                        l2 = copy l1
                        l3 = L.foldl (L.snoc) L.empty l2
                        l2'</span> <span class="sym">=</span> L.foldr <span class="sym">(</span>flip L.snoc<span class="sym">)</span> L.empty l3
                        l1<span class="str">' = L.reverse l1
                        isok1 = L.lhead l1'</span> <span class="sym">==</span> size
                        isok2 <span class="sym">=</span> l1<span class="str">' == l2'</span>

for n <span class="sym">=</span> foldl <span class="sym">(</span>\p _ <span class="sym">-&gt;</span> if test p <span class="sym">==</span> p <span class="kwa">then</span> p <span class="kwa">else</span> <span class="num">0</span><span class="sym">)</span> <span class="num">10000</span> <span class="sym">[</span><span class="num">1</span>..n<span class="sym">]
</span>main  <span class="sym">=</span> getArgs <span class="sym">&gt;&gt;=</span> print . for . read . head
