<span class="slc">-- The Great Computer Language Shootout
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">--
</span><span class="slc">-- contributed by Isaac Gouy
</span>

<span class="kwa">local function</span> link<span class="sym">(</span>n<span class="sym">)
</span>   <span class="kwa">local</span> message<span class="sym">,</span> <span class="kwa">next</span> <span class="sym">=</span> <span class="num">0

</span>   <span class="kwa">if</span> n<span class="num">-1</span> <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">then
      next</span> <span class="sym">=</span> coroutine.create<span class="sym">(</span>link<span class="sym">)
</span>      _<span class="sym">,</span>message <span class="sym">=</span> coroutine.resume<span class="sym">(</span><span class="kwa">next</span><span class="sym">,</span>n<span class="num">-1</span><span class="sym">)
</span>   <span class="kwa">end
</span>   coroutine.yield<span class="sym">(</span>message <span class="sym">+</span> <span class="num">1</span><span class="sym">)
</span><span class="kwa">end


local</span> n <span class="sym">=</span> <span class="kwa">tonumber</span><span class="sym">(</span>arg<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">or</span> <span class="num">1000
</span><span class="kwa">local</span> message <span class="sym">=</span> <span class="num">0
</span><span class="kwa">local</span> chain <span class="sym">=</span> coroutine.create<span class="sym">(</span>link<span class="sym">)

</span>_<span class="sym">,</span>message <span class="sym">=</span> coroutine.resume<span class="sym">(</span>chain<span class="sym">,</span>n<span class="sym">)
</span>io.<span class="kwa">write</span><span class="sym">(</span>message<span class="sym">)</span>
