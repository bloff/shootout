<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org</span>
<span class="slc">#</span>
<span class="slc"># Optimized for Ruby by Jesse Millikan</span>
<span class="slc"># From version ported by Michael Neumann from the C gcc version,</span>
<span class="slc"># which was written by Christoph Bauer.</span>

SOLAR_MASS = <span class="num">4</span> <span class="sym">*</span> Math<span class="sym">::</span>PI<span class="sym">**</span><span class="num">2</span>
DAYS_PER_YEAR = <span class="num">365.24</span>

<span class="kwa">class</span> Planet
 attr_accessor <span class="sym">:</span>x<span class="sym">, :</span>y<span class="sym">, :</span>z<span class="sym">, :</span>vx<span class="sym">, :</span>vy<span class="sym">, :</span>vz<span class="sym">, :</span>mass

 <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">,</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> mass)
  &#64;x<span class="sym">,</span> &#64;y<span class="sym">,</span> &#64;z = x<span class="sym">,</span> y<span class="sym">,</span> z
  &#64;vx<span class="sym">,</span> &#64;vy<span class="sym">,</span> &#64;vz = vx <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> vy <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> vz <span class="sym">*</span> DAYS_PER_YEAR
  &#64;mass = mass <span class="sym">*</span> SOLAR_MASS
 <span class="kwa">end</span>

 <span class="kwa">def</span> <span class="kwd">move_from_i</span><span class="sym">(</span>bodies<span class="sym">,</span> nbodies<span class="sym">,</span> dt<span class="sym">,</span> i)
  <span class="kwa">while</span> i <span class="sym">&lt;</span> nbodies
   b2 = bodies<span class="sym">[</span>i<span class="sym">]</span>
   dx = &#64;x <span class="sym">-</span> b2<span class="sym">.</span>x
   dy = &#64;y <span class="sym">-</span> b2<span class="sym">.</span>y
   dz = &#64;z <span class="sym">-</span> b2<span class="sym">.</span>z

   distance = Math<span class="sym">.</span><span class="kwd">sqrt</span><span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz)
   mag = dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance)
   b_mass_mag<span class="sym">,</span> b2_mass_mag = &#64;mass <span class="sym">*</span> mag<span class="sym">,</span> b2<span class="sym">.</span>mass <span class="sym">*</span> mag

   &#64;vx <span class="sym">-</span>= dx <span class="sym">*</span> b2_mass_mag
   &#64;vy <span class="sym">-</span>= dy <span class="sym">*</span> b2_mass_mag
   &#64;vz <span class="sym">-</span>= dz <span class="sym">*</span> b2_mass_mag
   b2<span class="sym">.</span>vx <span class="sym">+</span>= dx <span class="sym">*</span> b_mass_mag
   b2<span class="sym">.</span>vy <span class="sym">+</span>= dy <span class="sym">*</span> b_mass_mag
   b2<span class="sym">.</span>vz <span class="sym">+</span>= dz <span class="sym">*</span> b_mass_mag
   i <span class="sym">+</span>= <span class="num">1</span>
  <span class="kwa">end</span>

  &#64;x <span class="sym">+</span>= dt <span class="sym">*</span> &#64;vx
  &#64;y <span class="sym">+</span>= dt <span class="sym">*</span> &#64;vy
  &#64;z <span class="sym">+</span>= dt <span class="sym">*</span> &#64;vz
 <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">energy</span><span class="sym">(</span>bodies)
  e = <span class="num">0.0</span>
  nbodies = bodies<span class="sym">.</span>size

  <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">0</span> <span class="sym">...</span> nbodies
    b = bodies<span class="sym">[</span>i<span class="sym">]</span>
    e <span class="sym">+</span>= <span class="num">0.5</span> <span class="sym">*</span> b<span class="sym">.</span>mass <span class="sym">* (</span>b<span class="sym">.</span>vx <span class="sym">*</span> b<span class="sym">.</span>vx <span class="sym">+</span> b<span class="sym">.</span>vy <span class="sym">*</span> b<span class="sym">.</span>vy <span class="sym">+</span> b<span class="sym">.</span>vz <span class="sym">*</span> b<span class="sym">.</span>vz)
    <span class="kwa">for</span> j <span class="kwa">in</span> <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span>) <span class="sym">...</span> nbodies
      b2 = bodies<span class="sym">[</span>j<span class="sym">]</span>
      dx = b<span class="sym">.</span>x <span class="sym">-</span> b2<span class="sym">.</span>x
      dy = b<span class="sym">.</span>y <span class="sym">-</span> b2<span class="sym">.</span>y
      dz = b<span class="sym">.</span>z <span class="sym">-</span> b2<span class="sym">.</span>z
      distance = Math<span class="sym">.</span><span class="kwd">sqrt</span><span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz)
      e <span class="sym">-</span>= <span class="sym">(</span>b<span class="sym">.</span>mass <span class="sym">*</span> b2<span class="sym">.</span>mass) <span class="sym">/</span> distance
    <span class="kwa">end</span>
  <span class="kwa">end</span>
  e
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">offset_momentum</span><span class="sym">(</span>bodies)
  px<span class="sym">,</span> py<span class="sym">,</span> pz = <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span>

  <span class="kwa">for</span> b <span class="kwa">in</span> bodies
    m = b<span class="sym">.</span>mass
    px <span class="sym">+</span>= b<span class="sym">.</span>vx <span class="sym">*</span> m
    py <span class="sym">+</span>= b<span class="sym">.</span>vy <span class="sym">*</span> m
    pz <span class="sym">+</span>= b<span class="sym">.</span>vz <span class="sym">*</span> m
  <span class="kwa">end</span>

  b = bodies<span class="sym">[</span><span class="num">0</span><span class="sym">]</span>
  b<span class="sym">.</span>vx = <span class="sym">-</span> px <span class="sym">/</span> SOLAR_MASS
  b<span class="sym">.</span>vy = <span class="sym">-</span> py <span class="sym">/</span> SOLAR_MASS
  b<span class="sym">.</span>vz = <span class="sym">-</span> pz <span class="sym">/</span> SOLAR_MASS
<span class="kwa">end</span>

BODIES = <span class="sym">[</span>
  <span class="slc"># sun</span>
  Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">1.0</span>)<span class="sym">,</span>

  <span class="slc"># jupiter</span>
  Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
    <span class="num">4.84143144246472090e+00</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">1.16032004402742839e+00</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">1.03622044471123109e-01</span><span class="sym">,</span>
    <span class="num">1.66007664274403694e-03</span><span class="sym">,</span>
    <span class="num">7.69901118419740425e-03</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">6.90460016972063023e-05</span><span class="sym">,</span>
    <span class="num">9.54791938424326609e-04</span>)<span class="sym">,</span>

  <span class="slc"># saturn</span>
  Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
    <span class="num">8.34336671824457987e+00</span><span class="sym">,</span>
    <span class="num">4.12479856412430479e+00</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">4.03523417114321381e-01</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">2.76742510726862411e-03</span><span class="sym">,</span>
    <span class="num">4.99852801234917238e-03</span><span class="sym">,</span>
    <span class="num">2.30417297573763929e-05</span><span class="sym">,</span>
    <span class="num">2.85885980666130812e-04</span>)<span class="sym">,</span>

  <span class="slc"># uranus</span>
  Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
    <span class="num">1.28943695621391310e+01</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">1.51111514016986312e+01</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">2.23307578892655734e-01</span><span class="sym">,</span>
    <span class="num">2.96460137564761618e-03</span><span class="sym">,</span>
    <span class="num">2.37847173959480950e-03</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">2.96589568540237556e-05</span><span class="sym">,</span>
    <span class="num">4.36624404335156298e-05</span>)<span class="sym">,</span>

  <span class="slc"># neptune</span>
  Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
    <span class="num">1.53796971148509165e+01</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span>
    <span class="num">1.79258772950371181e-01</span><span class="sym">,</span>
    <span class="num">2.68067772490389322e-03</span><span class="sym">,</span>
    <span class="num">1.62824170038242295e-03</span><span class="sym">,</span>
    <span class="sym">-</span><span class="num">9.51592254519715870e-05</span><span class="sym">,</span>
    <span class="num">5.15138902046611451e-05</span>)
<span class="sym">]</span>


n = <span class="kwd">Integer</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">]</span>)

<span class="kwd">offset_momentum</span><span class="sym">(</span>BODIES)

puts <span class="str">&quot;%.9f&quot;</span> % <span class="kwd">energy</span><span class="sym">(</span>BODIES)

nbodies = BODIES<span class="sym">.</span>size
dt = <span class="num">0.01</span>

n<span class="sym">.</span>times <span class="kwa">do</span>
  i = <span class="num">0</span>
  <span class="kwa">while</span> i <span class="sym">&lt;</span> nbodies
    b = BODIES<span class="sym">[</span>i<span class="sym">]</span>
    b<span class="sym">.</span><span class="kwd">move_from_i</span><span class="sym">(</span>BODIES<span class="sym">,</span> nbodies<span class="sym">,</span> dt<span class="sym">,</span> i <span class="sym">+</span> <span class="num">1</span>)
    i <span class="sym">+</span>= <span class="num">1</span>
  <span class="kwa">end</span>
<span class="kwa">end</span>

puts <span class="str">&quot;%.9f&quot;</span> % <span class="kwd">energy</span><span class="sym">(</span>BODIES)
