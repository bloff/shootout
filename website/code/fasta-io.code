<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org</span>
<span class="com"></span>
<span class="com">   Contributed by Ian Osgood */</span>

ALU <span class="sym">:=</span> <span class="kwb">String</span> <span class="kwd">with</span><span class="sym">(</span>
       <span class="str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span><span class="sym">,</span>
       <span class="str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span><span class="sym">,</span>
       <span class="str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span><span class="sym">,</span>
       <span class="str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span><span class="sym">,</span>
       <span class="str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span><span class="sym">,</span>
       <span class="str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span><span class="sym">,</span>
       <span class="str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="sym">)</span>

<span class="slc"># probabilities for symbols in Fasta codes</span>

IUB <span class="sym">:=</span> <span class="kwa">list</span><span class="sym">(</span><span class="num">0.27</span><span class="sym">,</span> <span class="num">0.12</span><span class="sym">,</span> <span class="num">0.12</span><span class="sym">,</span> <span class="num">0.27</span><span class="sym">)</span>
<span class="num">11</span> <span class="kwd">repeatTimes</span><span class="sym">(</span> IUB <span class="kwd">append</span><span class="sym">(</span><span class="num">0.02</span><span class="sym">) )</span>

HomoSap <span class="sym">:=</span> <span class="kwa">list</span><span class="sym">(</span><span class="num">0.3029549426680</span><span class="sym">,</span> <span class="num">0.1979883004921</span><span class="sym">,</span> <span class="num">0.1975473066391</span><span class="sym">,</span> <span class="num">0.3015094502008</span><span class="sym">)</span>

Fasta <span class="sym">:=</span> <span class="kwb">Object</span> <span class="kwa">clone do</span><span class="sym">(</span>
    last <span class="sym">:=</span> <span class="num">42</span>
    gen_random <span class="sym">:=</span> <span class="kwa">method</span><span class="sym">(</span>
        <span class="sym">(</span>last <span class="sym">= ((</span>last <span class="sym">*</span> <span class="num">3877</span> <span class="sym">+</span> <span class="num">29573</span><span class="sym">) %</span> <span class="num">139968</span><span class="sym">)) /</span> <span class="num">139968</span>
    <span class="sym">)</span>
    repeat <span class="sym">:=</span> <span class="kwa">method</span><span class="sym">(</span>n<span class="sym">,</span>seq<span class="sym">,</span> i <span class="sym">:=</span> li <span class="sym">:=</span> <span class="num">0</span>
        line <span class="sym">:=</span> Sequence <span class="kwa">clone</span> <span class="kwd">setSize</span><span class="sym">(</span><span class="num">60</span><span class="sym">)</span>
        n <span class="kwd">repeatTimes</span><span class="sym">(</span>
            line <span class="kwd">atPut</span><span class="sym">(</span>li<span class="sym">,</span> seq <span class="kwd">at</span><span class="sym">(</span>i<span class="sym">))</span>
            li <span class="sym">=</span> li <span class="sym">+</span> <span class="num">1</span>
            <span class="kwa">if</span> <span class="sym">(</span>li <span class="sym">==</span> line size<span class="sym">,</span> line println<span class="sym">;</span> li <span class="sym">=</span> <span class="num">0</span><span class="sym">)</span>
            i <span class="sym">= ((</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">) %</span> seq size<span class="sym">)</span>
        <span class="sym">)</span>
        <span class="kwa">if</span> <span class="sym">(</span>li <span class="sym">!=</span> <span class="num">0</span><span class="sym">,</span> line <span class="kwd">setSize</span><span class="sym">(</span>li<span class="sym">)</span> println<span class="sym">)</span>
    <span class="sym">)</span>
    codes <span class="sym">:=</span> <span class="str">&quot;acgtBDHKMNRSVWY&quot;</span>
    random <span class="sym">:=</span> <span class="kwa">method</span><span class="sym">(</span>n<span class="sym">,</span>probs<span class="sym">,</span> sum <span class="sym">:=</span> li <span class="sym">:=</span> <span class="num">0</span>
        line <span class="sym">:=</span> Sequence <span class="kwa">clone</span> <span class="kwd">setSize</span><span class="sym">(</span><span class="num">60</span><span class="sym">)</span>
        probs <span class="kwd">mapInPlace</span><span class="sym">(</span>prob<span class="sym">,</span> sum <span class="sym">=</span> sum <span class="sym">+</span> prob<span class="sym">)</span>
        n <span class="kwd">repeatTimes</span><span class="sym">(</span>
            r <span class="sym">:=</span> gen_random<span class="sym">;</span> i <span class="sym">:=</span> <span class="num">0</span>
            <span class="kwd">while</span> <span class="sym">(</span>r <span class="sym">&gt;</span> probs <span class="kwd">at</span><span class="sym">(</span>i<span class="sym">),</span> i <span class="sym">=</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span>
            line <span class="kwd">atPut</span><span class="sym">(</span>li<span class="sym">,</span> codes <span class="kwd">at</span><span class="sym">(</span>i<span class="sym">))</span>
            li <span class="sym">=</span> li <span class="sym">+</span> <span class="num">1</span>
            <span class="kwa">if</span> <span class="sym">(</span>li <span class="sym">==</span> line size<span class="sym">,</span> line println<span class="sym">;</span> li <span class="sym">=</span> <span class="num">0</span><span class="sym">)</span>
        <span class="sym">)</span>
        <span class="kwa">if</span> <span class="sym">(</span>li <span class="sym">!=</span> <span class="num">0</span><span class="sym">,</span> line <span class="kwd">setSize</span><span class="sym">(</span>li<span class="sym">)</span> println<span class="sym">)</span>
    <span class="sym">)</span>
<span class="sym">)</span>

n <span class="sym">:=</span> args <span class="kwd">at</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span> asNumber

<span class="str">&quot;&gt;ONE Homo sapiens alu&quot;</span> println
Fasta <span class="kwd">repeat</span><span class="sym">(</span><span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span> ALU<span class="sym">)</span>

<span class="str">&quot;&gt;TWO IUB ambiguity codes&quot;</span> println
Fasta <span class="kwd">random</span><span class="sym">(</span><span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span> IUB<span class="sym">)</span>

<span class="str">&quot;&gt;THREE Homo sapiens frequency&quot;</span> println
Fasta <span class="kwd">random</span><span class="sym">(</span><span class="num">5</span><span class="sym">*</span>n<span class="sym">,</span> HomoSap<span class="sym">)</span>
