<span class="slc">#########################################</span>
<span class="slc">#     The Computer Language Shootout    #</span>
<span class="slc">#   http://shootout.alioth.debian.org/  #</span>
<span class="slc">#                                       #</span>
<span class="slc">#      contributed by Gordon Innes      #</span>
<span class="slc">#########################################</span>

require <span class="str">'thread'</span>

<span class="kwb">$FADED</span>=   <span class="num">0</span>
<span class="kwb">$RED</span>=     <span class="num">1</span>
<span class="kwb">$BLUE</span>=    <span class="num">2</span>
<span class="kwb">$YELLOW</span>=  <span class="num">3</span>

<span class="kwa">class</span> Chameneos

  <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>colour<span class="sym">,</span> meeting_point)
    &#64;colour= colour
    &#64;meeting_point= meeting_point
    &#64;meetings= <span class="num">0</span>
  <span class="kwa">end</span>

  <span class="kwa">def</span> <span class="kwd">live</span><span class="sym">(</span>)

    <span class="kwa">while true</span>
      &#64;meeting_point<span class="sym">.</span><span class="kwd">meet</span><span class="sym">(</span><span class="kwa">self</span>)
      <span class="kwa">if</span> &#64;colour == <span class="kwb">$FADED</span>
        <span class="kwa">break</span>
      <span class="kwa">else</span>
        &#64;meetings<span class="sym">+</span>=<span class="num">1</span>
      <span class="kwa">end</span>
    <span class="kwa">end</span>
  <span class="kwa">end</span>

  <span class="kwa">def</span> met
    <span class="kwa">return</span> &#64;meetings
  <span class="kwa">end</span>

  <span class="kwa">def</span> <span class="kwd">complement</span><span class="sym">(</span>other_colour)
    <span class="kwa">case</span> &#64;colour
      <span class="kwa">when</span> <span class="kwb">$BLUE</span>
        &#64;colour= other_colour == <span class="kwb">$RED</span> ? <span class="kwb">$YELLOW</span> <span class="sym">:</span> <span class="kwb">$RED</span>
      <span class="kwa">when</span> <span class="kwb">$RED</span>
        &#64;colour= other_colour == <span class="kwb">$BLUE</span> ? <span class="kwb">$YELLOW</span> <span class="sym">:</span> <span class="kwb">$BLUE</span>
      <span class="kwa">when</span> <span class="kwb">$YELLOW</span>
        &#64;colour= other_colour == <span class="kwb">$BLUE</span> ? <span class="kwb">$RED</span> <span class="sym">:</span> <span class="kwb">$BLUE</span>
    <span class="kwa">end</span>
  <span class="kwa">end</span>

  <span class="kwa">def</span> fade
    &#64;colour= <span class="kwb">$FADED</span>
  <span class="kwa">end</span>

  <span class="kwa">def</span> colour
    <span class="kwa">return</span> &#64;colour
  <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">class</span> MeetingPoint

  <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>total_meetings)
    &#64;chameneos_waiting= <span class="kwa">nil</span>
    &#64;total_meetings= total_meetings

    &#64;point_mutex= Mutex<span class="sym">.</span>new
    &#64;waiting_cv= ConditionVariable<span class="sym">.</span>new
  <span class="kwa">end</span>

  <span class="kwa">def</span> <span class="kwd">meet</span><span class="sym">(</span>creature)
    &#64;point_mutex<span class="sym">.</span>synchronize <span class="sym">{</span>
      <span class="kwa">if</span> &#64;total_meetings <span class="sym">&lt;</span>= <span class="num">0</span>
        creature<span class="sym">.</span>fade
        <span class="kwa">return</span>
      <span class="kwa">end</span>

      <span class="kwa">if</span> &#64;chameneos_waiting
        creature<span class="sym">.</span><span class="kwd">complement</span><span class="sym">(</span>&#64;chameneos_waiting<span class="sym">.</span>colour)
        &#64;waiting_cv<span class="sym">.</span>signal
        &#64;chameneos_waiting= <span class="kwa">nil</span>
        &#64;total_meetings-=<span class="num">1</span>
        <span class="kwa">return</span>
      <span class="kwa">else</span>
        &#64;chameneos_waiting= creature
        &#64;waiting_cv<span class="sym">.</span><span class="kwd">wait</span><span class="sym">(</span>&#64;point_mutex)
        <span class="kwa">return</span>
      <span class="kwa">end</span>
    <span class="sym">}</span>
  <span class="kwa">end</span>

<span class="kwa">end</span>


<span class="kwb">$creatures</span>= <span class="sym">[]</span>
meeting_point= MeetingPoint<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">].</span>to_i)

<span class="sym">[</span><span class="kwb">$BLUE</span><span class="sym">,</span> <span class="kwb">$RED</span><span class="sym">,</span> <span class="kwb">$YELLOW</span><span class="sym">,</span> <span class="kwb">$BLUE</span><span class="sym">].</span>each<span class="sym">{ |</span>colour<span class="sym">|</span>
  <span class="kwb">$creatures</span><span class="sym">+</span>= <span class="sym">[</span>Chameneos<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>colour<span class="sym">,</span> meeting_point)<span class="sym">]</span>
<span class="sym">}</span>

<span class="kwb">$creatures</span><span class="sym">.</span>each <span class="sym">{ |</span>creature<span class="sym">|</span>
  Thread<span class="sym">.</span>new <span class="sym">{</span>
    creature<span class="sym">.</span>live
  <span class="sym">}</span>
<span class="sym">}</span>

Thread<span class="sym">.</span>list<span class="sym">.</span>each <span class="sym">{ |</span>thread<span class="sym">|</span>
  thread<span class="sym">.</span>join <span class="kwa">if</span> thread<span class="sym">.</span>alive? <span class="sym">&amp;&amp;</span> thread <span class="sym">!</span>= Thread<span class="sym">.</span>current
<span class="sym">}</span>

puts <span class="kwb">$creatures</span><span class="sym">[</span><span class="num">0</span><span class="sym">].</span>met <span class="sym">+</span> <span class="kwb">$creatures</span><span class="sym">[</span><span class="num">1</span><span class="sym">].</span>met <span class="sym">+</span> <span class="kwb">$creatures</span><span class="sym">[</span><span class="num">2</span><span class="sym">].</span>met <span class="sym">+</span> <span class="kwb">$creatures</span><span class="sym">[</span><span class="num">3</span><span class="sym">].</span>met
