<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/guile \
-e main -s
!#

<I><FONT COLOR="#B22222">;;; $Id: wordfreq-guile.code,v 1.2 2004-11-08 08:15:54 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">;;; from Brad Knotwell
</FONT></I>
(use-modules (ice-9 string-fun) (ice-9 common-list))
(use-modules (ice-9 format))

(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">my-hash</FONT></B> (make-hash-table 4000))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">print-sorted-hash</FONT></B>) 
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">display-elt</FONT></B> elt)
    (display (format <B><FONT COLOR="#BC8F8F">&quot;~7D ~a\n&quot;</FONT></B> (car elt) (cdr elt))))
  (map display-elt 
       (sort-list (hash-fold (<B><FONT COLOR="#A020F0">lambda</FONT></B> (x y z) (cons (cons y x) z))  '() my-hash)
		  (<B><FONT COLOR="#A020F0">lambda</FONT></B> (x y) (<B><FONT COLOR="#A020F0">or</FONT></B> (&gt; (car x) (car y))
				    (<B><FONT COLOR="#A020F0">and</FONT></B> (= (car x) (car y))
					 (string&gt;=? (cdr x) (cdr y))))))))
(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">load-hash</FONT></B> x . tl)
  (<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">do-entry</FONT></B> entry)
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((entry-val (hash-ref my-hash entry)))
      (hash-set! my-hash entry (<B><FONT COLOR="#A020F0">if</FONT></B> entry-val (1+ entry-val) 1))))
  (map do-entry (remove-if (<B><FONT COLOR="#A020F0">lambda</FONT></B> (x) (string=? x <B><FONT COLOR="#BC8F8F">&quot;&quot;</FONT></B>)) (cons x tl))))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> args)
  (<B><FONT COLOR="#A020F0">do</FONT></B> ((line (read-line) (read-line)))
      ((eof-object? line) (print-sorted-hash))
    (separate-fields-discarding-char 
     #\space 
     (list-&gt;string (map (<B><FONT COLOR="#A020F0">lambda</FONT></B> (x) (<B><FONT COLOR="#A020F0">if</FONT></B> (char-alphabetic? x) x #\space)) 
			(string-&gt;list (string-downcase line)))) 
     load-hash)))</pre></td></tr></table>
