<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">\ -*- mode: forth -*-
</FONT></I><I><FONT COLOR="#B22222">\ $Id: objinst-gforth.code,v 1.1 2004-11-02 08:52:38 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">\ http://www.bagley.org/~doug/shootout/
</FONT></I>
<I><FONT COLOR="#B22222">\ from Anton Ertl:
</FONT></I><I><FONT COLOR="#B22222">\ I'm using objects.fs here, code using one of the other OO Forth
</FONT></I><I><FONT COLOR="#B22222">\ extensions will look different.
</FONT></I>
warnings off <I><FONT COLOR="#B22222">\ don't complain about redefining catch, state, value
</FONT></I>
0. argc @ 1<B><FONT COLOR="#5F9EA0">-</FONT></B> arg <B><FONT COLOR="#5F9EA0">&gt;</FONT></B>number <B><FONT COLOR="#5F9EA0">2drop</FONT></B> <B><FONT COLOR="#5F9EA0">drop</FONT></B> <B><FONT COLOR="#A020F0">constant</FONT></B> NUM

require objects.fs

object class
    selector activate ( toggle <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> toggle )
    selector value ( toggle <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> f )
    <B><FONT COLOR="#228B22">cell</FONT></B>% inst<B><FONT COLOR="#5F9EA0">-</FONT></B>var state

    m: ( f toggle <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> )
	state <B><FONT COLOR="#5F9EA0">!</FONT></B> ;m
    overrides construct
	
    m: ( toggle <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> f )
	state @ ;m
    overrides value
    
    m: ( toggle <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> toggle )
	state @ <B><FONT COLOR="#A020F0">invert</FONT></B> state <B><FONT COLOR="#5F9EA0">!</FONT></B>
	this ;m
    overrides activate

<B><FONT COLOR="#A020F0">end</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B>class Toggle

Toggle class
    <B><FONT COLOR="#228B22">cell</FONT></B>% inst<B><FONT COLOR="#5F9EA0">-</FONT></B>var count<B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#A020F0">max</FONT></B>
    <B><FONT COLOR="#228B22">cell</FONT></B>% inst<B><FONT COLOR="#5F9EA0">-</FONT></B>var counter

    m: ( <B><FONT COLOR="#A020F0">max</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B>counter start<B><FONT COLOR="#5F9EA0">-</FONT></B>state nth<B><FONT COLOR="#5F9EA0">-</FONT></B>toggle <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> )
	this [parent] construct
	count<B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#A020F0">max</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>
	0 counter <B><FONT COLOR="#5F9EA0">!</FONT></B> ;m
    overrides construct

    m: ( toggle <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> toggle )
	1 counter <B><FONT COLOR="#5F9EA0">+</FONT></B><B><FONT COLOR="#5F9EA0">!</FONT></B>
	counter @ count<B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#A020F0">max</FONT></B> @ <B><FONT COLOR="#5F9EA0">&gt;=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B>
	    state @ <B><FONT COLOR="#A020F0">invert</FONT></B> state <B><FONT COLOR="#5F9EA0">!</FONT></B>
	    0 counter <B><FONT COLOR="#5F9EA0">!</FONT></B>
	<B><FONT COLOR="#A020F0">endif</FONT></B>
	this ;m
    overrides activate
    
<B><FONT COLOR="#A020F0">end</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B>class NthToggle

<B><FONT COLOR="#A020F0">: </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">flag.</FONT></I></B></FONT></B> ( f <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> )
    <B><FONT COLOR="#A020F0">if</FONT></B> .<B><FONT COLOR="#BC8F8F">&quot; true&quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> .<B><FONT COLOR="#BC8F8F">&quot; false&quot;</FONT></B> <B><FONT COLOR="#A020F0">endif</FONT></B> cr ;

<B><FONT COLOR="#A020F0">: </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">mainloop</FONT></I></B></FONT></B> ( ... class n <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> ) { class n }
    true class heap<B><FONT COLOR="#5F9EA0">-</FONT></B>new true n 0 ?<B><FONT COLOR="#A020F0">do</FONT></B>
	<B><FONT COLOR="#5F9EA0">drop</FONT></B> <B><FONT COLOR="#5F9EA0">dup</FONT></B> activate value <B><FONT COLOR="#5F9EA0">dup</FONT></B> flag.
    <B><FONT COLOR="#A020F0">loop</FONT></B>
    <B><FONT COLOR="#5F9EA0">drop</FONT></B> ;

<B><FONT COLOR="#A020F0">: </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main</FONT></I></B></FONT></B> ( <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">-</FONT></B> )
    Toggle 5 mainloop
    NUM 0 ?<B><FONT COLOR="#A020F0">do</FONT></B>
	true Toggle heap<B><FONT COLOR="#5F9EA0">-</FONT></B>new free <B><FONT COLOR="#5F9EA0">drop</FONT></B> <I><FONT COLOR="#B22222">\ like the C version
</FONT></I>    <B><FONT COLOR="#A020F0">loop</FONT></B>
    cr
    3 NthToggle 8 mainloop
    NUM 0 ?<B><FONT COLOR="#A020F0">do</FONT></B>
	3 true NthToggle heap<B><FONT COLOR="#5F9EA0">-</FONT></B>new free <B><FONT COLOR="#5F9EA0">drop</FONT></B> <I><FONT COLOR="#B22222">\ like the C version
</FONT></I>    <B><FONT COLOR="#A020F0">loop</FONT></B> ;

main <B><FONT COLOR="#5F9EA0">bye</FONT></B></pre></td></tr></table>
