<span class="slc">// The Great Computer Language Shootout
</span><span class="slc">// http://shootout.alioth.debian.org/great/
</span><span class="slc">// by Andreas Bogk
</span>
<span class="kwb">module</span><span class="sym">:</span> harmonic

<span class="kwa">begin
  let</span> n <span class="sym">=</span> application<span class="sym">-</span>arguments<span class="sym">()[</span><span class="num">0</span><span class="sym">]</span>.string<span class="sym">-</span><span class="kwa">to</span><span class="sym">-</span>integer<span class="sym">;
</span>  <span class="kwa">let</span> partial<span class="sym">-</span>sum <span class="sym">::</span> <span class="kwa">&lt;double-float&gt;</span> <span class="sym">=</span> <span class="num">0.0d0</span><span class="sym">;
</span>  <span class="kwa">let</span> i <span class="sym">::</span> <span class="kwa">&lt;double-float&gt;</span> <span class="sym">=</span> <span class="num">1.0d0</span><span class="sym">;
</span>  <span class="kwa">while</span> <span class="sym">(</span>i <span class="kwa">&lt; n)
    partial-sum := partial-sum +</span> <span class="num">1.0d0</span> <span class="kwa">/ i;
    i := i +</span> <span class="num">1.0d0</span><span class="kwa">;
  end while;
  format-out(</span><span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="kwa">,partial-sum);
end;</span>
