<span class="slc">#!/usr/bin/python</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">import</span> sys<span class="sym">,</span> psyco
psyco<span class="sym">.</span><span class="kwd">full</span><span class="sym">()</span>

<span class="kwa">class</span> Toggle<span class="sym">:</span>
    <span class="kwa">def</span> <span class="kwd">__init__</span><span class="sym">(</span>self<span class="sym">,</span> start_state<span class="sym">):</span>
        self<span class="sym">.</span><span class="kwb">bool</span> <span class="sym">=</span> start_state
    <span class="kwa">def</span> <span class="kwd">value</span><span class="sym">(</span>self<span class="sym">):</span>
        <span class="kwa">return</span><span class="sym">(</span>self<span class="sym">.</span><span class="kwb">bool</span><span class="sym">)</span>
    <span class="kwa">def</span> <span class="kwd">activate</span><span class="sym">(</span>self<span class="sym">):</span>
        self<span class="sym">.</span><span class="kwb">bool</span> <span class="sym">=</span> <span class="kwa">not</span> self<span class="sym">.</span><span class="kwb">bool</span>
        <span class="kwa">return</span><span class="sym">(</span>self<span class="sym">)</span>

<span class="kwa">class</span> <span class="kwd">NthToggle</span><span class="sym">(</span>Toggle<span class="sym">):</span>
    <span class="kwa">def</span> <span class="kwd">__init__</span><span class="sym">(</span>self<span class="sym">,</span> start_state<span class="sym">,</span> max_counter<span class="sym">):</span>
        Toggle<span class="sym">.</span><span class="kwd">__init__</span><span class="sym">(</span>self<span class="sym">,</span> start_state<span class="sym">)</span>
        self<span class="sym">.</span>count_max <span class="sym">=</span> max_counter
        self<span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0</span>
    <span class="kwa">def</span> <span class="kwd">activate</span><span class="sym">(</span>self<span class="sym">):</span>
        self<span class="sym">.</span>counter <span class="sym">+=</span> <span class="num">1</span>
        <span class="kwa">if</span> <span class="sym">(</span>self<span class="sym">.</span>counter <span class="sym">&gt;=</span> self<span class="sym">.</span>count_max<span class="sym">):</span>
            self<span class="sym">.</span><span class="kwb">bool</span> <span class="sym">=</span> <span class="kwa">not</span> self<span class="sym">.</span><span class="kwb">bool</span>
            self<span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0</span>
        <span class="kwa">return</span><span class="sym">(</span>self<span class="sym">)</span>


<span class="kwa">def</span> <span class="kwd">main</span><span class="sym">():</span>
    NUM <span class="sym">=</span> <span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>
    <span class="kwa">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">:</span>
        NUM <span class="sym">=</span> <span class="num">1</span>

    val <span class="sym">=</span> <span class="num">1</span>
    toggle <span class="sym">=</span> <span class="kwd">Toggle</span><span class="sym">(</span>val<span class="sym">)</span>
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>NUM<span class="sym">):</span>
        val <span class="sym">=</span> toggle<span class="sym">.</span><span class="kwd">activate</span><span class="sym">().</span><span class="kwd">value</span><span class="sym">()</span>
    <span class="kwa">if</span> val<span class="sym">:</span>
        <span class="kwa">print</span> <span class="str">&quot;true&quot;</span>
    <span class="kwa">else</span><span class="sym">:</span>
        <span class="kwa">print</span> <span class="str">&quot;false&quot;</span>

    val <span class="sym">=</span> <span class="num">1</span>
    ntoggle <span class="sym">=</span> <span class="kwd">NthToggle</span><span class="sym">(</span>val<span class="sym">,</span> <span class="num">3</span><span class="sym">)</span>
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>NUM<span class="sym">):</span>
        val <span class="sym">=</span> ntoggle<span class="sym">.</span><span class="kwd">activate</span><span class="sym">().</span><span class="kwd">value</span><span class="sym">()</span>
    <span class="kwa">if</span> val<span class="sym">:</span>
        <span class="kwa">print</span> <span class="str">&quot;true&quot;</span>
    <span class="kwa">else</span><span class="sym">:</span>
        <span class="kwa">print</span> <span class="str">&quot;false&quot;</span>

<span class="kwd">main</span><span class="sym">()</span>
