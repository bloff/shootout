<span class="line">    1 </span><span class="slc">#!/usr/bin/python
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="kwc">import</span> sys<span class="sym">,</span> psyco
<span class="line">    5 </span>psyco<span class="sym">.</span>full<span class="sym">()
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">class</span> Toggle<span class="sym">:
</span><span class="line">    8 </span><span class="sym"></span>    <span class="kwb">def</span> __init__<span class="sym">(</span><span class="kwc">self</span><span class="sym">,</span> start_state<span class="sym">):
</span><span class="line">    9 </span><span class="sym"></span>        <span class="kwc">self</span><span class="sym">.</span>bool <span class="sym">=</span> start_state
<span class="line">   10 </span>    <span class="kwb">def</span> value<span class="sym">(</span><span class="kwc">self</span><span class="sym">):
</span><span class="line">   11 </span><span class="sym"></span>        <span class="kwb">return</span><span class="sym">(</span><span class="kwc">self</span><span class="sym">.</span>bool<span class="sym">)
</span><span class="line">   12 </span><span class="sym"></span>    <span class="kwb">def</span> activate<span class="sym">(</span><span class="kwc">self</span><span class="sym">):
</span><span class="line">   13 </span><span class="sym"></span>        <span class="kwc">self</span><span class="sym">.</span>bool <span class="sym">=</span> <span class="kwb">not</span> <span class="kwc">self</span><span class="sym">.</span>bool
<span class="line">   14 </span>        <span class="kwb">return</span><span class="sym">(</span><span class="kwc">self</span><span class="sym">)
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span><span class="kwa">class</span> NthToggle<span class="sym">(</span>Toggle<span class="sym">):
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwb">def</span> __init__<span class="sym">(</span><span class="kwc">self</span><span class="sym">,</span> start_state<span class="sym">,</span> max_counter<span class="sym">):
</span><span class="line">   18 </span><span class="sym"></span>        Toggle<span class="sym">.</span>__init__<span class="sym">(</span><span class="kwc">self</span><span class="sym">,</span> start_state<span class="sym">)
</span><span class="line">   19 </span><span class="sym"></span>        <span class="kwc">self</span><span class="sym">.</span>count_max <span class="sym">=</span> max_counter
<span class="line">   20 </span>        <span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0
</span><span class="line">   21 </span><span class="num"></span>    <span class="kwb">def</span> activate<span class="sym">(</span><span class="kwc">self</span><span class="sym">):
</span><span class="line">   22 </span><span class="sym"></span>        <span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">+=</span> <span class="num">1
</span><span class="line">   23 </span><span class="num"></span>        <span class="kwb">if</span> <span class="sym">(</span><span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">&gt;=</span> <span class="kwc">self</span><span class="sym">.</span>count_max<span class="sym">):
</span><span class="line">   24 </span><span class="sym"></span>            <span class="kwc">self</span><span class="sym">.</span>bool <span class="sym">=</span> <span class="kwb">not</span> <span class="kwc">self</span><span class="sym">.</span>bool
<span class="line">   25 </span>            <span class="kwc">self</span><span class="sym">.</span>counter <span class="sym">=</span> <span class="num">0
</span><span class="line">   26 </span><span class="num"></span>        <span class="kwb">return</span><span class="sym">(</span><span class="kwc">self</span><span class="sym">)
</span><span class="line">   27 </span><span class="sym">
</span><span class="line">   28 </span><span class="sym">
</span><span class="line">   29 </span><span class="sym"></span><span class="kwb">def</span> main<span class="sym">():
</span><span class="line">   30 </span><span class="sym"></span>    NUM <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])
</span><span class="line">   31 </span><span class="sym"></span>    <span class="kwb">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">:
</span><span class="line">   32 </span><span class="sym"></span>        NUM <span class="sym">=</span> <span class="num">1
</span><span class="line">   33 </span><span class="num">
</span><span class="line">   34 </span><span class="num"></span>    val <span class="sym">=</span> <span class="num">1
</span><span class="line">   35 </span><span class="num"></span>    toggle <span class="sym">=</span> Toggle<span class="sym">(</span>val<span class="sym">)
</span><span class="line">   36 </span><span class="sym"></span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>NUM<span class="sym">):
</span><span class="line">   37 </span><span class="sym"></span>        val <span class="sym">=</span> toggle<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">()
</span><span class="line">   38 </span><span class="sym"></span>    <span class="kwb">if</span> val<span class="sym">:
</span><span class="line">   39 </span><span class="sym"></span>        <span class="kwb">print</span> <span class="str">&quot;true&quot;</span>
<span class="line">   40 </span>    <span class="kwb">else</span><span class="sym">:
</span><span class="line">   41 </span><span class="sym"></span>        <span class="kwb">print</span> <span class="str">&quot;false&quot;</span>
<span class="line">   42 </span>
<span class="line">   43 </span>    val <span class="sym">=</span> <span class="num">1
</span><span class="line">   44 </span><span class="num"></span>    ntoggle <span class="sym">=</span> NthToggle<span class="sym">(</span>val<span class="sym">,</span> <span class="num">3</span><span class="sym">)
</span><span class="line">   45 </span><span class="sym"></span>    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>NUM<span class="sym">):
</span><span class="line">   46 </span><span class="sym"></span>        val <span class="sym">=</span> ntoggle<span class="sym">.</span>activate<span class="sym">().</span>value<span class="sym">()
</span><span class="line">   47 </span><span class="sym"></span>    <span class="kwb">if</span> val<span class="sym">:
</span><span class="line">   48 </span><span class="sym"></span>        <span class="kwb">print</span> <span class="str">&quot;true&quot;</span>
<span class="line">   49 </span>    <span class="kwb">else</span><span class="sym">:
</span><span class="line">   50 </span><span class="sym"></span>        <span class="kwb">print</span> <span class="str">&quot;false&quot;</span>
<span class="line">   51 </span>
<span class="line">   52 </span>main<span class="sym">()</span>
