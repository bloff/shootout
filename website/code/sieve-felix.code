<span class="line">    1 </span><span class="slc">//
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">// Contributed by John Skaller
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">//
</span><span class="line">    4 </span><span class="slc"></span><span class="kwa">include</span> <span class="str">&quot;std&quot;</span><span class="sym">;
</span><span class="line">    5 </span><span class="sym"></span>n <span class="sym">:=</span> atoi<span class="sym">(</span>System<span class="sym">::</span>argv <span class="num">1</span><span class="sym">);
</span><span class="line">    6 </span><span class="sym"></span><span class="kwa">type</span> barry <span class="sym">=</span> <span class="str">&quot;char*&quot;</span><span class="sym">;
</span><span class="line">    7 </span><span class="sym"></span><span class="kwa">fun</span> mk_barry <span class="sym">:</span> <span class="kwb">unit</span> <span class="sym">-&gt;</span> barry <span class="sym">=</span> <span class="str">&quot;(char*)calloc(8193,1)&quot;</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym"></span><span class="kwa">proc</span> free <span class="sym">:</span> barry <span class="sym">=</span> <span class="str">&quot;free($1);&quot;</span><span class="sym">;
</span><span class="line">    9 </span><span class="sym"></span><span class="kwa">fun</span> subscript<span class="sym">:</span> barry <span class="sym">*</span> <span class="kwb">int</span> <span class="sym">-&gt;</span> lvalue<span class="sym">[</span><span class="kwb">bool</span><span class="sym">] =</span> <span class="str">&quot;$1[$2]&quot;</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span><span class="kwa">var</span> prime <span class="sym">=</span> mk_barry<span class="sym">();
</span><span class="line">   12 </span><span class="sym"></span><span class="kwa">var</span> i<span class="sym">:</span><span class="kwb">int</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span><span class="kwa">var</span> k<span class="sym">:</span> <span class="kwb">int</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym"></span><span class="kwa">var</span> count <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   15 </span><span class="sym"></span><span class="kwa">var</span> m <span class="sym">=</span> n<span class="sym">;
</span><span class="line">   16 </span><span class="sym">
</span><span class="line">   17 </span><span class="sym"></span>until m <span class="sym">==</span> <span class="num">0</span> do
<span class="line">   18 </span>  m<span class="sym">--;
</span><span class="line">   19 </span><span class="sym"></span>  count <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   20 </span><span class="sym"></span>  for <span class="sym">{</span>i<span class="sym">=</span><span class="num">2</span><span class="sym">;} {</span> i <span class="sym">&lt;=</span> <span class="num">8192</span> <span class="sym">} {</span> i<span class="sym">++; } {</span> prime.<span class="sym">[</span>i<span class="sym">] =</span> <span class="kwa">true</span><span class="sym">; };
</span><span class="line">   21 </span><span class="sym"></span>  i<span class="sym">=</span><span class="num">2</span><span class="sym">;
</span><span class="line">   22 </span><span class="sym"></span>  whilst i <span class="sym">&lt;=</span> <span class="num">8192</span> do
<span class="line">   23 </span>    <span class="kwa">if</span> prime.<span class="sym">[</span>i<span class="sym">]</span> do
<span class="line">   24 </span>      k<span class="sym">=</span>i<span class="sym">+</span>i<span class="sym">;
</span><span class="line">   25 </span><span class="sym"></span>      whilst k <span class="sym">&lt;=</span> <span class="num">8192</span> do
<span class="line">   26 </span>        prime.<span class="sym">[</span>k<span class="sym">] =</span> <span class="kwa">false</span><span class="sym">;
</span><span class="line">   27 </span><span class="sym"></span>        k<span class="sym">+=</span>i<span class="sym">;
</span><span class="line">   28 </span><span class="sym"></span>      done<span class="sym">;
</span><span class="line">   29 </span><span class="sym"></span>      count<span class="sym">++;
</span><span class="line">   30 </span><span class="sym"></span>    done<span class="sym">;
</span><span class="line">   31 </span><span class="sym"></span>    i<span class="sym">++;
</span><span class="line">   32 </span><span class="sym"></span>  done<span class="sym">;
</span><span class="line">   33 </span><span class="sym"></span>done<span class="sym">;
</span><span class="line">   34 </span><span class="sym">
</span><span class="line">   35 </span><span class="sym"></span>free prime<span class="sym">;
</span><span class="line">   36 </span><span class="sym">
</span><span class="line">   37 </span><span class="sym"></span><span class="kwa">print</span> <span class="str">&quot;Count: &quot;</span><span class="sym">;</span> <span class="kwa">print</span> count<span class="sym">;</span> <span class="kwa">endl</span><span class="sym">;
</span><span class="line">   38 </span><span class="sym"></span>
