<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">//
</FONT></I><I><FONT COLOR="#B22222">// Contributed by John Skaller
</FONT></I><I><FONT COLOR="#B22222">//
</FONT></I>include <B><FONT COLOR="#BC8F8F">&quot;std&quot;</FONT></B>;
n := atoi(System::argv 1);
type barry = <B><FONT COLOR="#BC8F8F">&quot;char*&quot;</FONT></B>;
fun mk_barry : unit -&gt; barry = <B><FONT COLOR="#BC8F8F">&quot;(char*)calloc(8193,1)&quot;</FONT></B>;
proc free : barry = <B><FONT COLOR="#BC8F8F">&quot;free($1);&quot;</FONT></B>;
fun subscript: barry * <B><FONT COLOR="#228B22">int</FONT></B> -&gt; lvalue[bool] = <B><FONT COLOR="#BC8F8F">&quot;$1[$2]&quot;</FONT></B>;

var prime = mk_barry();
var i:<B><FONT COLOR="#228B22">int</FONT></B>;
var k: <B><FONT COLOR="#228B22">int</FONT></B>;
var count = 0;
var m = n;

until m == 0 <B><FONT COLOR="#A020F0">do</FONT></B>
  m--;
  count = 0;
  <B><FONT COLOR="#A020F0">for</FONT></B> {i=2;} { i &lt;= 8192 } { i++; } { prime.[i] = true; };
  i=2;
  whilst i &lt;= 8192 <B><FONT COLOR="#A020F0">do</FONT></B>
    <B><FONT COLOR="#A020F0">if</FONT></B> prime.[i] <B><FONT COLOR="#A020F0">do</FONT></B>
      k=i+i;
      whilst k &lt;= 8192 <B><FONT COLOR="#A020F0">do</FONT></B>
        prime.[k] = false;
        k+=i;
      done;
      count++;
    done;
    i++;
  done;
done;

free prime;

print <B><FONT COLOR="#BC8F8F">&quot;Count: &quot;</FONT></B>; print count; endl;
</pre></td></tr></table>
