<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># k-nucleotide count benchmark</span>
<span class="slc"># contributed by Joel Hoffman, 2005-03-24</span>

<span class="slc"># speeded up and shortened by Kjetil Skotheim, 2005-11-29</span>


<span class="kwa">use</span> List<span class="sym">::</span>Util <span class="str">'sum'</span><span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">&#64;n</span><span class="sym">=</span>qw<span class="sym">&lt;</span>GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT<span class="sym">&gt;;</span>

<span class="sym">$/ =</span> <span class="str">&quot;&gt;&quot;</span><span class="sym">;</span> <span class="slc"># Input Separator</span>
<span class="sym">/</span>^THREE<span class="sym">/</span>i <span class="kwa">and</span> <span class="kwb">$seq</span> <span class="sym">=</span> <span class="kwd">uc</span><span class="sym">(</span>join <span class="str">&quot;&quot;</span><span class="sym">,</span> grep <span class="sym">!/</span>^<span class="sym">(</span>?<span class="sym">:;|</span>THREE<span class="sym">)/,</span> split <span class="sym">/</span><span class="esc">\n</span><span class="sym">+/)</span> <span class="kwa">while</span> <span class="sym">&lt;</span>STDIN<span class="sym">&gt;;</span>

<span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="num">2</span><span class="sym">,</span> map length<span class="sym">,</span><span class="kwb">&#64;n</span><span class="sym">) {</span>
  <span class="kwc">my</span> <span class="kwb">%h</span><span class="sym">;</span>
  <span class="kwb">$h</span><span class="sym">{</span><span class="kwd">substr</span><span class="sym">(</span><span class="kwb">$seq</span><span class="sym">,</span><span class="kwb">$_</span><span class="sym">,</span><span class="kwb">$n</span><span class="sym">)}++</span> <span class="kwa">for</span> <span class="num">0</span>..<span class="kwd">length</span><span class="sym">(</span><span class="kwb">$seq</span><span class="sym">)-</span><span class="kwb">$n</span><span class="sym">;</span>
  <span class="kwb">$keys</span><span class="sym">[</span><span class="kwb">$n</span><span class="sym">]=</span><span class="esc">\%</span>h<span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$k</span> <span class="sym">(</span><span class="kwb">&#64;keys</span><span class="sym">[</span><span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">]) {</span>
    <span class="kwc">my</span> <span class="kwb">$sum</span> <span class="sym">=</span> sum values %<span class="kwb">$k</span><span class="sym">;</span>

    printf <span class="str">&quot;$_ %4.3f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">100</span> <span class="sym">* $</span><span class="kwb">$k</span><span class="sym">{</span><span class="kwb">$_</span><span class="sym">} /</span> <span class="kwb">$sum</span>
      <span class="kwa">for</span> sort <span class="sym">{ $</span><span class="kwb">$k</span><span class="sym">{</span><span class="kwb">$b</span><span class="sym">} &lt;=&gt; $</span><span class="kwb">$k</span><span class="sym">{</span><span class="kwb">$a</span><span class="sym">}</span> <span class="kwa">or</span> <span class="kwb">$a</span> <span class="kwa">cmp</span> <span class="kwb">$b</span> <span class="sym">}</span> keys %<span class="kwb">$k</span><span class="sym">;</span>

    print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
<span class="sym">}</span>

printf <span class="str">&quot;%d</span><span class="esc">\t</span><span class="str">%s</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwb">$keys</span><span class="sym">[</span>length<span class="sym">]{</span><span class="kwb">$_</span><span class="sym">},</span> <span class="kwb">$_</span> <span class="kwa">for</span> <span class="kwb">&#64;n</span><span class="sym">;</span>
