<span class="kwa">fun</span> tak <span class="sym">(</span>x<span class="sym">:</span> <span class="kwb">real</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">) =
</span>   <span class="kwa">if</span> y <span class="sym">&gt;=</span> x <span class="kwa">then</span> z
   <span class="kwa">else</span> tak <span class="sym">(</span>tak <span class="sym">(</span>x <span class="num">- 1.0</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">),</span> tak <span class="sym">(</span>y <span class="num">- 1.0</span><span class="sym">,</span> z<span class="sym">,</span> x<span class="sym">),</span> tak <span class="sym">(</span>z <span class="num">- 1.0</span><span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">))
</span><span class="kwa">val</span> n <span class="sym">=</span> valOf <span class="sym">(</span><span class="kwa">Real</span>.fromString <span class="sym">(</span>hd <span class="sym">(</span>CommandLine.arguments <span class="sym">())))
</span><span class="kwa">val</span> r <span class="sym">=</span> tak <span class="sym">(</span><span class="num">3.0</span> <span class="sym">*</span> n<span class="sym">,</span> <span class="num">2.0</span> <span class="sym">*</span> n<span class="sym">,</span> n<span class="sym">)
</span><span class="kwa">val</span> <span class="sym">() =</span> print <span class="sym">(</span>concat <span class="sym">[</span><span class="kwa">Real</span>.fmt <span class="sym">(</span><span class="kwa">StringCvt</span>.FIX <span class="sym">(</span>SOME <span class="num">1</span><span class="sym">))</span> r<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">])</span>
