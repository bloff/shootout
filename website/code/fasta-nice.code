<span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com">*/</span>

<span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;</span>

<span class="kwb">void</span> main<span class="sym">(</span>String<span class="sym">[]</span> args<span class="sym">){</span>

   <span class="kwa">let</span> ALU <span class="sym">=</span>
      <span class="str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="sym">+</span>
      <span class="str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="sym">+</span>
      <span class="str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="sym">+</span>
      <span class="str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="sym">+</span>
      <span class="str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="sym">+</span>
      <span class="str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="sym">+</span>
      <span class="str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="sym">;</span>

   <span class="kwa">let</span> IUB <span class="sym">= [</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;a&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.27</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;c&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.12</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;g&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.12</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;t&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.27</span><span class="sym">),</span>

      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;B&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;D&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;H&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;K&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;M&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;N&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;R&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;S&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;V&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;W&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;Y&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.02</span><span class="sym">)</span>
   <span class="sym">];</span>

   <span class="kwa">let</span> HomoSapiens <span class="sym">= [</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;a&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.3029549426680</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;c&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.1979883004921</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;g&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.1975473066391</span><span class="sym">),</span>
      <span class="kwa">new</span> Frequency<span class="sym">(</span>code<span class="sym">:</span> <span class="str">&quot;t&quot;</span><span class="sym">,</span> percent<span class="sym">:</span> <span class="num">0.3015094502008</span><span class="sym">)</span>
   <span class="sym">];</span>


   makeCumulative<span class="sym">(</span>HomoSapiens<span class="sym">);</span>
   makeCumulative<span class="sym">(</span>IUB<span class="sym">);</span>

   <span class="kwa">var</span> n <span class="sym">=</span> Integer<span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
   <span class="kwa">let</span> w <span class="sym">=</span> <span class="kwa">new</span> BufferedWriter<span class="sym">(</span><span class="kwa">new</span> OutputStreamWriter<span class="sym">(</span>System<span class="sym">.</span>out<span class="sym">));</span>

   makeRepeatFasta<span class="sym">(</span><span class="str">&quot;ONE&quot;</span><span class="sym">,</span> <span class="str">&quot;Homo sapiens alu&quot;</span><span class="sym">,</span> ALU<span class="sym">,</span> n<span class="sym">*</span><span class="num">2</span><span class="sym">,</span> w<span class="sym">);</span>
   makeRandomFasta<span class="sym">(</span><span class="str">&quot;TWO&quot;</span><span class="sym">,</span> <span class="str">&quot;IUB ambiguity codes&quot;</span><span class="sym">,</span> IUB<span class="sym">,</span> n<span class="sym">*</span><span class="num">3</span><span class="sym">,</span> w<span class="sym">);</span>
   makeRandomFasta<span class="sym">(</span><span class="str">&quot;THREE&quot;</span><span class="sym">,</span> <span class="str">&quot;Homo sapiens frequency&quot;</span><span class="sym">,</span> HomoSapiens<span class="sym">,</span> n<span class="sym">*</span><span class="num">5</span><span class="sym">,</span> w<span class="sym">);</span>

   w<span class="sym">.</span>close<span class="sym">;</span>
<span class="sym">}</span>


<span class="kwa">class</span> Frequency <span class="sym">{</span> String code<span class="sym">;</span> <span class="kwb">double</span> percent<span class="sym">; }</span>

<span class="kwb">void</span> makeCumulative<span class="sym">(</span>Frequency<span class="sym">[]</span> array<span class="sym">) {</span>
   <span class="kwa">var</span> cp <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
   <span class="kwa">for</span> <span class="sym">(</span>frequency <span class="sym">:</span> array<span class="sym">) {</span>
      cp <span class="sym">+=</span> frequency<span class="sym">.</span>percent<span class="sym">;</span>
      frequency<span class="sym">.</span>percent <span class="sym">=</span> cp<span class="sym">;</span>
   <span class="sym">}</span>
<span class="sym">}</span>

String selectRandom<span class="sym">(</span>Frequency<span class="sym">[]</span> a<span class="sym">) {</span>
   <span class="kwa">let</span> r <span class="sym">=</span> randomNumber<span class="sym">(</span><span class="num">1.0</span><span class="sym">);</span>
   <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> a<span class="sym">.</span>length<span class="sym">;</span> i<span class="sym">++)</span>
      <span class="kwa">if</span> <span class="sym">(</span>r <span class="sym">&lt;</span> a<span class="sym">[</span>i<span class="sym">].</span>percent<span class="sym">)</span> <span class="kwa">return</span> a<span class="sym">[</span>i<span class="sym">].</span>code<span class="sym">;</span>
   <span class="kwa">return</span> a<span class="sym">[</span>a<span class="sym">.</span>length<span class="sym">-</span><span class="num">1</span><span class="sym">].</span>code<span class="sym">;</span>
<span class="sym">}</span>


<span class="kwa">let</span> <span class="kwb">int</span> LineLength <span class="sym">=</span> <span class="num">60</span><span class="sym">;</span>

<span class="kwb">void</span> makeRandomFasta<span class="sym">(</span>String id<span class="sym">,</span> String desc<span class="sym">,</span> Frequency<span class="sym">[]</span> a<span class="sym">,</span> <span class="kwb">int</span> n<span class="sym">,</span> BufferedWriter w<span class="sym">) {</span>
   <span class="kwa">var</span> m <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   w<span class="sym">.</span>write<span class="sym">(</span><span class="str">&quot;&gt;&quot;</span> <span class="sym">+</span> id <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span> desc <span class="sym">+</span> <span class="str">&quot;\n&quot;</span><span class="sym">);</span>

   <span class="kwa">while</span> <span class="sym">(</span>n <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">) {</span>
      <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> LineLength<span class="sym">)</span> m <span class="sym">=</span> n<span class="sym">;</span> <span class="kwa">else</span> m <span class="sym">=</span> LineLength<span class="sym">;</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>m<span class="sym">;</span> i<span class="sym">++)</span> w<span class="sym">.</span>write<span class="sym">(</span>selectRandom<span class="sym">(</span>a<span class="sym">));</span>
      w<span class="sym">.</span>newLine<span class="sym">();</span>
      n <span class="sym">-=</span> LineLength<span class="sym">;</span>
   <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwb">void</span> makeRepeatFasta<span class="sym">(</span>String id<span class="sym">,</span> String desc<span class="sym">,</span> String alu<span class="sym">,</span> <span class="kwb">int</span> n<span class="sym">,</span> BufferedWriter w<span class="sym">) {</span>
   <span class="kwa">var</span> m <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> <span class="kwa">var</span> k <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> <span class="kwa">let</span> kn <span class="sym">=</span> alu<span class="sym">.</span>length<span class="sym">;</span>
   w<span class="sym">.</span>write<span class="sym">(</span><span class="str">&quot;&gt;&quot;</span> <span class="sym">+</span> id <span class="sym">+</span> <span class="str">&quot; &quot;</span> <span class="sym">+</span> desc <span class="sym">+</span> <span class="str">&quot;\n&quot;</span><span class="sym">);</span>

   <span class="kwa">while</span> <span class="sym">(</span>n <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">) {</span>
      <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> LineLength<span class="sym">)</span> m <span class="sym">=</span> n<span class="sym">;</span> <span class="kwa">else</span> m <span class="sym">=</span> LineLength<span class="sym">;</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>m<span class="sym">;</span> i<span class="sym">++){</span>
         <span class="kwa">if</span> <span class="sym">(</span>k <span class="sym">==</span> kn<span class="sym">)</span> k <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
         w<span class="sym">.</span>write<span class="sym">(</span>alu<span class="sym">,</span>k<span class="sym">,</span><span class="num">1</span><span class="sym">);</span>
         k<span class="sym">++;</span>
      <span class="sym">}</span>
      w<span class="sym">.</span>newLine<span class="sym">();</span>
      n <span class="sym">-=</span> LineLength<span class="sym">;</span>
   <span class="sym">}</span>
<span class="sym">}</span>


<span class="slc">// random numbers</span>

<span class="kwa">let</span> <span class="kwb">int</span> IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;</span>
<span class="kwa">let</span> <span class="kwb">int</span> IA <span class="sym">=</span> <span class="num">3877</span><span class="sym">;</span>
<span class="kwa">let</span> <span class="kwb">int</span> IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">;</span>
<span class="kwa">var</span> <span class="kwb">int</span> seed <span class="sym">=</span> <span class="num">42</span><span class="sym">;</span>

<span class="kwb">double</span> randomNumber<span class="sym">(</span><span class="kwb">double</span> max<span class="sym">) {</span>
   seed <span class="sym">= (</span>seed <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">) %</span> IM<span class="sym">;</span>
   <span class="kwa">return</span><span class="sym">(</span> max <span class="sym">*</span> seed <span class="sym">/</span> IM <span class="sym">);</span>
<span class="sym">}</span>
