<span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org</span>
<span class="com">   contributed by Gavin Harrison */</span>

SNorm<span class="sym">:=</span><span class="kwb">Object</span> <span class="kwa">clone do</span><span class="sym">(</span>
   App<span class="sym">:=</span><span class="kwa">method</span><span class="sym">(</span>n<span class="sym">,</span>
      n1<span class="sym">:=</span>n<span class="sym">-</span><span class="num">1</span>
      u<span class="sym">:=</span><span class="kwb">List</span> <span class="kwa">clone</span> <span class="kwd">preallocateToSize</span><span class="sym">(</span>n<span class="sym">)</span>
      v<span class="sym">:=</span><span class="kwb">List</span> <span class="kwa">clone</span> <span class="kwd">preallocateToSize</span><span class="sym">(</span>n<span class="sym">)</span>
      n <span class="kwd">repeatTimes</span><span class="sym">(</span>u <span class="kwd">append</span><span class="sym">(</span><span class="num">1</span><span class="sym">);</span>v <span class="kwd">append</span><span class="sym">(</span><span class="num">0</span><span class="sym">))</span>
      <span class="num">0</span> <span class="kwd">to</span><span class="sym">(</span><span class="num">9</span><span class="sym">)</span> <span class="kwa">foreach</span><span class="sym">(</span>n3<span class="sym">,</span>n2<span class="sym">,</span><span class="kwd">MAtAv</span><span class="sym">(</span>n<span class="sym">,</span>u<span class="sym">,</span>v<span class="sym">);</span><span class="kwd">MAtAv</span><span class="sym">(</span>n<span class="sym">,</span>v<span class="sym">,</span>u<span class="sym">))</span>
      vBv<span class="sym">:=</span>vv<span class="sym">:=</span>vAt<span class="sym">:=</span><span class="num">0</span>
      <span class="kwa">for</span><span class="sym">(</span>i<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>n1<span class="sym">,</span>vAt<span class="sym">=</span>v <span class="kwd">at</span><span class="sym">(</span>i<span class="sym">);</span>vBv<span class="sym">=</span>vBv<span class="sym">+</span>u <span class="kwd">at</span><span class="sym">(</span>i<span class="sym">)*</span>vAt<span class="sym">;</span>vv<span class="sym">=</span>vv<span class="sym">+(</span>vAt<span class="sym">*</span>vAt<span class="sym">))</span>
      <span class="sym">(</span>vBv<span class="sym">/</span>vv<span class="sym">)</span>sqrt<span class="sym">)</span>
   A<span class="sym">:=</span><span class="kwa">method</span><span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">,</span>ij<span class="sym">:=</span>i<span class="sym">+</span>j<span class="sym">;</span><span class="num">1</span><span class="sym">/(</span>ij<span class="sym">*(</span>ij<span class="sym">+</span><span class="num">1</span><span class="sym">)/</span><span class="num">2</span><span class="sym">+</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">))</span>
   MAv<span class="sym">:=</span><span class="kwa">method</span><span class="sym">(</span>n<span class="sym">,</span>v<span class="sym">,</span>Av<span class="sym">,</span>
      n1<span class="sym">:=</span>n<span class="sym">-</span><span class="num">1</span>
      <span class="kwa">for</span><span class="sym">(</span>i_i<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>n1<span class="sym">,</span>
         <span class="kwa">for</span><span class="sym">(</span>i_j<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>n1<span class="sym">,</span>Av <span class="kwd">atPut</span><span class="sym">(</span>i_i<span class="sym">,</span>Av <span class="kwd">at</span><span class="sym">(</span>i_i<span class="sym">)+</span><span class="kwd">A</span><span class="sym">(</span>i_i<span class="sym">,</span>i_j<span class="sym">)*</span>v <span class="kwd">at</span><span class="sym">(</span>i_j<span class="sym">)))))</span>
   MAtv<span class="sym">:=</span><span class="kwa">method</span><span class="sym">(</span>n<span class="sym">,</span>v<span class="sym">,</span>Atv<span class="sym">,</span>
      n1<span class="sym">:=</span>n<span class="sym">-</span><span class="num">1</span>
      <span class="kwa">for</span><span class="sym">(</span>i_i<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>n1<span class="sym">,</span>
         Atv <span class="kwd">atPut</span><span class="sym">(</span>i_i<span class="sym">,</span><span class="num">0</span><span class="sym">)</span>
         <span class="kwa">for</span><span class="sym">(</span>i_j<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>n1<span class="sym">,</span>Atv <span class="kwd">atPut</span><span class="sym">(</span>i_i<span class="sym">,</span>Atv <span class="kwd">at</span><span class="sym">(</span>i_i<span class="sym">)+</span><span class="kwd">A</span><span class="sym">(</span>i_j<span class="sym">,</span> i_i<span class="sym">)*</span>v <span class="kwd">at</span><span class="sym">(</span>i_j<span class="sym">)))))</span>
   MAtAv<span class="sym">:=</span><span class="kwa">method</span><span class="sym">(</span>n<span class="sym">,</span>v<span class="sym">,</span>AtAv<span class="sym">,</span>
      u<span class="sym">:=</span><span class="kwb">List</span> <span class="kwa">clone</span> <span class="kwd">preallocateToSize</span><span class="sym">(</span>n<span class="sym">)</span>
      n <span class="kwd">repeatTimes</span><span class="sym">(</span>u <span class="kwd">append</span><span class="sym">(</span><span class="num">0</span><span class="sym">))</span>
      <span class="kwd">MAv</span><span class="sym">(</span>n<span class="sym">,</span>v<span class="sym">,</span>u<span class="sym">)</span>
      <span class="kwd">MAtv</span><span class="sym">(</span>n<span class="sym">,</span>u<span class="sym">,</span>AtAv<span class="sym">)))</span>
n<span class="sym">:=</span>args <span class="kwd">at</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span> asNumber
SNorm <span class="kwd">App</span><span class="sym">(</span>n<span class="sym">)</span> <span class="kwd">asString</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span><span class="num">9</span><span class="sym">)</span> println
