<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
#!/usr/bin/guile \
-e main -s
!#

<I><FONT COLOR="#B22222">;;; $Id: ary-guile.code,v 1.2 2004-11-08 08:15:12 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I>
(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> args)
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((n (<B><FONT COLOR="#A020F0">or</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (= (length args) 2) (string-&gt;number (cadr args))) 1))
	 (x (make-vector n 0))
	 (y (make-vector n 0))
	 (last (- n 1)))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	((= i n))
      (vector-set! x i (+ i 1)))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((k 0 (+ k 1)))
	((= k 1000))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i last (- i 1)))
	  ((&lt; i 0))
	(vector-set! y i (+ (vector-ref x i) (vector-ref y i)))))
    (print-list (vector-ref y 0) <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> (vector-ref y last))))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">print-list</FONT></B> . items) (for-each display items) (newline))</pre></td></tr></table>
