<span class="com">/*
 * The Great Computer Language Shootout
 * http://shootout.alioth.debian.org/
 *
 * Written by Jon Harrop, 2005
 * Compile: g++ -O2 -o nsieve_bits_g++ nsieve_bits.cpp
 */</span>

#include <span class="kwa">&lt;iostream&gt;</span>
#include <span class="kwa">&lt;iomanip&gt;</span>
#include <span class="kwa">&lt;vector&gt;</span>
#include <span class="kwa">&lt;cstring&gt;</span>

int nsieve<span class="sym">(</span>int n<span class="sym">) {
</span>  std<span class="sym">::</span>vector<span class="kwa">&lt;bool&gt;</span> t<span class="sym">(</span>n<span class="sym">+</span><span class="num">1</span><span class="sym">);
</span>  int count <span class="sym">=</span> <span class="num">0</span><span class="sym">;

</span>  <span class="kwa">for</span> <span class="sym">(</span>int i<span class="sym">=</span><span class="num">2</span><span class="sym">;</span> i<span class="kwa">&lt;=n; ++i)
    if (! t.at(i)) {
      ++count;
      for (int j=i*</span><span class="num">2</span><span class="kwa">; j&lt;=n; j+=i)
	t.at(j) = true;
    }

  return count;
}

void test(int n) {
  int m = (</span><span class="num">1</span> <span class="kwa">&lt;&lt; n) *</span> <span class="num">10000</span><span class="kwa">;
  std::cout &lt;&lt;</span> <span class="str">&quot;Primes up to &quot;</span><span class="kwa"> &lt;&lt; std::setw(</span><span class="num">8</span><span class="kwa">) &lt;&lt; m &lt;&lt;</span> <span class="str">&quot; &quot;</span><span class="kwa"> &lt;&lt; std::setw(</span><span class="num">8</span><span class="kwa">) &lt;&lt; nsieve(m) &lt;&lt; std::endl;
}

int main(int argc, char *argv[]) {
  if (argc !=</span> <span class="num">2</span><span class="kwa">) {
    std::cerr &lt;&lt;</span> <span class="str">&quot;usage: nsieve &lt;n&gt;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="kwa">;
    return</span> <span class="num">1</span><span class="kwa">;
  }
  int n = atoi(argv[</span><span class="num">1</span><span class="kwa">]);
  test(n);
  if (n &gt;</span><span class="sym">=</span> <span class="num">1</span><span class="sym">)</span> test<span class="sym">(</span>n <span class="num">- 1</span><span class="sym">);
</span>  <span class="kwa">if</span> <span class="sym">(</span>n &gt;<span class="sym">=</span> <span class="num">2</span><span class="sym">)</span> test<span class="sym">(</span>n <span class="num">- 2</span><span class="sym">);
</span>  exit<span class="sym">(</span><span class="num">0</span><span class="sym">);
}</span>
