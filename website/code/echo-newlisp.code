#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>newlisp

# client<span class="sym">-</span>server.lsp <span class="sym">-</span> benchmark
# requires newLISP v <span class="num">8.1.7</span> <span class="kwa">or</span> later
#
# Contributed by Lutz Mueller
<span class="sym">(</span><span class="kwa">set</span> <span class="str">'DATA &quot;Hello there sailor</span><span class="esc">\n</span><span class="str">&quot;);</span>
<span class="str">(set '</span>bufferSize <span class="sym">(</span><span class="kwa">length</span> DATA<span class="sym">))</span>


<span class="sym">(</span>define <span class="sym">(</span>server port<span class="sym">)</span>
	<span class="sym">(</span><span class="kwa">set</span> <span class="str">'listen (net-listen port))</span>
<span class="str">	(set '</span>connection <span class="sym">(</span>net<span class="sym">-</span>accept listen<span class="sym">))</span>
	<span class="sym">(</span><span class="kwa">set</span> <span class="str">'N 0)</span>
<span class="str">	(while (net-receive connection '</span>buff bufferSize<span class="sym">)</span>
		<span class="sym">(</span>inc <span class="str">'N (length buff))</span>
<span class="str">		(net-send connection buff))</span>
<span class="str">	(net-close connection)</span>
<span class="str">	(net-close listen)</span>
<span class="str">	(println &quot;server processed &quot; N &quot; bytes&quot;))</span>
<span class="str"></span>
<span class="str"></span>
<span class="str">(define (client port n)</span>
<span class="str">	(set '</span>connection <span class="sym">(</span>net<span class="sym">-</span>connect <span class="str">&quot;127.0.0.1&quot;</span> port<span class="sym">))</span>
	<span class="sym">(</span>dotimes <span class="sym">(</span>x n<span class="sym">)</span>
		<span class="sym">(</span>net<span class="sym">-</span>send connection DATA<span class="sym">)</span>
		<span class="sym">(</span>net<span class="sym">-</span>receive connection <span class="str">'buff bufferSize)</span>
<span class="str">		(if (!= buff DATA) (println &quot;Received different message: &quot; buff)))</span>
<span class="str">	(net-close connection))</span>
<span class="str"></span>
<span class="str">(set '</span>n <span class="sym">(</span>integer <span class="sym">(</span><span class="kwa">nth</span> <span class="num">2</span> <span class="sym">(</span>main<span class="sym">-</span>args<span class="sym">))))</span>

<span class="sym">(</span>fork <span class="sym">(</span>server <span class="num">100001</span><span class="sym">))</span>
<span class="sym">(</span>sleep <span class="num">100</span><span class="sym">)</span>
<span class="sym">(</span>client <span class="num">100001</span> n<span class="sym">)</span>
<span class="sym">(</span><span class="kwa">exit</span><span class="sym">)</span>
<span class="slc">;; eof</span>
