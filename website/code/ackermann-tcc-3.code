<span class="com">/* -*- mode: c -*-</span>
<span class="com"> * $Id: ackermann-tcc-3.code,v 1.7 2005-12-02 08:05:56 bfulgham Exp $</span>
<span class="com"> * http://www.bagley.org/~doug/shootout/</span>
<span class="com"> *</span>
<span class="com"> * modified by Isaac Gouy</span>
<span class="com"> */</span>

<span class="dir">#include &lt;stdio.h&gt;</span>
<span class="dir">#include &lt;stdlib.h&gt;</span>
<span class="dir">#include &lt;unistd.h&gt;</span>

<span class="kwb">int</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="kwb">int</span> M<span class="sym">,</span> <span class="kwb">int</span> N<span class="sym">) {</span> <span class="kwa">return</span><span class="sym">(</span>M ? <span class="sym">(</span><span class="kwd">Ack</span><span class="sym">(</span>M<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>N ? <span class="kwd">Ack</span><span class="sym">(</span>M<span class="sym">,(</span>N<span class="sym">-</span><span class="num">1</span><span class="sym">)) :</span> <span class="num">1</span><span class="sym">)) :</span> N<span class="sym">+</span><span class="num">1</span><span class="sym">); }</span>

<span class="kwb">int</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {</span>
    <span class="kwb">int</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwd">atoi</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);</span>

    <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Ack(3,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">,</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">));</span>
    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);</span>
<span class="sym">}</span>

