<span class="line">    1 </span><span class="sym">/*</span> The Great Computer Language Shootout
<span class="line">    2 </span>     contributed by Isaac Gouy <span class="sym">(</span>Clean novice<span class="sym">)
</span><span class="line">    3 </span><span class="sym"> </span>   Updated by John van Groningen
<span class="line">    4 </span>
<span class="line">    5 </span>     http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/
</span><span class="line">    6 </span><span class="sym"> 
</span><span class="line">    7 </span><span class="sym"> </span>To compile<span class="sym">:
</span><span class="line">    8 </span><span class="sym">         </span>   cleanIDE.exe <span class="slc">--batch-force-build &quot;e:\shoot\contrib\clean\ary.prj&quot; 
</span><span class="line">    9 </span><span class="slc"></span>
<span class="line">   10 </span> To run<span class="sym">:
</span><span class="line">   11 </span><span class="sym"> </span>   ary.exe <span class="sym">-</span>con <span class="num">7000
</span><span class="line">   12 </span><span class="num"> </span><span class="sym">*/
</span><span class="line">   13 </span><span class="sym"> 
</span><span class="line">   14 </span><span class="sym">       
</span><span class="line">   15 </span><span class="sym"> </span><span class="kwa">module</span> ary
<span class="line">   16 </span> <span class="kwa">import</span> StdEnv<span class="sym">,</span> StdArrayExtensions<span class="sym">,</span> LanguageShootout
<span class="line">   17 </span>
<span class="line">   18 </span>  Start <span class="sym">=</span> toString y`.<span class="sym">[</span><span class="num">0</span><span class="sym">] +++</span> <span class="str">&quot; &quot;</span> <span class="sym">+++</span> toString y`.<span class="sym">[</span>n<span class="num">-1</span><span class="sym">] +++</span> <span class="str">&quot;\n&quot;</span>
<span class="line">   19 </span>    <span class="kwa">where
</span><span class="line">   20 </span><span class="kwa"> </span>   y` <span class="sym">=</span> loop x y <span class="sym">(</span>n<span class="num">-1</span><span class="sym">)</span> <span class="num">1000
</span><span class="line">   21 </span><span class="num">        
</span><span class="line">   22 </span><span class="num">    </span>   n <span class="sym">=</span> argi
<span class="line">   23 </span>        x <span class="sym">=</span> createX n
<span class="line">   24 </span>      y <span class="sym">=</span> createUnboxedIntArr n <span class="num">0
</span><span class="line">   25 </span><span class="num"> 
</span><span class="line">   26 </span><span class="num">    </span>   loop <span class="sym">:: !</span>{#<span class="kwb">Int</span>} <span class="sym">!*</span>{#<span class="kwb">Int</span>} <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">-&gt;</span> .{#<span class="kwb">Int</span>}
<span class="line">   27 </span>       loop x y n rep
<span class="line">   28 </span>       <span class="sym">|</span> rep<span class="sym">==</span><span class="num">0</span>   <span class="sym">=</span> y
<span class="line">   29 </span>                  <span class="sym">=</span> loop x <span class="sym">(</span>inc x y n<span class="sym">)</span> n <span class="sym">(</span>rep<span class="num">-1</span><span class="sym">)
</span><span class="line">   30 </span><span class="sym">             
</span><span class="line">   31 </span><span class="sym">                                                           </span>   inc x y j
<span class="line">   32 </span>       <span class="sym">|</span> j <span class="sym">&gt;=</span> <span class="num">0</span>  #<span class="sym">!</span> yj <span class="sym">=</span> y.<span class="sym">[</span>j<span class="sym">]
</span><span class="line">   33 </span><span class="sym">                 =</span> inc x {y <span class="sym">&amp; [</span>j<span class="sym">] =</span> yj <span class="sym">+</span> x.<span class="sym">[</span>j<span class="sym">]</span>} <span class="sym">(</span>j<span class="num">-1</span><span class="sym">)
</span><span class="line">   34 </span><span class="sym">                 =</span> y
<span class="line">   35 </span>
<span class="line">   36 </span>                                                      createX <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">-&gt;</span> {#<span class="kwb">Int</span>}
<span class="line">   37 </span> createX n <span class="sym">=</span> {i \\ i <span class="sym">&lt;- [</span><span class="num">1</span>..n<span class="sym">]</span>}                      
