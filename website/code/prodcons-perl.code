<span class="slc">#!/usr/bin/perl</span>
<span class="slc"># $Id: prodcons-perl.code,v 1.8 2006-09-20 05:52:21 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">use</span> strict<span class="sym">;</span>
<span class="kwa">use</span> Thread <span class="kwd">qw</span><span class="sym">(</span>cond_wait cond_signal<span class="sym">);</span>

<span class="kwc">my</span> <span class="kwb">$count</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
<span class="kwc">my</span> <span class="kwb">$data</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
<span class="kwc">my</span> <span class="kwb">$produced</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
<span class="kwc">my</span> <span class="kwb">$consumed</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>

<span class="kwa">sub</span> consumer <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">=</span> shift<span class="sym">;</span>
    <span class="kwa">while</span> <span class="sym">(</span><span class="num">1</span><span class="sym">) {</span>
	<span class="kwd">lock</span><span class="sym">(</span><span class="kwb">$count</span><span class="sym">);</span>
	<span class="kwd">cond_wait</span><span class="sym">(</span><span class="kwb">$count</span><span class="sym">)</span> <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$count</span> <span class="sym">==</span> <span class="num">0</span><span class="sym">);</span>
	<span class="kwc">my</span> <span class="kwb">$i</span> <span class="sym">=</span> <span class="kwb">$data</span><span class="sym">;</span>
	<span class="kwb">$count</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
	<span class="kwb">$consumed</span><span class="sym">++;</span>
	<span class="kwa">last if</span> <span class="sym">(</span><span class="kwb">$i</span> <span class="sym">==</span> <span class="kwb">$n</span><span class="sym">);</span>
	<span class="kwd">cond_signal</span><span class="sym">(</span><span class="kwb">$count</span><span class="sym">);</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">sub</span> producer <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">=</span> shift<span class="sym">;</span>
    <span class="kwa">for</span> <span class="sym">(</span><span class="kwc">my</span> <span class="kwb">$i</span><span class="sym">=</span><span class="num">1</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;=</span><span class="kwb">$n</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++) {</span>
	<span class="kwd">lock</span><span class="sym">(</span><span class="kwb">$count</span><span class="sym">);</span>
	<span class="kwd">cond_wait</span><span class="sym">(</span><span class="kwb">$count</span><span class="sym">)</span> <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$count</span> <span class="sym">==</span> <span class="num">1</span><span class="sym">);</span>
	<span class="kwb">$data</span> <span class="sym">=</span> <span class="kwb">$i</span><span class="sym">;</span>
	<span class="kwb">$count</span> <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
	<span class="kwb">$produced</span><span class="sym">++;</span>
	<span class="kwd">cond_signal</span><span class="sym">(</span><span class="kwb">$count</span><span class="sym">);</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">sub</span> main <span class="sym">{</span>
    <span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">= (</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] &lt;</span> <span class="num">1</span><span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
    <span class="kwc">my</span> <span class="kwb">$p</span> <span class="sym">=</span> Thread<span class="sym">-&gt;</span><span class="kwd">new</span><span class="sym">(</span><span class="esc">\&amp;</span>producer<span class="sym">,</span> <span class="kwb">$n</span><span class="sym">);</span>
    <span class="kwc">my</span> <span class="kwb">$c</span> <span class="sym">=</span> Thread<span class="sym">-&gt;</span><span class="kwd">new</span><span class="sym">(</span><span class="esc">\&amp;</span>consumer<span class="sym">,</span> <span class="kwb">$n</span><span class="sym">);</span>
    <span class="kwb">$p</span><span class="sym">-&gt;</span>join<span class="sym">;</span>
    <span class="kwb">$c</span><span class="sym">-&gt;</span>join<span class="sym">;</span>
    print <span class="str">&quot;$produced $consumed</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="sym">&amp;</span><span class="kwd">main</span><span class="sym">();</span>
