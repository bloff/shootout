<span class="slc">-- The Great Computer Language Shootout
</span><span class="slc">-- http://shootout.alioth.debian.org
</span><span class="slc">--
</span><span class="slc">-- contributed by Jim Rogers
</span>
<span class="kwa">with</span> Ada.Text_Io<span class="sym">;</span> <span class="kwa">use</span> Ada.Text_Io<span class="sym">;
</span><span class="kwa">with</span> Ada.Command_Line<span class="sym">;</span> <span class="kwa">use</span> Ada.Command_Line<span class="sym">;

</span><span class="kwa">procedure</span> Takfp <span class="kwa">is
   package</span> Flt_Io <span class="kwa">is new</span> Ada.Text_Io.Float_Io<span class="sym">(</span><span class="kwb">Long_Float</span><span class="sym">);
</span>   <span class="kwa">use</span> Flt_Io<span class="sym">;
</span>   <span class="kwa">function</span> Tak <span class="sym">(</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z <span class="sym">:</span> <span class="kwb">Long_Float</span><span class="sym">)</span> <span class="kwa">return</span> <span class="kwb">Long_Float</span> <span class="kwa">is
   begin
      if</span> Y <span class="sym">&gt;=</span> X <span class="kwa">then
         return</span> Z<span class="sym">;
</span>      <span class="kwa">end if</span><span class="sym">;
</span>      <span class="kwa">return</span> Tak<span class="sym">(</span>Tak<span class="sym">(</span>X<span class="num">-1.0</span><span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">),</span> Tak<span class="sym">(</span>Y<span class="num">-1.0</span><span class="sym">,</span> X<span class="sym">,</span> Z<span class="sym">),</span> Tak<span class="sym">(</span>Z<span class="num">-1.0</span><span class="sym">,</span> X<span class="sym">,</span> Y<span class="sym">));
</span>   <span class="kwa">end</span> Tak<span class="sym">;
</span>   N <span class="sym">:</span> <span class="kwb">Long_Float</span> <span class="sym">:=</span> <span class="num">9.0</span><span class="sym">;
</span><span class="kwa">begin
   if</span> Argument_Count <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">then
</span>      N <span class="sym">:=</span> <span class="kwb">Long_Float</span><span class="sym">'</span>Value<span class="sym">(</span>Argument<span class="sym">(</span><span class="num">1</span><span class="sym">));
</span>   <span class="kwa">end if</span><span class="sym">;
</span>   Put<span class="sym">(</span>Item <span class="sym">=&gt;</span> Tak<span class="sym">(</span>N <span class="sym">*</span> <span class="num">3.0</span><span class="sym">,</span> N <span class="sym">*</span> <span class="num">2.0</span><span class="sym">,</span> N<span class="sym">*</span><span class="num">1.0</span><span class="sym">),</span> Exp <span class="sym">=&gt;</span> <span class="num">0</span><span class="sym">,</span> Aft <span class="sym">=&gt;</span> <span class="num">1</span><span class="sym">);
</span>   New_Line<span class="sym">;
</span><span class="kwa">end</span> Takfp<span class="sym">;
</span>
