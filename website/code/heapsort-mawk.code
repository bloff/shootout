<span class="slc"># $Id: heapsort-mawk.code,v 1.7 2006-09-20 05:51:33 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwc">function</span> gen_random<span class="sym">(</span>n<span class="sym">) {</span> <span class="kwa">return</span><span class="sym">( (</span>n <span class="sym">* (</span>LAST <span class="sym">= (</span>LAST <span class="sym">*</span> IA <span class="sym">+</span> IC<span class="sym">)</span> % IM<span class="sym">)) /</span> IM <span class="sym">); }</span>

<span class="kwc">function</span> heapsort <span class="sym">(</span>n<span class="sym">,</span> ra<span class="sym">) {</span>
    l <span class="sym">=</span> int<span class="sym">(</span><span class="num">0.5</span><span class="sym">+</span>n<span class="sym">/</span><span class="num">2</span><span class="sym">) +</span> <span class="num">1</span>
    ir <span class="sym">=</span> n<span class="sym">;</span>
    <span class="kwa">for</span> <span class="sym">(;;) {</span>
        <span class="kwa">if</span> <span class="sym">(</span>l <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">) {</span>
            rra <span class="sym">=</span> ra<span class="sym">[--</span>l<span class="sym">];</span>
        <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
            rra <span class="sym">=</span> ra<span class="sym">[</span>ir<span class="sym">];</span>
            ra<span class="sym">[</span>ir<span class="sym">] =</span> ra<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
            <span class="kwa">if</span> <span class="sym">(--</span>ir <span class="sym">==</span> <span class="num">1</span><span class="sym">) {</span>
                ra<span class="sym">[</span><span class="num">1</span><span class="sym">] =</span> rra<span class="sym">;</span>
                <span class="kwa">return</span><span class="sym">;</span>
            <span class="sym">}</span>
        <span class="sym">}</span>
        i <span class="sym">=</span> l<span class="sym">;</span>
        j <span class="sym">=</span> l <span class="sym">*</span> <span class="num">2</span><span class="sym">;</span>
        <span class="kwa">while</span> <span class="sym">(</span>j <span class="sym">&lt;=</span> ir<span class="sym">) {</span>
            <span class="kwa">if</span> <span class="sym">(</span>j <span class="sym">&lt;</span> ir <span class="sym">&amp;&amp;</span> ra<span class="sym">[</span>j<span class="sym">] &lt;</span> ra<span class="sym">[</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">]) { ++</span>j<span class="sym">; }</span>
            <span class="kwa">if</span> <span class="sym">(</span>rra <span class="sym">&lt;</span> ra<span class="sym">[</span>j<span class="sym">]) {</span>
                ra<span class="sym">[</span>i<span class="sym">] =</span> ra<span class="sym">[</span>j<span class="sym">];</span>
                j <span class="sym">+= (</span>i <span class="sym">=</span> j<span class="sym">);</span>
            <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
                j <span class="sym">=</span> ir <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
            <span class="sym">}</span>
        <span class="sym">}</span>
        ra<span class="sym">[</span>i<span class="sym">] =</span> rra<span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">BEGIN</span> <span class="sym">{</span>
    IM <span class="sym">=</span> <span class="num">139968</span><span class="sym">;</span>
    IA <span class="sym">=</span> <span class="num">3877</span><span class="sym">;</span>
    IC <span class="sym">=</span> <span class="num">29573</span><span class="sym">;</span>
    LAST <span class="sym">=</span> <span class="num">42</span><span class="sym">;</span>

    n <span class="sym">= (</span><span class="kwb">ARGV</span><span class="sym">[</span><span class="num">1</span><span class="sym">] &lt;</span> <span class="num">1</span><span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> <span class="kwb">ARGV</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
    ary<span class="sym">[</span><span class="num">0</span><span class="sym">] =</span> <span class="num">0</span><span class="sym">;</span>
    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">=</span><span class="num">1</span><span class="sym">;</span> i<span class="sym">&lt;=</span>n<span class="sym">;</span> i<span class="sym">++) {</span>
	ary<span class="sym">[</span>i<span class="sym">] =</span> gen_random<span class="sym">(</span><span class="num">1.0</span><span class="sym">);</span>
    <span class="sym">}</span>

    heapsort<span class="sym">(</span>n<span class="sym">,</span> ary<span class="sym">);</span>

    <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">%.10</span><span class="str">f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> ary<span class="sym">[</span>n<span class="sym">]);</span>

    <span class="kwa">exit</span><span class="sym">;</span>
<span class="sym">}</span>
