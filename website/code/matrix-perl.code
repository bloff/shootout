<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">#!/usr/bin/perl 
</FONT></I><I><FONT COLOR="#B22222"># $Id: matrix-perl.code,v 1.2 2004-11-08 08:15:17 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222"># http://www.bagley.org/~doug/shootout/
</FONT></I>
<I><FONT COLOR="#B22222"># This program based on the original from:
</FONT></I><I><FONT COLOR="#B22222"># &quot;The What, Why, Who, and Where of Python&quot; By Aaron R. Watters
</FONT></I><I><FONT COLOR="#B22222"># http://www.networkcomputing.com/unixworld/tutorial/005/005.html
</FONT></I>
<I><FONT COLOR="#B22222"># modified to pass rows and cols, and avoid matrix size checks
</FONT></I><I><FONT COLOR="#B22222"># I've sped up the original quite a bit by removing some loop
</FONT></I><I><FONT COLOR="#B22222"># invariants and declaring &quot;use integer&quot;
</FONT></I>
<B><FONT COLOR="#A020F0">use</FONT></B> strict;
<B><FONT COLOR="#A020F0">use</FONT></B> integer;

<B><FONT COLOR="#A020F0">my</FONT></B> $size = 30;

<B><FONT COLOR="#A020F0">sub</FONT></B> mkmatrix {
    <B><FONT COLOR="#A020F0">my</FONT></B>($rows, $cols) = @_;
    --$rows; --$cols;
    <B><FONT COLOR="#A020F0">my</FONT></B> $count = 1;
    <B><FONT COLOR="#A020F0">my</FONT></B> @mx = ();
    <B><FONT COLOR="#A020F0">foreach</FONT></B> (0 .. $rows) {
	<B><FONT COLOR="#A020F0">my</FONT></B> @row = ();
	$row[$_] = $count++ <B><FONT COLOR="#A020F0">foreach</FONT></B> (0 .. $cols);
	<B><FONT COLOR="#A020F0">push</FONT></B>(@mx, \@row);
    }
    <B><FONT COLOR="#A020F0">return</FONT></B>(\@mx);
}

<B><FONT COLOR="#A020F0">sub</FONT></B> mmult {
    <B><FONT COLOR="#A020F0">my</FONT></B> ($rows, $cols, $m1, $m2) = @_;
    <B><FONT COLOR="#A020F0">my</FONT></B> @m3 = ();
    --$rows; --$cols;
    <B><FONT COLOR="#A020F0">for</FONT></B> <B><FONT COLOR="#A020F0">my</FONT></B> $i (0 .. $rows) {
	<B><FONT COLOR="#A020F0">my</FONT></B> @row = ();
	<B><FONT COLOR="#A020F0">my</FONT></B> $m1i = $m1-&gt;[$i];
	<B><FONT COLOR="#A020F0">for</FONT></B> <B><FONT COLOR="#A020F0">my</FONT></B> $j (0 .. $cols) {
	    <B><FONT COLOR="#A020F0">my</FONT></B> $val = 0;
	    <B><FONT COLOR="#A020F0">for</FONT></B> <B><FONT COLOR="#A020F0">my</FONT></B> $k (0 .. $cols) {
		$val += $m1i-&gt;[$k] * $m2-&gt;[$k]-&gt;[$j];
	    }
	    <B><FONT COLOR="#A020F0">push</FONT></B>(@row, $val);
	}
	<B><FONT COLOR="#A020F0">push</FONT></B>(@m3, \@row);
    }
    <B><FONT COLOR="#A020F0">return</FONT></B>(\@m3);
}

<B><FONT COLOR="#A020F0">my</FONT></B> $N = $ARGV[0] || 1;

<B><FONT COLOR="#A020F0">my</FONT></B> $m1 = mkmatrix($size, $size);
<B><FONT COLOR="#A020F0">my</FONT></B> $m2 = mkmatrix($size, $size);
<B><FONT COLOR="#A020F0">my</FONT></B> $mm;
<B><FONT COLOR="#A020F0">while</FONT></B> ($N--) {
    $mm = mmult($size, $size, $m1, $m2);
}
<B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$mm-&gt;[0]-&gt;[0] $mm-&gt;[2]-&gt;[3] $mm-&gt;[3]-&gt;[2] $mm-&gt;[4]-&gt;[4]\n&quot;</FONT></B>;
</pre></td></tr></table>
