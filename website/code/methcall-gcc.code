<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">/* -*- mode: c -*-
 * $Id: methcall-gcc.code,v 1.2 2004-11-08 08:15:17 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 */</FONT></I>

#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;stdio.h&gt;</FONT></B>
#<B><FONT COLOR="#5F9EA0">include</FONT></B> <B><FONT COLOR="#BC8F8F">&lt;stdlib.h&gt;</FONT></B>


<B><FONT COLOR="#228B22">enum</FONT></B> {false, true};

#<B><FONT COLOR="#5F9EA0">define</FONT></B> <FONT COLOR="#B8860B">TOGGLE</FONT> \
    <B><FONT COLOR="#228B22">char</FONT></B> state; \
    <B><FONT COLOR="#228B22">char</FONT></B> (*value)(<B><FONT COLOR="#228B22">struct</FONT></B> Toggle *); \
    <B><FONT COLOR="#228B22">struct</FONT></B> Toggle *(*activate)(<B><FONT COLOR="#228B22">struct</FONT></B> Toggle *)

#<B><FONT COLOR="#5F9EA0">define</FONT></B> <FONT COLOR="#B8860B">DESTROY</FONT>  free

<B><FONT COLOR="#228B22">typedef</FONT></B> <B><FONT COLOR="#228B22">struct</FONT></B> Toggle {
    TOGGLE;
} Toggle;

<B><FONT COLOR="#228B22">char</FONT></B> <B><FONT COLOR="#0000FF">toggle_value</FONT></B>(Toggle *this) {
    <B><FONT COLOR="#A020F0">return</FONT></B>(this-&gt;state);
}
Toggle *<B><FONT COLOR="#0000FF">toggle_activate</FONT></B>(Toggle *this) {
    this-&gt;state = !this-&gt;state;
    <B><FONT COLOR="#A020F0">return</FONT></B>(this);
}
Toggle *<B><FONT COLOR="#0000FF">init_Toggle</FONT></B>(Toggle *this, <B><FONT COLOR="#228B22">char</FONT></B> start_state) {
    this-&gt;state = start_state;
    this-&gt;value = toggle_value;
    this-&gt;activate = toggle_activate;
    <B><FONT COLOR="#A020F0">return</FONT></B>(this);
}
Toggle *<B><FONT COLOR="#0000FF">new_Toggle</FONT></B>(<B><FONT COLOR="#228B22">char</FONT></B> start_state) {
    Toggle *this = (Toggle *)malloc(<B><FONT COLOR="#A020F0">sizeof</FONT></B>(Toggle));
    <B><FONT COLOR="#A020F0">return</FONT></B>(init_Toggle(this, start_state));
}


<B><FONT COLOR="#228B22">typedef</FONT></B> <B><FONT COLOR="#228B22">struct</FONT></B> NthToggle {
    TOGGLE;
    <B><FONT COLOR="#228B22">int</FONT></B> count_max;
    <B><FONT COLOR="#228B22">int</FONT></B> counter;
} NthToggle;

NthToggle *<B><FONT COLOR="#0000FF">nth_toggle_activate</FONT></B>(NthToggle *this) {
    <B><FONT COLOR="#A020F0">if</FONT></B> (++this-&gt;counter &gt;= this-&gt;count_max) {
	this-&gt;state = !this-&gt;state;
	this-&gt;counter = 0;
    }
    <B><FONT COLOR="#A020F0">return</FONT></B>(this);
}
NthToggle *<B><FONT COLOR="#0000FF">init_NthToggle</FONT></B>(NthToggle *this, <B><FONT COLOR="#228B22">int</FONT></B> max_count) {
    this-&gt;count_max = max_count;
    this-&gt;counter = 0;
    this-&gt;activate = (Toggle *(*)(Toggle *))nth_toggle_activate;
    <B><FONT COLOR="#A020F0">return</FONT></B>(this);
}
NthToggle *<B><FONT COLOR="#0000FF">new_NthToggle</FONT></B>(<B><FONT COLOR="#228B22">char</FONT></B> start_state, <B><FONT COLOR="#228B22">int</FONT></B> max_count) {
    NthToggle *this = (NthToggle *)malloc(<B><FONT COLOR="#A020F0">sizeof</FONT></B>(NthToggle));
    this = (NthToggle *)init_Toggle((Toggle *)this, start_state);
    <B><FONT COLOR="#A020F0">return</FONT></B>(init_NthToggle(this, max_count));
}


<B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#0000FF">main</FONT></B>(<B><FONT COLOR="#228B22">int</FONT></B> argc, <B><FONT COLOR="#228B22">char</FONT></B> *argv[]) {
    <B><FONT COLOR="#228B22">int</FONT></B> i, n = ((argc == 2) ? atoi(argv[1]) : 1);
    Toggle *tog;
    NthToggle *ntog;
    <B><FONT COLOR="#228B22">char</FONT></B> val = true;

    tog = new_Toggle(true);
    <B><FONT COLOR="#A020F0">for</FONT></B> (i=0; i&lt;n; i++) {
	val = tog-&gt;activate(tog)-&gt;value(tog);
    }
    fputs(val ? <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> : <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>, stdout);
    DESTROY(tog);
    
    val = true;
    ntog = new_NthToggle(val, 3);
    <B><FONT COLOR="#A020F0">for</FONT></B> (i=0; i&lt;n; i++) {
	val = ntog-&gt;activate(ntog)-&gt;value(ntog);
    }
    fputs(val ? <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> : <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>, stdout);
    DESTROY(ntog);
    <B><FONT COLOR="#A020F0">return</FONT></B> 0;
}</pre></td></tr></table>
