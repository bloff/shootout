<span class="line">    1 </span>define main<span class="sym">()
</span><span class="line">    2 </span><span class="sym">{
</span><span class="line">    3 </span><span class="sym"></span>   variable NUM<span class="sym">;
</span><span class="line">    4 </span><span class="sym"></span>   <span class="kwa">if</span> <span class="sym">(</span>__argc <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">)</span> NUM <span class="sym">=</span> integer <span class="sym">(</span>__argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);</span> <span class="kwa">else</span> NUM <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">    5 </span><span class="sym"></span>   variable flags <span class="sym">=</span> Int_Type<span class="sym">[</span><span class="num">8192</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">];
</span><span class="line">    6 </span><span class="sym"></span>   loop <span class="sym">(</span>NUM<span class="sym">)
</span><span class="line">    7 </span><span class="sym">     {
</span><span class="line">    8 </span><span class="sym"></span>        flags<span class="sym">[*] =</span> <span class="num">1</span><span class="sym">;
</span><span class="line">    9 </span><span class="sym"></span>        variable count <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym"></span>        _for <span class="sym">(</span><span class="num">2</span><span class="sym">,</span> <span class="num">8192</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   11 </span><span class="sym">          {
</span><span class="line">   12 </span><span class="sym"></span>             variable i <span class="sym">= ();
</span><span class="line">   13 </span><span class="sym"></span>             <span class="kwa">if</span> <span class="sym">(</span>flags<span class="sym">[</span>i<span class="sym">])
</span><span class="line">   14 </span><span class="sym">               {
</span><span class="line">   15 </span><span class="sym"></span>                  flags<span class="sym">[[</span>i<span class="sym">+</span>i<span class="sym">:</span><span class="num">8192</span><span class="sym">:</span>i<span class="sym">]] =</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   16 </span><span class="sym"></span>                  count<span class="sym">++;
</span><span class="line">   17 </span><span class="sym">               }
</span><span class="line">   18 </span><span class="sym">          }
</span><span class="line">   19 </span><span class="sym">     }
</span><span class="line">   20 </span><span class="sym">
</span><span class="line">   21 </span><span class="sym"></span>   fprintf <span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;Count: %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> count<span class="sym">);
</span><span class="line">   22 </span><span class="sym">}
</span><span class="line">   23 </span><span class="sym"></span>main<span class="sym">();</span>
