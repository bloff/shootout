<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(* -*- mode: sml -*-
 * $Id: strcat-mlton.code,v 1.2 2004-11-08 08:15:53 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 * from Stephen Weeks
 *)</FONT></I>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for</FONT></I></B></FONT></B> (start, stop, f) <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">let</FONT></B>
<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">loop</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B>
	 <B><FONT COLOR="#A020F0">if</FONT></B> i <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> stop
	    <B><FONT COLOR="#A020F0">then</FONT></B> ()
	 <B><FONT COLOR="#A020F0">else</FONT></B> (f i; loop (i <B><FONT COLOR="#5F9EA0">+</FONT></B> 1))
   <B><FONT COLOR="#A020F0">in</FONT></B>
      loop start
   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">atoi</FONT></I></B></FONT></B> s <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">case</FONT></B> Int.fromString s <B><FONT COLOR="#A020F0">of</FONT></B> <B><FONT COLOR="#5F9EA0">SOME</FONT></B> num <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> num <B><FONT COLOR="#5F9EA0">|</FONT></B> <B><FONT COLOR="#5F9EA0">NONE</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 0
<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">printl</FONT></I></B></FONT></B> [] <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">|</FONT></B> printl(h<B><FONT COLOR="#5F9EA0">::</FONT></B>t) <B><FONT COLOR="#5F9EA0">=</FONT></B> ( <B><FONT COLOR="#A020F0">print</FONT></B> h ; printl t )

<B><FONT COLOR="#A020F0">val</FONT></B> stuff <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;hello\n&quot;</FONT></B>

<B><FONT COLOR="#5F9EA0">structure</FONT></B> Buffer:
   <B><FONT COLOR="#5F9EA0">sig</FONT></B>
      <B><FONT COLOR="#A020F0">type</FONT></B> 'a t

      <B><FONT COLOR="#A020F0">val</FONT></B> add: 'a t <B><FONT COLOR="#5F9EA0">*</FONT></B> 'a <B><FONT COLOR="#228B22">array</FONT></B> <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">unit</FONT></B>
      <B><FONT COLOR="#A020F0">val</FONT></B> length: 'a t <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#228B22">int</FONT></B>
      <B><FONT COLOR="#A020F0">val</FONT></B> new: 'a <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 'a t
   <B><FONT COLOR="#A020F0">end</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#5F9EA0">struct</FONT></B>
      <B><FONT COLOR="#A020F0">datatype</FONT></B> 'a t <B><FONT COLOR="#5F9EA0">=</FONT></B> T <B><FONT COLOR="#A020F0">of</FONT></B> {dummy: 'a,
			    length: <B><FONT COLOR="#228B22">int</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B>,
			    elts: 'a <B><FONT COLOR="#228B22">array</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B>}

<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">add</FONT></I></B></FONT></B> (T {dummy, elts, length}, a) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	 <B><FONT COLOR="#A020F0">let</FONT></B>
	    <B><FONT COLOR="#A020F0">val</FONT></B> l <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>length
	    <B><FONT COLOR="#A020F0">val</FONT></B> e <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>elts
	    <B><FONT COLOR="#A020F0">val</FONT></B> en <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.length e
	    <B><FONT COLOR="#A020F0">val</FONT></B> an <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.length a
	    <B><FONT COLOR="#A020F0">val</FONT></B> e <B><FONT COLOR="#5F9EA0">=</FONT></B>
	       <B><FONT COLOR="#A020F0">if</FONT></B> l <B><FONT COLOR="#5F9EA0">+</FONT></B> an <B><FONT COLOR="#5F9EA0">&gt;=</FONT></B> en
		  <B><FONT COLOR="#A020F0">then</FONT></B>
		     <B><FONT COLOR="#A020F0">let</FONT></B>
			<B><FONT COLOR="#A020F0">val</FONT></B> e <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.tabulate (2 <B><FONT COLOR="#5F9EA0">*</FONT></B> en, <B><FONT COLOR="#A020F0">fn</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
						<B><FONT COLOR="#A020F0">if</FONT></B> i &lt; l
						   <B><FONT COLOR="#A020F0">then</FONT></B> Array.sub (e, i)
						<B><FONT COLOR="#A020F0">else</FONT></B> dummy)
			<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> elts <B><FONT COLOR="#5F9EA0">:=</FONT></B> e
		     <B><FONT COLOR="#A020F0">in</FONT></B> e
		     <B><FONT COLOR="#A020F0">end</FONT></B>
	       <B><FONT COLOR="#A020F0">else</FONT></B> e
	    <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B>
	       Array.copy {src <B><FONT COLOR="#5F9EA0">=</FONT></B> a, dst <B><FONT COLOR="#5F9EA0">=</FONT></B> e, di <B><FONT COLOR="#5F9EA0">=</FONT></B> l}
	    <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> length <B><FONT COLOR="#5F9EA0">:=</FONT></B> l <B><FONT COLOR="#5F9EA0">+</FONT></B> an
	 <B><FONT COLOR="#A020F0">in</FONT></B> ()
	 <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">new</FONT></I></B></FONT></B> (dummy: 'a) <B><FONT COLOR="#5F9EA0">=</FONT></B> T {dummy <B><FONT COLOR="#5F9EA0">=</FONT></B> dummy,
			       length <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 0,
			       elts <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> (Array.<B><FONT COLOR="#228B22">array</FONT></B> (32, dummy))}

<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">length</FONT></I></B></FONT></B> (T {length, ...}) <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>length
   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main</FONT></I></B></FONT></B> (name, args) <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">let</FONT></B>
      <B><FONT COLOR="#A020F0">val</FONT></B> stuff <B><FONT COLOR="#5F9EA0">=</FONT></B>
	 Array.tabulate (String.size stuff, <B><FONT COLOR="#A020F0">fn</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> String.sub (stuff, i))
      <B><FONT COLOR="#A020F0">val</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">atoi</FONT></B> (<B><FONT COLOR="#5F9EA0">hd</FONT></B> (args <B><FONT COLOR="#5F9EA0">@</FONT></B> [<B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>]))
      <B><FONT COLOR="#A020F0">val</FONT></B> b <B><FONT COLOR="#5F9EA0">=</FONT></B> Buffer.new #<B><FONT COLOR="#BC8F8F">&quot;\000&quot;</FONT></B>
      <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> for (1, n, <B><FONT COLOR="#A020F0">fn</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> Buffer.add (b, stuff))
      <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> printl [Int.toString (Buffer.length b)]
   <B><FONT COLOR="#A020F0">in</FONT></B>
      ()
   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> main( CommandLine.name(), CommandLine.arguments() )</pre></td></tr></table>
