<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(*
 * $Id: lists1-ocamlb.code,v 1.2 2004-11-08 08:15:15 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 *)</FONT></I>

<I><FONT COLOR="#B22222">(*
# List.
- : int = 45
 *)</FONT></I>

<B><FONT COLOR="#A020F0">open</FONT></B> List
<B><FONT COLOR="#A020F0">open</FONT></B> Printf

<B><FONT COLOR="#A020F0">let</FONT></B> seq n <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B> <B><FONT COLOR="#A020F0">rec</FONT></B> _seq m l <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> m <B><FONT COLOR="#5F9EA0">=</FONT></B> 0 <B><FONT COLOR="#A020F0">then</FONT></B> l <B><FONT COLOR="#A020F0">else</FONT></B> _seq (m <B><FONT COLOR="#5F9EA0">-</FONT></B> 1) (m<B><FONT COLOR="#5F9EA0">::</FONT></B>l) <B><FONT COLOR="#A020F0">in</FONT></B>
  _seq n []

<B><FONT COLOR="#A020F0">let</FONT></B> pop_head l <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B> item <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#5F9EA0">hd</FONT></B>(<B><FONT COLOR="#5F9EA0">!</FONT></B>l) <B><FONT COLOR="#A020F0">in</FONT></B> l <B><FONT COLOR="#5F9EA0">:=</FONT></B> <B><FONT COLOR="#5F9EA0">tl</FONT></B>(<B><FONT COLOR="#5F9EA0">!</FONT></B>l); item

<B><FONT COLOR="#A020F0">let</FONT></B> push_head l item <B><FONT COLOR="#5F9EA0">=</FONT></B>
  l <B><FONT COLOR="#5F9EA0">:=</FONT></B> item <B><FONT COLOR="#5F9EA0">::</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>l

<B><FONT COLOR="#A020F0">let</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B>
    try int_of_string Sys.argv.(1)
    <B><FONT COLOR="#A020F0">with</FONT></B> Invalid_argument _ <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 1 <B><FONT COLOR="#A020F0">in</FONT></B>

  <I><FONT COLOR="#B22222">(* create list (A) of integers from 1 through N *)</FONT></I>
  <B><FONT COLOR="#A020F0">let</FONT></B> a <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> (seq n)

  <I><FONT COLOR="#B22222">(* create empty list B *)</FONT></I>
  <B><FONT COLOR="#A020F0">and</FONT></B> b <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> [] <B><FONT COLOR="#A020F0">in</FONT></B>

  <I><FONT COLOR="#B22222">(* move each individual item from A to B, in a loop, reversing order *)</FONT></I>
  <B><FONT COLOR="#A020F0">let</FONT></B> <B><FONT COLOR="#A020F0">rec</FONT></B> loop a b <B><FONT COLOR="#5F9EA0">=</FONT></B>
    match <B><FONT COLOR="#5F9EA0">!</FONT></B>a <B><FONT COLOR="#A020F0">with</FONT></B>
      [] <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> ()
    <B><FONT COLOR="#5F9EA0">|</FONT></B> _ <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> begin push_head b (pop_head a) ; loop a b <B><FONT COLOR="#A020F0">end</FONT></B>
  <B><FONT COLOR="#A020F0">in</FONT></B> loop a b;

  <I><FONT COLOR="#B22222">(* print first 2 items in B *)</FONT></I>
  printf <B><FONT COLOR="#BC8F8F">&quot;%d %d\n&quot;</FONT></B> (<B><FONT COLOR="#5F9EA0">hd</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>b) (<B><FONT COLOR="#5F9EA0">hd</FONT></B> (<B><FONT COLOR="#5F9EA0">tl</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>b));

  <I><FONT COLOR="#B22222">(* reverse B (can be done in place) *)</FONT></I>
  b <B><FONT COLOR="#5F9EA0">:=</FONT></B> rev <B><FONT COLOR="#5F9EA0">!</FONT></B>b;

  <I><FONT COLOR="#B22222">(* is 0 a member of B? *)</FONT></I>
  <B><FONT COLOR="#A020F0">if</FONT></B> mem 0 <B><FONT COLOR="#5F9EA0">!</FONT></B>b <B><FONT COLOR="#A020F0">then</FONT></B> print_endline <B><FONT COLOR="#BC8F8F">&quot;true&quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> print_endline <B><FONT COLOR="#BC8F8F">&quot;false&quot;</FONT></B>;

  <I><FONT COLOR="#B22222">(* is N a member of B? *)</FONT></I>
  <B><FONT COLOR="#A020F0">if</FONT></B> mem n <B><FONT COLOR="#5F9EA0">!</FONT></B>b <B><FONT COLOR="#A020F0">then</FONT></B> print_endline <B><FONT COLOR="#BC8F8F">&quot;true&quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> print_endline <B><FONT COLOR="#BC8F8F">&quot;false&quot;</FONT></B>;

  <I><FONT COLOR="#B22222">(* filter values from B to A that are less than N/2, preserving order *)</FONT></I>
  <B><FONT COLOR="#A020F0">let</FONT></B> mid <B><FONT COLOR="#5F9EA0">=</FONT></B> n<B><FONT COLOR="#5F9EA0">/</FONT></B>2 <B><FONT COLOR="#A020F0">in</FONT></B>
  a <B><FONT COLOR="#5F9EA0">:=</FONT></B> filter (<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">x</FONT></I></B></FONT></B> <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> x &lt; mid) <B><FONT COLOR="#5F9EA0">!</FONT></B>b;

  <I><FONT COLOR="#B22222">(* print first ten items of A *)</FONT></I>
  <B><FONT COLOR="#A020F0">let</FONT></B> <B><FONT COLOR="#A020F0">rec</FONT></B> print_n n l <B><FONT COLOR="#5F9EA0">=</FONT></B>
    match l <B><FONT COLOR="#A020F0">with</FONT></B>
      [] <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> ()
    <B><FONT COLOR="#5F9EA0">|</FONT></B> _ <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> n <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 0 <B><FONT COLOR="#A020F0">then</FONT></B> begin
	printf <B><FONT COLOR="#BC8F8F">&quot;%d%s&quot;</FONT></B> (<B><FONT COLOR="#5F9EA0">hd</FONT></B> l) (<B><FONT COLOR="#A020F0">if</FONT></B> n <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 1 <B><FONT COLOR="#A020F0">then</FONT></B> <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B> <B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B>);
	print_n (n <B><FONT COLOR="#5F9EA0">-</FONT></B> 1) (<B><FONT COLOR="#5F9EA0">tl</FONT></B> l)
    <B><FONT COLOR="#A020F0">end</FONT></B>
  <B><FONT COLOR="#A020F0">in</FONT></B> print_n 10 <B><FONT COLOR="#5F9EA0">!</FONT></B>a;

  <I><FONT COLOR="#B22222">(* print sum of items in A that are less than 1000 *)</FONT></I>
  printf <B><FONT COLOR="#BC8F8F">&quot;%d\n&quot;</FONT></B> (fold_left (<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ac</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> i &lt; 1000 <B><FONT COLOR="#A020F0">then</FONT></B> ac <B><FONT COLOR="#5F9EA0">+</FONT></B> i <B><FONT COLOR="#A020F0">else</FONT></B> ac) 0 <B><FONT COLOR="#5F9EA0">!</FONT></B>a);

  <I><FONT COLOR="#B22222">(* append B to end of A *)</FONT></I>
  a <B><FONT COLOR="#5F9EA0">:=</FONT></B> append <B><FONT COLOR="#5F9EA0">!</FONT></B>a <B><FONT COLOR="#5F9EA0">!</FONT></B>b;

  <I><FONT COLOR="#B22222">(* print length and last element of A *)</FONT></I>
  printf <B><FONT COLOR="#BC8F8F">&quot;%d %d\n&quot;</FONT></B> (length <B><FONT COLOR="#5F9EA0">!</FONT></B>a) (fold_left (<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">ac</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> i) 0 <B><FONT COLOR="#5F9EA0">!</FONT></B>a);
</pre></td></tr></table>
