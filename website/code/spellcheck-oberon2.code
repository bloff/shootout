<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(* The Great Computer Language Shootout
   http://shootout.alioth.debian.org

   contributed by Isaac Gouy (Oberon-2 novice)
*)</FONT></I>

<B><FONT COLOR="#228B22">MODULE</FONT></B> Spellcheck;
<B><FONT COLOR="#5F9EA0">IMPORT</FONT></B> IO, IO:StdChannels, S<B><FONT COLOR="#5F9EA0">:=</FONT></B>SYSTEM, SimpleHash, In, Out, Files, TextRider;

<B><FONT COLOR="#5F9EA0">CONST</FONT></B>
   maxWordSize <B><FONT COLOR="#5F9EA0">=</FONT></B> 32;
   readSize <B><FONT COLOR="#5F9EA0">=</FONT></B> 4096;   
   
<B><FONT COLOR="#A020F0">TYPE</FONT></B>
   FixedBuffer <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">ARRAY</FONT></B> readSize <B><FONT COLOR="#A020F0">OF</FONT></B> <B><FONT COLOR="#228B22">CHAR</FONT></B>;
   FixedBufferProc <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">PROCEDURE</FONT></B> (<B><FONT COLOR="#A020F0">VAR</FONT></B> b: FixedBuffer; <B><FONT COLOR="#A020F0">VAR</FONT></B> pos: <B><FONT COLOR="#228B22">LONGINT</FONT></B>); 
   WordString <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">ARRAY</FONT></B> maxWordSize <B><FONT COLOR="#A020F0">OF</FONT></B> <B><FONT COLOR="#228B22">CHAR</FONT></B>;   

<B><FONT COLOR="#A020F0">VAR</FONT></B>
   buffer: FixedBuffer;
   word: WordString;
   result: Files.Result;
   f: Files.File;
   dictionary: SimpleHash.Hashtable;
   key: SimpleHash.ItemKey;
   item: SimpleHash.Item;


<I><FONT COLOR="#B22222">(* Separate special processing in procedure Process so we can use
   FillAndProcess in other Shootout tests *)</FONT></I>
<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">FillAndProcess</FONT></I></B></FONT></B> (<B><FONT COLOR="#A020F0">VAR</FONT></B> buffer: FixedBuffer; Process: FixedBufferProc);
<B><FONT COLOR="#A020F0">VAR</FONT></B>
   channel: IO.ByteChannel;
   partialFill: <B><FONT COLOR="#228B22">BOOLEAN</FONT></B>;
   size, pos, count: <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   channel <B><FONT COLOR="#5F9EA0">:=</FONT></B> StdChannels.stdin;
   pos <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0;
   size <B><FONT COLOR="#5F9EA0">:=</FONT></B> readSize;
   <B><FONT COLOR="#A020F0">LOOP</FONT></B>
      TRY
         count <B><FONT COLOR="#5F9EA0">:=</FONT></B> channel.Read(buffer, pos, size <B><FONT COLOR="#5F9EA0">*</FONT></B> <B><FONT COLOR="#A020F0">SIZE</FONT></B>(<B><FONT COLOR="#228B22">CHAR</FONT></B>)); 
         partialFill <B><FONT COLOR="#5F9EA0">:=</FONT></B> count &lt; size; 
         <B><FONT COLOR="#A020F0">IF</FONT></B> partialFill <B><FONT COLOR="#A020F0">THEN</FONT></B> size <B><FONT COLOR="#5F9EA0">:=</FONT></B> pos <B><FONT COLOR="#5F9EA0">+</FONT></B> count; <B><FONT COLOR="#A020F0">ELSE</FONT></B> size <B><FONT COLOR="#5F9EA0">:=</FONT></B> readSize; <B><FONT COLOR="#A020F0">END</FONT></B>;               
         pos <B><FONT COLOR="#5F9EA0">:=</FONT></B> size;	

         Process(buffer,pos);

         <B><FONT COLOR="#A020F0">IF</FONT></B> partialFill <B><FONT COLOR="#A020F0">THEN</FONT></B> <B><FONT COLOR="#A020F0">EXIT</FONT></B>; <B><FONT COLOR="#A020F0">END</FONT></B>;  
         
         <B><FONT COLOR="#A020F0">IF</FONT></B> pos <B><FONT COLOR="#5F9EA0">=</FONT></B> size <B><FONT COLOR="#A020F0">THEN</FONT></B> 
            pos <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0;
            size <B><FONT COLOR="#5F9EA0">:=</FONT></B> readSize;
         <B><FONT COLOR="#A020F0">ELSE</FONT></B>
            S.MOVE(S.ADR(buffer[pos]), S.ADR(buffer[0]), (size<B><FONT COLOR="#5F9EA0">-</FONT></B>pos)<B><FONT COLOR="#5F9EA0">*</FONT></B><B><FONT COLOR="#A020F0">SIZE</FONT></B>(<B><FONT COLOR="#228B22">CHAR</FONT></B>));
            pos <B><FONT COLOR="#5F9EA0">:=</FONT></B> size <B><FONT COLOR="#5F9EA0">-</FONT></B> pos;
            size <B><FONT COLOR="#5F9EA0">:=</FONT></B> readSize <B><FONT COLOR="#5F9EA0">-</FONT></B> pos;
         <B><FONT COLOR="#A020F0">END</FONT></B>;   
                      
      CATCH IO.Error:
         <B><FONT COLOR="#A020F0">EXIT</FONT></B>;
      <B><FONT COLOR="#A020F0">END</FONT></B>;               
   <B><FONT COLOR="#A020F0">END</FONT></B>;
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">FillAndProcess</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">PROCEDURE </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">CheckWords</FONT></I></B></FONT></B>(<B><FONT COLOR="#A020F0">VAR</FONT></B> buffer: FixedBuffer; <B><FONT COLOR="#A020F0">VAR</FONT></B> pos: <B><FONT COLOR="#228B22">LONGINT</FONT></B>);
<B><FONT COLOR="#A020F0">TYPE</FONT></B>
   WordStringPtr <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">POINTER</FONT></B> <B><FONT COLOR="#A020F0">TO</FONT></B> WordString;
<B><FONT COLOR="#A020F0">VAR</FONT></B>
   i, j: <B><FONT COLOR="#228B22">LONGINT</FONT></B>;
   bufferWord: WordStringPtr;
<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   i <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0; j <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0; <B><FONT COLOR="#A020F0">NEW</FONT></B>(key, maxWordSize);
   <B><FONT COLOR="#A020F0">WHILE</FONT></B> j &lt; pos <B><FONT COLOR="#A020F0">DO</FONT></B>	
      <B><FONT COLOR="#A020F0">IF</FONT></B> buffer[j] <B><FONT COLOR="#5F9EA0">=</FONT></B> 0AX <B><FONT COLOR="#A020F0">THEN</FONT></B>
         buffer[j] <B><FONT COLOR="#5F9EA0">:=</FONT></B> 0X;	
         bufferWord <B><FONT COLOR="#5F9EA0">:=</FONT></B> S.VAL(WordStringPtr, S.ADR(buffer[i]));	         	    		
         COPY(bufferWord<B><FONT COLOR="#5F9EA0">^</FONT></B>, key<B><FONT COLOR="#5F9EA0">^</FONT></B>);
	
         <B><FONT COLOR="#A020F0">IF</FONT></B> SimpleHash.Find(dictionary, key) <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#228B22">NIL</FONT></B> <B><FONT COLOR="#A020F0">THEN</FONT></B>
            Out.String(key<B><FONT COLOR="#5F9EA0">^</FONT></B>); Out.Ln;
         <B><FONT COLOR="#A020F0">END</FONT></B>;	
	 	
         <B><FONT COLOR="#A020F0">INC</FONT></B>(j); i <B><FONT COLOR="#5F9EA0">:=</FONT></B> j;	
      <B><FONT COLOR="#A020F0">ELSE</FONT></B>
         <B><FONT COLOR="#A020F0">INC</FONT></B>(j);
      <B><FONT COLOR="#A020F0">END</FONT></B>;
   <B><FONT COLOR="#A020F0">END</FONT></B>;
      
   <B><FONT COLOR="#A020F0">IF</FONT></B> j <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> i <B><FONT COLOR="#A020F0">THEN</FONT></B> pos <B><FONT COLOR="#5F9EA0">:=</FONT></B> i; <B><FONT COLOR="#A020F0">END</FONT></B>; <I><FONT COLOR="#B22222">(* indicate buffer position *)</FONT></I>
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">CheckWords</FONT></I></B></FONT></B>;


<B><FONT COLOR="#A020F0">BEGIN</FONT></B>
   f <B><FONT COLOR="#5F9EA0">:=</FONT></B> Files.Old(<B><FONT COLOR="#BC8F8F">&quot;Usr.Dict.Words&quot;</FONT></B>, {Files.read}, result);
   <B><FONT COLOR="#A020F0">IF</FONT></B> result <B><FONT COLOR="#5F9EA0">#</FONT></B> Files.done <B><FONT COLOR="#A020F0">THEN</FONT></B>
      Out.String(<B><FONT COLOR="#BC8F8F">&quot;Usr.Dict.Words not opened&quot;</FONT></B>); Out.Ln; <B><FONT COLOR="#A020F0">HALT</FONT></B>(1);
   <B><FONT COLOR="#A020F0">END</FONT></B>;   

   dictionary <B><FONT COLOR="#5F9EA0">:=</FONT></B> SimpleHash.New(40000);	
   In.SetReader( TextRider.ConnectReader(f) );
   <B><FONT COLOR="#A020F0">LOOP</FONT></B>	
      In.Line(word);
      <B><FONT COLOR="#A020F0">IF</FONT></B> ~In.Done() <B><FONT COLOR="#A020F0">THEN</FONT></B> <B><FONT COLOR="#A020F0">EXIT</FONT></B>; <B><FONT COLOR="#A020F0">END</FONT></B>;
      
      <B><FONT COLOR="#A020F0">NEW</FONT></B>(key, maxWordSize);
      COPY(word,key<B><FONT COLOR="#5F9EA0">^</FONT></B>);         
      item <B><FONT COLOR="#5F9EA0">:=</FONT></B> SimpleHash.AddKey(dictionary, key);	
   <B><FONT COLOR="#A020F0">END</FONT></B>;     
   f.Close();

   FillAndProcess(buffer, CheckWords);      
<B><FONT COLOR="#A020F0">END </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">Spellcheck</FONT></I></B></FONT></B>.</pre></td></tr></table>
