<span class="slc">%%% $Id: takfp-oz.code,v 1.4 2006-10-02 01:08:42 bfulgham Exp $</span>
<span class="slc">%%% http://shootout.alioth.debian.org/</span>
<span class="kwa">functor</span>
<span class="kwa">import</span> System Application
<span class="kwa">define</span>
   <span class="kwa">fun</span> <span class="sym">{</span>Tak X Y Z<span class="sym">}</span>
      <span class="kwa">if</span> <span class="sym">(</span>Y <span class="sym">&gt;=</span> X<span class="sym">)</span> <span class="kwa">then</span>
	 Z
      <span class="kwa">else</span>
	 <span class="sym">{</span>Tak
	  <span class="sym">{</span>Tak <span class="sym">(</span>X <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> Y Z<span class="sym">}</span>
	  <span class="sym">{</span>Tak <span class="sym">(</span>Y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> Z X<span class="sym">}</span>
	  <span class="sym">{</span>Tak <span class="sym">(</span>Z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> X Y<span class="sym">}}</span>
      <span class="kwa">end</span>
   <span class="kwa">end</span>
   A N
<span class="kwa">in</span>
   <span class="sym">[</span>A<span class="sym">] = {</span>Application<span class="sym">.</span>getArgs plain<span class="sym">}</span>
   N <span class="sym">= {</span>Int<span class="sym">.</span>toFloat <span class="sym">{</span>String<span class="sym">.</span>toInt A<span class="sym">}}</span>
   <span class="sym">{</span>System<span class="sym">.</span>show <span class="sym">{</span>Tak <span class="sym">(</span>N<span class="sym">*</span><span class="num">3.0</span><span class="sym">) (</span>N<span class="sym">*</span><span class="num">2.0</span><span class="sym">) (</span>N<span class="sym">*</span><span class="num">1.0</span><span class="sym">)}}</span>
   <span class="sym">{</span>Application<span class="sym">.</span>exit <span class="num">0</span><span class="sym">}</span>
<span class="kwa">end</span>
