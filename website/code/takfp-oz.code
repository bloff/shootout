<span class="slc">%%% $Id: takfp-oz.code,v 1.1 2005-03-07 06:27:13 bfulgham Exp $
</span><span class="slc">%%% http://shootout.alioth.debian.org/
</span><span class="kwa">functor
import</span> System Application
<span class="kwb">define
   fun</span> <span class="sym">{</span>Tak X Y Z<span class="sym">}
</span>      <span class="kwb">if</span> <span class="sym">(</span>Y <span class="sym">&gt;=</span> X<span class="sym">)</span> <span class="kwb">then
</span>	 Z
      <span class="kwb">else
</span>	 <span class="sym">{</span>Tak
	  <span class="sym">{</span>Tak <span class="sym">(</span>X <span class="num">- 1.0</span><span class="sym">)</span> Y Z<span class="sym">}
	  {</span>Tak <span class="sym">(</span>Y <span class="num">- 1.0</span><span class="sym">)</span> Z X<span class="sym">}
	  {</span>Tak <span class="sym">(</span>Z <span class="num">- 1.0</span><span class="sym">)</span> X Y<span class="sym">}}
</span>      <span class="kwb">end
   end
</span>   A N
<span class="kwb">in
</span>   <span class="sym">[</span>A<span class="sym">] = {</span>Application.getArgs plain<span class="sym">}
</span>   N <span class="sym">= {</span>Int.toFloat <span class="sym">{</span>String.toInt A<span class="sym">}}
   {</span>System.show <span class="sym">{</span>Tak <span class="sym">(</span>N<span class="sym">*</span><span class="num">3.0</span><span class="sym">) (</span>N<span class="sym">*</span><span class="num">2.0</span><span class="sym">) (</span>N<span class="sym">*</span><span class="num">1.0</span><span class="sym">)}}
   {</span>Application.exit <span class="num">0</span><span class="sym">}
</span><span class="kwb">end</span>
