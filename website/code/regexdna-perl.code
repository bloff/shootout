<span class="slc">#!/usr/bin/perl
</span><span class="slc">#
</span><span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># contributed by Danny Sauer
</span><span class="slc">#
</span>
<span class="slc"># regexp matches
</span><span class="kwc">my</span> &#64;variants <span class="sym">=</span> map<span class="sym">(
    ([</span><span class="kwb">$_</span><span class="sym">,</span> qr<span class="sym">/</span><span class="kwb">$_</span><span class="sym">/</span>i<span class="sym">]),
    (</span><span class="str">'agggtaaa|tttaccct'</span><span class="sym">,
</span>     <span class="str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="sym">,
</span>     <span class="str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="sym">,
</span>     <span class="str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="sym">,
</span>     <span class="str">'agg[act]taaa|ttta[agt]cct'</span><span class="sym">,
</span>     <span class="str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="sym">,
</span>     <span class="str">'agggt[cgt]aa|tt[acg]accct'</span><span class="sym">,
</span>     <span class="str">'agggta[cgt]a|t[acg]taccct'</span><span class="sym">,
</span>     <span class="str">'agggtaa[cgt]|[acg]ttaccct'</span><span class="sym">,
    )
);

</span><span class="slc"># IUB replacements
</span><span class="kwc">my</span> %IUB <span class="sym">= (
</span>    <span class="str">'B'</span> <span class="sym">=&gt;</span> <span class="str">'(c|g|t)'</span><span class="sym">,
</span>    <span class="str">'D'</span> <span class="sym">=&gt;</span> <span class="str">'(a|g|t)'</span><span class="sym">,
</span>    <span class="str">'H'</span> <span class="sym">=&gt;</span> <span class="str">'(a|c|t)'</span><span class="sym">,
</span>    <span class="str">'K'</span> <span class="sym">=&gt;</span> <span class="str">'(g|t)'</span><span class="sym">,
</span>    <span class="str">'M'</span> <span class="sym">=&gt;</span> <span class="str">'(a|c)'</span><span class="sym">,
</span>    <span class="str">'N'</span> <span class="sym">=&gt;</span> <span class="str">'(a|c|g|t)'</span><span class="sym">,
</span>    <span class="str">'R'</span> <span class="sym">=&gt;</span> <span class="str">'(a|g)'</span><span class="sym">,
</span>    <span class="str">'S'</span> <span class="sym">=&gt;</span> <span class="str">'(c|g)'</span><span class="sym">,
</span>    <span class="str">'V'</span> <span class="sym">=&gt;</span> <span class="str">'(a|c|g)'</span><span class="sym">,
</span>    <span class="str">'W'</span> <span class="sym">=&gt;</span> <span class="str">'(a|t)'</span><span class="sym">,
</span>    <span class="str">'Y'</span> <span class="sym">=&gt;</span> <span class="str">'(c|t)'</span><span class="sym">,
);

</span><span class="slc"># sequence descriptions start with &gt; and coments start with ;
</span><span class="slc">#my $stuffToRemove = qr/^[&gt;;].*$|[\r\n]/m;
</span><span class="kwc">my</span> <span class="kwb">$stuffToRemove</span> <span class="sym">=</span> qr<span class="sym">/</span>^<span class="sym">&gt;</span>.<span class="sym">*</span><span class="kwb">$</span><span class="sym">|</span>\n<span class="sym">/</span>m<span class="sym">;</span> <span class="slc"># no comments, *nix-format test file...
</span>
<span class="slc"># read in file
</span>undef <span class="kwb">$</span><span class="sym">/;
</span><span class="kwc">my</span> <span class="kwb">$contents</span> <span class="sym">= &lt;&gt;;
</span><span class="kwc">my</span> <span class="kwb">$initialLength</span> <span class="sym">=</span> length<span class="sym">(</span><span class="kwb">$contents</span><span class="sym">);

</span><span class="slc"># remove things
</span><span class="kwb">$contents</span> <span class="sym">=</span>~ s<span class="sym">/</span><span class="kwb">$stuffToRemove</span><span class="sym">//</span>go<span class="sym">;
</span><span class="kwc">my</span> <span class="kwb">$codeLength</span> <span class="sym">=</span> length<span class="sym">(</span><span class="kwb">$contents</span><span class="sym">);

</span><span class="slc"># do regexp counts
</span>study<span class="sym">(</span><span class="kwb">$contents</span><span class="sym">);
</span><span class="kwa">foreach</span> <span class="sym">(</span>&#64;variants<span class="sym">){
</span>    print <span class="kwb">$_</span><span class="sym">-&gt;[</span><span class="num">0</span><span class="sym">],</span> <span class="str">' '</span><span class="sym">,</span> scalar &#64;<span class="sym">{[</span><span class="kwb">$contents</span> <span class="sym">=</span>~ m<span class="sym">/</span><span class="kwb">$_</span><span class="sym">-&gt;[</span><span class="num">1</span><span class="sym">]/</span>g<span class="sym">]},</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
}

</span><span class="slc"># do replacements
</span><span class="kwa">foreach</span> <span class="sym">(</span>keys<span class="sym">(</span>%IUB<span class="sym">)){
</span>    <span class="kwb">$contents</span> <span class="sym">=</span>~ s<span class="sym">/</span><span class="kwb">$_</span><span class="sym">/</span><span class="kwb">$IUB</span><span class="sym">{</span><span class="kwb">$_</span><span class="sym">}/</span>ig<span class="sym">;
}

</span>print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,
</span>      <span class="kwb">$initialLength</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,
</span>      <span class="kwb">$codeLength</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,
</span>      length<span class="sym">(</span><span class="kwb">$contents</span><span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;

</span><span class="num">1</span><span class="sym">;</span>
