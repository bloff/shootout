<span class="slc">#!/usr/bin/ruby
</span><span class="slc"># -*- mode: ruby -*-
</span><span class="slc"># $Id: sieve-ruby.code,v 1.9 2005-05-23 06:14:25 bfulgham Exp $
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># Revised implementation by Paul Sanchez
</span>
NUM = Integer<span class="sym">(</span><span class="kwa">ARGV</span>.shift <span class="sym">||</span> <span class="num">1</span><span class="sym">)

</span>max<span class="sym">,</span> flags = <span class="num">8192</span><span class="sym">,</span> <span class="kwa">nil
</span>flags0 = Array.new<span class="sym">(</span>max<span class="sym">+</span><span class="num">1</span><span class="sym">)
</span><span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">2</span> .. max
  flags0<span class="sym">[</span>i<span class="sym">]</span> = i
<span class="kwa">end

</span>i=j=<span class="num">0

</span>NUM.times <span class="kwa">do
</span>    flags = flags0.dup
    <span class="slc">#for i in 2 .. Math.sqrt(max)	#&lt;-- This is much faster
</span>    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">2</span> .. <span class="num">8192
</span>	<span class="kwa">next unless</span> flags<span class="sym">[</span>i<span class="sym">]
</span>	<span class="slc"># remove all multiples of prime: i
</span>	<span class="sym">(</span>i<span class="sym">+</span>i<span class="sym">)</span>.step<span class="sym">(</span>max<span class="sym">,</span> i<span class="sym">)</span> <span class="kwa">do</span> <span class="sym">|</span>j<span class="sym">|
</span>	    flags<span class="sym">[</span>j<span class="sym">]</span> = <span class="kwa">nil
	end
    end
end

</span>print <span class="str">&quot;Count: &quot;</span><span class="sym">,</span> flags.compact.size<span class="sym">,</span> <span class="str">&quot;\n&quot;</span>
