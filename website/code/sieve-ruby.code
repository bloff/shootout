<span class="line">    1 </span><span class="slc">#!/usr/bin/ruby
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># -*- mode: ruby -*-
</span><span class="line">    3 </span><span class="slc"></span><span class="slc"># $Id: sieve-ruby.code,v 1.5 2004-11-11 07:14:18 bfulgham Exp $
</span><span class="line">    4 </span><span class="slc"></span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">#
</span><span class="line">    6 </span><span class="slc"></span><span class="slc"># Revised implementation by Paul Sanchez
</span><span class="line">    7 </span><span class="slc"></span>
<span class="line">    8 </span>NUM = Integer<span class="sym">(</span><span class="kwa">ARGV</span>.shift <span class="sym">||</span> <span class="num">1</span><span class="sym">)
</span><span class="line">    9 </span><span class="sym">
</span><span class="line">   10 </span><span class="sym"></span>max<span class="sym">,</span> flags = <span class="num">8192</span><span class="sym">,</span> <span class="kwa">nil
</span><span class="line">   11 </span><span class="kwa"></span>flags0 = Array.new<span class="sym">(</span>max<span class="sym">+</span><span class="num">1</span><span class="sym">)
</span><span class="line">   12 </span><span class="sym"></span><span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">2</span> .. max
<span class="line">   13 </span>  flags0<span class="sym">[</span>i<span class="sym">]</span> = i
<span class="line">   14 </span><span class="kwa">end
</span><span class="line">   15 </span><span class="kwa">
</span><span class="line">   16 </span><span class="kwa"></span>i=j=<span class="num">0
</span><span class="line">   17 </span><span class="num">
</span><span class="line">   18 </span><span class="num"></span>NUM.times <span class="kwa">do
</span><span class="line">   19 </span><span class="kwa"></span>    flags = flags0.dup
<span class="line">   20 </span>    <span class="slc">#for i in 2 .. Math.sqrt(max)        #&lt;-- This is much faster
</span><span class="line">   21 </span><span class="slc"></span>    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">2</span> .. <span class="num">8192
</span><span class="line">   22 </span><span class="num"></span>        <span class="kwa">next unless</span> flags<span class="sym">[</span>i<span class="sym">]
</span><span class="line">   23 </span><span class="sym"></span>        <span class="slc"># remove all multiples of prime: i
</span><span class="line">   24 </span><span class="slc"></span>        <span class="sym">(</span>i<span class="sym">+</span>i<span class="sym">)</span>.step<span class="sym">(</span>max<span class="sym">,</span> i<span class="sym">)</span> <span class="kwa">do</span> <span class="sym">|</span>j<span class="sym">|
</span><span class="line">   25 </span><span class="sym"></span>            flags<span class="sym">[</span>j<span class="sym">]</span> = <span class="kwa">nil
</span><span class="line">   26 </span><span class="kwa">        end
</span><span class="line">   27 </span><span class="kwa">    end
</span><span class="line">   28 </span><span class="kwa">end
</span><span class="line">   29 </span><span class="kwa">
</span><span class="line">   30 </span><span class="kwa"></span>print <span class="str">&quot;Count: &quot;</span><span class="sym">,</span> flags.compact.size<span class="sym">,</span> <span class="str">&quot;\n&quot;</span>
