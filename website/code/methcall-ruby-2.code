<span class="slc">#!/usr/bin/tclsh</span>
<span class="slc"># $Id: methcall-ruby-2.code,v 1.3 2005-12-31 16:45:39 bfulgham Exp $</span>

<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Hemang Lavana</span>
<span class="slc"># This program is based on object.tcl</span>

package require Itcl

<span class="sym">::</span>itcl<span class="sym">::</span><span class="kwa">class</span> Toggle <span class="sym">{</span>
    variable _state
    constructor <span class="sym">{</span>start_state<span class="sym">} {</span>set _state <span class="kwb">$start_state</span><span class="sym">}</span>
    public method value <span class="sym">{} {</span> <span class="kwa">return</span> <span class="sym">[</span>expr <span class="sym">{</span><span class="kwb">$_state</span> ? <span class="kwa">true</span> <span class="sym">:</span> <span class="kwa">false</span><span class="sym">}]}</span>
    public method activate <span class="sym">{} {</span>
        set _state <span class="sym">[</span>expr <span class="sym">{!</span><span class="kwb">$_state</span><span class="sym">}]</span>
        <span class="kwa">return</span> <span class="kwb">$this</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="sym">::</span>itcl<span class="sym">::</span><span class="kwa">class</span> NthToggle <span class="sym">{</span>
    inherit Toggle
    variable _counter
    variable _count_max

    constructor <span class="sym">{</span>start_state max_counter<span class="sym">} {</span>Toggle<span class="sym">::</span>constructor <span class="kwb">$start_state</span><span class="sym">} {</span>
        set _counter <span class="num">0</span>
        set _count_max <span class="kwb">$max_counter</span>
    <span class="sym">}</span>
    method activate <span class="sym">{} {</span>
        incr _counter <span class="num">1</span>
        <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$_counter</span> <span class="sym">&gt;</span>= <span class="kwb">$_count_max</span><span class="sym">} {</span>
            set _state <span class="sym">[</span>expr <span class="sym">{!</span><span class="kwb">$_state</span><span class="sym">}]</span>
            set _counter <span class="num">0</span>
        <span class="sym">}</span>
        <span class="kwa">return</span> <span class="kwb">$this</span>
    <span class="sym">}</span>
<span class="sym">}</span>

proc main <span class="sym">{</span>n<span class="sym">} {</span>
    Toggle toggle <span class="kwc">TRUE</span>
    <span class="kwa">for</span> <span class="sym">{</span>set i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">} {</span>incr i<span class="sym">} {</span>
        set value <span class="sym">[[</span>toggle activate<span class="sym">]</span> value<span class="sym">]</span>
    <span class="sym">}</span>
    puts <span class="kwb">$value</span>

    NthToggle ntoggle <span class="kwc">TRUE</span> <span class="num">3</span>
    <span class="kwa">for</span> <span class="sym">{</span>set i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$n</span><span class="sym">} {</span>incr i<span class="sym">} {</span>
        set value <span class="sym">[[</span>ntoggle activate<span class="sym">]</span> value<span class="sym">]</span>
    <span class="sym">}</span>
    puts <span class="kwb">$value</span>
<span class="sym">}</span>
main <span class="sym">[</span>lindex <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]</span>
