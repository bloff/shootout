<span class="line">    1 </span><span class="com">(* The Great Computer Language Shootout
</span><span class="line">    2 </span><span class="com">    http://shootout.alioth.debian.org
</span><span class="line">    3 </span><span class="com"> 
</span><span class="line">    4 </span><span class="com">    contributed by Isaac Gouy (Oberon-2 novice)
</span><span class="line">    5 </span><span class="com"> *)</span>
<span class="line">    6 </span>
<span class="line">    7 </span>  <span class="kwa">MODULE</span> Sieve<span class="sym">;
</span><span class="line">    8 </span><span class="sym"> </span><span class="kwa">IMPORT</span> LangShootout<span class="sym">,</span> Out<span class="sym">;
</span><span class="line">    9 </span><span class="sym"> 
</span><span class="line">   10 </span><span class="sym"> </span><span class="kwa">CONST
</span><span class="line">   11 </span><span class="kwa"> </span>   start <span class="sym">=</span> <span class="num">2</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"> </span>   stop <span class="sym">=</span> <span class="num">8192</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"> </span>   size <span class="sym">=</span> stop<span class="sym">+</span><span class="num">1</span><span class="sym">;
</span><span class="line">   14 </span><span class="sym"> 
</span><span class="line">   15 </span><span class="sym"> </span><span class="kwa">VAR
</span><span class="line">   16 </span><span class="kwa"> </span>   n<span class="sym">,</span> count<span class="sym">,</span> i<span class="sym">,</span> k<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym"> </span>   isPrimeNumber<span class="sym">:</span> <span class="kwa">ARRAY</span> size <span class="kwa">OF</span> <span class="kwb">BOOLEAN</span><span class="sym">;
</span><span class="line">   18 </span><span class="sym"> 
</span><span class="line">   19 </span><span class="sym"> </span><span class="kwa">BEGIN
</span><span class="line">   20 </span><span class="kwa"> </span>   n <span class="sym">:=</span> LangShootout<span class="sym">.</span>Argi<span class="sym">();
</span><span class="line">   21 </span><span class="sym"> </span>   <span class="kwa">WHILE</span> n <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">DO
</span><span class="line">   22 </span><span class="kwa">       DEC</span><span class="sym">(</span>n<span class="sym">);
</span><span class="line">   23 </span><span class="sym"> </span>      count <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym">       </span>      FOR i <span class="sym">:=</span> start <span class="kwa">TO</span> stop <span class="kwa">DO</span> isPrimeNumber<span class="sym">[</span>i<span class="sym">] :=</span> TRUE<span class="sym">;</span> <span class="kwa">END</span><span class="sym">;
</span><span class="line">   25 </span><span class="sym"> </span>      FOR i <span class="sym">:=</span> start <span class="kwa">TO</span> stop <span class="kwa">DO
</span><span class="line">   26 </span><span class="kwa">          IF</span> isPrimeNumber<span class="sym">[</span>i<span class="sym">]</span> <span class="kwa">THEN
</span><span class="line">   27 </span><span class="kwa">             INC</span><span class="sym">(</span>count<span class="sym">);
</span><span class="line">   28 </span><span class="sym"> </span>            k <span class="sym">:=</span> i<span class="sym">+</span>i<span class="sym">;
</span><span class="line">   29 </span><span class="sym"> </span>            <span class="kwa">WHILE</span> k <span class="sym">&lt;=</span> stop <span class="kwa">DO
</span><span class="line">   30 </span><span class="kwa"> </span>               isPrimeNumber<span class="sym">[</span>k<span class="sym">] :=</span> FALSE<span class="sym">;
</span><span class="line">   31 </span><span class="sym"> </span>               <span class="kwa">INC</span><span class="sym">(</span>k<span class="sym">,</span> i<span class="sym">);
</span><span class="line">   32 </span><span class="sym"> </span>            <span class="kwa">END</span><span class="sym">;
</span><span class="line">   33 </span><span class="sym"> </span>         <span class="kwa">END</span><span class="sym">;
</span><span class="line">   34 </span><span class="sym"> </span>      <span class="kwa">END</span><span class="sym">;
</span><span class="line">   35 </span><span class="sym"> </span>   <span class="kwa">END</span><span class="sym">;
</span><span class="line">   36 </span><span class="sym">           
</span><span class="line">   37 </span><span class="sym"> </span>   Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;Count: &quot;</span><span class="sym">);</span> Out<span class="sym">.</span>Int<span class="sym">(</span>count<span class="sym">,</span><span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;
</span><span class="line">   38 </span><span class="sym"> </span><span class="kwa">END</span> Sieve<span class="sym">.</span> 
