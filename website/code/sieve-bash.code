<span class="slc">#!/bin/bash
</span><span class="slc"># $Id: sieve-bash.code,v 1.5 2005-03-31 10:41:25 bfulgham Exp $
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="slc"># from Steve Fink
</span>
NUM<span class="sym">=</span><span class="kwb">${1:-1}</span>

<span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$NUM</span> <span class="sym">-</span>gt <span class="num">0</span> <span class="sym">];</span> <span class="kwa">do
</span>    i<span class="sym">=</span><span class="num">2
</span>    <span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">-</span>le <span class="num">8192</span> <span class="sym">];</span> <span class="kwa">do
</span>        <span class="kwb">eval</span> P<span class="kwb">$i</span><span class="sym">=</span>true
        i<span class="sym">=</span><span class="kwb">$</span><span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span> <span class="sym">]
</span>    <span class="kwa">done

</span>    count<span class="sym">=</span><span class="num">0
</span>    i<span class="sym">=</span><span class="num">2
</span>    <span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">-</span>le <span class="num">8192</span> <span class="sym">];</span> <span class="kwa">do
        if</span> <span class="kwb">eval</span> \<span class="kwb">$P$i</span><span class="sym">;</span> <span class="kwa">then
</span>            <span class="slc"># remove all multiples of prime: i
</span>            k<span class="sym">=</span><span class="kwb">$</span><span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="kwb">$i</span> <span class="sym">]
</span>            <span class="kwa">while</span> <span class="sym">[</span> <span class="kwb">$k</span> <span class="sym">-</span>le <span class="num">8192</span> <span class="sym">];</span> <span class="kwa">do
</span>                <span class="kwb">eval</span> P<span class="kwb">$k</span><span class="sym">=</span>false
                k<span class="sym">=</span><span class="kwb">$</span><span class="sym">[</span> <span class="kwb">$k</span> <span class="sym">+</span> <span class="kwb">$i</span> <span class="sym">]
</span>            <span class="kwa">done
</span>            count<span class="sym">=</span><span class="kwb">$</span><span class="sym">[</span> <span class="kwb">$count</span> <span class="sym">+</span> <span class="num">1</span> <span class="sym">]
</span>        <span class="kwa">fi
</span>        i<span class="sym">=</span><span class="kwb">$</span><span class="sym">[</span> <span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span> <span class="sym">]
</span>    <span class="kwa">done

</span>    NUM<span class="sym">=</span><span class="kwb">$</span><span class="sym">[</span> <span class="kwb">$NUM</span> <span class="num">- 1</span> <span class="sym">]
</span><span class="kwa">done

</span><span class="kwb">echo</span> Count<span class="sym">:</span> <span class="kwb">$count</span>
