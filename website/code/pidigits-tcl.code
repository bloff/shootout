<span class="slc">#!/usr/bin/tclsh
</span><span class="slc"># $Id: pidigits-tcl.code,v 1.1 2005-04-24 17:12:41 bfulgham Exp $
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># Requires Mpexpr extension (http://sourceforge.net/projects/mpexpr)
</span><span class="slc">#
</span><span class="slc"># Contributed by Hemang Lavana
</span>
<span class="kwa">package</span> require Mpexpr

<span class="kwa">proc</span> compose <span class="sym">{</span>aQRST bQRST<span class="sym">} {
</span>    <span class="kwa">foreach</span> <span class="sym">{</span>aQ aR aS aT<span class="sym">}</span> <span class="kwb">$aQRST</span> <span class="kwa">break
    foreach</span> <span class="sym">{</span>bQ bR bS bT<span class="sym">}</span> <span class="kwb">$bQRST</span> <span class="kwa">break
    set</span> rQ <span class="sym">[</span>mpexpr <span class="sym">{</span><span class="kwb">$aQ</span> <span class="sym">*</span> <span class="kwb">$bQ</span><span class="sym">}]
</span>    <span class="kwa">set</span> rR <span class="sym">[</span>mpexpr <span class="sym">{</span><span class="kwb">$aQ</span> <span class="sym">*</span> <span class="kwb">$bR</span> <span class="sym">+</span> <span class="kwb">$aR</span> <span class="sym">*</span> <span class="kwb">$bT</span><span class="sym">}]
</span>    <span class="kwa">set</span> rS <span class="sym">[</span>mpexpr <span class="sym">{</span><span class="kwb">$aS</span> <span class="sym">*</span> <span class="kwb">$bQ</span> <span class="sym">+</span> <span class="kwb">$aT</span> <span class="sym">*</span> <span class="kwb">$bS</span><span class="sym">}]
</span>    <span class="kwa">set</span> rT <span class="sym">[</span>mpexpr <span class="sym">{</span><span class="kwb">$aS</span> <span class="sym">*</span> <span class="kwb">$bR</span> <span class="sym">+</span> <span class="kwb">$aT</span> <span class="sym">*</span> <span class="kwb">$bT</span><span class="sym">}]
</span>    <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">list</span> <span class="kwb">$rQ $rR $rS $rT</span><span class="sym">]
}

</span><span class="kwa">proc</span> produce <span class="sym">{</span>QRST J<span class="sym">} {
</span>    <span class="kwa">return</span> <span class="sym">[</span>compose <span class="sym">[</span><span class="kwa">list</span> <span class="num">10</span> <span class="sym">[</span>mpexpr <span class="sym">{-</span><span class="num">10</span><span class="sym">*</span><span class="kwb">$J</span><span class="sym">}]</span> <span class="num">0 1</span><span class="sym">]</span> <span class="kwb">$QRST</span><span class="sym">]
}

</span><span class="kwa">proc</span> extract <span class="sym">{</span>QRST J<span class="sym">} {
</span>    <span class="kwa">foreach</span> <span class="sym">{</span>Q R S T<span class="sym">}</span> <span class="kwb">$QRST</span> <span class="kwa">break
    return</span> <span class="sym">[</span>mpexpr <span class="sym">{(</span><span class="kwb">$Q</span> <span class="sym">*</span> <span class="kwb">$J</span> <span class="sym">+</span> <span class="kwb">$R</span><span class="sym">) / (</span><span class="kwb">$S</span> <span class="sym">*</span> <span class="kwb">$J</span> <span class="sym">+</span> <span class="kwb">$T</span><span class="sym">)}]
</span>
