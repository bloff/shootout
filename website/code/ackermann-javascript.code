<span class="slc">// The Great Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">//</span>
<span class="slc">// contributed by Sjoerd Visscher</span>

<span class="kwa">function</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">) {</span>
  <span class="kwa">return</span> <span class="sym">(</span>m <span class="sym">==</span> <span class="num">0</span>
    ? n <span class="sym">+</span> <span class="num">1</span>
    <span class="sym">: (</span>n <span class="sym">==</span> <span class="num">0</span>
      ? <span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
      <span class="sym">:</span> <span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n <span class="sym">-</span> <span class="num">1</span><span class="sym">))));</span>
<span class="sym">}</span>

<span class="kwa">var</span> n <span class="sym">=</span> arguments<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
<span class="kwc">print</span><span class="sym">(</span><span class="str">&quot;ack(3, &quot;</span> <span class="sym">+</span> n <span class="sym">+</span> <span class="str">&quot;): &quot;</span> <span class="sym">+</span> <span class="kwd">ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">));</span>
