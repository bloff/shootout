<span class="dir">#!/usr/bin/pike
</span><span class="slc">// -*- mode: pike -*-
</span><span class="slc">// $Id: hash-pike.code,v 1.5 2005-05-17 05:20:32 bfulgham Exp $
</span><span class="slc">// http://www.bagley.org/~doug/shootout/
</span><span class="slc">// from: Martin Nilsson
</span>
<span class="kwb">void</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> argv<span class="sym">)
{
</span>    <span class="kwb">int</span> i<span class="sym">,</span> c <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>    <span class="kwb">int</span> n <span class="sym">= (</span><span class="kwb">int</span><span class="sym">)</span>argv<span class="sym">[-</span><span class="num">1</span><span class="sym">];
</span>    if <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">)</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;

</span>    <span class="kwb">mapping</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">:</span><span class="kwb">int</span><span class="sym">)</span> X <span class="sym">= ([]);

</span>    for <span class="sym">(</span>i<span class="sym">=</span><span class="num">1</span><span class="sym">;</span> i<span class="sym">&lt;=</span>n<span class="sym">;</span> i<span class="sym">++) {
</span>	X<span class="sym">[</span><span class="kwa">sprintf</span><span class="sym">(</span><span class="str">&quot;%x&quot;</span><span class="sym">,</span> i<span class="sym">)] =</span> i<span class="sym">;
    }
</span>    for <span class="sym">(</span>i<span class="sym">=</span>n<span class="sym">;</span> i<span class="sym">&gt;</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">--) {
</span>	if <span class="sym">(</span>X<span class="sym">[(</span><span class="kwb">string</span><span class="sym">)</span>i<span class="sym">])</span> c<span class="sym">++;
    }
</span>    <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> c<span class="sym">);
}</span>
