<span class="line">    1 </span><span class="com">(* -*- mode: sml -*-
</span><span class="line">    2 </span><span class="com"> * $Id: sieve-mlton.code,v 1.4 2004-11-13 07:43:21 bfulgham Exp $
</span><span class="line">    3 </span><span class="com"> * http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="com"> * with help from Stephen Weeks
</span><span class="line">    5 </span><span class="com"> *)</span>
<span class="line">    6 </span>
<span class="line">    7 </span><span class="kwa">val</span> size <span class="sym">=</span> <span class="num">8193
</span><span class="line">    8 </span><span class="num">
</span><span class="line">    9 </span><span class="num"></span><span class="kwa">val</span> flags <span class="sym">=</span> Array.array <span class="sym">(</span>size<span class="sym">,</span> <span class="kwa">false</span><span class="sym">)
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym"></span><span class="kwa">fun</span> init <span class="sym">() =
</span><span class="line">   12 </span><span class="sym"></span>   <span class="kwa">let
</span><span class="line">   13 </span><span class="kwa">      fun</span> loop i <span class="sym">=
</span><span class="line">   14 </span><span class="sym"></span>         <span class="kwa">if</span> i <span class="sym">&lt;</span> size
<span class="line">   15 </span>            <span class="kwa">then</span> <span class="sym">(</span>Array.update <span class="sym">(</span>flags<span class="sym">,</span> i<span class="sym">,</span> <span class="kwa">true</span><span class="sym">);</span> loop <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   16 </span><span class="sym"></span>         <span class="kwa">else</span> <span class="sym">()
</span><span class="line">   17 </span><span class="sym"></span>   <span class="kwa">in</span> loop <span class="num">2
</span><span class="line">   18 </span><span class="num"></span>   <span class="kwa">end
</span><span class="line">   19 </span><span class="kwa">
</span><span class="line">   20 </span><span class="kwa">fun</span> do_elts <span class="sym">(</span>i<span class="sym">,</span> count<span class="sym">) =
</span><span class="line">   21 </span><span class="sym"></span>  <span class="kwa">if</span> i <span class="sym">&lt;</span> size
<span class="line">   22 </span>     <span class="kwa">then
</span><span class="line">   23 </span><span class="kwa">        if</span> Array.sub <span class="sym">(</span>flags<span class="sym">,</span> i<span class="sym">)
</span><span class="line">   24 </span><span class="sym"></span>           <span class="kwa">then
</span><span class="line">   25 </span><span class="kwa">              let
</span><span class="line">   26 </span><span class="kwa">                 fun</span> loop k <span class="sym">=
</span><span class="line">   27 </span><span class="sym"></span>                    <span class="kwa">if</span> k <span class="sym">&lt;</span> size
<span class="line">   28 </span>                       <span class="kwa">then</span> <span class="sym">(</span>Array.update <span class="sym">(</span>flags<span class="sym">,</span> k<span class="sym">,</span> <span class="kwa">false</span><span class="sym">);</span> loop <span class="sym">(</span>k <span class="sym">+</span> i<span class="sym">))
</span><span class="line">   29 </span><span class="sym"></span>                    <span class="kwa">else</span> <span class="sym">()
</span><span class="line">   30 </span><span class="sym"></span>              <span class="kwa">in</span> loop <span class="sym">(</span>i <span class="sym">+</span> i<span class="sym">);</span> do_elts<span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span>count <span class="sym">+</span> <span class="num">1</span><span class="sym">)
</span><span class="line">   31 </span><span class="sym"></span>              <span class="kwa">end
</span><span class="line">   32 </span><span class="kwa">        else</span> do_elts <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> count<span class="sym">)
</span><span class="line">   33 </span><span class="sym"></span>  <span class="kwa">else</span> count
<span class="line">   34 </span>
<span class="line">   35 </span><span class="kwa">fun</span> printl <span class="sym">[] =</span> print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">|</span> printl<span class="sym">(</span>h<span class="sym">::</span>t<span class="sym">) = (</span> print h <span class="sym">;</span> printl t <span class="sym">)
</span><span class="line">   36 </span><span class="sym"></span><span class="kwa">fun</span> atoi s <span class="sym">=</span> <span class="kwa">case Int</span>.fromString s <span class="kwa">of</span> SOME num <span class="sym">=&gt;</span> num <span class="sym">|</span> NONE <span class="sym">=&gt;</span> <span class="num">0
</span><span class="line">   37 </span><span class="num">
</span><span class="line">   38 </span><span class="num"></span><span class="kwa">fun</span> doit <span class="sym">() = (</span>init <span class="sym">();</span> do_elts <span class="sym">(</span><span class="num">2</span><span class="sym">,</span> <span class="num">0</span><span class="sym">))
</span><span class="line">   39 </span><span class="sym">
</span><span class="line">   40 </span><span class="sym"></span><span class="kwa">fun</span> repeat i <span class="sym">=
</span><span class="line">   41 </span><span class="sym"></span>   <span class="kwa">if</span> i <span class="sym">=</span> <span class="num">0
</span><span class="line">   42 </span><span class="num"></span>      <span class="kwa">then</span> doit <span class="sym">()
</span><span class="line">   43 </span><span class="sym"></span>   <span class="kwa">else</span> <span class="sym">(</span>doit <span class="sym">();</span> repeat <span class="sym">(</span>i <span class="num">- 1</span><span class="sym">))
</span><span class="line">   44 </span><span class="sym">
</span><span class="line">   45 </span><span class="sym"></span><span class="kwa">fun</span> main<span class="sym">(</span>name<span class="sym">,</span> param_list<span class="sym">) =</span>  <span class="kwa">let
</span><span class="line">   46 </span><span class="kwa">        val</span> arg <span class="sym">=</span> hd<span class="sym">(</span>param_list &#64; <span class="sym">[</span><span class="str">&quot;1&quot;</span><span class="sym">]);
</span><span class="line">   47 </span><span class="sym"></span>        <span class="kwa">val</span> num <span class="sym">=</span> atoi arg
<span class="line">   48 </span>        <span class="kwa">val</span> count <span class="sym">=</span> repeat <span class="sym">(</span>num <span class="num">- 1</span><span class="sym">)
</span><span class="line">   49 </span><span class="sym"></span>    <span class="kwa">in</span>  printl <span class="sym">[</span><span class="str">&quot;Count: &quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString count<span class="sym">];
</span><span class="line">   50 </span><span class="sym"></span>        OS.Process.success
<span class="line">   51 </span>    <span class="kwa">end
</span><span class="line">   52 </span><span class="kwa">
</span><span class="line">   53 </span><span class="kwa">val</span> _ <span class="sym">=</span> main<span class="sym">(</span> CommandLine.name<span class="sym">(),</span> CommandLine.arguments<span class="sym">() );</span>
