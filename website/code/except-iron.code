<span class="slc">#!/usr/bin/python</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">import</span> sys

HI <span class="sym">=</span> <span class="num">0</span>
LO <span class="sym">=</span> <span class="num">0</span>


<span class="kwa">class</span> Hi_exception<span class="sym">:</span>
    <span class="kwa">def</span> <span class="kwd">__init__</span><span class="sym">(</span>self<span class="sym">,</span> value<span class="sym">):</span>
        self<span class="sym">.</span>value <span class="sym">=</span> value
    <span class="kwa">def</span> <span class="kwd">__str__</span><span class="sym">(</span>self<span class="sym">):</span>
        <span class="kwa">return</span> `self<span class="sym">.</span>value`


<span class="kwa">class</span> Lo_exception<span class="sym">:</span>
    <span class="kwa">def</span> <span class="kwd">__init__</span><span class="sym">(</span>self<span class="sym">,</span> value<span class="sym">):</span>
        self<span class="sym">.</span>value <span class="sym">=</span> value
    <span class="kwa">def</span> <span class="kwd">__str__</span><span class="sym">(</span>self<span class="sym">):</span>
        <span class="kwa">return</span> `self<span class="sym">.</span>value`


<span class="kwa">def</span> <span class="kwd">some_function</span><span class="sym">(</span>num<span class="sym">):</span>
    <span class="kwa">try</span><span class="sym">:</span>
        <span class="kwd">hi_function</span><span class="sym">(</span>num<span class="sym">)</span>
    <span class="kwa">except</span><span class="sym">:</span>
        <span class="kwa">raise</span> <span class="str">&quot;We shouldn't get here (%s)&quot;</span> <span class="sym">%</span> sys<span class="sym">.</span><span class="kwd">exc_info</span><span class="sym">()[</span><span class="num">0</span><span class="sym">]</span>


<span class="kwa">def</span> <span class="kwd">hi_function</span><span class="sym">(</span>num<span class="sym">):</span>
    <span class="kwa">global</span> HI
    <span class="kwa">try</span><span class="sym">:</span>
        <span class="kwd">lo_function</span><span class="sym">(</span>num<span class="sym">)</span>
    <span class="kwa">except</span> Hi_exception<span class="sym">,</span> ex<span class="sym">:</span>
        HI <span class="sym">+=</span> <span class="num">1</span>
        <span class="slc">#print 'Hi_exception occurred, value:', ex.value</span>


<span class="kwa">def</span> <span class="kwd">lo_function</span><span class="sym">(</span>num<span class="sym">):</span>
    <span class="kwa">global</span> LO
    <span class="kwa">try</span><span class="sym">:</span>
        <span class="kwd">blowup</span><span class="sym">(</span>num<span class="sym">)</span>
    <span class="kwa">except</span> Lo_exception<span class="sym">,</span> ex<span class="sym">:</span>
        LO <span class="sym">+=</span> <span class="num">1</span>
        <span class="slc">#print 'Lo_exception occurred, value:', ex.value</span>


<span class="kwa">def</span> <span class="kwd">blowup</span><span class="sym">(</span>num<span class="sym">):</span>
    <span class="kwa">raise</span> <span class="sym">(((</span>num <span class="sym">&amp;</span> <span class="num">1</span><span class="sym">)</span> <span class="kwa">and</span> Lo_exception<span class="sym">)</span> <span class="kwa">or</span> Hi_exception<span class="sym">)(</span>num<span class="sym">)</span>

<span class="kwa">def</span> <span class="kwd">main</span><span class="sym">():</span>
    <span class="kwa">global</span> LO<span class="sym">,</span> HI
    NUM <span class="sym">=</span> <span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>
    <span class="kwa">if</span> NUM <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">:</span>
        NUM <span class="sym">=</span> <span class="num">1</span>
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span>NUM<span class="sym">-</span><span class="num">1</span><span class="sym">,-</span><span class="num">1</span><span class="sym">,-</span><span class="num">1</span><span class="sym">):</span>
        <span class="kwd">some_function</span><span class="sym">(</span>i<span class="sym">)</span>
    <span class="kwa">print</span> <span class="str">&quot;Exceptions: HI=%d / LO=%d&quot;</span> <span class="sym">% (</span>HI<span class="sym">,</span> LO<span class="sym">)</span>


<span class="kwd">main</span><span class="sym">()</span>
