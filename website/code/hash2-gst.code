<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<B><FONT COLOR="#BC8F8F">&quot;  The Great Computer Language Shootout
   contributed by Isaac Gouy (with improvements by Paolo Bonzini)

   To run: gst -QI /usr/local/share/smalltalk/gst.im hash2.st -a 150
&quot;</FONT></B>

| n table1 table2 |
n := Smalltalk arguments first asInteger.

table1 := Dictionary <B><FONT COLOR="#A020F0">new</FONT></B>: 12000. 
table2 := Dictionary <B><FONT COLOR="#A020F0">new</FONT></B>: n + (n // 5).

0 to: 9999 <B><FONT COLOR="#A020F0">do</FONT></B>: [:<B><FONT COLOR="#A020F0">each</FONT></B>| table1 at: <B><FONT COLOR="#BC8F8F">'foo_'</FONT></B>, <B><FONT COLOR="#A020F0">each</FONT></B> printString put: <B><FONT COLOR="#A020F0">each</FONT></B>].

n timesRepeat: [ 
   table1 keysAndValuesDo: [ :key :value |  | assoc |
      (assoc := table2 associationAt: key ifAbsent: []) isNil 
         ifTrue: [table2 at: key put: value]
         ifFalse: [assoc value: assoc value + value]   
   ]
]. 

(table1 at: <B><FONT COLOR="#BC8F8F">'foo_1'</FONT></B>)    display. <B><FONT COLOR="#BC8F8F">' '</FONT></B> display. 
(table1 at: <B><FONT COLOR="#BC8F8F">'foo_9999'</FONT></B>) display. <B><FONT COLOR="#BC8F8F">' '</FONT></B> display.
(table2 at: <B><FONT COLOR="#BC8F8F">'foo_1'</FONT></B>)    display. <B><FONT COLOR="#BC8F8F">' '</FONT></B> display. 
(table2 at: <B><FONT COLOR="#BC8F8F">'foo_9999'</FONT></B>) displayNl !</pre></td></tr></table>
