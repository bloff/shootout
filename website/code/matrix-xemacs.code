<span class="line">    1 </span><span class="slc">;;; -*- mode: emacs-lisp -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: matrix-xemacs.code,v 1.3 2004-11-11 07:14:00 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">(</span>defvar size <span class="num">30</span><span class="sym">)
</span><span class="line">    6 </span><span class="sym">
</span><span class="line">    7 </span><span class="sym">(</span><span class="kwa">defun</span> mkmatrix <span class="sym">(</span>rows cols<span class="sym">)
</span><span class="line">    8 </span><span class="sym">  (</span>let <span class="sym">((</span>mx <span class="sym">(</span>make<span class="sym">-</span>vector rows <span class="num">0</span><span class="sym">))
</span><span class="line">    9 </span><span class="sym">        (</span>count <span class="num">1</span><span class="sym">))
</span><span class="line">   10 </span><span class="sym">    (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))
</span><span class="line">   11 </span><span class="sym">        ((=</span> i rows<span class="sym">))
</span><span class="line">   12 </span><span class="sym">      (</span>let <span class="sym">((</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))
</span><span class="line">   13 </span><span class="sym">        (</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> j<span class="sym">)))
</span><span class="line">   14 </span><span class="sym">            ((=</span> j cols<span class="sym">))
</span><span class="line">   15 </span><span class="sym">          (</span>aset row j count<span class="sym">)
</span><span class="line">   16 </span><span class="sym">          (</span><span class="kwa">setq</span> count <span class="sym">(+</span> count <span class="num">1</span><span class="sym">)))
</span><span class="line">   17 </span><span class="sym">        (</span>aset mx i row<span class="sym">)))
</span><span class="line">   18 </span><span class="sym"></span>    mx<span class="sym">))
</span><span class="line">   19 </span><span class="sym">
</span><span class="line">   20 </span><span class="sym">(</span><span class="kwa">defun</span> num<span class="sym">-</span>cols <span class="sym">(</span>mx<span class="sym">)
</span><span class="line">   21 </span><span class="sym">  (</span>let <span class="sym">((</span>row <span class="sym">(</span>aref mx <span class="num">0</span><span class="sym">)))
</span><span class="line">   22 </span><span class="sym">    (</span><span class="kwa">length</span> row<span class="sym">)))
</span><span class="line">   23 </span><span class="sym">
</span><span class="line">   24 </span><span class="sym">(</span><span class="kwa">defun</span> num<span class="sym">-</span>rows <span class="sym">(</span>mx<span class="sym">)
</span><span class="line">   25 </span><span class="sym">  (</span><span class="kwa">length</span> mx<span class="sym">))
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym">(</span><span class="kwa">defun</span> mmult <span class="sym">(</span>rows cols m1 m2<span class="sym">)
</span><span class="line">   28 </span><span class="sym">  (</span>let <span class="sym">((</span>m3 <span class="sym">(</span>make<span class="sym">-</span>vector rows <span class="num">0</span><span class="sym">)))
</span><span class="line">   29 </span><span class="sym">    (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))
</span><span class="line">   30 </span><span class="sym">        ((=</span> i rows<span class="sym">))
</span><span class="line">   31 </span><span class="sym">      (</span>let <span class="sym">((</span>m1i <span class="sym">(</span>aref m1 i<span class="sym">))
</span><span class="line">   32 </span><span class="sym">            (</span>row <span class="sym">(</span>make<span class="sym">-</span>vector cols <span class="num">0</span><span class="sym">)))
</span><span class="line">   33 </span><span class="sym">        (</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> j<span class="sym">)))
</span><span class="line">   34 </span><span class="sym">            ((=</span> j cols<span class="sym">))
</span><span class="line">   35 </span><span class="sym">          (</span>let <span class="sym">((</span>val <span class="num">0</span><span class="sym">))
</span><span class="line">   36 </span><span class="sym">            (</span>do <span class="sym">((</span>k <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> k<span class="sym">)))
</span><span class="line">   37 </span><span class="sym">                ((=</span> k cols<span class="sym">))
</span><span class="line">   38 </span><span class="sym">              (</span><span class="kwa">setq</span> val <span class="sym">(+</span> val <span class="sym">(* (</span>aref m1i k<span class="sym">)
</span><span class="line">   39 </span><span class="sym">                                  (</span>aref <span class="sym">(</span>aref m2 k<span class="sym">)</span> j<span class="sym">)))))
</span><span class="line">   40 </span><span class="sym">            (</span>aset row j val<span class="sym">)))
</span><span class="line">   41 </span><span class="sym">        (</span>aset m3 i row<span class="sym">)))
</span><span class="line">   42 </span><span class="sym"></span>    m3<span class="sym">))
</span><span class="line">   43 </span><span class="sym">
</span><span class="line">   44 </span><span class="sym">(</span><span class="kwa">defun</span> matrix<span class="sym">-</span><span class="kwa">print</span> <span class="sym">(</span>m<span class="sym">)
</span><span class="line">   45 </span><span class="sym">  (</span>do <span class="sym">((</span>i <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> i<span class="sym">)))
</span><span class="line">   46 </span><span class="sym">      ((=</span> i <span class="sym">(</span>num<span class="sym">-</span>rows m<span class="sym">)))
</span><span class="line">   47 </span><span class="sym">    (</span>let <span class="sym">((</span>row <span class="sym">(</span>aref m i<span class="sym">)))
</span><span class="line">   48 </span><span class="sym">      (</span>do <span class="sym">((</span>j <span class="num">0</span> <span class="sym">(</span><span class="num">1</span><span class="sym">+</span> j<span class="sym">)))
</span><span class="line">   49 </span><span class="sym">          ((=</span> j <span class="sym">(</span>num<span class="sym">-</span>cols m<span class="sym">)))
</span><span class="line">   50 </span><span class="sym">        (</span><span class="kwa">princ</span> <span class="sym">(</span>aref row j<span class="sym">))
</span><span class="line">   51 </span><span class="sym">        (</span><span class="kwa">if</span> <span class="sym">(&lt;</span> j <span class="sym">(</span>num<span class="sym">-</span>cols m<span class="sym">))
</span><span class="line">   52 </span><span class="sym">            (</span><span class="kwa">princ</span> <span class="str">&quot; &quot;</span><span class="sym">)))
</span><span class="line">   53 </span><span class="sym">      (</span><span class="kwa">princ</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">))))
</span><span class="line">   54 </span><span class="sym">
</span><span class="line">   55 </span><span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">()
</span><span class="line">   56 </span><span class="sym">  (</span>let<span class="sym">* ((</span>arg <span class="sym">(</span><span class="kwa">car command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>args<span class="sym">-</span>left<span class="sym">))
</span><span class="line">   57 </span><span class="sym">         (</span>n <span class="sym">(</span><span class="kwa">if</span> arg <span class="sym">(</span>string<span class="sym">-</span>to<span class="sym">-</span>number arg<span class="sym">)</span> <span class="num">1</span><span class="sym">)))
</span><span class="line">   58 </span><span class="sym">    (</span>let <span class="sym">((</span>mm <span class="num">0</span><span class="sym">)
</span><span class="line">   59 </span><span class="sym">          (</span>m1 <span class="sym">(</span>mkmatrix size size<span class="sym">))
</span><span class="line">   60 </span><span class="sym">          (</span>m2 <span class="sym">(</span>mkmatrix size size<span class="sym">)))
</span><span class="line">   61 </span><span class="sym">      (</span>dotimes <span class="sym">(</span>i n<span class="sym">)
</span><span class="line">   62 </span><span class="sym">        (</span><span class="kwa">setq</span> mm <span class="sym">(</span>mmult size size m1 m2<span class="sym">)))
</span><span class="line">   63 </span><span class="sym">      (</span>let <span class="sym">((</span>r0 <span class="sym">(</span>aref mm <span class="num">0</span><span class="sym">))
</span><span class="line">   64 </span><span class="sym">            (</span>r2 <span class="sym">(</span>aref mm <span class="num">2</span><span class="sym">))
</span><span class="line">   65 </span><span class="sym">            (</span>r3 <span class="sym">(</span>aref mm <span class="num">3</span><span class="sym">))
</span><span class="line">   66 </span><span class="sym">            (</span>r4 <span class="sym">(</span>aref mm <span class="num">4</span><span class="sym">)))
</span><span class="line">   67 </span><span class="sym">        (</span><span class="kwa">princ</span> <span class="sym">(</span>format <span class="str">&quot;%d %d %d %d</span><span class="esc">\n</span><span class="str">&quot;</span>
<span class="line">   68 </span>                       <span class="sym">(</span>aref r0 <span class="num">0</span><span class="sym">) (</span>aref r2 <span class="num">3</span><span class="sym">)
</span><span class="line">   69 </span><span class="sym">                       (</span>aref r3 <span class="num">2</span><span class="sym">) (</span>aref r4 <span class="num">4</span><span class="sym">)))))))
</span><span class="line">   70 </span><span class="sym"></span>
