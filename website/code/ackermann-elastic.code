<span class="line">    1 </span><span class="slc">// $Id: ackermann-elastic.code,v 1.4 2004-11-13 07:40:39 bfulgham Exp $
</span><span class="line">    2 </span><span class="slc"></span>package ackermann<span class="sym">;
</span><span class="line">    3 </span><span class="sym">
</span><span class="line">    4 </span><span class="sym"></span>import basic<span class="sym">;
</span><span class="line">    5 </span><span class="sym"></span>import sys<span class="sym">;
</span><span class="line">    6 </span><span class="sym"></span>import array<span class="sym">;
</span><span class="line">    7 </span><span class="sym">
</span><span class="line">    8 </span><span class="sym"></span><span class="kwc">private</span> function Ack<span class="sym">(</span> M<span class="sym">,</span> N <span class="sym">)
</span><span class="line">    9 </span><span class="sym">{
</span><span class="line">   10 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>M <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span><span class="sym">(</span> N <span class="sym">+</span> <span class="num">1</span> <span class="sym">);
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwa">if</span> <span class="sym">(</span>N <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span><span class="sym">(</span> Ack<span class="sym">(</span>M <span class="num">- 1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">) );
</span><span class="line">   12 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span> Ack<span class="sym">(</span>M <span class="num">- 1</span><span class="sym">,</span> Ack<span class="sym">(</span>M<span class="sym">, (</span>N <span class="num">- 1</span><span class="sym">))) );
</span><span class="line">   13 </span><span class="sym">}
</span><span class="line">   14 </span><span class="sym">
</span><span class="line">   15 </span><span class="sym">
</span><span class="line">   16 </span><span class="sym"></span><span class="kwc">private</span> n <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   17 </span><span class="sym"></span><span class="kwa">if</span><span class="sym">(</span>array<span class="sym">.</span>length<span class="sym">(</span>sys<span class="sym">.</span>args<span class="sym">) &gt;</span> <span class="num">0</span><span class="sym">) {
</span><span class="line">   18 </span><span class="sym"></span>    n <span class="sym">=</span> basic<span class="sym">.</span><span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   19 </span><span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{
</span><span class="line">   20 </span><span class="sym"></span>    n <span class="sym">=</span> <span class="num">1</span><span class="sym">;
</span><span class="line">   21 </span><span class="sym">}
</span><span class="line">   22 </span><span class="sym"></span>basic<span class="sym">.</span>print<span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span><span class="sym">,</span> n<span class="sym">,</span> <span class="str">&quot;): &quot;</span><span class="sym">,</span> Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
