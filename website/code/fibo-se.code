<span class="line">    1 </span><span class="slc">-- -*- mode: eiffel -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">-- $Id: fibo-se.code,v 1.4 2004-11-13 07:41:34 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="kwa">class</span> FIBO
<span class="line">    6 </span>
<span class="line">    7 </span>creation make
<span class="line">    8 </span>
<span class="line">    9 </span><span class="kwa">feature
</span><span class="line">   10 </span><span class="kwa">
</span><span class="line">   11 </span><span class="kwa"></span>   make <span class="kwa">is
</span><span class="line">   12 </span><span class="kwa">
</span><span class="line">   13 </span><span class="kwa">      local
</span><span class="line">   14 </span><span class="kwa"></span>         n<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   15 </span><span class="sym"></span>      <span class="kwa">do
</span><span class="line">   16 </span><span class="kwa">         if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then
</span><span class="line">   17 </span><span class="kwa"></span>            n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
<span class="line">   18 </span>         <span class="kwa">else
</span><span class="line">   19 </span><span class="kwa"></span>            n <span class="sym">:=</span> <span class="num">1
</span><span class="line">   20 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   21 </span><span class="kwa"></span>         std_output.put_integer<span class="sym">(</span>fib<span class="sym">(</span>n<span class="sym">))
</span><span class="line">   22 </span><span class="sym"></span>         std_output.put_new_line
<span class="line">   23 </span>      <span class="kwa">end</span><span class="sym">;
</span><span class="line">   24 </span><span class="sym">
</span><span class="line">   25 </span><span class="sym"></span><span class="kwa">feature</span> <span class="sym">{</span>NONE<span class="sym">}
</span><span class="line">   26 </span><span class="sym">
</span><span class="line">   27 </span><span class="sym"></span>   fib<span class="sym">(</span>n<span class="sym">:</span><span class="kwb">INTEGER</span><span class="sym">):</span><span class="kwb">INTEGER</span> <span class="kwa">is
</span><span class="line">   28 </span><span class="kwa">      do
</span><span class="line">   29 </span><span class="kwa">         if</span> n <span class="sym">&lt;</span> <span class="num">2</span> <span class="kwa">then
</span><span class="line">   30 </span><span class="kwa">            Result</span> <span class="sym">:=</span> <span class="num">1
</span><span class="line">   31 </span><span class="num"></span>         <span class="kwa">else
</span><span class="line">   32 </span><span class="kwa">            Result</span> <span class="sym">:=</span> fib<span class="sym">(</span>n<span class="num">-2</span><span class="sym">) +</span> fib<span class="sym">(</span>n<span class="num">-1</span><span class="sym">)
</span><span class="line">   33 </span><span class="sym"></span>         <span class="kwa">end
</span><span class="line">   34 </span><span class="kwa">      end</span><span class="sym">;
</span><span class="line">   35 </span><span class="sym"></span><span class="kwa">end</span>
