<span class="kwa">class</span>  SIEVE
creation make
<span class="kwa">feature</span>

   make <span class="kwa">is</span>
      <span class="kwa">local</span>
         count<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span>
         is_prime<span class="sym">:</span> FIXED_ARRAY<span class="sym">[</span><span class="kwb">BOOLEAN</span><span class="sym">];</span>
         i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span>
         num<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span>
         j<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span>
         k<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span>
      <span class="kwa">do</span>
         <span class="kwa">if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then</span>
            num <span class="sym">:=</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
         <span class="kwa">else</span>
            num <span class="sym">:=</span> <span class="num">1</span>
         <span class="kwa">end</span>

         <span class="sym">!!</span>is_prime.<span class="kwd">make</span><span class="sym">(</span><span class="num">8194</span><span class="sym">)</span>

         <span class="kwa">from</span>
            j <span class="sym">:=</span> <span class="num">0</span>
         until
            j <span class="sym">=</span> num
         <span class="kwa">loop</span>
            count <span class="sym">:=</span> <span class="num">0</span>
            <span class="kwa">from</span>
               i <span class="sym">:=</span> <span class="num">2</span>
            until
               i <span class="sym">&gt;</span> <span class="num">8192</span>
            <span class="kwa">loop</span>
               is_prime.<span class="kwd">put</span><span class="sym">(</span><span class="kwa">True</span><span class="sym">,</span> i<span class="sym">)</span>
               i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1</span>
            <span class="kwa">end</span>

            <span class="kwa">from</span>
               i <span class="sym">:=</span> <span class="num">2</span>
            until
               i <span class="sym">&gt;</span> <span class="num">8192</span>
            <span class="kwa">loop</span>
               <span class="kwa">if</span> is_prime&#64;i <span class="kwa">then</span>
                  <span class="kwa">from</span>
                     k <span class="sym">:=</span> i <span class="sym">+</span> i
                  until
                     k <span class="sym">&gt;</span> <span class="num">8192</span>
                  <span class="kwa">loop</span>
                     is_prime.<span class="kwd">put</span><span class="sym">(</span><span class="kwa">False</span><span class="sym">,</span> k<span class="sym">)</span>
                     k <span class="sym">:=</span> k <span class="sym">+</span> i
                  <span class="kwa">end</span>
                  count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1</span>
               <span class="kwa">end</span>
               i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1</span>
            <span class="kwa">end</span>

            j <span class="sym">:=</span> j <span class="sym">+</span> <span class="num">1</span>
         <span class="kwa">end</span>

         std_output.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;Count: &quot;</span><span class="sym">)</span>
         std_output.<span class="kwd">put_integer</span><span class="sym">(</span>count<span class="sym">)</span>
         std_output.<span class="kwd">put_character</span><span class="sym">(</span><span class="str">'%N'</span><span class="sym">)</span>
      <span class="kwa">end</span>

<span class="kwa">end</span>
