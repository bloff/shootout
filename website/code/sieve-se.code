<span class="line">    1 </span><span class="kwa">class</span>  SIEVE
<span class="line">    2 </span>creation make
<span class="line">    3 </span><span class="kwa">feature
</span><span class="line">    4 </span><span class="kwa">
</span><span class="line">    5 </span><span class="kwa"></span>   make <span class="kwa">is
</span><span class="line">    6 </span><span class="kwa">      local
</span><span class="line">    7 </span><span class="kwa"></span>         count<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">    8 </span><span class="sym"></span>         is_prime<span class="sym">:</span> FIXED_ARRAY<span class="sym">[</span><span class="kwb">BOOLEAN</span><span class="sym">];
</span><span class="line">    9 </span><span class="sym"></span>         i<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   10 </span><span class="sym"></span>         num<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   11 </span><span class="sym"></span>         j<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   12 </span><span class="sym"></span>         k<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;
</span><span class="line">   13 </span><span class="sym"></span>      <span class="kwa">do
</span><span class="line">   14 </span><span class="kwa">         if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then
</span><span class="line">   15 </span><span class="kwa"></span>            num <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
<span class="line">   16 </span>         <span class="kwa">else
</span><span class="line">   17 </span><span class="kwa"></span>            num <span class="sym">:=</span> <span class="num">1
</span><span class="line">   18 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   19 </span><span class="kwa">
</span><span class="line">   20 </span><span class="kwa"></span>         <span class="sym">!!</span>is_prime.make<span class="sym">(</span><span class="num">8194</span><span class="sym">)
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span>         <span class="kwa">from
</span><span class="line">   23 </span><span class="kwa"></span>            j <span class="sym">:=</span> <span class="num">0
</span><span class="line">   24 </span><span class="num"></span>         until
<span class="line">   25 </span>            j <span class="sym">=</span> num
<span class="line">   26 </span>         <span class="kwa">loop
</span><span class="line">   27 </span><span class="kwa"></span>            count <span class="sym">:=</span> <span class="num">0
</span><span class="line">   28 </span><span class="num"></span>            <span class="kwa">from
</span><span class="line">   29 </span><span class="kwa"></span>               i <span class="sym">:=</span> <span class="num">2
</span><span class="line">   30 </span><span class="num"></span>            until
<span class="line">   31 </span>               i <span class="sym">&gt;</span> <span class="num">8192
</span><span class="line">   32 </span><span class="num"></span>            <span class="kwa">loop
</span><span class="line">   33 </span><span class="kwa"></span>               is_prime.put<span class="sym">(</span><span class="kwa">True</span><span class="sym">,</span> i<span class="sym">)
</span><span class="line">   34 </span><span class="sym"></span>               i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span><span class="line">   35 </span><span class="num"></span>            <span class="kwa">end
</span><span class="line">   36 </span><span class="kwa">
</span><span class="line">   37 </span><span class="kwa">            from
</span><span class="line">   38 </span><span class="kwa"></span>               i <span class="sym">:=</span> <span class="num">2
</span><span class="line">   39 </span><span class="num"></span>            until
<span class="line">   40 </span>               i <span class="sym">&gt;</span> <span class="num">8192
</span><span class="line">   41 </span><span class="num"></span>            <span class="kwa">loop
</span><span class="line">   42 </span><span class="kwa">               if</span> is_prime&#64;i <span class="kwa">then
</span><span class="line">   43 </span><span class="kwa">                  from
</span><span class="line">   44 </span><span class="kwa"></span>                     k <span class="sym">:=</span> i <span class="sym">+</span> i
<span class="line">   45 </span>                  until
<span class="line">   46 </span>                     k <span class="sym">&gt;</span> <span class="num">8192
</span><span class="line">   47 </span><span class="num"></span>                  <span class="kwa">loop
</span><span class="line">   48 </span><span class="kwa"></span>                     is_prime.put<span class="sym">(</span><span class="kwa">False</span><span class="sym">,</span> k<span class="sym">)
</span><span class="line">   49 </span><span class="sym"></span>                     k <span class="sym">:=</span> k <span class="sym">+</span> i
<span class="line">   50 </span>                  <span class="kwa">end
</span><span class="line">   51 </span><span class="kwa"></span>                  count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1
</span><span class="line">   52 </span><span class="num"></span>               <span class="kwa">end
</span><span class="line">   53 </span><span class="kwa"></span>               i <span class="sym">:=</span> i <span class="sym">+</span> <span class="num">1
</span><span class="line">   54 </span><span class="num"></span>            <span class="kwa">end
</span><span class="line">   55 </span><span class="kwa">
</span><span class="line">   56 </span><span class="kwa"></span>            j <span class="sym">:=</span> j <span class="sym">+</span> <span class="num">1
</span><span class="line">   57 </span><span class="num"></span>         <span class="kwa">end
</span><span class="line">   58 </span><span class="kwa">
</span><span class="line">   59 </span><span class="kwa"></span>         std_output.put_string<span class="sym">(</span><span class="str">&quot;Count: &quot;</span><span class="sym">)
</span><span class="line">   60 </span><span class="sym"></span>         std_output.put_integer<span class="sym">(</span>count<span class="sym">)
</span><span class="line">   61 </span><span class="sym"></span>         std_output.put_character<span class="sym">(</span><span class="str">'%N'</span><span class="sym">)
</span><span class="line">   62 </span><span class="sym"></span>      <span class="kwa">end
</span><span class="line">   63 </span><span class="kwa">
</span><span class="line">   64 </span><span class="kwa">end</span>
