<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>newlisp
<span class="line">    2 </span>
<span class="line">    3 </span># count benchmark
<span class="line">    4 </span>#
<span class="line">    5 </span># Contributed by Lutz Mueller
<span class="line">    6 </span>
<span class="line">    7 </span><span class="sym">(</span><span class="kwa">set</span> <span class="str">'lc 0 '</span>wc <span class="num">0</span> <span class="str">'cc 0)
</span><span class="line">    8 </span><span class="str">
</span><span class="line">    9 </span><span class="str">(while (set '</span><span class="kwa">line</span> <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">))
</span><span class="line">   10 </span><span class="sym">        (</span>inc <span class="str">'lc)
</span><span class="line">   11 </span><span class="str">        (inc '</span>wc <span class="sym">(</span><span class="kwa">length</span> <span class="sym">(</span>parse <span class="sym">(</span>trim <span class="kwa">line</span><span class="sym">)</span> <span class="str">&quot;</span><span class="esc">\\</span><span class="str">s+&quot;</span> <span class="num">0</span><span class="sym">)))
</span><span class="line">   12 </span><span class="sym">        (</span>inc <span class="str">'cc (+ (length line) 1))) ;; add back the line feed
</span><span class="line">   13 </span><span class="str">
</span><span class="line">   14 </span><span class="str">(println lc &quot; &quot; wc &quot; &quot; cc)
</span><span class="line">   15 </span><span class="str">
</span><span class="line">   16 </span><span class="str">(exit)
</span><span class="line">   17 </span><span class="str"></span>
