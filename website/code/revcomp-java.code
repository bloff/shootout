
<span class="kwa">import</span> java<span class="sym">.</span>io<span class="sym">.*;

</span><span class="kwa">public class</span> revcomp <span class="sym">{

</span>    <span class="kwa">public static</span> <span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">)</span> <span class="kwa">throws</span> <span class="kwc">IOException</span> <span class="sym">{
</span>        <span class="kwb">char</span><span class="sym">[]</span> comp <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">char</span><span class="sym">[</span><span class="num">128</span><span class="sym">];
</span>        comp<span class="sym">[</span><span class="str">'a'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'A'</span><span class="sym">] =</span> <span class="str">'T'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'c'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'C'</span><span class="sym">] =</span> <span class="str">'G'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'g'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'G'</span><span class="sym">] =</span> <span class="str">'C'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'t'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'T'</span><span class="sym">] =</span> <span class="str">'A'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'u'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'U'</span><span class="sym">] =</span> <span class="str">'A'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'m'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'M'</span><span class="sym">] =</span> <span class="str">'K'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'r'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'R'</span><span class="sym">] =</span> <span class="str">'Y'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'w'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'W'</span><span class="sym">] =</span> <span class="str">'W'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'s'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'S'</span><span class="sym">] =</span> <span class="str">'S'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'y'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'Y'</span><span class="sym">] =</span> <span class="str">'R'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'k'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'K'</span><span class="sym">] =</span> <span class="str">'M'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'v'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'V'</span><span class="sym">] =</span> <span class="str">'B'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'h'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'H'</span><span class="sym">] =</span> <span class="str">'D'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'d'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'D'</span><span class="sym">] =</span> <span class="str">'H'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'b'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'B'</span><span class="sym">] =</span> <span class="str">'V'</span><span class="sym">;
</span>        comp<span class="sym">[</span><span class="str">'n'</span><span class="sym">] =</span> comp<span class="sym">[</span><span class="str">'N'</span><span class="sym">] =</span> <span class="str">'N'</span><span class="sym">;

</span>        <span class="kwc">BufferedReader</span> in <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">BufferedReader</span><span class="sym">(</span><span class="kwa">new</span> <span class="kwc">InputStreamReader</span><span class="sym">(</span><span class="kwc">System</span><span class="sym">.</span>in<span class="sym">));

</span>        <span class="kwc">String</span> header <span class="sym">=</span> in<span class="sym">.</span>readLine <span class="sym">();
</span>        <span class="kwa">while</span> <span class="sym">(</span>header <span class="sym">!=</span> null <span class="sym">&amp;&amp;</span> header<span class="sym">.</span>charAt <span class="sym">(</span><span class="num">0</span><span class="sym">) ==</span> <span class="str">'&gt;'</span><span class="sym">) {
</span>            <span class="kwc">StringBuffer</span> sb <span class="sym">=</span> <span class="kwa">new</span> <span class="kwc">StringBuffer</span><span class="sym">(</span><span class="num">4</span><span class="sym">*</span><span class="num">1024</span><span class="sym">);

</span>            <span class="slc">// read the sequence into the StringBuffer
</span>            <span class="kwc">String</span> line <span class="sym">=</span> in<span class="sym">.</span>readLine <span class="sym">();
</span>            <span class="kwa">while</span> <span class="sym">(</span>line <span class="sym">!=</span> null <span class="sym">&amp;&amp;</span> line<span class="sym">.</span>charAt <span class="sym">(</span><span class="num">0</span><span class="sym">) !=</span> <span class="str">'&gt;'</span><span class="sym">) {
</span>                sb<span class="sym">.</span>append <span class="sym">(</span>line<span class="sym">);
</span>                line <span class="sym">=</span> in<span class="sym">.</span>readLine <span class="sym">();
            }

</span>            <span class="slc">// reverse StringBuffer + find complements
</span>            <span class="kwb">int</span> len <span class="sym">=</span> sb<span class="sym">.</span>length <span class="sym">();
</span>            <span class="kwb">int</span> from <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> to <span class="sym">=</span> len <span class="num">- 1</span><span class="sym">;
</span>            <span class="kwa">while</span><span class="sym">(</span>from <span class="sym">&lt;=</span> to<span class="sym">) {
</span>                <span class="kwb">char</span> c1 <span class="sym">=</span> comp<span class="sym">[</span>sb<span class="sym">.</span>charAt <span class="sym">(</span>from<span class="sym">)];
</span>                <span class="kwb">char</span> c2 <span class="sym">=</span> comp<span class="sym">[</span>sb<span class="sym">.</span>charAt <span class="sym">(</span>to<span class="sym">)];
</span>                sb<span class="sym">.</span>setCharAt <span class="sym">(</span>from<span class="sym">,</span> c2<span class="sym">);
</span>                sb<span class="sym">.</span>setCharAt <span class="sym">(</span>to<span class="sym">,</span> c1<span class="sym">);
</span>                from<span class="sym">++;
</span>                to<span class="sym">--;
            }

</span>            <span class="slc">// print the header
</span>            <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span>header<span class="sym">);

</span>            <span class="slc">// print the sequence
</span>            from <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>            to <span class="sym">=</span> <span class="num">60</span><span class="sym">;
</span>            <span class="kwb">char</span><span class="sym">[]</span> chars <span class="sym">=</span> <span class="kwa">new</span> <span class="kwb">char</span><span class="sym">[</span><span class="num">60</span><span class="sym">];
</span>            <span class="kwa">while</span><span class="sym">(</span>to <span class="sym">&lt;</span> len<span class="sym">) {
</span>                sb<span class="sym">.</span>getChars <span class="sym">(</span>from<span class="sym">,</span> to<span class="sym">,</span> chars<span class="sym">,</span> <span class="num">0</span><span class="sym">);
</span>                <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="kwa">new</span> <span class="kwc">String</span><span class="sym">(</span>chars<span class="sym">));
</span>                from <span class="sym">=</span> to<span class="sym">;
</span>                to <span class="sym">+=</span> <span class="num">60</span><span class="sym">;
            }
</span>            <span class="kwa">if</span><span class="sym">(</span>from <span class="sym">!=</span> len<span class="sym">) {
</span>                sb<span class="sym">.</span>getChars <span class="sym">(</span>from<span class="sym">,</span> len<span class="sym">,</span> chars<span class="sym">,</span> <span class="num">0</span><span class="sym">);
</span>                <span class="kwc">System</span><span class="sym">.</span>out<span class="sym">.</span>println<span class="sym">(</span><span class="kwa">new</span> <span class="kwc">String</span><span class="sym">(</span>chars<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> len<span class="sym">-</span>from<span class="sym">));
            }

</span>            header <span class="sym">=</span> line<span class="sym">;
        }
    }
}</span>
