<span class="line">    1 </span><span class="slc">;;; -*- mode: lisp -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: random-poplisp.code,v 1.3 2004-11-11 07:14:04 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">(</span>defconstant IM     <span class="num">139968</span><span class="sym">)
</span><span class="line">    6 </span><span class="sym">(</span>defconstant IA       <span class="num">3877</span><span class="sym">)
</span><span class="line">    7 </span><span class="sym">(</span>defconstant IC     <span class="num">29573</span><span class="sym">)
</span><span class="line">    8 </span><span class="sym">
</span><span class="line">    9 </span><span class="sym">(</span>defvar LAST <span class="num">42</span><span class="sym">)
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym">(</span>declaim <span class="sym">(</span>inline gen_random<span class="sym">))
</span><span class="line">   12 </span><span class="sym">(</span><span class="kwa">defun</span> gen_random <span class="sym">(</span><span class="kwa">max</span><span class="sym">)
</span><span class="line">   13 </span><span class="sym">  (</span>declare <span class="sym">(</span><span class="kwa">type</span> <span class="sym">(</span>signed<span class="sym">-</span>byte <span class="num">32</span><span class="sym">)</span> IM IA IC LAST<span class="sym">))
</span><span class="line">   14 </span><span class="sym">  (</span>declare <span class="sym">(</span>double<span class="sym">-</span><span class="kwa">float max</span><span class="sym">))
</span><span class="line">   15 </span><span class="sym">  (</span><span class="kwa">setq</span> LAST <span class="sym">(</span>mod <span class="sym">(+ (</span>the fixnum <span class="sym">(*</span> LAST IA<span class="sym">))</span> IC<span class="sym">)</span> IM<span class="sym">))
</span><span class="line">   16 </span><span class="sym">  (/ (*</span> <span class="kwa">max</span> LAST<span class="sym">)</span> IM<span class="sym">))
</span><span class="line">   17 </span><span class="sym">
</span><span class="line">   18 </span><span class="sym">  (</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> pop11<span class="sym">::</span>poparglist<span class="sym">)</span> <span class="str">&quot;1&quot;</span><span class="sym">))))
</span><span class="line">   19 </span><span class="sym">    (</span>loop for i fixnum from <span class="num">1</span> below n do
<span class="line">   20 </span>      <span class="sym">(</span>gen_random <span class="num">100.0d0</span><span class="sym">))
</span><span class="line">   21 </span><span class="sym">    (</span>format t <span class="str">&quot;~,9F~%&quot;</span> <span class="sym">(</span>gen_random <span class="num">100.0d0</span><span class="sym">)))</span>
