<span class="com">(* wordfreq.sml</span>
<span class="com"> *</span>
<span class="com"> *   Count word frequency and produce sorted listing.</span>
<span class="com"> *</span>
<span class="com"> * Copyright (c) 2004 by The Fellowship of SML/NJ</span>
<span class="com"> *</span>
<span class="com"> * Author: Matthias Blume (blume&#64;tti-c.org)</span>
<span class="com"> *)</span>
<span class="kwa">structure</span> Test <span class="sym">:</span> <span class="kwa">sig</span>
    <span class="kwa">val</span> main <span class="sym">:</span> <span class="kwb">string</span> <span class="sym">*</span> <span class="kwb">string</span> list <span class="sym">-&gt;</span> OS.Process.status
<span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct</span>
    <span class="kwa">structure</span> T <span class="sym">=</span> HashTableFn <span class="sym">(</span><span class="kwa">type</span> hash_key <span class="sym">=</span> <span class="kwb">string</span>
                               <span class="kwa">val</span> hashVal <span class="sym">=</span> HashString.hashString
			       <span class="kwa">val</span> sameKey <span class="sym">:</span> <span class="kwb">string</span> <span class="sym">*</span> <span class="kwb">string</span> <span class="sym">-&gt;</span> <span class="kwb">bool</span> <span class="sym">=</span> <span class="kwa">op</span> <span class="sym">= )</span>

    <span class="kwa">fun</span> main _ <span class="sym">=</span>
	<span class="kwa">let open</span> FormatComb
	    <span class="kwa">val</span> tbl <span class="sym">=</span> T.mkTable <span class="sym">(</span><span class="num">1024</span><span class="sym">,</span> Fail <span class="str">&quot;notfound&quot;</span><span class="sym">)</span>
	    <span class="kwa">fun</span> inc s <span class="sym">=</span> <span class="kwa">let val</span> s' <span class="sym">=</span> <span class="kwa">String</span>.map <span class="kwa">Char</span>.toLower s
			<span class="kwa">in case</span> T.find tbl s' <span class="kwa">of</span>
			       NONE <span class="sym">=&gt;</span> T.insert tbl <span class="sym">(</span>s'<span class="sym">,</span> ref <span class="num">1</span><span class="sym">)</span>
			     <span class="sym">|</span> SOME r <span class="sym">=&gt;</span> r <span class="sym">:= !</span>r <span class="sym">+</span> <span class="num">1</span>
			<span class="kwa">end</span>
	    <span class="kwa">fun</span> cnt <span class="sym">() =</span>
		<span class="kwa">case TextIO</span>.inputLine <span class="kwa">TextIO</span>.stdIn <span class="kwa">of</span>
		    SOME l <span class="sym">=&gt; (</span>app inc <span class="sym">(</span><span class="kwa">String</span>.tokens <span class="sym">(</span>not <span class="kwa">o Char</span>.isAlpha<span class="sym">)</span> l<span class="sym">);</span>
			       cnt <span class="sym">())</span>
		  <span class="sym">|</span> NONE <span class="sym">=&gt; ()</span>
	    <span class="kwa">fun</span> byFreq <span class="sym">((</span>s<span class="sym">:</span> <span class="kwb">string</span><span class="sym">,</span> ref c<span class="sym">), (</span>s'<span class="sym">,</span> ref c'<span class="sym">)) =</span>
		c <span class="sym">&lt;</span> c' <span class="kwa">orelse</span> c <span class="sym">=</span> c' <span class="kwa">andalso</span> s <span class="sym">&lt;</span> s'
	    <span class="kwa">val</span> counts <span class="sym">= (</span>cnt <span class="sym">();</span> ListMergeSort.sort byFreq <span class="sym">(</span>T.listItemsi tbl<span class="sym">))</span>
	    <span class="kwa">fun</span> show <span class="sym">(</span>s<span class="sym">,</span> ref c<span class="sym">) =</span>
		print <span class="sym">(</span>format <span class="sym">(</span>pad left <span class="num">7</span> <span class="kwb">int</span> <span class="kwa">o</span> sp <span class="num">1</span> <span class="kwa">o</span> <span class="kwb">string</span> <span class="kwa">o</span> nl<span class="sym">)</span> c s<span class="sym">)</span>
	<span class="kwa">in</span> app show counts<span class="sym">;</span> OS.Process.success
	<span class="kwa">end</span>
<span class="kwa">end</span>
