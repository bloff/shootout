<span class="slc">#!/usr/bin/tclsh</span>

<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># from: Kristoffer Lawson</span>
<span class="slc"># with help from Miguel Sofer</span>
<span class="slc"># modified by Daniel South</span>

<span class="kwa">proc</span> Server <span class="sym">{</span>channel clientaddr clientport<span class="sym">} {</span>
    <span class="kwa">fconfigure</span> <span class="kwb">$channel</span> <span class="sym">-</span>buffering line <span class="sym">-</span><span class="kwa">encoding</span> unicode
    <span class="kwa">set</span> rLength <span class="num">0</span>
    <span class="kwa">while</span> <span class="sym">{![</span><span class="kwa">eof</span> <span class="kwb">$channel</span><span class="sym">]} {</span>
	<span class="kwa">if</span> <span class="sym">{[</span><span class="kwa">gets</span> <span class="kwb">$channel</span> r<span class="sym">] &gt;</span> <span class="num">0</span><span class="sym">} {</span>
	    <span class="kwa">puts</span> <span class="kwb">$channel $r</span>
	    <span class="slc"># Extra increase because [gets] doesn't return \n</span>
	    <span class="kwa">incr</span> rLength <span class="sym">[</span><span class="kwa">string</span> length <span class="kwb">$r</span><span class="sym">]</span>
	    <span class="kwa">incr</span> rLength
	<span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">puts</span> <span class="str">&quot;server processed $rLength bytes&quot;</span>
    <span class="kwa">exit</span>
<span class="sym">}</span>

<span class="kwa">proc</span> doChild <span class="sym">{</span>num<span class="sym">} {</span>
    <span class="kwa">set</span> fd <span class="sym">[</span><span class="kwa">socket</span> localhost <span class="num">9900</span><span class="sym">]</span>
    <span class="kwa">fconfigure</span> <span class="kwb">$fd</span> <span class="sym">-</span>buffering line <span class="sym">-</span><span class="kwa">encoding</span> unicode
    <span class="kwa">set</span> msg <span class="str">&quot;Hello there sailor&quot;</span>

    <span class="kwa">while</span> <span class="sym">{[</span><span class="kwa">incr</span> num <span class="sym">-</span><span class="num">1</span><span class="sym">] &gt;=</span> <span class="num">0</span><span class="sym">} {</span>
	<span class="kwa">puts</span> <span class="kwb">$fd $msg</span>
	<span class="kwa">while</span> <span class="sym">{![</span><span class="kwa">gets</span> <span class="kwb">$fd</span> r<span class="sym">]} {}</span>
	<span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$r</span> ne <span class="kwb">$msg</span><span class="sym">} {</span><span class="kwa">error</span> <span class="str">&quot;Received different message: $r.&quot;</span><span class="sym">;</span> <span class="kwa">exit</span><span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">close</span> <span class="kwb">$fd</span>
<span class="sym">}</span>

<span class="kwa">set</span> n <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]</span>

<span class="kwa">if</span> <span class="sym">{[</span><span class="kwa">llength</span> <span class="kwb">$argv</span><span class="sym">] ==</span> <span class="num">2</span><span class="sym">} {</span>
    doChild <span class="kwb">$n</span>
<span class="sym">}</span> else <span class="sym">{</span>
    <span class="kwa">socket</span> <span class="sym">-</span>server Server <span class="num">9900</span>
    <span class="kwa">exec</span> <span class="sym">[</span><span class="kwa">info</span> nameofexecutable<span class="sym">] [</span><span class="kwa">info</span> script<span class="sym">]</span> <span class="kwb">$n</span> <span class="sym">&amp; &amp;</span>
    <span class="kwa">vwait</span> forever
<span class="sym">}</span>
