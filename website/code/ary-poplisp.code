<span class="line">    1 </span><span class="slc">;;; -*- mode: lisp -*-
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">;;; $Id: ary-poplisp.code,v 1.3 2004-11-11 07:13:56 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">;;; http://shootout.alioth.debian.org/
</span><span class="line">    4 </span><span class="slc"></span>
<span class="line">    5 </span><span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> pop11<span class="sym">::</span>poparglist<span class="sym">)</span> <span class="str">&quot;1&quot;</span><span class="sym">))))
</span><span class="line">    6 </span><span class="sym">(</span>declare <span class="sym">(</span>fixnum n<span class="sym">))
</span><span class="line">    7 </span><span class="sym">(</span>let <span class="sym">((</span>x <span class="sym">(</span>make<span class="sym">-</span>array n <span class="sym">:</span>element<span class="sym">-</span><span class="kwa">type</span> <span class="str">'fixnum))
</span><span class="line">    8 </span><span class="str">  (y (make-array n :element-type '</span>fixnum<span class="sym">))
</span><span class="line">    9 </span><span class="sym">  (</span><span class="kwa">last</span> <span class="sym">(</span><span class="num">1</span><span class="sym">-</span> n<span class="sym">)))
</span><span class="line">   10 </span><span class="sym">  (</span>declare <span class="sym">(</span>fixnum <span class="kwa">last</span><span class="sym">))
</span><span class="line">   11 </span><span class="sym">  (</span>dotimes <span class="sym">(</span>i n<span class="sym">)
</span><span class="line">   12 </span><span class="sym">(</span>declare <span class="sym">(</span>fixnum i<span class="sym">))
</span><span class="line">   13 </span><span class="sym">(</span>setf <span class="sym">(</span>aref x i<span class="sym">) (+</span> i <span class="num">1</span><span class="sym">)))
</span><span class="line">   14 </span><span class="sym">  (</span>dotimes <span class="sym">(</span>k <span class="num">1000</span><span class="sym">)
</span><span class="line">   15 </span><span class="sym">(</span>do <span class="sym">((</span>i <span class="kwa">last</span> <span class="sym">(</span><span class="num">1</span><span class="sym">-</span> i<span class="sym">)))
</span><span class="line">   16 </span><span class="sym">        ((&lt;</span> i <span class="num">0</span><span class="sym">)</span> <span class="str">'nil)
</span><span class="line">   17 </span><span class="str">  (declare (fixnum i))
</span><span class="line">   18 </span><span class="str">  (incf (aref y i) (aref x i))))
</span><span class="line">   19 </span><span class="str">  (format t &quot;~A ~A~%&quot; (aref y 0) (aref y last))))</span>
