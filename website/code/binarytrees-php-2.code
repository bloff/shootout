<span class="sym">&lt;</span>? <span class="com">/* The Great Computer Language Shootout
   http://shootout.alioth.debian.org/

   contributed by Isaac Gouy (PHP novice)

   php -q binarytrees.php 12
*/</span>


<span class="kwa">function</span> newTreeNode<span class="sym">(&amp;</span><span class="kwb">$left</span><span class="sym">, &amp;</span><span class="kwb">$right</span><span class="sym">,</span> <span class="kwb">$item</span><span class="sym">){
</span>   <span class="kwa">return array</span><span class="sym">(</span><span class="kwb">$left</span><span class="sym">,</span><span class="kwb">$right</span><span class="sym">,</span><span class="kwb">$item</span><span class="sym">);
}

</span><span class="kwa">function</span> itemCheck<span class="sym">(&amp;</span><span class="kwb">$treeNode</span><span class="sym">){
</span>   <span class="kwa">if</span> <span class="sym">(!</span>isset<span class="sym">(</span><span class="kwb">$treeNode</span><span class="sym">[</span><span class="num">0</span><span class="sym">])){</span> <span class="kwa">return</span> <span class="kwb">$treeNode</span><span class="sym">[</span><span class="num">2</span><span class="sym">]; }
</span>   <span class="kwa">else</span> <span class="sym">{</span><span class="kwa">return
</span>      <span class="kwb">$treeNode</span><span class="sym">[</span><span class="num">2</span><span class="sym">] +
</span>         itemCheck<span class="sym">(</span><span class="kwb">$treeNode</span><span class="sym">[</span><span class="num">0</span><span class="sym">]) -</span> itemCheck<span class="sym">(</span><span class="kwb">$treeNode</span><span class="sym">[</span><span class="num">1</span><span class="sym">]);
   }
}

</span><span class="kwa">function</span> bottomUpTree<span class="sym">(</span><span class="kwb">$item</span><span class="sym">,</span><span class="kwb">$depth</span><span class="sym">){
</span>   <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$depth</span><span class="sym">&gt;</span><span class="num">0</span><span class="sym">){
</span>      <span class="kwa">return</span> newTreeNode<span class="sym">(
</span>          bottomUpTree<span class="sym">(</span><span class="num">2</span><span class="sym">*</span><span class="kwb">$item</span><span class="num">-1</span><span class="sym">,</span><span class="kwb">$depth</span><span class="num">-1</span><span class="sym">)
         ,</span>bottomUpTree<span class="sym">(</span><span class="num">2</span><span class="sym">*</span><span class="kwb">$item</span><span class="sym">,</span><span class="kwb">$depth</span><span class="num">-1</span><span class="sym">)
         ,</span><span class="kwb">$item
</span>         <span class="sym">);
      }
</span>   <span class="kwa">else</span> <span class="sym">{
</span>      <span class="kwb">$treeNode</span> <span class="sym">=</span> NULL<span class="sym">;
</span>      <span class="kwa">return</span> newTreeNode<span class="sym">(</span><span class="kwb">$treeNode</span><span class="sym">,</span> <span class="kwb">$treeNode</span><span class="sym">,</span> <span class="kwb">$item</span><span class="sym">);
   }
}


</span><span class="kwb">$minDepth</span> <span class="sym">=</span> <span class="num">4</span><span class="sym">;

</span><span class="kwb">$n</span> <span class="sym">= (</span><span class="kwb">$argc</span> <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">] :</span> <span class="num">1</span><span class="sym">;
</span><span class="kwb">$maxDepth</span> <span class="sym">=</span> <span class="kwa">max</span><span class="sym">(</span><span class="kwb">$minDepth</span> <span class="sym">+</span> <span class="num">2</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">);
</span><span class="kwb">$stretchDepth</span> <span class="sym">=</span> <span class="kwb">$maxDepth</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;

</span><span class="kwb">$stretchTree</span> <span class="sym">=</span> bottomUpTree<span class="sym">(</span><span class="num">0</span><span class="sym">,</span><span class="kwb">$stretchDepth</span><span class="sym">);
</span><span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;stretch tree of depth</span> <span class="esc">%d\t </span> <span class="str">check:</span> <span class="esc">%d\n</span><span class="str">&quot;</span><span class="sym">,
</span>   <span class="kwb">$stretchDepth</span><span class="sym">,</span> itemCheck<span class="sym">(</span><span class="kwb">$stretchTree</span><span class="sym">));
</span><span class="kwa">unset</span><span class="sym">(</span><span class="kwb">$stretchTree</span><span class="sym">);

</span><span class="kwb">$longLivedTree</span> <span class="sym">=</span> bottomUpTree<span class="sym">(</span><span class="num">0</span><span class="sym">,</span><span class="kwb">$maxDepth</span><span class="sym">);

</span><span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$depth</span><span class="sym">=</span><span class="kwb">$minDepth</span><span class="sym">;</span> <span class="kwb">$depth</span><span class="sym">&lt;=</span><span class="kwb">$maxDepth</span><span class="sym">;</span> <span class="kwb">$depth</span><span class="sym">+=</span><span class="num">2</span><span class="sym">){
</span>   <span class="kwb">$iterations</span> <span class="sym">=</span> <span class="num">1</span> <span class="sym">&lt;&lt; (</span><span class="kwb">$maxDepth</span> <span class="sym">-</span> <span class="kwb">$depth</span> <span class="sym">+</span> <span class="kwb">$minDepth</span><span class="sym">);

</span>   <span class="kwb">$check</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span>   <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">1</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;=</span><span class="kwb">$iterations</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){
</span>      <span class="kwb">$t</span> <span class="sym">=</span> bottomUpTree<span class="sym">(</span><span class="kwb">$i</span><span class="sym">,</span><span class="kwb">$depth</span><span class="sym">);
</span>      <span class="kwb">$check</span> <span class="sym">+=</span> itemCheck<span class="sym">(</span><span class="kwb">$t</span><span class="sym">);
</span>      <span class="kwb">$t</span> <span class="sym">=</span> NULL<span class="sym">;

</span>      <span class="kwb">$t</span> <span class="sym">=</span> bottomUpTree<span class="sym">(-</span><span class="kwb">$i</span><span class="sym">,</span><span class="kwb">$depth</span><span class="sym">);
</span>      <span class="kwb">$check</span> <span class="sym">+=</span> itemCheck<span class="sym">(</span><span class="kwb">$t</span><span class="sym">);
</span>      <span class="kwb">$t</span> <span class="sym">=</span> NULL<span class="sym">;
   }

</span>   <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">%d\t </span> <span class="str">trees of depth</span> <span class="esc">%d\t </span> <span class="str">check:</span> <span class="esc">%d\n</span><span class="str">&quot;</span><span class="sym">,
</span>      <span class="num">2</span><span class="sym">*</span><span class="kwb">$iterations</span><span class="sym">,</span> <span class="kwb">$depth</span><span class="sym">,</span> <span class="kwb">$check</span><span class="sym">);
}

</span><span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;long lived tree of depth</span> <span class="esc">%d\t </span> <span class="str">check:</span> <span class="esc">%d\n</span><span class="str">&quot;</span><span class="sym">,
</span>   <span class="kwb">$maxDepth</span><span class="sym">,</span> itemCheck<span class="sym">(</span><span class="kwb">$longLivedTree</span><span class="sym">));

</span>?<span class="sym">&gt;</span>
