<span class="line">    1 </span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    2 </span><span class="slc"></span><span class="slc">% heapsort.m
</span><span class="line">    3 </span><span class="slc"></span><span class="slc">% Ralph Becket &lt;rbeck&#64;microsoft.com&gt;
</span><span class="line">    4 </span><span class="slc"></span><span class="slc">% Tue Jan  9 14:18:19 GMT 2001
</span><span class="line">    5 </span><span class="slc"></span><span class="slc">% vim: ts=4 sw=4 et tw=0 wm=0 ff=unix
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">%
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">% ---------------------------------------------------------------------------- %
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="sym">:-</span> module mytest.
<span class="line">   10 </span>
<span class="line">   11 </span><span class="sym">:-</span> interface.
<span class="line">   12 </span>
<span class="line">   13 </span><span class="sym">:-</span> import_module io.
<span class="line">   14 </span>
<span class="line">   15 </span>
<span class="line">   16 </span><span class="sym">:-</span> pred main<span class="sym">(</span>io__state<span class="sym">,</span> io__state<span class="sym">)</span>.
<span class="line">   17 </span><span class="sym">:-</span> mode main<span class="sym">(</span>di<span class="sym">,</span> uo<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">   18 </span>
<span class="line">   19 </span>
<span class="line">   20 </span><span class="sym">:-</span> implementation.
<span class="line">   21 </span>
<span class="line">   22 </span>
<span class="line">   23 </span><span class="sym">:-</span> import_module <span class="kwb">float</span><span class="sym">,</span> int<span class="sym">,</span> array<span class="sym">,</span> random<span class="sym">,</span> list<span class="sym">,</span> string<span class="sym">,</span> require.
<span class="line">   24 </span>
<span class="line">   25 </span>
<span class="line">   26 </span><span class="sym">:-</span> type heap <span class="sym">==</span> array<span class="sym">(</span><span class="kwb">float</span><span class="sym">)</span>.
<span class="line">   27 </span>
<span class="line">   28 </span>
<span class="line">   29 </span>main <span class="sym">--&gt;
</span><span class="line">   30 </span><span class="sym"></span>    io__command_line_arguments<span class="sym">(</span>ArgV<span class="sym">),
</span><span class="line">   31 </span><span class="sym">    (   {</span> ArgV <span class="sym">= [],</span>        N <span class="sym">=</span> <span class="num">1</span> <span class="sym">}
</span><span class="line">   32 </span><span class="sym">    ;   {</span> ArgV <span class="sym">= [</span>Arg<span class="sym">],</span>     N <span class="sym">=</span> string__det_to_int<span class="sym">(</span>Arg<span class="sym">) }
</span><span class="line">   33 </span><span class="sym">    ;   {</span> ArgV <span class="sym">= [</span>_<span class="sym">,</span>_<span class="sym">|</span>_<span class="sym">],</span>   error<span class="sym">(</span><span class="str">&quot;usage: heapsort [N]&quot;</span><span class="sym">) }
</span><span class="line">   34 </span><span class="sym">    ),
</span><span class="line">   35 </span><span class="sym">    {</span> A <span class="sym">=</span> heapsort<span class="sym">(</span>N <span class="num">- 1</span><span class="sym">,</span> random_heap<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> seed<span class="sym">,</span> array__init<span class="sym">(</span>N<span class="sym">,</span> <span class="num">0.0</span><span class="sym">))) },
</span><span class="line">   36 </span><span class="sym"></span>    io__format<span class="sym">(</span><span class="str">&quot;%.10f&quot;</span><span class="sym">, [</span>f<span class="sym">(</span>array__lookup<span class="sym">(</span>A<span class="sym">,</span> N <span class="num">- 1</span><span class="sym">))]),
</span><span class="line">   37 </span><span class="sym"></span>    io__nl.
<span class="line">   38 </span>
<span class="line">   39 </span>
<span class="line">   40 </span><span class="sym">:-</span> func random_heap<span class="sym">(</span>int<span class="sym">,</span> int<span class="sym">,</span> heap<span class="sym">) =</span> heap.
<span class="line">   41 </span><span class="sym">:-</span> mode random_heap<span class="sym">(</span>in<span class="sym">,</span> in<span class="sym">,</span> array_di<span class="sym">) =</span> array_uo <span class="kwa">is</span> det.
<span class="line">   42 </span>
<span class="line">   43 </span>random_heap<span class="sym">(</span>I<span class="sym">,</span> S0<span class="sym">,</span> H0<span class="sym">) =</span> H <span class="sym">:-
</span><span class="line">   44 </span><span class="sym">    (</span> if I <span class="sym">=&lt;</span> array__max<span class="sym">(</span>H0<span class="sym">)</span> then
<span class="line">   45 </span>        gen_random<span class="sym">(</span>R<span class="sym">,</span> S0<span class="sym">,</span> S<span class="sym">),
</span><span class="line">   46 </span><span class="sym"></span>        H <span class="sym">=</span> random_heap<span class="sym">(</span>I <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> S<span class="sym">,</span> up_heap<span class="sym">(</span>I<span class="sym">,</span> R<span class="sym">,</span> H0<span class="sym">))
</span><span class="line">   47 </span><span class="sym"></span>      else
<span class="line">   48 </span>        H <span class="sym">=</span> H0
<span class="line">   49 </span>    <span class="sym">)</span>.
<span class="line">   50 </span>
<span class="line">   51 </span>
<span class="line">   52 </span><span class="sym">:-</span> func up_heap<span class="sym">(</span>int<span class="sym">,</span> <span class="kwb">float</span><span class="sym">,</span> heap<span class="sym">) =</span> heap.
<span class="line">   53 </span><span class="sym">:-</span> mode up_heap<span class="sym">(</span>in<span class="sym">,</span> in<span class="sym">,</span> array_di<span class="sym">) =</span> array_uo <span class="kwa">is</span> det.
<span class="line">   54 </span>
<span class="line">   55 </span>up_heap<span class="sym">(</span>N<span class="sym">,</span> Y<span class="sym">,</span> H<span class="sym">) =
</span><span class="line">   56 </span><span class="sym">    (</span> if <span class="num">0</span> <span class="sym">&lt;</span> N<span class="sym">,</span> X <span class="sym">&lt;</span> Y then
<span class="line">   57 </span>        up_heap<span class="sym">(</span>HalfN<span class="sym">,</span> Y<span class="sym">,</span> array__set<span class="sym">(</span>H<span class="sym">,</span> N<span class="sym">,</span> X<span class="sym">))
</span><span class="line">   58 </span><span class="sym"></span>      else
<span class="line">   59 </span>        array__set<span class="sym">(</span>H<span class="sym">,</span> N<span class="sym">,</span> Y<span class="sym">)
</span><span class="line">   60 </span><span class="sym">    )
</span><span class="line">   61 </span><span class="sym"> :-
</span><span class="line">   62 </span><span class="sym"></span>    HalfN <span class="sym">=</span> N <span class="sym">//</span> <span class="num">2</span><span class="sym">,
</span><span class="line">   63 </span><span class="sym"></span>    X <span class="sym">=</span> array__lookup<span class="sym">(</span>H<span class="sym">,</span> HalfN<span class="sym">)</span>.
<span class="line">   64 </span>
<span class="line">   65 </span>
<span class="line">   66 </span><span class="sym">:-</span> func heapsort<span class="sym">(</span>int<span class="sym">,</span> heap<span class="sym">) =</span> heap.
<span class="line">   67 </span><span class="sym">:-</span> mode heapsort<span class="sym">(</span>in<span class="sym">,</span> array_di<span class="sym">) =</span> array_uo <span class="kwa">is</span> det.
<span class="line">   68 </span>
<span class="line">   69 </span>heapsort<span class="sym">(</span>N<span class="sym">,</span> H<span class="sym">) =
</span><span class="line">   70 </span><span class="sym">    (</span> if N <span class="sym">=</span> <span class="num">0</span> then H else heapsort<span class="sym">(</span>N <span class="num">- 1</span><span class="sym">,</span> remove_greatest<span class="sym">(</span>N<span class="sym">,</span> H<span class="sym">)) )</span>.
<span class="line">   71 </span>
<span class="line">   72 </span>
<span class="line">   73 </span><span class="sym">:-</span> func remove_greatest<span class="sym">(</span>int<span class="sym">,</span> heap<span class="sym">) =</span> heap.
<span class="line">   74 </span><span class="sym">:-</span> mode remove_greatest<span class="sym">(</span>in<span class="sym">,</span> array_di<span class="sym">) =</span> array_uo <span class="kwa">is</span> det.
<span class="line">   75 </span>
<span class="line">   76 </span>remove_greatest<span class="sym">(</span>N<span class="sym">,</span> H<span class="sym">) =</span> down_heap<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> N <span class="num">- 1</span><span class="sym">,</span> Y<span class="sym">,</span> array__set<span class="sym">(</span>H<span class="sym">,</span> N<span class="sym">,</span> X<span class="sym">)) :-
</span><span class="line">   77 </span><span class="sym"></span>    X <span class="sym">=</span> array__lookup<span class="sym">(</span>H<span class="sym">,</span> <span class="num">0</span><span class="sym">),
</span><span class="line">   78 </span><span class="sym"></span>    Y <span class="sym">=</span> array__lookup<span class="sym">(</span>H<span class="sym">,</span> N<span class="sym">)</span>.
<span class="line">   79 </span>
<span class="line">   80 </span>
<span class="line">   81 </span><span class="sym">:-</span> func down_heap<span class="sym">(</span>int<span class="sym">,</span> int<span class="sym">,</span> <span class="kwb">float</span><span class="sym">,</span> heap<span class="sym">) =</span> heap.
<span class="line">   82 </span><span class="sym">:-</span> mode down_heap<span class="sym">(</span>in<span class="sym">,</span> in<span class="sym">,</span> in<span class="sym">,</span> array_di<span class="sym">) =</span> array_uo <span class="kwa">is</span> det.
<span class="line">   83 </span>
<span class="line">   84 </span>down_heap<span class="sym">(</span>I<span class="sym">,</span> N<span class="sym">,</span> X<span class="sym">,</span> H0<span class="sym">) =</span> H <span class="sym">:-
</span><span class="line">   85 </span><span class="sym"></span>    L <span class="sym">=</span> I <span class="sym">+</span> I <span class="sym">+</span> <span class="num">1</span><span class="sym">,
</span><span class="line">   86 </span><span class="sym"></span>    R <span class="sym">=</span> L <span class="sym">+</span> <span class="num">1</span><span class="sym">,
</span><span class="line">   87 </span><span class="sym">    (</span> if N <span class="sym">&lt;</span> L then
<span class="line">   88 </span>        H <span class="sym">=</span> array__set<span class="sym">(</span>H0<span class="sym">,</span> I<span class="sym">,</span> X<span class="sym">)
</span><span class="line">   89 </span><span class="sym"></span>      else
<span class="line">   90 </span>        J <span class="sym">= (</span> if R <span class="sym">&lt;</span> N<span class="sym">,</span> array__lookup<span class="sym">(</span>H0<span class="sym">,</span> R<span class="sym">) &gt;</span> array__lookup<span class="sym">(</span>H0<span class="sym">,</span> L<span class="sym">)</span> then R
<span class="line">   91 </span>                                                                    else L <span class="sym">),
</span><span class="line">   92 </span><span class="sym"></span>        Y <span class="sym">=</span> array__lookup<span class="sym">(</span>H0<span class="sym">,</span> J<span class="sym">),
</span><span class="line">   93 </span><span class="sym">        (</span> if X <span class="sym">&gt;</span> Y then
<span class="line">   94 </span>            H <span class="sym">=</span> array__set<span class="sym">(</span>H0<span class="sym">,</span> I<span class="sym">,</span> X<span class="sym">)
</span><span class="line">   95 </span><span class="sym"></span>          else
<span class="line">   96 </span>            H <span class="sym">=</span> down_heap<span class="sym">(</span>J<span class="sym">,</span> N<span class="sym">,</span> X<span class="sym">,</span> array__set<span class="sym">(</span>H0<span class="sym">,</span> I<span class="sym">,</span> Y<span class="sym">))
</span><span class="line">   97 </span><span class="sym">        )
</span><span class="line">   98 </span><span class="sym">    )</span>.
<span class="line">   99 </span>
<span class="line">  100 </span>
<span class="line">  101 </span><span class="sym">:-</span> pred gen_random<span class="sym">(</span><span class="kwb">float</span><span class="sym">,</span> int<span class="sym">,</span> int<span class="sym">)</span>.
<span class="line">  102 </span><span class="sym">:-</span> mode gen_random<span class="sym">(</span>out<span class="sym">,</span> in<span class="sym">,</span> out<span class="sym">)</span> <span class="kwa">is</span> det.
<span class="line">  103 </span>
<span class="line">  104 </span>gen_random<span class="sym">(</span>R<span class="sym">,</span> S0<span class="sym">,</span> S<span class="sym">) :-
</span><span class="line">  105 </span><span class="sym"></span>    S <span class="sym">= (</span>S0 <span class="sym">*</span> ia <span class="sym">+</span> ic<span class="sym">)</span> `<span class="kwa">mod</span>` im<span class="sym">,
</span><span class="line">  106 </span><span class="sym"></span>    R <span class="sym">=</span> <span class="kwb">float</span><span class="sym">(</span>S<span class="sym">) /</span> <span class="kwb">float</span><span class="sym">(</span>im<span class="sym">)</span>.
<span class="line">  107 </span>
<span class="line">  108 </span><span class="sym">:-</span> func im <span class="sym">=</span> int.   im <span class="sym">=</span> <span class="num">139968</span>.
<span class="line">  109 </span><span class="sym">:-</span> func ia <span class="sym">=</span> int.   ia <span class="sym">=</span>   <span class="num">3877</span>.
<span class="line">  110 </span><span class="sym">:-</span> func ic <span class="sym">=</span> int.   ic <span class="sym">=</span>  <span class="num">29573</span>.
<span class="line">  111 </span><span class="sym">:-</span> func seed <span class="sym">=</span> int. seed <span class="sym">=</span>   <span class="num">42</span>.
