<span class="dir">#!/usr/bin/pike</span>
<span class="slc">// -*- mode: pike -*-</span>
<span class="slc">// $Id: except-pike.code,v 1.6 2005-12-02 08:05:57 bfulgham Exp $</span>
<span class="slc">// http://www.bagley.org/~doug/shootout/</span>
<span class="slc">// from: Per Hedbor</span>

<span class="slc">// this version requires Pike 7.1</span>

class <span class="kwd">HiException</span><span class="sym">(</span> <span class="kwb">mixed</span> value <span class="sym">) {</span> <span class="kwb">constant</span> IsHi <span class="sym">=</span> <span class="num">1</span><span class="sym">; }</span>
class <span class="kwd">LoException</span><span class="sym">(</span> <span class="kwb">mixed</span> value <span class="sym">) {</span> <span class="kwb">constant</span> IsLo <span class="sym">=</span> <span class="num">1</span><span class="sym">; }</span>

<span class="kwb">void</span> <span class="kwd">some_function</span><span class="sym">(</span> <span class="kwb">int</span> num <span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwd">if</span><span class="sym">(</span> <span class="kwb">mixed</span> e <span class="sym">=</span> <span class="kwd">catch</span><span class="sym">(</span>  <span class="kwd">hi_function</span><span class="sym">(</span> num <span class="sym">) ) )</span>
	<span class="kwd">error</span><span class="sym">(</span> <span class="str">&quot;We shouldn't get here (%s)&quot;</span><span class="sym">,</span> <span class="kwa">describe_error</span><span class="sym">(</span> e <span class="sym">) );</span>
<span class="sym">}</span>

<span class="kwb">int</span> HI<span class="sym">,</span> LO<span class="sym">;</span>

<span class="kwb">void</span> <span class="kwd">hi_function</span><span class="sym">(</span><span class="kwb">int</span> num<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwd">if</span><span class="sym">(</span> <span class="kwb">mixed</span> e <span class="sym">=</span> <span class="kwd">catch</span><span class="sym">(</span> <span class="kwd">lo_function</span><span class="sym">(</span> num <span class="sym">) ) )</span>
	<span class="kwd">if</span><span class="sym">(</span> e<span class="sym">-&gt;</span>IsHi <span class="sym">)</span>
	    HI<span class="sym">++;</span>
	else
	    <span class="kwa">throw</span><span class="sym">(</span> e <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwb">void</span> <span class="kwd">lo_function</span><span class="sym">(</span><span class="kwb">int</span> num<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwd">if</span><span class="sym">(</span> <span class="kwb">mixed</span> e <span class="sym">=</span> <span class="kwd">catch</span><span class="sym">(</span>  <span class="kwd">blowup</span><span class="sym">(</span>num<span class="sym">) ) )</span>
	<span class="kwd">if</span><span class="sym">(</span> e<span class="sym">-&gt;</span>IsLo <span class="sym">)</span>
	    LO<span class="sym">++;</span>
	else
	    <span class="kwa">throw</span><span class="sym">(</span> e <span class="sym">);</span>
<span class="sym">}</span>


<span class="kwb">void</span> <span class="kwd">blowup</span><span class="sym">(</span><span class="kwb">int</span> num<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwd">if</span><span class="sym">(</span> num <span class="sym">&amp;</span> <span class="num">1</span> <span class="sym">)</span>
	<span class="kwa">throw</span><span class="sym">(</span> <span class="kwd">LoException</span><span class="sym">(</span>num<span class="sym">) );</span>
    else
	<span class="kwa">throw</span><span class="sym">(</span> <span class="kwd">HiException</span><span class="sym">(</span>num<span class="sym">) );</span>
<span class="sym">}</span>

<span class="kwb">void</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">array</span> argv<span class="sym">)</span>
<span class="sym">{</span>
    <span class="kwb">int</span> num <span class="sym">= (</span><span class="kwb">int</span><span class="sym">)</span>argv<span class="sym">[-</span><span class="num">1</span><span class="sym">];</span>
    <span class="kwd">if</span><span class="sym">(</span> num <span class="sym">&lt;</span> <span class="num">1</span> <span class="sym">)</span>
	num <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwd">while</span><span class="sym">(</span>num<span class="sym">)</span>
	<span class="kwd">some_function</span><span class="sym">(</span> num<span class="sym">-- );</span>
    <span class="kwa">write</span><span class="sym">(</span> <span class="str">&quot;Exceptions: HI=%d / LO=%d</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">,</span> HI<span class="sym">,</span> LO <span class="sym">);</span>
<span class="sym">}</span>
