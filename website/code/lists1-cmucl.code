<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: lisp -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: lists1-cmucl.code,v 1.2 2004-11-08 08:15:15 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://shootout.alioth.debian.org/
</FONT></I><I><FONT COLOR="#B22222">;;; Multi-lisp modifications by Brent Fulgham
</FONT></I>

(defun main ()
  (<B><FONT COLOR="#A020F0">let*</FONT></B> ((n (parse-integer (<B><FONT COLOR="#A020F0">or</FONT></B> (car (last #+sbcl sb-ext:*posix-argv*
                                          #+cmu  extensions:*command-line-strings*)) <B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>)))
	 (A '())
	 <I><FONT COLOR="#B22222">;; create empty list B
</FONT></I>	 (B '())
	 (mid (/ N 2))
	 (sum 0))

    <I><FONT COLOR="#B22222">;; create list (A) of integers from 1 through N
</FONT></I>    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i N (- i 1)))
	((= i 0))
      (setq A (cons i A)))

    <I><FONT COLOR="#B22222">;; move each individual item from A to B, in a loop, reversing order
</FONT></I>    (<B><FONT COLOR="#A020F0">do</FONT></B> ((empty (null A) (null A)))
	(empty)
      (setq B (cons (car A) B))
      (setq A (cdr A)))

    <I><FONT COLOR="#B22222">;; print first 2 elements of B
</FONT></I>    (format t <B><FONT COLOR="#BC8F8F">&quot;~a ~a~%&quot;</FONT></B> (car B) (cadr B))

    <I><FONT COLOR="#B22222">;; reverse B (can be done in place)
</FONT></I>    (setq B (reverse B))

    <I><FONT COLOR="#B22222">;; is 0 a member of B?
</FONT></I>    (format t <B><FONT COLOR="#BC8F8F">&quot;~a~%&quot;</FONT></B> (<B><FONT COLOR="#A020F0">if</FONT></B> (member 0 B) <B><FONT COLOR="#BC8F8F">&quot;true&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false&quot;</FONT></B>))

    <I><FONT COLOR="#B22222">;; is N a member of B?
</FONT></I>    (format t <B><FONT COLOR="#BC8F8F">&quot;~a~%&quot;</FONT></B> (<B><FONT COLOR="#A020F0">if</FONT></B> (member N B) <B><FONT COLOR="#BC8F8F">&quot;true&quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;false&quot;</FONT></B>))

    <I><FONT COLOR="#B22222">;; filter values from B to A that are less than N/2, preserving order
</FONT></I>    (loop for x in B <B><FONT COLOR="#A020F0">do</FONT></B> (<B><FONT COLOR="#A020F0">if</FONT></B> (&lt; x mid) (setq A (cons x A))))
    (setq A (reverse A))

    <I><FONT COLOR="#B22222">;; print first ten items of A
</FONT></I>    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))
	 (x A (cdr x)))
	((<B><FONT COLOR="#A020F0">or</FONT></B> (= i 10) (null x)))
      (format t  (<B><FONT COLOR="#A020F0">if</FONT></B> (&lt; i 9) <B><FONT COLOR="#BC8F8F">&quot;~a &quot;</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;~a~%&quot;</FONT></B>) (car x)))

    <I><FONT COLOR="#B22222">;; print sum of items in A that are less than 1000
</FONT></I>    (loop for x in A <B><FONT COLOR="#A020F0">do</FONT></B> (<B><FONT COLOR="#A020F0">if</FONT></B> (&lt; x 1000) (setq sum (+ x sum))))
    (format t <B><FONT COLOR="#BC8F8F">&quot;~a~%&quot;</FONT></B> sum)

    <I><FONT COLOR="#B22222">;; append B to end of A
</FONT></I>    <I><FONT COLOR="#B22222">;(nconc A B)
</FONT></I>    (setf (cdr (last A)) B)

    <I><FONT COLOR="#B22222">;; print length of A
</FONT></I>    (format t <B><FONT COLOR="#BC8F8F">&quot;~a ~a~%&quot;</FONT></B> (length A) (car (last A)))))
</pre></td></tr></table>
