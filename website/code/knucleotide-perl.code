<span class="slc">#!/usr/bin/perl
</span>
<span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc"># k-nucleotide count benchmark
</span><span class="slc"># contributed by Joel Hoffman, 2005-03-24
</span>
<span class="kwa">use</span> strict<span class="sym">;

</span><span class="kwc">my</span> &#64;keys<span class="sym">;
</span><span class="kwc">my</span> <span class="kwb">$sequence</span> <span class="sym">=</span> <span class="str">&quot;&quot;</span><span class="sym">;

</span><span class="kwb">$</span><span class="sym">/ =</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&gt;&quot;</span><span class="sym">;</span> <span class="slc"># Input Record Separator
</span><span class="kwa">while</span> <span class="sym">(</span>defined<span class="sym">(</span><span class="kwc">my</span> <span class="kwb">$l</span> <span class="sym">= &lt;&gt;)) {
</span>   <span class="kwa">if</span> <span class="sym">(</span>uc substr<span class="sym">(</span><span class="kwb">$l</span><span class="sym">,</span><span class="num">0</span><span class="sym">,</span><span class="num">5</span><span class="sym">)</span> <span class="kwa">eq</span> <span class="str">'THREE'</span><span class="sym">) {
</span>      chomp <span class="kwb">$l</span><span class="sym">;
</span>      <span class="kwc">my</span> &#64;l <span class="sym">=</span> split <span class="sym">/</span>\n<span class="sym">+/,</span> <span class="kwb">$l</span><span class="sym">;
</span>      <span class="kwb">$sequence</span> <span class="sym">=</span> uc join<span class="sym">(</span><span class="str">&quot;&quot;</span><span class="sym">,</span>grep <span class="kwb">$_</span> <span class="sym">!</span>~ <span class="sym">/</span>^<span class="sym">;/,</span> &#64;l<span class="sym">[</span><span class="num">1</span>..<span class="kwb">$</span><span class="slc">#l]);
</span>      <span class="kwa">last</span><span class="sym">;
   }
}

</span><span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">(</span><span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">,</span><span class="num">3</span><span class="sym">,</span><span class="num">4</span><span class="sym">,</span><span class="num">6</span><span class="sym">,</span><span class="num">12</span><span class="sym">,</span><span class="num">18</span><span class="sym">) {
</span>   <span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$i</span> <span class="sym">(</span><span class="num">0</span>..<span class="sym">(</span>length <span class="kwb">$sequence</span><span class="sym">) -</span> <span class="kwb">$n</span><span class="sym">) {
</span>      <span class="kwb">$keys</span><span class="sym">[</span><span class="kwb">$n</span><span class="sym">]{</span>substr<span class="sym">(</span><span class="kwb">$sequence</span><span class="sym">,</span><span class="kwb">$i</span><span class="sym">,</span><span class="kwb">$n</span><span class="sym">)}++;
   }
}

</span><span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$i</span> <span class="sym">(</span><span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">) {
</span>   printf <span class="str">&quot;%s %4.2f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span><span class="kwb">$_</span><span class="sym">,(</span><span class="num">100</span> <span class="sym">*</span> <span class="kwb">$keys</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]{</span><span class="kwb">$_</span><span class="sym">})/(</span>length <span class="kwb">$sequence</span><span class="sym">)
</span>     <span class="kwa">for</span> sort <span class="sym">{</span> <span class="kwb">$keys</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]{</span><span class="kwb">$b</span><span class="sym">} &lt;=&gt;</span> <span class="kwb">$keys</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]{</span><span class="kwb">$a</span><span class="sym">}</span> <span class="kwa">or</span> <span class="kwb">$a</span> <span class="kwa">cmp</span> <span class="kwb">$b</span> <span class="sym">}
</span>       keys %<span class="sym">{</span><span class="kwb">$keys</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]};
</span>   print <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
}

</span>printf <span class="str">&quot;%d</span><span class="esc">\t</span><span class="str">%s</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwb">$keys</span><span class="sym">[</span>length <span class="kwb">$_</span><span class="sym">]{</span><span class="kwb">$_</span><span class="sym">},</span> <span class="kwb">$_
</span>   <span class="kwa">for</span> qw<span class="sym">&lt;</span>GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT<span class="sym">&gt;;</span>
