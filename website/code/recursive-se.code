<span class="slc">--	The Computer Language Shootout</span>
<span class="slc">--	http://shootout.alioth.debian.org</span>
<span class="slc">--	Contributed by A. Suter</span>
<span class="slc">--</span>
<span class="slc">--	Compilation:</span>
<span class="slc">--		se c -clean -boost -no_gc -O3 -fomit-frame-pointer</span>
<span class="slc">--		-funroll-loops recursive.e -o recursive</span>

<span class="kwa">class</span> RECURSIVE

insert
	ARGUMENTS

creation <span class="sym">{</span>ANY<span class="sym">}</span>
	make

<span class="kwa">feature</span> <span class="sym">{</span>ANY<span class="sym">}</span>
	make <span class="kwa">is</span>
		<span class="kwa">local</span>
			n<span class="sym">:</span> <span class="kwb">INTEGER</span>
		<span class="kwa">do</span>
			<span class="kwa">if not</span> <span class="sym">(</span>argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">and then</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.is_integer<span class="sym">)</span> <span class="kwa">then</span>
				<span class="kwd">die_with_code</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
			<span class="kwa">end</span>
			n <span class="sym">:=</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
			<span class="kwa">if</span> n <span class="sym">&lt;=</span> <span class="num">1</span> <span class="kwa">then</span>
				<span class="kwd">die_with_code</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
			<span class="kwa">end</span>

			io.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span> <span class="sym">+ (</span>n<span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot;): &quot;</span>
				<span class="sym">+</span> <span class="kwd">ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;Fib(&quot;</span> <span class="sym">+ (</span><span class="num">27.0</span> <span class="sym">+</span> n<span class="sym">)</span>.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">1</span><span class="sym">) +</span> <span class="str">&quot;): &quot;</span>
				<span class="sym">+</span> <span class="kwd">fib_real</span><span class="sym">(</span><span class="num">27.0</span> <span class="sym">+</span> n<span class="sym">)</span>.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">1</span><span class="sym">) +</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;Tak(&quot;</span> <span class="sym">+ (</span><span class="num">3</span> <span class="sym">* (</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">))</span>.to_string <span class="sym">+</span> <span class="str">&quot;,&quot;</span> <span class="sym">+ (</span><span class="num">2</span> <span class="sym">* (</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">))</span>.to_string <span class="sym">+</span> <span class="str">&quot;,&quot;</span> <span class="sym">+ (</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot;): &quot;</span>
				<span class="sym">+</span> <span class="kwd">tak_integer</span><span class="sym">(</span><span class="num">3</span> <span class="sym">* (</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">),</span> <span class="num">2</span> <span class="sym">* (</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">),</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;Fib(3): &quot;</span>
				<span class="sym">+</span> <span class="kwd">fib_integer</span><span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.to_string <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
			io.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0): &quot;</span>
				<span class="sym">+</span> <span class="kwd">tak_real</span><span class="sym">(</span><span class="num">3.0</span><span class="sym">,</span> <span class="num">2.0</span><span class="sym">,</span> <span class="num">1.0</span><span class="sym">)</span>.<span class="kwd">to_string_format</span><span class="sym">(</span><span class="num">1</span><span class="sym">) +</span> <span class="str">&quot;%N&quot;</span><span class="sym">)</span>
		<span class="kwa">end</span>

	<span class="kwd">ack</span> <span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">):</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span>
		<span class="kwa">do</span>
			<span class="kwa">if</span> x <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> y <span class="sym">+</span> <span class="num">1</span>
			<span class="kwa">elseif</span> y <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">ack</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
			<span class="kwa">else</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">ack</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span>x<span class="sym">,</span> y <span class="sym">-</span> <span class="num">1</span><span class="sym">))</span>
			<span class="kwa">end</span>
		<span class="kwa">end</span>

	<span class="kwd">fib_integer</span> <span class="sym">(</span>n<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">):</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span>
		<span class="kwa">do</span>
			<span class="kwa">if</span> n <span class="sym">&lt;</span> <span class="num">2</span> <span class="kwa">then</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="num">1</span>
			<span class="kwa">else</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">fib_integer</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">2</span><span class="sym">) +</span> <span class="kwd">fib_integer</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span>
			<span class="kwa">end</span>
		<span class="kwa">end</span>

	<span class="kwd">fib_real</span> <span class="sym">(</span>r<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">):</span> <span class="kwb">REAL</span> <span class="kwa">is</span>
		<span class="kwa">do</span>
			<span class="kwa">if</span> r <span class="sym">&lt;</span> <span class="num">2.0</span> <span class="kwa">then</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="num">1.0</span>
			<span class="kwa">else</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">fib_real</span><span class="sym">(</span>r <span class="sym">-</span> <span class="num">2.0</span><span class="sym">) +</span> <span class="kwd">fib_real</span><span class="sym">(</span>r <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span>
			<span class="kwa">end</span>
		<span class="kwa">end</span>

	<span class="kwd">tak_integer</span> <span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">):</span> <span class="kwb">INTEGER</span> <span class="kwa">is</span>
		<span class="kwa">do</span>
			<span class="kwa">if</span> y <span class="sym">&lt;</span> x <span class="kwa">then</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">tak_integer</span><span class="sym">(</span><span class="kwd">tak_integer</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">),</span> <span class="kwd">tak_integer</span><span class="sym">(</span>y <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> z<span class="sym">,</span> x<span class="sym">),</span> <span class="kwd">tak_integer</span><span class="sym">(</span>z <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">))</span>
			<span class="kwa">else</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> z
			<span class="kwa">end</span>
		<span class="kwa">end</span>

	<span class="kwd">tak_real</span> <span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">:</span> <span class="kwb">REAL</span><span class="sym">):</span> <span class="kwb">REAL</span> <span class="kwa">is</span>
		<span class="kwa">do</span>
			<span class="kwa">if</span> y <span class="sym">&lt;</span> x <span class="kwa">then</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">tak_real</span><span class="sym">(</span><span class="kwd">tak_real</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">),</span> <span class="kwd">tak_real</span><span class="sym">(</span>y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> z<span class="sym">,</span> x<span class="sym">),</span> <span class="kwd">tak_real</span><span class="sym">(</span>z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">))</span>
			<span class="kwa">else</span>
				<span class="kwa">Result</span> <span class="sym">:=</span> z
			<span class="kwa">end</span>
		<span class="kwa">end</span>

<span class="kwa">end</span> <span class="slc">-- class RECURSIVE</span>
