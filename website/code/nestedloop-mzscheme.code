#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>mzscheme <span class="sym">-</span>qu

<span class="sym">(</span>module nestedloop mzscheme
  <span class="sym">(</span>require <span class="sym">(</span>lib <span class="str">&quot;defmacro.ss&quot;</span><span class="sym">))</span>

  <span class="sym">(</span>define<span class="sym">-</span>macro <span class="sym">(</span>nest n expr<span class="sym">)</span>
    <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(&gt;</span> n <span class="num">0</span><span class="sym">)</span>
	`<span class="sym">(</span>let loop <span class="sym">([</span>i <span class="num">1</span><span class="sym">]) (</span>unless <span class="sym">(&gt;</span> i n<span class="sym">)</span>
			     <span class="sym">(</span>nest <span class="sym">,(-</span> n <span class="num">1</span><span class="sym">) ,</span>expr<span class="sym">)</span>
			     <span class="sym">(</span>loop <span class="sym">(</span>add1 i<span class="sym">))))</span>
	expr<span class="sym">))</span>


  <span class="sym">(</span>define <span class="sym">(</span>main argv<span class="sym">)</span>
    <span class="sym">(</span>let<span class="sym">* ([</span>n <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span>vector<span class="sym">-</span>ref argv <span class="num">0</span><span class="sym">))]</span>
	   <span class="sym">[</span>x <span class="num">0</span><span class="sym">])</span>
      <span class="sym">(</span>nest <span class="num">6</span> <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> x <span class="sym">(+</span> x <span class="num">1</span><span class="sym">)))</span>
      <span class="sym">(</span>printf <span class="str">&quot;~s~n&quot;</span> x<span class="sym">)))</span>

  <span class="sym">(</span>main <span class="sym">(</span>current<span class="sym">-</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>arguments<span class="sym">)))</span>
