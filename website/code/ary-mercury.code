<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
%% $Id: ary-mercury.code,v 1.1 2004-11-02 08:52:29 bfulgham Exp $
%% http:<I><FONT COLOR="#B22222">//www.bagley.org/~doug/shootout/
</FONT></I>%% based on some code from Ralph Becket

:- module mytest.

:- <B><FONT COLOR="#A020F0">interface</FONT></B>.

:- import_module io.



:- pred main(io__state, io__state).
:- mode main(di, uo) <B><FONT COLOR="#A020F0">is</FONT></B> det.



:- <B><FONT COLOR="#A020F0">implementation</FONT></B>.



:- import_module <B><FONT COLOR="#A020F0">array</FONT></B>, int, list, <B><FONT COLOR="#A020F0">string</FONT></B>, require.



main --&gt;
    io__command_line_arguments(ArgV),
    (   <I><FONT COLOR="#B22222">{ ArgV = [],        N = 1 }</FONT></I>
    ;   <I><FONT COLOR="#B22222">{ ArgV = [Arg],     N = string__det_to_int(Arg) }</FONT></I>
    ;   <I><FONT COLOR="#B22222">{ ArgV = [_,_|_],   error(&quot;usage: arrayaccess [N]&quot;) }</FONT></I>
    ),
    <I><FONT COLOR="#B22222">{ X = some_naturals(0, array__init(N, 0)) }</FONT></I>,
    <I><FONT COLOR="#B22222">{ Y = add_arrays_n(1000, N-1, X, array__init(N, 0)) }</FONT></I>,
    io__write_int(array__lookup(Y, 0)),
    io__write_string(&quot; &quot;),
    io__write_int(array__lookup(Y, N - 1)),
    io__nl.



:- func some_naturals(int, <B><FONT COLOR="#A020F0">array</FONT></B>(int)) = <B><FONT COLOR="#A020F0">array</FONT></B>(int).
:- mode some_naturals(<B><FONT COLOR="#A020F0">in</FONT></B>, array_di) = array_uo <B><FONT COLOR="#A020F0">is</FONT></B> det.

some_naturals(I, A) =
    ( <B><FONT COLOR="#A020F0">if</FONT></B> I =&lt; array__max(A) <B><FONT COLOR="#A020F0">then</FONT></B> some_naturals(I + 1, array__set(A, I, I + 1))
                            <B><FONT COLOR="#A020F0">else</FONT></B> A ).



:- func add_array(int, <B><FONT COLOR="#A020F0">array</FONT></B>(int), <B><FONT COLOR="#A020F0">array</FONT></B>(int)) = <B><FONT COLOR="#A020F0">array</FONT></B>(int).
:- mode add_array(<B><FONT COLOR="#A020F0">in</FONT></B>, array_ui, array_di) = array_uo <B><FONT COLOR="#A020F0">is</FONT></B> det.

add_array(I, A, B) =
    ( <B><FONT COLOR="#A020F0">if</FONT></B> I &lt; 0
      <B><FONT COLOR="#A020F0">then</FONT></B> B
      <B><FONT COLOR="#A020F0">else</FONT></B> add_array(I - 1, A, array__set(B, I, array__lookup(A, I) + array__lookup(B, I)))
    ).



:- func add_arrays_n(int, int, <B><FONT COLOR="#A020F0">array</FONT></B>(int), <B><FONT COLOR="#A020F0">array</FONT></B>(int)) = <B><FONT COLOR="#A020F0">array</FONT></B>(int).
:- mode add_arrays_n(<B><FONT COLOR="#A020F0">in</FONT></B>, <B><FONT COLOR="#A020F0">in</FONT></B>, array_ui, array_di) = array_uo <B><FONT COLOR="#A020F0">is</FONT></B> det.

add_arrays_n(N, Len, A, B) =
    ( <B><FONT COLOR="#A020F0">if</FONT></B> N &gt; 0
      <B><FONT COLOR="#A020F0">then</FONT></B> add_arrays_n(N - 1, Len, A, add_array(Len, A, B))
      <B><FONT COLOR="#A020F0">else</FONT></B> B
    ).
</pre></td></tr></table>
