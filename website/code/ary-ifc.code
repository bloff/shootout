<span class="sym">!</span> Array access function implementation
<span class="sym">!</span> Simon Geard<span class="sym">,</span> <span class="num">1</span><span class="sym">/</span><span class="num">12</span><span class="sym">/</span><span class="num">04
</span><span class="sym">!
!</span> Building info<span class="sym">.
! ==============
!
!</span> Linux  <span class="sym">-</span> <span class="kwa">using</span> the Intel Fortran90 compiler<span class="sym">:
!
!</span>          ifort ary<span class="sym">.</span>f90 <span class="sym">-</span>O3 <span class="sym">-</span><span class="kwb">static</span><span class="sym">-</span>libcxa <span class="sym">-</span>o ary
<span class="sym">!
!</span> WinXP  <span class="sym">-</span> Compaq Visual Fortran <span class="num">6.6c
</span><span class="sym">!
!</span>          f90 ary<span class="sym">.</span>f90 <span class="sym">/</span>link <span class="sym">/</span>libpath<span class="sym">:</span><span class="str">&quot;d:</span><span class="esc">\P</span><span class="str">rogram Files</span><span class="esc">\M</span><span class="str">icrosoft Visual Studio</span><span class="esc">\d</span><span class="str">f98</span><span class="esc">\l</span><span class="str">ib&quot;</span>
<span class="sym">!
!</span> Cygwin <span class="sym">-</span> g95 compiler
<span class="sym">!
!</span>          g95 ary<span class="sym">.</span>f90 <span class="sym">-</span>O3 <span class="sym">-</span>o ary<span class="sym">.</span>exe
<span class="sym">!
</span>program ary
  implicit none
  integer result<span class="sym">,</span> num<span class="sym">,</span> i<span class="sym">,</span> k
  character<span class="sym">(</span>len<span class="sym">=</span><span class="num">8</span><span class="sym">)</span> argv
  integer<span class="sym">,</span> dimension<span class="sym">(:),</span> allocatable <span class="sym">::</span> x<span class="sym">,</span> y

  call getarg<span class="sym">(</span><span class="num">1</span><span class="sym">,</span>argv<span class="sym">)
</span>  read<span class="sym">(</span>argv<span class="sym">,</span><span class="str">'(I4)'</span><span class="sym">)</span> num

  allocate<span class="sym">(</span>x<span class="sym">(</span><span class="num">0</span><span class="sym">:</span>num<span class="num">-1</span><span class="sym">))
</span>  allocate<span class="sym">(</span>y<span class="sym">(</span><span class="num">0</span><span class="sym">:</span>num<span class="num">-1</span><span class="sym">))

</span>  x <span class="sym">= (/ (</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">,</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">,</span>num<span class="num">-1</span><span class="sym">) /)
</span>  y <span class="sym">= (/ (</span><span class="num">0</span><span class="sym">,</span>i<span class="sym">=</span><span class="num">0</span><span class="sym">,</span>num<span class="num">-1</span><span class="sym">) /)

</span>  <span class="kwa">do</span> k<span class="sym">=</span><span class="num">0</span><span class="sym">,</span><span class="num">999
</span>     <span class="kwa">do</span> i<span class="sym">=</span>num<span class="num">-1</span><span class="sym">,</span><span class="num">0</span><span class="sym">,-</span><span class="num">1
</span>        y<span class="sym">(</span>i<span class="sym">) =</span> y<span class="sym">(</span>i<span class="sym">) +</span> x<span class="sym">(</span>i<span class="sym">)
</span>     end <span class="kwa">do
</span>  end <span class="kwa">do

</span>  write<span class="sym">(*,</span><span class="str">'(1x,i4,a,i8)'</span><span class="sym">)</span> y<span class="sym">(</span><span class="num">0</span><span class="sym">),</span><span class="str">' '</span><span class="sym">,</span>y<span class="sym">(</span>num<span class="num">-1</span><span class="sym">)

</span>  deallocate<span class="sym">(</span>x<span class="sym">)
</span>  deallocate<span class="sym">(</span>y<span class="sym">)

</span>end program ary
<span class="sym">!</span> vim<span class="sym">:</span> ts<span class="sym">=</span><span class="num">4</span> ft<span class="sym">=</span>fortran
