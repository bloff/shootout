<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(*
 * $Id: reversefile-ocaml.code,v 1.2 2004-11-08 08:15:35 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 * author: Jean-Francois Monin
 * date: Thu Jan 27 00:28:51 CET 2001
 * France Telecom R &amp; D, Lannion
 * ocamlopt -noassert -unsafe -ccopt -O3 rev.ml -o rev
 *)</FONT></I>

<B><FONT COLOR="#A020F0">let</FONT></B> size <B><FONT COLOR="#5F9EA0">=</FONT></B> 10000

<B><FONT COLOR="#A020F0">let</FONT></B> <B><FONT COLOR="#A020F0">rec</FONT></B> lect stack buf pos free <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B> nrd <B><FONT COLOR="#5F9EA0">=</FONT></B> input stdin buf pos free <B><FONT COLOR="#A020F0">in</FONT></B>
  <B><FONT COLOR="#A020F0">if</FONT></B> nrd <B><FONT COLOR="#5F9EA0">=</FONT></B> 0 <B><FONT COLOR="#A020F0">then</FONT></B> stack, buf, pos <I><FONT COLOR="#B22222">(* buf filled only until pos *)</FONT></I>
  <B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> nrd <B><FONT COLOR="#5F9EA0">=</FONT></B> free <B><FONT COLOR="#A020F0">then</FONT></B> lect (buf <B><FONT COLOR="#5F9EA0">::</FONT></B> stack) (String.create size) 0 size
  <B><FONT COLOR="#A020F0">else</FONT></B> lect stack buf (pos <B><FONT COLOR="#5F9EA0">+</FONT></B> nrd) (free <B><FONT COLOR="#5F9EA0">-</FONT></B> nrd)

<B><FONT COLOR="#A020F0">let</FONT></B> output_buf (buf, len) <B><FONT COLOR="#5F9EA0">=</FONT></B> output stdout buf 0 len

<B><FONT COLOR="#A020F0">let</FONT></B> <B><FONT COLOR="#A020F0">rec</FONT></B> rev_write tail stack buf len pos <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">if</FONT></B> pos <B><FONT COLOR="#5F9EA0">=</FONT></B> 0 <B><FONT COLOR="#A020F0">then</FONT></B>
    match stack <B><FONT COLOR="#A020F0">with</FONT></B>
    <B><FONT COLOR="#5F9EA0">|</FONT></B> [] <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> output stdout buf 0 len; List.iter output_buf tail
    <B><FONT COLOR="#5F9EA0">|</FONT></B> topbuf <B><FONT COLOR="#5F9EA0">::</FONT></B> stack <B><FONT COLOR="#5F9EA0">-</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
        <B><FONT COLOR="#A020F0">let</FONT></B> toplen <B><FONT COLOR="#5F9EA0">=</FONT></B> String.length topbuf <B><FONT COLOR="#A020F0">in</FONT></B>
        rev_write ((buf, len) <B><FONT COLOR="#5F9EA0">::</FONT></B> tail) stack topbuf toplen toplen
  <B><FONT COLOR="#A020F0">else</FONT></B> <B><FONT COLOR="#A020F0">if</FONT></B> buf.[pos <B><FONT COLOR="#5F9EA0">-</FONT></B> 1] <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#BC8F8F">'\n'</FONT></B> <B><FONT COLOR="#A020F0">then</FONT></B>
    begin
      output stdout buf pos (len <B><FONT COLOR="#5F9EA0">-</FONT></B> pos);
      List.iter output_buf tail;
      rev_write [] stack buf pos (pos <B><FONT COLOR="#5F9EA0">-</FONT></B> 1)
    <B><FONT COLOR="#A020F0">end</FONT></B>
  <B><FONT COLOR="#A020F0">else</FONT></B> rev_write tail stack buf len (pos <B><FONT COLOR="#5F9EA0">-</FONT></B> 1);;

<B><FONT COLOR="#A020F0">let</FONT></B> stack, buf, length <B><FONT COLOR="#5F9EA0">=</FONT></B> lect [] (String.create size) 0 size;;
rev_write [] stack buf length length</pre></td></tr></table>
