<span class="slc"># -*- mode: icon -*-</span>
<span class="slc"># $Id: hash-icon.code,v 1.8 2006-09-20 05:51:28 bfulgham Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">procedure</span> hexstring<span class="sym">(</span>i<span class="sym">)</span>
    <span class="kwa">local</span> s
    <span class="kwa">if</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span> s <span class="sym">:=</span> <span class="str">&quot;0&quot;</span>
    <span class="kwa">else</span> <span class="sym">{</span>
	s <span class="sym">:=</span> <span class="str">&quot;&quot;</span>
	<span class="kwa">while</span> i ~<span class="sym">=</span> <span class="num">0</span> <span class="kwa">do</span> <span class="sym">{</span>
	    s <span class="sym">:=</span> <span class="str">&quot;0123456789abcdef&quot;</span><span class="sym">[</span>iand<span class="sym">(</span>i<span class="sym">,</span><span class="num">15</span><span class="sym">) +</span> <span class="num">1</span><span class="sym">] ||</span> s
	    i <span class="sym">:=</span> ishift<span class="sym">(</span>i<span class="sym">,-</span><span class="num">4</span><span class="sym">)</span>
	<span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">return</span> s
<span class="kwa">end</span>

<span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)</span>
    <span class="kwa">local</span> n
    <span class="kwa">local</span> X
    <span class="kwa">local</span> c
    <span class="kwa">local</span> i
    n <span class="sym">:=</span> argv<span class="sym">[</span><span class="num">1</span><span class="sym">] |</span> <span class="num">1</span>
    X <span class="sym">:=</span> <span class="kwb">table</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span>
    c <span class="sym">:=</span> <span class="num">0</span>
    <span class="kwa">every</span> i <span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do</span> <span class="sym">{</span>
	X<span class="sym">[</span>hexstring<span class="sym">(</span>i<span class="sym">)] :=</span> i
    <span class="sym">}</span>
    <span class="kwa">every</span> i <span class="sym">:=</span> n <span class="kwa">to</span> <span class="num">1</span> <span class="kwa">by</span> <span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span> <span class="sym">{</span>
	<span class="kwa">if</span> <span class="sym">(</span>member<span class="sym">(</span>X<span class="sym">,</span><span class="kwb">string</span><span class="sym">(</span>i<span class="sym">)))</span> <span class="kwa">then</span> <span class="sym">{</span> c <span class="sym">+:=</span> <span class="num">1</span> <span class="sym">}</span>
    <span class="sym">}</span>
    write<span class="sym">(</span>c<span class="sym">)</span>
<span class="kwa">end</span>
