<span class="slc">#!/usr/bin/ruby</span>
<span class="slc"># -*- mode: ruby -*-</span>
<span class="slc"># $Id: heapsort-ruby.code,v 1.11 2005-12-31 16:45:36 bfulgham Exp $</span>
<span class="slc">#</span>
<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># modified by Jabari Zakiya</span>

IM = <span class="num">139968</span>
IA =   <span class="num">3877</span>
IC =  <span class="num">29573</span>

<span class="kwb">$last</span> = <span class="num">42.0</span>
<span class="kwa">def</span> <span class="kwd">gen_random</span> <span class="sym">(</span>max) <span class="sym">(</span>max <span class="sym">* (</span><span class="kwb">$last</span> = <span class="sym">(</span><span class="kwb">$last</span> <span class="sym">*</span> IA <span class="sym">+</span> IC) % IM)) <span class="sym">/</span> IM <span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">heapsort</span><span class="sym">(</span>n<span class="sym">,</span> ra)
    j = i = rra = <span class="num">0</span>
    l = <span class="sym">(</span>n <span class="sym">&gt;&gt;</span> <span class="num">1</span>) <span class="sym">+</span> <span class="num">1</span>
    ir = n <span class="sym">-</span> <span class="num">1</span>

    <span class="kwa">while</span> <span class="sym">(</span><span class="num">1</span>) <span class="kwa">do</span>
	<span class="kwa">if</span> <span class="sym">(</span>l <span class="sym">&gt;</span> <span class="num">1</span>) <span class="kwa">then</span>
	    rra = ra<span class="sym">.</span><span class="kwd">at</span><span class="sym">(</span>l <span class="sym">-</span>= <span class="num">1</span>)
	<span class="kwa">else</span>
	    rra = ra<span class="sym">.</span><span class="kwd">at</span><span class="sym">(</span>ir)
	    ra<span class="sym">[</span>ir<span class="sym">]</span> = ra<span class="sym">.</span><span class="kwd">at</span><span class="sym">(</span><span class="num">1</span>)
	    <span class="kwa">if</span> <span class="sym">((</span>ir <span class="sym">-</span>= <span class="num">1</span>) == <span class="num">1</span>) <span class="kwa">then</span>
		ra<span class="sym">[</span><span class="num">1</span><span class="sym">]</span> = rra
		<span class="kwa">return</span>
	    <span class="kwa">end</span>
	<span class="kwa">end</span>
	i = l
	j = l <span class="sym">&lt;&lt;</span> <span class="num">1</span>
	<span class="kwa">while</span> <span class="sym">(</span>j <span class="sym">&lt;</span>= ir) <span class="kwa">do</span>
	    <span class="kwa">if</span> <span class="sym">((</span>j <span class="sym">&lt;</span> ir) <span class="kwa">and</span> <span class="sym">(</span>ra<span class="sym">.</span><span class="kwd">at</span><span class="sym">(</span>j) <span class="sym">&lt;</span> ra<span class="sym">.</span><span class="kwd">at</span><span class="sym">(</span>j<span class="sym">+</span><span class="num">1</span>))) <span class="kwa">then</span>
		j <span class="sym">+</span>= <span class="num">1</span>
	    <span class="kwa">end</span>
	    <span class="kwa">if</span> <span class="sym">(</span>rra <span class="sym">&lt;</span> ra<span class="sym">.</span><span class="kwd">at</span><span class="sym">(</span>j)) <span class="kwa">then</span>
		ra<span class="sym">[</span>i<span class="sym">]</span> = ra<span class="sym">.</span><span class="kwd">at</span><span class="sym">(</span>j)
		j <span class="sym">+</span>= <span class="sym">(</span>i = j)
	    <span class="kwa">else</span>
		j = ir <span class="sym">+</span> <span class="num">1</span>
	    <span class="kwa">end</span>
	<span class="kwa">end</span>
	ra<span class="sym">[</span>i<span class="sym">]</span> = rra
    <span class="kwa">end</span>
<span class="kwa">end</span>

N = <span class="kwd">Integer</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">.</span>shift <span class="sym">||</span> <span class="num">1</span>)
ary = Array<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>N) <span class="sym">{</span> <span class="kwd">gen_random</span><span class="sym">(</span><span class="num">1.0</span>) <span class="sym">}</span>

<span class="kwd">heapsort</span><span class="sym">(</span>N<span class="sym">,</span> ary)

printf <span class="str">&quot;%.10f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> ary<span class="sym">.</span>last
