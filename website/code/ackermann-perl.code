<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">#!/usr/bin/perl
</FONT></I><I><FONT COLOR="#B22222"># $Id: ackermann-perl.code,v 1.2 2004-11-08 08:15:11 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222"># http://www.bagley.org/~doug/shootout/
</FONT></I>
<I><FONT COLOR="#B22222"># With help from Ernesto Hernandez-Novich
</FONT></I><B><FONT COLOR="#A020F0">use</FONT></B> integer;

<I><FONT COLOR="#B22222"># Note:  If memoization were allowed in this program, we could
</FONT></I><I><FONT COLOR="#B22222"># do so by adding:
</FONT></I><I><FONT COLOR="#B22222"># use Memoization;
</FONT></I><I><FONT COLOR="#B22222"># memoize(&quot;Ack&quot;);
</FONT></I><I><FONT COLOR="#B22222">#
</FONT></I>
<I><FONT COLOR="#B22222"># It's prettier but slower to do this
</FONT></I><I><FONT COLOR="#B22222">#sub Ack {
</FONT></I><I><FONT COLOR="#B22222">#    my($M, $N) = @_;
</FONT></I><I><FONT COLOR="#B22222">#    return( $N + 1 )         if ($M == 0);
</FONT></I><I><FONT COLOR="#B22222">#    return( Ack($M - 1, 1) ) if ($N == 0);
</FONT></I><I><FONT COLOR="#B22222">#    Ack($M - 1, Ack($M, $N - 1));
</FONT></I><I><FONT COLOR="#B22222">#}
</FONT></I>
<I><FONT COLOR="#B22222"># in our quest for speed, we must get ugly:
</FONT></I><I><FONT COLOR="#B22222"># it helps reduce stack frame size a little bit
</FONT></I><I><FONT COLOR="#B22222"># from Leif Stensson
</FONT></I><B><FONT COLOR="#A020F0">sub</FONT></B> Ack {
    <B><FONT COLOR="#A020F0">return</FONT></B> $_[0] ? ($_[1] ? Ack($_[0]-1, Ack($_[0], $_[1]-1))
		    : Ack($_[0]-1, 1))
	: $_[1]+1;
}

<B><FONT COLOR="#A020F0">my</FONT></B> $NUM = $ARGV[0];
$NUM = 1 <B><FONT COLOR="#A020F0">if</FONT></B> ($NUM &lt; 1);
<B><FONT COLOR="#A020F0">my</FONT></B> $ack = Ack(3, $NUM);
<B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;Ack(3,$NUM): $ack\n&quot;</FONT></B>;</pre></td></tr></table>
