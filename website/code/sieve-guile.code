<span class="line">    1 </span>#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="line">    2 </span><span class="sym">-</span>e main <span class="sym">-</span>s
<span class="line">    3 </span><span class="sym">!</span>#
<span class="line">    4 </span>
<span class="line">    5 </span><span class="slc">;;; $Id: sieve-guile.code,v 1.4 2004-11-13 07:43:20 bfulgham Exp $
</span><span class="line">    6 </span><span class="slc"></span><span class="slc">;;; http://www.bagley.org/~doug/shootout/
</span><span class="line">    7 </span><span class="slc"></span><span class="slc">;;; with help from Benedikt Rosenau
</span><span class="line">    8 </span><span class="slc"></span>
<span class="line">    9 </span><span class="sym">(</span>use<span class="sym">-</span>modules <span class="sym">(</span>ice<span class="num">-9</span> format<span class="sym">))
</span><span class="line">   10 </span><span class="sym">
</span><span class="line">   11 </span><span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)
</span><span class="line">   12 </span><span class="sym">  (</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">and</span> <span class="sym">(= (</span><span class="kwa">length</span> args<span class="sym">)</span> <span class="num">2</span><span class="sym">) (</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">)))</span> <span class="num">1</span><span class="sym">))
</span><span class="line">   13 </span><span class="sym">        (</span>count <span class="num">0</span><span class="sym">))
</span><span class="line">   14 </span><span class="sym">    (</span><span class="kwa">while</span> <span class="sym">(&gt;</span> n <span class="num">0</span><span class="sym">)
</span><span class="line">   15 </span><span class="sym">      (</span><span class="kwa">set</span><span class="sym">!</span> n <span class="sym">(-</span> n <span class="num">1</span><span class="sym">))
</span><span class="line">   16 </span><span class="sym">      (</span>let <span class="sym">((</span>flags <span class="sym">(</span>make<span class="sym">-</span>vector <span class="num">8192</span> #t<span class="sym">)))
</span><span class="line">   17 </span><span class="sym">        (</span><span class="kwa">set</span><span class="sym">!</span> count <span class="num">0</span><span class="sym">)
</span><span class="line">   18 </span><span class="sym">        (</span>do <span class="sym">((</span>i <span class="num">2</span> <span class="sym">(+</span> <span class="num">1</span> i<span class="sym">)))
</span><span class="line">   19 </span><span class="sym">            ((&gt;=</span> i <span class="num">8192</span><span class="sym">))
</span><span class="line">   20 </span><span class="sym">          (</span><span class="kwa">if</span> <span class="sym">(</span>vector<span class="sym">-</span>ref flags i<span class="sym">)
</span><span class="line">   21 </span><span class="sym">              (</span>begin
<span class="line">   22 </span>                <span class="sym">(</span>do <span class="sym">((</span>k <span class="sym">(+</span> i i<span class="sym">) (+</span> k i<span class="sym">)))
</span><span class="line">   23 </span><span class="sym">                    ((&gt;=</span> k <span class="num">8192</span><span class="sym">))
</span><span class="line">   24 </span><span class="sym">                  (</span>vector<span class="sym">-</span><span class="kwa">set</span><span class="sym">!</span> flags k #f<span class="sym">))
</span><span class="line">   25 </span><span class="sym">                (</span><span class="kwa">set</span><span class="sym">!</span> count <span class="sym">(+</span> <span class="num">1</span> count<span class="sym">)))))))
</span><span class="line">   26 </span><span class="sym">    (</span>display <span class="sym">(</span>format <span class="str">&quot;Count: ~D</span><span class="esc">\n</span><span class="str">&quot;</span> count<span class="sym">))))</span>
