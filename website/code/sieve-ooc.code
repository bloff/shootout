<span class="com">(* The Great Computer Language Shootout
   http://shootout.alioth.debian.org

   contributed by Isaac Gouy (Oberon-2 novice)
*)</span>

<span class="kwa">MODULE</span> sieve<span class="sym">;
</span><span class="kwa">IMPORT</span> Shootout<span class="sym">,</span> Out<span class="sym">;

</span><span class="kwa">CONST
</span>   start <span class="sym">=</span> <span class="num">2</span><span class="sym">;
</span>   stop <span class="sym">=</span> <span class="num">8192</span><span class="sym">;
</span>   size <span class="sym">=</span> stop<span class="sym">+</span><span class="num">1</span><span class="sym">;

</span><span class="kwa">VAR
</span>   n<span class="sym">,</span> count<span class="sym">,</span> i<span class="sym">,</span> k<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;
</span>   isPrimeNumber<span class="sym">:</span> <span class="kwa">ARRAY</span> size <span class="kwa">OF</span> <span class="kwb">BOOLEAN</span><span class="sym">;

</span><span class="kwa">BEGIN
</span>   n <span class="sym">:=</span> Shootout<span class="sym">.</span>Argi<span class="sym">();
</span>   <span class="kwa">WHILE</span> n <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">DO
      DEC</span><span class="sym">(</span>n<span class="sym">);
</span>      count <span class="sym">:=</span> <span class="num">0</span><span class="sym">;
</span>      FOR i <span class="sym">:=</span> start <span class="kwa">TO</span> stop <span class="kwa">DO</span> isPrimeNumber<span class="sym">[</span>i<span class="sym">] :=</span> TRUE<span class="sym">;</span> <span class="kwa">END</span><span class="sym">;
</span>      FOR i <span class="sym">:=</span> start <span class="kwa">TO</span> stop <span class="kwa">DO
         IF</span> isPrimeNumber<span class="sym">[</span>i<span class="sym">]</span> <span class="kwa">THEN
            INC</span><span class="sym">(</span>count<span class="sym">);
</span>            k <span class="sym">:=</span> i<span class="sym">+</span>i<span class="sym">;
</span>            <span class="kwa">WHILE</span> k <span class="sym">&lt;=</span> stop <span class="kwa">DO
</span>               isPrimeNumber<span class="sym">[</span>k<span class="sym">] :=</span> FALSE<span class="sym">;
</span>               <span class="kwa">INC</span><span class="sym">(</span>k<span class="sym">,</span> i<span class="sym">);
</span>            <span class="kwa">END</span><span class="sym">;
</span>         <span class="kwa">END</span><span class="sym">;
</span>      <span class="kwa">END</span><span class="sym">;
</span>   <span class="kwa">END</span><span class="sym">;

</span>   Out<span class="sym">.</span>String<span class="sym">(</span><span class="str">&quot;Count: &quot;</span><span class="sym">);</span> Out<span class="sym">.</span>Int<span class="sym">(</span>count<span class="sym">,</span><span class="num">0</span><span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;
</span><span class="kwa">END</span> sieve<span class="sym">.</span>
