<span class="slc">-- The Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- contributed by Josh Goldfoot</span>

<span class="kwa">module</span> Main <span class="kwa">where</span>

<span class="kwa">import</span> Text.Regex<span class="sym">(</span>mkRegexWithOpts<span class="sym">,</span> matchRegexAll<span class="sym">)</span>

main <span class="sym">=</span> <span class="kwa">do</span>
   sequence <span class="sym">&lt;-</span> getContents
   putStrLn $ output sequence

output <span class="sym">::</span> String <span class="sym">-&gt;</span> String
output sequence <span class="sym">=</span>
   unlines $ countMatches  <span class="sym">++</span> <span class="str">&quot;&quot;</span><span class="sym">:(</span>map show <span class="sym">[</span>initialLength<span class="sym">,</span> codeLength<span class="sym">,</span> finalLength<span class="sym">])</span>
   <span class="kwa">where</span>
      countMatches <span class="sym">= [</span> variant <span class="sym">++</span> <span class="str">' '</span><span class="sym">:(</span>show $ numHits variant seq2 <span class="sym">) |</span> variant <span class="sym">&lt;-</span> variants <span class="sym">]</span>
      initialLength <span class="sym">=</span> length sequence
      codeLength <span class="sym">=</span> length seq2
      finalLength <span class="sym">=</span> length $ replaceIubs seq2
      seq2 <span class="sym">=</span> globalReplace <span class="str">&quot;&gt;.*\n|\n&quot;</span> <span class="str">&quot;&quot;</span> sequence
      variants <span class="sym">= [</span> <span class="str">&quot;agggtaaa|tttaccct&quot;</span><span class="sym">,</span> <span class="str">&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</span><span class="sym">,</span>
         <span class="str">&quot;a[act]ggtaaa|tttacc[agt]t&quot;</span><span class="sym">,</span> <span class="str">&quot;ag[act]gtaaa|tttac[agt]ct&quot;</span><span class="sym">,</span>
         <span class="str">&quot;agg[act]taaa|ttta[agt]cct&quot;</span><span class="sym">,</span> <span class="str">&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</span><span class="sym">,</span>
         <span class="str">&quot;agggt[cgt]aa|tt[acg]accct&quot;</span><span class="sym">,</span> <span class="str">&quot;agggta[cgt]a|t[acg]taccct&quot;</span><span class="sym">,</span>
         <span class="str">&quot;agggtaa[cgt]|[acg]ttaccct&quot;</span> <span class="sym">]</span>

numHits <span class="sym">::</span> String <span class="sym">-&gt;</span> String <span class="sym">-&gt;</span> <span class="kwb">Int</span>
numHits searchFor str <span class="sym">=</span>
   numHits<span class="str">' (matchRegexAll (mkRegexWithOpts searchFor True True) str) searchFor</span>
<span class="str">numHits'</span> <span class="sym">::</span> Maybe <span class="sym">(</span>String<span class="sym">,</span> String<span class="sym">,</span> String<span class="sym">, [</span>String<span class="sym">]) -&gt;</span> String <span class="sym">-&gt;</span> <span class="kwb">Int</span>
numHits<span class="str">' (Nothing) _ =</span>
<span class="str">   0</span>
<span class="str">numHits'</span> <span class="sym">(</span>Just <span class="sym">(</span>_<span class="sym">,</span> _<span class="sym">,</span> afterMatch<span class="sym">,</span> _<span class="sym">))</span> searchFor <span class="sym">=</span>
   <span class="num">1</span> <span class="sym">+ (</span>numHits searchFor afterMatch<span class="sym">)</span>

replaceIubs <span class="sym">::</span> String <span class="sym">-&gt;</span> String
replaceIubs <span class="sym">=</span>
   <span class="sym">(</span>foldl1 <span class="sym">(</span>.<span class="sym">) [ (</span>globalReplace searchFor replaceWith<span class="sym">) | (</span>searchFor<span class="sym">,</span> replaceWith<span class="sym">) &lt;-</span> iubs <span class="sym">])</span>
   <span class="kwa">where</span>
      iubs <span class="sym">= [ (</span><span class="str">&quot;B&quot;</span><span class="sym">,</span> <span class="str">&quot;(c|g|t)&quot;</span><span class="sym">), (</span><span class="str">&quot;D&quot;</span><span class="sym">,</span> <span class="str">&quot;(a|g|t)&quot;</span><span class="sym">), (</span><span class="str">&quot;H&quot;</span><span class="sym">,</span> <span class="str">&quot;(a|c|t)&quot;</span><span class="sym">),</span>
               <span class="sym">(</span><span class="str">&quot;K&quot;</span><span class="sym">,</span> <span class="str">&quot;(g|t)&quot;</span><span class="sym">), (</span><span class="str">&quot;M&quot;</span><span class="sym">,</span> <span class="str">&quot;(a|c)&quot;</span><span class="sym">), (</span><span class="str">&quot;N&quot;</span><span class="sym">,</span> <span class="str">&quot;(a|c|g|t)&quot;</span><span class="sym">),</span>
               <span class="sym">(</span><span class="str">&quot;R&quot;</span><span class="sym">,</span> <span class="str">&quot;(a|g)&quot;</span><span class="sym">), (</span><span class="str">&quot;S&quot;</span><span class="sym">,</span> <span class="str">&quot;(c|g)&quot;</span><span class="sym">), (</span><span class="str">&quot;V&quot;</span><span class="sym">,</span> <span class="str">&quot;(a|c|g)&quot;</span><span class="sym">), (</span><span class="str">&quot;W&quot;</span><span class="sym">,</span> <span class="str">&quot;(a|t)&quot;</span><span class="sym">),</span>
               <span class="sym">(</span><span class="str">&quot;Y&quot;</span><span class="sym">,</span> <span class="str">&quot;(c|t)&quot;</span><span class="sym">) ]</span>

globalReplace <span class="sym">::</span> String <span class="sym">-&gt;</span> String <span class="sym">-&gt;</span> String <span class="sym">-&gt;</span> String
globalReplace searchFor replaceWith str <span class="sym">=</span>
   globalReplace<span class="str">' (matchRegexAll (mkRegexWithOpts searchFor True True) str) str searchFor replaceWith</span>
<span class="str"></span>
<span class="str">globalReplace'</span> <span class="sym">::</span> Maybe <span class="sym">(</span>String<span class="sym">,</span> String<span class="sym">,</span> String<span class="sym">, [</span>String<span class="sym">]) -&gt;</span> String <span class="sym">-&gt;</span> String <span class="sym">-&gt;</span> String <span class="sym">-&gt;</span> String
globalReplace<span class="str">' (Just (beforeMatch, _, afterMatch, _)) str searchFor replaceWith =</span>
<span class="str">   beforeMatch ++ replaceWith ++ (globalReplace searchFor replaceWith afterMatch)</span>
<span class="str">globalReplace'</span> <span class="sym">(</span>Nothing<span class="sym">)</span> str _ _ <span class="sym">=</span>
   str

