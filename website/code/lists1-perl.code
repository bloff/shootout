<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">#!/usr/bin/perl 
</FONT></I><I><FONT COLOR="#B22222"># $Id: lists1-perl.code,v 1.1 2004-11-02 08:52:36 bfulgham Exp $
</FONT></I>
<B><FONT COLOR="#A020F0">use</FONT></B> strict;

<I><FONT COLOR="#B22222"># member(item, list)
</FONT></I><B><FONT COLOR="#A020F0">sub</FONT></B> member {
    <B><FONT COLOR="#A020F0">foreach</FONT></B> (@{$_[1]}) {
	<B><FONT COLOR="#A020F0">return</FONT></B>(1) <B><FONT COLOR="#A020F0">if</FONT></B> $_ == $_[0];
    }
    <B><FONT COLOR="#A020F0">return</FONT></B>(0);
}

<I><FONT COLOR="#B22222"># shift/unshift operate on &quot;head&quot; of list in Perl
</FONT></I>
<B><FONT COLOR="#A020F0">sub</FONT></B> main {
    <B><FONT COLOR="#A020F0">my</FONT></B> $N = ($ARGV[0] &lt; 1) ? 1 : <B><FONT COLOR="#A020F0">int</FONT></B>($ARGV[0]);

    <I><FONT COLOR="#B22222"># create list (A) of integers from 1 through N
</FONT></I>    <B><FONT COLOR="#A020F0">my</FONT></B> @A = (1..$N);

    <I><FONT COLOR="#B22222"># create empty list B
</FONT></I>    <B><FONT COLOR="#A020F0">my</FONT></B> @B = ();

    <I><FONT COLOR="#B22222"># move each individual item from A to B, in a loop, reversing order
</FONT></I>    <B><FONT COLOR="#A020F0">unshift</FONT></B>(@B, <B><FONT COLOR="#A020F0">shift</FONT></B>(@A)) <B><FONT COLOR="#A020F0">while</FONT></B> (@A);

    <I><FONT COLOR="#B22222"># print first 2 elements of B
</FONT></I>    <B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$B[0] $B[1]\n&quot;</FONT></B>;

    <I><FONT COLOR="#B22222"># reverse B (can be done in place)
</FONT></I>    @B = <B><FONT COLOR="#A020F0">reverse</FONT></B>(@B);

    <I><FONT COLOR="#B22222"># is 0 a member of B?
</FONT></I>    <B><FONT COLOR="#A020F0">print</FONT></B> member(0, \@B) ? <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> : <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>;

    <I><FONT COLOR="#B22222"># is N a member of B?
</FONT></I>    <B><FONT COLOR="#A020F0">print</FONT></B> member($N, \@B) ? <B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> : <B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>;

    <I><FONT COLOR="#B22222"># filter values from B to A that are less than N/2, preserving order
</FONT></I>    <B><FONT COLOR="#A020F0">my</FONT></B> $mid = <B><FONT COLOR="#A020F0">int</FONT></B>($N/2);
    <B><FONT COLOR="#A020F0">my</FONT></B> @A = <B><FONT COLOR="#A020F0">grep</FONT></B>($_ &lt; $mid, @B);

    <I><FONT COLOR="#B22222"># print first ten items of A
</FONT></I>    <B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;@A[0..9]\n&quot;</FONT></B>;

    <I><FONT COLOR="#B22222"># print sum of items in A that are less than 1000
</FONT></I>    <B><FONT COLOR="#A020F0">my</FONT></B> $sum = 0;
    <B><FONT COLOR="#A020F0">foreach</FONT></B> (@A) { $sum += $_ <B><FONT COLOR="#A020F0">if</FONT></B> $_ &lt; 1000; }
    <B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;$sum\n&quot;</FONT></B>;

    <I><FONT COLOR="#B22222"># append B to end of A
</FONT></I>    <B><FONT COLOR="#A020F0">push</FONT></B>(@A, @B);

    <I><FONT COLOR="#B22222"># print length and last element of A
</FONT></I>    <B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#A020F0">scalar</FONT></B>(@A), <B><FONT COLOR="#BC8F8F">&quot; $A[-1]\n&quot;</FONT></B>;
}

main();</pre></td></tr></table>
