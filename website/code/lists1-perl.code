<span class="line">    1 </span><span class="slc">#!/usr/bin/perl
</span><span class="line">    2 </span><span class="slc"></span><span class="slc"># $Id: lists1-perl.code,v 1.3 2004-11-11 07:13:59 bfulgham Exp $
</span><span class="line">    3 </span><span class="slc"></span>
<span class="line">    4 </span><span class="kwa">use</span> strict<span class="sym">;
</span><span class="line">    5 </span><span class="sym">
</span><span class="line">    6 </span><span class="sym"></span><span class="slc"># member(item, list)
</span><span class="line">    7 </span><span class="slc"></span><span class="kwa">sub</span> member <span class="sym">{
</span><span class="line">    8 </span><span class="sym"></span>    <span class="kwa">foreach</span> <span class="sym">(</span>&#64;<span class="sym">{</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">1</span><span class="sym">]}) {
</span><span class="line">    9 </span><span class="sym"></span>        <span class="kwa">return</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">if</span> <span class="kwb">$_</span> <span class="sym">==</span> <span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">];
</span><span class="line">   10 </span><span class="sym">    }
</span><span class="line">   11 </span><span class="sym"></span>    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);
</span><span class="line">   12 </span><span class="sym">}
</span><span class="line">   13 </span><span class="sym">
</span><span class="line">   14 </span><span class="sym"></span><span class="slc"># shift/unshift operate on &quot;head&quot; of list in Perl
</span><span class="line">   15 </span><span class="slc"></span>
<span class="line">   16 </span><span class="kwa">sub</span> main <span class="sym">{
</span><span class="line">   17 </span><span class="sym"></span>    <span class="kwc">my</span> <span class="kwb">$N</span> <span class="sym">= (</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] &lt;</span> <span class="num">1</span><span class="sym">)</span> ? <span class="num">1</span> <span class="sym">:</span> int<span class="sym">(</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">]);
</span><span class="line">   18 </span><span class="sym">
</span><span class="line">   19 </span><span class="sym"></span>    <span class="slc"># create list (A) of integers from 1 through N
</span><span class="line">   20 </span><span class="slc"></span>    <span class="kwc">my</span> &#64;A <span class="sym">= (</span><span class="num">1</span>..<span class="kwb">$N</span><span class="sym">);
</span><span class="line">   21 </span><span class="sym">
</span><span class="line">   22 </span><span class="sym"></span>    <span class="slc"># create empty list B
</span><span class="line">   23 </span><span class="slc"></span>    <span class="kwc">my</span> &#64;B <span class="sym">= ();
</span><span class="line">   24 </span><span class="sym">
</span><span class="line">   25 </span><span class="sym"></span>    <span class="slc"># move each individual item from A to B, in a loop, reversing order
</span><span class="line">   26 </span><span class="slc"></span>    unshift<span class="sym">(</span>&#64;B<span class="sym">,</span> shift<span class="sym">(</span>&#64;A<span class="sym">))</span> <span class="kwa">while</span> <span class="sym">(</span>&#64;A<span class="sym">);
</span><span class="line">   27 </span><span class="sym">
</span><span class="line">   28 </span><span class="sym"></span>    <span class="slc"># print first 2 elements of B
</span><span class="line">   29 </span><span class="slc"></span>    print <span class="str">&quot;$B[0] $B[1]</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   30 </span><span class="sym">
</span><span class="line">   31 </span><span class="sym"></span>    <span class="slc"># reverse B (can be done in place)
</span><span class="line">   32 </span><span class="slc"></span>    &#64;B <span class="sym">=</span> reverse<span class="sym">(</span>&#64;B<span class="sym">);
</span><span class="line">   33 </span><span class="sym">
</span><span class="line">   34 </span><span class="sym"></span>    <span class="slc"># is 0 a member of B?
</span><span class="line">   35 </span><span class="slc"></span>    print member<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> \&#64;B<span class="sym">)</span> ? <span class="str">&quot;true</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">:</span> <span class="str">&quot;false</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   36 </span><span class="sym">
</span><span class="line">   37 </span><span class="sym"></span>    <span class="slc"># is N a member of B?
</span><span class="line">   38 </span><span class="slc"></span>    print member<span class="sym">(</span><span class="kwb">$N</span><span class="sym">,</span> \&#64;B<span class="sym">)</span> ? <span class="str">&quot;true</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">:</span> <span class="str">&quot;false</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   39 </span><span class="sym">
</span><span class="line">   40 </span><span class="sym"></span>    <span class="slc"># filter values from B to A that are less than N/2, preserving order
</span><span class="line">   41 </span><span class="slc"></span>    <span class="kwc">my</span> <span class="kwb">$mid</span> <span class="sym">=</span> int<span class="sym">(</span><span class="kwb">$N</span><span class="sym">/</span><span class="num">2</span><span class="sym">);
</span><span class="line">   42 </span><span class="sym"></span>    <span class="kwc">my</span> &#64;A <span class="sym">=</span> grep<span class="sym">(</span><span class="kwb">$_</span> <span class="sym">&lt;</span> <span class="kwb">$mid</span><span class="sym">,</span> &#64;B<span class="sym">);
</span><span class="line">   43 </span><span class="sym">
</span><span class="line">   44 </span><span class="sym"></span>    <span class="slc"># print first ten items of A
</span><span class="line">   45 </span><span class="slc"></span>    print <span class="str">&quot;&#64;A[0..9]</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   46 </span><span class="sym">
</span><span class="line">   47 </span><span class="sym"></span>    <span class="slc"># print sum of items in A that are less than 1000
</span><span class="line">   48 </span><span class="slc"></span>    <span class="kwc">my</span> <span class="kwb">$sum</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;
</span><span class="line">   49 </span><span class="sym"></span>    <span class="kwa">foreach</span> <span class="sym">(</span>&#64;A<span class="sym">) {</span> <span class="kwb">$sum</span> <span class="sym">+=</span> <span class="kwb">$_</span> <span class="kwa">if</span> <span class="kwb">$_</span> <span class="sym">&lt;</span> <span class="num">1000</span><span class="sym">; }
</span><span class="line">   50 </span><span class="sym"></span>    print <span class="str">&quot;$sum</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   51 </span><span class="sym">
</span><span class="line">   52 </span><span class="sym"></span>    <span class="slc"># append B to end of A
</span><span class="line">   53 </span><span class="slc"></span>    push<span class="sym">(</span>&#64;A<span class="sym">,</span> &#64;B<span class="sym">);
</span><span class="line">   54 </span><span class="sym">
</span><span class="line">   55 </span><span class="sym"></span>    <span class="slc"># print length and last element of A
</span><span class="line">   56 </span><span class="slc"></span>    print scalar<span class="sym">(</span>&#64;A<span class="sym">),</span> <span class="str">&quot; $A[-1]</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;
</span><span class="line">   57 </span><span class="sym">}
</span><span class="line">   58 </span><span class="sym">
</span><span class="line">   59 </span><span class="sym"></span>main<span class="sym">();</span>
