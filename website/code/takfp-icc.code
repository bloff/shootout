<span class="com">/* $Id: takfp-icc.code,v 1.7 2005-09-21 04:54:32 bfulgham Exp $
 * http://shootout.alioth.debian.org/
 * Contributed by Brent Fulgham
 */</span>
<span class="dir">#include &lt;stdio.h&gt;
</span><span class="dir">#include &lt;stdlib.h&gt;
</span>
<span class="kwb">float</span> Tak <span class="sym">(</span><span class="kwb">float</span> x<span class="sym">,</span> <span class="kwb">float</span> y<span class="sym">,</span> <span class="kwb">float</span> z<span class="sym">)
{
</span>    <span class="kwa">if</span> <span class="sym">(</span>y <span class="sym">&gt;=</span> x<span class="sym">)</span> <span class="kwa">return</span> z<span class="sym">;
</span>    <span class="kwa">return</span> Tak<span class="sym">(</span>Tak<span class="sym">(</span>x<span class="num">-1</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> Tak<span class="sym">(</span>y<span class="num">-1</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> Tak<span class="sym">(</span>z<span class="num">-1</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">));
}

</span><span class="kwb">int</span> main<span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span><span class="sym">*</span> argv<span class="sym">[])
{
</span>    <span class="kwb">int</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? atoi<span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);
</span>    printf<span class="sym">(</span><span class="str">&quot;%.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> Tak<span class="sym">(</span>n<span class="sym">*</span><span class="num">3.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">2.0</span><span class="sym">,</span> n<span class="sym">*</span><span class="num">1.0</span><span class="sym">));
</span>    <span class="kwa">return</span> <span class="num">0</span><span class="sym">;
}

</span><span class="com">/* Make Brent's life easier...
 * vim: ts=4 ft=c
 */</span>
