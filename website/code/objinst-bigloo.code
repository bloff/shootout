<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;; -*- mode: scheme -*-
</FONT></I><I><FONT COLOR="#B22222">;;; $Id: objinst-bigloo.code,v 1.1 2004-11-02 08:52:38 bfulgham Exp $
</FONT></I><I><FONT COLOR="#B22222">;;; http://www.bagley.org/~doug/shootout/
</FONT></I><I><FONT COLOR="#B22222">;;; based on code from Manuel Serrano
</FONT></I>
(module method
	(main main)
	(static (class toggle
		       (state::bool (default #t)))
		(class nthtoggle::toggle
		       (count-max::int (default 0))
		       (counter::int (default 0)))))

(define-generic (value o::toggle))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">print-bool</FONT></B> b)
  (display (<B><FONT COLOR="#A020F0">if</FONT></B> b #<B><FONT COLOR="#BC8F8F">&quot;true\n&quot;</FONT></B> #<B><FONT COLOR="#BC8F8F">&quot;false\n&quot;</FONT></B>)))

(define-method (value o::toggle)
  (with-access::toggle o (state)
		       state))

(define-generic (activate o::toggle))

(define-method (activate o::toggle)
  (with-access::toggle o (state)
		       (<B><FONT COLOR="#A020F0">set!</FONT></B> state (not state))
		       o))

(define-method (activate o::nthtoggle)
  (with-access::nthtoggle o (counter count-max state)
			  (<B><FONT COLOR="#A020F0">set!</FONT></B> counter (+fx 1 counter))
			  (<B><FONT COLOR="#A020F0">if</FONT></B> (&gt;=fx counter count-max)
			      (<B><FONT COLOR="#A020F0">begin</FONT></B>
				(<B><FONT COLOR="#A020F0">set!</FONT></B> state (not state))
				(<B><FONT COLOR="#A020F0">set!</FONT></B> counter 0)))
			  o))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> args)
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((n (<B><FONT COLOR="#A020F0">or</FONT></B> (<B><FONT COLOR="#A020F0">and</FONT></B> (= (length args) 2) (string-&gt;number (cadr args))) 1)))
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((tog (instantiate::toggle (state #t))))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i 5))
	(print-bool (value (activate tog)))))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i n))
      (instantiate::toggle (state #t)))
    (newline)
    (<B><FONT COLOR="#A020F0">let</FONT></B> ((ntog (instantiate::nthtoggle (state #t) (count-max 3))))
      (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i 8))
	(print-bool (value (activate ntog)))))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1))) ((= i n))
      (instantiate::nthtoggle (state #t) (count-max 3)))))</pre></td></tr></table>
