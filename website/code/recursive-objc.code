<span class="slc">// The Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">// recursive test</span>
<span class="slc">// converted to Objective-C from C by Scott Christley</span>
<span class="slc">// Compile with: gcc -O3 -s -fomit-frame-pointer -funroll-loops recursive.m -lobjc</span>

<span class="dir">#include &lt;stdio.h&gt;</span>
<span class="dir">#include &lt;objc/Object.h&gt;</span>

<span class="kwa">&#64;interface</span> Fib <span class="sym">:</span> Object
<span class="sym">{</span>
<span class="sym">}</span>

<span class="sym">- (</span><span class="kwb">int</span><span class="sym">)</span>Ack<span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>x <span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>y<span class="sym">;</span>
<span class="sym">- (</span><span class="kwb">int</span><span class="sym">)</span>Fib<span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>n<span class="sym">;</span>
<span class="sym">- (</span><span class="kwb">double</span><span class="sym">)</span>FibFP<span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>n<span class="sym">;</span>
<span class="sym">- (</span><span class="kwb">int</span><span class="sym">)</span>Tak<span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>x <span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>y <span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>z<span class="sym">;</span>
<span class="sym">- (</span><span class="kwb">double</span><span class="sym">)</span>TakFP<span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>x <span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>y <span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>z<span class="sym">;</span>
<span class="kwa">&#64;end</span>

<span class="kwa">&#64;implementation</span> Fib

<span class="sym">- (</span><span class="kwb">int</span><span class="sym">)</span>Ack<span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>x <span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>y
<span class="sym">{</span>
  <span class="kwa">if</span> <span class="sym">(</span>x <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span>
    <span class="kwa">return</span> y<span class="sym">+</span><span class="num">1</span><span class="sym">;</span>
  <span class="kwa">if</span> <span class="sym">(</span>y <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span>
    <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">self</span> Ack<span class="sym">:</span> x<span class="sym">-</span><span class="num">1</span> <span class="sym">:</span> <span class="num">1</span><span class="sym">];</span>
  <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">self</span> Ack<span class="sym">:</span> x<span class="sym">-</span><span class="num">1</span> <span class="sym">: [</span><span class="kwa">self</span> Ack<span class="sym">:</span>x <span class="sym">:</span> y<span class="sym">-</span><span class="num">1</span><span class="sym">]];</span>
<span class="sym">}</span>

<span class="sym">- (</span><span class="kwb">int</span><span class="sym">)</span>Fib<span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>n
<span class="sym">{</span>
  <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span>
    <span class="kwa">return</span> <span class="num">1</span><span class="sym">;</span>
  <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">self</span> Fib<span class="sym">:</span> n<span class="sym">-</span><span class="num">2</span><span class="sym">] + [</span><span class="kwa">self</span> Fib<span class="sym">:</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">];</span>
<span class="sym">}</span>

<span class="sym">- (</span><span class="kwb">double</span><span class="sym">)</span>FibFP<span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>n
<span class="sym">{</span>
  <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2.0</span><span class="sym">)</span>
    <span class="kwa">return</span> <span class="num">1.0</span><span class="sym">;</span>
  <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">self</span> FibFP<span class="sym">:</span> n<span class="sym">-</span><span class="num">2.0</span><span class="sym">] + [</span><span class="kwa">self</span> FibFP<span class="sym">:</span> n<span class="sym">-</span><span class="num">1.0</span><span class="sym">];</span>
<span class="sym">}</span>

<span class="sym">- (</span><span class="kwb">int</span><span class="sym">)</span>Tak<span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>x <span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>y <span class="sym">:(</span><span class="kwb">int</span><span class="sym">)</span>z
<span class="sym">{</span>
  <span class="kwa">if</span> <span class="sym">(</span>y <span class="sym">&lt;</span> x<span class="sym">)</span>
    <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">self</span> Tak<span class="sym">: [</span><span class="kwa">self</span> Tak<span class="sym">:</span> x<span class="sym">-</span><span class="num">1</span> <span class="sym">:</span> y <span class="sym">:</span> z<span class="sym">]</span>
		 <span class="sym">: [</span><span class="kwa">self</span> Tak<span class="sym">:</span> y<span class="sym">-</span><span class="num">1</span> <span class="sym">:</span> z <span class="sym">:</span> x<span class="sym">]</span>
		 <span class="sym">: [</span><span class="kwa">self</span> Tak<span class="sym">:</span> z<span class="sym">-</span><span class="num">1</span> <span class="sym">:</span> x <span class="sym">:</span> y<span class="sym">]];</span>
  <span class="kwa">return</span> z<span class="sym">;</span>
<span class="sym">}</span>

<span class="sym">- (</span><span class="kwb">double</span><span class="sym">)</span>TakFP<span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>x <span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>y <span class="sym">:(</span><span class="kwb">double</span><span class="sym">)</span>z
<span class="sym">{</span>
  <span class="kwa">if</span> <span class="sym">(</span>y <span class="sym">&lt;</span> x<span class="sym">)</span>
    <span class="kwa">return</span> <span class="sym">[</span><span class="kwa">self</span> TakFP<span class="sym">: [</span><span class="kwa">self</span> TakFP<span class="sym">:</span> x<span class="sym">-</span><span class="num">1.0</span> <span class="sym">:</span> y <span class="sym">:</span> z<span class="sym">]</span>
		 <span class="sym">: [</span><span class="kwa">self</span> TakFP<span class="sym">:</span> y<span class="sym">-</span><span class="num">1.0</span> <span class="sym">:</span> z <span class="sym">:</span> x<span class="sym">]</span>
		 <span class="sym">: [</span><span class="kwa">self</span> TakFP<span class="sym">:</span> z<span class="sym">-</span><span class="num">1.0</span> <span class="sym">:</span> x <span class="sym">:</span> y<span class="sym">]];</span>
  <span class="kwa">return</span> z<span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">&#64;end</span>

<span class="kwb">int</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">**</span>argv<span class="sym">) {</span>
  <span class="kwb">int</span> n <span class="sym">=</span> <span class="kwd">atoi</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) -</span> <span class="num">1</span><span class="sym">;</span>
  Fib <span class="sym">*</span>aFib <span class="sym">= [</span>Fib <span class="kwa">new</span><span class="sym">];</span>
  <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Ack(3,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">, [</span>aFib Ack<span class="sym">:</span> <span class="num">3</span> <span class="sym">:</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">]);</span>
  <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Fib(%.1f): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">28.0</span><span class="sym">+</span>n<span class="sym">, [</span>aFib FibFP<span class="sym">:</span> <span class="num">28.0</span><span class="sym">+</span>n<span class="sym">]);</span>
  <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Tak(%d,%d,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span> <span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span> n<span class="sym">, [</span>aFib Tak<span class="sym">:</span> <span class="num">3</span><span class="sym">*</span>n <span class="sym">:</span> <span class="num">2</span><span class="sym">*</span>n <span class="sym">:</span> n<span class="sym">]);</span>
  <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Fib(3): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, [</span>aFib Fib<span class="sym">:</span> <span class="num">3</span><span class="sym">]);</span>
  <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, [</span>aFib TakFP<span class="sym">:</span> <span class="num">3.0</span> <span class="sym">:</span> <span class="num">2.0</span> <span class="sym">:</span> <span class="num">1.0</span><span class="sym">]);</span>
  <span class="kwa">return</span> <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>
