<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">;;;; -Ob
</FONT></I>
(declare (fixnum) (disable-interrupts))

(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">HI</FONT></B> 0)
(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">LO</FONT></B> 0)

(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">lo-exception</FONT></B> #f)
(<B><FONT COLOR="#A020F0">define</FONT></B> <B><FONT COLOR="#0000FF">hi-exception</FONT></B> #f)

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">some_fun</FONT></B> n)
  (hi_fun n))

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">hi_fun</FONT></B> n)
  (when (call/cc
	 (<B><FONT COLOR="#A020F0">lambda</FONT></B> (return)
	   (<B><FONT COLOR="#A020F0">set!</FONT></B> hi-exception return)
	   (lo_fun n) 
	   #f) )
    (<B><FONT COLOR="#A020F0">set!</FONT></B> HI (add1 HI)) ) )

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">lo_fun</FONT></B> n)
  (when (call/cc
	 (<B><FONT COLOR="#A020F0">lambda</FONT></B> (return)
	   (<B><FONT COLOR="#A020F0">set!</FONT></B> lo-exception return)
	   (blowup n) 
	   #f) )
    (<B><FONT COLOR="#A020F0">set!</FONT></B> LO (add1 LO)) ) )

(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">blowup</FONT></B> n)
  (<B><FONT COLOR="#A020F0">if</FONT></B> (even? n)
      (hi-exception #t)
      (lo-exception #t)))
	
(<B><FONT COLOR="#A020F0">define</FONT></B> (<B><FONT COLOR="#0000FF">main</FONT></B> #!optional (n <B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>))
  (<B><FONT COLOR="#A020F0">let</FONT></B> ((n (string-&gt;number n)))
    (<B><FONT COLOR="#A020F0">do</FONT></B> ((i 0 (+ i 1)))
	((= i n))
      (some_fun i)))
  (print <B><FONT COLOR="#BC8F8F">&quot;Exceptions: HI=&quot;</FONT></B> HI <B><FONT COLOR="#BC8F8F">&quot; / LO=&quot;</FONT></B> LO))

(apply main (command-line-arguments))</pre></td></tr></table>
