<table width="100%" border="0" cellpadding="5" cellspacing="0"><tr><td bgcolor="#FFFFFF"><pre>
<I><FONT COLOR="#B22222">(* -*- mode: sml -*-
 * $Id: matrix-mlton.code,v 1.2 2004-11-08 08:15:15 bfulgham Exp $
 * http://www.bagley.org/~doug/shootout/
 * from Stephen Weeks
 *)</FONT></I>
<I><FONT COLOR="#B22222">(* Translated from matrix.ocaml. *)</FONT></I>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">incr</FONT></I></B></FONT></B> r <B><FONT COLOR="#5F9EA0">=</FONT></B> r <B><FONT COLOR="#5F9EA0">:=</FONT></B> <B><FONT COLOR="#5F9EA0">!</FONT></B>r <B><FONT COLOR="#5F9EA0">+</FONT></B> 1
<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">for</FONT></I></B></FONT></B> (start, stop, f) <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">let</FONT></B>
<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">loop</FONT></I></B></FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B>
	 <B><FONT COLOR="#A020F0">if</FONT></B> i <B><FONT COLOR="#5F9EA0">&gt;</FONT></B> stop
	    <B><FONT COLOR="#A020F0">then</FONT></B> ()
	 <B><FONT COLOR="#A020F0">else</FONT></B> (f i; loop (i <B><FONT COLOR="#5F9EA0">+</FONT></B> 1))
   <B><FONT COLOR="#A020F0">in</FONT></B>
      loop start
   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#5F9EA0">structure</FONT></B> Array2 <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#5F9EA0">struct</FONT></B>
      <B><FONT COLOR="#A020F0">datatype</FONT></B> 'a t <B><FONT COLOR="#5F9EA0">=</FONT></B> T <B><FONT COLOR="#A020F0">of</FONT></B> 'a <B><FONT COLOR="#228B22">array</FONT></B> <B><FONT COLOR="#228B22">array</FONT></B>

<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">sub</FONT></I></B></FONT></B> (T a, r, c) <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.sub (Array.sub (a, r), c)
<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">subr</FONT></I></B></FONT></B> (T a, r) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	 <B><FONT COLOR="#A020F0">let</FONT></B> <B><FONT COLOR="#A020F0">val</FONT></B> a <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.sub (a, r)
	 <B><FONT COLOR="#A020F0">in</FONT></B> <B><FONT COLOR="#A020F0">fn</FONT></B> c <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> Array.sub (a, c)
	 <B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">update</FONT></I></B></FONT></B> (T a, r, c, x) <B><FONT COLOR="#5F9EA0">=</FONT></B> Array.update (Array.sub (a, r), c, x)
<B><FONT COLOR="#A020F0">      fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">array</FONT></I></B></FONT></B> (r, c, x) <B><FONT COLOR="#5F9EA0">=</FONT></B>
	 T (Array.tabulate (r, <B><FONT COLOR="#A020F0">fn</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> Array.<B><FONT COLOR="#228B22">array</FONT></B> (c, x)))
   <B><FONT COLOR="#A020F0">end</FONT></B>
<B><FONT COLOR="#A020F0">val</FONT></B> sub <B><FONT COLOR="#5F9EA0">=</FONT></B> Array2.sub
<B><FONT COLOR="#A020F0">val</FONT></B> update <B><FONT COLOR="#5F9EA0">=</FONT></B> Array2.update
   
<B><FONT COLOR="#A020F0">val</FONT></B> size <B><FONT COLOR="#5F9EA0">=</FONT></B> 30

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">mkmatrix</FONT></I></B></FONT></B> (rows, cols) <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">let</FONT></B>
      <B><FONT COLOR="#A020F0">val</FONT></B> count <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">ref</FONT></B> 1
      <B><FONT COLOR="#A020F0">val</FONT></B> last_col <B><FONT COLOR="#5F9EA0">=</FONT></B> cols <B><FONT COLOR="#5F9EA0">-</FONT></B> 1
      <B><FONT COLOR="#A020F0">val</FONT></B> m <B><FONT COLOR="#5F9EA0">=</FONT></B> Array2.<B><FONT COLOR="#228B22">array</FONT></B> (rows, cols, 0)
   <B><FONT COLOR="#A020F0">in</FONT></B>
      for (0, rows <B><FONT COLOR="#5F9EA0">-</FONT></B> 1, <B><FONT COLOR="#A020F0">fn</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
	   for (0, last_col, <B><FONT COLOR="#A020F0">fn</FONT></B> j <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
		(update (m, i, j, <B><FONT COLOR="#5F9EA0">!</FONT></B>count)
		 ; incr count)));
      m
   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">mmult</FONT></I></B></FONT></B> (rows, cols, m1, m2, m3) <B><FONT COLOR="#5F9EA0">=</FONT></B>
   <B><FONT COLOR="#A020F0">let</FONT></B>
      <B><FONT COLOR="#A020F0">val</FONT></B> last_col <B><FONT COLOR="#5F9EA0">=</FONT></B> cols <B><FONT COLOR="#5F9EA0">-</FONT></B> 1
      <B><FONT COLOR="#A020F0">val</FONT></B> last_row <B><FONT COLOR="#5F9EA0">=</FONT></B> rows <B><FONT COLOR="#5F9EA0">-</FONT></B> 1
   <B><FONT COLOR="#A020F0">in</FONT></B>
      for (0, last_row, <B><FONT COLOR="#A020F0">fn</FONT></B> i <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
	   for (0, last_col, <B><FONT COLOR="#A020F0">fn</FONT></B> j <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B>
		update (m3, i, j,
			<B><FONT COLOR="#A020F0">let</FONT></B>
			   <B><FONT COLOR="#A020F0">val</FONT></B> m1i <B><FONT COLOR="#5F9EA0">=</FONT></B> Array2.subr (m1, i)
<B><FONT COLOR="#A020F0">			   fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">loop</FONT></I></B></FONT></B> (k, sum) <B><FONT COLOR="#5F9EA0">=</FONT></B>
			      <B><FONT COLOR="#A020F0">if</FONT></B> k &lt; 0
				 <B><FONT COLOR="#A020F0">then</FONT></B> sum
			      <B><FONT COLOR="#A020F0">else</FONT></B> loop (k <B><FONT COLOR="#5F9EA0">-</FONT></B> 1,
					 sum <B><FONT COLOR="#5F9EA0">+</FONT></B> m1i k <B><FONT COLOR="#5F9EA0">*</FONT></B> sub (m2, k, j))
			<B><FONT COLOR="#A020F0">in</FONT></B> loop (last_row, 0)
			<B><FONT COLOR="#A020F0">end</FONT></B>)))
   <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">atoi</FONT></I></B></FONT></B> s <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">case</FONT></B> Int.fromString s <B><FONT COLOR="#A020F0">of</FONT></B> <B><FONT COLOR="#5F9EA0">SOME</FONT></B> num <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> num <B><FONT COLOR="#5F9EA0">|</FONT></B> <B><FONT COLOR="#5F9EA0">NONE</FONT></B> <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> 0;
<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">printl</FONT></I></B></FONT></B> [] <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">print</FONT></B> <B><FONT COLOR="#BC8F8F">&quot;\n&quot;</FONT></B> <B><FONT COLOR="#5F9EA0">|</FONT></B> printl(h<B><FONT COLOR="#5F9EA0">::</FONT></B>t) <B><FONT COLOR="#5F9EA0">=</FONT></B> ( <B><FONT COLOR="#A020F0">print</FONT></B> h ; printl t );

<B><FONT COLOR="#A020F0">fun </FONT></B><B><FONT COLOR="#0000FF"><B><I><FONT COLOR="#000000">main</FONT></I></B></FONT></B> (name, args) <B><FONT COLOR="#5F9EA0">=</FONT></B>
  <B><FONT COLOR="#A020F0">let</FONT></B>
     <B><FONT COLOR="#A020F0">val</FONT></B> n <B><FONT COLOR="#5F9EA0">=</FONT></B> <B><FONT COLOR="#A020F0">atoi</FONT></B> (<B><FONT COLOR="#5F9EA0">hd</FONT></B> (args <B><FONT COLOR="#5F9EA0">@</FONT></B> [<B><FONT COLOR="#BC8F8F">&quot;1&quot;</FONT></B>]))
     <B><FONT COLOR="#A020F0">val</FONT></B> m1 <B><FONT COLOR="#5F9EA0">=</FONT></B> mkmatrix (size, size)
     <B><FONT COLOR="#A020F0">val</FONT></B> m2 <B><FONT COLOR="#5F9EA0">=</FONT></B> mkmatrix (size, size)
     <B><FONT COLOR="#A020F0">val</FONT></B> m3 <B><FONT COLOR="#5F9EA0">=</FONT></B> Array2.<B><FONT COLOR="#228B22">array</FONT></B> (size, size, 0)
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> for (1, n <B><FONT COLOR="#5F9EA0">-</FONT></B> 1, <B><FONT COLOR="#A020F0">fn</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B><B><FONT COLOR="#5F9EA0">&gt;</FONT></B> mmult (size, size, m1, m2, m3))
     <B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> mmult (size, size, m1, m2, m3)
  <B><FONT COLOR="#A020F0">in</FONT></B>
     printl [Int.toString (sub (m3, 0, 0)),
	     <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>,
	     Int.toString (sub (m3, 2, 3)),
	     <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>,
	     Int.toString (sub (m3, 3, 2)),
	     <B><FONT COLOR="#BC8F8F">&quot; &quot;</FONT></B>,
	     Int.toString (sub (m3, 4, 4))];
     OS.Process.success
  <B><FONT COLOR="#A020F0">end</FONT></B>

<B><FONT COLOR="#A020F0">val</FONT></B> _ <B><FONT COLOR="#5F9EA0">=</FONT></B> main( CommandLine.name(), CommandLine.arguments() )</pre></td></tr></table>
