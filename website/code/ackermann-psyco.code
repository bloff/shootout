<span class="slc">#!/usr/bin/python
</span><span class="slc"># $Id: ackermann-psyco.code,v 1.9 2005-03-16 08:37:10 bfulgham Exp $
</span><span class="slc"># http://www.bagley.org/~doug/shootout/
</span><span class="slc"># from Brad Knotwell
</span>
<span class="kwc">import</span> sys<span class="sym">,</span> psyco
psyco<span class="sym">.</span>full<span class="sym">()


</span><span class="kwb">def</span> Ack<span class="sym">(</span>M<span class="sym">,</span> N<span class="sym">):
</span>    <span class="kwb">if</span> <span class="sym">(</span><span class="kwb">not</span> M<span class="sym">):
</span>        <span class="kwb">return</span><span class="sym">(</span> N <span class="sym">+</span> <span class="num">1</span> <span class="sym">)
</span>    <span class="kwb">if</span> <span class="sym">(</span><span class="kwb">not</span> N<span class="sym">):
</span>        <span class="kwb">return</span><span class="sym">(</span> Ack<span class="sym">(</span>M<span class="num">-1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">) )
</span>    <span class="kwb">return</span><span class="sym">(</span> Ack<span class="sym">(</span>M<span class="num">-1</span><span class="sym">,</span> Ack<span class="sym">(</span>M<span class="sym">,</span> N<span class="num">-1</span><span class="sym">)) )

</span><span class="kwb">def</span> main<span class="sym">():
</span>    NUM <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])
</span>    sys<span class="sym">.</span>setrecursionlimit<span class="sym">(</span><span class="num">10000</span><span class="sym">)
</span>    <span class="kwb">print</span> <span class="str">&quot;Ack(3,%d): %d&quot;</span> <span class="sym">% (</span>NUM<span class="sym">,</span> Ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> NUM<span class="sym">))

</span>main<span class="sym">()</span>
