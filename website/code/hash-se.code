<span class="slc">-- -*- mode: eiffel -*-
</span><span class="slc">-- $Id: hash-se.code,v 1.5 2005-03-29 08:48:33 bfulgham Exp $
</span><span class="slc">-- http://www.bagley.org/~doug/shootout/
</span>
<span class="kwa">class</span> HASH

creation make

<span class="kwa">feature</span> <span class="slc">-- Initialization
</span>
   make <span class="kwa">is
      local
</span>	 n <span class="sym">:</span> <span class="kwb">INTEGER
</span>	 i<span class="sym">,</span> j<span class="sym">,</span> c <span class="sym">:</span> <span class="kwb">INTEGER
</span>	 s <span class="sym">:</span> STRING
	 ht <span class="sym">:</span> DICTIONARY<span class="sym">[</span><span class="kwb">INTEGER</span><span class="sym">,</span> STRING<span class="sym">]

</span>	 arg<span class="sym">:</span> ARGUMENTS
      <span class="kwa">do
</span>	 n <span class="sym">:=</span> argument<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer

	 <span class="sym">!!</span>ht.with_capacity<span class="sym">(</span>n<span class="sym">);

</span>	 <span class="kwa">from</span>  i <span class="sym">:=</span> <span class="num">1
</span>	 until i <span class="sym">&gt;</span> n
	 <span class="kwa">loop
</span>	    s <span class="sym">:=</span> i.to_hexadecimal
	    <span class="kwa">from</span>  j <span class="sym">:=</span> <span class="num">1
</span>	    until s &#64; j <span class="sym">/=</span> <span class="str">'0'</span>
	    <span class="kwa">loop</span>  j <span class="sym">:=</span> j <span class="sym">+</span> <span class="num">1
</span>	    <span class="kwa">end
</span>	    ht.put <span class="sym">(</span>i<span class="sym">,</span> s.substring<span class="sym">(</span>j<span class="sym">,</span>s.count<span class="sym">))
</span>	    i <span class="sym">:=</span> i<span class="sym">+</span><span class="num">1
</span>	 <span class="kwa">end

	 from</span>  i <span class="sym">:=</span> n
	 until i <span class="sym">=</span> <span class="num">0
</span>	 <span class="kwa">loop
</span>	    s <span class="sym">:=</span> i.to_string
 	    <span class="kwa">if</span> ht.has <span class="sym">(</span>s<span class="sym">)</span> <span class="kwa">then
</span>	       c <span class="sym">:=</span> c <span class="sym">+</span> <span class="num">1
</span>	    <span class="kwa">end
</span>	    i <span class="sym">:=</span> i <span class="num">- 1
</span>	 <span class="kwa">end

</span>	 print <span class="sym">(</span>c.out <span class="sym">+</span> <span class="str">&quot;%N&quot;</span><span class="sym">)

</span>      <span class="kwa">end

end</span> <span class="slc">-- class HASH
</span>
