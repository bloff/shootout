<span class="line">    1 </span><span class="sym">//
</span><span class="line">    2 </span><span class="sym"> //</span> File<span class="sym">:</span>     Ackermann
<span class="line">    3 </span>  <span class="sym">//</span> Language<span class="sym">:</span> Concurrent Clean <span class="num">2.0
</span><span class="line">    4 </span><span class="num">  </span><span class="sym">//</span> Author<span class="sym">:</span>   Michael Neumann <span class="sym">(</span>neumann&#64;s<span class="sym">-</span>direktnet.de<span class="sym">)
</span><span class="line">    5 </span><span class="sym"> //</span> Date<span class="sym">:</span>     <span class="num">23</span> March <span class="num">2002
</span><span class="line">    6 </span><span class="num"> </span><span class="sym">//
</span><span class="line">    7 </span><span class="sym"> 
</span><span class="line">    8 </span><span class="sym"> 
</span><span class="line">    9 </span><span class="sym"> </span><span class="kwa">module</span> ackermann
<span class="line">   10 </span> <span class="kwa">import</span> StdEnv<span class="sym">,</span> ArgEnv
<span class="line">   11 </span>
<span class="line">   12 </span>
<span class="line">   13 </span>   Ack <span class="num">0</span> n <span class="sym">=</span> n<span class="sym">+</span><span class="num">1
</span><span class="line">   14 </span><span class="num"> </span>Ack m <span class="num">0</span> <span class="sym">=</span> Ack <span class="sym">(</span>m<span class="num">-1</span><span class="sym">)</span> <span class="num">1
</span><span class="line">   15 </span><span class="num"> </span>Ack m n <span class="sym">=</span> Ack <span class="sym">(</span>m<span class="num">-1</span><span class="sym">) (</span>Ack m <span class="sym">(</span>n<span class="num">-1</span><span class="sym">))
</span><span class="line">   16 </span><span class="sym"> 
</span><span class="line">   17 </span><span class="sym"> 
</span><span class="line">   18 </span><span class="sym"> </span>argi <span class="sym">=</span> if <span class="sym">(</span>argAsInt <span class="sym">&lt;=</span> <span class="num">0</span><span class="sym">)</span> <span class="num">1</span> argAsInt
<span class="line">   19 </span>    <span class="kwa">where
</span><span class="line">   20 </span><span class="kwa"> </span>   argv <span class="sym">=</span> getCommandLine
<span class="line">   21 </span>    argAsInt <span class="sym">=</span> if <span class="sym">(</span>size argv <span class="sym">==</span> <span class="num">2</span><span class="sym">) (</span>toInt argv.<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="num">1
</span><span class="line">   22 </span><span class="num"> 
</span><span class="line">   23 </span><span class="num"> 
</span><span class="line">   24 </span><span class="num"> </span>Start <span class="sym">=</span> <span class="str">&quot;Ack(3,&quot;</span> <span class="sym">+++</span> toString argi <span class="sym">+++</span> <span class="str">&quot;): &quot;</span> <span class="sym">+++</span> toString <span class="sym">(</span>Ack <span class="num">3</span> argi<span class="sym">) +++</span> <span class="str">&quot;\n&quot;</span>
<span class="line">   25 </span>  
