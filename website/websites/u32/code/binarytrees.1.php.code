<span class="hl sym">&lt;</span>?
<span class="hl com">/* </span>
<span class="hl com">   The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Peter Baltruschat</span>
<span class="hl com">   multicore by anon</span>
<span class="hl com"> */</span>

<span class="hl kwa">function</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl kwc">$item</span><span class="hl sym">,</span> <span class="hl kwc">$depth</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">if</span><span class="hl sym">(</span><span class="hl kwc">$depth</span><span class="hl sym">)</span>
   <span class="hl sym">{</span>
      <span class="hl sym">--</span><span class="hl kwc">$depth</span><span class="hl sym">;</span>
      <span class="hl kwc">$newItem</span> <span class="hl sym">=</span> <span class="hl kwc">$item</span><span class="hl sym">&lt;&lt;</span><span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl kwa">return array</span><span class="hl sym">(</span>
         <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl kwc">$newItem</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwc">$depth</span><span class="hl sym">),</span>
         <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl kwc">$newItem</span><span class="hl sym">,</span> <span class="hl kwc">$depth</span><span class="hl sym">),</span>
         <span class="hl kwc">$item</span>
      <span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">return array</span><span class="hl sym">(</span>NULL<span class="hl sym">,</span> NULL<span class="hl sym">,</span> <span class="hl kwc">$item</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">itemCheck</span><span class="hl sym">(</span><span class="hl kwc">$treeNode</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwc">$check</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">do</span> <span class="hl sym">{</span>
      <span class="hl kwc">$check</span> <span class="hl sym">+=</span> <span class="hl kwc">$treeNode</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">];</span>
      <span class="hl kwa">if</span><span class="hl sym">(</span>NULL <span class="hl sym">==</span> <span class="hl kwc">$treeNode</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">])</span>
      <span class="hl sym">{</span>
         <span class="hl kwa">return</span> <span class="hl kwc">$check</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
      <span class="hl kwc">$check</span> <span class="hl sym">-=</span> <span class="hl kwd">itemCheck</span><span class="hl sym">(</span><span class="hl kwc">$treeNode</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]);</span>
      <span class="hl kwc">$treeNode</span> <span class="hl sym">=</span> <span class="hl kwc">$treeNode</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">while</span><span class="hl sym">(</span>TRUE<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">getProcs</span><span class="hl sym">() {</span>
   <span class="hl kwc">$procs</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwd">file_exists</span><span class="hl sym">(</span><span class="hl str">'/proc/cpuinfo'</span><span class="hl sym">)) {</span>
      <span class="hl kwc">$procs</span> <span class="hl sym">=</span> <span class="hl kwd">preg_match_all</span><span class="hl sym">(</span><span class="hl str">'/^processor\s/m'</span><span class="hl sym">,</span> <span class="hl kwd">file_get_contents</span><span class="hl sym">(</span><span class="hl str">'/proc/cpuinfo'</span><span class="hl sym">),</span> <span class="hl kwc">$discard</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwc">$procs</span> <span class="hl sym">&lt;&lt;=</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl kwa">return</span> <span class="hl kwc">$procs</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">$minDepth</span> <span class="hl sym">=</span> <span class="hl num">4</span><span class="hl sym">;</span>

<span class="hl kwc">$n</span> <span class="hl sym">= (</span><span class="hl kwc">$argc</span> <span class="hl sym">==</span> <span class="hl num">2</span><span class="hl sym">)</span> ? <span class="hl kwc">$argv</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] :</span> <span class="hl num">1</span><span class="hl sym">;</span>
<span class="hl kwc">$maxDepth</span> <span class="hl sym">=</span> <span class="hl kwd">max</span><span class="hl sym">(</span><span class="hl kwc">$minDepth</span> <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwc">$n</span><span class="hl sym">);</span>
<span class="hl kwc">$stretchDepth</span> <span class="hl sym">=</span> <span class="hl kwc">$maxDepth</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>

<span class="hl kwc">$stretchTree</span> <span class="hl sym">=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwc">$stretchDepth</span><span class="hl sym">);</span>
<span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;stretch tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
   <span class="hl kwc">$stretchDepth</span><span class="hl sym">,</span> <span class="hl kwd">itemCheck</span><span class="hl sym">(</span><span class="hl kwc">$stretchTree</span><span class="hl sym">));</span>
<span class="hl kwa">unset</span><span class="hl sym">(</span><span class="hl kwc">$stretchTree</span><span class="hl sym">);</span>

<span class="hl kwc">$longLivedTree</span> <span class="hl sym">=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwc">$maxDepth</span><span class="hl sym">);</span>

<span class="hl slc">// # of processes to run</span>
<span class="hl kwc">$procs</span> <span class="hl sym">=</span> <span class="hl kwd">getProcs</span><span class="hl sym">();</span>
<span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$procs</span> <span class="hl sym">&gt; ((</span><span class="hl kwc">$maxDepth</span> <span class="hl sym">-</span> <span class="hl kwc">$minDepth</span> <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">) &gt;&gt;</span> <span class="hl num">1</span><span class="hl sym">)) {</span>
   <span class="hl kwc">$procs</span> <span class="hl sym">= (</span><span class="hl kwc">$maxDepth</span> <span class="hl sym">-</span> <span class="hl kwc">$minDepth</span> <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">) &gt;&gt;</span> <span class="hl num">1</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl slc">// queue jobs</span>
<span class="hl kwc">$tok</span> <span class="hl sym">=</span> <span class="hl kwd">ftok</span><span class="hl sym">(</span>__FILE__<span class="hl sym">,</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl kwd">time</span><span class="hl sym">() &amp;</span> <span class="hl num">255</span><span class="hl sym">));</span>
<span class="hl kwc">$queue</span> <span class="hl sym">=</span> <span class="hl kwd">msg_get_queue</span><span class="hl sym">(</span><span class="hl kwc">$tok</span><span class="hl sym">);</span>
<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$d</span> <span class="hl sym">=</span> <span class="hl kwc">$minDepth</span><span class="hl sym">;</span> <span class="hl kwc">$d</span> <span class="hl sym">&lt;=</span> <span class="hl kwc">$maxDepth</span><span class="hl sym">;</span> <span class="hl kwc">$d</span><span class="hl sym">+=</span><span class="hl num">2</span><span class="hl sym">) {</span>
   <span class="hl kwc">$errcode</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">if</span> <span class="hl sym">(!</span><span class="hl kwd">msg_send</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">, (</span><span class="hl kwb">string</span><span class="hl sym">)</span> <span class="hl kwc">$d</span><span class="hl sym">,</span> FALSE<span class="hl sym">,</span> FALSE<span class="hl sym">,</span> <span class="hl kwc">$errcode</span><span class="hl sym">)) {</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$errcode</span> <span class="hl sym">==</span> MSG_EAGAIN<span class="hl sym">) {</span>
         <span class="hl kwa">echo</span> <span class="hl str">&quot;EAGAIN</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
      <span class="hl kwd">var_dump</span><span class="hl sym">(</span><span class="hl kwd">msg_stat_queue</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">));</span>
      <span class="hl kwa">exit</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl slc">// create processes</span>
<span class="hl kwc">$parent</span> <span class="hl sym">=</span> TRUE<span class="hl sym">;</span>
<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwc">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$procs</span><span class="hl sym">; ++</span><span class="hl kwc">$i</span><span class="hl sym">) {</span>
   <span class="hl kwc">$pid</span> <span class="hl sym">=</span> <span class="hl kwd">pcntl_fork</span><span class="hl sym">();</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$pid</span> <span class="hl sym">=== -</span><span class="hl num">1</span><span class="hl sym">) {</span>
      <span class="hl kwa">die</span><span class="hl sym">(</span><span class="hl str">'could not fork'</span><span class="hl sym">);</span>
   <span class="hl sym">}</span> <span class="hl kwa">else if</span> <span class="hl sym">(</span><span class="hl kwc">$pid</span><span class="hl sym">) {</span>
      <span class="hl kwa">continue</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
   <span class="hl kwc">$parent</span> <span class="hl sym">=</span> FALSE<span class="hl sym">;</span>
   <span class="hl kwa">break</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl slc">// run jobs</span>
<span class="hl kwd">ob_start</span><span class="hl sym">();</span>

<span class="hl kwc">$d</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwd">msg_receive</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwc">$msgtype</span><span class="hl sym">,</span> <span class="hl num">16</span><span class="hl sym">,</span> <span class="hl kwc">$d</span><span class="hl sym">,</span> FALSE<span class="hl sym">,</span> MSG_IPC_NOWAIT<span class="hl sym">)) {</span>
   <span class="hl kwc">$d</span> <span class="hl sym">= (</span><span class="hl kwb">int</span><span class="hl sym">)</span> <span class="hl kwc">$d</span><span class="hl sym">;</span>
   <span class="hl kwc">$iterations</span> <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">&lt;&lt; (</span><span class="hl kwc">$maxDepth</span> <span class="hl sym">-</span> <span class="hl kwc">$d</span> <span class="hl sym">+</span> <span class="hl kwc">$minDepth</span><span class="hl sym">);</span>
   <span class="hl kwc">$check</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span><span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwc">$i</span> <span class="hl sym">&lt;=</span> <span class="hl kwc">$iterations</span><span class="hl sym">; ++</span><span class="hl kwc">$i</span><span class="hl sym">)</span>
   <span class="hl sym">{</span>
      <span class="hl kwc">$t</span> <span class="hl sym">=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(</span><span class="hl kwc">$i</span><span class="hl sym">,</span> <span class="hl kwc">$d</span><span class="hl sym">);</span>
      <span class="hl kwc">$check</span> <span class="hl sym">+=</span> <span class="hl kwd">itemCheck</span><span class="hl sym">(</span><span class="hl kwc">$t</span><span class="hl sym">);</span>
      <span class="hl kwa">unset</span><span class="hl sym">(</span><span class="hl kwc">$t</span><span class="hl sym">);</span>
      <span class="hl kwc">$t</span> <span class="hl sym">=</span> <span class="hl kwd">bottomUpTree</span><span class="hl sym">(-</span><span class="hl kwc">$i</span><span class="hl sym">,</span> <span class="hl kwc">$d</span><span class="hl sym">);</span>
      <span class="hl kwc">$check</span> <span class="hl sym">+=</span> <span class="hl kwd">itemCheck</span><span class="hl sym">(</span><span class="hl kwc">$t</span><span class="hl sym">);</span>
      <span class="hl kwa">unset</span><span class="hl sym">(</span><span class="hl kwc">$t</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>

   <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\t</span> <span class="hl str">trees of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
      <span class="hl kwc">$iterations</span><span class="hl sym">&lt;&lt;</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwc">$d</span><span class="hl sym">,</span> <span class="hl kwc">$check</span><span class="hl sym">);</span>

<span class="hl sym">}</span>

<span class="hl kwa">if</span> <span class="hl sym">(!</span><span class="hl kwc">$parent</span><span class="hl sym">) {</span>
   <span class="hl kwd">msg_send</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwd">ob_get_clean</span><span class="hl sym">(),</span> FALSE<span class="hl sym">);</span>
   <span class="hl kwa">exit</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl slc">// gather &amp; output results</span>
<span class="hl kwc">$s</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl kwc">$output</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">(</span><span class="hl kwd">explode</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwd">ob_get_clean</span><span class="hl sym">()));</span>
<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwc">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$procs</span><span class="hl sym">; ++</span><span class="hl kwc">$i</span><span class="hl sym">) {</span>
   <span class="hl kwd">msg_receive</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwc">$msgtype</span><span class="hl sym">,</span> <span class="hl num">4096</span><span class="hl sym">,</span> <span class="hl kwc">$o</span><span class="hl sym">,</span> FALSE<span class="hl sym">);</span>
   <span class="hl kwc">$output</span><span class="hl sym">[] =</span> <span class="hl kwd">explode</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwc">$o</span><span class="hl sym">);</span>
   <span class="hl kwd">pcntl_wait</span><span class="hl sym">(</span><span class="hl kwc">$s</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwd">msg_remove_queue</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">);</span>

<span class="hl kwc">$output</span> <span class="hl sym">=</span> <span class="hl kwd">call_user_func_array</span><span class="hl sym">(</span><span class="hl str">'array_merge'</span><span class="hl sym">,</span> <span class="hl kwc">$output</span><span class="hl sym">);</span>
<span class="hl kwc">$output</span> <span class="hl sym">=</span> <span class="hl kwd">array_filter</span><span class="hl sym">(</span><span class="hl kwc">$output</span><span class="hl sym">,</span> <span class="hl str">'strlen'</span><span class="hl sym">);</span>
<span class="hl kwd">rsort</span><span class="hl sym">(</span><span class="hl kwc">$output</span><span class="hl sym">,</span> SORT_NUMERIC<span class="hl sym">);</span>
<span class="hl kwa">echo</span> <span class="hl kwd">implode</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwc">$output</span><span class="hl sym">),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>

<span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;long lived tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
   <span class="hl kwc">$maxDepth</span><span class="hl sym">,</span> <span class="hl kwd">itemCheck</span><span class="hl sym">(</span><span class="hl kwc">$longLivedTree</span><span class="hl sym">));</span>

