<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># initial fannkuch port from C by Steve Clark</span>
<span class="hl slc">#   rewrite by Kalev Soikonen</span>
<span class="hl slc">#   modified by Kuang-che Wu</span>
<span class="hl slc">#   modified by David Golden</span>
<span class="hl slc"># updated for fannkuch-redux by Jonathan DePeri</span>
<span class="hl slc">#   permutations generated using Mike Pall's approach</span>

<span class="hl kwa">use</span> <span class="hl kwd">integer</span><span class="hl sym">;</span>

<span class="hl kwa">sub</span> fannkuchredux <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$n</span><span class="hl sym">) =</span> <span class="hl kwd">shift</span><span class="hl sym">;</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$m</span><span class="hl sym">,</span> <span class="hl kwb">$checksum</span><span class="hl sym">,</span> <span class="hl kwb">$maxflips</span><span class="hl sym">,</span> <span class="hl kwb">$flips</span><span class="hl sym">,</span> <span class="hl kwb">$sign</span><span class="hl sym">) = (</span><span class="hl kwb">$n</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">);</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$p</span><span class="hl sym">,</span> <span class="hl kwb">$q</span><span class="hl sym">,</span> <span class="hl kwb">$f</span><span class="hl sym">,</span> <span class="hl kwb">$i</span><span class="hl sym">,</span> <span class="hl kwb">&#64;count</span><span class="hl sym">);</span>

    <span class="hl kwb">&#64;count</span> <span class="hl sym">= (</span><span class="hl num">0</span><span class="hl sym">..</span><span class="hl kwb">$m</span><span class="hl sym">);</span>
    <span class="hl kwb">$p</span> <span class="hl sym">=</span> pack <span class="hl str">&quot;c*&quot;</span><span class="hl sym">,</span> <span class="hl kwb">&#64;count</span><span class="hl sym">;</span>

    <span class="hl kwa">do</span> <span class="hl sym">{</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwd">ord</span><span class="hl sym">(</span><span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$p</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">))) {</span>
            <span class="hl kwb">$q</span> <span class="hl sym">=</span> <span class="hl kwb">$p</span><span class="hl sym">;</span>
            <span class="hl kwb">$flips</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
            <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwb">$f</span> <span class="hl sym">=</span> <span class="hl kwd">ord</span><span class="hl sym">(</span><span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$q</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">))) {</span>
                <span class="hl kwb">$flips</span><span class="hl sym">++;</span>
                <span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$q</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwb">$f</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$q</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl kwb">$f</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)));</span>
            <span class="hl sym">}</span>
            <span class="hl kwb">$maxflips</span> <span class="hl sym">=</span> <span class="hl kwb">$flips</span> <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$flips</span> <span class="hl sym">&gt;</span> <span class="hl kwb">$maxflips</span><span class="hl sym">);</span>
            <span class="hl kwb">$checksum</span> <span class="hl sym">+= (</span><span class="hl kwb">$sign</span> <span class="hl sym">*</span> <span class="hl kwb">$flips</span><span class="hl sym">);</span>
        <span class="hl sym">}</span>

        <span class="hl kwa">return if</span> <span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">&lt;=</span> <span class="hl num">1</span><span class="hl sym">);</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$sign</span> <span class="hl sym">==</span> <span class="hl num">1</span><span class="hl sym">) {</span>
            <span class="hl kwb">$sign</span> <span class="hl sym">= -</span><span class="hl num">1</span><span class="hl sym">;</span>
            substr <span class="hl kwb">$p</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">, (</span><span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$p</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl str">&quot;&quot;</span><span class="hl sym">));</span>
        <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
            <span class="hl kwa">return if</span> <span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">&lt;=</span> <span class="hl num">2</span><span class="hl sym">);</span>
            <span class="hl kwb">$sign</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span>
            substr <span class="hl kwb">$p</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">, (</span><span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$p</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl str">&quot;&quot;</span><span class="hl sym">));</span>
            <span class="hl kwa">for</span> <span class="hl kwb">$i</span> <span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">..</span><span class="hl kwb">$m</span><span class="hl sym">) {</span>
	            <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$count</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">]) {</span> <span class="hl kwb">$count</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">]--;</span> <span class="hl kwa">last</span><span class="hl sym">; }</span>
	            <span class="hl kwa">return</span> <span class="hl sym">(</span><span class="hl kwb">$checksum</span><span class="hl sym">,</span> <span class="hl kwb">$maxflips</span><span class="hl sym">)</span> <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$i</span> <span class="hl sym">==</span> <span class="hl kwb">$m</span><span class="hl sym">);</span>
	            <span class="hl kwb">$count</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">] =</span> <span class="hl kwb">$i</span><span class="hl sym">;</span>
	            substr <span class="hl kwb">$p</span><span class="hl sym">,</span> <span class="hl kwb">$i</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">, (</span><span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$p</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl str">&quot;&quot;</span><span class="hl sym">));</span>
            <span class="hl sym">}</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span> <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">for</span> <span class="hl sym">(</span>shift<span class="hl sym">) {</span>
    exit <span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">if</span> <span class="hl sym">((</span><span class="hl kwa">not</span> defined <span class="hl kwb">$_</span><span class="hl sym">) ||</span> <span class="hl kwb">$_</span> <span class="hl sym">&lt;</span> <span class="hl num">1</span><span class="hl sym">);</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$checksum</span><span class="hl sym">,</span> <span class="hl kwb">$maxflips</span><span class="hl sym">) =</span> <span class="hl kwd">fannkuchredux</span><span class="hl sym">(</span><span class="hl kwb">$_</span><span class="hl sym">);</span>
    <span class="hl kwc">print</span> <span class="hl str">&quot;$checksum</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
    <span class="hl kwc">print</span> <span class="hl str">&quot;Pfannkuchen($_) = $maxflips</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

