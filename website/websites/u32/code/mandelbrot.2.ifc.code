<span class="hl slc">!!! The Computer Language Benchmarks Game</span>
<span class="hl slc">!!!   http://shootout.alioth.debian.org/</span>
<span class="hl slc">!!!</span>
<span class="hl slc">!!!      contributed by George R. Gonzalez</span>
<span class="hl slc">!!!      fixed by Simon Geard</span>

<span class="hl kwa">program</span> mandelbrot
    IMPLICIT NONE
    INTEGER<span class="hl sym">,</span> PARAMETER                      <span class="hl sym">::</span> WantedPrecision <span class="hl sym">=</span> <span class="hl num">8</span><span class="hl sym">,</span> Iterations <span class="hl sym">=</span> <span class="hl num">50</span>
    INTEGER                                 <span class="hl sym">::</span> w<span class="hl sym">,</span> h<span class="hl sym">,</span>   Len<span class="hl sym">,</span>   i
    INTEGER                                 <span class="hl sym">::</span> y<span class="hl sym">,</span> x<span class="hl sym">,</span> LenOut<span class="hl sym">,</span> row
    <span class="hl kwd">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> limit<span class="hl sym">,</span> limit2
    <span class="hl kwd">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> rx<span class="hl sym">,</span> ry<span class="hl sym">,</span> rw<span class="hl sym">,</span> rh
    <span class="hl kwd">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Tr<span class="hl sym">,</span> Ti
    <span class="hl kwd">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> zero<span class="hl sym">,</span> one<span class="hl sym">,</span> v1p5<span class="hl sym">,</span> two
    <span class="hl kwd">CHARACTER</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">)                           ::</span> NUM
    <span class="hl kwd">INTEGER</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> ALLOCATABLE<span class="hl sym">,</span> <span class="hl kwd">DIMENSION</span><span class="hl sym">( : ) ::</span> OUTA
    INTEGER                                 <span class="hl sym">::</span> OUTP<span class="hl sym">,</span> OUTB<span class="hl sym">,</span> OutUnit
    <span class="hl kwd">INTEGER</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> ALLOCATABLE<span class="hl sym">,</span> <span class="hl kwd">DIMENSION</span><span class="hl sym">( : ) ::</span> OutBuf
    <span class="hl kwd">INTEGER</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)                              ::</span> B
    LOGICAL                                 <span class="hl sym">::</span> Ans
    CONTINUE
    OutUnit <span class="hl sym">=</span> <span class="hl num">6</span>
    Call <span class="hl kwd">GetArg</span><span class="hl sym">(</span> <span class="hl num">1</span><span class="hl sym">,</span> NUM <span class="hl sym">)</span>
    <span class="hl kwd">READ</span><span class="hl sym">(</span> NUM<span class="hl sym">, *,</span> END <span class="hl sym">=</span> <span class="hl num">100</span> <span class="hl sym">)</span> w<span class="hl sym">;</span>  h <span class="hl sym">=</span> w<span class="hl sym">;</span>    rw <span class="hl sym">=</span> w<span class="hl sym">;</span> rh <span class="hl sym">=</span> h
    Len <span class="hl sym">=</span> w <span class="hl sym">*</span> h
    <span class="hl kwd">ALLOCATE</span><span class="hl sym">(</span> <span class="hl kwd">OUTA</span> <span class="hl sym">(</span> Len <span class="hl sym">) )</span>
    OUTA <span class="hl sym">=</span> <span class="hl num">0</span>
    OUTB <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
    limit <span class="hl sym">=</span> <span class="hl num">2.0</span><span class="hl sym">;</span> limit2 <span class="hl sym">=</span> limit <span class="hl sym">*</span> limit
    <span class="hl kwd">IF</span><span class="hl sym">(</span> w <span class="hl sym">&lt;</span> <span class="hl num">1000</span> <span class="hl sym">)</span> THEN
        <span class="hl kwd">WRITE</span><span class="hl sym">(</span> UNIT <span class="hl sym">=</span> OutUnit<span class="hl sym">,</span> FMT <span class="hl sym">=</span> <span class="hl str">&quot;( 'P4', /, I3, 1X, I3 )&quot;</span> <span class="hl sym">)</span> w<span class="hl sym">,</span> h
    ELSE
        <span class="hl kwd">WRITE</span><span class="hl sym">(</span> UNIT <span class="hl sym">=</span> OutUnit<span class="hl sym">,</span> FMT <span class="hl sym">=</span> <span class="hl str">&quot;( 'P4', /, I4, 1X, I4 )&quot;</span> <span class="hl sym">)</span> w<span class="hl sym">,</span> h
    ENDIF

    DO y <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>h<span class="hl sym">-</span><span class="hl num">1</span>
        ry <span class="hl sym">=</span> y

        DO x <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>w<span class="hl sym">-</span><span class="hl num">1</span>
            rx <span class="hl sym">=</span> x<span class="hl sym">;</span>
            Zr <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>Zi <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>Tr <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>Ti <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
            Cr <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> rx <span class="hl sym">/</span> rw <span class="hl sym">-</span> <span class="hl num">1.5</span>
            Ci <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> ry <span class="hl sym">/</span> rh <span class="hl sym">-</span> <span class="hl num">1.0</span>
            Ans <span class="hl sym">= .</span>TRUE<span class="hl sym">.</span>
            i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
            OUTB <span class="hl sym">=</span> OUTB <span class="hl sym">+</span> <span class="hl num">1</span>

            DO <span class="hl kwd">WHILE</span><span class="hl sym">(</span>  i <span class="hl sym">&lt;</span> Iterations   <span class="hl sym">.</span>AND<span class="hl sym">.</span>   Ans  <span class="hl sym">)</span>
                Zi    <span class="hl sym">=</span>       <span class="hl num">2.0</span> <span class="hl sym">*</span> Zr <span class="hl sym">*</span> Zi <span class="hl sym">+</span> Ci
                Zr    <span class="hl sym">=</span>       Tr <span class="hl sym">-</span> Ti <span class="hl sym">+</span> Cr
                Ti    <span class="hl sym">=</span>       Zi <span class="hl sym">*</span> Zi
                Tr    <span class="hl sym">=</span>       Zr <span class="hl sym">*</span> Zr
                i     <span class="hl sym">=</span>       i <span class="hl sym">+</span> <span class="hl num">1</span>
                Ans   <span class="hl sym">=</span>       Tr <span class="hl sym">+</span> Ti <span class="hl sym">&lt;=</span> limit2
            END DO

            <span class="hl kwd">IF</span><span class="hl sym">(</span> Ans <span class="hl sym">)</span> <span class="hl kwd">OUTA</span><span class="hl sym">(</span> OUTB <span class="hl sym">) =</span> <span class="hl num">1</span><span class="hl sym">;</span>
          END DO

    END DO

   LenOut <span class="hl sym">=</span> Len <span class="hl sym">/</span> <span class="hl num">8</span> <span class="hl sym">+</span> <span class="hl num">10</span> <span class="hl sym">+</span> h<span class="hl sym">;</span>
   <span class="hl kwd">ALLOCATE</span><span class="hl sym">(</span> <span class="hl kwd">OutBuf</span><span class="hl sym">(</span> LenOut <span class="hl sym">) )</span>

   I <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>  OUTP <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> B <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> row <span class="hl sym">=</span> <span class="hl num">0</span>

   DO <span class="hl kwd">WHILE</span><span class="hl sym">(</span> I <span class="hl sym">&lt;</span> OUTB <span class="hl sym">)</span>
      I <span class="hl sym">=</span> I <span class="hl sym">+</span> <span class="hl num">1</span>
      B <span class="hl sym">=</span> <span class="hl kwd">ISHFT</span><span class="hl sym">(</span> B<span class="hl sym">,</span> <span class="hl num">1</span> <span class="hl sym">) +</span> <span class="hl kwd">OUTA</span><span class="hl sym">(</span> I <span class="hl sym">)</span>
      row <span class="hl sym">=</span> row <span class="hl sym">+</span> <span class="hl num">1</span>
      <span class="hl kwd">IF</span><span class="hl sym">(</span> <span class="hl kwd">IAND</span><span class="hl sym">(</span> I<span class="hl sym">,</span> <span class="hl num">7</span> <span class="hl sym">) ==</span> <span class="hl num">0</span> <span class="hl sym">)</span> THEN
         OUTP <span class="hl sym">=</span> OUTP <span class="hl sym">+</span> <span class="hl num">1</span>
         <span class="hl kwd">OutBuf</span><span class="hl sym">(</span> OUTP <span class="hl sym">) =</span> B<span class="hl sym">;</span>
         B              <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwd">ELSEIF</span><span class="hl sym">(</span>  row <span class="hl sym">&gt;=</span> w <span class="hl sym">-</span> <span class="hl num">1</span> <span class="hl sym">)</span> THEN
         OUTP <span class="hl sym">=</span> OUTP <span class="hl sym">+</span> <span class="hl num">1</span>

         DO <span class="hl kwd">WHILE</span><span class="hl sym">(</span> <span class="hl kwd">IAND</span><span class="hl sym">(</span> I<span class="hl sym">,</span> <span class="hl num">7</span> <span class="hl sym">) /=</span> <span class="hl num">0</span> <span class="hl sym">)</span>
            B <span class="hl sym">=</span> <span class="hl kwd">ISHFT</span><span class="hl sym">(</span> B<span class="hl sym">,</span> <span class="hl num">1</span> <span class="hl sym">)</span>
            I <span class="hl sym">=</span> I <span class="hl sym">+</span> <span class="hl num">1</span>
         END DO

         <span class="hl kwd">OutBuf</span><span class="hl sym">(</span> OUTP <span class="hl sym">) =</span> B<span class="hl sym">;</span>
         B              <span class="hl sym">=</span> <span class="hl num">0</span>
         row            <span class="hl sym">=</span> <span class="hl num">0</span>
      ENDIF
   ENDDO


   <span class="hl kwd">WRITE</span><span class="hl sym">(</span> OutUnit<span class="hl sym">,</span> FMT <span class="hl sym">=</span> <span class="hl str">&quot;(10000000A1)&quot;</span> <span class="hl sym">,</span> advance<span class="hl sym">=</span><span class="hl str">'no'</span><span class="hl sym">) (</span> <span class="hl kwd">OutBuf</span><span class="hl sym">(</span>I<span class="hl sym">),</span>I<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">,</span>OUTP <span class="hl sym">)</span>

<span class="hl num">100</span>     CONTINUE

<span class="hl kwa">end program</span> mandelbrot

