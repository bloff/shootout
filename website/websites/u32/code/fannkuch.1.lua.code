<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- contributed by Mike Pall</span>

<span class="hl kwa">local function</span> <span class="hl kwd">fannkuch</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
  <span class="hl kwa">local</span> p<span class="hl sym">,</span> q<span class="hl sym">,</span> s<span class="hl sym">,</span> odd<span class="hl sym">,</span> check<span class="hl sym">,</span> maxflips <span class="hl sym">= {}, {}, {},</span> <span class="hl kwa">true</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span>
  <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">,</span>n <span class="hl kwa">do</span> p<span class="hl sym">[</span>i<span class="hl sym">] =</span> i<span class="hl sym">;</span> q<span class="hl sym">[</span>i<span class="hl sym">] =</span> i<span class="hl sym">;</span> s<span class="hl sym">[</span>i<span class="hl sym">] =</span> i <span class="hl kwa">end</span>
  <span class="hl kwa">repeat</span>
    <span class="hl slc">-- Print max. 30 permutations.</span>
    <span class="hl kwa">if</span> check <span class="hl sym">&lt;</span> <span class="hl num">30</span> <span class="hl kwa">then</span>
      <span class="hl kwa">if not</span> p<span class="hl sym">[</span>n<span class="hl sym">]</span> <span class="hl kwa">then return</span> maxflips <span class="hl kwa">end</span>	<span class="hl slc">-- Catch n = 0, 1, 2.</span>
      io<span class="hl sym">.</span><span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl kwd">unpack</span><span class="hl sym">(</span>p<span class="hl sym">));</span> io<span class="hl sym">.</span><span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">)</span>
      check <span class="hl sym">=</span> check <span class="hl sym">+</span> <span class="hl num">1</span>
    <span class="hl kwa">end</span>
    <span class="hl slc">-- Copy and flip.</span>
    <span class="hl kwa">local</span> q1 <span class="hl sym">=</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]</span>				<span class="hl slc">-- Cache 1st element.</span>
    <span class="hl kwa">if</span> p<span class="hl sym">[</span>n<span class="hl sym">]</span> ~<span class="hl sym">=</span> n <span class="hl kwa">and</span> q1 ~<span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl kwa">then</span>		<span class="hl slc">-- Avoid useless work.</span>
      <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">2</span><span class="hl sym">,</span>n <span class="hl kwa">do</span> q<span class="hl sym">[</span>i<span class="hl sym">] =</span> p<span class="hl sym">[</span>i<span class="hl sym">]</span> <span class="hl kwa">end</span>		<span class="hl slc">-- Work on a copy.</span>
      <span class="hl kwa">for</span> flips<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">1000000</span> <span class="hl kwa">do</span>			<span class="hl slc">-- Flip ...</span>
	<span class="hl kwa">local</span> qq <span class="hl sym">=</span> q<span class="hl sym">[</span>q1<span class="hl sym">]</span>
	<span class="hl kwa">if</span> qq <span class="hl sym">==</span> <span class="hl num">1</span> <span class="hl kwa">then</span>				<span class="hl slc">-- ... until 1st element is 1.</span>
	  <span class="hl kwa">if</span> flips <span class="hl sym">&gt;</span> maxflips <span class="hl kwa">then</span> maxflips <span class="hl sym">=</span> flips <span class="hl kwa">end</span> <span class="hl slc">-- New maximum?</span>
	  <span class="hl kwa">break</span>
	<span class="hl kwa">end</span>
	q<span class="hl sym">[</span>q1<span class="hl sym">] =</span> q1
	<span class="hl kwa">if</span> q1 <span class="hl sym">&gt;=</span> <span class="hl num">4</span> <span class="hl kwa">then</span>
	  <span class="hl kwa">local</span> i<span class="hl sym">,</span> j <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">,</span> q1 <span class="hl sym">-</span> <span class="hl num">1</span>
	  <span class="hl kwa">repeat</span> q<span class="hl sym">[</span>i<span class="hl sym">],</span> q<span class="hl sym">[</span>j<span class="hl sym">] =</span> q<span class="hl sym">[</span>j<span class="hl sym">],</span> q<span class="hl sym">[</span>i<span class="hl sym">];</span> i <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> j <span class="hl sym">=</span> j <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwa">until</span> i <span class="hl sym">&gt;=</span> j
	<span class="hl kwa">end</span>
	q1 <span class="hl sym">=</span> qq
      <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
    <span class="hl slc">-- Permute.</span>
    <span class="hl kwa">if</span> odd <span class="hl kwa">then</span>
      p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] =</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">];</span> odd <span class="hl sym">=</span> <span class="hl kwa">false</span>	<span class="hl slc">-- Rotate 1&lt;-2.</span>
    <span class="hl kwa">else</span>
      p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">] =</span> p<span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">];</span> odd <span class="hl sym">=</span> <span class="hl kwa">true</span>	<span class="hl slc">-- Rotate 1&lt;-2 and 1&lt;-2&lt;-3.</span>
      <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">3</span><span class="hl sym">,</span>n <span class="hl kwa">do</span>
	<span class="hl kwa">local</span> sx <span class="hl sym">=</span> s<span class="hl sym">[</span>i<span class="hl sym">]</span>
	<span class="hl kwa">if</span> sx ~<span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl kwa">then</span> s<span class="hl sym">[</span>i<span class="hl sym">] =</span> sx<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwa">break end</span>
	<span class="hl kwa">if</span> i <span class="hl sym">==</span> n <span class="hl kwa">then return</span> maxflips <span class="hl kwa">end</span>	<span class="hl slc">-- Out of permutations.</span>
	s<span class="hl sym">[</span>i<span class="hl sym">] =</span> i
	<span class="hl slc">-- Rotate 1&lt;-...&lt;-i+1.</span>
	<span class="hl kwa">local</span> t <span class="hl sym">=</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span> <span class="hl kwa">for</span> j<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">,</span>i <span class="hl kwa">do</span> p<span class="hl sym">[</span>j<span class="hl sym">] =</span> p<span class="hl sym">[</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">]</span> <span class="hl kwa">end</span><span class="hl sym">;</span> p<span class="hl sym">[</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">] =</span> t
      <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
  <span class="hl kwa">until false</span>
<span class="hl kwa">end</span>

<span class="hl kwa">local</span> n <span class="hl sym">=</span> <span class="hl kwb">tonumber</span><span class="hl sym">(</span>arg <span class="hl kwa">and</span> arg<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span> <span class="hl kwa">or</span> <span class="hl num">1</span>
io<span class="hl sym">.</span><span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl str">&quot;Pfannkuchen(&quot;</span><span class="hl sym">,</span> n<span class="hl sym">,</span> <span class="hl str">&quot;) = &quot;</span><span class="hl sym">,</span> <span class="hl kwd">fannkuch</span><span class="hl sym">(</span>n<span class="hl sym">),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">)</span>
