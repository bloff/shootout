<span class="hl sym">//</span> <span class="hl kwd">The Computer Language Benchmarks Game</span>
<span class="hl sym">//</span> http<span class="hl sym">://</span>shootout<span class="hl sym">.</span>alioth<span class="hl sym">.</span>debian<span class="hl sym">.</span>org<span class="hl sym">/</span>
<span class="hl sym">//</span>
<span class="hl sym">//</span> <span class="hl kwd">Contributed</span> by <span class="hl kwd">Valentin Kraevskiy</span>

#light

<span class="hl kwa">let</span> iter <span class="hl sym">=</span> <span class="hl num">50</span>
<span class="hl kwa">let</span> size <span class="hl sym">=</span> <span class="hl kwa">try</span> <span class="hl kwb">int</span> <span class="hl kwc">Sys</span><span class="hl sym">.</span>argv<span class="hl sym">.[</span><span class="hl num">1</span><span class="hl sym">]</span> <span class="hl kwa">with</span> _ <span class="hl sym">-&gt;</span> <span class="hl num">200</span>
<span class="hl kwa">let</span> map x shift <span class="hl sym">=</span> <span class="hl kwb">float</span> <span class="hl sym">(</span><span class="hl num">2</span> <span class="hl sym">*</span> x<span class="hl sym">) / (</span><span class="hl kwb">float</span> size<span class="hl sym">) -</span> shift

printf <span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">%i %i</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> size size
<span class="hl kwa">let</span> stream <span class="hl sym">=</span> <span class="hl kwc">System</span><span class="hl sym">.</span><span class="hl kwc">Console</span><span class="hl sym">.</span><span class="hl kwd">OpenStandardOutput</span> <span class="hl sym">()</span>

<span class="hl kwa">let rec</span> belongs <span class="hl sym">(</span>zr<span class="hl sym">,</span> zi<span class="hl sym">) (</span>cr<span class="hl sym">,</span> ci<span class="hl sym">) =</span> <span class="hl kwa">function</span>
    <span class="hl sym">|</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span> <span class="hl kwa">true</span>
    <span class="hl sym">|</span> _ <span class="hl kwa">when</span> zr <span class="hl sym">*</span> zr <span class="hl sym">+</span> zi <span class="hl sym">*</span> zi <span class="hl sym">&gt;</span> <span class="hl num">4.0</span> <span class="hl sym">-&gt;</span> <span class="hl kwa">false</span>
    <span class="hl sym">|</span> n <span class="hl sym">-&gt;</span> belongs <span class="hl sym">(</span>zr <span class="hl sym">*</span> zr <span class="hl sym">-</span> zi <span class="hl sym">*</span> zi <span class="hl sym">+</span> cr<span class="hl sym">,</span> ci <span class="hl sym">+</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> zi <span class="hl sym">*</span> zr<span class="hl sym">)</span>
            <span class="hl sym">(</span>cr<span class="hl sym">,</span> ci<span class="hl sym">) (</span>n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)</span>

<span class="hl kwa">let</span> print<span class="hl sym">,</span> flush <span class="hl sym">=</span>
    <span class="hl kwa">let</span> left <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">8</span>
    <span class="hl kwa">let</span> bits <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0u</span>y
    <span class="hl kwa">let</span> flush <span class="hl sym">=</span>
        <span class="hl kwa">fun</span> <span class="hl sym">() -&gt;</span> stream<span class="hl sym">.</span><span class="hl kwd">WriteByte</span> <span class="hl sym">!</span>bits
                  bits <span class="hl sym">:=</span> <span class="hl num">0u</span>y
                  left <span class="hl sym">:=</span> <span class="hl num">8</span>
    <span class="hl kwa">fun</span> flag <span class="hl sym">-&gt;</span>
        bits <span class="hl sym">:= !</span>bits <span class="hl sym">&lt;&lt;&lt;</span> <span class="hl num">1</span> <span class="hl sym">|||</span> flag
        decr left
        <span class="hl kwa">if</span> <span class="hl sym">!</span>left <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> flush <span class="hl sym">()</span>
    <span class="hl sym">,</span>
    <span class="hl kwa">fun</span> <span class="hl sym">() -&gt;</span> <span class="hl kwa">if</span> <span class="hl sym">!</span>left <span class="hl sym">&lt;</span> <span class="hl num">8</span> <span class="hl kwa">then</span> flush <span class="hl sym">()</span>

<span class="hl kwa">for</span> y <span class="hl kwa">in</span> <span class="hl num">0</span> <span class="hl sym">..</span> size <span class="hl sym">-</span> <span class="hl num">1</span> <span class="hl kwa">do</span>
    <span class="hl kwa">for</span> x <span class="hl kwa">in</span> <span class="hl num">0</span> <span class="hl sym">..</span> size <span class="hl sym">-</span> <span class="hl num">1</span> <span class="hl kwa">do</span>
        <span class="hl kwa">let</span> c <span class="hl sym">=</span> map x <span class="hl num">1.5</span><span class="hl sym">,</span> map y <span class="hl num">1.0</span>
        print <span class="hl sym">&lt;|</span> <span class="hl kwa">if</span> belongs c c iter <span class="hl kwa">then</span> <span class="hl num">1u</span>y <span class="hl kwa">else</span> <span class="hl num">0u</span>y
    flush <span class="hl sym">()</span>
