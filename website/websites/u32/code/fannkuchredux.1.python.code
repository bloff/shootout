<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Stefan Thomas</span>

<span class="hl kwa">import</span> sys

<span class="hl kwa">def</span> <span class="hl kwd">fannkuch</span><span class="hl sym">(</span>liste<span class="hl sym">):</span>
   <span class="hl kwa">global</span> checksum
   <span class="hl kwa">global</span> mflips
   <span class="hl kwa">global</span> s
   flips <span class="hl sym">=</span> <span class="hl num">0</span>
   fliste <span class="hl sym">=</span> liste<span class="hl sym">[:]</span>
   <span class="hl kwa">while</span> fliste<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] !=</span> <span class="hl num">1</span><span class="hl sym">:</span>
      x <span class="hl sym">=</span> fliste<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>
      hliste <span class="hl sym">=</span> fliste<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">:</span>x<span class="hl sym">]</span>
      hliste<span class="hl sym">.</span><span class="hl kwd">reverse</span><span class="hl sym">()</span>
      fliste<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">:</span>x<span class="hl sym">] =</span> hliste
      flips <span class="hl sym">+=</span> <span class="hl num">1</span>
   s <span class="hl sym">+=</span> <span class="hl num">1</span>
   checksum <span class="hl sym">+= (-</span><span class="hl num">1</span> <span class="hl kwa">if</span> s<span class="hl sym">%</span><span class="hl num">2</span> <span class="hl kwa">else</span> <span class="hl num">1</span><span class="hl sym">) *</span> flips
   <span class="hl kwa">if</span> flips <span class="hl sym">&gt;</span> mflips<span class="hl sym">:</span> mflips <span class="hl sym">=</span> flips

<span class="hl kwa">def</span> <span class="hl kwd">permute</span><span class="hl sym">(</span>liste<span class="hl sym">,</span>n<span class="hl sym">):</span>
   pliste <span class="hl sym">=</span> liste<span class="hl sym">[:]</span>
   <span class="hl kwa">for</span> j <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">):</span>
      <span class="hl kwa">if</span> n <span class="hl sym">&gt;</span> <span class="hl num">1</span><span class="hl sym">:</span>
         <span class="hl kwd">permute</span><span class="hl sym">(</span>pliste<span class="hl sym">,</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
      hliste <span class="hl sym">= []</span>
      hliste <span class="hl sym">=</span> pliste<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">:</span>n<span class="hl sym">]</span>
      <span class="hl kwd">lshift</span><span class="hl sym">(</span>hliste<span class="hl sym">,</span>n<span class="hl sym">)</span>
      pliste<span class="hl sym">[:</span>n<span class="hl sym">] =</span> hliste
      <span class="hl kwd">fannkuch</span><span class="hl sym">(</span>pliste<span class="hl sym">)</span>
   <span class="hl kwa">if</span> n <span class="hl sym">&gt;</span> <span class="hl num">1</span><span class="hl sym">:</span>
      <span class="hl kwd">permute</span><span class="hl sym">(</span>pliste<span class="hl sym">,</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>

<span class="hl kwa">def</span> <span class="hl kwd">lshift</span><span class="hl sym">(</span>p<span class="hl sym">,</span>n<span class="hl sym">):</span>
   x <span class="hl sym">=</span> p<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>
   p<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">:</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">] =</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">:</span>n<span class="hl sym">]</span>
   p<span class="hl sym">[</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">] =</span> x

mflips <span class="hl sym">=</span> <span class="hl num">0</span>
checksum <span class="hl sym">=</span> <span class="hl num">0</span>
n <span class="hl sym">=</span> <span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span>
p <span class="hl sym">=</span> <span class="hl kwb">list</span><span class="hl sym">(</span><span class="hl kwb">range</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span>n<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">))</span>
s <span class="hl sym">=</span> <span class="hl num">1</span>
<span class="hl kwd">fannkuch</span><span class="hl sym">(</span>p<span class="hl sym">)</span>
<span class="hl kwd">permute</span><span class="hl sym">(</span>p<span class="hl sym">,</span>n<span class="hl sym">)</span>

<span class="hl kwa">print</span><span class="hl sym">(</span>checksum<span class="hl sym">)</span>
<span class="hl kwa">print</span><span class="hl sym">(</span><span class="hl str">&quot;Pfannkuchen({0}) = {1}&quot;</span><span class="hl sym">.</span><span class="hl kwd">format</span><span class="hl sym">(</span><span class="hl kwb">str</span><span class="hl sym">(</span>n<span class="hl sym">),</span> <span class="hl kwb">str</span><span class="hl sym">(</span>mflips<span class="hl sym">)))</span>
