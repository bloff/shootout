<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc">#   http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc">#   contributed by Robert Bradshaw</span>
<span class="hl slc">#      modified by Ruud H.G.van Tol</span>
<span class="hl slc">#      modified by Emanuele Zeppieri</span>

<span class="hl kwa">use</span> <span class="hl kwd">strict</span><span class="hl sym">;</span>

<span class="hl kwa">use</span> Math<span class="hl sym">::</span>BigInt lib <span class="hl sym">=&gt;</span> <span class="hl str">'GMP'</span><span class="hl sym">;</span>

die <span class="hl str">'Math::BigInt::GMP missing!'</span>
    <span class="hl kwa">if</span> Math<span class="hl sym">::</span>BigInt<span class="hl sym">-&gt;</span>config<span class="hl sym">-&gt;{</span>lib<span class="hl sym">}</span> <span class="hl kwa">ne</span> <span class="hl str">'Math::BigInt::GMP'</span><span class="hl sym">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$z0</span> <span class="hl sym">=</span> Math<span class="hl sym">::</span>BigInt<span class="hl sym">-&gt;</span><span class="hl kwd">new</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">$z1</span> <span class="hl sym">=</span> Math<span class="hl sym">::</span>BigInt<span class="hl sym">-&gt;</span><span class="hl kwd">new</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">$z2</span> <span class="hl sym">=</span> Math<span class="hl sym">::</span>BigInt<span class="hl sym">-&gt;</span><span class="hl kwd">new</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span>

<span class="hl kwa">sub</span> extract_digit <span class="hl sym">{</span> <span class="hl kwa">return</span> <span class="hl kwd">scalar</span><span class="hl sym">( (</span><span class="hl kwb">$z0</span> <span class="hl sym">*</span> <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] +</span> <span class="hl kwb">$z1</span><span class="hl sym">) /</span> <span class="hl kwb">$z2</span> <span class="hl sym">) }</span>

<span class="hl kwa">sub</span> compose <span class="hl sym">{</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span> defined <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">] ) {</span>
        <span class="hl kwb">$z1</span><span class="hl sym">-&gt;</span><span class="hl kwd">bmul</span><span class="hl sym">(</span> <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] )-&gt;</span><span class="hl kwd">badd</span><span class="hl sym">(</span> <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] *</span> <span class="hl kwb">$z2</span> <span class="hl sym">)</span>
    <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
        <span class="hl kwb">$z1</span><span class="hl sym">-&gt;</span><span class="hl kwd">bmul</span><span class="hl sym">(</span> <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">] )-&gt;</span><span class="hl kwd">badd</span><span class="hl sym">(</span> <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] *</span> <span class="hl kwb">$z0</span> <span class="hl sym">)</span>
    <span class="hl sym">}</span>
    <span class="hl kwb">$z0</span><span class="hl sym">-&gt;</span><span class="hl kwd">bmul</span><span class="hl sym">(</span> <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] );</span>
    <span class="hl kwb">$z2</span><span class="hl sym">-&gt;</span><span class="hl kwd">bmul</span><span class="hl sym">(</span> <span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">] );</span>
    <span class="hl kwa">return</span>
<span class="hl sym">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">$n</span> <span class="hl sym">=</span> <span class="hl kwb">$ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
<span class="hl sym">($,, $</span>\<span class="hl sym">) = (</span><span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$i</span><span class="hl sym">,</span> <span class="hl kwb">$s</span><span class="hl sym">,</span> <span class="hl kwb">$d</span><span class="hl sym">);</span> <span class="hl kwc">my</span> <span class="hl kwb">$k</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

<span class="hl slc"># main loop</span>
<span class="hl kwa">for</span> <span class="hl kwb">$i</span> <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">..</span><span class="hl kwb">$n</span><span class="hl sym">) {</span>
    <span class="hl kwa">while</span> <span class="hl sym">(</span>
        <span class="hl kwb">$z0</span><span class="hl sym">-&gt;</span><span class="hl kwd">bcmp</span><span class="hl sym">(</span><span class="hl kwb">$z2</span><span class="hl sym">) ==</span> <span class="hl num">1</span> <span class="hl sym">|| (</span> <span class="hl kwb">$d</span> <span class="hl sym">=</span> <span class="hl kwd">extract_digit</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">) ) !=</span> <span class="hl kwd">extract_digit</span><span class="hl sym">(</span><span class="hl num">4</span><span class="hl sym">)</span>
    <span class="hl sym">) {</span>
        <span class="hl slc"># y not safe</span>
        <span class="hl kwb">$k</span><span class="hl sym">++;</span> <span class="hl kwd">compose</span><span class="hl sym">(</span><span class="hl kwb">$k</span><span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">*</span><span class="hl kwb">$k</span><span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span><span class="hl kwb">$k</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl sym">}</span>
    <span class="hl kwd">compose</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">, -</span><span class="hl num">10</span><span class="hl sym">*</span><span class="hl kwb">$d</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">);</span>
    <span class="hl kwb">$s</span> <span class="hl sym">.=</span> <span class="hl kwb">$d</span><span class="hl sym">;</span>

    <span class="hl kwa">unless</span> <span class="hl sym">(</span> <span class="hl kwb">$i</span> <span class="hl sym">%</span> <span class="hl num">10</span> <span class="hl sym">) {</span> <span class="hl kwc">print</span> <span class="hl kwb">$s</span><span class="hl sym">,</span> <span class="hl str">&quot;:$i&quot;</span><span class="hl sym">;</span> undef <span class="hl kwb">$s</span> <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwb">$s</span> <span class="hl sym">.=</span> <span class="hl str">' '</span> <span class="hl kwd">x</span> <span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">-</span><span class="hl kwb">$i</span><span class="hl sym">)</span> <span class="hl kwa">if</span> <span class="hl kwb">$i</span> <span class="hl sym">=</span> <span class="hl kwb">$n</span> <span class="hl sym">%</span> <span class="hl num">10</span><span class="hl sym">;</span>

<span class="hl kwc">print</span> <span class="hl kwb">$s</span><span class="hl sym">,</span> <span class="hl str">&quot;:$n&quot;</span> <span class="hl kwa">if</span> <span class="hl kwb">$s</span>
