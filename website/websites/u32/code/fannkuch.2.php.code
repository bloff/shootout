<span class="hl sym">&lt;</span>?
<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">http://shootout.alioth.debian.org/</span>
<span class="hl com">contributed by anon</span>
<span class="hl com"> */</span>


<span class="hl kwa">function</span> <span class="hl kwd">Fannkuch</span><span class="hl sym">(</span><span class="hl kwc">$n</span><span class="hl sym">){</span>
   <span class="hl kwc">$check</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwc">$perm</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span>
   <span class="hl kwc">$perm1</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span>
   <span class="hl kwc">$count</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span>
   <span class="hl kwc">$maxFlipsCount</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwc">$m</span> <span class="hl sym">=</span> <span class="hl kwc">$n</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>

   <span class="hl kwc">$perm1</span> <span class="hl sym">=</span> <span class="hl kwa">range</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwc">$n</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span>
   <span class="hl kwc">$r</span> <span class="hl sym">=</span> <span class="hl kwc">$n</span><span class="hl sym">;</span>

   <span class="hl kwa">while</span> <span class="hl sym">(</span>TRUE<span class="hl sym">) {</span>
      <span class="hl slc">// write-out the first 30 permutations</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$check</span> <span class="hl sym">&lt;</span> <span class="hl num">30</span><span class="hl sym">){</span>

         <span class="hl kwa">foreach</span><span class="hl sym">(</span><span class="hl kwc">$perm1</span> as <span class="hl kwc">$v</span><span class="hl sym">)</span> <span class="hl kwa">echo</span> <span class="hl kwc">$v</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">;</span>
         <span class="hl kwa">echo</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
         <span class="hl kwc">$check</span><span class="hl sym">++;</span>
      <span class="hl sym">}</span>

      <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwc">$r</span> <span class="hl sym">!==</span> <span class="hl num">1</span><span class="hl sym">){</span>
         <span class="hl kwc">$count</span><span class="hl sym">[</span><span class="hl kwc">$r</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">] =</span> <span class="hl kwc">$r</span><span class="hl sym">--;</span>
      <span class="hl sym">}</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$perm1</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] !==</span> <span class="hl num">0</span> <span class="hl sym">&amp;&amp;</span> <span class="hl kwc">$perm1</span><span class="hl sym">[</span><span class="hl kwc">$m</span><span class="hl sym">] !==</span> <span class="hl kwc">$m</span><span class="hl sym">){</span>
         <span class="hl kwc">$perm</span> <span class="hl sym">=</span> <span class="hl kwc">$perm1</span><span class="hl sym">;</span>
         <span class="hl kwc">$flipsCount</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

         <span class="hl kwc">$k</span> <span class="hl sym">=</span> <span class="hl kwc">$perm</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
         do <span class="hl sym">{</span>
            <span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span>
            <span class="hl kwc">$j</span> <span class="hl sym">=</span> <span class="hl kwc">$k</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
            <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$j</span><span class="hl sym">) {</span>
               <span class="hl kwc">$tmp</span> <span class="hl sym">=</span> <span class="hl kwc">$perm</span><span class="hl sym">[</span><span class="hl kwc">$i</span><span class="hl sym">];</span>
               <span class="hl kwc">$perm</span><span class="hl sym">[</span><span class="hl kwc">$i</span><span class="hl sym">++] =</span> <span class="hl kwc">$perm</span><span class="hl sym">[</span><span class="hl kwc">$j</span><span class="hl sym">];</span>
               <span class="hl kwc">$perm</span><span class="hl sym">[</span><span class="hl kwc">$j</span><span class="hl sym">--] =</span> <span class="hl kwc">$tmp</span><span class="hl sym">;</span>
            <span class="hl sym">}</span>
            <span class="hl sym">++</span><span class="hl kwc">$flipsCount</span><span class="hl sym">;</span>
            <span class="hl kwc">$tmp</span> <span class="hl sym">=</span> <span class="hl kwc">$perm</span><span class="hl sym">[</span><span class="hl kwc">$k</span><span class="hl sym">];</span>
            <span class="hl kwc">$perm</span><span class="hl sym">[</span><span class="hl kwc">$k</span><span class="hl sym">] =</span> <span class="hl kwc">$k</span><span class="hl sym">;</span>
         <span class="hl sym">}</span> <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwc">$k</span> <span class="hl sym">=</span> <span class="hl kwc">$tmp</span><span class="hl sym">);</span>

         <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$flipsCount</span> <span class="hl sym">&gt;</span> <span class="hl kwc">$maxFlipsCount</span><span class="hl sym">) {</span>
            <span class="hl kwc">$maxFlipsCount</span> <span class="hl sym">=</span> <span class="hl kwc">$flipsCount</span><span class="hl sym">;</span>
         <span class="hl sym">}</span>
      <span class="hl sym">}</span>

      do <span class="hl sym">{</span>
         <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$r</span> <span class="hl sym">===</span> <span class="hl kwc">$n</span><span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwc">$maxFlipsCount</span><span class="hl sym">;</span>
         <span class="hl kwc">$perm0</span> <span class="hl sym">=</span> <span class="hl kwc">$perm1</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
         <span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
         <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$r</span><span class="hl sym">) {</span>
            <span class="hl kwc">$perm1</span><span class="hl sym">[</span><span class="hl kwc">$i</span><span class="hl sym">++] =</span> <span class="hl kwc">$perm1</span><span class="hl sym">[</span><span class="hl kwc">$i</span><span class="hl sym">];</span>
         <span class="hl sym">}</span>
         <span class="hl kwc">$perm1</span><span class="hl sym">[</span><span class="hl kwc">$r</span><span class="hl sym">] =</span> <span class="hl kwc">$perm0</span><span class="hl sym">;</span>

         <span class="hl kwa">if</span> <span class="hl sym">(--</span><span class="hl kwc">$count</span><span class="hl sym">[</span><span class="hl kwc">$r</span><span class="hl sym">] &gt;</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">break</span><span class="hl sym">;</span>
         <span class="hl sym">++</span><span class="hl kwc">$r</span><span class="hl sym">;</span>
      <span class="hl sym">}</span> <span class="hl kwa">while</span><span class="hl sym">(</span>TRUE<span class="hl sym">);</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwc">$n</span> <span class="hl sym">= (</span><span class="hl kwb">int</span><span class="hl sym">)</span> <span class="hl kwc">$argv</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span>
<span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Pfannkuchen(%d) = %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwc">$n</span><span class="hl sym">,</span> <span class="hl kwd">Fannkuch</span><span class="hl sym">(</span><span class="hl kwc">$n</span><span class="hl sym">));</span>

