<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- contributed by Bryan O'Sullivan</span>
<span class="hl com">{-# OPTIONS -O2 #-}</span>

<span class="hl kwa">import</span> System

pidgits n <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">%(</span><span class="hl num">0</span>#<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">))</span> <span class="hl kwa">where</span>
 i<span class="hl sym">%</span>ds
  <span class="hl sym">|</span> i <span class="hl sym">&gt;=</span> n <span class="hl sym">=</span> return <span class="hl sym">()</span>
  <span class="hl sym">|</span> <span class="hl kwa">True</span> <span class="hl sym">=</span> putStrLn <span class="hl sym">(</span>concat h <span class="hl sym">++</span> <span class="hl str">&quot;\t:&quot;</span> <span class="hl sym">++</span> show j<span class="hl sym">) &gt;&gt;</span> j<span class="hl sym">%</span>t
  <span class="hl kwa">where</span> k <span class="hl sym">=</span> i<span class="hl sym">+</span><span class="hl num">10</span><span class="hl sym">;</span> j <span class="hl sym">=</span> min n k
        <span class="hl sym">(</span>h<span class="hl sym">,</span>t<span class="hl sym">) |</span> k <span class="hl sym">&gt;</span> n <span class="hl sym">= (</span>take <span class="hl sym">(</span>n`mod`<span class="hl num">10</span><span class="hl sym">)</span> ds <span class="hl sym">++</span> replicate <span class="hl sym">(</span>k<span class="hl sym">-</span>n<span class="hl sym">)</span> <span class="hl str">&quot; &quot;</span><span class="hl sym">,[])</span>
              <span class="hl sym">|</span> <span class="hl kwa">True</span> <span class="hl sym">=</span> splitAt <span class="hl num">10</span> ds
 j#s <span class="hl sym">|</span> n<span class="hl sym">&gt;</span>a <span class="hl sym">||</span> r<span class="hl sym">+</span>n<span class="hl sym">&gt;=</span>d <span class="hl sym">=</span> k#t
     <span class="hl sym">|</span> <span class="hl kwa">True</span> <span class="hl sym">=</span> show q <span class="hl sym">:</span> k#<span class="hl sym">(</span>n<span class="hl sym">*</span><span class="hl num">10</span><span class="hl sym">,(</span>a<span class="hl sym">-(</span>q<span class="hl sym">*</span>d<span class="hl sym">))*</span><span class="hl num">10</span><span class="hl sym">,</span>d<span class="hl sym">)</span>
  <span class="hl kwa">where</span> k <span class="hl sym">=</span> j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">;</span> t<span class="hl sym">&#64;(</span>n<span class="hl sym">,</span>a<span class="hl sym">,</span>d<span class="hl sym">)=</span>k<span class="hl sym">&amp;</span>s<span class="hl sym">; (</span>q<span class="hl sym">,</span>r<span class="hl sym">)=(</span>n<span class="hl sym">*</span><span class="hl num">3</span><span class="hl sym">+</span>a<span class="hl sym">)</span>`divMod`d
 j<span class="hl sym">&amp;(</span>n<span class="hl sym">,</span>a<span class="hl sym">,</span>d<span class="hl sym">) = (</span>n<span class="hl sym">*</span>j<span class="hl sym">,(</span>a<span class="hl sym">+</span>n<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">)*</span>y<span class="hl sym">,</span>d<span class="hl sym">*</span>y<span class="hl sym">)</span> <span class="hl kwa">where</span> y<span class="hl sym">=(</span>j<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>

main <span class="hl sym">=</span> pidgits.read.head <span class="hl sym">=&lt;&lt;</span> getArgs
