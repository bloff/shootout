<span class="hl slc">%%% The Computer Language Benchmarks Game</span>
<span class="hl slc">%%% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%%% contributed by Christian von Roques</span>
<span class="hl slc">%%% modified by Jiri Isa</span>

<span class="hl slc">%% Each chameneos is its own process.</span>
<span class="hl slc">%% A chameneos sends {self(), Color} to the broker to request a</span>
<span class="hl slc">%% meeting with another chameneos.</span>
<span class="hl slc">%% The broker replies with {Pid, Color} of the partner met or 'stop'</span>
<span class="hl slc">%% whereupon the chameneos prints the Meetings and Selfmeetings it had</span>
<span class="hl slc">%% and replies with the number of Meetings for the broker to sum.</span>

<span class="hl sym">-</span><span class="hl kwa">module</span><span class="hl sym">(</span>chameneosredux<span class="hl sym">).</span>
<span class="hl sym">-</span><span class="hl kwa">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">]).</span>

<span class="hl sym">-</span><span class="hl kwd">import</span><span class="hl sym">(</span>lists<span class="hl sym">, [</span>foreach<span class="hl sym">/</span><span class="hl num">2</span><span class="hl sym">]).</span>

<span class="hl kwd">spell</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) -&gt;</span> <span class="hl str">&quot; zero&quot;</span><span class="hl sym">;</span>
<span class="hl kwd">spell</span><span class="hl sym">(</span>N<span class="hl sym">) -&gt;</span> <span class="hl kwd">spell</span><span class="hl sym">(</span>N<span class="hl sym">, []).</span>

<span class="hl kwd">spell</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> L<span class="hl sym">) -&gt;</span> L<span class="hl sym">;</span>
<span class="hl kwd">spell</span><span class="hl sym">(</span>N<span class="hl sym">,</span> L<span class="hl sym">) -&gt;</span> <span class="hl kwd">spell</span><span class="hl sym">(</span>N <span class="hl kwa">div</span> <span class="hl num">10</span><span class="hl sym">, [</span><span class="hl kwb">element</span><span class="hl sym">(</span>N <span class="hl kwa">rem</span> <span class="hl num">10</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">, {</span><span class="hl str">&quot; zero&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; one&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; two&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; three&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; four&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; five&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; six&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; seven&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; eight&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; nine&quot;</span><span class="hl sym">}) |</span> L<span class="hl sym">]).</span>


<span class="hl kwd">complement</span><span class="hl sym">(</span>C<span class="hl sym">,</span> C<span class="hl sym">) -&gt;</span> C<span class="hl sym">;</span>
<span class="hl kwd">complement</span><span class="hl sym">(</span>blue<span class="hl sym">,</span> red<span class="hl sym">) -&gt;</span> yellow<span class="hl sym">;</span>
<span class="hl kwd">complement</span><span class="hl sym">(</span>blue<span class="hl sym">,</span> yellow<span class="hl sym">) -&gt;</span> red<span class="hl sym">;</span>
<span class="hl kwd">complement</span><span class="hl sym">(</span>red<span class="hl sym">,</span> blue<span class="hl sym">) -&gt;</span> yellow<span class="hl sym">;</span>
<span class="hl kwd">complement</span><span class="hl sym">(</span>red<span class="hl sym">,</span> yellow<span class="hl sym">) -&gt;</span> blue<span class="hl sym">;</span>
<span class="hl kwd">complement</span><span class="hl sym">(</span>yellow<span class="hl sym">,</span> blue<span class="hl sym">) -&gt;</span> red<span class="hl sym">;</span>
<span class="hl kwd">complement</span><span class="hl sym">(</span>yellow<span class="hl sym">,</span> red<span class="hl sym">) -&gt;</span> blue<span class="hl sym">.</span>


<span class="hl kwd">show_complements</span><span class="hl sym">() -&gt;</span>
    <span class="hl sym">[</span> io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~p + ~p -&gt; ~p~n&quot;</span><span class="hl sym">, [</span>A<span class="hl sym">,</span> B<span class="hl sym">,</span> <span class="hl kwd">complement</span><span class="hl sym">(</span>A<span class="hl sym">,</span> B<span class="hl sym">)]) ||</span>
        A <span class="hl sym">&lt;- [</span>blue<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">],</span>
        B <span class="hl sym">&lt;- [</span>blue<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">]].</span>


<span class="hl kwd">print_header</span><span class="hl sym">(</span>L<span class="hl sym">) -&gt;</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~n&quot;</span><span class="hl sym">),</span>
    <span class="hl kwd">foreach</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>C<span class="hl sym">) -&gt;</span> io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot; ~p&quot;</span><span class="hl sym">, [</span>C<span class="hl sym">])</span> <span class="hl kwa">end</span><span class="hl sym">,</span> L<span class="hl sym">),</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~n&quot;</span><span class="hl sym">).</span>


<span class="hl kwd">run</span><span class="hl sym">(</span>L<span class="hl sym">,</span> N<span class="hl sym">) -&gt;</span>
    <span class="hl kwd">print_header</span><span class="hl sym">(</span>L<span class="hl sym">),</span>
    Broker <span class="hl sym">=</span> <span class="hl kwb">self</span><span class="hl sym">(),</span>
    <span class="hl kwd">foreach</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>Color<span class="hl sym">) -&gt;</span> <span class="hl kwb">spawn</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">() -&gt;</span> <span class="hl kwd">chameneos</span><span class="hl sym">(</span>Broker<span class="hl sym">,</span> Color<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">end</span><span class="hl sym">)</span> <span class="hl kwa">end</span><span class="hl sym">,</span> L<span class="hl sym">),</span>
    <span class="hl kwd">broker</span><span class="hl sym">(</span>N<span class="hl sym">),</span>
    <span class="hl kwd">cleanup</span><span class="hl sym">(</span><span class="hl kwb">length</span><span class="hl sym">(</span>L<span class="hl sym">),</span> <span class="hl num">0</span><span class="hl sym">).</span>


<span class="hl kwd">chameneos</span><span class="hl sym">(</span>Broker<span class="hl sym">,</span> Color<span class="hl sym">,</span> Meetings<span class="hl sym">,</span> MetSelf<span class="hl sym">) -&gt;</span>
    Broker <span class="hl sym">! {</span> <span class="hl kwb">self</span><span class="hl sym">(),</span> Color <span class="hl sym">},</span>
    <span class="hl kwa">receive</span>
        <span class="hl sym">{</span>OPid<span class="hl sym">,</span> OColor<span class="hl sym">} -&gt;</span>
            <span class="hl kwd">chameneos</span><span class="hl sym">(</span>Broker<span class="hl sym">,</span> <span class="hl kwd">complement</span><span class="hl sym">(</span>Color<span class="hl sym">,</span> OColor<span class="hl sym">),</span> Meetings<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span>
                      <span class="hl kwa">if</span> OPid <span class="hl sym">==</span> <span class="hl kwb">self</span><span class="hl sym">() -&gt;</span> MetSelf<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">;</span> true <span class="hl sym">-&gt;</span> MetSelf <span class="hl kwa">end</span><span class="hl sym">);</span>
        stop <span class="hl sym">-&gt;</span>
            io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~w~s</span><span class="hl esc">\</span><span class="hl str">n&quot;</span><span class="hl sym">, [</span>Meetings<span class="hl sym">,</span> <span class="hl kwd">spell</span><span class="hl sym">(</span>MetSelf<span class="hl sym">)]),</span>
            Broker <span class="hl sym">!</span> Meetings
    <span class="hl kwa">end</span><span class="hl sym">.</span>


<span class="hl kwd">broker</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) -&gt;</span> nil<span class="hl sym">;</span>
<span class="hl kwd">broker</span><span class="hl sym">(</span>N<span class="hl sym">) -&gt;</span>
    <span class="hl kwa">receive</span>
        C1 <span class="hl sym">= {</span>Pid1<span class="hl sym">,</span> _<span class="hl sym">} -&gt;</span> nil
    <span class="hl kwa">end</span><span class="hl sym">,</span>
    <span class="hl kwa">receive</span>
        C2 <span class="hl sym">= {</span>Pid2<span class="hl sym">,</span> _<span class="hl sym">} -&gt;</span>
            Pid1 <span class="hl sym">!</span> C2<span class="hl sym">,</span>
            Pid2 <span class="hl sym">!</span> C1<span class="hl sym">,</span>
            <span class="hl kwd">broker</span><span class="hl sym">(</span>N<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">end</span><span class="hl sym">.</span>

<span class="hl kwd">cleanup</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> M<span class="hl sym">) -&gt;</span> io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~s~n&quot;</span><span class="hl sym">, [</span><span class="hl kwd">spell</span><span class="hl sym">(</span>M<span class="hl sym">)]);</span>
<span class="hl kwd">cleanup</span><span class="hl sym">(</span>N<span class="hl sym">,</span> M<span class="hl sym">) -&gt;</span>
    <span class="hl kwa">receive</span>
        <span class="hl sym">{</span>Pid<span class="hl sym">,</span> _Color<span class="hl sym">} -&gt;</span>
            Pid <span class="hl sym">!</span> stop<span class="hl sym">,</span>
            <span class="hl kwd">cleanup</span><span class="hl sym">(</span>N<span class="hl sym">,</span> M<span class="hl sym">);</span>
        Meetings <span class="hl sym">-&gt;</span>
            <span class="hl kwd">cleanup</span><span class="hl sym">(</span>N<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> M<span class="hl sym">+</span>Meetings<span class="hl sym">)</span>
    <span class="hl kwa">end</span><span class="hl sym">.</span>


<span class="hl kwd">main</span><span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
    N <span class="hl sym">=</span> <span class="hl kwb">list_to_integer</span><span class="hl sym">(</span>Arg<span class="hl sym">),</span>
    <span class="hl kwd">show_complements</span><span class="hl sym">(),</span>
    <span class="hl kwd">run</span><span class="hl sym">([</span>blue<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">],</span> N<span class="hl sym">),</span>
    <span class="hl kwd">run</span><span class="hl sym">([</span>blue<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">,</span> blue<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">,</span> red<span class="hl sym">,</span> blue<span class="hl sym">],</span> N<span class="hl sym">),</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~n&quot;</span><span class="hl sym">),</span>
    <span class="hl kwb">halt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">).</span>

