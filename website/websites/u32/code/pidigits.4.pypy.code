<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Dani Nanz (2007-09-21)</span>

<span class="hl kwa">import</span> sys
<span class="hl kwa">import</span> gmpy

<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl sym">(</span>n<span class="hl sym">):</span>

    pi <span class="hl sym">=</span> <span class="hl kwb">str</span><span class="hl sym">(</span>gmpy<span class="hl sym">.</span><span class="hl kwd">pi</span><span class="hl sym">(</span><span class="hl kwb">int</span><span class="hl sym">(</span><span class="hl num">3.35</span> <span class="hl sym">*</span> n<span class="hl sym">)))</span>
    pi_tmp <span class="hl sym">=</span> <span class="hl str">''</span><span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">([</span>pi<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">],</span> pi<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">:]])</span>
    pistr <span class="hl sym">=</span> pi_tmp<span class="hl sym">[</span><span class="hl num">0</span> <span class="hl sym">:</span> n<span class="hl sym">]</span>
    w <span class="hl sym">=</span> <span class="hl num">10</span>
    out <span class="hl sym">= []</span>
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> n <span class="hl sym">-</span> w <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> w<span class="hl sym">):</span>
        out<span class="hl sym">.</span><span class="hl kwd">extend</span><span class="hl sym">([</span>pistr<span class="hl sym">[</span>i <span class="hl sym">:</span> i <span class="hl sym">+</span> w<span class="hl sym">] ,</span> i <span class="hl sym">+</span> w<span class="hl sym">])</span>
    <span class="hl kwa">print</span> <span class="hl sym">(</span><span class="hl str">'%s</span><span class="hl esc">\t</span><span class="hl str">:%d</span><span class="hl esc">\n</span><span class="hl str">'</span> <span class="hl sym">* (</span><span class="hl kwb">len</span><span class="hl sym">(</span>out<span class="hl sym">) /</span> <span class="hl num">2</span><span class="hl sym">)) %</span> <span class="hl kwb">tuple</span><span class="hl sym">(</span>out<span class="hl sym">),</span>
    <span class="hl kwa">if</span> n <span class="hl sym">%</span> w <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">:</span>
        <span class="hl kwa">print</span> <span class="hl str">&quot;%s</span><span class="hl esc">\t</span><span class="hl str">:%d&quot;</span> <span class="hl sym">% ((</span>pistr<span class="hl sym">[-(</span>n <span class="hl sym">%</span> w<span class="hl sym">):]).</span><span class="hl kwd">ljust</span><span class="hl sym">(</span>w<span class="hl sym">),</span> n<span class="hl sym">)</span>


<span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]))</span>

