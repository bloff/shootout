<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   from Scala version by Otto Bommer, August 2010</span>
<span class="hl com">*)</span>

<span class="hl kwa">let</span> fannkuch n <span class="hl sym">=</span>
   <span class="hl kwa">begin</span>
   <span class="hl kwa">let</span> perm1 <span class="hl sym">=</span> <span class="hl kwc">Array</span><span class="hl sym">.</span>create n <span class="hl num">0</span> <span class="hl kwa">in for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">do</span> perm1<span class="hl sym">.(</span>i<span class="hl sym">) &lt;-</span> i <span class="hl kwa">done</span><span class="hl sym">;</span>
   <span class="hl kwa">let</span> perm <span class="hl sym">=</span> <span class="hl kwc">Array</span><span class="hl sym">.</span>create n <span class="hl num">0</span> <span class="hl kwa">in</span>
   <span class="hl kwa">let</span> count <span class="hl sym">=</span> <span class="hl kwc">Array</span><span class="hl sym">.</span>create n <span class="hl num">0</span> <span class="hl kwa">in</span>
   <span class="hl kwa">let</span> flips <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span>
   <span class="hl kwa">and</span> maxflips <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span>
   <span class="hl kwa">and</span> checksum <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span>
   <span class="hl kwa">and</span> nperm <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span>
   <span class="hl kwa">and</span> r <span class="hl sym">=</span> <span class="hl kwb">ref</span> n <span class="hl kwa">in</span>
   <span class="hl kwa">while</span> <span class="hl sym">!</span>r <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">do</span>
<span class="hl com">(*      Printf.printf &quot;perm=&quot;; i := 0; while !i &lt; n do Printf.printf &quot;%d &quot; perm1.(!i); i := !i +1; done; Printf.printf &quot;\n&quot;; *)</span>
      <span class="hl kwa">for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n<span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span> perm<span class="hl sym">.(</span>i<span class="hl sym">) &lt;-</span> perm1<span class="hl sym">.(</span>i<span class="hl sym">)</span> <span class="hl kwa">done</span><span class="hl sym">;</span>

      <span class="hl kwa">while</span> <span class="hl sym">!</span>r <span class="hl sym">!=</span> <span class="hl num">1</span> <span class="hl kwa">do</span> count<span class="hl sym">.(!</span>r<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">) &lt;- !</span>r<span class="hl sym">;</span> r <span class="hl sym">:= !</span>r <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwa">done</span><span class="hl sym">;</span>

      flips <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl kwa">let</span> k <span class="hl sym">=</span> <span class="hl kwb">ref</span> perm<span class="hl sym">.(</span><span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">in</span>
      <span class="hl kwa">while</span> <span class="hl sym">!</span>k <span class="hl sym">!=</span> <span class="hl num">0</span> <span class="hl kwa">do</span>
         <span class="hl kwa">let</span> t <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span> <span class="hl kwa">in</span>
         <span class="hl kwa">for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl sym">!</span>k <span class="hl sym">/</span> <span class="hl num">2</span> <span class="hl kwa">do</span>
            t <span class="hl sym">:=</span> perm<span class="hl sym">.(</span>i<span class="hl sym">);</span>
            perm<span class="hl sym">.(</span>i<span class="hl sym">) &lt;-</span> perm<span class="hl sym">.(!</span>k <span class="hl sym">-</span> i<span class="hl sym">);</span>
            perm<span class="hl sym">.(!</span>k <span class="hl sym">-</span> i<span class="hl sym">) &lt;- !</span>t<span class="hl sym">;</span>
            <span class="hl kwa">done</span><span class="hl sym">;</span>

         k <span class="hl sym">:=</span> perm<span class="hl sym">.(</span><span class="hl num">0</span><span class="hl sym">);</span>
         flips <span class="hl sym">:= !</span>flips <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
         <span class="hl kwa">done</span><span class="hl sym">;</span>

      maxflips <span class="hl sym">:=</span> max <span class="hl sym">!</span>maxflips <span class="hl sym">!</span>flips<span class="hl sym">;</span>
      checksum <span class="hl sym">:= !</span>checksum <span class="hl sym">+ !</span>flips <span class="hl sym">* (</span><span class="hl num">1</span> <span class="hl sym">- (!</span>nperm <span class="hl kwa">land</span> <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">lsl</span> <span class="hl num">1</span><span class="hl sym">);</span>

      <span class="hl kwa">let</span> go <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl kwa">true in</span>
      <span class="hl kwa">let</span> t <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span> <span class="hl kwa">in</span>
      <span class="hl kwa">while</span> <span class="hl sym">!</span>go <span class="hl kwa">do</span>
         <span class="hl kwa">if</span> <span class="hl sym">!</span>r <span class="hl sym">==</span> n <span class="hl kwa">then begin</span> go <span class="hl sym">:=</span> <span class="hl kwa">false</span><span class="hl sym">;</span> r <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwa">end</span>
         <span class="hl kwa">else</span>
            <span class="hl kwa">begin</span>
            t <span class="hl sym">:=</span> perm1<span class="hl sym">.(</span><span class="hl num">0</span><span class="hl sym">);</span>
            <span class="hl kwa">for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl sym">!</span>r <span class="hl sym">-</span> <span class="hl num">1</span> <span class="hl kwa">do</span> perm1<span class="hl sym">.(</span>i<span class="hl sym">) &lt;-</span> perm1<span class="hl sym">.(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">done</span><span class="hl sym">;</span>
            perm1<span class="hl sym">.(!</span>r<span class="hl sym">) &lt;- !</span>t<span class="hl sym">;</span>

            count<span class="hl sym">.(!</span>r<span class="hl sym">) &lt;-</span> count<span class="hl sym">.(!</span>r<span class="hl sym">) -</span> <span class="hl num">1</span><span class="hl sym">;</span>
            <span class="hl kwa">if</span> count<span class="hl sym">.(!</span>r<span class="hl sym">) &gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> go <span class="hl sym">:=</span> <span class="hl kwa">false</span>
            <span class="hl kwa">else</span> r <span class="hl sym">:= !</span>r <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
            <span class="hl kwa">end</span>
         <span class="hl kwa">done</span><span class="hl sym">;</span>

      nperm <span class="hl sym">:= !</span>nperm <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl kwa">done</span><span class="hl sym">;</span>

   <span class="hl sym">(!</span>maxflips<span class="hl sym">, !</span>checksum<span class="hl sym">);</span>
   <span class="hl kwa">end</span>

<span class="hl kwa">let</span> _ <span class="hl sym">=</span>
        <span class="hl kwa">let</span> n <span class="hl sym">=</span> <span class="hl kwa">try</span> int_of_string<span class="hl sym">(</span><span class="hl kwc">Sys</span><span class="hl sym">.</span>argv<span class="hl sym">.(</span><span class="hl num">1</span><span class="hl sym">))</span> <span class="hl kwa">with</span> _ <span class="hl sym">-&gt;</span> <span class="hl num">7</span> <span class="hl kwa">in</span>
        <span class="hl kwa">let</span> <span class="hl sym">(</span>maxflips<span class="hl sym">,</span> checksum<span class="hl sym">) =</span> fannkuch n <span class="hl kwa">in</span>
        <span class="hl kwc">Printf</span><span class="hl sym">.</span>printf <span class="hl str">&quot;%d</span><span class="hl esc">\n</span><span class="hl str">Pfannkuchen(%d) = %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> checksum n maxflips

