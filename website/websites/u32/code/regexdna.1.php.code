<span class="hl sym">&lt;</span>?
<span class="hl com">/*</span>
<span class="hl com">   The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Danny Sauer</span>
<span class="hl com">   modified by Josh Goldfoot</span>
<span class="hl com">   multicore by anon</span>
<span class="hl com"> */</span>

<span class="hl slc"># regexp matches</span>

<span class="hl slc">#ini_set(&quot;memory_limit&quot;,&quot;40M&quot;);</span>

<span class="hl kwa">function</span> <span class="hl kwd">getProcs</span><span class="hl sym">() {</span>
   <span class="hl kwc">$procs</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwd">file_exists</span><span class="hl sym">(</span><span class="hl str">'/proc/cpuinfo'</span><span class="hl sym">)) {</span>
      <span class="hl kwc">$procs</span> <span class="hl sym">=</span> <span class="hl kwd">preg_match_all</span><span class="hl sym">(</span><span class="hl str">'/^processor\s/m'</span><span class="hl sym">,</span> <span class="hl kwd">file_get_contents</span><span class="hl sym">(</span><span class="hl str">'/proc/cpuinfo'</span><span class="hl sym">),</span> <span class="hl kwc">$discard</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwc">$procs</span> <span class="hl sym">&lt;&lt;=</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl kwa">return</span> <span class="hl kwc">$procs</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">count_matches</span><span class="hl sym">(&amp;</span><span class="hl kwc">$contents</span><span class="hl sym">, &amp;</span><span class="hl kwc">$variants</span><span class="hl sym">) {</span>
   <span class="hl kwc">$results</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span>
   <span class="hl kwa">foreach</span><span class="hl sym">(</span><span class="hl kwc">$variants</span> <span class="hl kwa">as</span> <span class="hl kwc">$regex</span><span class="hl sym">) {</span>
      <span class="hl kwc">$discard</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span>
      <span class="hl kwc">$results</span><span class="hl sym">[</span><span class="hl kwc">$regex</span><span class="hl sym">] =</span> <span class="hl kwd">preg_match_all</span><span class="hl sym">(</span><span class="hl str">&quot;/$regex/&quot;</span><span class="hl sym">,</span> <span class="hl kwc">$contents</span><span class="hl sym">,</span> <span class="hl kwc">$discard</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">return</span> <span class="hl kwc">$results</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">$variants</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">(</span>
   <span class="hl str">'agggtaaa|tttaccct'</span><span class="hl sym">,</span>
   <span class="hl str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="hl sym">,</span>
   <span class="hl str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="hl sym">,</span>
   <span class="hl str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="hl sym">,</span>
   <span class="hl str">'agg[act]taaa|ttta[agt]cct'</span><span class="hl sym">,</span>
   <span class="hl str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="hl sym">,</span>
   <span class="hl str">'agggt[cgt]aa|tt[acg]accct'</span><span class="hl sym">,</span>
   <span class="hl str">'agggta[cgt]a|t[acg]taccct'</span><span class="hl sym">,</span>
   <span class="hl str">'agggtaa[cgt]|[acg]ttaccct'</span><span class="hl sym">,</span>
<span class="hl sym">);</span>

<span class="hl slc"># IUB replacement parallel arrays</span>
<span class="hl kwc">$IUB</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span> <span class="hl kwc">$IUBnew</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/B/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(c|g|t)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/D/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(a|g|t)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/H/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(a|c|t)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/K/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(g|t)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/M/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(a|c)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/N/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(a|c|g|t)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/R/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(a|g)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/S/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(c|g)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/V/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(a|c|g)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/W/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(a|t)'</span><span class="hl sym">;</span>
<span class="hl kwc">$IUB</span><span class="hl sym">[]=</span><span class="hl str">'/Y/'</span><span class="hl sym">;</span>     <span class="hl kwc">$IUBnew</span><span class="hl sym">[]=</span><span class="hl str">'(c|t)'</span><span class="hl sym">;</span>

<span class="hl slc"># sequence descriptions start with &gt; and comments start with ;</span>
<span class="hl slc">#my $stuffToRemove = '^[&gt;;].*$|[\r\n]';</span>
<span class="hl kwc">$stuffToRemove</span> <span class="hl sym">=</span> <span class="hl str">'^&gt;.*$|</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span> <span class="hl slc"># no comments, *nix-format test file...</span>

<span class="hl slc"># read in file</span>
<span class="hl kwc">$contents</span> <span class="hl sym">=</span> <span class="hl kwd">file_get_contents</span><span class="hl sym">(</span><span class="hl str">'php://stdin'</span><span class="hl sym">);</span>
<span class="hl kwc">$initialLength</span> <span class="hl sym">=</span> <span class="hl kwd">strlen</span><span class="hl sym">(</span><span class="hl kwc">$contents</span><span class="hl sym">);</span>

<span class="hl slc"># remove things</span>
<span class="hl kwc">$contents</span> <span class="hl sym">=</span> <span class="hl kwd">preg_replace</span><span class="hl sym">(</span><span class="hl str">&quot;/$stuffToRemove/m&quot;</span><span class="hl sym">,</span> <span class="hl str">''</span><span class="hl sym">,</span> <span class="hl kwc">$contents</span><span class="hl sym">);</span>
<span class="hl kwc">$codeLength</span> <span class="hl sym">=</span> <span class="hl kwd">strlen</span><span class="hl sym">(</span><span class="hl kwc">$contents</span><span class="hl sym">);</span>

<span class="hl slc"># do regexp counts</span>

<span class="hl slc">// queue jobs</span>
<span class="hl kwc">$tok</span> <span class="hl sym">=</span> <span class="hl kwd">ftok</span><span class="hl sym">(</span>__FILE__<span class="hl sym">,</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl kwd">time</span><span class="hl sym">() &amp;</span> <span class="hl num">255</span><span class="hl sym">));</span>
<span class="hl kwc">$queue</span> <span class="hl sym">=</span> <span class="hl kwd">msg_get_queue</span><span class="hl sym">(</span><span class="hl kwc">$tok</span><span class="hl sym">);</span>
<span class="hl kwa">foreach</span> <span class="hl sym">(</span><span class="hl kwc">$variants</span> <span class="hl kwa">as</span> <span class="hl kwc">$id</span> <span class="hl sym">=&gt;</span> <span class="hl kwc">$variant</span><span class="hl sym">) {</span>
   <span class="hl kwc">$errcode</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">if</span> <span class="hl sym">(!</span><span class="hl kwd">msg_send</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">, (</span><span class="hl kwb">string</span><span class="hl sym">)</span> <span class="hl kwc">$id</span><span class="hl sym">,</span> FALSE<span class="hl sym">,</span> FALSE<span class="hl sym">,</span> <span class="hl kwc">$errcode</span><span class="hl sym">)) {</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$errcode</span> <span class="hl sym">==</span> MSG_EAGAIN<span class="hl sym">) {</span>
         <span class="hl kwa">echo</span> <span class="hl str">&quot;EAGAIN</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
      <span class="hl kwd">var_dump</span><span class="hl sym">(</span><span class="hl kwd">msg_stat_queue</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">));</span>
      <span class="hl kwa">exit</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl slc">// # of processes to run</span>
<span class="hl kwc">$procs</span> <span class="hl sym">=</span> <span class="hl kwd">getProcs</span><span class="hl sym">();</span>
<span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$procs</span> <span class="hl sym">&gt;</span> <span class="hl kwd">count</span><span class="hl sym">(</span><span class="hl kwc">$variants</span><span class="hl sym">)) {</span>
   <span class="hl kwc">$procs</span> <span class="hl sym">=</span> <span class="hl kwd">count</span><span class="hl sym">(</span><span class="hl kwc">$variants</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl slc">// create proceses</span>
<span class="hl kwc">$parent</span> <span class="hl sym">=</span> TRUE<span class="hl sym">;</span>
<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwc">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$procs</span><span class="hl sym">; ++</span><span class="hl kwc">$i</span><span class="hl sym">) {</span>
   <span class="hl kwc">$pid</span> <span class="hl sym">=</span> <span class="hl kwd">pcntl_fork</span><span class="hl sym">();</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$pid</span> <span class="hl sym">=== -</span><span class="hl num">1</span><span class="hl sym">) {</span>
      <span class="hl kwa">die</span><span class="hl sym">(</span><span class="hl str">'could not fork'</span><span class="hl sym">);</span>
   <span class="hl sym">}</span> <span class="hl kwa">else if</span> <span class="hl sym">(</span><span class="hl kwc">$pid</span><span class="hl sym">) {</span>
      <span class="hl kwa">continue</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
   <span class="hl kwc">$parent</span> <span class="hl sym">=</span> FALSE<span class="hl sym">;</span>
   <span class="hl kwa">break</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl slc">// run jobs</span>
<span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwd">msg_receive</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwc">$msgtype</span><span class="hl sym">,</span> <span class="hl num">16</span><span class="hl sym">,</span> <span class="hl kwc">$variant_id</span><span class="hl sym">,</span> FALSE<span class="hl sym">,</span> MSG_IPC_NOWAIT<span class="hl sym">)) {</span>

   <span class="hl kwc">$regex</span> <span class="hl sym">=</span> <span class="hl kwc">$variants</span><span class="hl sym">[</span><span class="hl kwc">$variant_id</span><span class="hl sym">];</span>
   <span class="hl kwc">$result</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">(</span><span class="hl kwc">$variant_id</span><span class="hl sym">,</span> <span class="hl kwd">preg_match_all</span><span class="hl sym">(</span><span class="hl str">&quot;/$regex/i&quot;</span><span class="hl sym">,</span> <span class="hl kwc">$contents</span><span class="hl sym">,</span> <span class="hl kwc">$discard</span><span class="hl sym">));</span>
   <span class="hl kwd">msg_send</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwc">$result</span><span class="hl sym">,</span> TRUE<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">if</span> <span class="hl sym">(!</span><span class="hl kwc">$parent</span><span class="hl sym">) {</span>
   <span class="hl kwa">exit</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl slc">// gather &amp; output results</span>
<span class="hl kwc">$results</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">();</span>
<span class="hl kwa">foreach</span><span class="hl sym">(</span><span class="hl kwc">$variants</span> <span class="hl kwa">as</span> <span class="hl kwc">$variant</span><span class="hl sym">) {</span>
   <span class="hl kwd">msg_receive</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwc">$msgtype</span><span class="hl sym">,</span> <span class="hl num">4096</span><span class="hl sym">,</span> <span class="hl kwc">$result</span><span class="hl sym">,</span> TRUE<span class="hl sym">);</span>
   <span class="hl kwc">$results</span><span class="hl sym">[</span><span class="hl kwc">$result</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]] =</span> <span class="hl kwc">$result</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span>
<span class="hl sym">}</span>
<span class="hl kwd">ksort</span><span class="hl sym">(</span><span class="hl kwc">$results</span><span class="hl sym">);</span>

<span class="hl kwa">foreach</span><span class="hl sym">(</span><span class="hl kwc">$results</span> <span class="hl kwa">as</span> <span class="hl kwc">$variant_id</span> <span class="hl sym">=&gt;</span> <span class="hl kwc">$result</span><span class="hl sym">) {</span>
   <span class="hl kwa">echo</span> <span class="hl kwc">$variants</span><span class="hl sym">[</span><span class="hl kwc">$variant_id</span><span class="hl sym">] .</span> <span class="hl str">' '</span> <span class="hl sym">.</span> <span class="hl kwc">$result</span> <span class="hl sym">.</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">while</span> <span class="hl sym">(--</span><span class="hl kwc">$procs</span><span class="hl sym">) {</span>
   <span class="hl kwd">pcntl_wait</span><span class="hl sym">(</span><span class="hl kwc">$s</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwd">msg_remove_queue</span><span class="hl sym">(</span><span class="hl kwc">$queue</span><span class="hl sym">);</span>

<span class="hl slc"># do replacements</span>
<span class="hl kwc">$contents</span> <span class="hl sym">=</span> <span class="hl kwd">preg_replace</span><span class="hl sym">(</span><span class="hl kwc">$IUB</span><span class="hl sym">,</span> <span class="hl kwc">$IUBnew</span><span class="hl sym">,</span> <span class="hl kwc">$contents</span><span class="hl sym">);</span>

<span class="hl kwa">print</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">.</span>
   <span class="hl kwc">$initialLength</span> <span class="hl sym">.</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">.</span>
   <span class="hl kwc">$codeLength</span> <span class="hl sym">.</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">.</span>
   <span class="hl kwd">strlen</span><span class="hl sym">(</span><span class="hl kwc">$contents</span><span class="hl sym">) .</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">;</span>

