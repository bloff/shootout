<span class="hl com">/*</span>
<span class="hl com">The Computer Language Benchmarks Game</span>
<span class="hl com">http://shootout.alioth.debian.org/</span>
<span class="hl com">Contributed by Jesse Millikan</span>
<span class="hl com">Fixed by Matthew Wilson</span>
<span class="hl com">*/</span>

<span class="hl kwa">var</span> complement<span class="hl sym">=[],</span>seq<span class="hl sym">=</span><span class="hl str">&quot;&quot;</span><span class="hl sym">,</span>l<span class="hl sym">,</span>keys<span class="hl sym">=</span><span class="hl str">'WSATUGCYRKMBDHVN'</span><span class="hl sym">,</span>comps<span class="hl sym">=</span><span class="hl str">'WSTAACGRYMKVHDBN'</span><span class="hl sym">,</span>i<span class="hl sym">;</span>

<span class="hl kwa">function</span> <span class="hl kwd">revcomp</span><span class="hl sym">(){</span>
 <span class="hl kwa">var</span> rseq <span class="hl sym">=</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">,</span> l <span class="hl sym">=</span> seq<span class="hl sym">.</span><span class="hl kwc">length</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> j <span class="hl sym">=</span> l <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
 <span class="hl kwa">while</span> <span class="hl sym">(--</span>j <span class="hl sym">&gt; -</span><span class="hl num">1</span><span class="hl sym">) {</span> rseq <span class="hl sym">+=</span> complement<span class="hl sym">[</span>seq<span class="hl sym">.</span><span class="hl kwc">charCodeAt</span><span class="hl sym">(</span>j<span class="hl sym">)] }</span>
 <span class="hl kwa">for</span><span class="hl sym">(</span>j <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> l<span class="hl sym">;</span> j <span class="hl sym">+=</span> <span class="hl num">60</span><span class="hl sym">) {</span> <span class="hl kwc">print</span><span class="hl sym">(</span>rseq<span class="hl sym">.</span><span class="hl kwc">substr</span><span class="hl sym">(</span>j<span class="hl sym">,</span> <span class="hl num">60</span><span class="hl sym">)) }</span>
<span class="hl sym">}</span>

<span class="hl kwa">for</span><span class="hl sym">(</span><span class="hl kwa">var</span> i <span class="hl kwa">in</span> keys<span class="hl sym">) {</span> complement<span class="hl sym">[</span>keys<span class="hl sym">.</span><span class="hl kwc">charCodeAt</span><span class="hl sym">(</span>i<span class="hl sym">)] =</span> comps<span class="hl sym">[</span>i<span class="hl sym">] }</span>

<span class="hl kwa">do</span><span class="hl sym">{</span> <span class="hl kwa">try</span><span class="hl sym">{</span>
 <span class="hl kwa">if</span> <span class="hl sym">(/</span>^<span class="hl sym">&gt;/.</span><span class="hl kwc">test</span><span class="hl sym">(</span>l <span class="hl sym">=</span> <span class="hl kwd">readline</span><span class="hl sym">())) {</span>
  <span class="hl kwa">if</span> <span class="hl sym">(</span>seq<span class="hl sym">.</span><span class="hl kwc">length</span><span class="hl sym">) {</span>
   <span class="hl kwd">revcomp</span><span class="hl sym">()</span>
   seq <span class="hl sym">=</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">;</span>
  <span class="hl sym">}</span>
  <span class="hl kwc">print</span><span class="hl sym">(</span>l<span class="hl sym">);</span>
 <span class="hl sym">}</span> <span class="hl kwa">else if</span> <span class="hl sym">(</span>l<span class="hl sym">.</span><span class="hl kwc">length</span> <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">)</span>
  seq <span class="hl sym">+=</span> l<span class="hl sym">.</span><span class="hl kwc">toUpperCase</span><span class="hl sym">()</span>
<span class="hl sym">}</span><span class="hl kwa">catch</span><span class="hl sym">(</span>e<span class="hl sym">){</span> <span class="hl kwa">break</span> <span class="hl sym">}}</span><span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl kwa">true</span><span class="hl sym">)</span>

<span class="hl kwd">revcomp</span><span class="hl sym">()</span>
