<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org</span>
<span class="hl com">   contributed by Arek Bochinski</span>
<span class="hl com">*/</span>


<span class="hl dir">#define _GNU_SOURCE 1</span>
<span class="hl dir">#include &lt;stdio.h&gt;</span>
<span class="hl dir">#include &lt;string.h&gt;</span>
<span class="hl dir">#include &lt;limits.h&gt;</span>

<span class="hl slc">//conversion table</span>
<span class="hl kwb">static const char</span> FtoCOMP<span class="hl sym">[</span><span class="hl num">128</span><span class="hl sym">] = {</span>
   <span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>
   <span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>
   <span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'T'</span><span class="hl sym">,</span><span class="hl str">'V'</span><span class="hl sym">,</span><span class="hl str">'G'</span><span class="hl sym">,</span><span class="hl str">'H'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'C'</span><span class="hl sym">,</span><span class="hl str">'D'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'M'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'K'</span><span class="hl sym">,</span><span class="hl str">'N'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>
   <span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'Y'</span><span class="hl sym">,</span><span class="hl str">'S'</span><span class="hl sym">,</span><span class="hl str">'A'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'B'</span><span class="hl sym">,</span><span class="hl str">'W'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'R'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>
   <span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'T'</span><span class="hl sym">,</span><span class="hl str">'V'</span><span class="hl sym">,</span><span class="hl str">'G'</span><span class="hl sym">,</span><span class="hl str">'H'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'C'</span><span class="hl sym">,</span><span class="hl str">'D'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'M'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'K'</span><span class="hl sym">,</span><span class="hl str">'N'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>
   <span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'Y'</span><span class="hl sym">,</span><span class="hl str">'S'</span><span class="hl sym">,</span><span class="hl str">'A'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'B'</span><span class="hl sym">,</span><span class="hl str">'W'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl str">'R'</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span>
<span class="hl sym">};</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span> <span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">char</span> <span class="hl sym">*</span> argv<span class="hl sym">[]) {</span>
    <span class="hl kwb">char</span> buffer<span class="hl sym">[</span><span class="hl num">10240</span><span class="hl sym">];</span>
    <span class="hl kwb">int</span> itotal<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span>forward<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span>end<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
    <span class="hl kwb">char</span> peek<span class="hl sym">;</span>
    <span class="hl slc">//print header</span>
   <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%s&quot;</span><span class="hl sym">,</span><span class="hl kwd">fgets_unlocked</span><span class="hl sym">(</span>buffer<span class="hl sym">,</span><span class="hl num">61</span><span class="hl sym">,</span>stdin<span class="hl sym">));</span>
   <span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl kwd">fgets_unlocked</span><span class="hl sym">(</span>buffer<span class="hl sym">+</span>itotal<span class="hl sym">,</span><span class="hl num">10239</span><span class="hl sym">,</span>stdin<span class="hl sym">))</span>
   <span class="hl sym">{</span>
      <span class="hl slc">//if header is next</span>
      <span class="hl kwa">if</span><span class="hl sym">((</span>peek<span class="hl sym">=</span><span class="hl kwd">fgetc_unlocked</span><span class="hl sym">(</span>stdin<span class="hl sym">))==</span><span class="hl str">'&gt;'</span><span class="hl sym">)</span>
      <span class="hl sym">{</span>
         <span class="hl slc">//get total</span>
         itotal<span class="hl sym">+=</span><span class="hl kwd">strlen</span><span class="hl sym">(</span>buffer<span class="hl sym">+</span>itotal<span class="hl sym">);</span>
         <span class="hl slc">//set the reverse indexes</span>
         forward<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
         end<span class="hl sym">=</span>itotal<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">;</span>
         <span class="hl slc">//reverse the buffer and complement it</span>
         <span class="hl kwa">while</span><span class="hl sym">(</span>forward<span class="hl sym">&lt;</span>end<span class="hl sym">)</span>
         <span class="hl sym">{</span>
            <span class="hl kwa">if</span><span class="hl sym">(</span>buffer<span class="hl sym">[</span>forward<span class="hl sym">]==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)++</span>forward<span class="hl sym">;</span>
            <span class="hl kwa">if</span><span class="hl sym">(</span>buffer<span class="hl sym">[</span>end<span class="hl sym">]==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)--</span>end<span class="hl sym">;</span>
            buffer<span class="hl sym">[</span>forward<span class="hl sym">]</span>^<span class="hl sym">=</span>buffer<span class="hl sym">[</span>end<span class="hl sym">];</span>
            buffer<span class="hl sym">[</span>end<span class="hl sym">]</span>^<span class="hl sym">=</span>buffer<span class="hl sym">[</span>forward<span class="hl sym">];</span>
            buffer<span class="hl sym">[</span>forward<span class="hl sym">]</span>^<span class="hl sym">=</span>buffer<span class="hl sym">[</span>end<span class="hl sym">];</span>
            buffer<span class="hl sym">[</span>end<span class="hl sym">]=</span>FtoCOMP<span class="hl sym">[</span>buffer<span class="hl sym">[</span>end<span class="hl sym">]];</span>
            buffer<span class="hl sym">[</span>forward<span class="hl sym">]=</span>FtoCOMP<span class="hl sym">[</span>buffer<span class="hl sym">[</span>forward<span class="hl sym">]];</span>
            <span class="hl sym">++</span>forward<span class="hl sym">;</span>
            <span class="hl sym">--</span>end<span class="hl sym">;</span>
         <span class="hl sym">}</span>
         <span class="hl slc">//print it out</span>
         <span class="hl kwd">puts</span><span class="hl sym">(</span>buffer<span class="hl sym">);</span>
         <span class="hl slc">//print out the next header if there</span>
         <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%c%s&quot;</span><span class="hl sym">,</span><span class="hl str">'&gt;'</span><span class="hl sym">,</span><span class="hl kwd">fgets_unlocked</span><span class="hl sym">(</span>buffer<span class="hl sym">,</span><span class="hl num">10239</span><span class="hl sym">,</span>stdin<span class="hl sym">));</span>
         <span class="hl slc">//reset total</span>
         itotal<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
      <span class="hl kwa">else</span><span class="hl sym">{</span>
         <span class="hl slc">//header is not next, plase character back into stdin</span>
         <span class="hl kwd">ungetc</span><span class="hl sym">(</span>peek<span class="hl sym">,</span>stdin<span class="hl sym">);</span>
         <span class="hl slc">//sum up the total lenght of characters in the buffer</span>
         itotal<span class="hl sym">+=</span><span class="hl kwd">strlen</span><span class="hl sym">(</span>buffer<span class="hl sym">+</span>itotal<span class="hl sym">);</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
   <span class="hl slc">//print last sequence at end of stdin</span>
   itotal<span class="hl sym">+=</span><span class="hl kwd">strlen</span><span class="hl sym">(</span>buffer<span class="hl sym">+</span>itotal<span class="hl sym">);</span>
   <span class="hl slc">//set the reverse indexes</span>
   forward<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
   end<span class="hl sym">=</span>itotal<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">;</span>
   <span class="hl slc">//reverse the buffer and complement it</span>
   <span class="hl kwa">while</span><span class="hl sym">(</span>forward<span class="hl sym">&lt;</span>end<span class="hl sym">)</span>
   <span class="hl sym">{</span>
      <span class="hl kwa">if</span><span class="hl sym">(</span>buffer<span class="hl sym">[</span>forward<span class="hl sym">]==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)++</span>forward<span class="hl sym">;</span>
      <span class="hl kwa">if</span><span class="hl sym">(</span>buffer<span class="hl sym">[</span>end<span class="hl sym">]==</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)--</span>end<span class="hl sym">;</span>
      buffer<span class="hl sym">[</span>forward<span class="hl sym">]</span>^<span class="hl sym">=</span>buffer<span class="hl sym">[</span>end<span class="hl sym">];</span>
      buffer<span class="hl sym">[</span>end<span class="hl sym">]</span>^<span class="hl sym">=</span>buffer<span class="hl sym">[</span>forward<span class="hl sym">];</span>
      buffer<span class="hl sym">[</span>forward<span class="hl sym">]</span>^<span class="hl sym">=</span>buffer<span class="hl sym">[</span>end<span class="hl sym">];</span>
      buffer<span class="hl sym">[</span>end<span class="hl sym">]=</span>FtoCOMP<span class="hl sym">[</span>buffer<span class="hl sym">[</span>end<span class="hl sym">]];</span>
      buffer<span class="hl sym">[</span>forward<span class="hl sym">]=</span>FtoCOMP<span class="hl sym">[</span>buffer<span class="hl sym">[</span>forward<span class="hl sym">]];</span>
      <span class="hl sym">++</span>forward<span class="hl sym">;</span>
      <span class="hl sym">--</span>end<span class="hl sym">;</span>
   <span class="hl sym">}</span>
   <span class="hl kwd">puts</span><span class="hl sym">(</span>buffer<span class="hl sym">);</span>
   <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
