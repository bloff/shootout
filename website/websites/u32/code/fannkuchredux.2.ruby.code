<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># Contributed by Wesley Moxam</span>

<span class="hl kwa">def</span> <span class="hl kwd">fannkuch</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
  sign<span class="hl sym">,</span> maxflips<span class="hl sym">,</span> sum <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span>

  p <span class="hl sym">= [</span><span class="hl kwa">nil</span><span class="hl sym">].</span><span class="hl kwd">concat</span><span class="hl sym">((</span><span class="hl num">1</span><span class="hl sym">..</span>n<span class="hl sym">).</span>to_a<span class="hl sym">)</span>
  q <span class="hl sym">=</span> p<span class="hl sym">.</span>dup
  s <span class="hl sym">=</span> p<span class="hl sym">.</span>dup

  <span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl kwa">true</span><span class="hl sym">)</span>
    <span class="hl slc"># Copy and flip.</span>
    q1 <span class="hl sym">=</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]</span>				<span class="hl slc"># Cache 1st element.</span>
    <span class="hl kwa">if</span> q1 <span class="hl sym">!=</span> <span class="hl num">1</span>
      q <span class="hl sym">=</span> p<span class="hl sym">.</span>dup
      flips <span class="hl sym">=</span> <span class="hl num">1</span>
      <span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl kwa">true</span><span class="hl sym">)</span>
	      qq <span class="hl sym">=</span> q<span class="hl sym">[</span>q1<span class="hl sym">]</span>
	      <span class="hl kwa">if</span> qq <span class="hl sym">==</span> <span class="hl num">1</span>				<span class="hl slc"># ... until 1st element is 1.</span>
	        sum <span class="hl sym">=</span> sum <span class="hl sym">+</span> sign <span class="hl sym">*</span> flips
	        maxflips <span class="hl sym">=</span> flips <span class="hl kwa">if</span> flips <span class="hl sym">&gt;</span> maxflips <span class="hl slc"># New maximum?</span>
	        <span class="hl kwa">break</span>
	      <span class="hl kwa">end</span>
	      q<span class="hl sym">[</span>q1<span class="hl sym">] =</span> q1
	      <span class="hl kwa">if</span> q1 <span class="hl sym">&gt;=</span> <span class="hl num">4</span>
	        i<span class="hl sym">,</span> j <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">,</span> q1 <span class="hl sym">-</span> <span class="hl num">1</span>
	        <span class="hl kwa">begin</span>
            q<span class="hl sym">[</span>i<span class="hl sym">],</span> q<span class="hl sym">[</span>j<span class="hl sym">] =</span> q<span class="hl sym">[</span>j<span class="hl sym">],</span> q<span class="hl sym">[</span>i<span class="hl sym">]</span>
            i <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span>
            j <span class="hl sym">=</span> j <span class="hl sym">-</span> <span class="hl num">1</span>
          <span class="hl kwa">end while</span> i <span class="hl sym">&lt;</span> j
	      <span class="hl kwa">end</span>
	      q1 <span class="hl sym">=</span> qq
        flips <span class="hl sym">=</span> flips <span class="hl sym">+</span> <span class="hl num">1</span>
      <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
    <span class="hl slc"># Permute.</span>
    <span class="hl kwa">if</span> sign <span class="hl sym">==</span> <span class="hl num">1</span>
      <span class="hl slc"># Rotate 1&lt;-2.</span>
      p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">] =</span> p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]</span>
      sign <span class="hl sym">= -</span><span class="hl num">1</span>
    <span class="hl kwa">else</span>
      <span class="hl slc"># Rotate 1&lt;-2 and 1&lt;-2&lt;-3.</span>
      p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">] =</span> p<span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">],</span> p<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">]</span>
      sign <span class="hl sym">=</span> <span class="hl num">1</span>
      <span class="hl num">3</span><span class="hl sym">.</span><span class="hl kwd">upto</span><span class="hl sym">(</span>n<span class="hl sym">)</span> <span class="hl kwa">do</span> <span class="hl sym">|</span>i<span class="hl sym">|</span>
        <span class="hl sym">(</span>s<span class="hl sym">[</span>i<span class="hl sym">] =</span>  s<span class="hl sym">[</span>i<span class="hl sym">] -</span> <span class="hl num">1</span><span class="hl sym">) &amp;&amp;</span> <span class="hl kwa">break unless</span> s<span class="hl sym">[</span>i<span class="hl sym">] ==</span> <span class="hl num">1</span>
	      <span class="hl kwa">return</span> <span class="hl sym">[</span>sum<span class="hl sym">,</span> maxflips<span class="hl sym">]</span> <span class="hl kwa">if</span> i <span class="hl sym">==</span> n 	<span class="hl slc"># Out of permutations.</span>
	      s<span class="hl sym">[</span>i<span class="hl sym">] =</span> i
        <span class="hl slc"># Rotate 1&lt;-...&lt;-i+1.</span>
	      t <span class="hl sym">=</span> p<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]</span>
        <span class="hl num">1</span><span class="hl sym">.</span><span class="hl kwd">upto</span><span class="hl sym">(</span>i<span class="hl sym">)</span> <span class="hl kwa">do</span> <span class="hl sym">|</span>j<span class="hl sym">|</span>
          p<span class="hl sym">[</span>j<span class="hl sym">] =</span> p<span class="hl sym">[</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">]</span>
        <span class="hl kwa">end</span>
        p<span class="hl sym">[</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">] =</span> t
      <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>

n <span class="hl sym">= (</span><span class="hl kwc">ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] ||</span> <span class="hl num">1</span><span class="hl sym">).</span>to_i
sum<span class="hl sym">,</span> flips <span class="hl sym">=</span> <span class="hl kwd">fannkuch</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
printf <span class="hl str">&quot;%d</span><span class="hl esc">\n</span><span class="hl str">Pfannkuchen(%d) = %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> sum<span class="hl sym">,</span> n<span class="hl sym">,</span> flips

