<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Steve Fisher</span>

dirty_seq <span class="hl sym">=</span> <span class="hl kwb">$stdin</span><span class="hl sym">.</span>readlines<span class="hl sym">.</span>join
seq <span class="hl sym">=</span> dirty_seq<span class="hl sym">.</span><span class="hl kwd">gsub</span><span class="hl sym">( /(?:</span>^<span class="hl sym">&gt;.*)?</span>\n<span class="hl sym">/,</span> <span class="hl str">&quot;&quot;</span> <span class="hl sym">)</span>

<span class="hl kwa">def</span> <span class="hl kwd">count</span><span class="hl sym">(</span> rx<span class="hl sym">,</span> str <span class="hl sym">)</span>
  total <span class="hl sym">=</span> <span class="hl num">0</span>
  rx<span class="hl sym">.</span><span class="hl kwd">split</span><span class="hl sym">(</span> <span class="hl str">'|'</span> <span class="hl sym">).</span>each<span class="hl sym">{|</span>s<span class="hl sym">|</span>
    x <span class="hl sym">=</span> s<span class="hl sym">.</span><span class="hl kwd">sub</span><span class="hl sym">(/</span>\<span class="hl sym">[.*</span>\<span class="hl sym">]/,</span> <span class="hl str">&quot; &quot;</span><span class="hl sym">).</span>size
    total <span class="hl sym">+= (</span>str<span class="hl sym">.</span>size <span class="hl sym">-</span> str<span class="hl sym">.</span><span class="hl kwd">gsub</span><span class="hl sym">(/</span><span class="hl slc">#{s}/i, &quot;&quot;).size)/x }</span>
  total
<span class="hl kwa">end</span>

puts <span class="hl sym">[</span>
  <span class="hl str">'agggtaaa|tttaccct'</span><span class="hl sym">,</span>
  <span class="hl str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="hl sym">,</span>
  <span class="hl str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="hl sym">,</span>
  <span class="hl str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="hl sym">,</span>
  <span class="hl str">'agg[act]taaa|ttta[agt]cct'</span><span class="hl sym">,</span>
  <span class="hl str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="hl sym">,</span>
  <span class="hl str">'agggt[cgt]aa|tt[acg]accct'</span><span class="hl sym">,</span>
  <span class="hl str">'agggta[cgt]a|t[acg]taccct'</span><span class="hl sym">,</span>
  <span class="hl str">'agggtaa[cgt]|[acg]ttaccct'</span>
<span class="hl sym">].</span>map<span class="hl sym">{|</span>s<span class="hl sym">|</span> <span class="hl str">&quot;#{ s } #{ count( s, seq ) }&quot;</span> <span class="hl sym">}</span>

puts
puts dirty_seq<span class="hl sym">.</span>size<span class="hl sym">,</span> seq<span class="hl sym">.</span>size

<span class="hl kwd">puts</span><span class="hl sym">(</span>
<span class="hl sym">{</span>
<span class="hl str">'B'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(c|g|t)'</span><span class="hl sym">,</span> <span class="hl str">'D'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(a|g|t)'</span><span class="hl sym">,</span> <span class="hl str">'H'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c|t)'</span><span class="hl sym">,</span> <span class="hl str">'K'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(g|t)'</span><span class="hl sym">,</span>
<span class="hl str">'M'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c)'</span><span class="hl sym">,</span> <span class="hl str">'N'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl sym">,</span> <span class="hl str">'R'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(a|g)'</span><span class="hl sym">,</span> <span class="hl str">'S'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(c|t)'</span><span class="hl sym">,</span>
<span class="hl str">'V'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c|g)'</span><span class="hl sym">,</span> <span class="hl str">'W'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(a|t)'</span><span class="hl sym">,</span> <span class="hl str">'Y'</span> <span class="hl sym">=&gt;</span> <span class="hl str">'(c|t)'</span>
<span class="hl sym">}.</span><span class="hl kwd">inject</span><span class="hl sym">(</span>seq<span class="hl sym">){|</span>s<span class="hl sym">,</span>ary<span class="hl sym">|</span> s<span class="hl sym">.</span><span class="hl kwd">gsub</span><span class="hl sym">( *</span>ary <span class="hl sym">) }.</span>size <span class="hl sym">)</span>

