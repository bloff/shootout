<span class="hl com">/*</span>
<span class="hl com"> * The Great Computer Language Shootout</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * C version contributed by Christoph Bauer</span>
<span class="hl com"> * converted to C++ and modified by Paul Kitchin</span>
<span class="hl com"> */</span>

<span class="hl dir">#include &lt;cmath&gt;</span>
<span class="hl dir">#include &lt;iostream&gt;</span>
<span class="hl dir">#include &lt;iomanip&gt;</span>
<span class="hl dir">#include &lt;sstream&gt;</span>

<span class="hl kwb">struct</span> Vector3
<span class="hl sym">{</span>
   <span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl kwb">double</span> x<span class="hl sym">,</span> <span class="hl kwb">double</span> y<span class="hl sym">,</span> <span class="hl kwb">double</span> z<span class="hl sym">)</span>
      <span class="hl sym">:</span>
      <span class="hl kwd">x</span><span class="hl sym">(</span>x<span class="hl sym">),</span>
      <span class="hl kwd">y</span><span class="hl sym">(</span>y<span class="hl sym">),</span>
      <span class="hl kwd">z</span><span class="hl sym">(</span>z<span class="hl sym">)</span>
   <span class="hl sym">{</span>
   <span class="hl sym">}</span>
   <span class="hl kwb">double</span> x<span class="hl sym">;</span>
   <span class="hl kwb">double</span> y<span class="hl sym">;</span>
   <span class="hl kwb">double</span> z<span class="hl sym">;</span>
<span class="hl sym">};</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl sym">&amp;</span> <span class="hl kwc">operator</span><span class="hl sym">-=(</span>Vector3 <span class="hl sym">&amp;</span> lhs<span class="hl sym">,</span> Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   lhs<span class="hl sym">.</span>x <span class="hl sym">-=</span> rhs<span class="hl sym">.</span>x<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>y <span class="hl sym">-=</span> rhs<span class="hl sym">.</span>y<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>z <span class="hl sym">-=</span> rhs<span class="hl sym">.</span>z<span class="hl sym">;</span>
   <span class="hl kwa">return</span> lhs<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl kwc">operator</span><span class="hl sym">-(</span>Vector3 lhs<span class="hl sym">,</span> Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl sym">(</span>lhs <span class="hl sym">-=</span> rhs<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl kwc">operator</span><span class="hl sym">-(</span>Vector3 lhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl kwd">Vector3</span><span class="hl sym">(-</span>lhs<span class="hl sym">.</span>x<span class="hl sym">, -</span>lhs<span class="hl sym">.</span>y<span class="hl sym">, -</span>lhs<span class="hl sym">.</span>z<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl sym">&amp;</span> <span class="hl kwc">operator</span><span class="hl sym">+=(</span>Vector3 <span class="hl sym">&amp;</span> lhs<span class="hl sym">,</span> Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   lhs<span class="hl sym">.</span>x <span class="hl sym">+=</span> rhs<span class="hl sym">.</span>x<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>y <span class="hl sym">+=</span> rhs<span class="hl sym">.</span>y<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>z <span class="hl sym">+=</span> rhs<span class="hl sym">.</span>z<span class="hl sym">;</span>
   <span class="hl kwa">return</span> lhs<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl kwc">operator</span><span class="hl sym">+(</span>Vector3 lhs<span class="hl sym">,</span> Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl sym">(</span>lhs <span class="hl sym">+=</span> rhs<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl sym">&amp;</span> <span class="hl kwc">operator</span><span class="hl sym">*=(</span>Vector3 <span class="hl sym">&amp;</span> lhs<span class="hl sym">,</span> <span class="hl kwb">double</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   lhs<span class="hl sym">.</span>x <span class="hl sym">*=</span> rhs<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>y <span class="hl sym">*=</span> rhs<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>z <span class="hl sym">*=</span> rhs<span class="hl sym">;</span>
   <span class="hl kwa">return</span> lhs<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl kwc">operator</span><span class="hl sym">*(</span>Vector3 lhs<span class="hl sym">,</span> <span class="hl kwb">double</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl sym">(</span>lhs <span class="hl sym">*=</span> rhs<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl kwc">operator</span><span class="hl sym">*(</span><span class="hl kwb">double</span> lhs<span class="hl sym">,</span> Vector3 rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl sym">(</span>rhs <span class="hl sym">*=</span> lhs<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl sym">&amp;</span> <span class="hl kwc">operator</span><span class="hl sym">/=(</span>Vector3 <span class="hl sym">&amp;</span> lhs<span class="hl sym">,</span> <span class="hl kwb">double</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   lhs<span class="hl sym">.</span>x <span class="hl sym">/=</span> rhs<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>y <span class="hl sym">/=</span> rhs<span class="hl sym">;</span>
   lhs<span class="hl sym">.</span>z <span class="hl sym">/=</span> rhs<span class="hl sym">;</span>
   <span class="hl kwa">return</span> lhs<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> Vector3 <span class="hl kwc">operator</span><span class="hl sym">/(</span>Vector3 lhs<span class="hl sym">,</span> <span class="hl kwb">double</span> rhs<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl sym">(</span>lhs <span class="hl sym">/=</span> rhs<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> <span class="hl kwb">double</span> <span class="hl kwd">magnitude_squared</span><span class="hl sym">(</span>Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> vector<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl sym">((</span>vector<span class="hl sym">.</span>x <span class="hl sym">*</span> vector<span class="hl sym">.</span>x<span class="hl sym">) + (</span>vector<span class="hl sym">.</span>y <span class="hl sym">*</span> vector<span class="hl sym">.</span>y<span class="hl sym">)) + (</span>vector<span class="hl sym">.</span>z <span class="hl sym">*</span> vector<span class="hl sym">.</span>z<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">inline</span> <span class="hl kwb">double</span> <span class="hl kwd">magnitude</span><span class="hl sym">(</span>Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> vector<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> std<span class="hl sym">::</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span><span class="hl kwd">magnitude_squared</span><span class="hl sym">(</span>vector<span class="hl sym">));</span>
<span class="hl sym">}</span>

<span class="hl kwc">class</span> Planet
<span class="hl sym">{</span>

   <span class="hl kwc">public</span><span class="hl sym">:</span>

      <span class="hl kwd">Planet</span><span class="hl sym">(</span>Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> position<span class="hl sym">,</span> Vector3 <span class="hl kwb">const</span> <span class="hl sym">&amp;</span> velocity<span class="hl sym">,</span> <span class="hl kwb">double</span> mass<span class="hl sym">)</span>
         <span class="hl sym">:</span>
         <span class="hl kwd">position</span><span class="hl sym">(</span>position<span class="hl sym">),</span>
         <span class="hl kwd">velocity</span><span class="hl sym">(</span>velocity<span class="hl sym">),</span>
         <span class="hl kwd">mass</span><span class="hl sym">(</span>mass<span class="hl sym">)</span>
      <span class="hl sym">{</span>
      <span class="hl sym">}</span>

      Vector3 position<span class="hl sym">;</span>
      Vector3 velocity<span class="hl sym">;</span>
      <span class="hl kwb">double</span> mass<span class="hl sym">;</span>

<span class="hl sym">};</span>

<span class="hl kwc">class</span> Bodies
<span class="hl sym">{</span>

   <span class="hl kwc">public</span><span class="hl sym">:</span>

      <span class="hl kwb">static unsigned int const</span> number_of_bodies <span class="hl sym">=</span> <span class="hl num">5</span><span class="hl sym">;</span>
      <span class="hl kwb">static double const</span> days_per_year <span class="hl sym">=</span> <span class="hl num">365.24</span><span class="hl sym">;</span>
      <span class="hl kwb">static double const</span> solar_mass <span class="hl sym">=</span> <span class="hl num">4</span> <span class="hl sym">*</span> M_PI <span class="hl sym">*</span> M_PI<span class="hl sym">;</span>
      <span class="hl kwb">static</span> Planet bodies<span class="hl sym">[</span>number_of_bodies<span class="hl sym">];</span>


      <span class="hl kwb">static void</span> <span class="hl kwd">advance</span><span class="hl sym">(</span><span class="hl kwb">double</span> delta_time<span class="hl sym">)</span>
      <span class="hl sym">{</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span>Planet <span class="hl sym">*</span> planet1 <span class="hl sym">=</span> bodies<span class="hl sym">;</span> planet1 <span class="hl sym">!=</span> bodies <span class="hl sym">+</span> number_of_bodies<span class="hl sym">; ++</span>planet1<span class="hl sym">)</span>
         <span class="hl sym">{</span>
            <span class="hl kwa">for</span> <span class="hl sym">(</span>Planet <span class="hl sym">*</span> planet2 <span class="hl sym">=</span> planet1 <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> planet2 <span class="hl sym">!=</span> bodies <span class="hl sym">+</span> number_of_bodies<span class="hl sym">; ++</span>planet2<span class="hl sym">)</span>
            <span class="hl sym">{</span>
               Vector3 difference <span class="hl sym">=</span> planet1<span class="hl sym">-&gt;</span>position <span class="hl sym">-</span> planet2<span class="hl sym">-&gt;</span>position<span class="hl sym">;</span>
               <span class="hl kwb">double</span> distance_squared <span class="hl sym">=</span> <span class="hl kwd">magnitude_squared</span><span class="hl sym">(</span>difference<span class="hl sym">);</span>
               <span class="hl kwb">double</span> distance <span class="hl sym">=</span> std<span class="hl sym">::</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>distance_squared<span class="hl sym">);</span>
               <span class="hl kwb">double</span> magnitude <span class="hl sym">=</span> delta_time <span class="hl sym">/ (</span>distance <span class="hl sym">*</span> distance_squared<span class="hl sym">);</span>
               <span class="hl kwb">double</span> planet2_mass_magnitude <span class="hl sym">=</span> planet2<span class="hl sym">-&gt;</span>mass <span class="hl sym">*</span> magnitude<span class="hl sym">;</span>
               <span class="hl kwb">double</span> planet1_mass_magnitude <span class="hl sym">=</span> planet1<span class="hl sym">-&gt;</span>mass <span class="hl sym">*</span> magnitude<span class="hl sym">;</span>
               planet1<span class="hl sym">-&gt;</span>velocity <span class="hl sym">-=</span> difference <span class="hl sym">*</span> planet2_mass_magnitude<span class="hl sym">;</span>
               planet2<span class="hl sym">-&gt;</span>velocity <span class="hl sym">+=</span> difference <span class="hl sym">*</span> planet1_mass_magnitude<span class="hl sym">;</span>
            <span class="hl sym">}</span>
         <span class="hl sym">}</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span>Planet <span class="hl sym">*</span> planet <span class="hl sym">=</span> bodies<span class="hl sym">;</span> planet <span class="hl sym">!=</span> bodies <span class="hl sym">+</span> number_of_bodies<span class="hl sym">; ++</span>planet<span class="hl sym">)</span>
         <span class="hl sym">{</span>
            planet<span class="hl sym">-&gt;</span>position <span class="hl sym">+=</span> delta_time <span class="hl sym">*</span> planet<span class="hl sym">-&gt;</span>velocity<span class="hl sym">;</span>
         <span class="hl sym">}</span>
      <span class="hl sym">}</span>

      <span class="hl kwb">static double</span> <span class="hl kwd">energy</span><span class="hl sym">()</span>
      <span class="hl sym">{</span>
         <span class="hl kwb">double</span> total_energy <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span>Planet <span class="hl sym">*</span> planet1 <span class="hl sym">=</span> bodies<span class="hl sym">;</span> planet1 <span class="hl sym">!=</span> bodies <span class="hl sym">+</span> number_of_bodies<span class="hl sym">; ++</span>planet1<span class="hl sym">)</span>
         <span class="hl sym">{</span>
            total_energy <span class="hl sym">+=</span> <span class="hl num">0.5</span> <span class="hl sym">*</span> planet1<span class="hl sym">-&gt;</span>mass <span class="hl sym">*</span> <span class="hl kwd">magnitude_squared</span><span class="hl sym">(</span>planet1<span class="hl sym">-&gt;</span>velocity<span class="hl sym">);</span>
            <span class="hl kwa">for</span> <span class="hl sym">(</span>Planet <span class="hl sym">*</span> planet2 <span class="hl sym">=</span> planet1 <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> planet2 <span class="hl sym">!=</span> bodies <span class="hl sym">+</span> number_of_bodies<span class="hl sym">; ++</span>planet2<span class="hl sym">)</span>
            <span class="hl sym">{</span>
               Vector3 difference <span class="hl sym">=</span> planet1<span class="hl sym">-&gt;</span>position <span class="hl sym">-</span> planet2<span class="hl sym">-&gt;</span>position<span class="hl sym">;</span>
               <span class="hl kwb">double</span> distance <span class="hl sym">=</span> <span class="hl kwd">magnitude</span><span class="hl sym">(</span>difference<span class="hl sym">);</span>
               total_energy <span class="hl sym">-= (</span>planet1<span class="hl sym">-&gt;</span>mass <span class="hl sym">*</span> planet2<span class="hl sym">-&gt;</span>mass<span class="hl sym">) /</span> distance<span class="hl sym">;</span>
            <span class="hl sym">}</span>
         <span class="hl sym">}</span>
         <span class="hl kwa">return</span> total_energy<span class="hl sym">;</span>
      <span class="hl sym">}</span>

      <span class="hl kwb">static void</span> <span class="hl kwd">offset_momentum</span><span class="hl sym">()</span>
      <span class="hl sym">{</span>
         Vector3 <span class="hl kwd">momentum</span><span class="hl sym">(</span>bodies<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">].</span>velocity <span class="hl sym">*</span> bodies<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">].</span>mass<span class="hl sym">);</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span>Planet <span class="hl sym">*</span> planet <span class="hl sym">=</span> bodies <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">;</span> planet <span class="hl sym">!=</span> bodies <span class="hl sym">+</span> number_of_bodies<span class="hl sym">; ++</span>planet<span class="hl sym">)</span>
         <span class="hl sym">{</span>
            momentum <span class="hl sym">+=</span> planet<span class="hl sym">-&gt;</span>velocity <span class="hl sym">*</span> planet<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
         <span class="hl sym">}</span>
         bodies<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>velocity <span class="hl sym">= -</span>momentum <span class="hl sym">/</span> solar_mass<span class="hl sym">;</span>
      <span class="hl sym">}</span>

<span class="hl sym">};</span>

Planet Bodies<span class="hl sym">::</span>bodies<span class="hl sym">[</span><span class="hl num">5</span><span class="hl sym">] =</span>
<span class="hl sym">{</span>
   <span class="hl kwd">Planet</span><span class="hl sym">(</span><span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span> <span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span> solar_mass<span class="hl sym">),</span>
   <span class="hl kwd">Planet</span><span class="hl sym">(</span><span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">4.84143144246472090e+00</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">1.16032004402742839e+00</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">1.03622044471123109e-01</span><span class="hl sym">),</span>
         <span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">1.66007664274403694e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl num">7.69901118419740425e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">6.90460016972063023e-05</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">),</span>
         <span class="hl num">9.54791938424326609e-04</span> <span class="hl sym">*</span> solar_mass<span class="hl sym">),</span>
   <span class="hl kwd">Planet</span><span class="hl sym">(</span><span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">8.34336671824457987e+00</span><span class="hl sym">,</span>
         <span class="hl num">4.12479856412430479e+00</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">4.03523417114321381e-01</span><span class="hl sym">),</span>
         <span class="hl kwd">Vector3</span><span class="hl sym">(-</span><span class="hl num">2.76742510726862411e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl num">4.99852801234917238e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl num">2.30417297573763929e-05</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">),</span>
         <span class="hl num">2.85885980666130812e-04</span> <span class="hl sym">*</span> solar_mass<span class="hl sym">),</span>
   <span class="hl kwd">Planet</span><span class="hl sym">(</span><span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">1.28943695621391310e+01</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">1.51111514016986312e+01</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">2.23307578892655734e-01</span><span class="hl sym">),</span>
         <span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">2.96460137564761618e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl num">2.37847173959480950e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">2.96589568540237556e-05</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">),</span>
         <span class="hl num">4.36624404335156298e-05</span> <span class="hl sym">*</span> solar_mass<span class="hl sym">),</span>
   <span class="hl kwd">Planet</span><span class="hl sym">(</span><span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">1.53796971148509165e+01</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">2.59193146099879641e+01</span><span class="hl sym">,</span>
         <span class="hl num">1.79258772950371181e-01</span><span class="hl sym">),</span>
         <span class="hl kwd">Vector3</span><span class="hl sym">(</span><span class="hl num">2.68067772490389322e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl num">1.62824170038242295e-03</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">9.51592254519715870e-05</span> <span class="hl sym">*</span> days_per_year<span class="hl sym">),</span>
         <span class="hl num">5.15138902046611451e-05</span> <span class="hl sym">*</span> solar_mass<span class="hl sym">)</span>
<span class="hl sym">};</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">char</span> <span class="hl sym">* *</span> argv<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span>argc <span class="hl sym">!=</span> <span class="hl num">2</span><span class="hl sym">)</span>
   <span class="hl sym">{</span>
      std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;usage: nbody &lt;n&gt;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
      <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
   <span class="hl kwb">unsigned int</span> n<span class="hl sym">;</span>
   <span class="hl sym">{</span>
      std<span class="hl sym">::</span>stringstream <span class="hl kwd">convertor</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]);</span>
      <span class="hl kwa">if</span> <span class="hl sym">(!(</span>convertor <span class="hl sym">&gt;&gt;</span> n<span class="hl sym">) || !</span>convertor<span class="hl sym">.</span><span class="hl kwd">eof</span><span class="hl sym">())</span>
      <span class="hl sym">{</span>
         std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;usage: nbody &lt;n&gt;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
         std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;   n must be an integer</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
         <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>

   Bodies<span class="hl sym">::</span><span class="hl kwd">offset_momentum</span><span class="hl sym">();</span>

   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> std<span class="hl sym">::</span><span class="hl kwd">setprecision</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) &lt;&lt;</span> std<span class="hl sym">::</span><span class="hl kwd">setiosflags</span><span class="hl sym">(</span>std<span class="hl sym">::</span>ios_base<span class="hl sym">::</span>fixed<span class="hl sym">) &lt;&lt;</span> Bodies<span class="hl sym">::</span><span class="hl kwd">energy</span><span class="hl sym">() &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>

   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">unsigned int</span> i <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> i <span class="hl sym">&lt;=</span> n<span class="hl sym">; ++</span>i<span class="hl sym">)</span>
   <span class="hl sym">{</span>
      Bodies<span class="hl sym">::</span><span class="hl kwd">advance</span><span class="hl sym">(</span><span class="hl num">0.01</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>

   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> Bodies<span class="hl sym">::</span><span class="hl kwd">energy</span><span class="hl sym">() &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
