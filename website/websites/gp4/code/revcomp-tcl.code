<span class="hl slc">#!/usr/bin/tclsh</span>
<span class="hl slc"># $Id: revcomp-tcl.code,v 1.48 2007-11-15 07:45:38 igouy-guest Exp $</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># reverse-complement benchmark for shootout.alioth.debian.org</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Michael Schlenker &lt;mic42&#64;users.sourceforge.net&gt;</span>
<span class="hl slc">#</span>
<span class="hl kwa">proc</span> main <span class="hl sym">{} {</span>
    <span class="hl kwa">set</span> acc <span class="hl str">&quot;&quot;</span>
    <span class="hl kwa">while</span> <span class="hl sym">{[</span><span class="hl kwa">gets</span> stdin line<span class="hl sym">] != -</span><span class="hl num">1</span><span class="hl sym">} {</span>
	<span class="hl kwa">if</span> <span class="hl sym">{[</span><span class="hl kwa">string</span> match <span class="hl str">&quot;&gt;*&quot;</span> <span class="hl kwb">$line</span><span class="hl sym">]} {</span>
	    <span class="hl kwa">if</span> <span class="hl sym">{[</span><span class="hl kwa">string</span> length <span class="hl kwb">$acc</span><span class="hl sym">]} {</span>
		put_reverse_fasta <span class="hl kwb">$head $acc</span>
		<span class="hl kwa">set</span> acc <span class="hl str">&quot;&quot;</span>
	    <span class="hl sym">}</span>
	    <span class="hl kwa">set</span> head <span class="hl kwb">$line</span>
	<span class="hl sym">}</span> else <span class="hl sym">{</span>
	    <span class="hl kwa">append</span> acc <span class="hl kwb">$line</span>
	<span class="hl sym">}</span>
    <span class="hl sym">}</span>
    put_reverse_fasta <span class="hl kwb">$head $acc</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> put_reverse_fasta <span class="hl sym">{</span>head body<span class="hl sym">} {</span>
    <span class="hl kwa">set</span> l <span class="hl sym">[</span><span class="hl kwa">string</span> length <span class="hl kwb">$body</span><span class="hl sym">]</span>
    <span class="hl kwa">set</span> body <span class="hl sym">[</span><span class="hl kwa">string</span> map <span class="hl sym">{</span>A T a T C G c G G C g C T A t A U A u A M K m K R Y \
	    r Y Y R y R K M k M V B v B H D h D D H d H B V b V<span class="hl sym">}</span> <span class="hl kwb">$body</span><span class="hl sym">]</span>
    <span class="hl kwa">while</span> <span class="hl sym">{</span><span class="hl kwb">$l</span><span class="hl sym">} {</span><span class="hl kwa">append</span> out <span class="hl sym">[</span><span class="hl kwa">string</span> index <span class="hl kwb">$body</span> <span class="hl sym">[</span><span class="hl kwa">incr</span> l <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">]]}</span>
    <span class="hl kwa">incr</span> l <span class="hl sym">-</span><span class="hl num">1</span>
    <span class="hl kwa">set</span> body <span class="hl kwb">$head</span>
    <span class="hl kwa">while</span> <span class="hl sym">{[</span><span class="hl kwa">incr</span> l<span class="hl sym">] &lt; [</span><span class="hl kwa">string</span> length <span class="hl kwb">$out</span><span class="hl sym">]} {</span>
	<span class="hl kwa">append</span> body \n<span class="hl sym">[</span><span class="hl kwa">string</span> range <span class="hl kwb">$out $l</span> <span class="hl sym">[</span><span class="hl kwa">incr</span> l <span class="hl num">59</span><span class="hl sym">]]</span>
    <span class="hl sym">}</span>
    <span class="hl kwa">puts</span> <span class="hl kwb">$body</span>
<span class="hl sym">}</span>

main
