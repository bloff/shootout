BUILD COMMANDS FOR: knucleotide.stx

Wed Jun 13 17:34:33 PDT 2007

( if [ ! -d knucleotide.stx_run ] ; then mkdir knucleotide.stx_run ; fi)
cp /home/dunham/gp4/shootout/bench/knucleotide/knucleotide.stx knucleotide.stx_run/knucleotide.stx
cp ../Make.proto knucleotide.stx_run
( cd knucleotide.stx_run ; ../../../../bin/split_file.bash knucleotide.stx ; /opt/stx/rules/stmkmf /opt/stx ; make )
splitfile  Tests.st
Making makefile ...
stmkmf: setup using /opt/stx ...
generate first pre-Makefile ...
generate second pre-Makefile ...
making makefile for linux-elf/opt-cs-oc  ...
make[5]: Nothing to be done for `additionalMakefiles'.
#cp /opt/stx/rules/Makefile.proto Makefile
generate actual version of Makefile ...
making makefile for linux-elf/opt-cs-oc  ...
make[5]: Nothing to be done for `additionalMakefiles'.
#cp /opt/stx/rules/Makefile.proto Makefile
/opt/stx/stc/stc -CC="gcc" -I/opt/stx/include -I/opt/stx/include -H/opt/stx/include   +sharedLibCode -staticMethods  +optinline  +optcontext +optmath +inlineMath2 +inlineNew    -I/opt/stx/include -DLINUX  -DELF  -fPIC -O -O3 -fomit-frame-pointer -march=pentium4   -DDEBUG -Di386 -DELF       -CC="gcc" -S Tests.st
make --no-print-directory APPLICATION \
		    TARGET=knucleotide.stx_run \
		    APPLICATION_CLASSES="Tests" \
		    APPLICATION_OBJS="Tests.o" \
		    LIBLIST="libbasic" \
		    LIBOBJS="/opt/stx/libbasic/libbasic.so" \
		    LINK_LIBOBJS="libbasic.so" \
		    STARTUP_CLASS="Tests" \
		    STARTUP_SELECTOR="main" \
		    SYSLIBS="" 
make --no-print-directory main.o \
		STARTUP_CLASS="Tests" \
		STARTUP_SELECTOR="main" \
		MAIN_DEFINES=""
gcc -o main.o -c -I/opt/stx/include -DLINUX   -fPIC -O -O3 -fomit-frame-pointer -march=pentium4 -DDEBUG -Di386 -DELF       \
		-DSTARTUP_CLASS="\"Tests\"" \
		-DSTARTUP_SELECTOR="\"main\"" \
		-DCONFIGURATION_STRING="\""linux-elf/opt-cs-oc:"\"" \
		-DBUILD_DATE="\"`date '+%Y-%m-%d %R %Z'`\"" \
		-I/opt/stx/include -I. /opt/stx/librun/main.c
make --no-print-directory linkTarget \
		LIBLIST="libbasic" \
		LIBOBJS="/opt/stx/libbasic/libbasic.so" \
		LINK_LIBOBJS="libbasic.so" \
		TARGET=knucleotide.stx_run \
		ADDITIONAL_CLASSES="Tests" \
		ADDITIONAL_OBJS="Tests.o" \
		ADDITIONAL_LINK_OBJS=""
if [ -f /opt/stx/librun/symbolAddress.h.timestamp ]; then \
	    make --no-print-directory reallyCheckSymbolsInLibrunAreUpToDate; \
	fi
Making librun for changed symbolList...
(cd /opt/stx/librun; make --no-print-directory)
compiling new symbols only (this is a binary distribution)
make --no-print-directory linuxSharedLib LIB=librun.so
../rules/stdRules:1976: warning: overriding commands for target `librun.so'
Make.proto:696: warning: ignoring old commands for target `librun.so'
gcc -nostdlib -shared -Llib -L/usr/local/lib -L/usr/X11/lib -Wl,-R.,-Rlib,-R/opt/stx/`cat ../RELEASE`/lib/lib,-R/usr/local/lib/stx`cat ../RELEASE` -o librun.so errhandler.o init.o classes.o lookup.o backtrace.o new.o send.o process.o stack.o char.o float.o string.o symbol.o globals.o util.o interrupt.o statistic.o interpret.o plugin.o jinterpret.o mcompiler.o memory.o stxmain.o md5.o symlist.o malloc.o  asmhelp.o snapshot.o  
/usr/lib/gcc/i686-pc-linux-gnu/4.1.2/../../../../i686-pc-linux-gnu/bin/ld: warning: creating a DT_TEXTREL in object.
rm -f librun.a
ar r librun.a errhandler.o init.o classes.o lookup.o backtrace.o new.o send.o process.o stack.o char.o float.o string.o symbol.o globals.o util.o interrupt.o statistic.o interpret.o plugin.o jinterpret.o mcompiler.o memory.o stxmain.o md5.o symlist.o malloc.o  asmhelp.o snapshot.o 
ar: creating librun.a
ranlib librun.a
Making modulList (PACK =  ) ...
LIBLIST= libbasic
ADDITIONAL_CLASSES= Tests
making modulList
   included class libraries:
     libbasic
   included additional (user) classes:
     Tests

making modulList.c from modulList.stc
done with classListEdit
done with modulList.c
gcc -c -I/opt/stx/include -DLINUX  -DELF  -fPIC -O -O3 -fomit-frame-pointer -march=pentium4   -DDEBUG -Di386 -DELF       -I/opt/stx/include modulList.c
done with modulList.o
linking ...
  symlinking to /opt/stx/libbasic/libbasic.so for linkage ...
  symlinking to /opt/stx/librun/librun.so for linkage ...
gcc  -Llib -L/usr/local/lib -L/usr/X11/lib -Wl,-R.,-Rlib,-R/opt/stx/`cat /opt/stx/RELEASE`/lib/lib,-R/usr/local/lib/stx`cat /opt/stx/RELEASE` -o knucleotide.stx_run \
		   modulList.o main.o \
		   \
		  libbasic.so Tests.o \
		  librun.so \
		   -lm    
touch knucleotide.stx_run

=================================================================
COMMAND LINE (%A is single numeric argument):

 knucleotide.stx_run/knucleotide.stx_run -- %A


PROGRAM OUTPUT
==============
A 30.296
T 30.155
C 19.796
G 19.752

AA 9.177
TA 9.134
AT 9.133
TT 9.094
CA 6.001
AC 6.000
AG 5.986
GA 5.984
TC 5.971
CT 5.970
GT 5.957
TG 5.956
CC 3.916
GC 3.909
CG 3.908
GG 3.902

58888	GGT
17865	GGTA
1893	GGTATT
36	GGTATTTTAATT
36	GGTATTTTAATTTATAGT
