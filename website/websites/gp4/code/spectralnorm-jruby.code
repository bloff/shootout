<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># Contributed by Sokolov Yura</span>

<span class="hl kwa">def</span> <span class="hl kwd">eval_A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">)</span>
	<span class="hl kwa">return</span> <span class="hl num">1.0</span><span class="hl sym">/((</span>i<span class="hl sym">+</span>j<span class="hl sym">)*(</span>i<span class="hl sym">+</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)/</span><span class="hl num">2</span><span class="hl sym">+</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span>u<span class="hl sym">)</span>
        v<span class="hl sym">,</span> i <span class="hl sym">=</span> <span class="hl kwa">nil</span><span class="hl sym">,</span> <span class="hl kwa">nil</span>
	<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">..</span>u<span class="hl sym">.</span>length-1<span class="hl sym">).</span>collect <span class="hl sym">{ |</span>i<span class="hl sym">|</span>
                v <span class="hl sym">=</span> <span class="hl num">0</span>
		<span class="hl kwa">for</span> j <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span>u<span class="hl sym">.</span>length-1
			v <span class="hl sym">+=</span> <span class="hl kwd">eval_A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">]</span>
                <span class="hl kwa">end</span>
                v
        <span class="hl sym">}</span>
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span>u<span class="hl sym">)</span>
	v<span class="hl sym">,</span> i <span class="hl sym">=</span> <span class="hl kwa">nil</span><span class="hl sym">,</span> <span class="hl kwa">nil</span>
	<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">..</span>u<span class="hl sym">.</span>length-1<span class="hl sym">).</span>collect<span class="hl sym">{|</span>i<span class="hl sym">|</span>
                v <span class="hl sym">=</span> <span class="hl num">0</span>
		<span class="hl kwa">for</span> j <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span>u<span class="hl sym">.</span>length-1
			v <span class="hl sym">+=</span> <span class="hl kwd">eval_A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">]</span>
                <span class="hl kwa">end</span>
                v
        <span class="hl sym">}</span>
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>u<span class="hl sym">)</span>
	<span class="hl kwa">return</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span><span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span>u<span class="hl sym">))</span>
<span class="hl kwa">end</span>

n <span class="hl sym">=</span> <span class="hl kwc">ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>to_i
u<span class="hl sym">=[</span><span class="hl num">1</span><span class="hl sym">]*</span>n
<span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">1</span><span class="hl sym">.</span><span class="hl num">.10</span>
        v<span class="hl sym">=</span><span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>u<span class="hl sym">)</span>
        u<span class="hl sym">=</span><span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>v<span class="hl sym">)</span>
<span class="hl kwa">end</span>
vBv<span class="hl sym">=</span><span class="hl num">0</span>
vv<span class="hl sym">=</span><span class="hl num">0</span>
<span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span>n-1
        vBv <span class="hl sym">+=</span> u<span class="hl sym">[</span>i<span class="hl sym">]*</span>v<span class="hl sym">[</span>i<span class="hl sym">]</span>
        vv <span class="hl sym">+=</span> v<span class="hl sym">[</span>i<span class="hl sym">]*</span>v<span class="hl sym">[</span>i<span class="hl sym">]</span>
<span class="hl kwa">end</span>
print <span class="hl str">&quot;%0.9f&quot;</span> % <span class="hl sym">(</span>Math<span class="hl sym">.</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>vBv<span class="hl sym">/</span>vv<span class="hl sym">)),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>

