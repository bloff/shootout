<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://shootout.alioth.debian.org/</span>
<span class="hl com">    contributed by Paolo Bonzini *&quot;</span><span class="hl sym">!</span>

<span class="hl sym">!</span>Array methodsFor<span class="hl sym">:</span> <span class="hl str">'benchmarking'</span><span class="hl sym">!</span>
multiplyAtAv
   <span class="hl sym">^(</span><span class="hl kwa">self</span> multiplyAv<span class="hl sym">)</span> multiplyAtv<span class="hl sym">! !</span>

<span class="hl sym">!</span>Array methodsFor<span class="hl sym">:</span> <span class="hl str">'benchmarking'</span><span class="hl sym">!</span>
multiplyAtv
   <span class="hl sym">|</span> n atv sum <span class="hl sym">|</span>
   n <span class="hl sym">:=</span> <span class="hl kwa">self</span> size<span class="hl sym">.</span>
   atv <span class="hl sym">:=</span> Array new<span class="hl sym">:</span> n<span class="hl sym">.</span>
   <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>i<span class="hl sym">|</span>
      sum <span class="hl sym">:=</span> <span class="hl num">0.0</span>d<span class="hl sym">.</span>
      <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>j<span class="hl sym">|</span>
         sum <span class="hl sym">:=</span> sum <span class="hl sym">+ ((</span>j matrixA<span class="hl sym">:</span> i<span class="hl sym">) * (</span><span class="hl kwa">self</span> at<span class="hl sym">:</span> j<span class="hl sym">)) ].</span>
      atv at<span class="hl sym">:</span> i put<span class="hl sym">:</span> sum<span class="hl sym">].</span>
   <span class="hl sym">^</span>atv<span class="hl sym">! !</span>

<span class="hl sym">!</span>Array methodsFor<span class="hl sym">:</span> <span class="hl str">'benchmarking'</span><span class="hl sym">!</span>
multiplyAv
   <span class="hl sym">|</span> n av sum <span class="hl sym">|</span>
   n <span class="hl sym">:=</span> <span class="hl kwa">self</span> size<span class="hl sym">.</span>
   av <span class="hl sym">:=</span> Array new<span class="hl sym">:</span> n<span class="hl sym">.</span>
   <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>i<span class="hl sym">|</span>
      sum <span class="hl sym">:=</span> <span class="hl num">0.0</span>d<span class="hl sym">.</span>
      <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>j<span class="hl sym">|</span>
         sum <span class="hl sym">:=</span> sum <span class="hl sym">+ ((</span>i matrixA<span class="hl sym">:</span> j<span class="hl sym">) * (</span><span class="hl kwa">self</span> at<span class="hl sym">:</span> j<span class="hl sym">)) ].</span>
      av at<span class="hl sym">:</span> i put<span class="hl sym">:</span> sum<span class="hl sym">].</span>
   <span class="hl sym">^</span>av<span class="hl sym">! !</span>


<span class="hl sym">!</span>SmallInteger methodsFor<span class="hl sym">:</span> <span class="hl str">'benchmarking'</span><span class="hl sym">!</span>
matrixA<span class="hl sym">:</span> anInteger
   <span class="hl sym">^</span><span class="hl num">1.0</span>d0 <span class="hl sym">/ ((</span><span class="hl kwa">self</span> <span class="hl sym">+</span> anInteger <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) * (</span><span class="hl kwa">self</span> <span class="hl sym">+</span> anInteger <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) /</span><span class="hl num">2</span>  <span class="hl sym">+</span> <span class="hl kwa">self</span><span class="hl sym">)! !</span>


<span class="hl sym">!</span>Tests class methodsFor<span class="hl sym">:</span> <span class="hl str">'benchmarking'</span><span class="hl sym">!</span>
spectralnorm<span class="hl sym">:</span> n
   <span class="hl sym">|</span> u v vBv vv <span class="hl sym">|</span>
   u <span class="hl sym">:=</span> Array new<span class="hl sym">:</span> n withAll<span class="hl sym">:</span> <span class="hl num">1.0</span>d0<span class="hl sym">.</span>
   <span class="hl num">10</span> timesRepeat<span class="hl sym">:</span>
      <span class="hl sym">[</span>v <span class="hl sym">:=</span> u multiplyAtAv<span class="hl sym">.</span>
       u <span class="hl sym">:=</span> v multiplyAtAv<span class="hl sym">].</span>
   vBv <span class="hl sym">:=</span> <span class="hl num">0.0</span>d0<span class="hl sym">.</span>
   vv <span class="hl sym">:=</span> <span class="hl num">0.0</span>d0<span class="hl sym">.</span>
   <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">:</span>
      <span class="hl sym">[:</span>i <span class="hl sym">|</span>
       vBv <span class="hl sym">:=</span> vBv <span class="hl sym">+ ((</span>u at<span class="hl sym">:</span> i<span class="hl sym">) * (</span>v at<span class="hl sym">:</span> i<span class="hl sym">)).</span>
       vv <span class="hl sym">:=</span> vv <span class="hl sym">+ ((</span>v at<span class="hl sym">:</span> i<span class="hl sym">) * (</span>v at<span class="hl sym">:</span> i<span class="hl sym">))].</span>
   <span class="hl sym">^(</span>vBv <span class="hl sym">/</span> vv<span class="hl sym">)</span> sqrt<span class="hl sym">! !</span>


<span class="hl sym">!</span>Tests class methodsFor<span class="hl sym">:</span> <span class="hl str">'benchmark scripts'</span><span class="hl sym">!</span>
spectralnorm2
   <span class="hl kwa">self</span> stdout print<span class="hl sym">: (</span><span class="hl kwa">self</span> spectralnorm<span class="hl sym">:</span> <span class="hl kwa">self</span> arg<span class="hl sym">)</span> digits<span class="hl sym">:</span> <span class="hl num">9</span><span class="hl sym">;</span> nl<span class="hl sym">.</span>
   <span class="hl sym">^</span><span class="hl str">''</span><span class="hl sym">! !</span>
