<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by dark mx</span>
<span class="hl com"> */</span>


<span class="hl dir">#include &lt;cmath&gt;</span>
<span class="hl dir">#include &lt;cstdio&gt;</span>
<span class="hl dir">#include &lt;cstdlib&gt;</span>

<span class="hl dir">#define PI             3.141592653589793</span>
<span class="hl dir">#define SOLAR_MASS     (4 * PI * PI)</span>
<span class="hl dir">#define DAYS_PER_YEAR  365.24</span>
<span class="hl dir">#define NP             5</span>
<span class="hl dir">#define ADVANCE        0.01</span>


<span class="hl kwb">struct</span> Body <span class="hl sym">{</span>
   <span class="hl kwb">double</span> x<span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">,</span> vx<span class="hl sym">,</span> vy<span class="hl sym">,</span> vz<span class="hl sym">,</span> mass<span class="hl sym">;</span>
<span class="hl sym">};</span>


<span class="hl kwc">inline</span> <span class="hl kwb">double</span> <span class="hl kwd">energy</span><span class="hl sym">(</span><span class="hl kwb">const</span> Body bodies<span class="hl sym">[</span><span class="hl num">5</span><span class="hl sym">])</span>
<span class="hl sym">{</span>
   <span class="hl kwb">double</span> e <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>

   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> NP<span class="hl sym">; ++</span>i<span class="hl sym">) {</span>
      <span class="hl kwb">const</span> Body<span class="hl sym">&amp;</span> i_planet <span class="hl sym">=</span> bodies<span class="hl sym">[</span>i<span class="hl sym">];</span>
      <span class="hl kwb">const double</span> i_planet_mass <span class="hl sym">=</span> i_planet<span class="hl sym">.</span>mass<span class="hl sym">;</span>

      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> j <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> NP<span class="hl sym">; ++</span>j<span class="hl sym">) {</span>
         <span class="hl kwb">const</span> Body<span class="hl sym">&amp;</span> j_planet <span class="hl sym">=</span> bodies<span class="hl sym">[</span>j<span class="hl sym">];</span>

         <span class="hl kwb">const double</span> dx <span class="hl sym">=</span> i_planet<span class="hl sym">.</span>x <span class="hl sym">-</span> j_planet<span class="hl sym">.</span>x<span class="hl sym">;</span>
         <span class="hl kwb">const double</span> dy <span class="hl sym">=</span> i_planet<span class="hl sym">.</span>y <span class="hl sym">-</span> j_planet<span class="hl sym">.</span>y<span class="hl sym">;</span>
         <span class="hl kwb">const double</span> dz <span class="hl sym">=</span> i_planet<span class="hl sym">.</span>z <span class="hl sym">-</span> j_planet<span class="hl sym">.</span>z<span class="hl sym">;</span>

         e <span class="hl sym">-= (</span>i_planet_mass <span class="hl sym">*</span> j_planet<span class="hl sym">.</span>mass<span class="hl sym">) /</span> std<span class="hl sym">::</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>
            <span class="hl sym">(</span>dx <span class="hl sym">*</span> dx<span class="hl sym">) + (</span>dy <span class="hl sym">*</span> dy<span class="hl sym">) + (</span>dz <span class="hl sym">*</span> dz<span class="hl sym">));</span>
      <span class="hl sym">}</span>

      <span class="hl kwb">const double</span> i_planet_vx <span class="hl sym">=</span> i_planet<span class="hl sym">.</span>vx<span class="hl sym">;</span>
      <span class="hl kwb">const double</span> i_planet_vy <span class="hl sym">=</span> i_planet<span class="hl sym">.</span>vy<span class="hl sym">;</span>
      <span class="hl kwb">const double</span> i_planet_vz <span class="hl sym">=</span> i_planet<span class="hl sym">.</span>vz<span class="hl sym">;</span>

      e <span class="hl sym">+=</span> <span class="hl num">0.5</span> <span class="hl sym">*</span> i_planet_mass <span class="hl sym">* ((</span>i_planet_vx <span class="hl sym">*</span> i_planet_vx<span class="hl sym">) +</span>
         <span class="hl sym">(</span>i_planet_vy <span class="hl sym">*</span> i_planet_vy<span class="hl sym">) + (</span>i_planet_vz <span class="hl sym">*</span> i_planet_vz<span class="hl sym">));</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">return</span> e<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">const char</span><span class="hl sym">*</span> argv<span class="hl sym">[])</span>
<span class="hl sym">{</span>
   Body bodies<span class="hl sym">[</span>NP<span class="hl sym">] = {</span>
      <span class="hl sym">{</span>
         <span class="hl num">0.0</span><span class="hl sym">,</span>
         <span class="hl num">0.0</span><span class="hl sym">,</span>
         <span class="hl num">0.0</span><span class="hl sym">,</span>
         <span class="hl num">0.0</span><span class="hl sym">,</span>
         <span class="hl num">0.0</span><span class="hl sym">,</span>
         <span class="hl num">0.0</span><span class="hl sym">,</span>
         SOLAR_MASS
      <span class="hl sym">},</span>
      <span class="hl sym">{</span>
         <span class="hl num">4.84143144246472090e+00</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">1.16032004402742839e+00</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">1.03622044471123109e-01</span><span class="hl sym">,</span>
         <span class="hl num">1.66007664274403694e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">7.69901118419740425e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">6.90460016972063023e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">9.54791938424326609e-04</span> <span class="hl sym">*</span> SOLAR_MASS
      <span class="hl sym">},</span>
      <span class="hl sym">{</span>
         <span class="hl num">8.34336671824457987e+00</span><span class="hl sym">,</span>
         <span class="hl num">4.12479856412430479e+00</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">4.03523417114321381e-01</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">2.76742510726862411e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">4.99852801234917238e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">2.30417297573763929e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">2.85885980666130812e-04</span> <span class="hl sym">*</span> SOLAR_MASS
      <span class="hl sym">},</span>
      <span class="hl sym">{</span>
         <span class="hl num">1.28943695621391310e+01</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">1.51111514016986312e+01</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">2.23307578892655734e-01</span><span class="hl sym">,</span>
         <span class="hl num">2.96460137564761618e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">2.37847173959480950e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">2.96589568540237556e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">4.36624404335156298e-05</span> <span class="hl sym">*</span> SOLAR_MASS
      <span class="hl sym">},</span>
      <span class="hl sym">{</span>
         <span class="hl num">1.53796971148509165e+01</span><span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">2.59193146099879641e+01</span><span class="hl sym">,</span>
         <span class="hl num">1.79258772950371181e-01</span><span class="hl sym">,</span>
         <span class="hl num">2.68067772490389322e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">1.62824170038242295e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl sym">-</span><span class="hl num">9.51592254519715870e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
         <span class="hl num">5.15138902046611451e-05</span> <span class="hl sym">*</span> SOLAR_MASS
      <span class="hl sym">}</span>
   <span class="hl sym">};</span>

   <span class="hl sym">{</span>
      <span class="hl kwb">double</span> px <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
      <span class="hl kwb">double</span> py <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
      <span class="hl kwb">double</span> pz <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>

      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> NP<span class="hl sym">; ++</span>i<span class="hl sym">) {</span>
         <span class="hl kwb">const</span> Body<span class="hl sym">&amp;</span> planet <span class="hl sym">=</span> bodies<span class="hl sym">[</span>i<span class="hl sym">];</span>
         <span class="hl kwb">const double</span> planet_mass <span class="hl sym">=</span> planet<span class="hl sym">.</span>mass<span class="hl sym">;</span>

         px <span class="hl sym">+=</span> planet<span class="hl sym">.</span>vx <span class="hl sym">*</span> planet_mass<span class="hl sym">;</span>
         py <span class="hl sym">+=</span> planet<span class="hl sym">.</span>vy <span class="hl sym">*</span> planet_mass<span class="hl sym">;</span>
         pz <span class="hl sym">+=</span> planet<span class="hl sym">.</span>vz <span class="hl sym">*</span> planet_mass<span class="hl sym">;</span>
      <span class="hl sym">}</span>

      Body<span class="hl sym">&amp;</span> sun <span class="hl sym">=</span> bodies<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>

      sun<span class="hl sym">.</span>vx <span class="hl sym">= -</span>px <span class="hl sym">/</span> SOLAR_MASS<span class="hl sym">;</span>
      sun<span class="hl sym">.</span>vy <span class="hl sym">= -</span>py <span class="hl sym">/</span> SOLAR_MASS<span class="hl sym">;</span>
      sun<span class="hl sym">.</span>vz <span class="hl sym">= -</span>pz <span class="hl sym">/</span> SOLAR_MASS<span class="hl sym">;</span>
   <span class="hl sym">}</span>

   std<span class="hl sym">::</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwd">energy</span><span class="hl sym">(</span>bodies<span class="hl sym">));</span>

   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> x <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span> n <span class="hl sym">=</span> std<span class="hl sym">::</span><span class="hl kwd">atoi</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]);</span> x <span class="hl sym">&lt;</span> n<span class="hl sym">; ++</span>x<span class="hl sym">) {</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> NP<span class="hl sym">; ++</span>i<span class="hl sym">) {</span>
         Body<span class="hl sym">&amp;</span> i_body <span class="hl sym">=</span> bodies<span class="hl sym">[</span>i<span class="hl sym">];</span>

         <span class="hl kwb">const double</span> i_body_x <span class="hl sym">=</span> i_body<span class="hl sym">.</span>x<span class="hl sym">;</span>
         <span class="hl kwb">const double</span> i_body_y <span class="hl sym">=</span> i_body<span class="hl sym">.</span>y<span class="hl sym">;</span>
         <span class="hl kwb">const double</span> i_body_z <span class="hl sym">=</span> i_body<span class="hl sym">.</span>z<span class="hl sym">;</span>
         <span class="hl kwb">const double</span> i_body_mass <span class="hl sym">=</span> i_body<span class="hl sym">.</span>mass<span class="hl sym">;</span>

         <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> j <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> NP<span class="hl sym">; ++</span>j<span class="hl sym">) {</span>
            Body<span class="hl sym">&amp;</span> j_body <span class="hl sym">=</span> bodies<span class="hl sym">[</span>j<span class="hl sym">];</span>

            <span class="hl kwb">const double</span> dx <span class="hl sym">=</span> i_body_x <span class="hl sym">-</span> j_body<span class="hl sym">.</span>x<span class="hl sym">;</span>
            <span class="hl kwb">const double</span> dy <span class="hl sym">=</span> i_body_y <span class="hl sym">-</span> j_body<span class="hl sym">.</span>y<span class="hl sym">;</span>
            <span class="hl kwb">const double</span> dz <span class="hl sym">=</span> i_body_z <span class="hl sym">-</span> j_body<span class="hl sym">.</span>z<span class="hl sym">;</span>

            <span class="hl kwb">const double</span> d_squared <span class="hl sym">= (</span>dx <span class="hl sym">*</span> dx<span class="hl sym">) + (</span>dy <span class="hl sym">*</span> dy<span class="hl sym">) + (</span>dz <span class="hl sym">*</span> dz<span class="hl sym">);</span>
            <span class="hl kwb">const double</span> mag <span class="hl sym">=</span> ADVANCE <span class="hl sym">/ (</span>d_squared <span class="hl sym">*</span> std<span class="hl sym">::</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>d_squared<span class="hl sym">));</span>

            <span class="hl kwb">const double</span> j_mag <span class="hl sym">=</span> j_body<span class="hl sym">.</span>mass <span class="hl sym">*</span> mag<span class="hl sym">;</span>
            <span class="hl kwb">const double</span> i_mag <span class="hl sym">=</span> i_body_mass <span class="hl sym">*</span> mag<span class="hl sym">;</span>

            i_body<span class="hl sym">.</span>vx <span class="hl sym">-=</span> dx <span class="hl sym">*</span> j_mag<span class="hl sym">;</span>
            i_body<span class="hl sym">.</span>vy <span class="hl sym">-=</span> dy <span class="hl sym">*</span> j_mag<span class="hl sym">;</span>
            i_body<span class="hl sym">.</span>vz <span class="hl sym">-=</span> dz <span class="hl sym">*</span> j_mag<span class="hl sym">;</span>

            j_body<span class="hl sym">.</span>vx <span class="hl sym">+=</span> dx <span class="hl sym">*</span> i_mag<span class="hl sym">;</span>
            j_body<span class="hl sym">.</span>vy <span class="hl sym">+=</span> dy <span class="hl sym">*</span> i_mag<span class="hl sym">;</span>
            j_body<span class="hl sym">.</span>vz <span class="hl sym">+=</span> dz <span class="hl sym">*</span> i_mag<span class="hl sym">;</span>
         <span class="hl sym">}</span>
      <span class="hl sym">}</span>

      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> NP<span class="hl sym">; ++</span>i<span class="hl sym">) {</span>
         Body<span class="hl sym">&amp;</span> body <span class="hl sym">=</span> bodies<span class="hl sym">[</span>i<span class="hl sym">];</span>

         body<span class="hl sym">.</span>x <span class="hl sym">+=</span> ADVANCE <span class="hl sym">*</span> body<span class="hl sym">.</span>vx<span class="hl sym">;</span>
         body<span class="hl sym">.</span>y <span class="hl sym">+=</span> ADVANCE <span class="hl sym">*</span> body<span class="hl sym">.</span>vy<span class="hl sym">;</span>
         body<span class="hl sym">.</span>z <span class="hl sym">+=</span> ADVANCE <span class="hl sym">*</span> body<span class="hl sym">.</span>vz<span class="hl sym">;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>

   std<span class="hl sym">::</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwd">energy</span><span class="hl sym">(</span>bodies<span class="hl sym">));</span>
<span class="hl sym">}</span>
