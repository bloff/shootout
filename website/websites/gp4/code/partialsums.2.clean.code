<span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy (Clean novice)</span>
<span class="com">   modified by Arjen van Weelden */</span>

<span class="kwa">module</span> partialsums

<span class="kwa">import</span> StdEnv<span class="sym">,</span> LanguageShootout

Start <span class="sym">=</span> foldl pretty <span class="str">&quot;&quot;</span> <span class="sym">(</span>sigma <span class="num">1</span> argi <span class="num">0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0</span> <span class="sym">(</span><span class="num">2.0</span> <span class="sym">/</span> <span class="num">3.0</span><span class="sym">))</span>

pretty s <span class="sym">(</span>sum<span class="sym">,</span> name<span class="sym">) =</span> s <span class="sym">+++</span> toStringWith <span class="num">9</span> sum <span class="sym">+++</span> <span class="str">&quot;\t&quot;</span> <span class="sym">+++</span> name <span class="sym">+++</span> <span class="str">&quot;\n&quot;</span>

sigma <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">-&gt; [(</span><span class="kwb">Real</span><span class="sym">,</span> String<span class="sym">)]</span>
sigma i n s1 s2 s3 s4 s5 s6 s7 s8 s9 alt twoByThree
	<span class="sym">|</span> i &lt;<span class="sym">=</span> n <span class="sym">=</span> sigma <span class="sym">(</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> n
				<span class="sym">(</span>s1 <span class="sym">+</span> twoByThree <span class="sym">^ (</span>k <span class="sym">-</span> <span class="num">1.0</span><span class="sym">))</span>
				<span class="sym">(</span>s2 <span class="sym">+</span> sqrt dk<span class="sym">)</span>
				<span class="sym">(</span>s3 <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k <span class="sym">* (</span>k <span class="sym">+</span> <span class="num">1.0</span><span class="sym">)))</span>
				<span class="sym">(</span>s4 <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k3 <span class="sym">*</span> sqr <span class="sym">(</span>sin k<span class="sym">)))</span>
				<span class="sym">(</span>s5 <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k3 <span class="sym">*</span> sqr <span class="sym">(</span>cos k<span class="sym">)))</span>
				<span class="sym">(</span>s6 <span class="sym">+</span> dk<span class="sym">)</span>
				<span class="sym">(</span>s7 <span class="sym">+</span> sqr dk<span class="sym">)</span>
				<span class="sym">(</span>s8 <span class="sym">+</span> alt <span class="sym">*</span> dk<span class="sym">)</span>
				<span class="sym">(</span>s9 <span class="sym">+</span> alt <span class="sym">/ (</span><span class="num">2.0</span> <span class="sym">*</span> k <span class="sym">-</span> <span class="num">1.0</span><span class="sym">))</span>
				<span class="sym">(</span>~ alt<span class="sym">)</span> twoByThree
	<span class="sym">|</span> otherwise <span class="sym">= [(</span>s1<span class="sym">,</span> <span class="str">&quot;(2/3)^k&quot;</span><span class="sym">), (</span>s2<span class="sym">,</span> <span class="str">&quot;k^-0.5&quot;</span><span class="sym">), (</span>s3<span class="sym">,</span> <span class="str">&quot;1/k(k+1)&quot;</span><span class="sym">),</span>
				<span class="sym">(</span>s4<span class="sym">,</span> <span class="str">&quot;Flint Hills&quot;</span><span class="sym">), (</span>s5<span class="sym">,</span> <span class="str">&quot;Cookson Hills&quot;</span><span class="sym">), (</span>s6<span class="sym">,</span> <span class="str">&quot;Harmonic&quot;</span><span class="sym">),</span>
				<span class="sym">(</span>s7<span class="sym">,</span> <span class="str">&quot;Riemann Zeta&quot;</span><span class="sym">), (</span>s8<span class="sym">,</span> <span class="str">&quot;Alternating Harmonic&quot;</span><span class="sym">), (</span>s9<span class="sym">,</span> <span class="str">&quot;Gregory&quot;</span><span class="sym">)]</span>
<span class="kwa">where</span>
	k <span class="sym">=</span> toReal i
	k3 <span class="sym">=</span> sqr k <span class="sym">*</span> k
	dk <span class="sym">=</span> <span class="num">1.0</span> <span class="sym">/</span> k

sqr x <span class="sym">:==</span> x <span class="sym">*</span> x
