<span class="slc">-- The Great Computer Language Shootout
</span><span class="slc">-- http://shootout.alioth.debian.org/
</span><span class="slc">-- compile with:  ghc -O2 -o fannkuch fannkuch.hs
</span><span class="slc">-- contributed by Greg Buchholz
</span>
<span class="kwa">import</span> System<span class="sym">(</span>getArgs<span class="sym">)

</span>main <span class="sym">=</span> <span class="kwa">do</span>   <span class="sym">[</span>n<span class="sym">] &lt;-</span> getArgs
            <span class="kwa">let</span> p <span class="sym">=</span> permutations <span class="sym">[</span><span class="num">1</span>..<span class="sym">(</span>read n<span class="sym">)]
</span>            putStr $ <span class="str">&quot;Pfannkuchen(&quot;</span> <span class="sym">++</span> n <span class="sym">++</span> <span class="str">&quot;) = &quot;</span>
            print $ maximum $ map <span class="sym">(</span>flop <span class="num">0</span><span class="sym">)</span> p

flop acc <span class="sym">(</span><span class="num">1</span><span class="sym">:</span>xs<span class="sym">) =</span> acc
flop acc list&#64;<span class="sym">(</span>x<span class="sym">:</span>xs<span class="sym">) =</span> flop <span class="sym">(</span>acc<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> mangle
    <span class="kwa">where</span>   mangle <span class="sym">= (</span>reverse front<span class="sym">) ++</span> back
            <span class="sym">(</span>front<span class="sym">,</span>back<span class="sym">) =</span> splitAt x list

permutations <span class="sym">[]         =  [[]]
</span>permutations <span class="sym">(</span>x<span class="sym">:</span>xs<span class="sym">)     =  [</span>zs <span class="sym">|</span> ys <span class="sym">&lt;-</span> permutations xs<span class="sym">,</span> zs <span class="sym">&lt;-</span> interleave x ys <span class="sym">]
</span>  <span class="kwa">where</span> interleave x <span class="sym">[]     =  [[</span>x<span class="sym">]]
</span>        interleave x <span class="sym">(</span>y<span class="sym">:</span>ys<span class="sym">) =  [</span>x<span class="sym">:</span>y<span class="sym">:</span>ys<span class="sym">] ++</span> map <span class="sym">(</span>y<span class="sym">:) (</span>interleave x ys<span class="sym">)</span>
