<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://shootout.alioth.debian.org/</span>
<span class="hl com">    contributed by Isaac Gouy *&quot;</span><span class="hl sym">!</span>

<span class="hl com">&quot;* SPLITFILE=Tests.st *&quot;</span><span class="hl sym">!</span>

Object subclass<span class="hl sym">:#</span>Tests
   instanceVariableNames<span class="hl sym">:</span><span class="hl str">''</span>
   classVariableNames<span class="hl sym">:</span><span class="hl str">''</span>
   poolDictionaries<span class="hl sym">:</span><span class="hl str">''</span>
   category<span class="hl sym">:</span><span class="hl str">'benchmarks-game'</span>
<span class="hl sym">!</span>

<span class="hl sym">!</span>Tests class methodsFor<span class="hl sym">:</span><span class="hl str">'benchmarks-game'</span><span class="hl sym">!</span>

i<span class="hl sym">:</span> x j<span class="hl sym">:</span> y
<span class="hl com">&quot;* fixup one-based indexing to zero-based indexing - cleanup later *&quot;</span>   <span class="hl sym">|</span> i j <span class="hl sym">|</span> i <span class="hl sym">:=</span> x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">.</span> j <span class="hl sym">:=</span> y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">.   ^</span><span class="hl num">1.0</span> <span class="hl sym">/ (</span>i <span class="hl sym">+</span> j <span class="hl sym">* (</span>i <span class="hl sym">+</span> j <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">) /</span><span class="hl num">2</span>  <span class="hl sym">+</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span> asFloat
<span class="hl sym">!</span>

multiplyAv<span class="hl sym">:</span> aDoubleArray   <span class="hl sym">|</span> n av <span class="hl sym">|</span>   n <span class="hl sym">:=</span> aDoubleArray size<span class="hl sym">.</span>   av <span class="hl sym">:=</span> DoubleArray new<span class="hl sym">:</span> n<span class="hl sym">.</span>   <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>i<span class="hl sym">|</span>          <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>j<span class="hl sym">|</span>         av at<span class="hl sym">:</span> i put<span class="hl sym">: (</span>av at<span class="hl sym">:</span> i<span class="hl sym">) + ((</span><span class="hl kwa">self</span> i<span class="hl sym">:</span> i j<span class="hl sym">:</span> j<span class="hl sym">) * (</span>aDoubleArray at<span class="hl sym">:</span> j<span class="hl sym">)) ]].   ^</span>av
<span class="hl sym">!</span>

multiplyAtv<span class="hl sym">:</span> aDoubleArray   <span class="hl sym">|</span> n atv <span class="hl sym">|</span>   n <span class="hl sym">:=</span> aDoubleArray size<span class="hl sym">.</span>   atv <span class="hl sym">:=</span> DoubleArray new<span class="hl sym">:</span> n<span class="hl sym">.</span>   <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>i<span class="hl sym">|</span>          <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">: [:</span>j<span class="hl sym">|</span>         atv at<span class="hl sym">:</span> i put<span class="hl sym">: (</span>atv at<span class="hl sym">:</span> i<span class="hl sym">) + ((</span><span class="hl kwa">self</span> i<span class="hl sym">:</span> j j<span class="hl sym">:</span> i<span class="hl sym">) * (</span>aDoubleArray at<span class="hl sym">:</span> j<span class="hl sym">)) ]].   ^</span>atv
<span class="hl sym">!</span>

multiplyAtAv<span class="hl sym">:</span> aDoubleArray   <span class="hl sym">^</span><span class="hl kwa">self</span> multiplyAtv<span class="hl sym">: (</span><span class="hl kwa">self</span> multiplyAv<span class="hl sym">:</span> aDoubleArray<span class="hl sym">)</span>
<span class="hl sym">!</span>

spectralnorm<span class="hl sym">:</span> n   <span class="hl sym">|</span> u v vBv vv <span class="hl sym">|</span>   u <span class="hl sym">:=</span> DoubleArray new<span class="hl sym">:</span> n withAll<span class="hl sym">:</span> <span class="hl num">1.0</span><span class="hl sym">.</span>   v <span class="hl sym">:=</span> DoubleArray new<span class="hl sym">:</span> n<span class="hl sym">.</span>   <span class="hl num">10</span> timesRepeat<span class="hl sym">:      [</span>v <span class="hl sym">:=</span> <span class="hl kwa">self</span> multiplyAtAv<span class="hl sym">:</span> u<span class="hl sym">.</span>       u <span class="hl sym">:=</span> <span class="hl kwa">self</span> multiplyAtAv<span class="hl sym">:</span> v<span class="hl sym">].</span>
   vBv <span class="hl sym">:=</span> <span class="hl num">0.0</span><span class="hl sym">.</span>   vv <span class="hl sym">:=</span> <span class="hl num">0.0</span><span class="hl sym">.</span>   <span class="hl num">1</span> to<span class="hl sym">:</span> n do<span class="hl sym">:      [:</span>i <span class="hl sym">|</span>       vBv <span class="hl sym">:=</span> vBv <span class="hl sym">+ ((</span>u at<span class="hl sym">:</span> i<span class="hl sym">) * (</span>v at<span class="hl sym">:</span> i<span class="hl sym">)).</span>       vv <span class="hl sym">:=</span> vv <span class="hl sym">+ ((</span>v at<span class="hl sym">:</span> i<span class="hl sym">) * (</span>v at<span class="hl sym">:</span> i<span class="hl sym">))].   ^(</span>vBv <span class="hl sym">/</span> vv<span class="hl sym">)</span> sqrt
<span class="hl sym">!</span>

main
   Stdout nextPutAll<span class="hl sym">:</span>
      <span class="hl sym">((</span><span class="hl kwa">self</span> spectralnorm<span class="hl sym">:</span> Smalltalk commandLineArguments last asNumber<span class="hl sym">)</span>
         printfPrintString<span class="hl sym">:</span><span class="hl str">'%0.9f'</span><span class="hl sym">);</span> cr<span class="hl sym">.</span>
<span class="hl sym">! !</span>


