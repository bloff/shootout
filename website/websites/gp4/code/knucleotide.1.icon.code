<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># by Charles Evans 2006-1-4</span>

<span class="kwa">link</span> printf

<span class="kwa">global</span> seq<span class="sym">,</span> freq
<span class="kwa">procedure</span> calc_frequencies<span class="sym">(</span>len<span class="sym">)</span>
<span class="kwa">local</span> lt
  lt<span class="sym">:=</span>\freq<span class="sym">[</span>len<span class="sym">]|(</span>freq<span class="sym">[</span>len<span class="sym">]:=</span><span class="kwb">table</span><span class="sym">(</span><span class="num">0</span><span class="sym">))</span>
  <span class="kwa">if</span> len<span class="sym">=</span><span class="num">1</span> <span class="kwa">then every</span> lt<span class="sym">[!</span>seq<span class="sym">]+:=</span><span class="num">1</span>
  <span class="kwa">else every</span> lt<span class="sym">[</span>seq<span class="sym">[</span><span class="num">1</span> <span class="kwa">to</span> <span class="sym">*</span>seq<span class="sym">-</span>len<span class="sym">+</span><span class="num">1</span> <span class="sym">+:</span>len<span class="sym">]]+:=</span><span class="num">1</span>
  <span class="kwa">return</span> lt
<span class="kwa">end</span>

<span class="kwa">procedure</span> write_frequencies<span class="sym">(</span>len<span class="sym">)</span>
<span class="kwa">local</span> t<span class="sym">,</span>n<span class="sym">,</span>l<span class="sym">,</span>i<span class="sym">,</span>k<span class="sym">,</span>x
n<span class="sym">:=</span><span class="num">100.0</span><span class="sym">/(</span><span class="num">1</span><span class="sym">+*</span>seq<span class="sym">-</span>len<span class="sym">)</span>
t<span class="sym">:=</span>\freq<span class="sym">[</span>len<span class="sym">] |</span> calc_frequencies<span class="sym">(</span>len<span class="sym">)</span>
l<span class="sym">:=[]</span>
<span class="slc">#write(n)</span>
<span class="slc">#every k:=key(t) do write(t[k],&quot;\t&quot;,t[k]*n,&quot;\t&quot;,k)</span>
<span class="kwa">every</span> k<span class="sym">:=</span>key<span class="sym">(</span>t<span class="sym">)</span> <span class="kwa">do</span>
	put<span class="sym">(</span>l<span class="sym">,</span>sprintf<span class="sym">(</span><span class="str">&quot;%17.13r %s&quot;</span><span class="sym">,</span>t<span class="sym">[</span>k<span class="sym">]*</span>n<span class="sym">,</span>k<span class="sym">))</span>
l<span class="sym">:=</span>sort<span class="sym">(</span>l<span class="sym">)</span>
<span class="kwa">while</span> x<span class="sym">:=</span>pull<span class="sym">(</span>l<span class="sym">)</span> <span class="kwa">do</span>
   printf<span class="sym">(</span><span class="str">&quot;%s %.3r</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span>x<span class="sym">[-</span>len<span class="sym">:</span><span class="num">0</span><span class="sym">],</span>x<span class="sym">[</span><span class="num">1</span><span class="sym">:-</span>len<span class="sym">])</span>
write<span class="sym">()</span>
<span class="kwa">end</span>

<span class="kwa">procedure</span> write_count<span class="sym">(</span>s<span class="sym">)</span>
t<span class="sym">:=</span>\freq<span class="sym">[*</span>s<span class="sym">]|</span>calc_frequencies<span class="sym">(*</span>s<span class="sym">)</span>
write<span class="sym">(</span>t<span class="sym">[</span>s<span class="sym">],</span><span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span><span class="sym">,</span>s<span class="sym">)</span>
<span class="kwa">end</span>

<span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)</span>
freq<span class="sym">:=</span><span class="kwb">table</span><span class="sym">()</span>
seq<span class="sym">:=</span><span class="str">&quot;&quot;</span>
<span class="kwa">while</span> l<span class="sym">:=</span> read<span class="sym">()</span> &amp; not<span class="sym">(</span> l ? <span class="sym">=</span><span class="str">&quot;&gt;THREE&quot;</span> <span class="sym">)</span>
<span class="kwa">while</span> l<span class="sym">:=</span> read<span class="sym">()</span> &amp; not<span class="sym">(</span> l ? <span class="sym">=</span><span class="str">&quot;&gt;&quot;</span> <span class="sym">)</span> <span class="kwa">do</span>
   l ? <span class="sym">=</span><span class="str">&quot;;&quot;</span> <span class="sym">| (</span>seq<span class="sym">||:=</span>l<span class="sym">)</span>
seq<span class="sym">:=</span>map<span class="sym">(</span>seq<span class="sym">,</span><span class="kwa">&amp;lcase</span><span class="sym">,</span><span class="kwa">&amp;ucase</span><span class="sym">)</span>
write_frequencies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>
write_frequencies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>
write_count<span class="sym">(</span> <span class="str">&quot;GGT&quot;</span><span class="sym">)</span>
write_count<span class="sym">(</span> <span class="str">&quot;GGTA&quot;</span><span class="sym">)</span>
write_count<span class="sym">(</span> <span class="str">&quot;GGTATT&quot;</span><span class="sym">)</span>
write_count<span class="sym">(</span> <span class="str">&quot;GGTATTTTAATT&quot;</span><span class="sym">)</span>
write_count<span class="sym">(</span> <span class="str">&quot;GGTATTTTAATTTATAGT&quot;</span><span class="sym">)</span>
<span class="slc">#write(&amp;errout,&amp;time) # fasta 250000 in fasta.250: 19sec</span>
<span class="kwa">end</span>
