<span class="hl slc">%   The Computer Language Shootout</span>
<span class="hl slc">%   http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">%   contributed by Hans Svensson</span>

<span class="hl sym">-</span><span class="hl kwd">module</span><span class="hl sym">(</span>fannkuch<span class="hl sym">)</span>.
<span class="hl sym">-</span><span class="hl kwd">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">])</span>.

<span class="hl kwd">main</span><span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
    N <span class="hl sym">=</span> <span class="hl kwb">list_to_integer</span><span class="hl sym">(</span>Arg<span class="hl sym">),</span>
    F <span class="hl sym">=</span> <span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">),</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;Pfannkuchen(~p) = ~p~n&quot;</span><span class="hl sym">, [</span>N<span class="hl sym">,</span> F<span class="hl sym">]),</span>
    erlang<span class="hl sym">:</span><span class="hl kwb">halt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>

<span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">)</span> <span class="hl kwa">when</span> N <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
    L <span class="hl sym">=</span> lists<span class="hl sym">:</span><span class="hl kwd">seq</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span>N<span class="hl sym">),</span>
    <span class="hl kwb">put</span><span class="hl sym">(</span>pr<span class="hl sym">,</span><span class="hl num">30</span><span class="hl sym">),</span>
    <span class="hl kwb">put</span><span class="hl sym">(</span>maxflip<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),</span>
    <span class="hl kwd">cP</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span>N<span class="hl sym">,</span>L<span class="hl sym">,</span>true<span class="hl sym">),</span>
    <span class="hl kwb">get</span><span class="hl sym">(</span>maxflip<span class="hl sym">)</span>.

<span class="hl kwd">cP</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span>N<span class="hl sym">,</span>L<span class="hl sym">,</span>_<span class="hl sym">) -&gt;</span>
    <span class="hl kwd">test</span><span class="hl sym">(</span>L<span class="hl sym">),</span>
    <span class="hl kwd">cP</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span>N<span class="hl sym">,</span>L<span class="hl sym">,</span>true<span class="hl sym">);</span>
<span class="hl kwd">cP</span><span class="hl sym">(</span>B<span class="hl sym">,</span>N<span class="hl sym">,</span>_<span class="hl sym">,</span>_<span class="hl sym">)</span> <span class="hl kwa">when</span> B <span class="hl sym">&gt;</span> N <span class="hl sym">-&gt;</span>
    ok<span class="hl sym">;</span>
<span class="hl kwd">cP</span><span class="hl sym">(</span>B<span class="hl sym">,</span>N<span class="hl sym">,</span>L<span class="hl sym">,</span>Cont<span class="hl sym">) -&gt;</span>
    Is <span class="hl sym">=</span> lists<span class="hl sym">:</span><span class="hl kwd">seq</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span>B<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">),</span>
    Ls <span class="hl sym">=</span> lists<span class="hl sym">:</span><span class="hl kwd">map</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>D<span class="hl sym">) -&gt;</span> <span class="hl kwd">rotate</span><span class="hl sym">(</span>D<span class="hl sym">,</span>B<span class="hl sym">,</span>L<span class="hl sym">)</span> <span class="hl kwa">end</span><span class="hl sym">,</span>Is<span class="hl sym">),</span>
    <span class="hl kwa">case</span> <span class="hl kwb">length</span><span class="hl sym">(</span>Ls<span class="hl sym">)</span> <span class="hl kwa">of</span>
	<span class="hl num">1</span> <span class="hl sym">-&gt;</span>
	    <span class="hl kwd">test</span><span class="hl sym">(</span><span class="hl kwb">hd</span><span class="hl sym">(</span>Ls<span class="hl sym">));</span>
	_ <span class="hl sym">-&gt;</span>
	    lists<span class="hl sym">:</span><span class="hl kwd">map</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>L_<span class="hl sym">) -&gt;</span> <span class="hl kwd">test</span><span class="hl sym">(</span>L_<span class="hl sym">),</span>
				 lists<span class="hl sym">:</span><span class="hl kwd">map</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>D<span class="hl sym">) -&gt;</span> <span class="hl kwd">cP</span><span class="hl sym">(</span>D<span class="hl sym">,</span>N<span class="hl sym">,</span>L_<span class="hl sym">,</span>false<span class="hl sym">)</span> <span class="hl kwa">end</span><span class="hl sym">,</span>
					   lists<span class="hl sym">:</span><span class="hl kwd">seq</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span>B<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">))</span>
		      <span class="hl kwa">end</span><span class="hl sym">,</span>Ls<span class="hl sym">)</span>
    <span class="hl kwa">end</span><span class="hl sym">,</span>
    <span class="hl kwa">case</span> Cont <span class="hl kwa">of</span>
	true <span class="hl sym">-&gt;</span>
	    <span class="hl kwd">cP</span><span class="hl sym">(</span>B<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span>N<span class="hl sym">,</span>L<span class="hl sym">,</span>true<span class="hl sym">);</span>
	false <span class="hl sym">-&gt;</span>
	    ok
    <span class="hl kwa">end</span>.

<span class="hl kwd">rotate</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">,[</span>H<span class="hl sym">|[</span>H2<span class="hl sym">|</span>T<span class="hl sym">]]) -&gt;</span>
    <span class="hl sym">[</span>H2 <span class="hl sym">| [</span> H <span class="hl sym">|</span> T<span class="hl sym">]];</span>
<span class="hl kwd">rotate</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span>J<span class="hl sym">,[</span>H<span class="hl sym">|</span>T<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">{</span>H2<span class="hl sym">,</span>T2<span class="hl sym">} =</span> lists<span class="hl sym">:</span><span class="hl kwd">split</span><span class="hl sym">(</span>J<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span>T<span class="hl sym">),</span>
    H2 <span class="hl sym">++ [</span>H<span class="hl sym">] ++</span> T2<span class="hl sym">;</span>
<span class="hl kwd">rotate</span><span class="hl sym">(</span>I<span class="hl sym">,</span>J<span class="hl sym">,</span>L<span class="hl sym">) -&gt;</span>
    <span class="hl sym">{</span>H<span class="hl sym">,</span>T<span class="hl sym">} =</span> lists<span class="hl sym">:</span><span class="hl kwd">split</span><span class="hl sym">(</span>J<span class="hl sym">,</span>L<span class="hl sym">),</span>
    <span class="hl sym">{</span>H1<span class="hl sym">,</span>H2<span class="hl sym">} =</span> lists<span class="hl sym">:</span><span class="hl kwd">split</span><span class="hl sym">(</span>I<span class="hl sym">,</span>H<span class="hl sym">),</span>
    H2 <span class="hl sym">++</span> H1 <span class="hl sym">++</span> T.

<span class="hl kwd">test</span><span class="hl sym">(</span>L<span class="hl sym">) -&gt;</span>
    <span class="hl kwa">case</span> <span class="hl kwb">get</span><span class="hl sym">(</span>pr<span class="hl sym">)</span> <span class="hl kwa">of</span>
	<span class="hl num">0</span> <span class="hl sym">-&gt;</span> ok<span class="hl sym">;</span>
	N <span class="hl sym">-&gt;</span> lists<span class="hl sym">:</span><span class="hl kwd">map</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>I<span class="hl sym">) -&gt;</span> io<span class="hl sym">:</span><span class="hl kwd">format</span><span class="hl sym">(</span><span class="hl str">&quot;~p&quot;</span><span class="hl sym">,[</span>I<span class="hl sym">])</span> <span class="hl kwa">end</span><span class="hl sym">,</span> L<span class="hl sym">),</span>
	     io<span class="hl sym">:</span><span class="hl kwd">format</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">),</span>
	     <span class="hl kwb">put</span><span class="hl sym">(</span>pr<span class="hl sym">,</span>N<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">end</span><span class="hl sym">,</span>
    X <span class="hl sym">=</span> <span class="hl kwd">flip</span><span class="hl sym">(</span>L<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),</span>
    Y <span class="hl sym">=</span> <span class="hl kwb">get</span><span class="hl sym">(</span>maxflip<span class="hl sym">),</span>
    <span class="hl kwa">case</span> X <span class="hl sym">&gt;</span> Y <span class="hl kwa">of</span>
	true <span class="hl sym">-&gt;</span> <span class="hl kwb">put</span><span class="hl sym">(</span>maxflip<span class="hl sym">,</span>X<span class="hl sym">);</span>
	false <span class="hl sym">-&gt;</span> ok
    <span class="hl kwa">end</span>.

<span class="hl kwd">flip</span><span class="hl sym">([</span><span class="hl num">1</span><span class="hl sym">|</span>_<span class="hl sym">],</span> N<span class="hl sym">) -&gt;</span> N<span class="hl sym">;</span>
<span class="hl kwd">flip</span><span class="hl sym">([</span>I<span class="hl sym">|</span>_<span class="hl sym">]=</span>L<span class="hl sym">,</span> N<span class="hl sym">) -&gt;</span>
    <span class="hl sym">{</span>H<span class="hl sym">,</span> T<span class="hl sym">} =</span> lists<span class="hl sym">:</span><span class="hl kwd">split</span><span class="hl sym">(</span>I<span class="hl sym">,</span> L<span class="hl sym">),</span>
    <span class="hl kwd">flip</span><span class="hl sym">(</span>lists<span class="hl sym">:</span><span class="hl kwd">reverse</span><span class="hl sym">(</span>H<span class="hl sym">)++</span>T<span class="hl sym">,</span> N<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>.
