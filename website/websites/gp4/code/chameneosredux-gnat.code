<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- contributed by Jim Rogers</span>

<span class="hl kwa">with</span> Ada.Command_Line<span class="hl sym">;</span> <span class="hl kwa">use</span> Ada.Command_Line<span class="hl sym">;</span>
<span class="hl kwa">with</span> Ada.Text_Io<span class="hl sym">;</span> <span class="hl kwa">use</span> Ada.Text_Io<span class="hl sym">;</span>
<span class="hl kwa">with</span> Ada.Strings.Unbounded<span class="hl sym">;</span> <span class="hl kwa">use</span> Ada.Strings.Unbounded<span class="hl sym">;</span>
<span class="hl kwa">with</span> Ada.Characters.Handling<span class="hl sym">;</span> <span class="hl kwa">use</span> Ada.Characters.Handling<span class="hl sym">;</span>

<span class="hl kwa">procedure</span> ChameneosRedux <span class="hl kwa">is</span>
   N <span class="hl sym">:</span> <span class="hl kwb">Natural</span><span class="hl sym">;</span>

   <span class="hl kwa">type</span> Numbers <span class="hl kwa">is</span> <span class="hl sym">(</span>Zero<span class="hl sym">,</span> One<span class="hl sym">,</span> Two<span class="hl sym">,</span> Three<span class="hl sym">,</span> Four<span class="hl sym">,</span> Five<span class="hl sym">,</span>
      Six<span class="hl sym">,</span> Seven<span class="hl sym">,</span> Eight<span class="hl sym">,</span> Nine<span class="hl sym">);</span>

   <span class="hl kwa">type</span> Colors <span class="hl kwa">is</span> <span class="hl sym">(</span>Blue<span class="hl sym">,</span> Red<span class="hl sym">,</span> Yellow<span class="hl sym">);</span>

   <span class="hl kwa">type</span> Colors_Complements <span class="hl kwa">is array</span><span class="hl sym">(</span>Colors<span class="hl sym">,</span> Colors<span class="hl sym">)</span> <span class="hl kwa">of</span> Colors<span class="hl sym">;</span>

   Complement_Color <span class="hl sym">:</span> <span class="hl kwa">constant</span> Colors_Complements <span class="hl sym">:=</span>
      <span class="hl sym">(</span>Blue <span class="hl sym">=&gt; (</span>Blue <span class="hl sym">=&gt;</span> Blue<span class="hl sym">,</span>
                Red  <span class="hl sym">=&gt;</span> Yellow<span class="hl sym">,</span>
                Yellow <span class="hl sym">=&gt;</span> Red<span class="hl sym">),</span>
      Red <span class="hl sym">=&gt;  (</span>Red <span class="hl sym">=&gt;</span> Red<span class="hl sym">,</span>
               Blue <span class="hl sym">=&gt;</span> Yellow<span class="hl sym">,</span>
               Yellow <span class="hl sym">=&gt;</span> Blue<span class="hl sym">),</span>
      Yellow <span class="hl sym">=&gt; (</span>Yellow <span class="hl sym">=&gt;</span> Yellow<span class="hl sym">,</span>
                  Blue  <span class="hl sym">=&gt;</span> Red<span class="hl sym">,</span>
                  Red  <span class="hl sym">=&gt;</span> Blue<span class="hl sym">));</span>
   <span class="hl kwa">function</span> To_Lower<span class="hl sym">(</span>Item <span class="hl sym">:</span> <span class="hl kwb">String</span><span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwb">String</span> <span class="hl kwa">is</span>
      Temp <span class="hl sym">:</span> <span class="hl kwb">String</span> <span class="hl sym">:=</span> Item<span class="hl sym">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> Temp<span class="hl sym">'</span><span class="hl kwa">range loop</span>
         Temp<span class="hl sym">(</span>I<span class="hl sym">) :=</span> To_Lower<span class="hl sym">(</span>Temp<span class="hl sym">(</span>I<span class="hl sym">));</span>
      <span class="hl kwa">end loop</span><span class="hl sym">;</span>
      <span class="hl kwa">return</span> Temp<span class="hl sym">;</span>
   <span class="hl kwa">end</span> To_Lower<span class="hl sym">;</span>


   <span class="hl kwa">procedure</span> Printcolorchanges <span class="hl kwa">is</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">for</span> Self <span class="hl kwa">in</span> Colors <span class="hl kwa">loop</span>
         <span class="hl kwa">for</span> Other <span class="hl kwa">in</span> Colors <span class="hl kwa">loop</span>
            Put_Line<span class="hl sym">(</span>To_lower<span class="hl sym">(</span>Colors<span class="hl sym">'</span>Image<span class="hl sym">(</span>Self<span class="hl sym">)) &amp;</span> <span class="hl str">&quot; + &quot;</span> <span class="hl sym">&amp;</span>
               To_Lower<span class="hl sym">(</span>Colors<span class="hl sym">'</span>Image<span class="hl sym">(</span>Other<span class="hl sym">)) &amp;</span> <span class="hl str">&quot; -&gt; &quot;</span> <span class="hl sym">&amp;</span>
               To_Lower<span class="hl sym">(</span>Colors<span class="hl sym">'</span>Image<span class="hl sym">(</span>Complement_Color<span class="hl sym">(</span>Self<span class="hl sym">,</span> Other<span class="hl sym">))));</span>
         <span class="hl kwa">end loop</span><span class="hl sym">;</span>
      <span class="hl kwa">end loop</span><span class="hl sym">;</span>
      New_Line<span class="hl sym">;</span>
   <span class="hl kwa">end</span> Printcolorchanges<span class="hl sym">;</span>


   <span class="hl kwa">protected type</span> Meeting_Place<span class="hl sym">(</span>N <span class="hl sym">:</span> <span class="hl kwb">Natural</span><span class="hl sym">)</span> <span class="hl kwa">is</span>
      <span class="hl kwa">entry</span> Exchange<span class="hl sym">(</span>Me <span class="hl sym">:</span> <span class="hl kwa">in</span> Colors<span class="hl sym">;</span> My_Id <span class="hl sym">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl sym">;</span> Other <span class="hl sym">:</span> <span class="hl kwa">out</span> Colors<span class="hl sym">;</span> Other_Id <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Positive</span><span class="hl sym">);</span>
      <span class="hl kwa">entry</span> Wait_N_Meetings<span class="hl sym">;</span>
   <span class="hl kwa">private</span>
      First_Call <span class="hl sym">:</span> <span class="hl kwb">Boolean</span> <span class="hl sym">:=</span> True<span class="hl sym">;</span>
      First_Color <span class="hl sym">:</span> Colors<span class="hl sym">;</span>
      Second_Color <span class="hl sym">:</span> Colors<span class="hl sym">;</span>
      Count <span class="hl sym">:</span> <span class="hl kwb">Natural</span> <span class="hl sym">:=</span> N<span class="hl sym">;</span>
      First_Id <span class="hl sym">:</span> <span class="hl kwb">Positive</span><span class="hl sym">;</span>
      Second_Id <span class="hl sym">:</span> <span class="hl kwb">Positive</span><span class="hl sym">;</span>
      <span class="hl kwa">entry</span> Wait_Others<span class="hl sym">(</span>Me <span class="hl sym">:</span> <span class="hl kwa">in</span> Colors<span class="hl sym">;</span> My_Id <span class="hl sym">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl sym">;</span> Other <span class="hl sym">:</span> <span class="hl kwa">out</span> Colors<span class="hl sym">;</span> Other_id <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Positive</span><span class="hl sym">);</span>
   <span class="hl kwa">end</span> Meeting_Place<span class="hl sym">;</span>

   <span class="hl kwa">protected body</span> Meeting_Place <span class="hl kwa">is</span>
      <span class="hl kwa">entry</span> Exchange<span class="hl sym">(</span>Me <span class="hl sym">:</span> <span class="hl kwa">in</span> Colors<span class="hl sym">;</span> My_Id <span class="hl sym">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl sym">;</span> Other <span class="hl sym">:</span> <span class="hl kwa">out</span> Colors<span class="hl sym">;</span> Other_Id <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Positive</span><span class="hl sym">)</span> <span class="hl kwa">when</span> Count <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">is</span>
      <span class="hl kwa">begin</span>
         <span class="hl kwa">if</span> First_Call <span class="hl kwa">then</span>
            First_Call <span class="hl sym">:=</span> False<span class="hl sym">;</span>
            First_Color <span class="hl sym">:=</span> Me<span class="hl sym">;</span>
            First_Id <span class="hl sym">:=</span> My_id<span class="hl sym">;</span>
            <span class="hl kwa">requeue</span> Wait_Others<span class="hl sym">;</span>
         <span class="hl kwa">else</span>
            Second_Color <span class="hl sym">:=</span> Me<span class="hl sym">;</span>
            second_Id <span class="hl sym">:=</span> My_Id<span class="hl sym">;</span>
            Other <span class="hl sym">:=</span> First_Color<span class="hl sym">;</span>
            Other_Id <span class="hl sym">:=</span> First_Id<span class="hl sym">;</span>
            First_Call <span class="hl sym">:=</span> True<span class="hl sym">;</span>
            Count <span class="hl sym">:=</span> Count <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
         <span class="hl kwa">end if</span><span class="hl sym">;</span>
      <span class="hl kwa">end</span> Exchange<span class="hl sym">;</span>

      <span class="hl kwa">entry</span> Wait_Others<span class="hl sym">(</span>Me <span class="hl sym">:</span> <span class="hl kwa">in</span> Colors<span class="hl sym">;</span> My_Id <span class="hl sym">:</span> <span class="hl kwa">in</span> <span class="hl kwb">Positive</span><span class="hl sym">;</span> Other <span class="hl sym">:</span> <span class="hl kwa">out</span> Colors<span class="hl sym">;</span> Other_id <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Positive</span><span class="hl sym">)</span> <span class="hl kwa">when</span> First_Call <span class="hl kwa">is</span>
      <span class="hl kwa">begin</span>
         Other <span class="hl sym">:=</span> Second_Color<span class="hl sym">;</span>
         Other_Id <span class="hl sym">:=</span> Second_Id<span class="hl sym">;</span>
      <span class="hl kwa">end</span> Wait_Others<span class="hl sym">;</span>

      <span class="hl kwa">entry</span> Wait_N_Meetings <span class="hl kwa">when</span> Count <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">is</span>
      <span class="hl kwa">begin</span>
         <span class="hl kwa">null</span><span class="hl sym">;</span>
      <span class="hl kwa">end</span> Wait_N_Meetings<span class="hl sym">;</span>
   <span class="hl kwa">end</span> Meeting_Place<span class="hl sym">;</span>

   <span class="hl kwa">type</span> Meeting_Ref <span class="hl kwa">is access</span> Meeting_Place<span class="hl sym">;</span>

   <span class="hl kwa">task type</span> Creature<span class="hl sym">(</span>My_Color <span class="hl sym">:</span> Colors<span class="hl sym">;</span> Place <span class="hl sym">:</span> Meeting_Ref<span class="hl sym">;</span> Id <span class="hl sym">:</span> <span class="hl kwb">Positive</span><span class="hl sym">)</span> <span class="hl kwa">is</span>
      <span class="hl kwa">entry</span> Report<span class="hl sym">(</span>Count <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Natural</span><span class="hl sym">;</span> Self <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Natural</span><span class="hl sym">);</span>
   <span class="hl kwa">end</span> Creature<span class="hl sym">;</span>

   <span class="hl kwa">task body</span> Creature <span class="hl kwa">is</span>
      Meeting_Count <span class="hl sym">:</span> <span class="hl kwb">Natural</span> <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      Self_Count <span class="hl sym">:</span> <span class="hl kwb">Natural</span> <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      Me <span class="hl sym">:</span> Colors <span class="hl sym">:=</span> My_Color<span class="hl sym">;</span>

      <span class="hl kwa">procedure</span> Meet_Other_Creature <span class="hl kwa">is</span>
         Other <span class="hl sym">:</span> Colors<span class="hl sym">;</span>
         Foreign <span class="hl sym">:</span> <span class="hl kwb">Positive</span><span class="hl sym">;</span>
      <span class="hl kwa">begin</span>
         Place.Exchange<span class="hl sym">(</span>Me<span class="hl sym">,</span> Id<span class="hl sym">,</span> Other<span class="hl sym">,</span> Foreign<span class="hl sym">);</span>
         <span class="hl kwa">if</span> Id <span class="hl sym">=</span> Foreign <span class="hl kwa">then</span>
            Self_Count <span class="hl sym">:=</span> Self_Count <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
         <span class="hl kwa">end if</span><span class="hl sym">;</span>
         Meeting_Count <span class="hl sym">:=</span> Meeting_Count <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
         Me <span class="hl sym">:=</span> Complement_Color<span class="hl sym">(</span>Me<span class="hl sym">,</span> Other<span class="hl sym">);</span>
      <span class="hl kwa">end</span> Meet_Other_Creature<span class="hl sym">;</span>

   <span class="hl kwa">begin</span>
      <span class="hl kwa">loop</span>
         <span class="hl kwa">select</span>
            <span class="hl kwa">accept</span> Report<span class="hl sym">(</span>Count <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">Natural</span><span class="hl sym">;</span> Self <span class="hl sym">:</span> <span class="hl kwa">out</span> <span class="hl kwb">natural</span><span class="hl sym">)</span> <span class="hl kwa">do</span>
               Count <span class="hl sym">:=</span> Meeting_Count<span class="hl sym">;</span>
               Self <span class="hl sym">:=</span> Self_Count<span class="hl sym">;</span>
            <span class="hl kwa">end</span> Report<span class="hl sym">;</span>
            <span class="hl kwa">exit</span><span class="hl sym">;</span>
         <span class="hl kwa">else</span>
            <span class="hl kwa">select</span>
               <span class="hl kwa">delay</span> <span class="hl num">0.02</span><span class="hl sym">;</span>
            <span class="hl kwa">then abort</span>
               Meet_Other_Creature<span class="hl sym">;</span>
            <span class="hl kwa">end select</span><span class="hl sym">;</span>
         <span class="hl kwa">end select</span><span class="hl sym">;</span>
      <span class="hl kwa">end loop</span><span class="hl sym">;</span>
   <span class="hl kwa">end</span> Creature<span class="hl sym">;</span>

   <span class="hl kwa">type</span> Creature_Ref <span class="hl kwa">is access</span> Creature<span class="hl sym">;</span>

   <span class="hl kwa">type</span> Color_List <span class="hl kwa">is array</span><span class="hl sym">(</span><span class="hl kwb">Positive</span> <span class="hl kwa">range</span> <span class="hl sym">&lt;&gt;)</span> <span class="hl kwa">of</span> Colors<span class="hl sym">;</span>

   <span class="hl kwa">function</span> Spell_Out<span class="hl sym">(</span>Item <span class="hl sym">:</span> <span class="hl kwb">Natural</span><span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwb">String</span> <span class="hl kwa">is</span>
      Temp_Str <span class="hl sym">:</span> <span class="hl kwb">String</span> <span class="hl sym">:=</span> <span class="hl kwb">Natural</span><span class="hl sym">'</span>Image<span class="hl sym">(</span>Item<span class="hl sym">);</span>
      Words <span class="hl sym">:</span> Unbounded_String <span class="hl sym">:=</span> Null_Unbounded_String<span class="hl sym">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> <span class="hl num">2</span>..Temp_Str<span class="hl sym">'</span>Last <span class="hl kwa">loop</span>
         Append<span class="hl sym">(</span>Words<span class="hl sym">,</span> <span class="hl str">&quot; &quot;</span> <span class="hl sym">&amp;</span> To_Lower<span class="hl sym">(</span>Numbers<span class="hl sym">'</span>Image<span class="hl sym">(</span>Numbers<span class="hl sym">'</span>Val<span class="hl sym">(</span><span class="hl kwb">Character</span><span class="hl sym">'</span>Pos<span class="hl sym">(</span>Temp_Str<span class="hl sym">(</span>I<span class="hl sym">)) -</span> <span class="hl num">48</span><span class="hl sym">))));</span>
      <span class="hl kwa">end loop</span><span class="hl sym">;</span>
      <span class="hl kwa">return</span> To_String<span class="hl sym">(</span>Words<span class="hl sym">);</span>
   <span class="hl kwa">end</span> Spell_Out<span class="hl sym">;</span>

   <span class="hl kwa">procedure</span> Start_Creatures<span class="hl sym">(</span>List <span class="hl sym">:</span> Color_List<span class="hl sym">)</span> <span class="hl kwa">is</span>
      <span class="hl kwa">package</span> Int_Io <span class="hl kwa">is new</span> Ada.Text_Io.Integer_Io<span class="hl sym">(</span><span class="hl kwb">Integer</span><span class="hl sym">);</span>
      <span class="hl kwa">use</span> Int_Io<span class="hl sym">;</span>

      <span class="hl kwa">subtype</span> Creature_Index <span class="hl kwa">is</span> <span class="hl kwb">Positive</span> <span class="hl kwa">range</span> List<span class="hl sym">'</span><span class="hl kwa">range</span><span class="hl sym">;</span>
      <span class="hl kwa">type</span> Creature_List <span class="hl kwa">is array</span><span class="hl sym">(</span>Creature_Index<span class="hl sym">)</span> <span class="hl kwa">of</span> Creature_Ref<span class="hl sym">;</span>
      Creatures <span class="hl sym">:</span> Creature_List<span class="hl sym">;</span>
      Rendezvous <span class="hl sym">:</span> Meeting_Ref <span class="hl sym">:=</span> <span class="hl kwa">new</span> Meeting_Place<span class="hl sym">(</span>N<span class="hl sym">);</span>
      Tid <span class="hl sym">:</span> <span class="hl kwb">Positive</span> <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">;</span>
      Sum <span class="hl sym">:</span> <span class="hl kwb">Natural</span> <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      Self_Met <span class="hl sym">:</span> <span class="hl kwb">Natural</span><span class="hl sym">;</span>
      Tot_Met <span class="hl sym">:</span> <span class="hl kwb">Natural</span><span class="hl sym">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> List<span class="hl sym">'</span><span class="hl kwa">range loop</span>
         Put<span class="hl sym">(</span><span class="hl str">&quot; &quot;</span> <span class="hl sym">&amp;</span> To_Lower<span class="hl sym">(</span>Colors<span class="hl sym">'</span>Image<span class="hl sym">(</span>List<span class="hl sym">(</span>I<span class="hl sym">))));</span>
         Creatures<span class="hl sym">(</span>I<span class="hl sym">) :=</span> <span class="hl kwa">new</span> Creature<span class="hl sym">(</span>List<span class="hl sym">(</span>I<span class="hl sym">),</span> Rendezvous<span class="hl sym">,</span> Tid<span class="hl sym">);</span>
         Tid <span class="hl sym">:=</span> Tid <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl kwa">end loop</span><span class="hl sym">;</span>
      New_Line<span class="hl sym">;</span>
      Rendezvous.Wait_N_Meetings<span class="hl sym">;</span>
      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> Creatures<span class="hl sym">'</span><span class="hl kwa">range loop</span>
         Creatures<span class="hl sym">(</span>I<span class="hl sym">)</span>.Report<span class="hl sym">(</span>Tot_Met<span class="hl sym">,</span> Self_Met<span class="hl sym">);</span>
         Sum <span class="hl sym">:=</span> Sum <span class="hl sym">+</span> Tot_Met<span class="hl sym">;</span>
         Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> Tot_Met<span class="hl sym">,</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span>
         Put_Line<span class="hl sym">(</span>Spell_Out<span class="hl sym">(</span>Self_Met<span class="hl sym">));</span>
      <span class="hl kwa">end loop</span><span class="hl sym">;</span>
      Put_Line<span class="hl sym">(</span>Spell_Out<span class="hl sym">(</span>Sum<span class="hl sym">));</span>
   <span class="hl kwa">end</span> Start_Creatures<span class="hl sym">;</span>

<span class="hl kwa">begin</span>
   <span class="hl kwa">if</span> Argument_Count <span class="hl sym">&lt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span>
      N <span class="hl sym">:=</span> <span class="hl num">600</span><span class="hl sym">;</span>
   <span class="hl kwa">else</span>
      N <span class="hl sym">:=</span> <span class="hl kwb">Natural</span><span class="hl sym">'</span>Value<span class="hl sym">(</span>Argument<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">));</span>
   <span class="hl kwa">end if</span><span class="hl sym">;</span>

   Printcolorchanges<span class="hl sym">;</span>

   Start_Creatures<span class="hl sym">((</span>Blue<span class="hl sym">,</span> Red<span class="hl sym">,</span> Yellow<span class="hl sym">));</span>
   New_Line<span class="hl sym">;</span>
   Start_Creatures<span class="hl sym">((</span>blue<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">,</span> blue<span class="hl sym">,</span> red<span class="hl sym">,</span> yellow<span class="hl sym">,</span> red<span class="hl sym">,</span> blue<span class="hl sym">));</span>
   New_Line<span class="hl sym">;</span>
<span class="hl kwa">end</span> ChameneosRedux<span class="hl sym">;</span>
