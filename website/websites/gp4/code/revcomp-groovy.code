<span class="dir">#!/bin/env groovy</span>
<span class="com">/*</span>
<span class="com">	$Id: revcomp-groovy.code,v 1.2 2005-10-29 23:09:24 igouy-guest Exp $</span>
<span class="com"></span>
<span class="com">	The Great Computer Language Shootout</span>
<span class="com">	http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">	contributed by Jochen Hinrichsen</span>
<span class="com">*/</span>

def complements <span class="sym">= [</span><span class="str">'A'</span><span class="sym">:</span><span class="str">'T'</span><span class="sym">,</span> <span class="str">'C'</span><span class="sym">:</span><span class="str">'G'</span><span class="sym">,</span> <span class="str">'G'</span><span class="sym">:</span><span class="str">'C'</span><span class="sym">,</span> <span class="str">'T'</span><span class="sym">:</span><span class="str">'A'</span><span class="sym">,</span> <span class="str">'M'</span><span class="sym">:</span><span class="str">'K'</span><span class="sym">,</span> <span class="str">'R'</span><span class="sym">:</span><span class="str">'Y'</span><span class="sym">,</span> <span class="str">'W'</span><span class="sym">:</span><span class="str">'W'</span><span class="sym">,</span> <span class="str">'S'</span><span class="sym">:</span><span class="str">'S'</span><span class="sym">,</span> <span class="str">'Y'</span><span class="sym">:</span><span class="str">'R'</span><span class="sym">,</span> <span class="str">'K'</span><span class="sym">:</span><span class="str">'M'</span><span class="sym">,</span> <span class="str">'V'</span><span class="sym">:</span><span class="str">'B'</span><span class="sym">,</span> <span class="str">'H'</span><span class="sym">:</span><span class="str">'D'</span><span class="sym">,</span> <span class="str">'D'</span><span class="sym">:</span><span class="str">'H'</span><span class="sym">,</span> <span class="str">'B'</span><span class="sym">:</span><span class="str">'V'</span><span class="sym">,</span> <span class="str">'N'</span><span class="sym">:</span><span class="str">'N'</span><span class="sym">]</span>

def <span class="kwd">revComp</span><span class="sym">(</span>s<span class="sym">) {</span>
    def rev <span class="sym">=</span> <span class="str">&quot;&quot;</span>
    s<span class="sym">.</span><span class="kwd">toUpperCase</span><span class="sym">().</span><span class="kwd">each</span><span class="sym">() {</span>
        def ch <span class="sym">=</span> complements<span class="sym">[</span>it<span class="sym">]</span>
        <span class="kwa">if</span> <span class="sym">(</span>ch <span class="sym">==</span> null<span class="sym">) {</span>
            println <span class="str">&quot;&quot;</span>
            <span class="kwd">println</span> <span class="sym">(</span>it<span class="sym">)</span>
        <span class="sym">}</span>
        rev <span class="sym">+=</span> ch
    <span class="sym">}</span>
    rev
<span class="sym">}</span>

System<span class="sym">.</span>in<span class="sym">.</span><span class="kwd">newReader</span><span class="sym">().</span><span class="kwd">eachLine</span><span class="sym">() {</span> line <span class="sym">-&gt;</span>
    <span class="kwd">println</span> <span class="sym">(</span>line<span class="sym">.</span><span class="kwd">startsWith</span><span class="sym">(</span><span class="str">&quot;&gt;&quot;</span><span class="sym">)</span> ? line <span class="sym">:</span> <span class="kwd">revComp</span><span class="sym">(</span>line<span class="sym">))</span>
<span class="sym">}</span>

<span class="slc">// EOF</span>
