<span class="slc">#!/usr/bin/perl</span>

<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc">#  http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc">#   contributed by John O'Hare 03 August 2005.</span>

<span class="kwa">use</span> strict<span class="sym">;</span>
<span class="kwa">use</span> warnings<span class="sym">;</span>
<span class="kwa">use</span> Socket<span class="sym">;</span>

<span class="kwa">use</span> constant PORT_NUMBER <span class="sym">=&gt;</span> 	<span class="num">12331</span><span class="sym">;</span>
<span class="kwa">use</span> constant M <span class="sym">=&gt;</span> 		<span class="num">100</span><span class="sym">;</span>
<span class="kwa">use</span> constant REPLY_SIZE <span class="sym">=&gt;</span> 	<span class="num">4096</span><span class="sym">;</span>
<span class="kwa">use</span> constant REQUEST_SIZE <span class="sym">=&gt;</span> 	<span class="num">64</span><span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">$n</span> <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
<span class="kwb">$n</span> <span class="sym">=</span> <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">]</span> <span class="kwa">if</span> <span class="sym">(</span><span class="kwd">defined</span><span class="sym">(</span><span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">]));</span>
<span class="kwb">$n</span> <span class="sym">*=</span> M<span class="sym">;</span>

<span class="kwa">unless</span> <span class="sym">(</span>fork<span class="sym">) {</span> <span class="slc">#client</span>
	sleep <span class="num">2</span><span class="sym">;</span> <span class="slc">#wait for the server to start</span>

	<span class="kwc">my</span> <span class="kwb">$cbuf</span><span class="sym">;</span>
	<span class="kwc">my</span> <span class="kwb">$request</span> <span class="sym">=</span> <span class="kwd">chr</span><span class="sym">(</span><span class="num">60</span><span class="sym">)</span>x REQUEST_SIZE<span class="sym">;</span>
	<span class="kwc">my</span> <span class="kwb">$bytes</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
	<span class="kwc">my</span> <span class="kwb">$replies</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>

	<span class="kwd">socket</span><span class="sym">(</span>CSOCK<span class="sym">,</span> PF_INET<span class="sym">,</span> SOCK_STREAM<span class="sym">,</span> <span class="kwd">getprotobyname</span><span class="sym">(</span><span class="str">'tcp'</span><span class="sym">)) ||</span> die <span class="sym">$!;</span>
	<span class="kwd">connect</span><span class="sym">(</span>CSOCK<span class="sym">,</span> <span class="kwd">sockaddr_in</span><span class="sym">(</span>PORT_NUMBER<span class="sym">,</span> INADDR_LOOPBACK<span class="sym">))</span> <span class="kwa">or</span> die <span class="sym">$!;</span>

	<span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$n</span><span class="sym">--) {</span>
		<span class="kwc">my</span> <span class="kwb">$tmpbytes</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
		<span class="kwd">defined</span><span class="sym">(</span><span class="kwd">send</span><span class="sym">(</span>CSOCK<span class="sym">,</span> <span class="kwb">$request</span><span class="sym">,</span> <span class="num">0</span><span class="sym">))</span> <span class="kwa">or</span> die <span class="sym">$!;</span>
		<span class="kwa">while</span> <span class="sym">((</span><span class="kwb">$tmpbytes</span> <span class="sym">+=</span> <span class="kwd">sysread</span><span class="sym">(</span>CSOCK<span class="sym">,</span> <span class="kwb">$cbuf</span><span class="sym">,</span> REPLY_SIZE<span class="sym">)) &lt;</span> REPLY_SIZE<span class="sym">) {}</span>
		<span class="kwb">$bytes</span> <span class="sym">+=</span> <span class="kwb">$tmpbytes</span><span class="sym">;</span>
		<span class="kwb">$replies</span><span class="sym">++;</span>
	<span class="sym">}</span>

	<span class="kwd">shutdown</span><span class="sym">(</span>CSOCK<span class="sym">,</span> <span class="num">2</span><span class="sym">);</span>
	print <span class="str">&quot;replies: $replies</span><span class="esc">\t</span><span class="str">bytes: $bytes</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
	<span class="kwd">exit</span><span class="sym">(</span><span class="num">0</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="slc">#server</span>
<span class="kwc">my</span> <span class="kwb">$reply</span> <span class="sym">=</span> <span class="kwd">chr</span><span class="sym">(</span><span class="num">62</span><span class="sym">)</span>x REPLY_SIZE<span class="sym">;</span>
<span class="kwc">my</span> <span class="kwb">$sbuf</span><span class="sym">;</span>

<span class="kwd">socket</span><span class="sym">(</span>SSOCK<span class="sym">,</span> PF_INET<span class="sym">,</span> SOCK_STREAM<span class="sym">,</span> <span class="kwd">getprotobyname</span><span class="sym">(</span><span class="str">'tcp'</span><span class="sym">)) ||</span> die <span class="sym">$!;</span>
<span class="kwd">bind</span> <span class="sym">(</span>SSOCK<span class="sym">,</span> <span class="kwd">sockaddr_in</span><span class="sym">(</span>PORT_NUMBER<span class="sym">,</span> INADDR_LOOPBACK<span class="sym">)) ||</span> die <span class="sym">$!;</span>

<span class="kwd">listen</span> <span class="sym">(</span>SSOCK<span class="sym">,</span> <span class="num">1</span><span class="sym">);</span>

<span class="kwd">accept</span> <span class="sym">(</span>CONN<span class="sym">,</span> SSOCK<span class="sym">) ||</span> die <span class="sym">$!;</span>

<span class="kwa">while</span> <span class="sym">(</span><span class="kwd">sysread</span><span class="sym">(</span>CONN<span class="sym">,</span> <span class="kwb">$sbuf</span><span class="sym">,</span> REQUEST_SIZE<span class="sym">)) {</span>
	<span class="kwd">defined</span><span class="sym">(</span><span class="kwd">send</span><span class="sym">(</span>CONN<span class="sym">,</span> <span class="kwb">$reply</span><span class="sym">,</span> <span class="num">0</span><span class="sym">))</span> <span class="kwa">or</span> die <span class="sym">$!;</span>
<span class="sym">}</span>

<span class="kwd">shutdown</span><span class="sym">(</span>CONN<span class="sym">,</span> <span class="num">2</span><span class="sym">);</span>
<span class="kwd">shutdown</span><span class="sym">(</span>SSOCK<span class="sym">,</span> <span class="num">2</span><span class="sym">);</span>
