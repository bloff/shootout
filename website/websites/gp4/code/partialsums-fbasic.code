rem The Computer Language Shootout
rem http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/</span>
rem contributed by Josh Goldfoot
rem based on the D version by Dave Fladebo

<span class="kwa">dim</span> sum<span class="sym">(</span><span class="num">8</span><span class="sym">)</span> <span class="kwa">as</span> double
<span class="kwa">dim as</span> double k<span class="sym">,</span> k2<span class="sym">,</span> k3<span class="sym">,</span> ks<span class="sym">,</span> kc<span class="sym">,</span> tt
n <span class="sym">=</span> val<span class="sym">(</span>command$<span class="sym">) +</span> <span class="num">1</span>
<span class="kwa">if</span> n <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span> n <span class="sym">=</span> <span class="num">25001</span>
alt <span class="sym">=</span> <span class="num">1.0</span>
tt <span class="sym">=</span> <span class="num">2</span> <span class="sym">/</span> <span class="num">3</span>

<span class="kwa">for</span> k <span class="sym">=</span> <span class="num">1</span> <span class="kwa">to</span> n<span class="sym">-</span><span class="num">1</span>
   k2 <span class="sym">=</span> k <span class="sym">*</span> k
   k3 <span class="sym">=</span> k2 <span class="sym">*</span> k
   ks <span class="sym">=</span> sin<span class="sym">(</span>k<span class="sym">)</span>
   kc <span class="sym">=</span> cos<span class="sym">(</span>k<span class="sym">)</span>

   sum<span class="sym">(</span><span class="num">0</span><span class="sym">) +=</span> tt ^ <span class="sym">(</span>k <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span>
   sum<span class="sym">(</span><span class="num">1</span><span class="sym">) +=</span> <span class="num">1</span> <span class="sym">/</span> sqr<span class="sym">(</span>k<span class="sym">)</span>
   sum<span class="sym">(</span><span class="num">2</span><span class="sym">) +=</span> <span class="num">1</span> <span class="sym">/ (</span>k <span class="sym">* (</span>k <span class="sym">+</span> <span class="num">1</span><span class="sym">))</span>
   sum<span class="sym">(</span><span class="num">3</span><span class="sym">) +=</span> <span class="num">1</span> <span class="sym">/ (</span>k3 <span class="sym">*</span> ks <span class="sym">*</span> ks<span class="sym">)</span>
   sum<span class="sym">(</span><span class="num">4</span><span class="sym">) +=</span> <span class="num">1</span> <span class="sym">/ (</span>k3 <span class="sym">*</span> kc <span class="sym">*</span> kc<span class="sym">)</span>
   sum<span class="sym">(</span><span class="num">5</span><span class="sym">) +=</span> <span class="num">1</span> <span class="sym">/</span> k
   sum<span class="sym">(</span><span class="num">6</span><span class="sym">) +=</span> <span class="num">1</span> <span class="sym">/</span> k2
   sum<span class="sym">(</span><span class="num">7</span><span class="sym">) +=</span> alt <span class="sym">/</span> k
   sum<span class="sym">(</span><span class="num">8</span><span class="sym">) +=</span> alt <span class="sym">/ (</span><span class="num">2</span> <span class="sym">*</span> k <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span>
   alt <span class="sym">*= -</span><span class="num">1</span>
<span class="kwa">next</span> k

REM this is necessary because <span class="str">&quot;print using&quot;</span> rounds poorly
<span class="kwa">dim</span> factor <span class="kwa">as</span> longint
factor <span class="sym">=</span> <span class="num">1000000000</span>
<span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> <span class="num">8</span>
   sum<span class="sym">(</span>i<span class="sym">) =</span> clngint<span class="sym">(</span>sum<span class="sym">(</span>i<span class="sym">) *</span> factor<span class="sym">) /</span> factor
<span class="kwa">next</span> i

fmt$ <span class="sym">=</span> <span class="str">&quot;#.#########&quot;</span>

print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">0</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;(2/3)^k&quot;</span>
a$ <span class="sym">=</span> str<span class="sym">(</span>sum<span class="sym">(</span><span class="num">1</span><span class="sym">))</span>
print left<span class="sym">(</span>a$<span class="sym">,</span> instr<span class="sym">(</span>a$<span class="sym">,</span><span class="str">&quot;.&quot;</span><span class="sym">)+</span><span class="num">9</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;k^-0.5&quot;</span>
print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">2</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;1/k(k+1)&quot;</span>
print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">3</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;Flint Hills&quot;</span>
print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">4</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;Cookson Hills&quot;</span>
print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">5</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;Harmonic&quot;</span>
print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">6</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;Riemann Zeta&quot;</span>
print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">7</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;Alternating Harmonic&quot;</span>
print using fmt$<span class="sym">;</span> sum<span class="sym">(</span><span class="num">8</span><span class="sym">);</span>
print chr<span class="sym">(</span><span class="num">9</span><span class="sym">);</span> <span class="str">&quot;Gregory&quot;</span>


