<span class="com">&quot;*  The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy *&quot;</span><span class="sym">!</span>

<span class="sym">!</span>Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 23:37'</span><span class="sym">!</span>nsieve   <span class="sym">|</span> n <span class="sym">|</span>   n <span class="sym">:= (</span>Smalltalk getSystemAttribute<span class="sym">:</span> <span class="num">3</span><span class="sym">)</span> asInteger<span class="sym">.   (</span>n <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span> ifTrue<span class="sym">: [</span>n <span class="sym">:=</span> <span class="num">2</span><span class="sym">].</span>    n      primes<span class="sym">.   (</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> primes<span class="sym">.   (</span>n <span class="sym">-</span> <span class="num">2</span><span class="sym">)</span> primes<span class="sym">.! !</span>


<span class="sym">!</span>SmallInteger methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 22:34'</span><span class="sym">!</span>nsieve    <span class="sym">|</span> count isPrime <span class="sym">|</span>   count <span class="sym">:=</span> <span class="num">0</span><span class="sym">.</span>   isPrime <span class="sym">:=</span> Array new<span class="sym">:</span> <span class="kwa">self</span> withAll<span class="sym">:</span> <span class="kwa">true</span><span class="sym">.</span>   <span class="num">2</span> to<span class="sym">:</span> <span class="kwa">self</span> do<span class="sym">: [:</span>i<span class="sym">|      (</span>isPrime at<span class="sym">:</span> i<span class="sym">)</span> ifTrue<span class="sym">: [</span>         i<span class="sym">+</span>i to<span class="sym">:</span> <span class="kwa">self</span> by<span class="sym">:</span> i do<span class="sym">: [:</span>k<span class="sym">|</span> isPrime at<span class="sym">:</span> k put<span class="sym">:</span> <span class="kwa">false</span><span class="sym">].</span>         count <span class="sym">:=</span> count <span class="sym">+</span> <span class="num">1</span><span class="sym">.         ].      ].   ^</span>count<span class="sym">! !</span>


<span class="sym">!</span>SmallInteger methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 22:43'</span><span class="sym">!</span>primes   <span class="sym">|</span> m <span class="sym">|</span>   m <span class="sym">:= (</span><span class="num">2</span> raisedTo<span class="sym">:</span> <span class="kwa">self</span><span class="sym">) *</span> <span class="num">10000</span><span class="sym">.   (</span>FileStream fileNamed<span class="sym">:</span> <span class="str">'/dev/stdout'</span><span class="sym">)</span>      nextPutAll<span class="sym">:</span> <span class="str">'Primes up to '</span><span class="sym">;</span> nextPutAll<span class="sym">: (</span>m printStringLength<span class="sym">:</span> <span class="num">8</span> padded<span class="sym">:</span> <span class="kwa">false</span><span class="sym">);</span>      nextPutAll<span class="sym">: (</span>m nsieve printStringLength<span class="sym">:</span> <span class="num">9</span> padded<span class="sym">:</span> <span class="kwa">false</span><span class="sym">);</span>       nextPut<span class="sym">:</span> Character lf<span class="sym">! !</span>

