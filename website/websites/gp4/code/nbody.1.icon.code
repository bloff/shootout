<span class="slc"># The Computer Language Shootout Benchmarks</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># by Charles Evans 2005-12-25</span>
<span class="slc"># based on nbody.py by Kevin Carson</span>
<span class="slc">#</span>
<span class="slc"># - - - NOTE: this program uses printf, but</span>
<span class="slc"># both the debian stable and the latest official release are buggy,</span>
<span class="slc"># and will cause this program to fail.</span>
<span class="slc"># - - - Please use the June 16, 2003 version, also uploaded to</span>
<span class="slc"># https://alioth.debian.org/tracker/index.php?func=detail&amp;aid=302825&amp;group_id=30402&amp;atid=411005</span>

<span class="kwa">link</span> printf

<span class="kwb">$define</span> pi <span class="num">3.14159265358979323</span>
<span class="kwb">$define</span> days_per_year  <span class="num">365.24</span>
<span class="kwa">global</span> solar_mass<span class="sym">,</span> t


<span class="kwa">procedure</span> advance<span class="sym">(</span>bodies<span class="sym">,</span> dt<span class="sym">)</span>
<span class="kwa">local</span> i<span class="sym">,</span>b<span class="sym">,</span>j<span class="sym">,</span>b2<span class="sym">,</span>bdt_mass_x_mag<span class="sym">,</span>bdt2_mass_x_mag<span class="sym">,</span>dx<span class="sym">,</span>dy<span class="sym">,</span>dz<span class="sym">,</span>dtdistance3
<span class="kwa">every</span> i<span class="sym">:=</span><span class="num">1</span> <span class="kwa">to</span> <span class="sym">*</span>bodies <span class="kwa">do</span><span class="sym">{</span>
        b <span class="sym">:=</span> bodies<span class="sym">[</span>i<span class="sym">]</span>

	<span class="kwa">every</span> j<span class="sym">:=</span>i<span class="sym">+</span><span class="num">1</span> <span class="kwa">to</span> <span class="sym">*</span>bodies <span class="kwa">do</span><span class="sym">{</span>
            b2 <span class="sym">:=</span> bodies<span class="sym">[</span>j<span class="sym">]</span>

            dx <span class="sym">:=</span> b.x <span class="sym">-</span> b2.x
            dy <span class="sym">:=</span> b.y <span class="sym">-</span> b2.y
            dz <span class="sym">:=</span> b.z <span class="sym">-</span> b2.z
            dtdistance3 <span class="sym">:=</span> dt <span class="sym">/ (</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">)</span>^<span class="num">1.5</span> <span class="slc"># ^(.5*3)</span>
				bdt_mass_x_mag <span class="sym">:=</span>  b.mass <span class="sym">*</span> dtdistance3
bdt2_mass_x_mag <span class="sym">:=</span> b2.mass <span class="sym">*</span> dtdistance3
<span class="slc"># we should save each dt*b.mass while dt is constant</span>
            b.vx <span class="sym">-:=</span> dx <span class="sym">*</span> bdt2_mass_x_mag
            b.vy <span class="sym">-:=</span> dy <span class="sym">*</span> bdt2_mass_x_mag
            b.vz <span class="sym">-:=</span> dz <span class="sym">*</span>bdt2_mass_x_mag
            b2.vx <span class="sym">+:=</span> dx <span class="sym">*</span>bdt_mass_x_mag
            b2.vy <span class="sym">+:=</span> dy <span class="sym">*</span>bdt_mass_x_mag
            b2.vz <span class="sym">+:=</span> dz <span class="sym">*</span>bdt_mass_x_mag
        <span class="sym">}</span> <span class="slc"># end every j</span>
    <span class="sym">}</span> <span class="slc"># end every i</span>
    <span class="kwa">every</span> b<span class="sym">:=!</span>bodies <span class="kwa">do</span><span class="sym">{</span>
        b.x <span class="sym">+:=</span> dt <span class="sym">*</span> b.vx
        b.y <span class="sym">+:=</span> dt <span class="sym">*</span> b.vy
        b.z <span class="sym">+:=</span> dt <span class="sym">*</span> b.vz
<span class="sym">}</span><span class="slc"># end every *bodies</span>
<span class="kwa">end</span>

<span class="kwa">procedure</span> energy<span class="sym">(</span>bodies<span class="sym">)</span>
<span class="kwa">local</span> dx<span class="sym">,</span>dy<span class="sym">,</span>dz<span class="sym">,</span>distance<span class="sym">,</span>e
    e <span class="sym">:=</span> <span class="num">0.0</span>
    <span class="kwa">every</span> i<span class="sym">:=</span><span class="num">1</span> <span class="kwa">to</span> <span class="sym">*</span>bodies <span class="kwa">do</span><span class="sym">{</span>
        b <span class="sym">:=</span> bodies<span class="sym">[</span>i<span class="sym">]</span>

        e <span class="sym">+:=</span> <span class="num">0.5</span> <span class="sym">*</span> b.mass <span class="sym">* (</span>b.vx^<span class="num">2</span> <span class="sym">+</span> b.vy^<span class="num">2</span> <span class="sym">+</span> b.vz^<span class="num">2</span><span class="sym">)</span>

	<span class="kwa">every</span> j<span class="sym">:=</span>i<span class="sym">+</span><span class="num">1</span> <span class="kwa">to</span> <span class="sym">*</span>bodies <span class="kwa">do</span><span class="sym">{</span>
            b2 <span class="sym">:=</span> bodies<span class="sym">[</span>j<span class="sym">]</span>

            dx <span class="sym">:=</span> b.x <span class="sym">-</span> b2.x
            dy <span class="sym">:=</span> b.y <span class="sym">-</span> b2.y
            dz <span class="sym">:=</span> b.z <span class="sym">-</span> b2.z
            distance <span class="sym">:= (</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">)</span>^<span class="num">0.5</span>

            e <span class="sym">-:= (</span>b.mass <span class="sym">*</span> b2.mass<span class="sym">) /</span> distance
	<span class="sym">}</span>
    <span class="sym">}</span>
    <span class="kwa">return</span> e
<span class="kwa">end</span>

<span class="kwa">global</span> sun<span class="sym">,</span> jupiter<span class="sym">,</span> saturn<span class="sym">,</span> uranus<span class="sym">,</span> neptune

<span class="kwa">procedure</span> offset_momentum<span class="sym">(</span>bodies<span class="sym">)</span>
<span class="kwa">local</span> px<span class="sym">,</span>py<span class="sym">,</span>pz<span class="sym">,</span>b
    px <span class="sym">:=</span> py <span class="sym">:=</span> pz <span class="sym">:=</span> <span class="num">0.0</span>

<span class="slc">#    for b in bodies :</span>
    <span class="kwa">every</span> b<span class="sym">:=!</span>bodies <span class="kwa">do</span><span class="sym">{</span>
        px <span class="sym">+:=</span> b.vx <span class="sym">*</span> b.mass
        py <span class="sym">+:=</span> b.vy <span class="sym">*</span> b.mass
        pz <span class="sym">+:=</span> b.vz <span class="sym">*</span> b.mass
    <span class="sym">}</span>
    sun.vx <span class="sym">:= -</span> px <span class="sym">/</span> solar_mass
    sun.vy <span class="sym">:= -</span> py <span class="sym">/</span> solar_mass
    sun.vz <span class="sym">:= -</span> pz <span class="sym">/</span> solar_mass

<span class="kwa">end</span>

<span class="kwa">record</span> body<span class="sym">(</span>x<span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">,</span>vx<span class="sym">,</span>vy<span class="sym">,</span>vz<span class="sym">,</span>mass<span class="sym">)</span>

<span class="kwa">procedure</span> init<span class="sym">()</span>
sun <span class="sym">:=</span> body<span class="sym">()</span>
sun.x <span class="sym">:=</span> sun.y <span class="sym">:=</span> sun.z <span class="sym">:=</span> sun.vx <span class="sym">:=</span> sun.vy <span class="sym">:=</span> sun.vz <span class="sym">:=</span> <span class="num">0.0</span>
sun.mass <span class="sym">:=</span> solar_mass

jupiter <span class="sym">:=</span> body<span class="sym">()</span>
jupiter.x <span class="sym">:=</span> <span class="num">4.84143144246472090e+00</span>
jupiter.y <span class="sym">:= -</span><span class="num">1.16032004402742839e+00</span>
jupiter.z <span class="sym">:= -</span><span class="num">1.03622044471123109e-01</span>
jupiter.vx <span class="sym">:=</span> <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> days_per_year
jupiter.vy <span class="sym">:=</span> <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> days_per_year
jupiter.vz <span class="sym">:= -</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> days_per_year
jupiter.mass <span class="sym">:=</span> <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> solar_mass

saturn <span class="sym">:=</span> body<span class="sym">()</span>
saturn.x <span class="sym">:=</span> <span class="num">8.34336671824457987e+00</span>
saturn.y <span class="sym">:=</span> <span class="num">4.12479856412430479e+00</span>
saturn.z <span class="sym">:= -</span><span class="num">4.03523417114321381e-01</span>
saturn.vx <span class="sym">:= -</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> days_per_year
saturn.vy <span class="sym">:=</span> <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> days_per_year
saturn.vz <span class="sym">:=</span> <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> days_per_year
saturn.mass <span class="sym">:=</span> <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> solar_mass

uranus <span class="sym">:=</span> body<span class="sym">()</span>
uranus.x <span class="sym">:=</span> <span class="num">1.28943695621391310e+01</span>
uranus.y <span class="sym">:= -</span><span class="num">1.51111514016986312e+01</span>
uranus.z <span class="sym">:= -</span><span class="num">2.23307578892655734e-01</span>
uranus.vx <span class="sym">:=</span> <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> days_per_year
uranus.vy <span class="sym">:=</span> <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> days_per_year
uranus.vz <span class="sym">:= -</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> days_per_year
uranus.mass <span class="sym">:=</span> <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> solar_mass

neptune <span class="sym">:=</span> body<span class="sym">()</span>
neptune.x <span class="sym">:=</span> <span class="num">1.53796971148509165e+01</span>
neptune.y <span class="sym">:= -</span><span class="num">2.59193146099879641e+01</span>
neptune.z <span class="sym">:=</span> <span class="num">1.79258772950371181e-01</span>
neptune.vx <span class="sym">:=</span> <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> days_per_year
neptune.vy <span class="sym">:=</span> <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> days_per_year
neptune.vz <span class="sym">:= -</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> days_per_year
neptune.mass <span class="sym">:=</span> <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> solar_mass
<span class="kwa">end</span> <span class="slc"># init</span>

<span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)</span>
    solar_mass <span class="sym">:= (</span> <span class="num">4</span> <span class="sym">*</span> pi <span class="sym">*</span> pi<span class="sym">)</span>
    init<span class="sym">()</span>
    n <span class="sym">:=</span> argv<span class="sym">[</span><span class="num">1</span><span class="sym">]|</span> stop<span class="sym">(</span><span class="str">&quot;Usage: nbody &lt;N&gt;&quot;</span><span class="sym">)</span>

    bodies <span class="sym">:= [</span>sun<span class="sym">,</span> jupiter<span class="sym">,</span> saturn<span class="sym">,</span> uranus<span class="sym">,</span> neptune<span class="sym">]</span>
	<span class="slc"># ^ must be after init()</span>
    offset_momentum<span class="sym">(</span>bodies<span class="sym">)</span>
t<span class="sym">:=</span><span class="num">0</span>
    printf<span class="sym">(</span> <span class="str">&quot;%11.9r</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> energy<span class="sym">(</span>bodies<span class="sym">))</span>
<span class="kwa">every</span> t<span class="sym">:=</span> <span class="num">1</span> <span class="kwa">to</span> n <span class="kwa">do</span>
	advance<span class="sym">(</span>bodies<span class="sym">,</span> <span class="num">0.01</span><span class="sym">)</span>
    printf<span class="sym">(</span> <span class="str">&quot;%11.9r</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> energy<span class="sym">(</span>bodies<span class="sym">))</span>
<span class="slc">#write(energy(bodies))</span>
<span class="slc">#write(&amp;errout,&amp;time)</span>
<span class="kwa">end</span>
