<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Isaac Gouy</span>
<span class="hl com">*)</span>

<span class="hl kwa">module</span> threadring<span class="hl sym">;</span>

<span class="hl kwa">import</span>
   System<span class="hl sym">.</span>Console <span class="hl kwa">as</span> C<span class="hl sym">,</span>
   BenchmarksGame<span class="hl sym">;</span>

<span class="hl kwa">protocol</span> TokenProtocol <span class="hl sym">= (</span>token <span class="hl sym">=</span> <span class="hl kwb">integer</span><span class="hl sym">);</span>

<span class="hl kwa">activity</span> <span class="hl kwd">NamedThread</span><span class="hl sym">(</span>name <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">)</span> <span class="hl kwa">implements</span> TokenProtocol<span class="hl sym">;</span>
<span class="hl kwa">var</span>
   token <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
   <span class="hl kwa">loop</span>
      <span class="hl kwa">accept</span> token<span class="hl sym">;</span>
      <span class="hl kwa">if</span> token <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
         <span class="hl kwd">NextThreadTake</span><span class="hl sym">(</span>name<span class="hl sym">,</span> token<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span>
      <span class="hl kwa">else</span>
         <span class="hl kwa">if</span> token <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> C<span class="hl sym">.</span><span class="hl kwd">WriteLine</span><span class="hl sym">(</span><span class="hl str">&quot;{0}&quot;</span><span class="hl sym">,</span> name<span class="hl sym">);</span> <span class="hl kwa">end</span><span class="hl sym">;</span>
         <span class="hl kwd">NextThreadTake</span><span class="hl sym">(</span>name<span class="hl sym">, -</span><span class="hl num">1</span><span class="hl sym">);</span>
         <span class="hl kwa">exit</span><span class="hl sym">;</span>
      <span class="hl kwa">end</span><span class="hl sym">;</span>
   <span class="hl kwa">end</span><span class="hl sym">;</span>
<span class="hl kwa">end</span> NamedThread<span class="hl sym">;</span>


<span class="hl kwa">procedure</span> <span class="hl kwd">NextThreadTake</span><span class="hl sym">(</span>name<span class="hl sym">,</span> token <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">);</span>
<span class="hl kwa">var</span>
   nextThread <span class="hl sym">:</span> NamedThread<span class="hl sym">;</span>
<span class="hl kwa">begin</span>
   <span class="hl com">(*</span>
<span class="hl com">   (threadRing[ name mod numberOfThreads ])(token);</span>
<span class="hl com">   &quot;Sorry, Calls like (a+b).method not implemented yet&quot;</span>
<span class="hl com">   *)</span>

   nextThread <span class="hl sym">:=</span> threadRing<span class="hl sym">[</span> name <span class="hl kwa">mod</span> numberOfThreads <span class="hl sym">];</span>
   <span class="hl kwd">nextThread</span><span class="hl sym">(</span>token<span class="hl sym">);</span>
<span class="hl kwa">end</span> NextThreadTake<span class="hl sym">;</span>


<span class="hl kwa">const</span> numberOfThreads <span class="hl sym">=</span> <span class="hl num">503</span><span class="hl sym">;</span>

<span class="hl kwa">var</span>
   thread <span class="hl sym">:</span> NamedThread<span class="hl sym">;</span>
   threadRing <span class="hl sym">:</span> <span class="hl kwa">array</span> numberOfThreads <span class="hl kwa">of</span> NamedThread<span class="hl sym">;</span>
   i <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>

<span class="hl kwa">begin</span>
   <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> numberOfThreads<span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
      threadRing<span class="hl sym">[</span>i<span class="hl sym">] :=</span> <span class="hl kwa">new</span> <span class="hl kwd">NamedThread</span><span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span>
   <span class="hl kwa">end</span><span class="hl sym">;</span>

   <span class="hl com">(* (threadRing[0])( BenchmarksGame.argi() ); *)</span>

   thread <span class="hl sym">:=</span> threadRing<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
   <span class="hl kwd">thread</span><span class="hl sym">(</span> BenchmarksGame<span class="hl sym">.</span><span class="hl kwd">argi</span><span class="hl sym">() );</span>
<span class="hl kwa">end</span> threadring<span class="hl sym">.</span>


