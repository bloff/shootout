<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Isaac Gouy</span>
<span class="hl com">*)</span>

<span class="hl kwa">module</span> nsieve<span class="hl sym">;</span>
<span class="hl kwa">import</span> System<span class="hl sym">.</span>Console <span class="hl kwa">as</span> C<span class="hl sym">,</span> BenchmarksGame<span class="hl sym">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">sieve</span><span class="hl sym">(</span>m<span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span> <span class="hl kwa">var</span> isPrime<span class="hl sym">:</span> Vector<span class="hl sym">) :</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
<span class="hl kwa">var</span>
   i<span class="hl sym">,</span> k<span class="hl sym">,</span> count <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
   <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl num">2</span> <span class="hl kwa">to</span> m <span class="hl kwa">do</span> isPrime<span class="hl sym">[</span>i<span class="hl sym">] :=</span> <span class="hl kwa">true</span><span class="hl sym">;</span> <span class="hl kwa">end</span><span class="hl sym">;</span>
   count <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>

   <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl num">2</span> <span class="hl kwa">to</span> m <span class="hl kwa">do</span>
      <span class="hl kwa">if</span> isPrime<span class="hl sym">[</span>i<span class="hl sym">]</span> <span class="hl kwa">then</span>
         k <span class="hl sym">:=</span> i<span class="hl sym">+</span>i<span class="hl sym">;</span>
         <span class="hl kwa">while</span> k <span class="hl sym">&lt;=</span> m <span class="hl kwa">do</span>
            isPrime<span class="hl sym">[</span>k<span class="hl sym">] :=</span> <span class="hl kwa">false</span><span class="hl sym">;</span>
            <span class="hl kwd">inc</span><span class="hl sym">(</span>k<span class="hl sym">,</span>i<span class="hl sym">);</span>
         <span class="hl kwa">end</span><span class="hl sym">;</span>
         <span class="hl kwd">inc</span><span class="hl sym">(</span>count<span class="hl sym">);</span>
      <span class="hl kwa">end</span><span class="hl sym">;</span>
   <span class="hl kwa">end</span><span class="hl sym">;</span>
   <span class="hl kwa">return</span> count<span class="hl sym">;</span>
<span class="hl kwa">end</span> sieve<span class="hl sym">;</span>


<span class="hl kwa">type</span>
   Vector <span class="hl sym">=</span> <span class="hl kwa">array</span> <span class="hl sym">*</span> <span class="hl kwa">of</span> <span class="hl kwb">boolean</span><span class="hl sym">;</span>
<span class="hl kwa">var</span>
   i<span class="hl sym">,</span> m<span class="hl sym">,</span> n <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
   flags <span class="hl sym">:</span> Vector<span class="hl sym">;</span>
<span class="hl kwa">begin</span>
   n <span class="hl sym">:=</span> BenchmarksGame<span class="hl sym">.</span><span class="hl kwd">argi</span><span class="hl sym">();</span>
   m <span class="hl sym">:=</span> <span class="hl kwb">integer</span><span class="hl sym">(</span><span class="hl num">2.0</span> <span class="hl sym">**</span> n<span class="hl sym">) *</span> <span class="hl num">10000</span><span class="hl sym">;</span>
   flags <span class="hl sym">:=</span> <span class="hl kwa">new</span> <span class="hl kwd">Vector</span><span class="hl sym">(</span>m<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span>

   <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">2</span> <span class="hl kwa">do</span>
      m <span class="hl sym">:=</span> <span class="hl kwb">integer</span><span class="hl sym">(</span><span class="hl num">2.0</span> <span class="hl sym">** (</span>n<span class="hl sym">-</span>i<span class="hl sym">)) *</span> <span class="hl num">10000</span><span class="hl sym">;</span>
      C<span class="hl sym">.</span><span class="hl kwd">WriteLine</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to {0,8:D} {1,8:D}&quot;</span><span class="hl sym">,</span> m<span class="hl sym">,</span> <span class="hl kwd">sieve</span><span class="hl sym">(</span>m<span class="hl sym">,</span>flags<span class="hl sym">));</span>
   <span class="hl kwa">end</span><span class="hl sym">;</span>
<span class="hl kwa">end</span> nsieve<span class="hl sym">.</span>
