<span class="hl slc">;; ---------------------------------------------------------------------</span>
<span class="hl slc">;; The Great Computer Language Shootout</span>
<span class="hl slc">;; http://shootout.alioth.debian.org/</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; Based on D language implementation by Dave Fladebo [imperative version]</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; Derived from the Chicken variant, which was</span>
<span class="hl slc">;; Contributed by Anthony Borla</span>
<span class="hl slc">;; ---------------------------------------------------------------------</span>

<span class="hl slc">;; Note: as of version 350, this benchmark spends much of</span>
<span class="hl slc">;;  its time GCing; it runs 1.5 times as fast in mzscheme3m.</span>

<span class="hl sym">(</span>module partialsums mzscheme

  <span class="hl sym">(</span>define <span class="hl sym">(</span>roundto digits n<span class="hl sym">)</span>
    <span class="hl sym">(</span>let<span class="hl sym">* ([</span>e <span class="hl sym">(</span><span class="hl kwa">expt</span> <span class="hl num">10</span> digits<span class="hl sym">)]</span>
	   <span class="hl sym">[</span>num <span class="hl sym">(</span>round <span class="hl sym">(</span><span class="hl kwa">abs</span> <span class="hl sym">(*</span> e <span class="hl sym">(</span>inexact-<span class="hl sym">&gt;</span>exact n<span class="hl sym">))))])</span>
      <span class="hl sym">(</span>format <span class="hl str">&quot;~a~a.~a&quot;</span>
	      <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(</span>negative? n<span class="hl sym">)</span> <span class="hl str">&quot;-&quot;</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">)</span>
	      <span class="hl sym">(</span>quotient num e<span class="hl sym">)</span>
	      <span class="hl sym">(</span>substring <span class="hl sym">(</span>string-<span class="hl kwa">append</span> <span class="hl sym">(</span>number-<span class="hl sym">&gt;</span>string <span class="hl sym">(</span>remainder num e<span class="hl sym">))</span>
					<span class="hl sym">(</span>make-string digits #\0<span class="hl sym">))</span>
			 <span class="hl num">0</span> digits<span class="hl sym">))))</span>

  <span class="hl sym">(</span>let <span class="hl sym">((</span>n <span class="hl sym">(</span>exact-<span class="hl sym">&gt;</span>inexact
	    <span class="hl sym">(</span>string-<span class="hl sym">&gt;</span>number
	     <span class="hl sym">(</span>vector-ref <span class="hl sym">(</span>current-<span class="hl kwa">command</span>-<span class="hl kwa">line</span>-arguments<span class="hl sym">)</span> <span class="hl num">0</span><span class="hl sym">))))</span>

	<span class="hl sym">(</span>alt <span class="hl num">1</span><span class="hl sym">) (</span>d2 <span class="hl num">0</span><span class="hl sym">) (</span>d3 <span class="hl num">0</span><span class="hl sym">) (</span>ds <span class="hl num">0</span><span class="hl sym">) (</span>dc <span class="hl num">0</span><span class="hl sym">)</span>
	<span class="hl sym">(</span>s0 <span class="hl num">0</span><span class="hl sym">) (</span>s1 <span class="hl num">0</span><span class="hl sym">) (</span>s2 <span class="hl num">0</span><span class="hl sym">) (</span>s3 <span class="hl num">0</span><span class="hl sym">) (</span>s4 <span class="hl num">0</span><span class="hl sym">) (</span>s5 <span class="hl num">0</span><span class="hl sym">) (</span>s6 <span class="hl num">0</span><span class="hl sym">) (</span>s7 <span class="hl num">0</span><span class="hl sym">) (</span>s8 <span class="hl num">0</span><span class="hl sym">))</span>

    <span class="hl sym">(</span>let loop <span class="hl sym">([</span>d <span class="hl num">0.0</span><span class="hl sym">]</span>
	       <span class="hl sym">(</span>alt <span class="hl num">1</span><span class="hl sym">) (</span>d2 <span class="hl num">0</span><span class="hl sym">) (</span>d3 <span class="hl num">0</span><span class="hl sym">) (</span>ds <span class="hl num">0</span><span class="hl sym">) (</span>dc <span class="hl num">0</span><span class="hl sym">)</span>
	       <span class="hl sym">(</span>s0 <span class="hl num">0</span><span class="hl sym">) (</span>s1 <span class="hl num">0</span><span class="hl sym">) (</span>s2 <span class="hl num">0</span><span class="hl sym">) (</span>s3 <span class="hl num">0</span><span class="hl sym">) (</span>s4 <span class="hl num">0</span><span class="hl sym">) (</span>s5 <span class="hl num">0</span><span class="hl sym">) (</span>s6 <span class="hl num">0</span><span class="hl sym">) (</span>s7 <span class="hl num">0</span><span class="hl sym">) (</span>s8 <span class="hl num">0</span><span class="hl sym">))</span>
      <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(=</span> d n #<span class="hl slc">;(+ n 1))</span>
	  <span class="hl sym">(</span>let <span class="hl sym">([</span>format-result
		 <span class="hl sym">(</span><span class="hl kwa">lambda</span> <span class="hl sym">(</span>str n<span class="hl sym">)</span>
		   <span class="hl sym">(</span>printf str <span class="hl sym">(</span>roundto <span class="hl num">9</span> n<span class="hl sym">)))])</span>

	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">(2/3)^k</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s0<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">k^-0.5</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s1<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">1/k(k+1)</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s2<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">Flint Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s3<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">Cookson Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s4<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s5<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">Riemann Zeta</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s6<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">Alternating Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s7<span class="hl sym">)</span>
	    <span class="hl sym">(</span>format-result <span class="hl str">&quot;~a</span><span class="hl esc">\t</span><span class="hl str">Gregory</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s8<span class="hl sym">))</span>

	  <span class="hl sym">(</span>let<span class="hl sym">* ((</span>d <span class="hl sym">(+</span> d <span class="hl num">1</span><span class="hl sym">))</span>
		 <span class="hl sym">(</span>d2 <span class="hl sym">(*</span> d d<span class="hl sym">))</span>
		 <span class="hl sym">(</span>d3 <span class="hl sym">(*</span> d2 d<span class="hl sym">))</span>
		 <span class="hl sym">(</span>ds <span class="hl sym">(</span><span class="hl kwa">sin</span> d<span class="hl sym">))</span>
		 <span class="hl sym">(</span>dc <span class="hl sym">(</span><span class="hl kwa">cos</span> d<span class="hl sym">))</span>

		 <span class="hl sym">(</span>s0 <span class="hl sym">(+</span> s0 <span class="hl sym">(</span><span class="hl kwa">expt</span> <span class="hl sym">(/</span> <span class="hl num">2.0 3</span><span class="hl sym">) (</span>- d <span class="hl num">1</span><span class="hl sym">))))</span>
		 <span class="hl sym">(</span>s1 <span class="hl sym">(+</span> s1 <span class="hl sym">(/</span> <span class="hl num">1</span> <span class="hl sym">(</span><span class="hl kwa">sqrt</span> d<span class="hl sym">))))</span>
		 <span class="hl sym">(</span>s2 <span class="hl sym">(+</span> s2 <span class="hl sym">(/</span> <span class="hl num">1</span> <span class="hl sym">(*</span> d <span class="hl sym">(+</span> d <span class="hl num">1</span><span class="hl sym">)))))</span>
		 <span class="hl sym">(</span>s3 <span class="hl sym">(+</span> s3 <span class="hl sym">(/</span> <span class="hl num">1</span> <span class="hl sym">(*</span> d3 <span class="hl sym">(*</span> ds ds<span class="hl sym">)))))</span>
		 <span class="hl sym">(</span>s4 <span class="hl sym">(+</span> s4 <span class="hl sym">(/</span> <span class="hl num">1</span> <span class="hl sym">(*</span> d3 <span class="hl sym">(*</span> dc dc<span class="hl sym">)))))</span>
		 <span class="hl sym">(</span>s5 <span class="hl sym">(+</span> s5 <span class="hl sym">(/</span> <span class="hl num">1</span> d<span class="hl sym">)))</span>
		 <span class="hl sym">(</span>s6 <span class="hl sym">(+</span> s6 <span class="hl sym">(/</span> <span class="hl num">1</span> d2<span class="hl sym">)))</span>
		 <span class="hl sym">(</span>s7 <span class="hl sym">(+</span> s7 <span class="hl sym">(/</span> alt d<span class="hl sym">)))</span>
		 <span class="hl sym">(</span>s8 <span class="hl sym">(+</span> s8 <span class="hl sym">(/</span> alt <span class="hl sym">(</span>- <span class="hl sym">(*</span> <span class="hl num">2</span> d<span class="hl sym">)</span> <span class="hl num">1</span><span class="hl sym">))))</span>
		 <span class="hl sym">(</span>alt <span class="hl sym">(</span>- alt<span class="hl sym">)))</span>

	  <span class="hl sym">(</span>loop d
		alt d2 d3 ds dc
		s0 s1 s2 s3 s4 s5 s6 s7 s8<span class="hl sym">))))))</span>
