<span class="hl slc">%  The Great Computer Language Shootout</span>
<span class="hl slc">%   http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">%   contributed by Mark Scandariato</span>
<span class="hl slc">%</span>
<span class="hl slc">%   erl -noshell -noinput -run pidigits main 7</span>


<span class="hl sym">-</span><span class="hl kwd">module</span><span class="hl sym">(</span>pidigits<span class="hl sym">)</span>.
<span class="hl sym">-</span><span class="hl kwd">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">])</span>.

<span class="hl slc">% conversion</span>
<span class="hl kwd">is_safe</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> N<span class="hl sym">) -&gt;</span> N <span class="hl sym">==</span> <span class="hl kwd">extr</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">)</span>.
<span class="hl kwd">next</span><span class="hl sym">(</span>Z<span class="hl sym">)       -&gt;</span> <span class="hl kwd">extr</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> <span class="hl num">3</span><span class="hl sym">)</span>.
<span class="hl kwd">prod</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> N<span class="hl sym">)    -&gt;</span> <span class="hl kwd">comp</span><span class="hl sym">({</span><span class="hl num">10</span><span class="hl sym">, -</span><span class="hl num">10</span><span class="hl sym">*</span>N<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">},</span> Z<span class="hl sym">)</span>.
<span class="hl kwd">cons</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> Zp<span class="hl sym">)   -&gt;</span> <span class="hl kwd">comp</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> Zp<span class="hl sym">)</span>.

<span class="hl slc">% LFT</span>
<span class="hl sym">-</span><span class="hl kwd">define</span><span class="hl sym">(</span>unit<span class="hl sym">, {</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">})</span>.
<span class="hl kwd">comp</span><span class="hl sym">({</span>Q<span class="hl sym">,</span>R<span class="hl sym">,</span>S<span class="hl sym">,</span>T<span class="hl sym">}, {</span>Qp<span class="hl sym">,</span> Rp<span class="hl sym">,</span> Sp<span class="hl sym">,</span> Tp<span class="hl sym">}) -&gt;</span>
    <span class="hl sym">{</span>Q<span class="hl sym">*</span>Qp <span class="hl sym">+</span> R<span class="hl sym">*</span>Sp<span class="hl sym">,</span> Q<span class="hl sym">*</span>Rp <span class="hl sym">+</span> R<span class="hl sym">*</span>Tp<span class="hl sym">,</span> S<span class="hl sym">*</span>Qp <span class="hl sym">+</span> T<span class="hl sym">*</span>Sp<span class="hl sym">,</span> S<span class="hl sym">*</span>Rp <span class="hl sym">+</span> T<span class="hl sym">*</span>Tp<span class="hl sym">}</span>.
<span class="hl kwd">extr</span><span class="hl sym">({</span>Q<span class="hl sym">,</span>R<span class="hl sym">,</span>S<span class="hl sym">,</span>T<span class="hl sym">},</span> X<span class="hl sym">) -&gt; (</span>Q <span class="hl sym">*</span> X <span class="hl sym">+</span> R<span class="hl sym">)</span> <span class="hl kwd">div</span> <span class="hl sym">(</span>S <span class="hl sym">*</span> X <span class="hl sym">+</span> T<span class="hl sym">)</span>.

<span class="hl kwd">lft</span><span class="hl sym">(</span>K<span class="hl sym">) -&gt; {</span>K<span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">*</span>K<span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span>K<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">}</span>.

<span class="hl kwd">stream</span><span class="hl sym">(</span>N<span class="hl sym">) -&gt;</span> <span class="hl kwd">stream</span><span class="hl sym">(</span>N<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> ?unit<span class="hl sym">, [])</span>.
<span class="hl kwd">stream</span><span class="hl sym">(</span>N<span class="hl sym">,</span> N<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> P<span class="hl sym">) -&gt;</span> <span class="hl kwd">print</span><span class="hl sym">(</span>N<span class="hl sym">,</span>P<span class="hl sym">);</span>
<span class="hl kwd">stream</span><span class="hl sym">(</span>N<span class="hl sym">,</span> C<span class="hl sym">,</span> K<span class="hl sym">,</span> Z<span class="hl sym">,</span> P<span class="hl sym">) -&gt;</span>
    Y <span class="hl sym">=</span> <span class="hl kwd">next</span><span class="hl sym">(</span>Z<span class="hl sym">),</span>
    <span class="hl kwa">case</span> <span class="hl kwd">is_safe</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> Y<span class="hl sym">)</span> <span class="hl kwa">of</span>
        true  <span class="hl sym">-&gt;</span>
            <span class="hl kwd">stream</span><span class="hl sym">(</span>N<span class="hl sym">,</span> C<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> K<span class="hl sym">,</span> <span class="hl kwd">prod</span><span class="hl sym">(</span>Z<span class="hl sym">,</span>Y<span class="hl sym">),</span> <span class="hl kwd">update</span><span class="hl sym">(</span>C<span class="hl sym">,</span>Y<span class="hl sym">,</span>P<span class="hl sym">));</span>
        false <span class="hl sym">-&gt;</span>
            <span class="hl kwd">stream</span><span class="hl sym">(</span>N<span class="hl sym">,</span> C<span class="hl sym">,</span> K<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwd">cons</span><span class="hl sym">(</span>Z<span class="hl sym">,</span> <span class="hl kwd">lft</span><span class="hl sym">(</span>K<span class="hl sym">)),</span> P<span class="hl sym">)</span>
    <span class="hl kwa">end</span>.


<span class="hl kwd">update</span><span class="hl sym">(</span>C<span class="hl sym">,</span> D<span class="hl sym">,</span> P<span class="hl sym">)</span> <span class="hl kwa">when</span> C rem <span class="hl num">10</span> <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">,</span> C <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
    <span class="hl kwd">print</span><span class="hl sym">(</span>C<span class="hl sym">,</span> P<span class="hl sym">),</span>
    <span class="hl sym">[</span>D<span class="hl sym">];</span>

<span class="hl kwd">update</span><span class="hl sym">(</span>_<span class="hl sym">,</span> D<span class="hl sym">,</span> P<span class="hl sym">) -&gt; [</span>D<span class="hl sym">|</span>P<span class="hl sym">]</span>.


<span class="hl kwd">print</span><span class="hl sym">(</span>C<span class="hl sym">,</span> P<span class="hl sym">) -&gt;</span> <span class="hl kwd">do_print</span><span class="hl sym">(</span>C<span class="hl sym">,</span> lists<span class="hl sym">:</span><span class="hl kwd">reverse</span><span class="hl sym">(</span>P<span class="hl sym">))</span>.


<span class="hl kwd">do_print</span><span class="hl sym">(</span>C<span class="hl sym">, [])</span> <span class="hl kwa">when</span> C rem <span class="hl num">10</span> <span class="hl sym">==</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span> io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:~p~n&quot;</span><span class="hl sym">, [</span>C<span class="hl sym">]);</span>
<span class="hl kwd">do_print</span><span class="hl sym">(</span>C<span class="hl sym">, []) -&gt;</span> io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~*.1c:~p~n&quot;</span><span class="hl sym">, [</span><span class="hl num">10</span> <span class="hl sym">-</span> C rem <span class="hl num">10</span><span class="hl sym">,</span> $\t<span class="hl sym">,</span> C<span class="hl sym">]);</span>
<span class="hl kwd">do_print</span><span class="hl sym">(</span>C<span class="hl sym">, [</span>H<span class="hl sym">|</span>T<span class="hl sym">]) -&gt;</span> io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~p&quot;</span><span class="hl sym">, [</span>H<span class="hl sym">]),</span> <span class="hl kwd">do_print</span><span class="hl sym">(</span>C<span class="hl sym">,</span> T<span class="hl sym">)</span>.


<span class="hl kwd">main</span><span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
    N <span class="hl sym">=</span> <span class="hl kwb">list_to_integer</span><span class="hl sym">(</span>Arg<span class="hl sym">),</span>
    <span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">),</span>
    erlang<span class="hl sym">:</span><span class="hl kwb">halt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>

<span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">)</span> <span class="hl kwa">when</span> N <span class="hl sym">&gt;</span> <span class="hl num">1</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">stream</span><span class="hl sym">(</span>N<span class="hl sym">)</span>.
