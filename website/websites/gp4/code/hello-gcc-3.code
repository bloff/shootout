<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> * contributed by Joe Tucek 2008-03-31</span>
<span class="hl com"> *</span>
<span class="hl com"> * Tell GCC that we don't want atexit, we don't want to use the heap,</span>
<span class="hl com"> * and we really don't want anything.  Can't even call write the &quot;normal&quot;</span>
<span class="hl com"> * way, because write() isn't linked in....</span>
<span class="hl com"> *</span>
<span class="hl com"> * Compile flags are picky for this.  I used:</span>
<span class="hl com"> * gcc -pipe -Wall -O3 -fomit-frame-pointer -march=pentium4 -ffreestanding -nostartfiles -s -static -o start3 start3.c</span>
<span class="hl com"> */</span>

<span class="hl dir">#include &lt;sys/syscall.h&gt;</span>
<span class="hl dir">#include &lt;unistd.h&gt;</span>

<span class="hl kwb">int</span> <span class="hl kwd">_start</span><span class="hl sym">() {</span>
  <span class="hl kwd">syscall</span><span class="hl sym">(</span>__NR_write<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl str">&quot;hello world</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl num">12</span><span class="hl sym">);</span>
  <span class="hl kwd">syscall</span><span class="hl sym">(</span>__NR_exit<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">);</span>
  <span class="hl kwa">return</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>
<span class="hl sym">}</span>
