<span class="hl sym">&lt;</span>?php

<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Isaac Gouy</span>
<span class="hl com">*/</span>

<span class="hl kwa">function</span> isPrime<span class="hl sym">(</span><span class="hl kwb">$k</span><span class="hl sym">){</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$k</span> <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">){</span> <span class="hl kwa">return</span> False<span class="hl sym">; }</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$k</span> <span class="hl sym">&lt;</span> <span class="hl num">4</span><span class="hl sym">){</span> <span class="hl kwa">return</span> True<span class="hl sym">; }</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$k</span>%<span class="hl num">2</span> <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">){</span> <span class="hl kwa">return</span> False<span class="hl sym">; }</span>
   <span class="hl kwa">if</span> <span class="hl sym">((</span><span class="hl kwb">$k</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>%<span class="hl num">6</span> <span class="hl sym">!=</span> <span class="hl num">0</span> <span class="hl sym">&amp;&amp; (</span><span class="hl kwb">$k</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>%<span class="hl num">6</span> <span class="hl sym">!=</span> <span class="hl num">0</span><span class="hl sym">){</span> <span class="hl kwa">return</span> False<span class="hl sym">; }</span>

   <span class="hl kwb">$limit</span> <span class="hl sym">=</span> <span class="hl kwa">ceil</span><span class="hl sym">(</span><span class="hl kwa">sqrt</span><span class="hl sym">(</span><span class="hl kwb">$k</span><span class="hl sym">));</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">$i</span> <span class="hl sym">=</span> <span class="hl num">5</span><span class="hl sym">;</span> <span class="hl kwb">$i</span> <span class="hl sym">&lt;=</span> <span class="hl kwb">$limit</span><span class="hl sym">;</span> <span class="hl kwb">$i</span> <span class="hl sym">+=</span> <span class="hl num">2</span><span class="hl sym">){</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$k</span> % <span class="hl kwb">$i</span> <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">) {</span> <span class="hl kwa">return</span> False<span class="hl sym">; }</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">return</span> True<span class="hl sym">;</span>
<span class="hl sym">}</span>


<span class="hl kwa">function</span> Prime<span class="hl sym">(</span><span class="hl kwb">$n</span><span class="hl sym">){</span>
   <span class="hl kwb">$count</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwb">$primeNumber</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">$k</span> <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwb">$count</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$n</span><span class="hl sym">;</span> <span class="hl kwb">$k</span><span class="hl sym">++){</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span>isPrime<span class="hl sym">(</span><span class="hl kwb">$k</span><span class="hl sym">)) {</span>
         <span class="hl kwb">$count</span><span class="hl sym">++;</span>
         <span class="hl kwb">$primeNumber</span> <span class="hl sym">=</span> <span class="hl kwb">$k</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">return</span> <span class="hl kwb">$primeNumber</span><span class="hl sym">;</span>
<span class="hl sym">}</span>


<span class="hl kwb">$n</span> <span class="hl sym">=</span> <span class="hl kwb">$argv</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span>

<span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;1st prime is %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> Prime<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">));</span>
<span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;2nd prime is %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> Prime<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">));</span>

<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">$i</span> <span class="hl sym">=</span> <span class="hl num">10</span><span class="hl sym">*</span><span class="hl kwb">$n</span><span class="hl sym">;</span> <span class="hl kwb">$i</span> <span class="hl sym">&lt;=</span> <span class="hl num">50</span><span class="hl sym">*</span><span class="hl kwb">$n</span><span class="hl sym">;</span> <span class="hl kwb">$i</span> <span class="hl sym">+=</span> <span class="hl num">10</span><span class="hl sym">*</span><span class="hl kwb">$n</span><span class="hl sym">)</span>
   <span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%dth prime is %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwb">$i</span><span class="hl sym">,</span> Prime<span class="hl sym">(</span><span class="hl kwb">$i</span><span class="hl sym">));</span>

?<span class="hl sym">&gt;</span>
