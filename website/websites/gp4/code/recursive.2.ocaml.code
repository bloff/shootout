<span class="hl com">(* recursive.ml</span>
<span class="hl com"> *</span>
<span class="hl com"> * The Great Computer Language Shootout</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * Contributed by Christophe TROESTLER</span>
<span class="hl com"> *)</span>

<span class="hl kwa">let rec</span> ack x y <span class="hl sym">=</span>
  <span class="hl kwa">if</span> x <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> y <span class="hl sym">+</span> <span class="hl num">1</span>
  <span class="hl kwa">else if</span> y <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> <span class="hl kwd">ack</span> <span class="hl sym">(</span>x<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl num">1</span>
  <span class="hl kwa">else</span> <span class="hl kwd">ack</span> <span class="hl sym">(</span>x<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">) (</span>ack <span class="hl kwd">x</span> <span class="hl sym">(</span>y<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">))</span>

<span class="hl kwa">let rec</span> fib n <span class="hl sym">=</span> <span class="hl kwa">if</span> n <span class="hl sym">&lt;</span> <span class="hl num">2</span> <span class="hl kwa">then</span> <span class="hl num">1</span> <span class="hl kwa">else</span> <span class="hl kwd">fib</span><span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">) +</span> <span class="hl kwd">fib</span><span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>

<span class="hl kwa">let rec</span> fib_fp n <span class="hl sym">=</span>
 <span class="hl kwa">if</span> n <span class="hl sym">=</span> <span class="hl num">0</span>. <span class="hl sym">||</span> n <span class="hl sym">=</span> <span class="hl num">1</span>. <span class="hl kwa">then</span> <span class="hl num">1</span>. <span class="hl kwa">else</span> <span class="hl kwd">fib_fp</span><span class="hl sym">(</span>n <span class="hl sym">-</span>. <span class="hl num">2</span>.<span class="hl sym">) +</span>. <span class="hl kwd">fib_fp</span><span class="hl sym">(</span>n <span class="hl sym">-</span>. <span class="hl num">1</span>.<span class="hl sym">)</span>

<span class="hl kwa">let rec</span> tak x y z <span class="hl sym">=</span>
  <span class="hl kwa">if</span> y <span class="hl sym">&lt;</span> x <span class="hl kwa">then</span> <span class="hl kwd">tak</span> <span class="hl sym">(</span><span class="hl kwd">tak</span> <span class="hl sym">(</span>x<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> y z<span class="hl sym">) (</span><span class="hl kwd">tak</span> <span class="hl sym">(</span>y<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> z x<span class="hl sym">) (</span><span class="hl kwd">tak</span> <span class="hl sym">(</span>z<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> x y<span class="hl sym">)</span> <span class="hl kwa">else</span> z

<span class="hl kwa">let rec</span> tak_fp x y z <span class="hl sym">=</span>
  <span class="hl kwa">if</span> y <span class="hl sym">&gt;=</span> x <span class="hl kwa">then</span> z <span class="hl kwa">else</span>
    <span class="hl kwd">tak_fp</span> <span class="hl sym">(</span><span class="hl kwd">tak_fp</span> <span class="hl sym">(</span>x <span class="hl sym">-</span>. <span class="hl num">1</span>.<span class="hl sym">)</span> y z<span class="hl sym">) (</span><span class="hl kwd">tak_fp</span> <span class="hl sym">(</span>y <span class="hl sym">-</span>. <span class="hl num">1</span>.<span class="hl sym">)</span> z x<span class="hl sym">) (</span><span class="hl kwd">tak_fp</span> <span class="hl sym">(</span>z <span class="hl sym">-</span>. <span class="hl num">1</span>.<span class="hl sym">)</span> x y<span class="hl sym">)</span>


<span class="hl kwa">let</span> <span class="hl sym">() =</span>
  <span class="hl kwa">let</span> n <span class="hl sym">=</span> <span class="hl kwd">int_of_string</span><span class="hl sym">(</span>Array.get Sys.argv <span class="hl num">1</span><span class="hl sym">) -</span> <span class="hl num">1</span> <span class="hl kwa">in</span>
  Printf.printf <span class="hl str">&quot;Ack(3,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">(</span>n<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) (</span>ack <span class="hl kwd">3</span> <span class="hl sym">(</span>n<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">));</span>
  Printf.printf <span class="hl str">&quot;Fib(%.1f): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">(</span><span class="hl num">28</span>. <span class="hl sym">+</span>. <span class="hl kwb">float</span> n<span class="hl sym">) (</span><span class="hl kwd">fib_fp</span> <span class="hl sym">(</span><span class="hl num">28</span>. <span class="hl sym">+</span>. <span class="hl kwb">float</span> n<span class="hl sym">));</span>
  Printf.printf <span class="hl str">&quot;Tak(%d,%d,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">*</span>n<span class="hl sym">) (</span><span class="hl num">2</span><span class="hl sym">*</span>n<span class="hl sym">)</span> <span class="hl kwd">n</span> <span class="hl sym">(</span><span class="hl kwd">tak</span> <span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">*</span>n<span class="hl sym">) (</span><span class="hl num">2</span><span class="hl sym">*</span>n<span class="hl sym">)</span> n<span class="hl sym">);</span>
  Printf.printf <span class="hl str">&quot;Fib(3): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">(</span>fib <span class="hl num">3</span><span class="hl sym">);</span>
  Printf.printf <span class="hl str">&quot;Tak(3.0,2.0,1.0): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">(</span>tak_fp <span class="hl num">3.0 2.0 1.0</span><span class="hl sym">)</span>
