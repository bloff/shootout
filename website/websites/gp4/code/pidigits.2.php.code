<span class="hl sym">&lt;</span>?php <span class="hl com">/* The Great Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Peter Baltruschat</span>
<span class="hl com">*/</span>
<span class="hl kwa">function</span> Transformation_Compose<span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">,</span> <span class="hl kwb">$a</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return array</span><span class="hl sym">(</span>
      <span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">],</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]),</span>
      <span class="hl kwa">gmp_add</span><span class="hl sym">(</span><span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">],</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]),</span> <span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">],</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">])),</span>
      <span class="hl kwa">gmp_add</span><span class="hl sym">(</span><span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]),</span> <span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">],</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">])),</span>
      <span class="hl kwa">gmp_add</span><span class="hl sym">(</span><span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]),</span> <span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">],</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">]))</span>
   <span class="hl sym">);</span>
<span class="hl sym">}</span>
<span class="hl kwa">function</span> Transformation_Compose2<span class="hl sym">(</span><span class="hl kwb">$y</span><span class="hl sym">,</span> <span class="hl kwb">$a</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return array</span><span class="hl sym">(</span>
      <span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">,</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]),</span>
      <span class="hl kwa">gmp_add</span><span class="hl sym">(</span><span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">,</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]),</span> <span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwa">gmp_mul</span><span class="hl sym">(-</span><span class="hl num">10</span><span class="hl sym">,</span> <span class="hl kwb">$y</span><span class="hl sym">),</span> <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">])),</span>
      <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span>
      <span class="hl kwb">$a</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">]</span>
   <span class="hl sym">);</span>
<span class="hl sym">}</span>
<span class="hl kwa">function</span> Transformation_Extract<span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">,</span> <span class="hl kwb">$j</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return gmp_div_q</span><span class="hl sym">(</span>
      <span class="hl kwa">gmp_add</span><span class="hl sym">(</span><span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">],</span> <span class="hl kwb">$j</span><span class="hl sym">),</span> <span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]),</span>
      <span class="hl kwa">gmp_add</span><span class="hl sym">(</span><span class="hl kwa">gmp_mul</span><span class="hl sym">(</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">],</span> <span class="hl kwb">$j</span><span class="hl sym">),</span> <span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">])</span>
   <span class="hl sym">);</span>
<span class="hl sym">}</span>
<span class="hl kwa">function</span> Transformation_Next<span class="hl sym">(&amp;</span><span class="hl kwb">$tr</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">] = (++</span><span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]&lt;&lt;</span><span class="hl num">1</span><span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] =</span> <span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">]&lt;&lt;</span><span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl kwb">$tr</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">] =</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">return</span> <span class="hl kwb">$tr</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
<span class="hl kwa">function</span> Pidigit_Next<span class="hl sym">(&amp;</span><span class="hl kwb">$pd</span><span class="hl sym">,</span> <span class="hl kwb">$times</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwb">$digits</span> <span class="hl sym">=</span> <span class="hl str">''</span><span class="hl sym">;</span>
   <span class="hl kwb">$z</span> <span class="hl sym">=</span> <span class="hl kwb">$pd</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
   do
   <span class="hl sym">{</span>
      <span class="hl kwb">$y</span> <span class="hl sym">=</span> Transformation_Extract<span class="hl sym">(</span><span class="hl kwb">$z</span><span class="hl sym">,</span> <span class="hl num">3</span><span class="hl sym">);</span>
      do
      <span class="hl sym">{</span>
         <span class="hl kwb">$z</span> <span class="hl sym">=</span> Transformation_Compose<span class="hl sym">(</span><span class="hl kwb">$z</span><span class="hl sym">,</span> Transformation_Next<span class="hl sym">(</span><span class="hl kwb">$pd</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]));</span>
         <span class="hl kwb">$y</span> <span class="hl sym">=</span> Transformation_Extract<span class="hl sym">(</span><span class="hl kwb">$z</span><span class="hl sym">,</span> <span class="hl num">3</span><span class="hl sym">);</span>
      <span class="hl sym">}</span>
      <span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">!=</span> <span class="hl kwa">gmp_cmp</span><span class="hl sym">(</span>Transformation_Extract<span class="hl sym">(</span><span class="hl kwb">$z</span><span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">),</span> <span class="hl kwb">$y</span><span class="hl sym">));</span>
      <span class="hl kwb">$z</span> <span class="hl sym">=</span> Transformation_Compose2<span class="hl sym">(</span><span class="hl kwb">$y</span><span class="hl sym">,</span> <span class="hl kwb">$z</span><span class="hl sym">);</span>
      <span class="hl kwb">$digits</span> .<span class="hl sym">=</span> <span class="hl kwa">gmp_strval</span><span class="hl sym">(</span><span class="hl kwb">$y</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">while</span><span class="hl sym">(--</span><span class="hl kwb">$times</span><span class="hl sym">);</span>
   <span class="hl kwb">$pd</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] =</span> <span class="hl kwb">$z</span><span class="hl sym">;</span>
   <span class="hl kwa">return</span> <span class="hl kwb">$digits</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">$n</span> <span class="hl sym">= (</span><span class="hl kwb">int</span><span class="hl sym">)</span> <span class="hl kwb">$argv</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span>
<span class="hl kwb">$i</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl kwb">$pidigit</span> <span class="hl sym">=</span> <span class="hl kwa">array</span><span class="hl sym">(</span><span class="hl kwa">array</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">),</span> <span class="hl kwa">array</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">));</span>

<span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl kwb">$n</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">if</span><span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">&lt;</span> <span class="hl num">10</span><span class="hl sym">)</span>
   <span class="hl sym">{</span>
      <span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%s%s</span><span class="hl esc">\t</span><span class="hl str">:%d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> Pidigit_Next<span class="hl sym">(</span><span class="hl kwb">$pidigit</span><span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">),</span> <span class="hl kwa">str_repeat</span><span class="hl sym">(</span><span class="hl str">' '</span><span class="hl sym">,</span> <span class="hl num">10</span> <span class="hl sym">-</span> <span class="hl kwb">$n</span><span class="hl sym">),</span> <span class="hl kwb">$i</span> <span class="hl sym">+</span> <span class="hl kwb">$n</span><span class="hl sym">);</span>
      <span class="hl kwa">break</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">else</span>
   <span class="hl sym">{</span>
      <span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%s</span><span class="hl esc">\t</span><span class="hl str">:%d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> Pidigit_Next<span class="hl sym">(</span><span class="hl kwb">$pidigit</span><span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">),</span> <span class="hl kwb">$i</span> <span class="hl sym">+=</span> <span class="hl num">10</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwb">$n</span> <span class="hl sym">-=</span> <span class="hl num">10</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
?<span class="hl sym">&gt;</span>
