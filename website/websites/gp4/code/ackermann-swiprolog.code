<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Great Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Assumes execution using the following command-line usage:</span>
<span class="slc">%</span>
<span class="slc">%   pl -q -g main -t halt -s SOURCENAME -- USERARG1 ... &lt; in &gt; out</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Isaac Gouy [2005/11/06 16:51:05]</span>
<span class="slc">% Modified by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

main <span class="sym">:-</span>
  cmdlNumArg<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> N<span class="sym">),</span>
  <span class="kwb">write</span><span class="sym">(</span><span class="str">'Ack(3,'</span><span class="sym">),</span> <span class="kwb">write</span><span class="sym">(</span>N<span class="sym">),</span> <span class="kwb">write</span><span class="sym">(</span><span class="str">'): '</span><span class="sym">),</span>
  ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span> N<span class="sym">,</span> Val<span class="sym">),</span>
  <span class="kwb">write</span><span class="sym">(</span>Val<span class="sym">),</span> <span class="kwa">nl</span>.

<span class="slc">% ------------------------------- %</span>

ack<span class="sym">(</span><span class="num">0</span><span class="sym">,</span> N<span class="sym">,</span> Val<span class="sym">) :-</span> Val <span class="kwa">is</span> N <span class="sym">+</span> <span class="num">1</span><span class="sym">, !</span>.
ack<span class="sym">(</span>M<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> Val<span class="sym">) :-</span> M <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">,</span> M1 <span class="kwa">is</span> M <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> ack<span class="sym">(</span>M1<span class="sym">,</span> <span class="num">1</span><span class="sym">,</span> Val<span class="sym">), !</span>.
ack<span class="sym">(</span>M<span class="sym">,</span> N<span class="sym">,</span> Val<span class="sym">) :-</span>
  M <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">,</span> N <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">,</span> M1 <span class="kwa">is</span> M <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> N1 <span class="kwa">is</span> N <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span>
  ack<span class="sym">(</span>M<span class="sym">,</span> N1<span class="sym">,</span> Val1<span class="sym">),</span> ack<span class="sym">(</span>M1<span class="sym">,</span> Val1<span class="sym">,</span> Val<span class="sym">), !</span>.

<span class="slc">% ------------------------------- %</span>

argument_value<span class="sym">(</span>N<span class="sym">,</span> Arg<span class="sym">) :-</span>
  <span class="kwb">current_prolog_flag</span><span class="sym">(</span>argv<span class="sym">,</span> Cmdline<span class="sym">),</span> append<span class="sym">(</span>_<span class="sym">, [--|</span>UserArgs<span class="sym">],</span> Cmdline<span class="sym">),</span>
  Nth <span class="kwa">is</span> N <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> nth0<span class="sym">(</span>Nth<span class="sym">,</span> UserArgs<span class="sym">,</span> Arg<span class="sym">)</span>.

cmdlNumArg<span class="sym">(</span>Nth<span class="sym">,</span> N<span class="sym">) :-</span>
  argument_value<span class="sym">(</span>Nth<span class="sym">,</span> Arg<span class="sym">),</span> <span class="kwb">catch</span><span class="sym">(</span>atom_number<span class="sym">(</span>Arg<span class="sym">,</span> N<span class="sym">),</span> _<span class="sym">,</span> <span class="kwa">fail</span><span class="sym">) ;</span> <span class="kwa">halt</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.

