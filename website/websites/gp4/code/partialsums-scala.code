<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Shootout</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by Andrei Formiga</span>
<span class="hl com"> */</span>

<span class="hl kwa">object</span> partialsums
<span class="hl sym">{</span>
  <span class="hl kwa">val</span> twodiv3 <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">/</span> <span class="hl num">3.0</span>
  <span class="hl kwa">var</span> n<span class="hl sym">:</span> <span class="hl kwb">double</span> <span class="hl sym">=</span> _

  <span class="hl kwa">def</span> calculate<span class="hl sym">(</span>s1<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> s2<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> s3<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> s4<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> s5<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> s6<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span>
		s7<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> s8<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> s9<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> sign<span class="hl sym">:</span> <span class="hl kwb">double</span><span class="hl sym">,</span> kd<span class="hl sym">:</span> <span class="hl kwb">double</span><span class="hl sym">):</span> unit <span class="hl sym">= {</span>

    <span class="hl kwa">if</span> <span class="hl sym">(</span>kd <span class="hl sym">&gt;</span> n<span class="hl sym">) {</span>
      <span class="hl kwa">val</span> f <span class="hl sym">=</span> <span class="hl str">&quot;{0,number,0.000000000}</span><span class="hl esc">\t</span><span class="hl str">&quot;</span>

      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;(2/3)^k</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s1<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;k^-0.5</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s2<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;1/k(k+1)</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s3<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;Flint Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s4<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;Cookson Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s5<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s6<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;Riemann Zeta</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s7<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;Alternating Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">,</span>s8<span class="hl sym">)</span>
      Console<span class="hl sym">.</span>printf<span class="hl sym">(</span> f <span class="hl sym">+</span> <span class="hl str">&quot;Gregory</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> s9<span class="hl sym">)</span>
    <span class="hl sym">}</span>
    <span class="hl kwa">else</span> <span class="hl sym">{</span>
      <span class="hl kwa">val</span> k2 <span class="hl sym">=</span>  <span class="hl kwc">Math</span><span class="hl sym">.</span>pow<span class="hl sym">(</span>kd<span class="hl sym">,</span> <span class="hl num">2.0</span><span class="hl sym">)</span>
      <span class="hl kwa">val</span> k3 <span class="hl sym">=</span> k2 <span class="hl sym">*</span> kd
      <span class="hl kwa">val</span> sin <span class="hl sym">=</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>sin<span class="hl sym">(</span>kd<span class="hl sym">)</span>
      <span class="hl kwa">val</span> cos <span class="hl sym">=</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>cos<span class="hl sym">(</span>kd<span class="hl sym">)</span>
      calculate<span class="hl sym">(</span>s1 <span class="hl sym">+</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>pow<span class="hl sym">(</span>twodiv3<span class="hl sym">,</span> kd <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">),</span> s2 <span class="hl sym">+</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>pow<span class="hl sym">(</span>kd<span class="hl sym">, -</span><span class="hl num">0.5</span><span class="hl sym">),</span>
		s3 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>kd <span class="hl sym">* (</span>kd <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">)),</span> s4 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>k3 <span class="hl sym">*</span> sin<span class="hl sym">*</span>sin<span class="hl sym">),</span>
		s5 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>k3 <span class="hl sym">*</span> cos<span class="hl sym">*</span>cos<span class="hl sym">),</span> s6 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> kd<span class="hl sym">,</span> s7 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> k2<span class="hl sym">,</span>
		s8 <span class="hl sym">+</span> sign <span class="hl sym">/</span> kd<span class="hl sym">,</span> s9 <span class="hl sym">+</span> sign <span class="hl sym">/ (</span><span class="hl num">2.0</span> <span class="hl sym">*</span> kd <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">), -</span>sign<span class="hl sym">,</span> kd <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">)</span>
    <span class="hl sym">}</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">def</span> main<span class="hl sym">(</span>args<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span><span class="hl kwc">String</span><span class="hl sym">]) = {</span>
    n <span class="hl sym">=</span> <span class="hl kwc">Integer</span><span class="hl sym">.</span>parseInt<span class="hl sym">(</span>args<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)).</span>toDouble
    calculate<span class="hl sym">(</span><span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">)</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>
