<span class="hl slc">-- The Great Computer Language Shootout</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- revcomp v1 for Smarteiffel contributed by jose</span>

<span class="hl kwa">class</span> REVCOMP

insert
   ARGUMENTS
   PLATFORM

creation <span class="hl sym">{</span>ANY<span class="hl sym">}</span>
   make

<span class="hl kwa">feature</span> <span class="hl sym">{</span>ANY<span class="hl sym">}</span>
   buffer<span class="hl sym">:</span> STRING
   complement<span class="hl sym">:</span> FAST_ARRAY<span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">]</span>

   make <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         line<span class="hl sym">:</span> STRING
      <span class="hl kwa">do</span>
         make_complement
         <span class="hl kwa">create</span> buffer.<span class="hl kwd">make</span><span class="hl sym">(</span><span class="hl num">16777216</span><span class="hl sym">)</span>
         line <span class="hl sym">:=</span> io.last_string
         <span class="hl kwa">from</span> io.read_line until io.end_of_input <span class="hl kwa">loop</span>
            <span class="hl kwa">if</span> line.is_empty <span class="hl kwa">then</span>
            <span class="hl kwa">elseif</span> line.first <span class="hl sym">=</span> <span class="hl str">'&gt;'</span> <span class="hl kwa">then</span>
               process
               io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>line<span class="hl sym">)</span>
               io.put_new_line
               buffer.clear_count
            <span class="hl kwa">else</span>
               <span class="hl slc">-- while (l &gt; 0 &amp;&amp; !isalpha (buffer[l-1])) l--;</span>
               buffer.<span class="hl kwd">append</span><span class="hl sym">(</span>line<span class="hl sym">)</span>
            <span class="hl kwa">end</span>
            io.read_line
         <span class="hl kwa">end</span>
         <span class="hl kwa">if not</span> buffer.is_empty <span class="hl kwa">then</span> process <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>

   process <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         i<span class="hl sym">,</span>j<span class="hl sym">,</span>k<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span>
      <span class="hl kwa">do</span>
         <span class="hl kwa">from</span> k<span class="hl sym">:=</span><span class="hl num">1</span> i<span class="hl sym">:=</span>buffer.lower j<span class="hl sym">:=</span>buffer.upper until i<span class="hl sym">&gt;</span>j <span class="hl kwa">loop</span>
            io.<span class="hl kwd">put_character</span><span class="hl sym">(</span>complement.<span class="hl kwd">item</span><span class="hl sym">(</span>buffer.<span class="hl kwd">item</span><span class="hl sym">(</span>j<span class="hl sym">)</span>.code<span class="hl sym">))</span>
            buffer.<span class="hl kwd">put</span><span class="hl sym">(</span>complement.<span class="hl kwd">item</span><span class="hl sym">(</span>buffer.<span class="hl kwd">item</span><span class="hl sym">(</span>i<span class="hl sym">)</span>.code<span class="hl sym">),</span> j<span class="hl sym">)</span>
            <span class="hl kwa">if</span> k<span class="hl sym">=</span><span class="hl num">60</span> <span class="hl kwa">then</span>
               io.put_new_line
               k <span class="hl sym">:=</span> <span class="hl num">1</span>
            <span class="hl kwa">else</span>
               k <span class="hl sym">:=</span> k<span class="hl sym">+</span><span class="hl num">1</span>
            <span class="hl kwa">end</span>
            i<span class="hl sym">:=</span>i<span class="hl sym">+</span><span class="hl num">1</span>
            j<span class="hl sym">:=</span>j<span class="hl sym">-</span><span class="hl num">1</span>
         <span class="hl kwa">end</span>
         <span class="hl kwa">from</span> j<span class="hl sym">:=</span>buffer.upper until i<span class="hl sym">&gt;</span>j <span class="hl kwa">loop</span>
            io.<span class="hl kwd">put_character</span><span class="hl sym">(</span>buffer.<span class="hl kwd">item</span><span class="hl sym">(</span>i<span class="hl sym">))</span>
            <span class="hl kwa">if</span> k<span class="hl sym">=</span><span class="hl num">60</span> <span class="hl kwa">then</span>
               io.put_new_line
               k <span class="hl sym">:=</span> <span class="hl num">1</span>
            <span class="hl kwa">else</span>
               k <span class="hl sym">:=</span> k<span class="hl sym">+</span><span class="hl num">1</span>
            <span class="hl kwa">end</span>
            i<span class="hl sym">:=</span>i<span class="hl sym">+</span><span class="hl num">1</span>
         <span class="hl kwa">end</span>
         <span class="hl kwa">if</span> k<span class="hl sym">&gt;</span><span class="hl num">1</span> <span class="hl kwa">then</span> io.put_new_line <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>

   make_complement <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         code<span class="hl sym">:</span> INTEGER_16
      <span class="hl kwa">do</span>
         <span class="hl kwa">create</span> complement.<span class="hl kwd">make</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">+</span>Maximum_character_code<span class="hl sym">)</span>
         <span class="hl kwa">from</span>  until code<span class="hl sym">&gt;</span>Maximum_character_code <span class="hl kwa">loop</span>
            complement.<span class="hl kwd">put</span><span class="hl sym">(</span>code.to_character<span class="hl sym">,</span>code<span class="hl sym">)</span>
            code <span class="hl sym">:=</span> code <span class="hl sym">+</span> <span class="hl num">1</span>
         <span class="hl kwa">end</span>
         <span class="hl kwd">make_complementar</span><span class="hl sym">(</span><span class="hl str">'A'</span><span class="hl sym">,</span> <span class="hl str">'T'</span><span class="hl sym">)</span>
         <span class="hl kwd">make_complementar</span><span class="hl sym">(</span><span class="hl str">'C'</span><span class="hl sym">,</span> <span class="hl str">'G'</span><span class="hl sym">)</span>
         <span class="hl kwd">make_complementar</span><span class="hl sym">(</span><span class="hl str">'B'</span><span class="hl sym">,</span> <span class="hl str">'V'</span><span class="hl sym">)</span>
         <span class="hl kwd">make_complementar</span><span class="hl sym">(</span><span class="hl str">'D'</span><span class="hl sym">,</span> <span class="hl str">'H'</span><span class="hl sym">)</span>
         <span class="hl kwd">make_complementar</span><span class="hl sym">(</span><span class="hl str">'K'</span><span class="hl sym">,</span> <span class="hl str">'M'</span><span class="hl sym">)</span>
         <span class="hl kwd">make_complementar</span><span class="hl sym">(</span><span class="hl str">'R'</span><span class="hl sym">,</span> <span class="hl str">'Y'</span><span class="hl sym">)</span>
     <span class="hl kwa">end</span>

   <span class="hl kwd">make_complementar</span><span class="hl sym">(</span>a<span class="hl sym">,</span>b<span class="hl sym">:</span> <span class="hl kwb">CHARACTER</span><span class="hl sym">)</span> <span class="hl kwa">is</span>
     <span class="hl kwa">do</span>
        complement.<span class="hl kwd">put</span><span class="hl sym">(</span>a<span class="hl sym">,</span> b.code<span class="hl sym">)</span>
        complement.<span class="hl kwd">put</span><span class="hl sym">(</span>a<span class="hl sym">,</span> b.to_lower.code<span class="hl sym">)</span>
        complement.<span class="hl kwd">put</span><span class="hl sym">(</span>b<span class="hl sym">,</span> a.code<span class="hl sym">)</span>
        complement.<span class="hl kwd">put</span><span class="hl sym">(</span>b<span class="hl sym">,</span> a.to_lower.code<span class="hl sym">)</span>
     <span class="hl kwa">end</span>

<span class="hl kwa">end</span>

