<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Great Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Floating point conversion routines courtesy Juergen Stuber and Jorge</span>
<span class="slc">% Marques Pelizzoni [previously used in other Mozart/Oz Shooutout</span>
<span class="slc">% submissions].</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

<span class="kwa">functor</span>

<span class="kwa">import</span>
  System<span class="sym">(</span>showInfo<span class="sym">)</span> Application<span class="sym">(</span>exit getArgs<span class="sym">)</span>

<span class="kwa">define</span>

<span class="slc">% ------------- %</span>

  PI <span class="sym">=</span> <span class="num">3.141592653589793</span>
  SOLAR_MASS <span class="sym">=</span> <span class="num">4.0</span> <span class="sym">*</span> PI <span class="sym">*</span> PI
  DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span>

<span class="slc">% ------------- %</span>

  <span class="slc">%% Single-body routines</span>

  <span class="kwa">fun</span> <span class="sym">{</span>NewBody X Y Z VX VY VZ MASS<span class="sym">}</span>
    body<span class="sym">(</span>x<span class="sym">:{</span>NewCell X<span class="sym">}</span> y<span class="sym">:{</span>NewCell Y<span class="sym">}</span> z<span class="sym">:{</span>NewCell Z<span class="sym">}</span> vx<span class="sym">:{</span>NewCell VX<span class="sym">}</span> vy<span class="sym">:{</span>NewCell VY<span class="sym">}</span> vz<span class="sym">:{</span>NewCell VZ<span class="sym">}</span> mass<span class="sym">:{</span>NewCell MASS<span class="sym">})</span>
  <span class="kwa">end</span>

  <span class="kwa">proc</span> <span class="sym">{</span>OffsetMomentum PX PY PZ Body<span class="sym">}</span>
    VX VY VZ
  <span class="kwa">in</span>
    body<span class="sym">(</span>x<span class="sym">:</span>_ y<span class="sym">:</span>_ z<span class="sym">:</span>_ vx<span class="sym">:</span>VX vy<span class="sym">:</span>VY vz<span class="sym">:</span>VZ mass<span class="sym">:</span>_<span class="sym">) =</span> Body
    VX <span class="sym">:= ~</span>PX <span class="sym">/</span> SOLAR_MASS
    VY <span class="sym">:= ~</span>PY <span class="sym">/</span> SOLAR_MASS
    VZ <span class="sym">:= ~</span>PZ <span class="sym">/</span> SOLAR_MASS
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  <span class="slc">%% Collection of bodies [Sun Jupiter Saturn Uranus Neptune]</span>

  Bodies <span class="sym">= [</span>
    <span class="sym">{</span>NewBody <span class="num">0.0 0.0 0.0 0.0 0.0 0.0</span> SOLAR_MASS<span class="sym">}</span>

    <span class="sym">{</span>NewBody <span class="num">4.84143144246472090</span>e00 <span class="sym">~</span><span class="num">1.16032004402742839</span>e00 <span class="sym">~</span><span class="num">1.03622044471123109</span>e<span class="sym">~</span><span class="num">01</span>
             <span class="sym">(</span><span class="num">1.66007664274403694</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">7.69901118419740425</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">)</span>
             <span class="sym">(~</span><span class="num">6.90460016972063023</span>e<span class="sym">~</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">9.54791938424326609</span>e<span class="sym">~</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)}</span>

    <span class="sym">{</span>NewBody <span class="num">8.34336671824457987</span>e00 <span class="num">4.12479856412430479</span>e00 <span class="sym">~</span><span class="num">4.03523417114321381</span>e<span class="sym">~</span><span class="num">01</span>
             <span class="sym">(~</span><span class="num">2.76742510726862411</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">4.99852801234917238</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">)</span>
             <span class="sym">(</span><span class="num">2.30417297573763929</span>e<span class="sym">~</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">2.85885980666130812</span>e<span class="sym">~</span><span class="num">04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)}</span>

    <span class="sym">{</span>NewBody <span class="num">1.28943695621391310</span>e01 <span class="sym">~</span><span class="num">1.51111514016986312</span>e01 <span class="sym">~</span><span class="num">2.23307578892655734</span>e<span class="sym">~</span><span class="num">01</span>
             <span class="sym">(</span><span class="num">2.96460137564761618</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">2.37847173959480950</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">)</span>
             <span class="sym">(~</span><span class="num">2.96589568540237556</span>e<span class="sym">~</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">4.36624404335156298</span>e<span class="sym">~</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)}</span>

    <span class="sym">{</span>NewBody <span class="num">1.53796971148509165</span>e01 <span class="sym">~</span><span class="num">2.59193146099879641</span>e01 <span class="num">1.79258772950371181</span>e<span class="sym">~</span><span class="num">01</span>
             <span class="sym">(</span><span class="num">2.68067772490389322</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">1.62824170038242295</span>e<span class="sym">~</span><span class="num">03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">)</span>
             <span class="sym">(~</span><span class="num">9.51592254519715870</span>e<span class="sym">~</span><span class="num">05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">) (</span><span class="num">5.15138902046611451</span>e<span class="sym">~</span><span class="num">05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)}</span>
  <span class="sym">]</span>

<span class="slc">% ------------- %</span>

  <span class="slc">%% Multi-body routines</span>

  <span class="kwa">proc</span> <span class="sym">{</span>Setup Bodies<span class="sym">}</span>
    PX <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> PY <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> PZ <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>
  <span class="kwa">in</span>
    <span class="kwa">for</span> body<span class="sym">(</span>x<span class="sym">:</span>_ y<span class="sym">:</span>_ z<span class="sym">:</span>_ vx<span class="sym">:</span>VX vy<span class="sym">:</span>VY vz<span class="sym">:</span>VZ mass<span class="sym">:</span>MASS<span class="sym">)</span> <span class="kwa">in</span> Bodies do
      PX <span class="sym">:= &#64;</span>PX <span class="sym">+ &#64;</span>VX <span class="sym">* &#64;</span>MASS
      PY <span class="sym">:= &#64;</span>PY <span class="sym">+ &#64;</span>VY <span class="sym">* &#64;</span>MASS
      PZ <span class="sym">:= &#64;</span>PZ <span class="sym">+ &#64;</span>VZ <span class="sym">* &#64;</span>MASS
    <span class="kwa">end</span>

    <span class="sym">{</span>OffsetMomentum <span class="sym">&#64;</span>PX <span class="sym">&#64;</span>PY <span class="sym">&#64;</span>PZ Bodies<span class="num">.1</span><span class="sym">}</span>
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  <span class="kwa">proc</span> <span class="sym">{</span>Advance DT Bodies<span class="sym">}</span>
    DX <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> DY <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> DZ <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> DISTANCE <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>
    MAG <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> Idx <span class="sym">= {</span>NewCell <span class="num">1</span><span class="sym">}</span>
  <span class="kwa">in</span>
    <span class="kwa">for</span> body<span class="sym">(</span>x<span class="sym">:</span>Xo y<span class="sym">:</span>Yo z<span class="sym">:</span>Zo vx<span class="sym">:</span>VXo vy<span class="sym">:</span>VYo vz<span class="sym">:</span>VZo mass<span class="sym">:</span>MASSo<span class="sym">)</span> <span class="kwa">in</span> Bodies do

      <span class="kwa">for</span> body<span class="sym">(</span>x<span class="sym">:</span>X y<span class="sym">:</span>Y z<span class="sym">:</span>Z vx<span class="sym">:</span>VX vy<span class="sym">:</span>VY vz<span class="sym">:</span>VZ mass<span class="sym">:</span>MASS<span class="sym">)</span> <span class="kwa">in</span> <span class="sym">{</span>List<span class="sym">.</span>drop Bodies <span class="sym">&#64;</span>Idx<span class="sym">}</span> do
        DX <span class="sym">:= &#64;</span>Xo <span class="sym">- &#64;</span>X
        DY <span class="sym">:= &#64;</span>Yo <span class="sym">- &#64;</span>Y
        DZ <span class="sym">:= &#64;</span>Zo <span class="sym">- &#64;</span>Z

        DISTANCE <span class="sym">:= {</span>Sqrt <span class="sym">(&#64;</span>DX <span class="sym">* &#64;</span>DX <span class="sym">+ &#64;</span>DY <span class="sym">* &#64;</span>DY <span class="sym">+ &#64;</span>DZ <span class="sym">* &#64;</span>DZ<span class="sym">)}</span>
        MAG <span class="sym">:=</span> DT <span class="sym">/ (&#64;</span>DISTANCE <span class="sym">* &#64;</span>DISTANCE <span class="sym">* &#64;</span>DISTANCE<span class="sym">)</span>

        VXo <span class="sym">:= &#64;</span>VXo <span class="sym">- &#64;</span>DX <span class="sym">* &#64;</span>MASS <span class="sym">* &#64;</span>MAG
        VYo <span class="sym">:= &#64;</span>VYo <span class="sym">- &#64;</span>DY <span class="sym">* &#64;</span>MASS <span class="sym">* &#64;</span>MAG
        VZo <span class="sym">:= &#64;</span>VZo <span class="sym">- &#64;</span>DZ <span class="sym">* &#64;</span>MASS <span class="sym">* &#64;</span>MAG

        VX <span class="sym">:= &#64;</span>VX <span class="sym">+ &#64;</span>DX <span class="sym">* &#64;</span>MASSo <span class="sym">* &#64;</span>MAG
        VY <span class="sym">:= &#64;</span>VY <span class="sym">+ &#64;</span>DY <span class="sym">* &#64;</span>MASSo <span class="sym">* &#64;</span>MAG
        VZ <span class="sym">:= &#64;</span>VZ <span class="sym">+ &#64;</span>DZ <span class="sym">* &#64;</span>MASSo <span class="sym">* &#64;</span>MAG
      <span class="kwa">end</span>

      Idx <span class="sym">:= &#64;</span>Idx <span class="sym">+</span> <span class="num">1</span>
    <span class="kwa">end</span>

    <span class="kwa">for</span> body<span class="sym">(</span>x<span class="sym">:</span>X y<span class="sym">:</span>Y z<span class="sym">:</span>Z vx<span class="sym">:</span>VX vy<span class="sym">:</span>VY vz<span class="sym">:</span>VZ mass<span class="sym">:</span>_<span class="sym">)</span> <span class="kwa">in</span> Bodies do
      X <span class="sym">:= &#64;</span>X <span class="sym">+</span> DT <span class="sym">* &#64;</span>VX
      Y <span class="sym">:= &#64;</span>Y <span class="sym">+</span> DT <span class="sym">* &#64;</span>VY
      Z <span class="sym">:= &#64;</span>Z <span class="sym">+</span> DT <span class="sym">* &#64;</span>VZ
    <span class="kwa">end</span>
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  <span class="kwa">fun</span> <span class="sym">{</span>Energy Bodies<span class="sym">}</span>
    DX <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> DY <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> DZ <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> DISTANCE <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span>
    E <span class="sym">= {</span>NewCell <span class="num">0.0</span><span class="sym">}</span> Idx <span class="sym">= {</span>NewCell <span class="num">1</span><span class="sym">}</span>
  <span class="kwa">in</span>
    <span class="kwa">for</span> body<span class="sym">(</span>x<span class="sym">:</span>Xo y<span class="sym">:</span>Yo z<span class="sym">:</span>Zo vx<span class="sym">:</span>VXo vy<span class="sym">:</span>VYo vz<span class="sym">:</span>VZo mass<span class="sym">:</span>MASSo<span class="sym">)</span> <span class="kwa">in</span> Bodies do

      E <span class="sym">:= &#64;</span>E <span class="sym">+</span> <span class="num">0.5</span> <span class="sym">* &#64;</span>MASSo <span class="sym">* (&#64;</span>VXo <span class="sym">* &#64;</span>VXo <span class="sym">+ &#64;</span>VYo <span class="sym">* &#64;</span>VYo <span class="sym">+ &#64;</span>VZo <span class="sym">* &#64;</span>VZo<span class="sym">)</span>

      <span class="kwa">for</span> body<span class="sym">(</span>x<span class="sym">:</span>X y<span class="sym">:</span>Y z<span class="sym">:</span>Z vx<span class="sym">:</span>_ vy<span class="sym">:</span>_ vz<span class="sym">:</span>_ mass<span class="sym">:</span>MASS<span class="sym">)</span> <span class="kwa">in</span> <span class="sym">{</span>List<span class="sym">.</span>drop Bodies <span class="sym">&#64;</span>Idx<span class="sym">}</span> do
        DX <span class="sym">:= &#64;</span>Xo <span class="sym">- &#64;</span>X
        DY <span class="sym">:= &#64;</span>Yo <span class="sym">- &#64;</span>Y
        DZ <span class="sym">:= &#64;</span>Zo <span class="sym">- &#64;</span>Z

        DISTANCE <span class="sym">:= {</span>Sqrt <span class="sym">(&#64;</span>DX <span class="sym">* &#64;</span>DX <span class="sym">+ &#64;</span>DY <span class="sym">* &#64;</span>DY <span class="sym">+ &#64;</span>DZ <span class="sym">* &#64;</span>DZ<span class="sym">)}</span>

        E <span class="sym">:= &#64;</span>E <span class="sym">- (&#64;</span>MASSo <span class="sym">* &#64;</span>MASS<span class="sym">) / &#64;</span>DISTANCE
      <span class="kwa">end</span>

      Idx <span class="sym">:= &#64;</span>Idx <span class="sym">+</span> <span class="num">1</span>
    <span class="kwa">end</span>

    <span class="sym">&#64;</span>E
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  <span class="kwa">fun</span> <span class="sym">{</span>CmdlNArg Nth Default<span class="sym">}</span> N Nt <span class="kwa">in</span>
    <span class="kwa">try</span>
      Nt <span class="sym">= {</span>String<span class="sym">.</span>toInt <span class="sym">{</span>Application<span class="sym">.</span>getArgs plain<span class="sym">}.</span>Nth<span class="sym">}</span>
      N <span class="sym">=</span> <span class="kwa">if</span> Nt <span class="sym">&lt;</span> Default <span class="kwa">then</span> Default <span class="kwa">else</span> Nt <span class="kwa">end</span>
    <span class="kwa">catch</span> error<span class="sym">(...)</span> <span class="kwa">then</span>
      N <span class="sym">=</span> Default
    <span class="kwa">end</span>
    N
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  <span class="slc">%% Floating Point Conversion Routines</span>

  <span class="kwa">fun</span> <span class="sym">{</span>FloatAbs X<span class="sym">}</span>
    <span class="kwa">if</span> X <span class="sym">&gt;=</span> <span class="num">0.0</span> <span class="kwa">then</span> X <span class="kwa">else</span> <span class="sym">~</span>X <span class="kwa">end</span>
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>FloatSquare X<span class="sym">}</span>
    X <span class="sym">*</span> X
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>FloatPower X E<span class="sym">}</span>
    <span class="kwa">if</span> E<span class="sym">==</span><span class="num">0</span> <span class="kwa">then</span> <span class="num">1.0</span>
    elseif E<span class="sym">&lt;</span><span class="num">0</span> <span class="kwa">then raise</span> negativeExponent<span class="sym">(</span>E<span class="sym">)</span> <span class="kwa">end</span>
    <span class="kwa">else</span>
      <span class="kwa">if</span> E mod <span class="num">2</span> <span class="sym">==</span> <span class="num">1</span> <span class="kwa">then</span> X <span class="kwa">else</span> <span class="num">1.0</span> <span class="kwa">end</span>
      <span class="sym">* {</span>FloatSquare <span class="sym">{</span>FloatPower X E div <span class="num">2</span><span class="sym">}}</span>
    <span class="kwa">end</span>
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>MakePadding Ch L<span class="sym">}</span>
    <span class="kwa">if</span> L <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">then</span>
      Padding <span class="sym">= {</span>MakeList L<span class="sym">}</span>
    <span class="kwa">in</span>
      <span class="kwa">for</span> V <span class="kwa">in</span> Padding do V <span class="sym">=</span> Ch <span class="kwa">end</span>
        Padding
      <span class="kwa">else</span>
        nil
    <span class="kwa">end</span>
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>PadLeft Ch String L<span class="sym">}</span>
    PL <span class="sym">=</span> L <span class="sym">- {</span>List<span class="sym">.</span>length String<span class="sym">}</span>
  <span class="kwa">in</span>
    <span class="sym">{</span>MakePadding Ch PL<span class="sym">} #</span> String
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>FloatToVS F Prec<span class="sym">}</span>
    <span class="kwa">fun</span> <span class="sym">{</span>FractionToString Frac Prec<span class="sym">}</span>
      <span class="kwa">if</span> Prec <span class="sym">=&lt;</span> <span class="num">0</span> <span class="kwa">then</span> &quot;&quot;
      elseif Prec <span class="sym">&gt;</span> <span class="num">10</span> <span class="kwa">then raise</span> excessivePrecision<span class="sym">(</span>Prec<span class="sym">)</span> <span class="kwa">end</span>
      <span class="kwa">else</span>
        Shifted <span class="sym">= {</span>FloatPower <span class="num">10.0</span> Prec<span class="sym">} *</span> Frac
        Digits <span class="sym">= {</span>FloatToInt <span class="sym">{</span>Round Shifted<span class="sym">}}</span>
        <span class="kwa">in</span> <span class="sym">{</span>PadLeft <span class="sym">&amp;</span><span class="num">0</span> <span class="sym">{</span>IntToString Digits<span class="sym">}</span> Prec<span class="sym">}</span>
      <span class="kwa">end</span>
    <span class="kwa">end</span>

    I <span class="sym">= {</span>FloatToInt <span class="sym">{</span><span class="kwa">if</span> F <span class="sym">&gt;=</span> <span class="num">0.0</span> <span class="kwa">then</span> Floor <span class="kwa">else</span> Ceil <span class="kwa">end</span> F<span class="sym">}}</span>
    Frac <span class="sym">= {</span>FloatAbs F <span class="sym">- {</span>IntToFloat I<span class="sym">}}</span>
  <span class="kwa">in</span>
    <span class="sym">{</span>IntToString I<span class="sym">} #</span> &quot;<span class="sym">.</span>&quot; <span class="sym"># {</span>FractionToString Frac Prec<span class="sym">}</span>
  <span class="kwa">end</span>

  <span class="kwa">fun</span> <span class="sym">{</span>FloatToString F Prec<span class="sym">}</span>
    Result <span class="sym">= {</span>NewCell <span class="sym">{</span>VirtualString<span class="sym">.</span>toString <span class="sym">{</span>FloatToVS F Prec<span class="sym">}}}</span>
    P <span class="sym">=</span> <span class="kwa">fun</span> <span class="sym">{$</span> C<span class="sym">}</span> <span class="kwa">if</span> C <span class="sym">== &amp;~</span> <span class="kwa">then</span> <span class="sym">&amp;-</span> <span class="kwa">else</span> C <span class="kwa">end end</span>
  <span class="kwa">in</span>
    <span class="kwa">if</span> F <span class="sym">&lt;</span> <span class="num">0.0</span> <span class="kwa">andthen</span> <span class="sym">{</span>Nth <span class="sym">&#64;</span>Result <span class="num">1</span><span class="sym">} \= &amp;~</span> <span class="kwa">then</span>
      Result <span class="sym">:= &amp;~|&#64;</span>Result
    <span class="kwa">end</span>
    <span class="sym">{</span>Map <span class="sym">&#64;</span>Result P<span class="sym">}</span>
  <span class="kwa">end</span>

<span class="slc">% ------------- %</span>

  N

<span class="slc">% ------------- %</span>

<span class="kwa">in</span>
  N <span class="sym">= {</span>CmdlNArg <span class="num">1 1</span><span class="sym">}</span>

  <span class="sym">{</span>Setup Bodies<span class="sym">}</span>

  <span class="sym">{</span>System<span class="sym">.</span>showInfo <span class="sym">{</span>FloatToString <span class="sym">{</span>Energy Bodies<span class="sym">}</span> <span class="num">9</span><span class="sym">}}</span>
  <span class="kwa">for</span> I <span class="kwa">in</span> <span class="num">1</span><span class="sym">..</span>N do <span class="sym">{</span>Advance <span class="num">0.01</span> Bodies<span class="sym">}</span> <span class="kwa">end</span>
  <span class="sym">{</span>System<span class="sym">.</span>showInfo <span class="sym">{</span>FloatToString <span class="sym">{</span>Energy Bodies<span class="sym">}</span> <span class="num">9</span><span class="sym">}}</span>

  <span class="sym">{</span>Application<span class="sym">.</span>exit <span class="num">0</span><span class="sym">}</span>
<span class="kwa">end</span>

