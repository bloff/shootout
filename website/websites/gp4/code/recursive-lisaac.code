<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Xavier Oswald &amp; Pierre-Alexandre Voye</span>
<span class="hl com">*/</span>

Section Header

  <span class="hl sym">+</span> name <span class="hl sym">:=</span> RECURSIVE<span class="hl sym">;</span>

Section Inherit

  <span class="hl sym">-</span> parent_any<span class="hl sym">:</span>OBJECT <span class="hl sym">:=</span> OBJECT<span class="hl sym">;</span>

Section Private

  <span class="hl sym">-</span> ack x <span class="hl sym">:</span> INTEGER and y <span class="hl sym">:</span> INTEGER <span class="hl sym">:</span> INTEGER <span class="hl sym">&lt;-</span>
  <span class="hl sym">( +</span> result <span class="hl sym">:</span> INTEGER<span class="hl sym">;</span>

    <span class="hl sym">(</span>x <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">)</span>.if <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> y <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>.elseif <span class="hl sym">{</span>y <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">}</span> then <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> ack <span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)</span> and <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span> else <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> ack <span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)</span> and <span class="hl sym">(</span>ack x and <span class="hl sym">(</span>y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">));</span>
    <span class="hl sym">};</span>
    result
  <span class="hl sym">);</span>


  <span class="hl sym">-</span> fib n <span class="hl sym">:</span> INTEGER <span class="hl sym">:</span> INTEGER <span class="hl sym">&lt;-</span>
  <span class="hl sym">(	+</span> result <span class="hl sym">:</span> INTEGER<span class="hl sym">;</span>
    <span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">)</span>.if <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span> else <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> fib <span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) +</span> fib <span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">);</span>
    <span class="hl sym">};</span>
    result
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> fibfp n <span class="hl sym">:</span> REAL_64 <span class="hl sym">:</span> REAL_64 <span class="hl sym">&lt;-</span>
  <span class="hl sym">( +</span> result <span class="hl sym">:</span> REAL_64<span class="hl sym">;</span>
    <span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">)</span>.if <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span> else <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> fibfp <span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) +</span> fibfp <span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">);</span>
    <span class="hl sym">};</span>
    result
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> tak <span class="hl sym">(</span>x<span class="hl sym">,</span>y<span class="hl sym">,</span>z <span class="hl sym">:</span> INTEGER<span class="hl sym">) :</span> INTEGER <span class="hl sym">&lt;-</span>
  <span class="hl sym">(</span>
    <span class="hl sym">+</span> result <span class="hl sym">:</span> INTEGER<span class="hl sym">;</span>
    <span class="hl sym">(</span>y <span class="hl sym">&lt;</span> x<span class="hl sym">)</span>.if <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> tak<span class="hl sym">(</span>tak<span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>y<span class="hl sym">,</span> z<span class="hl sym">),</span> tak<span class="hl sym">(</span>y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> z<span class="hl sym">,</span> x<span class="hl sym">),</span> tak<span class="hl sym">(</span>z <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">) );</span>
    <span class="hl sym">}</span> else <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> z<span class="hl sym">;</span>
    <span class="hl sym">};</span>
    result
  <span class="hl sym">);</span>


  <span class="hl sym">-</span> takfp <span class="hl sym">(</span>x<span class="hl sym">,</span>y<span class="hl sym">,</span>z <span class="hl sym">:</span> REAL_64<span class="hl sym">) :</span> REAL_64 <span class="hl sym">&lt;-</span>
  <span class="hl sym">(</span>
    <span class="hl sym">+</span> result<span class="hl sym">:</span> REAL_64<span class="hl sym">;</span>
    <span class="hl sym">(</span>y <span class="hl sym">&lt;</span> x<span class="hl sym">)</span>.if <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> takfp<span class="hl sym">(</span>takfp<span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>y<span class="hl sym">,</span> z<span class="hl sym">),</span> takfp<span class="hl sym">(</span>y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> z<span class="hl sym">,</span> x<span class="hl sym">),</span> takfp<span class="hl sym">(</span>z <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">) );</span>
    <span class="hl sym">}</span> else <span class="hl sym">{</span>
      result <span class="hl sym">:=</span> z<span class="hl sym">;</span>
    <span class="hl sym">};</span>
    result
 <span class="hl sym">);</span>


Section Public

  <span class="hl sym">+</span> n <span class="hl sym">:</span> INTEGER<span class="hl sym">;</span>

  <span class="hl sym">-</span> main <span class="hl sym">&lt;-</span>
  <span class="hl sym">(</span>

    <span class="hl sym">(</span>COMMAND_LINE.count <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">)</span>.if <span class="hl sym">{</span>
      n <span class="hl sym">:=</span> COMMAND_LINE.item <span class="hl num">1</span>.to_integer <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl slc">//&quot;valeur trouv√©e&quot;.print;</span>
      <span class="hl slc">//n.print;</span>
      <span class="hl slc">//&quot;\n&quot;.print;</span>
    <span class="hl sym">}</span> else <span class="hl sym">{</span>
      n <span class="hl sym">:=</span> <span class="hl num">2</span><span class="hl sym">;</span>
    <span class="hl sym">};</span>
    <span class="hl str">&quot;Ack(3,&quot;</span>.print<span class="hl sym">;</span>
    <span class="hl sym">(</span>n <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span>.print<span class="hl sym">;</span>
    <span class="hl str">&quot;): &quot;</span>.print<span class="hl sym">;</span>
    ack <span class="hl num">3</span> and <span class="hl sym">(</span>n<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>.print<span class="hl sym">;</span>
    <span class="hl str">&quot;\n&quot;</span>.print<span class="hl sym">;</span>

    <span class="hl str">&quot;Fib(&quot;</span>.print<span class="hl sym">;</span>
    <span class="hl sym">(</span><span class="hl num">28.0</span> <span class="hl sym">+</span> n.to_real_64<span class="hl sym">)</span>.to_integer.print<span class="hl sym">;</span>
    <span class="hl str">&quot;.0): &quot;</span>.print<span class="hl sym">;</span>
    fibfp <span class="hl sym">(</span><span class="hl num">28.0</span> <span class="hl sym">+</span> n.to_real_64<span class="hl sym">)</span>.print_format_c <span class="hl str">&quot;%.1f&quot;</span><span class="hl sym">;</span>
    <span class="hl str">&quot;\n&quot;</span>.print<span class="hl sym">;</span>

    <span class="hl str">&quot;Tak(&quot;</span>.print<span class="hl sym">;</span>
    <span class="hl sym">(</span> <span class="hl num">3</span> <span class="hl sym">*</span> n<span class="hl sym">)</span>.print<span class="hl sym">;</span>
    <span class="hl str">&quot;,&quot;</span>.print<span class="hl sym">;</span>
    <span class="hl sym">(</span> <span class="hl num">2</span> <span class="hl sym">*</span> n<span class="hl sym">)</span>.print<span class="hl sym">;</span>
    <span class="hl str">&quot;,&quot;</span>.print<span class="hl sym">;</span>
    n.print<span class="hl sym">;</span>
    <span class="hl str">&quot;): &quot;</span>.print<span class="hl sym">;</span>
    tak<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">*</span>n<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span>n<span class="hl sym">,</span> n<span class="hl sym">)</span>.print<span class="hl sym">;</span>
    <span class="hl str">&quot;\n&quot;</span>.print<span class="hl sym">;</span>

    <span class="hl str">&quot;Fib(3): &quot;</span>.print<span class="hl sym">;</span>
    fib <span class="hl num">3</span>.print<span class="hl sym">;</span>
    <span class="hl str">&quot;\n&quot;</span>.print<span class="hl sym">;</span>

    <span class="hl str">&quot;Tak(3.0,2.0,1.0): &quot;</span>.print<span class="hl sym">;</span>
    takfp<span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">,</span><span class="hl num">2.0</span><span class="hl sym">,</span><span class="hl num">1.0</span><span class="hl sym">)</span>.print_format_c <span class="hl str">&quot;%.1f&quot;</span><span class="hl sym">;</span>
    <span class="hl str">&quot;\n&quot;</span>.print<span class="hl sym">;</span>
  <span class="hl sym">);</span>
