<span class="hl slc">' The Computer Language Shootout</span>
<span class="hl slc">' http://shootout.alioth.debian.org/</span>
<span class="hl slc">'</span>
<span class="hl slc">' Converted from the gcc benchmark contributed by Kevin Carson</span>
<span class="hl slc">' FreeBASIC conversion by Simon Nash(yetifoot)</span>

#define NULL <span class="hl kwd">cptr</span><span class="hl sym">(</span>Any ptr<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span>

<span class="hl kwa">Type</span> treeNode
  _left <span class="hl kwa">As</span> treeNode ptr
  _right <span class="hl kwa">As</span> treeNode ptr
  item <span class="hl kwa">As</span> <span class="hl kwb">Integer</span>
<span class="hl kwa">End Type</span>

<span class="hl kwa">Function</span> <span class="hl kwd">NewTreeNode</span><span class="hl sym">(</span><span class="hl kwa">ByVal</span> _left <span class="hl kwa">As</span> treeNode ptr<span class="hl sym">,</span> _
                     <span class="hl kwa">ByVal</span> _right <span class="hl kwa">As</span> treeNode ptr<span class="hl sym">,</span> _
                     <span class="hl kwa">ByVal</span> item <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">)</span> <span class="hl kwa">As</span> treeNode ptr

  <span class="hl kwa">Dim</span> _new <span class="hl kwa">As</span> treeNode ptr

    _new <span class="hl sym">=</span> <span class="hl kwd">Allocate</span><span class="hl sym">(</span><span class="hl kwd">sizeof</span><span class="hl sym">(</span>treeNode<span class="hl sym">))</span>

    _new<span class="hl sym">-&gt;</span>_left <span class="hl sym">=</span> _left
    _new<span class="hl sym">-&gt;</span>_right <span class="hl sym">=</span> _right
    _new<span class="hl sym">-&gt;</span>item <span class="hl sym">=</span> item

    <span class="hl kwa">Return</span> _new

<span class="hl kwa">End Function</span>

<span class="hl kwa">Function</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span><span class="hl kwa">ByVal</span> tree <span class="hl kwa">As</span> treeNode ptr<span class="hl sym">)</span> <span class="hl kwa">As</span> <span class="hl kwb">Integer</span>

  <span class="hl kwa">If</span> tree<span class="hl sym">-&gt;</span>_left <span class="hl sym">=</span> NULL <span class="hl kwa">Then</span>
    <span class="hl kwa">Return</span> tree<span class="hl sym">-&gt;</span>item
  <span class="hl kwa">Else</span>
    <span class="hl kwa">Return</span> tree<span class="hl sym">-&gt;</span>item <span class="hl sym">+</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>tree<span class="hl sym">-&gt;</span>_left<span class="hl sym">) -</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>tree<span class="hl sym">-&gt;</span>_right<span class="hl sym">)</span>
  <span class="hl kwa">End If</span>

<span class="hl kwa">End Function</span>

<span class="hl kwa">Function</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl kwa">ByVal</span> item <span class="hl kwa">As</span> <span class="hl kwb">Long</span><span class="hl sym">,</span> _
                      <span class="hl kwa">ByVal</span> depth <span class="hl kwa">As</span> uInteger<span class="hl sym">)</span> <span class="hl kwa">As</span> treeNode ptr

  <span class="hl kwa">If</span> <span class="hl sym">(</span>depth <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">Then</span>
    <span class="hl kwa">Return</span> <span class="hl kwd">NewTreeNode</span><span class="hl sym">(</span><span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl num">2</span> <span class="hl sym">*</span> item <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> depth <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">),</span> _
                       <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl num">2</span> <span class="hl sym">*</span> item<span class="hl sym">,</span> depth <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">),</span> _
                       item<span class="hl sym">)</span>
  <span class="hl kwa">Else</span>
    <span class="hl kwa">Return</span> <span class="hl kwd">NewTreeNode</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> item<span class="hl sym">)</span>
  <span class="hl kwa">End If</span>

<span class="hl kwa">End Function</span>

<span class="hl kwa">Sub</span> <span class="hl kwd">DeleteTree</span><span class="hl sym">(</span><span class="hl kwa">ByVal</span> tree <span class="hl kwa">As</span> treeNode ptr<span class="hl sym">)</span>

  <span class="hl kwa">If</span> tree<span class="hl sym">-&gt;</span>_left <span class="hl sym">&lt;&gt;</span> NULL <span class="hl kwa">Then</span>
    <span class="hl kwd">DeleteTree</span><span class="hl sym">(</span>tree<span class="hl sym">-&gt;</span>_left<span class="hl sym">)</span>
    <span class="hl kwd">DeleteTree</span><span class="hl sym">(</span>tree<span class="hl sym">-&gt;</span>_right<span class="hl sym">)</span>
  <span class="hl kwa">End If</span>

  <span class="hl kwd">DeAllocate</span><span class="hl sym">(</span>tree<span class="hl sym">)</span>

<span class="hl kwa">End Sub</span>

  <span class="hl kwa">Dim As</span> uInteger N<span class="hl sym">,</span> depth<span class="hl sym">,</span> minDepth<span class="hl sym">,</span> maxDepth<span class="hl sym">,</span> stretchDepth
  <span class="hl kwa">Dim As</span> treeNode ptr stretchTree<span class="hl sym">,</span> longLivedTree<span class="hl sym">,</span> tempTree
  <span class="hl kwa">Dim As</span> <span class="hl kwb">Integer</span> i<span class="hl sym">,</span> iterations<span class="hl sym">,</span> check

    N <span class="hl sym">=</span> <span class="hl kwd">CInt</span><span class="hl sym">(</span>Command<span class="hl kwb">$(1))</span>

    minDepth <span class="hl sym">=</span> <span class="hl num">4</span>

    <span class="hl kwa">If</span> <span class="hl sym">(</span>minDepth <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">) &gt;</span> N <span class="hl kwa">Then</span>
      maxDepth <span class="hl sym">=</span> minDepth <span class="hl sym">+</span> <span class="hl num">2</span>
    <span class="hl kwa">Else</span>
      maxDepth <span class="hl sym">=</span> N
    <span class="hl kwa">End If</span>

    stretchDepth <span class="hl sym">=</span> maxDepth <span class="hl sym">+</span> <span class="hl num">1</span>
    stretchTree <span class="hl sym">=</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> stretchDepth<span class="hl sym">)</span>
    Print <span class="hl str">&quot;stretch tree of depth &quot;</span> <span class="hl sym">&amp;</span> stretchDepth <span class="hl sym">&amp;</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) &amp;</span> <span class="hl str">&quot; check: &quot;</span> <span class="hl sym">&amp;</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>stretchTree<span class="hl sym">) &amp;</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">);</span>

    <span class="hl kwd">DeleteTree</span><span class="hl sym">(</span>stretchTree<span class="hl sym">)</span>

    longLivedTree <span class="hl sym">=</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> maxDepth<span class="hl sym">)</span>

    <span class="hl kwa">For</span> depth <span class="hl sym">=</span> minDepth <span class="hl kwa">To</span> maxDepth Step <span class="hl num">2</span>
      iterations <span class="hl sym">=</span> <span class="hl num">2</span> ^ <span class="hl sym">(</span>maxDepth <span class="hl sym">-</span> depth <span class="hl sym">+</span> minDepth<span class="hl sym">)</span>
      check <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwa">For</span> i <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl kwa">To</span> iterations
          tempTree <span class="hl sym">=</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(</span>i<span class="hl sym">,</span> depth<span class="hl sym">)</span>
          check <span class="hl sym">+=</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>tempTree<span class="hl sym">)</span>
          <span class="hl kwd">DeleteTree</span><span class="hl sym">(</span>tempTree<span class="hl sym">)</span>

          tempTree <span class="hl sym">=</span> <span class="hl kwd">BottomUpTree</span><span class="hl sym">(-</span>i<span class="hl sym">,</span> depth<span class="hl sym">)</span>
          check <span class="hl sym">+=</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>tempTree<span class="hl sym">)</span>
          <span class="hl kwd">DeleteTree</span><span class="hl sym">(</span>tempTree<span class="hl sym">)</span>
      <span class="hl kwa">Next</span> i
      Print <span class="hl kwd">Str</span><span class="hl sym">(</span>iterations <span class="hl sym">*</span> <span class="hl num">2</span><span class="hl sym">) &amp;</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) &amp;</span> <span class="hl str">&quot; trees of depth &quot;</span> <span class="hl sym">&amp;</span> depth <span class="hl sym">&amp;</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) &amp;</span> <span class="hl str">&quot; check: &quot;</span> <span class="hl sym">&amp;</span> check <span class="hl sym">&amp;</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">);</span>
    <span class="hl kwa">Next</span> depth

    Print <span class="hl str">&quot;long lived tree of depth &quot;</span> <span class="hl sym">&amp;</span> maxDepth <span class="hl sym">&amp;</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) &amp;</span><span class="hl str">&quot; check: &quot;</span> <span class="hl sym">&amp;</span> <span class="hl kwd">ItemCheck</span><span class="hl sym">(</span>longLivedTree<span class="hl sym">) &amp;</span> <span class="hl kwd">chr</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">);</span>

