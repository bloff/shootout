<span class="hl slc">#  The Computer Language Benchmarks Game</span>
<span class="hl slc">#  http://shootout.alioth.debian.org/</span>

<span class="hl slc"># contributed by Marc Lehmann</span>

<span class="hl kwa">use</span> strict<span class="hl sym">;</span>
<span class="hl kwa">use</span> Coro<span class="hl sym">;</span>
<span class="hl kwa">use</span> Coro<span class="hl sym">::</span>Semaphore<span class="hl sym">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$threads</span> <span class="hl sym">=</span> <span class="hl num">503</span><span class="hl sym">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">$result</span><span class="hl sym">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;data</span> <span class="hl sym">=</span> <span class="hl kwb">$ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;mutex</span><span class="hl sym">;</span>

<span class="hl kwa">sub</span> thr_func <span class="hl sym">{</span>
   <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$id</span><span class="hl sym">,</span> <span class="hl kwb">$next</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

   <span class="hl kwc">my</span> <span class="hl kwb">$next</span> <span class="hl sym">= (</span><span class="hl kwb">$id</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span> % <span class="hl kwb">$threads</span><span class="hl sym">;</span>

   <span class="hl kwa">while</span> <span class="hl sym">() {</span>
      <span class="hl kwb">$mutex</span><span class="hl sym">[</span><span class="hl kwb">$id</span><span class="hl sym">]-&gt;</span>down<span class="hl sym">;</span>

      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$data</span><span class="hl sym">[</span><span class="hl kwb">$id</span><span class="hl sym">]) {</span>
        <span class="hl kwb">$data</span><span class="hl sym">[</span><span class="hl kwb">$next</span><span class="hl sym">] =</span> <span class="hl kwb">$data</span><span class="hl sym">[</span><span class="hl kwb">$id</span><span class="hl sym">] -</span> <span class="hl num">1</span><span class="hl sym">;</span>
        <span class="hl kwb">$mutex</span><span class="hl sym">[</span><span class="hl kwb">$next</span><span class="hl sym">]-&gt;</span>up<span class="hl sym">;</span>
      <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
        <span class="hl kwb">$result</span> <span class="hl sym">=</span> <span class="hl kwb">$next</span><span class="hl sym">;</span>
        print <span class="hl str">&quot;$next</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
        exit<span class="hl sym">;</span>
     <span class="hl sym">}</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>


<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl num">0</span> .. <span class="hl kwb">$threads</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
   <span class="hl kwb">$mutex</span><span class="hl sym">[</span><span class="hl kwb">$_</span><span class="hl sym">] =</span> new Coro<span class="hl sym">::</span>Semaphore <span class="hl num">0</span><span class="hl sym">;</span>
   async <span class="hl esc">\&amp;</span>thr_func<span class="hl sym">,</span> <span class="hl kwb">$_</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">$mutex</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]-&gt;</span>up<span class="hl sym">;</span>
schedule<span class="hl sym">;</span>


