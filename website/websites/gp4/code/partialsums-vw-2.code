<span class="com">&quot;*  The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com">   modified by Eliot Miranda *&quot;</span>


Smalltalk<span class="sym">.</span>Shootout defineClass<span class="sym">: #</span>Tests
   superclass<span class="sym">: #</span>{Core<span class="sym">.</span>Object}
   indexedType<span class="sym">: #</span>none
   private<span class="sym">:</span> <span class="kwa">false</span>
   instanceVariableNames<span class="sym">:</span> <span class="str">''</span>
   classInstanceVariableNames<span class="sym">:</span> <span class="str">''</span>
   imports<span class="sym">:</span> <span class="str">''</span>
   category<span class="sym">:</span> <span class="str">'ComputerLanguageShootout'</span> <span class="sym">!</span>

<span class="sym">!</span>Shootout<span class="sym">.</span>Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmark scripts'</span><span class="sym">!</span>

partialsums2
   <span class="kwa">self</span> partialsums<span class="sym">:</span> CEnvironment argv first asNumber asDouble to<span class="sym">:</span> Stdout<span class="sym">.</span>
   <span class="sym">^</span><span class="str">''</span> <span class="sym">! !</span>

<span class="sym">!</span>Shootout<span class="sym">.</span>Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmarks'</span><span class="sym">!</span>

partialsums<span class="sym">:</span> n to<span class="sym">:</span> output
   <span class="sym">|</span> a1 a2 a3 a4 a5 a6 a7 a8 a9 twothirds alt <span class="sym">|</span>

   a1 <span class="sym">:=</span> a2 <span class="sym">:=</span> a3 <span class="sym">:=</span> a4 <span class="sym">:=</span> a5 <span class="sym">:=</span> a6 <span class="sym">:=</span> a7 <span class="sym">:=</span> a8 <span class="sym">:=</span> a9 <span class="sym">:=</span> <span class="num">0.0</span>d<span class="sym">.</span>
   twothirds <span class="sym">:=</span> <span class="num">2.0</span>d<span class="sym">/</span><span class="num">3.0</span>d<span class="sym">.</span>
   alt <span class="sym">:= -</span><span class="num">1.0</span>d<span class="sym">.</span>

   <span class="num">1.0</span>d to<span class="sym">:</span> n do<span class="sym">: [:</span>k<span class="sym">| |</span> k2 k3 sk ck <span class="sym">|</span>
      k2 <span class="sym">:=</span> k<span class="sym">*</span>k<span class="sym">.</span>
      k3 <span class="sym">:=</span> k2<span class="sym">*</span>k<span class="sym">.</span>
      sk <span class="sym">:=</span> k sin<span class="sym">.</span>
      ck <span class="sym">:=</span> k cos<span class="sym">.</span>
      alt <span class="sym">:= -</span><span class="num">1.0</span>d <span class="sym">*</span> alt<span class="sym">.</span>

      a1 <span class="sym">:=</span> a1 <span class="sym">+ (</span>twothirds raisedTo<span class="sym">:</span> k <span class="sym">-</span> <span class="num">1.0</span>d<span class="sym">).</span>
      a2 <span class="sym">:=</span> a2 <span class="sym">+ (</span>k raisedTo<span class="sym">: -</span><span class="num">0.5</span>d<span class="sym">).</span>
      a3 <span class="sym">:=</span> a3 <span class="sym">+ (</span><span class="num">1.0</span>d<span class="sym">/(</span>k<span class="sym">*(</span>k<span class="sym">+</span><span class="num">1.0</span>d<span class="sym">))).</span>
      a4 <span class="sym">:=</span> a4 <span class="sym">+ (</span><span class="num">1.0</span>d<span class="sym">/(</span>k3<span class="sym">*</span>sk<span class="sym">*</span>sk<span class="sym">)).</span>
      a5 <span class="sym">:=</span> a5 <span class="sym">+ (</span><span class="num">1.0</span>d<span class="sym">/(</span>k3<span class="sym">*</span>ck<span class="sym">*</span>ck<span class="sym">)).</span>
      a6 <span class="sym">:=</span> a6 <span class="sym">+ (</span><span class="num">1.0</span>d<span class="sym">/</span>k<span class="sym">).</span>
      a7 <span class="sym">:=</span> a7 <span class="sym">+ (</span><span class="num">1.0</span>d<span class="sym">/</span>k2<span class="sym">).</span>
      a8 <span class="sym">:=</span> a8 <span class="sym">+ (</span>alt<span class="sym">/</span>k<span class="sym">).</span>
      a9 <span class="sym">:=</span> a9 <span class="sym">+ (</span>alt<span class="sym">/(</span><span class="num">2.0</span>d<span class="sym">*</span>k <span class="sym">-</span> <span class="num">1.0</span>d<span class="sym">))].</span>

   a1 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'(2/3)^k'</span><span class="sym">.</span>
   a2 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'k^-0.5'</span><span class="sym">.</span>
   a3 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'1/k(k+1)'</span><span class="sym">.</span>
   a4 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'Flint Hills'</span><span class="sym">.</span>
   a5 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'Cookson Hills'</span><span class="sym">.</span>
   a6 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'Harmonic'</span><span class="sym">.</span>
   a7 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'Riemann Zeta'</span><span class="sym">.</span>
   a8 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'Alternating Harmonic'</span><span class="sym">.</span>
   a9 printOn<span class="sym">:</span> output withName<span class="sym">:</span> <span class="str">'Gregory'</span><span class="sym">.</span>
   <span class="sym">^</span><span class="str">''</span> <span class="sym">! !</span>


<span class="sym">!</span>Core<span class="sym">.</span>LimitedPrecisionReal methodsFor<span class="sym">:</span> <span class="str">'printing'</span><span class="sym">!</span>

printOn<span class="sym">:</span> aStream withName<span class="sym">:</span> aString
   aStream  nextPutAll<span class="sym">: (</span><span class="kwa">self</span> asStringWith<span class="sym">:</span> <span class="num">9</span><span class="sym">);</span>
      nextPut<span class="sym">:</span> Character tab<span class="sym">;</span> nextPutAll<span class="sym">:</span> aString<span class="sym">;</span> cr<span class="sym">. ! !</span>


<span class="sym">!</span>Core<span class="sym">.</span>LimitedPrecisionReal methodsFor<span class="sym">:</span> <span class="str">'converting'</span><span class="sym">!</span>

asStringWith<span class="sym">:</span> anInteger
   <span class="sym">^(</span><span class="kwa">self</span> asFixedPoint<span class="sym">:</span> anInteger<span class="sym">)</span> printString copyWithout<span class="sym">: $</span>s <span class="sym">! !</span>



