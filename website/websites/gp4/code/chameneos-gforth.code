<span class="slc">\ The Great Computer Language Shootout</span>
<span class="slc">\  http://shootout.alioth.debian.org</span>
<span class="slc">\</span>
<span class="slc">\  Contributed by Ian Osgood</span>

<span class="slc">\ read NUM from last command line argument</span>
<span class="num">0</span><span class="sym">.</span> argc <span class="sym">&#64;</span> <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span>drop drop value NUM

require tasker<span class="sym">.</span>fs

<span class="slc">\ 0 is none</span>
<span class="num">1</span> constant red
<span class="num">2</span> constant yellow
<span class="num">3</span> constant blue

variable first
variable second
variable meetings

<span class="sym">:</span> meet <span class="com">( me -- other )</span>
  begin pause second <span class="sym">&#64;</span> <span class="num">0</span><span class="sym">=</span> until
  first <span class="sym">&#64;</span>
  if   second <span class="sym">!</span> first <span class="sym">&#64;</span> first off
  else NUM dup <span class="num">0</span><span class="sym">=</span> if nip exit then <span class="num">1</span><span class="sym">-</span> to NUM
       first <span class="sym">!</span>
       begin pause second <span class="sym">&#64;</span> until
       second <span class="sym">&#64;</span> second off
  then <span class="sym">;</span>

<span class="sym">:</span> complement <span class="com">( c1 c2 -- c3 )</span>
  <span class="num">2</span>dup <span class="sym">=</span> if drop else <span class="sym">+</span> <span class="num">6</span> swap <span class="sym">-</span> then <span class="sym">;</span>

<span class="sym">:</span> creature <span class="com">( color -- )</span>
  <span class="num">64</span> NewTask <span class="num">1</span> swap pass
  <span class="com">( task:  color -- )</span>
  <span class="num">0</span> swap <span class="com">( #met color )</span>
  begin  dup meet <span class="sym">?</span>dup
  while  complement swap  <span class="num">1</span><span class="sym">+</span> swap
  repeat
  drop  meetings <span class="sym">+! ;</span>

<span class="sym">:</span> main
  blue yellow red blue  <span class="num">4 0</span> do creature loop
  begin pause single<span class="sym">-</span>tasking<span class="sym">?</span> until <span class="sym">;</span>

main  meetings <span class="sym">&#64;</span> <span class="num">1</span> u<span class="sym">.</span>r cr  bye  <span class="slc">\ done!</span>
