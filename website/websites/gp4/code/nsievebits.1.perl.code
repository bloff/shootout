<span class="hl slc">#!/usr/bin/perl</span>

<span class="hl slc"># The Great Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># nsieve-bits benchmark</span>
<span class="hl slc"># contributed by Joel Hoffman, 2005-03-28</span>

<span class="hl kwa">use</span> strict<span class="hl sym">;</span>

<span class="hl kwa">sub</span> nsieve <span class="hl sym">{</span>
   <span class="hl kwc">my</span> <span class="hl kwb">$mx</span> <span class="hl sym">=</span> shift<span class="hl sym">;</span>
   <span class="hl kwd">vec</span><span class="hl sym">(</span><span class="hl kwc">my</span> <span class="hl kwb">$vec</span><span class="hl sym">,</span><span class="hl kwb">$mx</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)=</span><span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwc">my</span> <span class="hl kwb">$count</span><span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$idx</span> <span class="hl sym">(</span><span class="hl num">2</span>..<span class="hl kwb">$mx</span><span class="hl sym">) {</span>
      <span class="hl kwa">unless</span> <span class="hl sym">(</span><span class="hl kwd">vec</span><span class="hl sym">(</span><span class="hl kwb">$vec</span><span class="hl sym">,</span><span class="hl kwb">$idx</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)) {</span>
         <span class="hl kwb">$count</span><span class="hl sym">++;</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">my</span> <span class="hl kwb">$i</span><span class="hl sym">=</span><span class="hl num">2</span> <span class="hl sym">*</span> <span class="hl kwb">$idx</span><span class="hl sym">;</span> <span class="hl kwb">$i</span><span class="hl sym">&lt;=</span><span class="hl kwb">$mx</span><span class="hl sym">;</span> <span class="hl kwb">$i</span><span class="hl sym">+=</span><span class="hl kwb">$idx</span><span class="hl sym">) {</span>
            <span class="hl kwd">vec</span><span class="hl sym">(</span><span class="hl kwb">$vec</span><span class="hl sym">,</span><span class="hl kwb">$i</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)=</span><span class="hl num">1</span><span class="hl sym">;</span>
         <span class="hl sym">}</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
   <span class="hl kwb">$count</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> test <span class="hl sym">{</span>
   <span class="hl kwc">my</span> <span class="hl kwb">$n</span> <span class="hl sym">=</span> shift<span class="hl sym">;</span>
   <span class="hl kwc">my</span> <span class="hl kwb">$mx</span> <span class="hl sym">=</span> <span class="hl num">10000</span> <span class="hl sym">* (</span><span class="hl num">2</span><span class="hl sym">**</span><span class="hl kwb">$n</span><span class="hl sym">);</span>
   printf <span class="hl str">&quot;Primes up to %8d %8d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span><span class="hl kwb">$mx</span><span class="hl sym">,</span><span class="hl kwd">nsieve</span><span class="hl sym">(</span><span class="hl kwb">$mx</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">) {</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] &gt;</span> <span class="hl kwb">$_</span><span class="hl sym">) {</span>
      <span class="hl kwd">test</span><span class="hl sym">(</span><span class="hl kwb">$ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] -</span> <span class="hl kwb">$_</span><span class="hl sym">)</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>


