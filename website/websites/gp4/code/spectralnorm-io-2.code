<span class="hl com">/* The Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org</span>
<span class="hl com">   contributed by Gavin Harrison */</span>

SNorm<span class="hl sym">:=</span><span class="hl kwb">Object</span> <span class="hl kwa">clone do</span><span class="hl sym">(</span>
   App<span class="hl sym">:=</span><span class="hl kwa">method</span><span class="hl sym">(</span>n<span class="hl sym">,</span>
      n1<span class="hl sym">:=</span>n<span class="hl sym">-</span><span class="hl num">1</span>
      u<span class="hl sym">:=</span><span class="hl kwb">List</span> <span class="hl kwa">clone</span> <span class="hl kwd">preallocateToSize</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
      v<span class="hl sym">:=</span><span class="hl kwb">List</span> <span class="hl kwa">clone</span> <span class="hl kwd">preallocateToSize</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
      n <span class="hl kwd">repeatTimes</span><span class="hl sym">(</span>u <span class="hl kwd">append</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span>v <span class="hl kwd">append</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">))</span>
      <span class="hl num">0</span> <span class="hl kwd">to</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">)</span> <span class="hl kwa">foreach</span><span class="hl sym">(</span>n3<span class="hl sym">,</span>n2<span class="hl sym">,</span><span class="hl kwd">MAtAv</span><span class="hl sym">(</span>n<span class="hl sym">,</span>u<span class="hl sym">,</span>v<span class="hl sym">);</span><span class="hl kwd">MAtAv</span><span class="hl sym">(</span>n<span class="hl sym">,</span>v<span class="hl sym">,</span>u<span class="hl sym">))</span>
      vBv<span class="hl sym">:=</span>vv<span class="hl sym">:=</span>vAt<span class="hl sym">:=</span><span class="hl num">0</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>n1<span class="hl sym">,</span>vAt<span class="hl sym">=</span>v <span class="hl kwd">at</span><span class="hl sym">(</span>i<span class="hl sym">);</span>vBv<span class="hl sym">=</span>vBv<span class="hl sym">+</span>u <span class="hl kwd">at</span><span class="hl sym">(</span>i<span class="hl sym">)*</span>vAt<span class="hl sym">;</span>vv<span class="hl sym">=</span>vv<span class="hl sym">+(</span>vAt<span class="hl sym">*</span>vAt<span class="hl sym">))</span>
      <span class="hl sym">(</span>vBv<span class="hl sym">/</span>vv<span class="hl sym">)</span>sqrt<span class="hl sym">)</span>
   A<span class="hl sym">:=</span><span class="hl kwa">method</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">,</span>ij<span class="hl sym">:=</span>i<span class="hl sym">+</span>j<span class="hl sym">;</span><span class="hl num">1</span><span class="hl sym">/(</span>ij<span class="hl sym">*(</span>ij<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)/</span><span class="hl num">2</span><span class="hl sym">+</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">))</span>
   MAv<span class="hl sym">:=</span><span class="hl kwa">method</span><span class="hl sym">(</span>n<span class="hl sym">,</span>v<span class="hl sym">,</span>Av<span class="hl sym">,</span>
      n1<span class="hl sym">:=</span>n<span class="hl sym">-</span><span class="hl num">1</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>i_i<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>n1<span class="hl sym">,</span>
         <span class="hl kwa">for</span><span class="hl sym">(</span>i_j<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>n1<span class="hl sym">,</span>Av <span class="hl kwd">atPut</span><span class="hl sym">(</span>i_i<span class="hl sym">,</span>Av <span class="hl kwd">at</span><span class="hl sym">(</span>i_i<span class="hl sym">)+</span><span class="hl kwd">A</span><span class="hl sym">(</span>i_i<span class="hl sym">,</span>i_j<span class="hl sym">)*</span>v <span class="hl kwd">at</span><span class="hl sym">(</span>i_j<span class="hl sym">)))))</span>
   MAtv<span class="hl sym">:=</span><span class="hl kwa">method</span><span class="hl sym">(</span>n<span class="hl sym">,</span>v<span class="hl sym">,</span>Atv<span class="hl sym">,</span>
      n1<span class="hl sym">:=</span>n<span class="hl sym">-</span><span class="hl num">1</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>i_i<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>n1<span class="hl sym">,</span>
         Atv <span class="hl kwd">atPut</span><span class="hl sym">(</span>i_i<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">)</span>
         <span class="hl kwa">for</span><span class="hl sym">(</span>i_j<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>n1<span class="hl sym">,</span>Atv <span class="hl kwd">atPut</span><span class="hl sym">(</span>i_i<span class="hl sym">,</span>Atv <span class="hl kwd">at</span><span class="hl sym">(</span>i_i<span class="hl sym">)+</span><span class="hl kwd">A</span><span class="hl sym">(</span>i_j<span class="hl sym">,</span> i_i<span class="hl sym">)*</span>v <span class="hl kwd">at</span><span class="hl sym">(</span>i_j<span class="hl sym">)))))</span>
   MAtAv<span class="hl sym">:=</span><span class="hl kwa">method</span><span class="hl sym">(</span>n<span class="hl sym">,</span>v<span class="hl sym">,</span>AtAv<span class="hl sym">,</span>
      u<span class="hl sym">:=</span><span class="hl kwb">List</span> <span class="hl kwa">clone</span> <span class="hl kwd">preallocateToSize</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
      n <span class="hl kwd">repeatTimes</span><span class="hl sym">(</span>u <span class="hl kwd">append</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">))</span>
      <span class="hl kwd">MAv</span><span class="hl sym">(</span>n<span class="hl sym">,</span>v<span class="hl sym">,</span>u<span class="hl sym">)</span>
      <span class="hl kwd">MAtv</span><span class="hl sym">(</span>n<span class="hl sym">,</span>u<span class="hl sym">,</span>AtAv<span class="hl sym">)))</span>
n<span class="hl sym">:=</span>args <span class="hl kwd">at</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span> asNumber
SNorm <span class="hl kwd">App</span><span class="hl sym">(</span>n<span class="hl sym">)</span> <span class="hl kwd">asString</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">9</span><span class="hl sym">)</span> println
