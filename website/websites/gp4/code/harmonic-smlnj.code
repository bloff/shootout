<span class="com">(* harmonic.sml</span>
<span class="com"> *</span>
<span class="com"> *   Naive sum of harmonic series.</span>
<span class="com"> *</span>
<span class="com"> * Copyright (c) 2005 by The Fellowship of SML/NJ</span>
<span class="com"> *</span>
<span class="com"> * Author: Matthias Blume (blume&#64;tti-c.org)</span>
<span class="com"> *)</span>
<span class="kwa">structure</span> Test<span class="sym">:</span><span class="kwa">sig val</span> main<span class="sym">:</span><span class="kwb">string</span><span class="sym">*</span><span class="kwb">string</span> list<span class="sym">-&gt;</span>OS.Process.status <span class="kwa">end</span> <span class="sym">=</span> <span class="kwa">struct</span>

    <span class="kwa">fun</span> main' n <span class="sym">=</span>
	<span class="kwa">let open</span> Format <span class="kwa">fun</span> lp<span class="sym">(</span>i<span class="sym">,</span>d<span class="sym">,</span>s<span class="sym">) =</span> <span class="kwa">if</span> i<span class="sym">&gt;</span>n <span class="kwa">then</span> s <span class="kwa">else</span> lp<span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">,</span>d<span class="sym">+</span><span class="num">1.0</span><span class="sym">,</span>s<span class="sym">+</span><span class="num">1.0</span><span class="sym">/</span>d<span class="sym">)</span>
	<span class="kwa">in</span> formatf <span class="str">&quot;%.11g</span><span class="esc">\n</span><span class="str">&quot;</span> print <span class="sym">[</span>REAL<span class="sym">(</span>lp<span class="sym">(</span><span class="num">2</span><span class="sym">,</span><span class="num">2.0</span><span class="sym">,</span><span class="num">1.0</span><span class="sym">))];</span> OS.Process.success <span class="kwa">end</span>

    <span class="kwa">fun</span> main <span class="sym">(</span>_<span class="sym">, []) =</span> main' <span class="num">1</span>
      <span class="sym">|</span> main <span class="sym">(</span>_<span class="sym">,</span> arg <span class="sym">::</span> _<span class="sym">) =</span> main' <span class="sym">(</span>getOpt <span class="sym">(</span><span class="kwa">Int</span>.fromString arg<span class="sym">,</span> <span class="num">1</span><span class="sym">))</span>
<span class="kwa">end</span>
