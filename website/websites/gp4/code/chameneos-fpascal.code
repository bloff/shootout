<span class="hl com">{ The Computer Language Shootout</span>
<span class="hl com">  http://shootout.alioth.debian.org</span>
<span class="hl com">  contributed by Marc Weustink</span>
<span class="hl com">}</span>

<span class="hl kwa">program</span> chameneos<span class="hl sym">;</span>
<span class="hl com">{$mode objfpc}</span><span class="hl com">{$h-}</span>
<span class="hl kwa">uses</span>
  PThreads<span class="hl sym">;</span>

<span class="hl kwa">type</span>
  TColor <span class="hl sym">= (</span>Blue<span class="hl sym">,</span> Red<span class="hl sym">,</span> Yellow<span class="hl sym">,</span> Faded<span class="hl sym">);</span>

<span class="hl kwa">var</span>
  MeetingSem<span class="hl sym">,</span> ReadySemA<span class="hl sym">,</span> ReadySemB<span class="hl sym">:</span> TSemaphore<span class="hl sym">;</span>
  MeetingBarrier<span class="hl sym">:</span> TPthreadBarrier<span class="hl sym">;</span>
  MeetingsLeft<span class="hl sym">:</span> <span class="hl kwb">Integer</span><span class="hl sym">;</span>
  ThreadInfo<span class="hl sym">:</span> <span class="hl kwa">array</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">.</span><span class="hl num">.3</span><span class="hl sym">]</span> <span class="hl kwa">of record</span>
    Id<span class="hl sym">:</span> TThreadId<span class="hl sym">;</span>
    StartColor<span class="hl sym">:</span> TColor<span class="hl sym">;</span>
    Count<span class="hl sym">:</span> <span class="hl kwb">Integer</span><span class="hl sym">;</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>
  ColorA<span class="hl sym">,</span> ColorB<span class="hl sym">:</span> TColor<span class="hl sym">;</span>

<span class="hl kwa">function</span> <span class="hl kwd">ThreadFunc</span><span class="hl sym">(</span>AIndex<span class="hl sym">:</span> PtrInt<span class="hl sym">):</span> <span class="hl kwb">Pointer</span><span class="hl sym">;</span> <span class="hl kwa">cdecl</span><span class="hl sym">;</span>
<span class="hl kwa">const</span>
  COMPL<span class="hl sym">:</span> <span class="hl kwa">array</span><span class="hl sym">[</span>Blue<span class="hl sym">..</span>Yellow<span class="hl sym">,</span> Blue<span class="hl sym">..</span>Yellow<span class="hl sym">]</span> <span class="hl kwa">of</span> TColor <span class="hl sym">= (</span>
    <span class="hl sym">(</span>Blue<span class="hl sym">,</span> Yellow<span class="hl sym">,</span> Red<span class="hl sym">),(</span>Yellow<span class="hl sym">,</span> Red<span class="hl sym">,</span> Blue<span class="hl sym">), (</span>Red<span class="hl sym">,</span> Blue<span class="hl sym">,</span> Yellow<span class="hl sym">));</span>
<span class="hl kwa">var</span>
  Color<span class="hl sym">:</span> TColor<span class="hl sym">;</span>
  Meetings<span class="hl sym">:</span> <span class="hl kwb">Integer</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
  Color <span class="hl sym">:=</span> ThreadInfo<span class="hl sym">[</span>AIndex<span class="hl sym">].</span>StartColor<span class="hl sym">;</span>
  Meetings <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>

  <span class="hl kwa">repeat</span>
    <span class="hl kwd">sem_wait</span><span class="hl sym">(</span>MeetingSem<span class="hl sym">);</span>
    <span class="hl kwa">if</span> MeetingsLeft <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> Break<span class="hl sym">;</span>

    <span class="hl kwa">if</span> <span class="hl kwd">pthread_barrier_wait</span><span class="hl sym">(</span>MeetingBarrier<span class="hl sym">) =</span> <span class="hl num">0</span> <span class="hl kwa">then begin</span>
      <span class="hl slc">// the one</span>
      ColorA <span class="hl sym">:=</span> Color<span class="hl sym">;</span>
      <span class="hl kwd">Dec</span><span class="hl sym">(</span>MeetingsLeft<span class="hl sym">);</span>
      <span class="hl kwd">sem_post</span><span class="hl sym">(</span>ReadySemA<span class="hl sym">);</span>
      <span class="hl kwd">sem_wait</span><span class="hl sym">(</span>ReadySemB<span class="hl sym">);</span>
      Color <span class="hl sym">:=</span> COMPL<span class="hl sym">[</span>Color<span class="hl sym">,</span> ColorB<span class="hl sym">];</span>
      <span class="hl kwd">sem_post</span><span class="hl sym">(</span>MeetingSem<span class="hl sym">);</span>
    <span class="hl kwa">end else begin</span>
      <span class="hl slc">// the other</span>
      ColorB <span class="hl sym">:=</span> Color<span class="hl sym">;</span>
      <span class="hl kwd">sem_post</span><span class="hl sym">(</span>ReadySemB<span class="hl sym">);</span>
      <span class="hl kwd">sem_wait</span><span class="hl sym">(</span>ReadySemA<span class="hl sym">);</span>
      Color <span class="hl sym">:=</span> COMPL<span class="hl sym">[</span>Color<span class="hl sym">,</span> ColorA<span class="hl sym">];</span>
      <span class="hl kwd">sem_post</span><span class="hl sym">(</span>MeetingSem<span class="hl sym">);</span>
    <span class="hl kwa">end</span><span class="hl sym">;</span>
    <span class="hl kwd">Inc</span><span class="hl sym">(</span>Meetings<span class="hl sym">);</span>
  <span class="hl kwa">until</span> MeetingsLeft <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
  Color <span class="hl sym">:=</span> Faded<span class="hl sym">;</span>
  ThreadInfo<span class="hl sym">[</span>AIndex<span class="hl sym">].</span>Count <span class="hl sym">:=</span> Meetings<span class="hl sym">;</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>


<span class="hl kwa">const</span>
  COLOR<span class="hl sym">:</span> <span class="hl kwa">array</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">.</span><span class="hl num">.3</span><span class="hl sym">]</span> <span class="hl kwa">of</span> TColor <span class="hl sym">= (</span>Blue<span class="hl sym">,</span> Red<span class="hl sym">,</span> Yellow<span class="hl sym">,</span> Blue<span class="hl sym">);</span>

<span class="hl kwa">var</span>
  n<span class="hl sym">:</span> <span class="hl kwb">Integer</span><span class="hl sym">;</span>
  Attr<span class="hl sym">:</span> TThreadAttr<span class="hl sym">;</span>
  p<span class="hl sym">:</span> <span class="hl kwb">Pointer</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
  <span class="hl kwd">Val</span><span class="hl sym">(</span><span class="hl kwd">paramstr</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> MeetingsLeft<span class="hl sym">,</span> n<span class="hl sym">);</span>
  <span class="hl kwa">if</span> n <span class="hl sym">&lt;&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> exit<span class="hl sym">;</span>

  <span class="hl kwd">sem_init</span><span class="hl sym">(</span>MeetingSem<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">);</span>
  <span class="hl kwd">sem_init</span><span class="hl sym">(</span>ReadySemA<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">);</span>
  <span class="hl kwd">sem_init</span><span class="hl sym">(</span>ReadySemB<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">);</span>

  <span class="hl kwd">pthread_attr_init</span><span class="hl sym">(</span>Attr<span class="hl sym">);</span>
  <span class="hl kwd">pthread_attr_setdetachstate</span><span class="hl sym">(</span>Attr<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">);</span>
  <span class="hl kwd">pthread_attr_setstacksize</span><span class="hl sym">(</span>Attr<span class="hl sym">,</span> <span class="hl num">1024</span> <span class="hl sym">*</span> <span class="hl num">16</span><span class="hl sym">);</span>

  <span class="hl kwd">pthread_barrier_init</span><span class="hl sym">(&#64;</span>MeetingBarrier<span class="hl sym">,</span> <span class="hl kwa">nil</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">);</span>

  <span class="hl kwa">for</span> n <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">3</span> <span class="hl kwa">do begin</span>
    ThreadInfo<span class="hl sym">[</span>n<span class="hl sym">].</span>Count <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
    ThreadInfo<span class="hl sym">[</span>n<span class="hl sym">].</span>StartColor <span class="hl sym">:=</span> COLOR<span class="hl sym">[</span>n<span class="hl sym">];</span>
    <span class="hl kwd">pthread_create</span><span class="hl sym">(</span>ThreadInfo<span class="hl sym">[</span>n<span class="hl sym">].</span>Id<span class="hl sym">,</span> Attr<span class="hl sym">,</span> <span class="hl kwd">TStartRoutine</span><span class="hl sym">(&#64;</span>ThreadFunc<span class="hl sym">),</span> <span class="hl kwb">Pointer</span><span class="hl sym">(</span>n<span class="hl sym">));</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>

  <span class="hl kwa">for</span> n <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">3</span> <span class="hl kwa">do</span>
    <span class="hl kwd">pthread_join</span><span class="hl sym">(</span>ThreadInfo<span class="hl sym">[</span>n<span class="hl sym">].</span>Id<span class="hl sym">,</span> p<span class="hl sym">);</span>

  <span class="hl kwd">WriteLN</span><span class="hl sym">(</span>ThreadInfo<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>Count <span class="hl sym">+</span> ThreadInfo<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">].</span>Count <span class="hl sym">+</span> ThreadInfo<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">].</span>Count <span class="hl sym">+</span> ThreadInfo<span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">].</span>Count<span class="hl sym">);</span>
<span class="hl kwa">end</span><span class="hl sym">.</span>
