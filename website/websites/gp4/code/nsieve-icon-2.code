<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># Icon sieve #2</span>
<span class="slc"># contributed by Charles Evans 2005-12-25</span>

<span class="kwa">link</span> printf

<span class="kwa">procedure</span> NSieve<span class="sym">(</span>m<span class="sym">,</span>flags<span class="sym">)</span>
	count<span class="sym">:=</span><span class="num">2</span> <span class="slc"># skip 2 and 3</span>
	<span class="kwa">every</span> \flags<span class="sym">[</span>i<span class="sym">:=</span><span class="num">7</span> <span class="kwa">to</span> m <span class="kwa">by</span> <span class="num">2</span><span class="sym">]</span> &amp; i%<span class="num">3</span><span class="sym">&gt;</span><span class="num">0</span> <span class="kwa">do</span><span class="sym">{</span>
		<span class="slc"># remove all multiples of prime: i</span>
		<span class="kwa">every</span> flags<span class="sym">[</span>i<span class="sym">+</span>i <span class="kwa">to</span> m <span class="kwa">by</span> i<span class="sym">] :=</span> <span class="kwa">&amp;null</span>
		count<span class="sym">+:=</span><span class="num">1</span>
	<span class="sym">}</span>
<span class="kwa">return</span> count
<span class="kwa">end</span>

<span class="kwa">procedure</span> main<span class="sym">(</span>argv<span class="sym">)</span> <span class="slc">#{</span>
n<span class="sym">:=</span>  <span class="num">2</span> <span class="sym">&lt;= +</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">] |</span> <span class="num">2</span>
<span class="kwa">every</span> m<span class="sym">:=</span>ishift<span class="sym">(</span><span class="num">1</span><span class="sym">,</span>n <span class="sym">- (</span><span class="num">0</span><span class="sym">|</span><span class="num">1</span><span class="sym">|</span><span class="num">2</span><span class="sym">))*</span><span class="num">10000</span> <span class="kwa">do</span>
   printf <span class="sym">(</span><span class="str">&quot;Primes up to %8d %8d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> m<span class="sym">,</span> NSieve <span class="sym">(</span>m<span class="sym">,</span><span class="kwb">list</span><span class="sym">(</span>m<span class="sym">,</span><span class="num">1</span><span class="sym">)));</span>
<span class="slc">#write(&amp;errout,&amp;time)# n=9: 12sec; #2:9sec</span>
<span class="kwa">end</span>
