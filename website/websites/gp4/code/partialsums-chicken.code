<span class="slc">;; ---------------------------------------------------------------------</span>
<span class="slc">;; The Great Computer Language Shootout</span>
<span class="slc">;; http://shootout.alioth.debian.org/</span>
<span class="slc">;;</span>
<span class="slc">;; Based on D language implementation by Dave Fladebo [imperative version]</span>
<span class="slc">;;</span>
<span class="slc">;; Utilises extension, 'format'. If not available can be installed by</span>
<span class="slc">;; issuing the following shell command [as 'root']:</span>
<span class="slc">;;</span>
<span class="slc">;; # chicken-setup format</span>
<span class="slc">;;</span>
<span class="slc">;; Contributed by Anthony Borla</span>
<span class="slc">;; ---------------------------------------------------------------------</span>

<span class="sym">(</span>require<span class="sym">-</span>extension format<span class="sym">)</span>

<span class="sym">(</span>declare <span class="sym">(</span>disable<span class="sym">-</span>interrupts<span class="sym">) (</span>unsafe<span class="sym">) (</span>block<span class="sym">))</span>

<span class="slc">; -------------------------------</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span><span class="kwa">null</span>? args<span class="sym">)</span>
               <span class="num">1</span>
               <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">car</span> args<span class="sym">))))</span>

    <span class="sym">(</span>alt <span class="sym">-</span><span class="num">1</span><span class="sym">) (</span>d2 <span class="num">0</span><span class="sym">) (</span>d3 <span class="num">0</span><span class="sym">) (</span>ds <span class="num">0</span><span class="sym">) (</span>dc <span class="num">0</span><span class="sym">)</span>
    <span class="sym">(</span>s0 <span class="num">0</span><span class="sym">) (</span>s1 <span class="num">0</span><span class="sym">) (</span>s2 <span class="num">0</span><span class="sym">) (</span>s3 <span class="num">0</span><span class="sym">) (</span>s4 <span class="num">0</span><span class="sym">) (</span>s5 <span class="num">0</span><span class="sym">) (</span>s6 <span class="num">0</span><span class="sym">) (</span>s7 <span class="num">0</span><span class="sym">) (</span>s8 <span class="num">0</span><span class="sym">))</span>

    <span class="sym">(</span>do <span class="sym">((</span>d <span class="num">1</span> <span class="sym">(+</span> d <span class="num">1</span><span class="sym">)))</span>
        <span class="sym">((&lt;</span> n d<span class="sym">))</span>

      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> d2 <span class="sym">(*</span> d d<span class="sym">))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> d3 <span class="sym">(*</span> d2 d<span class="sym">))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> ds <span class="sym">(</span><span class="kwa">sin</span> d<span class="sym">))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> dc <span class="sym">(</span><span class="kwa">cos</span> d<span class="sym">))</span>

      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s0 <span class="sym">(+</span> s0 <span class="sym">(</span><span class="kwa">expt</span> <span class="sym">(/</span> <span class="num">2 3</span><span class="sym">) (-</span> d <span class="num">1</span><span class="sym">))))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s1 <span class="sym">(+</span> s1 <span class="sym">(/</span> <span class="num">1</span> <span class="sym">(</span><span class="kwa">sqrt</span> d<span class="sym">))))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s2 <span class="sym">(+</span> s2 <span class="sym">(/</span> <span class="num">1</span> <span class="sym">(*</span> d <span class="sym">(+</span> d <span class="num">1</span><span class="sym">)))))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s3 <span class="sym">(+</span> s3 <span class="sym">(/</span> <span class="num">1</span> <span class="sym">(*</span> d3 <span class="sym">(*</span> ds ds<span class="sym">)))))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s4 <span class="sym">(+</span> s4 <span class="sym">(/</span> <span class="num">1</span> <span class="sym">(*</span> d3 <span class="sym">(*</span> dc dc<span class="sym">)))))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s5 <span class="sym">(+</span> s5 <span class="sym">(/</span> <span class="num">1</span> d<span class="sym">)))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s6 <span class="sym">(+</span> s6 <span class="sym">(/</span> <span class="num">1</span> d2<span class="sym">)))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s7 <span class="sym">(+</span> s7 <span class="sym">(/</span> alt d<span class="sym">)))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> s8 <span class="sym">(+</span> s8 <span class="sym">(/</span> alt <span class="sym">(- (*</span> <span class="num">2</span> d<span class="sym">)</span> <span class="num">1</span><span class="sym">))))</span>
      <span class="sym">(</span><span class="kwa">set</span><span class="sym">!</span> alt <span class="sym">(* -</span><span class="num">1</span> alt<span class="sym">)))</span>

    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~A(2/3)^k~%&quot;</span> s0 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~Ak^-0.5~%&quot;</span> s1 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~A1/k(k+1)~%&quot;</span> s2 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~AFlint Hills~%&quot;</span> s3 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~ACookson Hills~%&quot;</span> s4 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~AHarmonic~%&quot;</span> s5 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~ARiemann Zeta~%&quot;</span> s6 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~AAlternating Harmonic~%&quot;</span> s7 #\tab<span class="sym">)</span>
    <span class="sym">(</span>format #t <span class="str">&quot;~,9F~AGregory~%&quot;</span> s8 #\tab<span class="sym">)))</span>

<span class="slc">; -------------------------------</span>

<span class="sym">(</span>main <span class="sym">(</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>arguments<span class="sym">))</span>

