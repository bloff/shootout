<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc">#  http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc">#  contributed by drigz</span>
<span class="hl slc">#  modified by Josh Goldfoot</span>

<span class="hl kwa">import</span> sys
<span class="hl kwa">import</span> threading
<span class="hl kwa">import</span> Queue

RED<span class="hl sym">,</span> BLUE<span class="hl sym">,</span> YELLOW<span class="hl sym">,</span> FADED <span class="hl sym">=</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">5</span><span class="hl sym">)</span>
mp_n <span class="hl sym">=</span> <span class="hl kwb">len</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">) &gt;</span> <span class="hl num">1</span> <span class="hl kwa">and</span> <span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span> <span class="hl kwa">or</span> <span class="hl num">100</span>
mp_first <span class="hl sym">=</span> <span class="hl kwa">None</span>
mp_entrylock <span class="hl sym">=</span> threading<span class="hl sym">.</span><span class="hl kwd">Lock</span><span class="hl sym">()</span>
mp_meetnotify <span class="hl sym">=</span> Queue<span class="hl sym">.</span><span class="hl kwd">Queue</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>

<span class="hl kwa">class</span> Creature<span class="hl sym">:</span>  <span class="hl slc"># old-style classes faster</span>
    <span class="hl kwa">def</span> <span class="hl kwd">__init__</span><span class="hl sym">(</span>self<span class="hl sym">,</span> icolor<span class="hl sym">):</span>
        self<span class="hl sym">.</span>color <span class="hl sym">=</span> icolor
        self<span class="hl sym">.</span>met <span class="hl sym">=</span> <span class="hl num">0</span>

    <span class="hl kwa">def</span> <span class="hl kwd">socialize</span><span class="hl sym">(</span>self<span class="hl sym">):</span>
        <span class="hl kwa">global</span> mp_n<span class="hl sym">,</span> mp_first<span class="hl sym">,</span> mp_entrylock<span class="hl sym">,</span> mp_meetnotify<span class="hl sym">,</span> reports
        <span class="hl slc"># optimize to minimize lookups of class variables and functions</span>
        self_color <span class="hl sym">=</span> self<span class="hl sym">.</span>color
        self_met <span class="hl sym">=</span> self<span class="hl sym">.</span>met
        mp_entrylock_acquire <span class="hl sym">=</span> mp_entrylock<span class="hl sym">.</span>acquire
        mp_entrylock_release <span class="hl sym">=</span> mp_entrylock<span class="hl sym">.</span>release
        mp_meetnotify_put <span class="hl sym">=</span> mp_meetnotify<span class="hl sym">.</span>put
        mp_meetnotify_get <span class="hl sym">=</span> mp_meetnotify<span class="hl sym">.</span>get
        <span class="hl kwa">while</span> <span class="hl num">1</span><span class="hl sym">:</span> <span class="hl slc">#keep looking for creatures to meet</span>
            <span class="hl kwd">mp_entrylock_acquire</span><span class="hl sym">()</span>
            <span class="hl kwa">if</span> mp_first <span class="hl sym">==</span> <span class="hl kwa">None</span><span class="hl sym">:</span> <span class="hl slc">#noone's here</span>
                <span class="hl kwa">if</span> mp_n <span class="hl sym">&lt;</span> <span class="hl num">1</span><span class="hl sym">:</span> <span class="hl slc">#check if meeting place is done</span>
                    <span class="hl kwd">mp_entrylock_release</span><span class="hl sym">()</span>
                    self<span class="hl sym">.</span>met <span class="hl sym">=</span> self_met
                    <span class="hl kwa">return</span>
                mp_n <span class="hl sym">-=</span> <span class="hl num">1</span>
                mp_first <span class="hl sym">=</span> self_color <span class="hl slc">#register my presence</span>
                <span class="hl kwd">mp_entrylock_release</span><span class="hl sym">()</span> <span class="hl slc">#let the people enter so we can meet</span>
                other <span class="hl sym">=</span> <span class="hl kwd">mp_meetnotify_get</span><span class="hl sym">()</span> <span class="hl slc">#wait for the next person</span>
                mp_first <span class="hl sym">=</span> <span class="hl kwa">None</span> <span class="hl slc">#we both leave</span>
                <span class="hl kwd">mp_entrylock_release</span><span class="hl sym">()</span> <span class="hl slc">#let others enter, our meeting is over</span>
            <span class="hl kwa">else</span><span class="hl sym">:</span> <span class="hl slc">#we've met someone else</span>
                other <span class="hl sym">=</span> mp_first
                <span class="hl kwd">mp_meetnotify_put</span><span class="hl sym">(</span>self_color<span class="hl sym">)</span>
            self_met <span class="hl sym">+=</span> <span class="hl num">1</span>
            <span class="hl kwa">if</span> other <span class="hl sym">==</span> FADED<span class="hl sym">:</span>
                self_color <span class="hl sym">=</span> FADED
            <span class="hl kwa">elif</span> self_color <span class="hl sym">!=</span> other<span class="hl sym">:</span>  <span class="hl slc"># Calculate complementary color</span>
                self_color <span class="hl sym">=</span> <span class="hl num">6</span> <span class="hl sym">-</span> self_color <span class="hl sym">-</span> other

<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl sym">():</span>
    colors <span class="hl sym">= [</span>BLUE<span class="hl sym">,</span> RED<span class="hl sym">,</span> YELLOW<span class="hl sym">,</span> BLUE<span class="hl sym">]</span>
    creatures <span class="hl sym">= [</span><span class="hl kwd">Creature</span><span class="hl sym">(</span>c<span class="hl sym">)</span> <span class="hl kwa">for</span> c <span class="hl kwa">in</span> colors<span class="hl sym">]</span>
    threads <span class="hl sym">= [</span>threading<span class="hl sym">.</span><span class="hl kwd">Thread</span><span class="hl sym">(</span>target<span class="hl sym">=</span>c<span class="hl sym">.</span>socialize<span class="hl sym">)</span> <span class="hl kwa">for</span> c <span class="hl kwa">in</span> creatures<span class="hl sym">]</span>
    <span class="hl kwa">for</span> t <span class="hl kwa">in</span> threads<span class="hl sym">:</span>
        t<span class="hl sym">.</span><span class="hl kwd">start</span><span class="hl sym">()</span>
    <span class="hl kwa">for</span> t <span class="hl kwa">in</span> threads<span class="hl sym">:</span>
        t<span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">()</span>
    <span class="hl kwa">print</span> <span class="hl kwb">sum</span><span class="hl sym">(</span>c<span class="hl sym">.</span>met <span class="hl kwa">for</span> c <span class="hl kwa">in</span> creatures<span class="hl sym">)</span>

<span class="hl kwd">main</span><span class="hl sym">()</span>

