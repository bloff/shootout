<span class="slc">// ---------------------------------------------------------------------</span>
<span class="slc">// The Great Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">//</span>
<span class="slc">// Based on D language implementation by Dave Fladebo</span>
<span class="slc">//</span>
<span class="slc">// Unfortunately, this contribution will fail to match Shootout output</span>
<span class="slc">// since both the built-in 'sqrt' and 'pow' functions exhibit different</span>
<span class="slc">// rounding behaviour to the equivalent functions in other Shootout</span>
<span class="slc">// languages [most of which, I believe, simply make use of the standard</span>
<span class="slc">// C Library math routines]. The only remedy of which I'm aware is</span>
<span class="slc">// writing a Pike module which specifically utilises the relevant C</span>
<span class="slc">// Library math routines, and recompile / reinstall the Pike interpreter</span>
<span class="slc">// to utilise this module. Not sure, however, how feasable this is.</span>
<span class="slc">//</span>
<span class="slc">// Sadly, this is a problem also shared by a few other Shootout</span>
<span class="slc">// languages including Regina REXX, Mozart Oz, and REBOL.</span>
<span class="slc">//</span>
<span class="slc">// Contributed by Anthony Borla</span>
<span class="slc">// ---------------------------------------------------------------------</span>

final class NBodySystem
<span class="sym">{</span>
  <span class="kwb">constant</span> PI <span class="sym">=</span> <span class="num">3.141592653589793</span><span class="sym">;</span>
  <span class="kwb">constant</span> SOLAR_MASS <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> PI <span class="sym">*</span> PI<span class="sym">;</span>
  <span class="kwb">constant</span> DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span><span class="sym">;</span>

  <span class="kwb">static void</span> <span class="kwd">create</span><span class="sym">()</span>
  <span class="sym">{</span>
    <span class="kwb">float</span> px<span class="sym">,</span> py<span class="sym">,</span> pz<span class="sym">;</span>

    <span class="kwd">foreach</span><span class="sym">(</span>bodies<span class="sym">,</span> Body i<span class="sym">)</span>
    <span class="sym">{</span>
      px <span class="sym">+=</span> i<span class="sym">-&gt;</span>vx <span class="sym">*</span> i<span class="sym">-&gt;</span>mass<span class="sym">;</span> py <span class="sym">+=</span> i<span class="sym">-&gt;</span>vy <span class="sym">*</span> i<span class="sym">-&gt;</span>mass<span class="sym">;</span> pz <span class="sym">+=</span> i<span class="sym">-&gt;</span>vz <span class="sym">*</span> i<span class="sym">-&gt;</span>mass<span class="sym">;</span>
    <span class="sym">}</span>

    bodies<span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwd">offsetMomentum</span><span class="sym">(</span>px<span class="sym">,</span> py<span class="sym">,</span> pz<span class="sym">);</span>
  <span class="sym">}</span>

  public <span class="kwb">void</span> <span class="kwd">advance</span><span class="sym">(</span><span class="kwb">float</span> dt<span class="sym">)</span>
  <span class="sym">{</span>
    <span class="kwb">float</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">,</span> mag<span class="sym">;</span>

    <span class="kwb">int</span> idx<span class="sym">,</span> length <span class="sym">=</span> <span class="kwa">sizeof</span><span class="sym">(</span>bodies<span class="sym">);</span>

    <span class="kwd">foreach</span><span class="sym">(</span>bodies<span class="sym">,</span> Body i<span class="sym">)</span>
    <span class="sym">{</span>
      <span class="kwd">foreach</span><span class="sym">(</span>bodies<span class="sym">[</span>idx <span class="sym">+</span> <span class="num">1</span> .. length<span class="sym">],</span> Body j<span class="sym">)</span>
      <span class="sym">{</span>
        dx <span class="sym">=</span> i<span class="sym">-&gt;</span>x <span class="sym">-</span> j<span class="sym">-&gt;</span>x<span class="sym">;</span>
        dy <span class="sym">=</span> i<span class="sym">-&gt;</span>y <span class="sym">-</span> j<span class="sym">-&gt;</span>y<span class="sym">;</span>
        dz <span class="sym">=</span> i<span class="sym">-&gt;</span>z <span class="sym">-</span> j<span class="sym">-&gt;</span>z<span class="sym">;</span>

        distance <span class="sym">=</span> <span class="kwa">sqrt</span><span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">);</span>
        mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">);</span>

        i<span class="sym">-&gt;</span>vx <span class="sym">-=</span> dx <span class="sym">*</span> j<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
        i<span class="sym">-&gt;</span>vy <span class="sym">-=</span> dy <span class="sym">*</span> j<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
        i<span class="sym">-&gt;</span>vz <span class="sym">-=</span> dz <span class="sym">*</span> j<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>

        j<span class="sym">-&gt;</span>vx <span class="sym">+=</span> dx <span class="sym">*</span> i<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
        j<span class="sym">-&gt;</span>vy <span class="sym">+=</span> dy <span class="sym">*</span> i<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
        j<span class="sym">-&gt;</span>vz <span class="sym">+=</span> dz <span class="sym">*</span> i<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
      <span class="sym">}</span>

      idx <span class="sym">+=</span> <span class="num">1</span><span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwd">foreach</span><span class="sym">(</span>bodies<span class="sym">,</span> Body i<span class="sym">)</span>
    <span class="sym">{</span>
      i<span class="sym">-&gt;</span>x <span class="sym">+=</span> dt <span class="sym">*</span> i<span class="sym">-&gt;</span>vx<span class="sym">;</span> i<span class="sym">-&gt;</span>y <span class="sym">+=</span> dt <span class="sym">*</span> i<span class="sym">-&gt;</span>vy<span class="sym">;</span> i<span class="sym">-&gt;</span>z <span class="sym">+=</span> dt <span class="sym">*</span> i<span class="sym">-&gt;</span>vz<span class="sym">;</span>
    <span class="sym">}</span>
  <span class="sym">}</span>

  public <span class="kwb">float</span> <span class="kwd">energy</span><span class="sym">()</span>
  <span class="sym">{</span>
    <span class="kwb">float</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> e<span class="sym">,</span> distance<span class="sym">;</span>

    <span class="kwb">int</span> idx<span class="sym">,</span> length <span class="sym">=</span> <span class="kwa">sizeof</span><span class="sym">(</span>bodies<span class="sym">);</span>

    <span class="kwd">foreach</span><span class="sym">(</span>bodies<span class="sym">,</span> Body i<span class="sym">)</span>
    <span class="sym">{</span>
      e <span class="sym">+=</span> <span class="num">0.5</span> <span class="sym">*</span> i<span class="sym">-&gt;</span>mass <span class="sym">* (</span>i<span class="sym">-&gt;</span>vx <span class="sym">*</span> i<span class="sym">-&gt;</span>vx <span class="sym">+</span> i<span class="sym">-&gt;</span>vy <span class="sym">*</span> i<span class="sym">-&gt;</span>vy <span class="sym">+</span> i<span class="sym">-&gt;</span>vz <span class="sym">*</span> i<span class="sym">-&gt;</span>vz<span class="sym">);</span>

      <span class="kwd">foreach</span><span class="sym">(</span>bodies<span class="sym">[</span>idx <span class="sym">+</span> <span class="num">1</span> .. length<span class="sym">],</span> Body j<span class="sym">)</span>
      <span class="sym">{</span>
        dx <span class="sym">=</span> i<span class="sym">-&gt;</span>x <span class="sym">-</span> j<span class="sym">-&gt;</span>x<span class="sym">;</span> dy <span class="sym">=</span> i<span class="sym">-&gt;</span>y <span class="sym">-</span> j<span class="sym">-&gt;</span>y<span class="sym">;</span> dz <span class="sym">=</span> i<span class="sym">-&gt;</span>z <span class="sym">-</span> j<span class="sym">-&gt;</span>z<span class="sym">;</span>
        distance <span class="sym">=</span> <span class="kwa">sqrt</span><span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">);</span>
        e <span class="sym">-= (</span>i<span class="sym">-&gt;</span>mass <span class="sym">*</span> j<span class="sym">-&gt;</span>mass<span class="sym">) /</span> distance<span class="sym">;</span>
      <span class="sym">}</span>

      idx <span class="sym">+=</span> <span class="num">1</span><span class="sym">;</span>
    <span class="sym">}</span>

    return e<span class="sym">;</span>
  <span class="sym">}</span>

  private final class Body
  <span class="sym">{</span>
    <span class="kwb">static void</span> <span class="kwd">create</span><span class="sym">(</span><span class="kwb">float</span> x<span class="sym">,</span> <span class="kwb">float</span> y<span class="sym">,</span> <span class="kwb">float</span> z<span class="sym">,</span> <span class="kwb">float</span> vx<span class="sym">,</span> <span class="kwb">float</span> vy<span class="sym">,</span> <span class="kwb">float</span> vz<span class="sym">,</span> <span class="kwb">float</span> mass<span class="sym">)</span>
    <span class="sym">{</span>
      this<span class="sym">-&gt;</span>x <span class="sym">=</span> x<span class="sym">;</span> this<span class="sym">-&gt;</span>y <span class="sym">=</span> y<span class="sym">;</span> this<span class="sym">-&gt;</span>z <span class="sym">=</span> z<span class="sym">;</span>
      this<span class="sym">-&gt;</span>vx <span class="sym">=</span> vx<span class="sym">;</span> this<span class="sym">-&gt;</span>vy <span class="sym">=</span> vy<span class="sym">;</span> this<span class="sym">-&gt;</span>vz <span class="sym">=</span> vz<span class="sym">;</span>
      this<span class="sym">-&gt;</span>mass <span class="sym">=</span> mass<span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwb">void</span> <span class="kwd">offsetMomentum</span><span class="sym">(</span><span class="kwb">float</span> px<span class="sym">,</span> <span class="kwb">float</span> py<span class="sym">,</span> <span class="kwb">float</span> pz<span class="sym">)</span>
    <span class="sym">{</span>
      vx <span class="sym">= -</span>px <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
      vy <span class="sym">= -</span>py <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
      vz <span class="sym">= -</span>pz <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
    <span class="sym">}</span>

    <span class="kwb">float</span> x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">,</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> mass<span class="sym">;</span>
  <span class="sym">}</span>

  <span class="slc">// sun jupiter saturn uranus neptune</span>

  private <span class="kwb">array</span><span class="sym">(</span>Body<span class="sym">)</span> bodies <span class="sym">=</span>
    <span class="sym">({</span>
      <span class="kwd">Body</span><span class="sym">(</span><span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> SOLAR_MASS<span class="sym">),</span>

      <span class="kwd">Body</span><span class="sym">(</span><span class="num">4.84143144246472090e+00</span><span class="sym">, -</span><span class="num">1.16032004402742839e+00</span><span class="sym">, -</span><span class="num">1.03622044471123109e-01</span><span class="sym">,</span>
           <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
           <span class="sym">-</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">),</span>

      <span class="kwd">Body</span><span class="sym">(</span><span class="num">8.34336671824457987e+00</span><span class="sym">,</span> <span class="num">4.12479856412430479e+00</span><span class="sym">, -</span><span class="num">4.03523417114321381e-01</span><span class="sym">,</span>
           <span class="sym">-</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
           <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">),</span>

      <span class="kwd">Body</span><span class="sym">(</span><span class="num">1.28943695621391310e+01</span><span class="sym">, -</span><span class="num">1.51111514016986312e+01</span><span class="sym">, -</span><span class="num">2.23307578892655734e-01</span><span class="sym">,</span>
           <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
           <span class="sym">-</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">),</span>

      <span class="kwd">Body</span><span class="sym">(</span><span class="num">1.53796971148509165e+01</span><span class="sym">, -</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span> <span class="num">1.79258772950371181e-01</span><span class="sym">,</span>
           <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
           <span class="sym">-</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span> <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">)</span>
    <span class="sym">});</span>
<span class="sym">}</span>

<span class="slc">// --------------------------------</span>

<span class="kwb">int</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> argv<span class="sym">)</span>
<span class="sym">{</span>
  <span class="kwb">int</span> N <span class="sym">= (</span><span class="kwb">int</span><span class="sym">)</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>

  NBodySystem nbs <span class="sym">=</span> <span class="kwd">NBodySystem</span><span class="sym">();</span>

  <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> nbs<span class="sym">-&gt;</span><span class="kwd">energy</span><span class="sym">());</span>
  <span class="kwd">for</span><span class="sym">(</span><span class="kwb">int</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> N<span class="sym">;</span> i<span class="sym">++)</span> nbs<span class="sym">-&gt;</span><span class="kwd">advance</span><span class="sym">(</span><span class="num">0.01</span><span class="sym">);</span>
  <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;%.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> nbs<span class="sym">-&gt;</span><span class="kwd">energy</span><span class="sym">());</span>

  return <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>

