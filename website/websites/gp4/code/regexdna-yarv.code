<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by jose fco. gonzalez</span>
seq = <span class="kwc">STDIN</span><span class="sym">.</span>readlines<span class="sym">.</span>join
ilen = seq<span class="sym">.</span>size

seq<span class="sym">.</span>gsub<span class="sym">!(/&gt;.*</span>\n<span class="sym">|</span>\n<span class="sym">/,</span><span class="str">&quot;&quot;</span>)
clen = seq<span class="sym">.</span>length

<span class="sym">[</span>
  <span class="sym">/</span>agggtaaa<span class="sym">|</span>tttaccct<span class="sym">/</span>i<span class="sym">,</span>
  <span class="sym">/[</span>cgt<span class="sym">]</span>gggtaaa<span class="sym">|</span>tttaccc<span class="sym">[</span>acg<span class="sym">]/</span>i<span class="sym">,</span>
  <span class="sym">/</span>a<span class="sym">[</span>act<span class="sym">]</span>ggtaaa<span class="sym">|</span>tttacc<span class="sym">[</span>agt<span class="sym">]</span>t<span class="sym">/</span>i<span class="sym">,</span>
  <span class="sym">/</span>ag<span class="sym">[</span>act<span class="sym">]</span>gtaaa<span class="sym">|</span>tttac<span class="sym">[</span>agt<span class="sym">]</span>ct<span class="sym">/</span>i<span class="sym">,</span>
  <span class="sym">/</span>agg<span class="sym">[</span>act<span class="sym">]</span>taaa<span class="sym">|</span>ttta<span class="sym">[</span>agt<span class="sym">]</span>cct<span class="sym">/</span>i<span class="sym">,</span>
  <span class="sym">/</span>aggg<span class="sym">[</span>acg<span class="sym">]</span>aaa<span class="sym">|</span>ttt<span class="sym">[</span>cgt<span class="sym">]</span>ccct<span class="sym">/</span>i<span class="sym">,</span>
  <span class="sym">/</span>agggt<span class="sym">[</span>cgt<span class="sym">]</span>aa<span class="sym">|</span>tt<span class="sym">[</span>acg<span class="sym">]</span>accct<span class="sym">/</span>i<span class="sym">,</span>
  <span class="sym">/</span>agggta<span class="sym">[</span>cgt<span class="sym">]</span>a<span class="sym">|</span>t<span class="sym">[</span>acg<span class="sym">]</span>taccct<span class="sym">/</span>i<span class="sym">,</span>
  <span class="sym">/</span>agggtaa<span class="sym">[</span>cgt<span class="sym">]|[</span>acg<span class="sym">]</span>ttaccct<span class="sym">/</span>i
<span class="sym">].</span>each <span class="sym">{|</span>f<span class="sym">|</span> puts <span class="str">&quot;#{f.source} #{seq.scan(f)</span><span class="sym">.</span>size<span class="sym">}</span><span class="str">&quot; }</span>
<span class="str"></span>
<span class="str">{</span>
<span class="str">'B' =&gt; '(c|g|t)</span><span class="str">', '</span>D<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>g<span class="sym">|</span>t)<span class="str">', '</span>H<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c<span class="sym">|</span>t)<span class="str">', '</span>K<span class="str">' =&gt; '</span><span class="sym">(</span>g<span class="sym">|</span>t)<span class="str">',</span>
<span class="str">'</span>M<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c)<span class="str">', '</span>N<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c<span class="sym">|</span>g<span class="sym">|</span>t)<span class="str">', '</span>R<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>g)<span class="str">', '</span>S<span class="str">' =&gt; '</span><span class="sym">(</span>c<span class="sym">|</span>t)<span class="str">',</span>
<span class="str">'</span>V<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c<span class="sym">|</span>g)<span class="str">', '</span>W<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>t)<span class="str">', '</span>Y<span class="str">' =&gt; '</span><span class="sym">(</span>c<span class="sym">|</span>t)<span class="str">'</span>
<span class="str">}.each { |f,r| seq.gsub!(f,r)</span> <span class="sym">}</span>

puts
puts ilen
puts clen
puts seq<span class="sym">.</span>length
