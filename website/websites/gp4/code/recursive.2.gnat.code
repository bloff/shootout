<span class="hl slc">-----------------------------------------------------------------------</span>
<span class="hl slc">-- The Computer Language Benchmarks Game</span>
<span class="hl slc">-- http://shootout.alioth.debian.org</span>
<span class="hl slc">-- contributed by Jim Rogers and Gautier de Montmollin</span>
<span class="hl slc">-----------------------------------------------------------------------</span>

<span class="hl kwa">with</span> Ada.Text_Io<span class="hl sym">;</span> <span class="hl kwa">use</span> Ada.Text_Io<span class="hl sym">;</span>
<span class="hl kwa">with</span> Ada.Command_Line<span class="hl sym">;</span> <span class="hl kwa">use</span> Ada.Command_Line<span class="hl sym">;</span>

<span class="hl kwa">procedure</span> Recursive <span class="hl kwa">is</span>
   <span class="hl kwa">type</span> Real <span class="hl kwa">is digits</span> <span class="hl num">15</span><span class="hl sym">;</span>
   <span class="hl kwa">package</span> Real_Io <span class="hl kwa">is new</span> Ada.Text_Io.Float_Io<span class="hl sym">(</span>Real<span class="hl sym">);</span>
   <span class="hl kwa">use</span> Real_Io<span class="hl sym">;</span>
   <span class="hl kwa">package</span> Int_Io <span class="hl kwa">is new</span> Ada.Text_Io.Integer_Io<span class="hl sym">(</span><span class="hl kwb">Long_Integer</span><span class="hl sym">);</span>
   <span class="hl kwa">use</span> Int_Io<span class="hl sym">;</span>

   N <span class="hl sym">:</span> <span class="hl kwb">Long_Integer</span><span class="hl sym">;</span>

   <span class="hl kwa">function</span> Ack <span class="hl sym">(</span>M<span class="hl sym">,</span> N <span class="hl sym">:</span> <span class="hl kwb">Long_Integer</span><span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwb">Long_Integer</span> <span class="hl kwa">is</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">if</span> M <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
         <span class="hl kwa">return</span> N <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl kwa">end if</span><span class="hl sym">;</span>
      <span class="hl kwa">if</span> N <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
         <span class="hl kwa">return</span> Ack<span class="hl sym">(</span>M <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">);</span>
      <span class="hl kwa">end if</span><span class="hl sym">;</span>
      <span class="hl kwa">return</span> Ack<span class="hl sym">(</span>M <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Ack<span class="hl sym">(</span>M<span class="hl sym">,</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">));</span>
   <span class="hl kwa">end</span> Ack<span class="hl sym">;</span>
   <span class="hl kwa">function</span> Fib<span class="hl sym">(</span>N <span class="hl sym">:</span> <span class="hl kwb">Long_Integer</span><span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwb">Long_Integer</span> <span class="hl kwa">is</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">if</span> N <span class="hl sym">&lt;</span> <span class="hl num">2</span> <span class="hl kwa">then</span>
         <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl kwa">else</span>
         <span class="hl kwa">return</span> Fib<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) +</span> Fib<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">);</span>
      <span class="hl kwa">end if</span><span class="hl sym">;</span>
   <span class="hl kwa">end</span> Fib<span class="hl sym">;</span>
   <span class="hl kwa">function</span> Tak<span class="hl sym">(</span>X<span class="hl sym">,</span> Y<span class="hl sym">,</span> Z <span class="hl sym">:</span> <span class="hl kwb">Long_Integer</span><span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwb">Long_Integer</span> <span class="hl kwa">is</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">if</span> Y <span class="hl sym">&lt;</span> X <span class="hl kwa">then</span>
         <span class="hl kwa">return</span> Tak<span class="hl sym">(</span>Tak<span class="hl sym">(</span>X <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> Y<span class="hl sym">,</span> Z<span class="hl sym">),</span> Tak<span class="hl sym">(</span>Y<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> Z<span class="hl sym">,</span> X<span class="hl sym">),</span> Tak<span class="hl sym">(</span>Z <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> X<span class="hl sym">,</span> Y<span class="hl sym">));</span>
      <span class="hl kwa">else</span>
         <span class="hl kwa">return</span> Z<span class="hl sym">;</span>
      <span class="hl kwa">end if</span><span class="hl sym">;</span>
   <span class="hl kwa">end</span> Tak<span class="hl sym">;</span>
   <span class="hl kwa">function</span> Fib<span class="hl sym">(</span>N <span class="hl sym">:</span> Real<span class="hl sym">)</span> <span class="hl kwa">return</span> Real <span class="hl kwa">is</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">if</span> N <span class="hl sym">&lt;</span> <span class="hl num">2.0</span> <span class="hl kwa">then</span>
         <span class="hl kwa">return</span> <span class="hl num">1.0</span><span class="hl sym">;</span>
      <span class="hl kwa">else</span>
         <span class="hl kwa">return</span> Fib<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">2.0</span><span class="hl sym">) +</span> Fib<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">);</span>
      <span class="hl kwa">end if</span><span class="hl sym">;</span>
   <span class="hl kwa">end</span> Fib<span class="hl sym">;</span>
   <span class="hl kwa">function</span> Tak<span class="hl sym">(</span>X<span class="hl sym">,</span> Y<span class="hl sym">,</span> Z <span class="hl sym">:</span> Real<span class="hl sym">)</span> <span class="hl kwa">return</span> Real <span class="hl kwa">is</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">if</span> Y <span class="hl sym">&lt;</span> X <span class="hl kwa">then</span>
         <span class="hl kwa">return</span> Tak<span class="hl sym">(</span>Tak<span class="hl sym">(</span>X <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">),</span> Tak<span class="hl sym">(</span>Y <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> Z<span class="hl sym">,</span> X<span class="hl sym">),</span> Tak<span class="hl sym">(</span>Z <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> X<span class="hl sym">,</span> Y<span class="hl sym">));</span>
      <span class="hl kwa">else</span>
         <span class="hl kwa">return</span> Z<span class="hl sym">;</span>
      <span class="hl kwa">end if</span><span class="hl sym">;</span>
   <span class="hl kwa">end</span> Tak<span class="hl sym">;</span>

<span class="hl kwa">begin</span>
   N <span class="hl sym">:=</span> <span class="hl kwb">Long_Integer</span><span class="hl sym">'</span>Value<span class="hl sym">(</span>Argument<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">));</span>

   Put<span class="hl sym">(</span><span class="hl str">&quot;Ack(3,&quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> N<span class="hl sym">,</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span> Put<span class="hl sym">(</span><span class="hl str">&quot;): &quot;</span><span class="hl sym">);</span>
   Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> Ack<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,</span> N<span class="hl sym">),</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span> New_Line<span class="hl sym">;</span>

   Put<span class="hl sym">(</span><span class="hl str">&quot;Fib(&quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> Real<span class="hl sym">(</span>N<span class="hl sym">)+</span><span class="hl num">27.0</span><span class="hl sym">,</span> Fore <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">,</span> Aft <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">,</span> Exp <span class="hl sym">=&gt;</span> <span class="hl num">0</span><span class="hl sym">);</span>
   Put<span class="hl sym">(</span><span class="hl str">&quot;): &quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> Fib<span class="hl sym">(</span>Real<span class="hl sym">(</span>N<span class="hl sym">) +</span> <span class="hl num">27.0</span><span class="hl sym">),</span> Fore <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">,</span> Aft <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">,</span> Exp <span class="hl sym">=&gt;</span> <span class="hl num">0</span><span class="hl sym">);</span>
   New_Line<span class="hl sym">;</span>

   N <span class="hl sym">:=</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
   Put<span class="hl sym">(</span><span class="hl str">&quot;Tak(&quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> N<span class="hl sym">*</span><span class="hl num">3</span><span class="hl sym">,</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span> Put<span class="hl sym">(</span><span class="hl str">&quot;,&quot;</span><span class="hl sym">);</span>
   Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> N<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">,</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span> Put<span class="hl sym">(</span><span class="hl str">&quot;,&quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> N<span class="hl sym">,</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span>
   Put<span class="hl sym">(</span><span class="hl str">&quot;): &quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> Tak<span class="hl sym">(</span>N<span class="hl sym">*</span><span class="hl num">3</span><span class="hl sym">,</span> N<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">,</span> N<span class="hl sym">),</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span> New_Line<span class="hl sym">;</span>

   Put<span class="hl sym">(</span><span class="hl str">&quot;Fib(3): &quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> Fib<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">),</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">0</span><span class="hl sym">);</span> New_Line<span class="hl sym">;</span>
   Put<span class="hl sym">(</span><span class="hl str">&quot;Tak(3.0,2.0,1.0): &quot;</span><span class="hl sym">);</span> Put<span class="hl sym">(</span>Item <span class="hl sym">=&gt;</span> Tak<span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">,</span><span class="hl num">2.0</span><span class="hl sym">,</span><span class="hl num">1.0</span><span class="hl sym">),</span> Aft <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">,</span> Exp <span class="hl sym">=&gt;</span> <span class="hl num">0</span><span class="hl sym">,</span> Fore <span class="hl sym">=&gt;</span> <span class="hl num">1</span><span class="hl sym">);</span>
   New_Line<span class="hl sym">;</span>

<span class="hl kwa">end</span> Recursive<span class="hl sym">;</span>
