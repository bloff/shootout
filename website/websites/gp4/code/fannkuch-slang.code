<span class="sym">%!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>slsh
<span class="sym">%</span>
<span class="sym">%</span> Contributed by John E<span class="sym">.</span> Davis
<span class="sym">%</span>
<span class="kwb">static</span> define <span class="kwd">fannkuch</span> <span class="sym">(</span>n<span class="sym">)</span>
<span class="sym">{</span>
	variable i<span class="sym">,</span> m <span class="sym">=</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">;</span>
	variable perm1 <span class="sym">= [</span><span class="num">0</span><span class="sym">:</span>m<span class="sym">];</span>
	variable r <span class="sym">=</span> n<span class="sym">;</span>
	variable count <span class="sym">=</span> Int_Type<span class="sym">[</span>n<span class="sym">];</span>
	variable max_flipcounts <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
	variable maxperm<span class="sym">;</span>
	forever
	<span class="sym">{</span>
		<span class="kwa">while</span> <span class="sym">(</span>r <span class="sym">!=</span> <span class="num">1</span><span class="sym">)</span>
		<span class="sym">{</span>
			count<span class="sym">[</span>r<span class="sym">-</span><span class="num">1</span><span class="sym">] =</span> r<span class="sym">;</span>
			r<span class="sym">--;</span>
		<span class="sym">}</span>

		<span class="sym">!</span><span class="kwa">if</span> <span class="sym">((</span>perm1<span class="sym">[</span><span class="num">0</span><span class="sym">] ==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">or</span> <span class="sym">(</span>perm1<span class="sym">[</span>m<span class="sym">] ==</span> m<span class="sym">))</span>
		<span class="sym">{</span>
			variable perm <span class="sym">=</span> &#64;perm1<span class="sym">;</span>
			variable flipcounts <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
			forever
			<span class="sym">{</span>
				variable k <span class="sym">=</span> perm<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
				<span class="sym">!</span><span class="kwa">if</span> <span class="sym">(</span>k<span class="sym">)</span>
					<span class="kwa">break</span><span class="sym">;</span>
				<span class="kwd">_for</span> <span class="sym">(</span><span class="num">0</span><span class="sym">, (</span>k<span class="sym">+</span><span class="num">1</span><span class="sym">)/</span><span class="num">2</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
				<span class="sym">{</span>
					i<span class="sym">=();</span>
					<span class="sym">(</span>perm<span class="sym">[</span>i<span class="sym">],</span> perm<span class="sym">[</span>k<span class="sym">-</span>i<span class="sym">]) = (</span>perm<span class="sym">[</span>k<span class="sym">-</span>i<span class="sym">],</span> perm<span class="sym">[</span>i<span class="sym">]);</span>
				<span class="sym">}</span>
				flipcounts<span class="sym">++;</span>
			<span class="sym">}</span>
			<span class="kwa">if</span> <span class="sym">(</span>flipcounts <span class="sym">&gt;</span> max_flipcounts<span class="sym">)</span>
			<span class="sym">{</span>
				max_flipcounts <span class="sym">=</span> flipcounts<span class="sym">;</span>
				maxperm <span class="sym">=</span> &#64;perm1<span class="sym">;</span>
			<span class="sym">}</span>
		<span class="sym">}</span>
		forever
		<span class="sym">{</span>
			<span class="kwa">if</span> <span class="sym">(</span>r <span class="sym">==</span> n<span class="sym">)</span>
				<span class="kwa">return</span> max_flipcounts<span class="sym">;</span>
			variable perm0 <span class="sym">=</span> perm1<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
			<span class="kwd">_for</span> <span class="sym">(</span><span class="num">0</span><span class="sym">,</span>r<span class="sym">-</span><span class="num">1</span><span class="sym">,</span><span class="num">1</span><span class="sym">)</span>
			<span class="sym">{</span>
				i <span class="sym">= ();</span>
				perm1<span class="sym">[</span>i<span class="sym">] =</span> perm1<span class="sym">[</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">];</span>
			<span class="sym">}</span>

			perm1<span class="sym">[</span>r<span class="sym">] =</span> perm0<span class="sym">;</span>
			variable cr <span class="sym">=</span> count<span class="sym">[</span>r<span class="sym">];</span> cr<span class="sym">--;</span> count<span class="sym">[</span>r<span class="sym">] =</span> cr<span class="sym">;</span>
			<span class="kwa">if</span> <span class="sym">(</span>cr <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">)</span>
				<span class="kwa">break</span><span class="sym">;</span>
			r<span class="sym">++;</span>
		<span class="sym">}</span>
	<span class="sym">}</span>
<span class="sym">}</span>

<span class="kwb">static</span> define <span class="kwd">main</span> <span class="sym">()</span>
<span class="sym">{</span>
	variable num <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
	<span class="kwa">if</span> <span class="sym">(</span>__argc <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">)</span> num <span class="sym">=</span> <span class="kwd">integer</span> <span class="sym">(</span>__argv<span class="sym">[</span><span class="num">1</span><span class="sym">]);</span>
	<span class="kwd">fprintf</span> <span class="sym">(</span>stdout<span class="sym">,</span> <span class="str">&quot;Pfannkuchen(%d) = %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">, (</span>num<span class="sym">,</span> <span class="kwd">fannkuch</span> <span class="sym">(</span>num<span class="sym">)));</span>
<span class="sym">}</span>
<span class="kwd">main</span> <span class="sym">();</span>

<span class="sym">%</span> vim<span class="sym">:</span> ts<span class="sym">=</span><span class="num">4</span> ft<span class="sym">=</span>slang
