<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://shootout.alioth.debian.org/</span>
<span class="hl com">    contributed by Carlo Teixeira *&quot;</span><span class="hl sym">!</span>

Object subclass<span class="hl sym">: #</span>Tests
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">''</span>
	classVariableNames<span class="hl sym">:</span> <span class="hl str">''</span>
	poolDictionaries<span class="hl sym">:</span> <span class="hl str">''</span>
	category<span class="hl sym">:</span> <span class="hl str">'Shootout'</span><span class="hl sym">!</span>

Tests class
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">''</span><span class="hl sym">!</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


<span class="hl sym">!</span>Tests class methodsFor<span class="hl sym">:</span> <span class="hl str">'benchmarking-scripts'</span><span class="hl sym">!</span>

chameneousBenchmark
	Mall runBenchMark<span class="hl sym">:</span> <span class="hl kwa">self</span> arg on<span class="hl sym">:</span> <span class="hl kwa">self</span> stdout<span class="hl sym">.</span>
	<span class="hl sym">^</span><span class="hl str">''</span><span class="hl sym">! !</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


Object subclass<span class="hl sym">: #</span>Pair
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">'partner me sema '</span>
	classVariableNames<span class="hl sym">:</span> <span class="hl str">''</span>
	poolDictionaries<span class="hl sym">:</span> <span class="hl str">''</span>
	category<span class="hl sym">:</span> <span class="hl str">'(none)'</span><span class="hl sym">!</span>

Pair class
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">''</span><span class="hl sym">!</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


<span class="hl sym">!</span>Pair class methodsFor<span class="hl sym">:</span> <span class="hl str">'instance creation'</span><span class="hl sym">!</span>

new
	&quot;Answer a newly created and initialized instance<span class="hl sym">.</span>&quot;
	<span class="hl sym">^</span><span class="hl kwa">super</span> new initialize<span class="hl sym">.!</span>

with<span class="hl sym">:</span> me
	&quot;Answer a newly created and initialized instance<span class="hl sym">.</span>&quot;
<span class="hl kwa">self</span> halt<span class="hl sym">.</span>
	<span class="hl sym">^</span><span class="hl kwa">super</span> new initialize me<span class="hl sym">:</span> me<span class="hl sym">! !</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


Pair comment<span class="hl sym">:</span>
<span class="hl str">''</span><span class="hl sym">!</span>

<span class="hl sym">!</span>Pair methodsFor<span class="hl sym">:</span> <span class="hl str">'accessing'</span><span class="hl sym">!</span>

me
	<span class="hl sym">^</span>me<span class="hl sym">!</span>

me<span class="hl sym">:</span> anObject
	me <span class="hl sym">:=</span> anObject<span class="hl sym">!</span>

partner
	<span class="hl sym">^</span>partner<span class="hl sym">!</span>

partner<span class="hl sym">:</span> anObject
	partner <span class="hl sym">:=</span> anObject<span class="hl sym">! !</span>

<span class="hl sym">!</span>Pair methodsFor<span class="hl sym">:</span> <span class="hl str">'initialize-release'</span><span class="hl sym">!</span>

initialize
	&quot;Initialize a newly created instance<span class="hl sym">.</span> This method must answer the receiver<span class="hl sym">.</span>&quot;

	partner <span class="hl sym">:=</span> <span class="hl kwa">nil</span><span class="hl sym">.</span>
	me <span class="hl sym">:=</span> <span class="hl kwa">nil</span><span class="hl sym">.</span>
	sema <span class="hl sym">:=</span> Semaphore new<span class="hl sym">.</span>
	<span class="hl sym">^</span><span class="hl kwa">self</span><span class="hl sym">!</span>

release
partner<span class="hl sym">:=</span><span class="hl kwa">nil</span><span class="hl sym">.!</span>

signal
	sema signal<span class="hl sym">!</span>

wait
	sema wait<span class="hl sym">! !</span>

Object subclass<span class="hl sym">: #</span>Mall
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">'guard maxRendezvous open process queue cache pairCache '</span>
	classVariableNames<span class="hl sym">:</span> <span class="hl str">'Units '</span>
	poolDictionaries<span class="hl sym">:</span> <span class="hl str">''</span>
	category<span class="hl sym">:</span> <span class="hl str">'chameleon'</span><span class="hl sym">!</span>

Mall class
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">''</span><span class="hl sym">!</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


<span class="hl sym">!</span>Mall class methodsFor<span class="hl sym">:</span> <span class="hl str">'printing'</span><span class="hl sym">!</span>

generateReportFor<span class="hl sym">:</span> creatures printOn<span class="hl sym">:</span> stream
	<span class="hl sym">|</span> sum <span class="hl sym">|</span>
	sum <span class="hl sym">:=</span> creatures inject<span class="hl sym">:</span> <span class="hl num">0</span> into<span class="hl sym">: [:</span>accum <span class="hl sym">:</span>each <span class="hl sym">|</span> accum <span class="hl sym">+</span> each creaturesMet<span class="hl sym">].</span>
	creatures do<span class="hl sym">:</span>
			<span class="hl sym">[:</span>aCreature <span class="hl sym">|</span>
			aCreature creaturesMet printOn<span class="hl sym">:</span> stream<span class="hl sym">.</span>
			stream
				space<span class="hl sym">;</span>
				nextPutAll<span class="hl sym">: (</span><span class="hl kwa">self</span> units at<span class="hl sym">:</span> aCreature selfMet <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">);</span>
				nl<span class="hl sym">].</span>
	stream space<span class="hl sym">.</span>
	sum printString
		do<span class="hl sym">: [:</span>el <span class="hl sym">|</span> stream nextPutAll<span class="hl sym">: (</span><span class="hl kwa">self</span> units at<span class="hl sym">:</span> el digitValue <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)]</span>
		separatedBy<span class="hl sym">: [</span>stream space<span class="hl sym">].</span>
	<span class="hl sym">^</span>stream<span class="hl sym">!</span>

generateReportForColours<span class="hl sym">:</span> colours printOn<span class="hl sym">:</span> stream
	stream space<span class="hl sym">.</span>
	colours do<span class="hl sym">: [:</span>colour <span class="hl sym">|</span> colour printOn<span class="hl sym">:</span> stream<span class="hl sym">]</span> separatedBy<span class="hl sym">: [</span>stream space<span class="hl sym">].</span>
	<span class="hl sym">^</span>stream<span class="hl sym">! !</span>

<span class="hl sym">!</span>Mall class methodsFor<span class="hl sym">:</span> <span class="hl str">'initialize-release'</span><span class="hl sym">!</span>

createAllowing<span class="hl sym">:</span> maxRendezvous
	&quot;Private&quot;

	<span class="hl sym">^</span><span class="hl kwa">self</span> basicNew initialize maxRendezvous<span class="hl sym">:</span> maxRendezvous<span class="hl sym">!</span>

createCreaturesWith<span class="hl sym">:</span> aCollectionOfColours
	&quot;Private&quot;

	<span class="hl sym">|</span> aName <span class="hl sym">|</span>
	aName <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>
	<span class="hl sym">^</span>aCollectionOfColours collect<span class="hl sym">:</span>
			<span class="hl sym">[:</span>aColour <span class="hl sym">|</span>
			aName <span class="hl sym">:=</span> aName <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">.</span>
			Creature withName<span class="hl sym">:</span> aName colour<span class="hl sym">:</span> aColour<span class="hl sym">]!</span>

initialize
	&quot;<span class="hl kwa">self</span> initialize&quot;

	Units <span class="hl sym">:= #(</span><span class="hl str">'zero'</span> <span class="hl str">'one'</span> <span class="hl str">'two'</span> <span class="hl str">'three'</span> <span class="hl str">'four'</span> <span class="hl str">'five'</span> <span class="hl str">'six'</span> <span class="hl str">'seven'</span> <span class="hl str">'eight'</span> <span class="hl str">'nine'</span><span class="hl sym">)!</span>

new
	<span class="hl sym">^</span><span class="hl kwa">self</span> shouldNotImplement<span class="hl sym">!</span>

openMallWith<span class="hl sym">:</span> aCollectionOfColours forNumberOfMeets<span class="hl sym">:</span> aNumber
	<span class="hl sym">|</span> mall creatures guard <span class="hl sym">|</span>
	mall <span class="hl sym">:=</span> <span class="hl kwa">self</span> createAllowing<span class="hl sym">:</span> aNumber<span class="hl sym">.</span>
	mall run<span class="hl sym">.</span>
	creatures <span class="hl sym">:=</span> <span class="hl kwa">self</span> createCreaturesWith<span class="hl sym">:</span> aCollectionOfColours<span class="hl sym">.</span>
	guard <span class="hl sym">:=</span> Semaphore new<span class="hl sym">.</span>
	<span class="hl kwa">self</span>
		openMall<span class="hl sym">:</span> mall
		forCreatures<span class="hl sym">:</span> creatures
		usingGuard<span class="hl sym">:</span> guard<span class="hl sym">.</span>
	<span class="hl kwa">self</span>
		waitForClosingOfMall<span class="hl sym">:</span> mall
		withCreatures<span class="hl sym">:</span> creatures
		usingGuard<span class="hl sym">:</span> guard<span class="hl sym">.</span>
	<span class="hl sym">^</span>creatures<span class="hl sym">! !</span>

<span class="hl sym">!</span>Mall class methodsFor<span class="hl sym">:</span> <span class="hl str">'private'</span><span class="hl sym">!</span>

openMall<span class="hl sym">:</span> aMall forCreatures<span class="hl sym">:</span> creatures usingGuard<span class="hl sym">:</span> sema
	<span class="hl sym">|</span> processes <span class="hl sym">|</span>
	processes <span class="hl sym">:=</span> creatures
				collect<span class="hl sym">: [:</span>aCreature <span class="hl sym">|</span>
					<span class="hl sym">[</span>aCreature visitMall<span class="hl sym">:</span> aMall<span class="hl sym">.</span>
					sema signal<span class="hl sym">]</span> newProcess<span class="hl sym">].</span>
	processes do<span class="hl sym">:</span>
			<span class="hl sym">[:</span>proc <span class="hl sym">|</span>
			proc priority<span class="hl sym">:</span> Processor userBackgroundPriority<span class="hl sym">.</span>
			proc resume<span class="hl sym">]!</span>

waitForClosingOfMall<span class="hl sym">:</span> aMall withCreatures<span class="hl sym">:</span> creatures usingGuard<span class="hl sym">:</span> guard
	creatures size timesRepeat<span class="hl sym">: [</span>guard wait<span class="hl sym">].</span>
	aMall close<span class="hl sym">! !</span>

<span class="hl sym">!</span>Mall class methodsFor<span class="hl sym">:</span> <span class="hl str">'accessing'</span><span class="hl sym">!</span>

units
	<span class="hl sym">^</span>Units<span class="hl sym">! !</span>

<span class="hl sym">!</span>Mall class methodsFor<span class="hl sym">:</span> <span class="hl str">'public'</span><span class="hl sym">!</span>

runBenchMark<span class="hl sym">:</span> number on<span class="hl sym">:</span> anOutputStream
	&quot;<span class="hl kwa">self</span> runBenchMark<span class="hl sym">:</span> <span class="hl num">60000</span> on<span class="hl sym">:</span> Transcript<span class="hl sym">.</span>&quot;

	<span class="hl sym">|</span> firstTestColours secondTestColours blue red yellow creatures <span class="hl sym">|</span>
	blue <span class="hl sym">:=</span> ChameneosColour blue<span class="hl sym">.</span>
	red <span class="hl sym">:=</span> ChameneosColour red<span class="hl sym">.</span>
	yellow <span class="hl sym">:=</span> ChameneosColour yellow<span class="hl sym">.</span>
	firstTestColours <span class="hl sym">:=</span> Array
				with<span class="hl sym">:</span> blue
				with<span class="hl sym">:</span> red
				with<span class="hl sym">:</span> yellow<span class="hl sym">.</span>
	secondTestColours <span class="hl sym">:= (</span>OrderedCollection new<span class="hl sym">)</span>
				add<span class="hl sym">:</span> blue<span class="hl sym">;</span>
				add<span class="hl sym">:</span> red<span class="hl sym">;</span>
				add<span class="hl sym">:</span> yellow<span class="hl sym">;</span>
				add<span class="hl sym">:</span> red<span class="hl sym">;</span>
				add<span class="hl sym">:</span> yellow<span class="hl sym">;</span>
				add<span class="hl sym">:</span> blue<span class="hl sym">;</span>
				add<span class="hl sym">:</span> red<span class="hl sym">;</span>
				add<span class="hl sym">:</span> yellow<span class="hl sym">;</span>
				add<span class="hl sym">:</span> red<span class="hl sym">;</span>
				add<span class="hl sym">:</span> blue<span class="hl sym">;</span>
				yourself<span class="hl sym">.</span>
	<span class="hl sym">(</span>ChameneosColour generateReportOfColoursOn<span class="hl sym">:</span> anOutputStream<span class="hl sym">)</span> nl<span class="hl sym">.</span>
	<span class="hl sym">(</span><span class="hl kwa">self</span> generateReportForColours<span class="hl sym">:</span> firstTestColours printOn<span class="hl sym">:</span> anOutputStream<span class="hl sym">)</span>
		nl<span class="hl sym">.</span>
	creatures <span class="hl sym">:=</span> Mall openMallWith<span class="hl sym">:</span> firstTestColours forNumberOfMeets<span class="hl sym">:</span> number<span class="hl sym">.</span>
	<span class="hl sym">(</span><span class="hl kwa">self</span> generateReportFor<span class="hl sym">:</span> creatures printOn<span class="hl sym">:</span> anOutputStream<span class="hl sym">)</span>
		nl<span class="hl sym">;</span>
		nl<span class="hl sym">.</span>
	<span class="hl sym">(</span><span class="hl kwa">self</span> generateReportForColours<span class="hl sym">:</span> secondTestColours printOn<span class="hl sym">:</span> anOutputStream<span class="hl sym">)</span>
		nl<span class="hl sym">.</span>
	creatures <span class="hl sym">:=</span> Mall openMallWith<span class="hl sym">:</span> secondTestColours forNumberOfMeets<span class="hl sym">:</span> number<span class="hl sym">.</span>
	<span class="hl sym">(</span><span class="hl kwa">self</span> generateReportFor<span class="hl sym">:</span> creatures printOn<span class="hl sym">:</span> anOutputStream<span class="hl sym">)</span>
		nl<span class="hl sym">;</span>
		nl<span class="hl sym">! !</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


Mall comment<span class="hl sym">:</span>
<span class="hl str">''</span><span class="hl sym">!</span>

<span class="hl sym">!</span>Mall methodsFor<span class="hl sym">:</span> <span class="hl str">'accessing'</span><span class="hl sym">!</span>

maxRendezvous<span class="hl sym">:</span> max
	maxRendezvous <span class="hl sym">:=</span> max<span class="hl sym">! !</span>

<span class="hl sym">!</span>Mall methodsFor<span class="hl sym">:</span> <span class="hl str">'private'</span><span class="hl sym">!</span>

obtainPair
	<span class="hl sym">^</span>cache removeFirst<span class="hl sym">!</span>

processVisitors
	<span class="hl sym">[</span>open<span class="hl sym">]</span> whileTrue<span class="hl sym">:</span>
			<span class="hl sym">[</span><span class="hl num">1</span> to<span class="hl sym">:</span> maxRendezvous
				do<span class="hl sym">:</span>
					<span class="hl sym">[:</span>x <span class="hl sym">|</span>
					<span class="hl sym">|</span> first second <span class="hl sym">|</span>
					first <span class="hl sym">:=</span> queue next<span class="hl sym">.</span>
					second <span class="hl sym">:=</span> queue next<span class="hl sym">.</span>
					<span class="hl kwa">self</span> setPartnersOn<span class="hl sym">:</span> first and<span class="hl sym">:</span> second<span class="hl sym">.</span>
					first signal<span class="hl sym">.</span>
					second signal<span class="hl sym">].</span>
			<span class="hl sym">[</span>queue isEmpty<span class="hl sym">]</span> whileFalse<span class="hl sym">: [</span>queue next signal<span class="hl sym">]].</span>
	process terminate<span class="hl sym">.</span>
	process <span class="hl sym">:=</span> <span class="hl kwa">nil</span><span class="hl sym">!</span>

releasePair<span class="hl sym">:</span> pair
	pair release<span class="hl sym">.</span>
	cache addFirst<span class="hl sym">:</span> pair<span class="hl sym">!</span>

setPartnersOn<span class="hl sym">:</span> first and<span class="hl sym">:</span> second
	first partner<span class="hl sym">:</span> second me<span class="hl sym">.</span>
	second partner<span class="hl sym">:</span> first me<span class="hl sym">.</span>
<span class="hl sym">!</span>

shutdown
	<span class="hl sym">[</span>queue isEmpty<span class="hl sym">]</span> whileFalse<span class="hl sym">: [</span>queue next signal<span class="hl sym">].</span>
	process terminate<span class="hl sym">.</span>
	process <span class="hl sym">:=</span> <span class="hl kwa">nil</span><span class="hl sym">! !</span>

<span class="hl sym">!</span>Mall methodsFor<span class="hl sym">:</span> <span class="hl str">'initialize-release'</span><span class="hl sym">!</span>

initialize
	guard <span class="hl sym">:=</span> Semaphore forMutualExclusion<span class="hl sym">.</span>
	queue <span class="hl sym">:=</span> SharedQueue new<span class="hl sym">.</span>
	cache <span class="hl sym">:=</span> OrderedCollection new<span class="hl sym">.</span>
	<span class="hl num">1</span> to<span class="hl sym">:</span> <span class="hl num">10</span> do<span class="hl sym">: [:</span>x <span class="hl sym">|</span> cache add<span class="hl sym">:</span> Pair new<span class="hl sym">]!</span>

run
	open <span class="hl sym">:=</span> <span class="hl kwa">true</span><span class="hl sym">.</span>
	process ifNil<span class="hl sym">:</span>
			<span class="hl sym">[</span>process <span class="hl sym">:= [</span><span class="hl kwa">self</span> processVisitors<span class="hl sym">]</span> newProcess<span class="hl sym">.</span>
			process priority<span class="hl sym">:</span> Processor userBackgroundPriority <span class="hl sym">-</span><span class="hl num">1</span> <span class="hl sym">].</span>
	process resume<span class="hl sym">! !</span>

<span class="hl sym">!</span>Mall methodsFor<span class="hl sym">:</span> <span class="hl str">'controlling'</span><span class="hl sym">!</span>

close
	open <span class="hl sym">:=</span> <span class="hl kwa">false</span><span class="hl sym">!</span>

visitWith<span class="hl sym">:</span> aChameneos
	<span class="hl sym">|</span> pair partner <span class="hl sym">|</span>
	pair <span class="hl sym">:=</span> <span class="hl kwa">self</span> obtainPair<span class="hl sym">.</span>
	pair me<span class="hl sym">:</span> aChameneos<span class="hl sym">.</span>
	queue nextPut<span class="hl sym">:</span> pair<span class="hl sym">.</span>
	pair wait<span class="hl sym">.</span>
	partner <span class="hl sym">:=</span> pair partner<span class="hl sym">.</span>
	<span class="hl kwa">self</span> releasePair<span class="hl sym">:</span> pair<span class="hl sym">.</span>
	<span class="hl sym">^</span>partner<span class="hl sym">! !</span>

Mall initialize<span class="hl sym">!</span>

Object subclass<span class="hl sym">: #</span>Creature
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">'creatureName colour selfMet creaturesMet '</span>
	classVariableNames<span class="hl sym">:</span> <span class="hl str">''</span>
	poolDictionaries<span class="hl sym">:</span> <span class="hl str">''</span>
	category<span class="hl sym">:</span> <span class="hl str">'chameleon'</span><span class="hl sym">!</span>

Creature class
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">''</span><span class="hl sym">!</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


<span class="hl sym">!</span>Creature class methodsFor<span class="hl sym">:</span> <span class="hl str">'initialize-release'</span><span class="hl sym">!</span>

withName<span class="hl sym">:</span> aName colour<span class="hl sym">:</span> aColour
	<span class="hl sym">^(</span>Creature new initialize<span class="hl sym">)</span>
		name<span class="hl sym">:</span> aName<span class="hl sym">;</span>
		colour<span class="hl sym">:</span> aColour<span class="hl sym">! !</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


<span class="hl sym">!</span>Creature methodsFor<span class="hl sym">:</span> <span class="hl str">'accessing'</span><span class="hl sym">!</span>

colour
	<span class="hl sym">^</span>colour<span class="hl sym">!</span>

colour<span class="hl sym">:</span> anObject
	colour <span class="hl sym">:=</span> anObject<span class="hl sym">!</span>

creaturesMet
	<span class="hl sym">^</span>creaturesMet<span class="hl sym">!</span>

creaturesMet<span class="hl sym">:</span> anObject
	creaturesMet <span class="hl sym">:=</span> anObject<span class="hl sym">!</span>

name
	<span class="hl sym">^</span>creatureName<span class="hl sym">!</span>

name<span class="hl sym">:</span> anObject
	creatureName <span class="hl sym">:=</span> anObject<span class="hl sym">!</span>

selfMet
	<span class="hl sym">^</span>selfMet<span class="hl sym">!</span>

selfMet<span class="hl sym">:</span> anObject
	<span class="hl sym">^</span>selfMet <span class="hl sym">:=</span> anObject<span class="hl sym">! !</span>

<span class="hl sym">!</span>Creature methodsFor<span class="hl sym">:</span> <span class="hl str">'initialize-release'</span><span class="hl sym">!</span>

initialize
	selfMet <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>
	creaturesMet <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">! !</span>

<span class="hl sym">!</span>Creature methodsFor<span class="hl sym">:</span> <span class="hl str">'controlling'</span><span class="hl sym">!</span>

visitMall<span class="hl sym">:</span> mall

	<span class="hl sym">[|</span> partner <span class="hl sym">|</span>
	partner <span class="hl sym">:=</span> mall visitWith<span class="hl sym">:</span> <span class="hl kwa">self</span><span class="hl sym">.</span>
	partner ifNotNil<span class="hl sym">:</span>
			<span class="hl sym">[</span>colour <span class="hl sym">:=</span> colour complementaryColourFor<span class="hl sym">:</span> partner colour<span class="hl sym">.</span>
			<span class="hl kwa">self</span> <span class="hl sym">==</span> partner ifTrue<span class="hl sym">: [</span>selfMet <span class="hl sym">:=</span> selfMet <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">].</span>
			creaturesMet <span class="hl sym">:=</span> creaturesMet <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">].</span>
	partner isNil<span class="hl sym">]</span>
			whileFalse<span class="hl sym">! !</span>

Object subclass<span class="hl sym">: #</span>ChameneosColour
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">'color '</span>
	classVariableNames<span class="hl sym">:</span> <span class="hl str">'Blue Red Yellow '</span>
	poolDictionaries<span class="hl sym">:</span> <span class="hl str">''</span>
	category<span class="hl sym">:</span> <span class="hl str">'chameleon'</span><span class="hl sym">!</span>

ChameneosColour class
	instanceVariableNames<span class="hl sym">:</span> <span class="hl str">''</span><span class="hl sym">!</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


<span class="hl sym">!</span>ChameneosColour class methodsFor<span class="hl sym">:</span> <span class="hl str">'accessing'</span><span class="hl sym">!</span>

blue
	<span class="hl sym">^</span>Blue<span class="hl sym">!</span>

blue<span class="hl sym">:</span> anObject
	Blue <span class="hl sym">:=</span> anObject<span class="hl sym">!</span>

red
	<span class="hl sym">^</span>Red<span class="hl sym">!</span>

red<span class="hl sym">:</span> anObject
	Red <span class="hl sym">:=</span> anObject<span class="hl sym">!</span>

yellow
	<span class="hl sym">^</span>Yellow<span class="hl sym">!</span>

yellow<span class="hl sym">:</span> anObject
	Yellow <span class="hl sym">:=</span> anObject<span class="hl sym">! !</span>

<span class="hl sym">!</span>ChameneosColour class methodsFor<span class="hl sym">:</span> <span class="hl str">'initialize-release'</span><span class="hl sym">!</span>

createBlue
	&quot;comment stating purpose of message&quot;

	<span class="hl sym">^</span><span class="hl kwa">super</span> new color<span class="hl sym">: #</span>blue<span class="hl sym">!</span>

createRed
	&quot;comment stating purpose of message&quot;

	<span class="hl sym">^</span><span class="hl kwa">super</span> new color<span class="hl sym">: #</span>red<span class="hl sym">!</span>

createYellow
	&quot;comment stating purpose of message&quot;

	<span class="hl sym">^</span><span class="hl kwa">super</span> new color<span class="hl sym">: #</span>yellow<span class="hl sym">!</span>

initialize
	&quot;<span class="hl kwa">self</span> initialize&quot;

	Red <span class="hl sym">:=</span> <span class="hl kwa">self</span> createRed<span class="hl sym">.</span>
	Blue <span class="hl sym">:=</span> <span class="hl kwa">self</span> createBlue<span class="hl sym">.</span>
	Yellow <span class="hl sym">:=</span> <span class="hl kwa">self</span> createYellow<span class="hl sym">! !</span>

<span class="hl sym">!</span>ChameneosColour class methodsFor<span class="hl sym">:</span> <span class="hl str">'printing'</span><span class="hl sym">!</span>

generateReportOfColoursOn<span class="hl sym">:</span> readOut
	<span class="hl sym">|</span> colours <span class="hl sym">|</span>
	colours <span class="hl sym">:=</span> Array
				with<span class="hl sym">:</span> Blue
				with<span class="hl sym">:</span> Red
				with<span class="hl sym">:</span> Yellow<span class="hl sym">.</span>
	colours do<span class="hl sym">:</span>
			<span class="hl sym">[:</span>aColour <span class="hl sym">|</span>
			colours do<span class="hl sym">:</span>
					<span class="hl sym">[:</span>anotherColour <span class="hl sym">|</span>
					aColour printOn<span class="hl sym">:</span> readOut<span class="hl sym">.</span>
					readOut nextPutAll<span class="hl sym">:</span> <span class="hl str">' + '</span><span class="hl sym">.</span>
					anotherColour printOn<span class="hl sym">:</span> readOut<span class="hl sym">.</span>
					readOut nextPutAll<span class="hl sym">:</span> <span class="hl str">' -&gt; '</span><span class="hl sym">.</span>
					<span class="hl sym">(</span>aColour complementaryColourFor<span class="hl sym">:</span> anotherColour<span class="hl sym">)</span> printOn<span class="hl sym">:</span> readOut<span class="hl sym">.</span>
					readOut nl<span class="hl sym">]].</span>
	<span class="hl sym">^</span>readOut<span class="hl sym">! !</span>

&quot;<span class="hl sym">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span> &quot;<span class="hl sym">!</span>


<span class="hl sym">!</span>ChameneosColour methodsFor<span class="hl sym">:</span> <span class="hl str">'as yet unclassified'</span><span class="hl sym">!</span>

complementaryColourFor<span class="hl sym">:</span> aChameneosColour
	&quot;determine the complementary colour defined as<span class="hl sym">...</span>&quot;

	<span class="hl kwa">self</span> <span class="hl sym">==</span> aChameneosColour ifTrue<span class="hl sym">: [^</span><span class="hl kwa">self</span><span class="hl sym">].</span>
	<span class="hl kwa">self</span> isBlue
		ifTrue<span class="hl sym">:</span>
			<span class="hl sym">[</span>aChameneosColour isRed
				ifTrue<span class="hl sym">: [^</span><span class="hl kwa">self</span> class yellow<span class="hl sym">]</span>
				ifFalse<span class="hl sym">: [^</span><span class="hl kwa">self</span> class red<span class="hl sym">]].</span>
	<span class="hl kwa">self</span> isRed
		ifTrue<span class="hl sym">:</span>
			<span class="hl sym">[</span>aChameneosColour isBlue
				ifTrue<span class="hl sym">: [^</span><span class="hl kwa">self</span> class yellow<span class="hl sym">]</span>
				ifFalse<span class="hl sym">: [^</span><span class="hl kwa">self</span> class blue<span class="hl sym">]].</span>
	aChameneosColour isBlue
		ifTrue<span class="hl sym">: [^</span><span class="hl kwa">self</span> class red<span class="hl sym">]</span>
		ifFalse<span class="hl sym">: [^</span><span class="hl kwa">self</span> class blue<span class="hl sym">]! !</span>

<span class="hl sym">!</span>ChameneosColour methodsFor<span class="hl sym">:</span> <span class="hl str">'testing'</span><span class="hl sym">!</span>

hasSameColorAs<span class="hl sym">:</span> aChameneos
	<span class="hl sym">^</span><span class="hl kwa">self</span> color <span class="hl sym">==</span> aChameneos color<span class="hl sym">!</span>

isBlue
	<span class="hl sym">^</span><span class="hl kwa">self</span> <span class="hl sym">==</span> <span class="hl kwa">self</span> class blue<span class="hl sym">!</span>

isRed
	<span class="hl sym">^</span><span class="hl kwa">self</span> <span class="hl sym">==</span> <span class="hl kwa">self</span> class red<span class="hl sym">!</span>

isYellow
	<span class="hl sym">^</span><span class="hl kwa">self</span> <span class="hl sym">==</span> <span class="hl kwa">self</span> class yellow<span class="hl sym">! !</span>

<span class="hl sym">!</span>ChameneosColour methodsFor<span class="hl sym">:</span> <span class="hl str">'accessing'</span><span class="hl sym">!</span>

color
	<span class="hl sym">^</span>color<span class="hl sym">!</span>

color<span class="hl sym">:</span> aColor
	color <span class="hl sym">:=</span> aColor<span class="hl sym">! !</span>

<span class="hl sym">!</span>ChameneosColour methodsFor<span class="hl sym">:</span> <span class="hl str">'printing'</span><span class="hl sym">!</span>

printOn<span class="hl sym">:</span> aStream
	aStream nextPutAll<span class="hl sym">:</span> <span class="hl kwa">self</span> color<span class="hl sym">! !</span>

ChameneosColour initialize<span class="hl sym">!</span>
