<span class="hl slc">' The Computer Language Shootout</span>
<span class="hl slc">' http://shootout.alioth.debian.org/</span>
<span class="hl slc">' contributed by Antoni Gual</span>
<span class="hl slc">'</span>
<span class="hl kwa">option explicit</span>
<span class="hl kwa">option</span> escape
#include <span class="hl str">&quot;crt.bi&quot;</span>
#define linelength <span class="hl num">60</span>
#define bufinc <span class="hl num">1024</span><span class="hl sym">*</span><span class="hl num">512</span>
<span class="hl kwa">dim</span> shared <span class="hl kwd">pairs</span><span class="hl sym">(</span><span class="hl num">14</span><span class="hl sym">)={</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;A&quot;</span><span class="hl sym">),</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;T&quot;</span><span class="hl sym">),</span>_
                      <span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;C&quot;</span><span class="hl sym">),</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;G&quot;</span><span class="hl sym">),</span>_
                      <span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;M&quot;</span><span class="hl sym">),</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;K&quot;</span><span class="hl sym">),</span>_
                      <span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;R&quot;</span><span class="hl sym">),</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;Y&quot;</span><span class="hl sym">),</span>_
                      <span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;K&quot;</span><span class="hl sym">),</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;M&quot;</span><span class="hl sym">),</span>_
                      <span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;V&quot;</span><span class="hl sym">),</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;B&quot;</span><span class="hl sym">),</span>_
                      <span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;H&quot;</span><span class="hl sym">),</span><span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;D&quot;</span><span class="hl sym">)}</span>

<span class="hl kwa">dim</span> shared <span class="hl kwd">compl</span><span class="hl sym">(</span><span class="hl num">128</span><span class="hl sym">)</span> <span class="hl kwa">as</span> ubyte
<span class="hl slc">'</span>
<span class="hl slc">'---------------------------------------------</span>
<span class="hl kwa">sub</span> dopairs
  <span class="hl kwa">dim</span> i
  <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">127</span><span class="hl sym">:</span><span class="hl kwd">compl</span><span class="hl sym">(</span>i<span class="hl sym">)=</span><span class="hl kwd">iif</span><span class="hl sym">(</span>i<span class="hl sym">&lt;</span><span class="hl num">96</span><span class="hl sym">,</span>i<span class="hl sym">,</span>i<span class="hl sym">-</span><span class="hl num">32</span><span class="hl sym">):</span><span class="hl kwa">next</span>
  <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">0</span> <span class="hl kwa">to</span> <span class="hl num">12</span> step <span class="hl num">2</span>
   <span class="hl kwd">compl</span><span class="hl sym">(</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">))      =</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
   <span class="hl kwd">compl</span><span class="hl sym">(</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">)+</span><span class="hl num">32</span><span class="hl sym">)   =</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
   <span class="hl kwd">compl</span><span class="hl sym">(</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">))    =</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">)</span>
   <span class="hl kwd">compl</span><span class="hl sym">(</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)+</span><span class="hl num">32</span><span class="hl sym">) =</span><span class="hl kwd">pairs</span><span class="hl sym">(</span>i<span class="hl sym">)</span>
  <span class="hl kwa">next</span>
<span class="hl kwa">end sub</span>
<span class="hl slc">'</span>
<span class="hl slc">'----------------------------------------------</span>
<span class="hl kwa">sub</span> <span class="hl kwd">doreverse</span> <span class="hl sym">(</span> b <span class="hl kwa">as</span> zstring ptr<span class="hl sym">,</span><span class="hl kwa">byval</span> j<span class="hl sym">)</span>
   <span class="hl kwa">dim</span> i<span class="hl sym">,</span>t <span class="hl kwa">as</span> ubyte
   <span class="hl kwa">dim as</span> ubyte ptr st<span class="hl sym">,</span>en<span class="hl sym">,</span>pc
   <span class="hl kwa">if</span> j<span class="hl sym">=</span><span class="hl num">0</span> <span class="hl kwa">then exit sub</span>
    st<span class="hl sym">=</span>b
    en<span class="hl sym">=</span>b<span class="hl sym">+</span>j<span class="hl sym">-</span><span class="hl num">1</span>
    <span class="hl kwa">while</span> st<span class="hl sym">&lt;=</span>en
    t<span class="hl sym">=</span><span class="hl kwd">compl</span><span class="hl sym">(*</span>st<span class="hl sym">)</span>
    <span class="hl sym">*</span>st<span class="hl sym">=</span><span class="hl kwd">compl</span><span class="hl sym">(*</span>en<span class="hl sym">)</span>
    <span class="hl sym">*</span>en<span class="hl sym">=</span>t
    st<span class="hl sym">+=</span><span class="hl num">1</span>
    en<span class="hl sym">-=</span><span class="hl num">1</span>
   <span class="hl kwa">wend</span>
<span class="hl kwa">end sub</span>
<span class="hl slc">'</span>
<span class="hl slc">'----------------------------------------------</span>
<span class="hl kwa">sub</span> <span class="hl kwd">doprint</span> <span class="hl sym">(</span><span class="hl kwa">byval</span> b <span class="hl kwa">as</span> zstring ptr<span class="hl sym">,</span><span class="hl kwa">byval</span> l<span class="hl sym">)</span>
  <span class="hl kwa">dim</span>  c <span class="hl kwa">as</span> ubyte<span class="hl sym">=</span><span class="hl num">0</span>
  <span class="hl kwa">dim</span> m
  <span class="hl kwa">dim</span> b1 <span class="hl kwa">as</span> ubyte ptr
  b1<span class="hl sym">=</span>b
  <span class="hl kwa">while</span> l
   m<span class="hl sym">=</span><span class="hl kwd">iif</span> <span class="hl sym">(</span>l<span class="hl sym">&lt;</span>linelength<span class="hl sym">,</span>l<span class="hl sym">,</span>linelength<span class="hl sym">)</span>
   b1<span class="hl sym">+=</span>m
   swap c<span class="hl sym">, *</span>b1
   <span class="hl kwd">puts</span><span class="hl sym">(</span>b<span class="hl sym">)</span>
   swap c<span class="hl sym">, *</span>b1
   b<span class="hl sym">=</span>b1
   l<span class="hl sym">-=</span>m
  <span class="hl kwa">wend</span>
<span class="hl kwa">end sub</span>
<span class="hl slc">'</span>
<span class="hl slc">'-----------------------------------------------</span>
<span class="hl kwa">dim  as</span> zstring ptr b<span class="hl sym">,</span>a
<span class="hl kwa">dim</span> lall<span class="hl sym">,</span>lb<span class="hl sym">,</span>t
lall<span class="hl sym">=</span>bufinc
b<span class="hl sym">=</span><span class="hl kwd">allocate</span><span class="hl sym">(</span>lall<span class="hl sym">*</span><span class="hl kwd">sizeof</span><span class="hl sym">(</span>ubyte<span class="hl sym">))</span>
dopairs
open cons <span class="hl kwa">for</span> input <span class="hl kwa">as</span> # <span class="hl num">1</span>
a<span class="hl sym">=</span>b
b<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]=</span><span class="hl num">0</span>
<span class="hl kwa">do</span>
 <span class="hl kwa">if</span> a<span class="hl sym">-</span>b<span class="hl sym">+</span><span class="hl num">128</span> <span class="hl sym">&gt;</span>lall <span class="hl kwa">then</span>
    t<span class="hl sym">=</span>a<span class="hl sym">-</span>b
    lall<span class="hl sym">+=</span>bufinc
    b<span class="hl sym">=</span> <span class="hl kwd">reallocate</span><span class="hl sym">(</span>b<span class="hl sym">,</span>lall<span class="hl sym">*</span><span class="hl kwd">sizeof</span><span class="hl sym">(</span>ubyte<span class="hl sym">))</span>
    a<span class="hl sym">=</span>b<span class="hl sym">+</span>t
 <span class="hl kwa">end if</span>
 line input #<span class="hl num">1</span><span class="hl sym">, *</span>a
 <span class="hl kwa">if</span> a<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]=</span> <span class="hl kwd">asc</span><span class="hl sym">(</span><span class="hl str">&quot;&gt;&quot;</span><span class="hl sym">)</span> <span class="hl kwa">then</span>
    doreverse b<span class="hl sym">,</span>a<span class="hl sym">-</span>b
    doprint b<span class="hl sym">,</span>a<span class="hl sym">-</span>b
    puts a
    a<span class="hl sym">=</span>b
    b<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]=</span><span class="hl num">0</span>
    <span class="hl kwa">continue do</span>
 <span class="hl kwa">end if</span>
 a<span class="hl sym">+=</span><span class="hl kwd">len</span><span class="hl sym">(*</span>a<span class="hl sym">)</span>
<span class="hl kwa">loop until</span> <span class="hl kwd">eof</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>
doreverse b <span class="hl sym">,</span>a<span class="hl sym">-</span>b
doprint b <span class="hl sym">,</span>a<span class="hl sym">-</span>b
close
deallocate b
<span class="hl kwa">end</span>
