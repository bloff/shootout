<span class="slc">#!/usr/bin/tclsh</span>
<span class="slc"># $Id: ackermann-tcl.code,v 1.1 2005-10-29 16:17:16 igouy-guest Exp $</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Updated based on ideas from Stefan Finzel</span>
<span class="slc">#</span>
<span class="slc"># Further optimized by Mark Butler.</span>
<span class="slc">#</span>
<span class="slc"># vim: set filetype=tcl:</span>

<span class="kwa">proc</span> ack <span class="sym">{</span>n m<span class="sym">} {</span>
    <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$m</span><span class="sym">} {</span>
	<span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$n</span><span class="sym">} {</span>
	    <span class="slc">#</span>
	    <span class="slc"># incr is quicker than an equivalent expr, as long as</span>
	    <span class="slc"># you don't mind altering the variable.</span>
	    <span class="kwa">return</span> <span class="sym">[</span>ack <span class="sym">[</span>ack <span class="sym">[</span><span class="kwa">incr</span> n <span class="sym">-</span><span class="num">1</span><span class="sym">]</span> <span class="kwb">$m</span><span class="sym">] [</span><span class="kwa">incr</span> m <span class="sym">-</span><span class="num">1</span><span class="sym">]]</span>
	<span class="sym">}</span> else <span class="sym">{</span>
	    <span class="kwa">return</span> <span class="sym">[</span>ack <span class="num">1</span> <span class="sym">[</span><span class="kwa">incr</span> m <span class="sym">-</span><span class="num">1</span><span class="sym">]]</span>
	<span class="sym">}</span>
    <span class="sym">}</span> else <span class="sym">{</span>
	<span class="kwa">return</span> <span class="sym">[</span><span class="kwa">incr</span> n<span class="sym">]</span>
    <span class="sym">}</span>
<span class="sym">}</span>

<span class="kwa">interp</span> recursionlimit <span class="sym">{}</span> <span class="num">20000</span>
<span class="kwa">set</span> N <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]</span>
<span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$N</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">} {</span><span class="kwa">set</span> N <span class="num">1</span><span class="sym">}</span>
<span class="kwa">puts</span> <span class="str">&quot;Ack(3,$N): [ack $N 3]&quot;</span>
