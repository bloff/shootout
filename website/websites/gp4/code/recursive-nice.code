<span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com">*/</span>

<span class="kwa">import</span> Include<span class="sym">;</span>

<span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){</span>
   <span class="kwa">let</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
   println<span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span> <span class="sym">+</span> n <span class="sym">+</span> <span class="str">&quot;): &quot;</span> <span class="sym">+</span> ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span>n<span class="sym">));</span>

   <span class="kwb">int</span> m<span class="sym">;</span>
   m <span class="sym">=</span> n<span class="sym">*</span><span class="num">4</span><span class="sym">;</span> println<span class="sym">(</span><span class="str">&quot;Fib(&quot;</span> <span class="sym">+</span> m <span class="sym">+</span> <span class="str">&quot;): &quot;</span> <span class="sym">+</span> fib<span class="sym">(</span>m<span class="sym">));</span>
   m <span class="sym">=</span> n<span class="sym">+</span><span class="num">2</span><span class="sym">;</span> println<span class="sym">(</span><span class="str">&quot;Tak(&quot;</span><span class="sym">+</span>m<span class="sym">*</span><span class="num">3</span><span class="sym">+</span><span class="str">&quot;,&quot;</span><span class="sym">+</span>m<span class="sym">*</span><span class="num">2</span><span class="sym">+</span><span class="str">&quot;,&quot;</span><span class="sym">+</span>m<span class="sym">+</span><span class="str">&quot;): &quot;</span><span class="sym">+</span> tak<span class="sym">(</span>m<span class="sym">*</span><span class="num">3</span><span class="sym">,</span>m<span class="sym">*</span><span class="num">2</span><span class="sym">,</span>m<span class="sym">));</span>

   m <span class="sym">=</span> n<span class="sym">*</span><span class="num">5</span><span class="sym">;</span> println<span class="sym">(</span><span class="str">&quot;Fib(&quot;</span> <span class="sym">+</span> m <span class="sym">+</span> <span class="str">&quot;): &quot;</span> <span class="sym">+</span> fib<span class="sym">(</span>m<span class="sym">*</span><span class="num">1.0</span><span class="sym">).</span>toStringWith<span class="sym">(</span><span class="num">1</span><span class="sym">));</span>
   m <span class="sym">=</span> n<span class="sym">+</span><span class="num">2</span><span class="sym">;</span> println<span class="sym">(</span><span class="str">&quot;Tak(&quot;</span><span class="sym">+</span>m<span class="sym">*</span><span class="num">3</span><span class="sym">+</span><span class="str">&quot;,&quot;</span><span class="sym">+</span>m<span class="sym">*</span><span class="num">2</span><span class="sym">+</span><span class="str">&quot;,&quot;</span><span class="sym">+</span>m<span class="sym">+</span><span class="str">&quot;): &quot;</span><span class="sym">+</span> tak<span class="sym">(</span>m<span class="sym">*</span><span class="num">3.0</span><span class="sym">,</span>m<span class="sym">*</span><span class="num">2.0</span><span class="sym">,</span>m<span class="sym">*</span><span class="num">1.0</span><span class="sym">));</span>
<span class="sym">}</span>

<span class="kwb">int</span> ack<span class="sym">(</span><span class="kwb">int</span> m<span class="sym">,</span><span class="kwb">int</span> n<span class="sym">) {</span>
   <span class="kwa">if</span> <span class="sym">(</span>m <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span> n <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
   <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span> ack<span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);</span>
   <span class="kwa">return</span> ack<span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> ack<span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">));</span>
<span class="sym">}</span>

<span class="kwb">int</span> fib<span class="sym">(</span><span class="kwb">int</span> n<span class="sym">) =</span> n <span class="sym">&lt;</span> <span class="num">2</span> ? <span class="num">1</span> <span class="sym">:</span> fib<span class="sym">(</span>n<span class="sym">-</span><span class="num">2</span><span class="sym">) +</span> fib<span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">);</span>

<span class="kwb">int</span> tak <span class="sym">(</span><span class="kwb">int</span> x<span class="sym">,</span> <span class="kwb">int</span> y<span class="sym">,</span> <span class="kwb">int</span> z<span class="sym">) =</span>
   y <span class="sym">&gt;=</span> x ? z <span class="sym">:</span> tak<span class="sym">(</span> tak<span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> tak<span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> tak<span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">) );</span>

<span class="kwb">double</span> fib<span class="sym">(</span><span class="kwb">double</span> n<span class="sym">) =</span> n <span class="sym">&lt;</span> <span class="num">2</span> ? <span class="num">1</span> <span class="sym">:</span> fib<span class="sym">(</span>n<span class="sym">-</span><span class="num">2</span><span class="sym">) +</span> fib<span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">);</span>

<span class="kwb">double</span> tak <span class="sym">(</span><span class="kwb">double</span> x<span class="sym">,</span> <span class="kwb">double</span> y<span class="sym">,</span> <span class="kwb">double</span> z<span class="sym">) =</span>
   y <span class="sym">&gt;=</span> x ? z <span class="sym">:</span> tak<span class="sym">(</span> tak<span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> tak<span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> tak<span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">) );</span>
