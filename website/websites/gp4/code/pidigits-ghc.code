<span class="hl com">{-# OPTIONS -O2 -optc-O3 #-}</span>
<span class="hl slc">--</span>
<span class="hl slc">-- The Great Computer Language Shootout</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- by Don Stewart, Einar Karttunen, Branimir Maksimovic and Bertram Felgenhauer</span>
<span class="hl slc">--</span>

<span class="hl kwa">import</span> System

<span class="hl kwa">data</span> F <span class="hl sym">=</span> F <span class="hl sym">!</span>Integer <span class="hl sym">!</span>Integer <span class="hl sym">!</span>Integer <span class="hl sym">!</span>Integer

main <span class="hl sym">=</span> loop <span class="hl num">10 0</span> . flip take <span class="hl sym">(</span>str <span class="hl sym">(</span>F <span class="hl num">1 0 0 1</span><span class="hl sym">)</span> ns<span class="hl sym">)</span> . read . head <span class="hl sym">=&lt;&lt;</span> getArgs

ns <span class="hl sym">= [</span> F k <span class="hl sym">(</span><span class="hl num">4</span><span class="hl sym">*</span>k<span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">)</span> <span class="hl num">0</span> <span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span>k<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) |</span> k <span class="hl sym">&lt;- [</span><span class="hl num">1</span>..<span class="hl sym">] ]</span>

loop n s <span class="hl sym">[]     =</span> putStrLn $ replicate n <span class="hl str">' '</span> <span class="hl sym">++</span> <span class="hl str">&quot;\t:&quot;</span> <span class="hl sym">++</span> show s
loop <span class="hl num">0</span> s xs     <span class="hl sym">=</span> putStrLn <span class="hl sym">(</span><span class="hl str">&quot;\t:&quot;</span><span class="hl sym">++</span>show s<span class="hl sym">) &gt;&gt;</span> loop <span class="hl num">10</span> s xs
loop n s <span class="hl sym">(</span>x<span class="hl sym">:</span>xs<span class="hl sym">) =</span> putStr <span class="hl sym">(</span>show x<span class="hl sym">)          &gt;&gt;</span> loop <span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">) (</span>s<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> xs

flr  x           <span class="hl sym">(</span>F q r s t<span class="hl sym">) = (</span>q<span class="hl sym">*</span>x <span class="hl sym">+</span> r<span class="hl sym">)</span> `div` <span class="hl sym">(</span>s<span class="hl sym">*</span>x <span class="hl sym">+</span> t<span class="hl sym">)</span>
comp1 <span class="hl sym">(</span>F q r s t<span class="hl sym">) (</span>F u v w x<span class="hl sym">) =</span> F <span class="hl sym">(</span>q<span class="hl sym">*</span>u<span class="hl sym">+</span>r<span class="hl sym">*</span>w<span class="hl sym">) (</span>q<span class="hl sym">*</span>v<span class="hl sym">+</span>r<span class="hl sym">*</span>x<span class="hl sym">) (</span>t<span class="hl sym">*</span>w<span class="hl sym">) (</span>t<span class="hl sym">*</span>x<span class="hl sym">)</span>
comp2 <span class="hl sym">(</span>F q r s t<span class="hl sym">) (</span>F u v w x<span class="hl sym">) =</span> F <span class="hl sym">(</span>q<span class="hl sym">*</span>u<span class="hl sym">) (</span>q<span class="hl sym">*</span>v<span class="hl sym">+</span>r<span class="hl sym">*</span>x<span class="hl sym">) (</span>s<span class="hl sym">*</span>u<span class="hl sym">) (</span>s<span class="hl sym">*</span>v<span class="hl sym">+</span>t<span class="hl sym">*</span>x<span class="hl sym">)</span>

str z <span class="hl sym">(</span>x<span class="hl sym">:</span>xs<span class="hl sym">) |</span> y <span class="hl sym">==</span> flr <span class="hl num">4</span> z <span class="hl sym">=</span> y <span class="hl sym">:</span> str <span class="hl sym">(</span>comp1 <span class="hl sym">(</span>F <span class="hl num">10</span> <span class="hl sym">(-</span><span class="hl num">10</span><span class="hl sym">*</span>y<span class="hl sym">)</span> <span class="hl num">0 1</span><span class="hl sym">)</span> z<span class="hl sym">) (</span>x<span class="hl sym">:</span>xs<span class="hl sym">)</span>
             <span class="hl sym">|</span> otherwise    <span class="hl sym">=</span>     str <span class="hl sym">(</span>comp2 z x<span class="hl sym">)</span> xs     <span class="hl kwa">where</span> y <span class="hl sym">=</span> flr <span class="hl num">3</span> z
