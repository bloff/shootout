<span class="hl slc">;; The Computer Language Benchmarks Game</span>
<span class="hl slc">;;  http://shootout.alioth.debian.org/</span>
<span class="hl slc">;; contributed by Graham Fawcett</span>


<span class="hl sym">(</span>declare
 <span class="hl sym">(</span>uses srfi-<span class="hl num">1</span> srfi-<span class="hl num">18</span><span class="hl sym">)</span>
 <span class="hl sym">(</span>no-procedure-checks<span class="hl sym">)</span>
 <span class="hl sym">(</span>fixnum-arithmetic<span class="hl sym">))</span>

<span class="hl sym">(</span>define N <span class="hl sym">(</span>string-<span class="hl sym">&gt;</span>number <span class="hl sym">(</span><span class="hl kwa">car</span> <span class="hl sym">(</span><span class="hl kwa">command</span>-<span class="hl kwa">line</span>-arguments<span class="hl sym">))))</span>

<span class="hl sym">(</span>define thread-act
  <span class="hl sym">(</span><span class="hl kwa">lambda</span> <span class="hl sym">()</span>
    <span class="hl sym">(</span>let loop <span class="hl sym">((</span>mbs <span class="hl sym">(</span>thread-specific <span class="hl sym">(</span>current-thread<span class="hl sym">))))</span>
      <span class="hl sym">(</span>let <span class="hl sym">((</span>v <span class="hl sym">(</span>mailbox-receive<span class="hl sym">! (</span><span class="hl kwa">cdr</span> mbs<span class="hl sym">))))</span>
        <span class="hl sym">(</span><span class="hl kwa">cond</span> <span class="hl sym">((&lt;</span> v N<span class="hl sym">)</span>
               <span class="hl sym">(</span>mailbox-send<span class="hl sym">! (</span><span class="hl kwa">car</span> mbs<span class="hl sym">) (</span>add1 v<span class="hl sym">))</span>
               <span class="hl sym">(</span>loop mbs<span class="hl sym">))</span>
              <span class="hl sym">(</span>#t <span class="hl sym">(</span><span class="hl kwa">print</span> <span class="hl sym">(</span>thread-name <span class="hl sym">(</span>current-thread<span class="hl sym">)))</span>
                  <span class="hl sym">(</span><span class="hl kwa">exit</span> <span class="hl num">0</span><span class="hl sym">)))))))</span>

<span class="hl sym">(</span>let<span class="hl sym">* ((</span>first-mb <span class="hl sym">(</span>make-mailbox <span class="hl str">&quot;one&quot;</span><span class="hl sym">))</span>
       <span class="hl sym">(</span>threads
        <span class="hl sym">(</span>let loop <span class="hl sym">((</span>n <span class="hl num">503</span><span class="hl sym">) (</span>acc <span class="hl sym">'()) (</span>prev-mb first-mb<span class="hl sym">))</span>
          <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(</span>zero? n<span class="hl sym">)</span>
              <span class="hl sym">(</span>begin <span class="hl sym">(</span><span class="hl kwa">set</span>-<span class="hl kwa">cdr</span><span class="hl sym">! (</span>thread-specific <span class="hl sym">(</span><span class="hl kwa">car</span> acc<span class="hl sym">))</span> first-mb<span class="hl sym">)</span>
                     acc<span class="hl sym">)</span>
              <span class="hl sym">(</span>let <span class="hl sym">((</span>t <span class="hl sym">(</span>make-thread thread-act <span class="hl sym">(</span>-<span class="hl sym">&gt;</span>string n<span class="hl sym">)))</span>
                    <span class="hl sym">(</span>new-mb <span class="hl sym">(</span>make-mailbox <span class="hl sym">(</span>-<span class="hl sym">&gt;</span>string n<span class="hl sym">))))</span>
                <span class="hl sym">(</span>thread-specific-<span class="hl kwa">set</span><span class="hl sym">!</span> t <span class="hl sym">(</span><span class="hl kwa">cons</span> prev-mb new-mb<span class="hl sym">))</span>
                <span class="hl sym">(</span>loop <span class="hl sym">(</span>sub1 n<span class="hl sym">) (</span><span class="hl kwa">cons</span> t acc<span class="hl sym">)</span> new-mb<span class="hl sym">))))))</span>
  <span class="hl sym">(</span>for-each thread-start<span class="hl sym">!</span> threads<span class="hl sym">)</span>
  <span class="hl sym">(</span>mailbox-send<span class="hl sym">!</span> first-mb <span class="hl num">0</span><span class="hl sym">)</span>
  <span class="hl sym">(</span>thread-join<span class="hl sym">! (</span><span class="hl kwa">car</span> threads<span class="hl sym">)))</span>


