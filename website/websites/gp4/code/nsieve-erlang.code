<span class="hl slc">%  The Great Computer Language Shootout</span>
<span class="hl slc">%   http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">%   contributed by Mark Scandariato</span>
<span class="hl slc">%</span>
<span class="hl slc">%   erl -noshell -noinput -run nsieve main 9</span>

<span class="hl sym">-</span><span class="hl kwd">module</span><span class="hl sym">(</span>nsieve<span class="hl sym">)</span>.
<span class="hl sym">-</span><span class="hl kwd">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">])</span>.

<span class="hl kwd">main</span><span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
    N <span class="hl sym">=</span> <span class="hl kwb">list_to_integer</span><span class="hl sym">(</span>Arg<span class="hl sym">),</span>
    <span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">),</span>
    erlang<span class="hl sym">:</span><span class="hl kwb">halt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>

<span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">)</span> <span class="hl kwa">when</span> N <span class="hl sym">&gt;=</span> <span class="hl num">2</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">),</span> <span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">),</span> <span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">)</span>.


<span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">) -&gt;</span>
    M <span class="hl sym">= (</span><span class="hl num">1</span> bsl N<span class="hl sym">)*</span><span class="hl num">10000</span><span class="hl sym">,</span>
    <span class="hl kwd">clear</span><span class="hl sym">(</span>M<span class="hl sym">),</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to ~8.10B ~8.10B~n&quot;</span><span class="hl sym">, [</span>M<span class="hl sym">,</span> <span class="hl kwd">ns</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span> M<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)])</span>.


<span class="hl kwd">ns</span><span class="hl sym">(</span>I<span class="hl sym">,</span> M<span class="hl sym">,</span> C<span class="hl sym">)</span> <span class="hl kwa">when</span> I <span class="hl sym">&gt;</span> M <span class="hl sym">-&gt;</span> C<span class="hl sym">;</span>
<span class="hl kwd">ns</span><span class="hl sym">(</span>I<span class="hl sym">,</span> M<span class="hl sym">,</span> C<span class="hl sym">) -&gt;</span>
    <span class="hl kwa">case</span> <span class="hl kwb">get</span><span class="hl sym">(</span>I<span class="hl sym">)</span> <span class="hl kwa">of</span>
        true  <span class="hl sym">-&gt;</span> <span class="hl kwd">mark</span><span class="hl sym">(</span>I<span class="hl sym">,</span> M<span class="hl sym">,</span> I<span class="hl sym">+</span>I<span class="hl sym">),</span> <span class="hl kwd">ns</span><span class="hl sym">(</span>I<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> M<span class="hl sym">,</span> C<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span>
        false <span class="hl sym">-&gt;</span> <span class="hl kwd">ns</span><span class="hl sym">(</span>I<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> M<span class="hl sym">,</span> C<span class="hl sym">)</span>
    <span class="hl kwa">end</span>.


<span class="hl kwd">mark</span><span class="hl sym">(</span>_<span class="hl sym">,</span> M<span class="hl sym">,</span> K<span class="hl sym">)</span> <span class="hl kwa">when</span> K <span class="hl sym">&gt;</span> M <span class="hl sym">-&gt;</span> ok<span class="hl sym">;</span>
<span class="hl kwd">mark</span><span class="hl sym">(</span>I<span class="hl sym">,</span> M<span class="hl sym">,</span> K<span class="hl sym">) -&gt;</span> <span class="hl kwb">put</span><span class="hl sym">(</span>K<span class="hl sym">,</span> false<span class="hl sym">),</span> <span class="hl kwd">mark</span><span class="hl sym">(</span>I<span class="hl sym">,</span> M<span class="hl sym">,</span> K<span class="hl sym">+</span>I<span class="hl sym">)</span>.


<span class="hl kwd">clear</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">) -&gt;</span> ok<span class="hl sym">;</span>
<span class="hl kwd">clear</span><span class="hl sym">(</span>M<span class="hl sym">) -&gt;</span> <span class="hl kwb">put</span><span class="hl sym">(</span>M<span class="hl sym">,</span> true<span class="hl sym">),</span> <span class="hl kwd">clear</span><span class="hl sym">(</span>M<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>.

<span class="hl slc">% vim: set ts=4 ft=erlang</span>
