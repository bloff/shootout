<span class="hl com">/**</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * Based on the CAL Open Quark version</span>
<span class="hl com"> * Contributed by Magnus Byne.</span>
<span class="hl com"> */</span>
module Sumcol<span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Prelude using
    typeConstructor <span class="hl sym">=</span> <span class="hl kwc">String</span><span class="hl sym">,</span> <span class="hl kwc">Boolean</span><span class="hl sym">,</span> Int<span class="hl sym">;</span>
    function <span class="hl sym">=</span> eager<span class="hl sym">,</span> stringToInt<span class="hl sym">,</span> add<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Debug using
    function <span class="hl sym">=</span> show<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span><span class="hl kwc">String</span> using
    function <span class="hl sym">=</span> length<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span><span class="hl kwc">Collections</span><span class="hl sym">.</span><span class="hl kwc">List</span> using
    function <span class="hl sym">=</span> foldLeft1Strict<span class="hl sym">,</span> map<span class="hl sym">,</span> head<span class="hl sym">;</span>
    <span class="hl sym">;</span>


data foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;java.io.BufferedReader&quot;</span> <span class="hl kwa">private</span> JBufferedReader<span class="hl sym">;</span>

data foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;java.io.InputStream&quot;</span> <span class="hl kwa">private</span> JInputStream<span class="hl sym">;</span>

data foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;java.io.InputStreamReader&quot;</span>
    <span class="hl kwa">private</span> JInputStreamReader<span class="hl sym">;</span>

data foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;java.io.Reader&quot;</span> <span class="hl kwa">private</span> JReader<span class="hl sym">;</span>

data foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;java.io.PrintStream&quot;</span> <span class="hl kwa">private</span> JPrintStream<span class="hl sym">;</span>

data foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;java.io.FileReader&quot;</span> <span class="hl kwa">private</span> JFileReader<span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;constructor&quot;</span>
    <span class="hl kwa">private</span> createBufferedReader <span class="hl sym">::</span> JReader <span class="hl sym">-&gt;</span> JBufferedReader<span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;constructor&quot;</span>
    <span class="hl kwa">private</span> createInputStreamReaderStream <span class="hl sym">::</span> JInputStream <span class="hl sym">-&gt;</span> JInputStreamReader<span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;method readLine&quot;</span>
    <span class="hl kwa">private</span> readLine <span class="hl sym">::</span> JBufferedReader <span class="hl sym">-&gt;</span> <span class="hl kwc">String</span><span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;static field java.lang.System.out&quot;</span>
    <span class="hl kwa">private</span> stdout <span class="hl sym">::</span> JPrintStream<span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;static field java.lang.System.in&quot;</span>
    <span class="hl kwa">private</span> stdin <span class="hl sym">::</span> JInputStream<span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;isNull&quot;</span> <span class="hl kwa">private</span> isNull <span class="hl sym">::</span> <span class="hl kwc">String</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Boolean</span><span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;method println&quot;</span>
    <span class="hl kwa">private</span> printLn <span class="hl sym">::</span> JPrintStream <span class="hl sym">-&gt;</span> <span class="hl kwc">String</span> <span class="hl sym">-&gt; ();</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;cast&quot;</span>
    jInputStreamReaderToJReader <span class="hl sym">::</span> JInputStreamReader <span class="hl sym">-&gt;</span> JReader<span class="hl sym">;</span>

main <span class="hl sym">:: [</span><span class="hl kwc">String</span><span class="hl sym">] -&gt; ();</span>
<span class="hl kwa">public</span> main args <span class="hl sym">=</span>
    let
        bufferReader <span class="hl sym">=</span>
            eager
            $ createBufferedReader
                <span class="hl sym">(</span>jInputStreamReaderToJReader
                    <span class="hl sym">(</span>createInputStreamReaderStream stdin<span class="hl sym">)</span>
                <span class="hl sym">)</span>
            <span class="hl sym">;</span>

        loop <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>
        loop <span class="hl sym">!</span>sum <span class="hl sym">=</span>
            let
                line <span class="hl sym">=</span> eager $ readLine bufferReader<span class="hl sym">;</span>
            in
                <span class="hl kwa">if</span> isNull line then
                    sum
                <span class="hl kwa">else</span>
                    <span class="hl kwd">loop</span> <span class="hl sym">(</span>sum <span class="hl sym">+</span> stringToInt line<span class="hl sym">)</span>
            <span class="hl sym">;</span>
    in
        printLn <span class="hl kwd">stdout</span> <span class="hl sym">(</span><span class="hl kwd">show</span> <span class="hl sym">(</span>loop <span class="hl num">0</span><span class="hl sym">))</span>
    <span class="hl sym">;</span>

