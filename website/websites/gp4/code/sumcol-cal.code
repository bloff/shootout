<span class="hl com">/**</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * Based on the CAL Open Quark version</span>
<span class="hl com"> * Contributed by Joseph Wong.</span>
<span class="hl com"> */</span>
<span class="hl kwa">module</span> Sumcol<span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Prelude <span class="hl kwa">using</span>
    <span class="hl kwa">typeConstructor</span> <span class="hl sym">=</span> Byte<span class="hl sym">,</span> Int<span class="hl sym">,</span> String<span class="hl sym">;</span>
    <span class="hl kwa">function</span> <span class="hl sym">=</span> eager<span class="hl sym">,</span> intToString<span class="hl sym">,</span> seq<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>IO<span class="hl sym">.</span>Console <span class="hl kwa">using</span>
    <span class="hl kwa">function</span> <span class="hl sym">=</span> printLine<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Char<span class="hl sym">;</span>

main <span class="hl sym">:: [</span>String<span class="hl sym">] -&gt; ();</span>
<span class="hl kwa">public</span> main args <span class="hl sym">=</span>
    <span class="hl kwa">let</span>
        byteString <span class="hl sym">::</span> ByteString<span class="hl sym">;</span>
        byteString <span class="hl sym">=</span> eager $ makeByteString <span class="hl num">128</span><span class="hl sym">;</span> <span class="hl slc">// max line length</span>

        readBufferLength <span class="hl sym">::</span> Int<span class="hl sym">;</span>
        readBufferLength <span class="hl sym">=</span> <span class="hl num">1024</span><span class="hl sym">;</span>

        readBuffer <span class="hl sym">::</span> ByteString<span class="hl sym">;</span>
        readBuffer <span class="hl sym">=</span> eager $ makeByteString readBufferLength<span class="hl sym">;</span>

        inputStream <span class="hl sym">::</span> JBufferedInputStream<span class="hl sym">;</span>
        inputStream <span class="hl sym">=</span> eager $ makeBufferedInputStream stdin<span class="hl sym">;</span>

        loop <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>
        loop <span class="hl sym">!</span>sum <span class="hl sym">!</span>pos <span class="hl sym">=</span>
            <span class="hl kwa">let</span>
                newPos <span class="hl sym">::</span> Int<span class="hl sym">;</span>
                newPos <span class="hl sym">=</span> eager $ readLineIntoByteString inputStream readBuffer readBufferLength pos byteString<span class="hl sym">;</span>
            <span class="hl kwa">in</span>
                newPos
                <span class="hl sym">`</span>seq<span class="hl sym">`</span>
                <span class="hl sym">(</span>
                    <span class="hl kwa">if</span> <span class="hl sym">(</span>eager $ subscriptByteString byteString <span class="hl num">0</span><span class="hl sym">) ==</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
                        sum
                    <span class="hl kwa">else</span>
                        loop <span class="hl sym">(</span>sum <span class="hl sym">+</span> lineToInt byteString<span class="hl sym">)</span> newPos
                <span class="hl sym">)</span>
            <span class="hl sym">;</span>
    <span class="hl kwa">in</span>
        fillBuffer inputStream readBuffer <span class="hl num">0</span> readBufferLength
        <span class="hl sym">`</span>seq<span class="hl sym">`</span>
        printLine <span class="hl sym">(</span>intToString <span class="hl sym">(</span>loop <span class="hl num">0 0</span><span class="hl sym">))</span>
    <span class="hl sym">;</span>

lineToInt <span class="hl sym">::</span> ByteString <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>
lineToInt <span class="hl sym">!</span>line <span class="hl sym">=</span>
    <span class="hl kwa">let</span>
        addLoop <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>
        addLoop <span class="hl sym">!</span>i <span class="hl sym">!</span>sum <span class="hl sym">=</span>
            <span class="hl kwa">let</span>
                c <span class="hl sym">::</span> Byte<span class="hl sym">;</span>
                c <span class="hl sym">=</span> eager $ subscriptByteString line i<span class="hl sym">;</span>
            <span class="hl kwa">in</span>
                <span class="hl kwa">if</span> c <span class="hl sym">!=</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
                    addLoop <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) (</span>sum<span class="hl sym">*</span><span class="hl num">10</span> <span class="hl sym">+ (</span>Prelude<span class="hl sym">.</span>toInt c<span class="hl sym">) - (</span>Char<span class="hl sym">.</span>toInt <span class="hl str">'0'</span><span class="hl sym">))</span>
                <span class="hl kwa">else</span>
                    sum<span class="hl sym">;</span>
    <span class="hl kwa">in</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span>Prelude<span class="hl sym">.</span>toInt <span class="hl sym">(</span>eager $ subscriptByteString line <span class="hl num">0</span><span class="hl sym">)) == (</span>Char<span class="hl sym">.</span>toInt <span class="hl str">'-'</span><span class="hl sym">)</span> <span class="hl kwa">then</span>
            <span class="hl sym">-(</span>addLoop <span class="hl num">1 0</span><span class="hl sym">)</span>
        <span class="hl kwa">else</span>
            addLoop <span class="hl num">0 0</span>
    <span class="hl sym">;</span>

<span class="hl com">/** Custom string implementation based on 8-bit char buffer. */</span>
<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;byte[]&quot;</span> ByteString<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;updateArray&quot;</span>
    setCharAtByteString <span class="hl sym">::</span> ByteString <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Byte <span class="hl sym">-&gt;</span> Byte<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;subscriptArray&quot;</span>
    subscriptByteString <span class="hl sym">::</span> ByteString <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Byte<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;newArray&quot;</span>
    makeByteString <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> ByteString<span class="hl sym">;</span>

fillBuffer <span class="hl sym">::</span> JBufferedInputStream <span class="hl sym">-&gt;</span> ByteString <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt; ();</span>
fillBuffer <span class="hl sym">!</span>stream <span class="hl sym">!</span>buf <span class="hl sym">!</span>offset <span class="hl sym">!</span>len <span class="hl sym">=</span>
    <span class="hl kwa">let</span>
        nBytesRead <span class="hl sym">::</span> Int<span class="hl sym">;</span>
        nBytesRead <span class="hl sym">=</span> eager $ readIntoArray stream buf offset len<span class="hl sym">;</span>
    <span class="hl kwa">in</span>
        <span class="hl kwa">if</span> nBytesRead <span class="hl sym">==</span> len <span class="hl kwa">then</span>
            <span class="hl sym">()</span>
        <span class="hl kwa">else if</span> nBytesRead <span class="hl sym">== -</span><span class="hl num">1</span> <span class="hl kwa">then</span>
            setCharAtByteString buf offset <span class="hl sym">(-</span><span class="hl num">1</span><span class="hl sym">)</span>
            <span class="hl sym">`</span>seq<span class="hl sym">`</span>
            <span class="hl sym">()</span>
        <span class="hl kwa">else</span>
            fillBuffer stream buf <span class="hl sym">(</span>offset<span class="hl sym">+</span>nBytesRead<span class="hl sym">) (</span>len<span class="hl sym">-</span>nBytesRead<span class="hl sym">)</span>
    <span class="hl sym">;</span>

readLineIntoByteString <span class="hl sym">::</span>
    JBufferedInputStream <span class="hl sym">-&gt;</span> ByteString <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> ByteString <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>
readLineIntoByteString <span class="hl sym">!</span>stream <span class="hl sym">!</span>globalBuffer <span class="hl sym">!</span>bufferLength <span class="hl sym">!</span>posInBuffer <span class="hl sym">!</span>byteString <span class="hl sym">=</span>
    <span class="hl kwa">let</span>
        loop <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>
        loop <span class="hl sym">!</span>i <span class="hl sym">!</span>bufPos <span class="hl sym">=</span>
            <span class="hl kwa">if</span> bufPos <span class="hl sym">&lt;</span> bufferLength <span class="hl kwa">then</span>
                <span class="hl kwa">let</span>
                    c <span class="hl sym">::</span> Byte<span class="hl sym">;</span>
                    c <span class="hl sym">=</span> eager $ subscriptByteString globalBuffer bufPos<span class="hl sym">;</span>
                <span class="hl kwa">in</span>
                    <span class="hl kwa">case</span> Prelude<span class="hl sym">.</span>toInt c <span class="hl kwa">of</span>
                    <span class="hl num">13</span> <span class="hl sym">-&gt;</span> <span class="hl slc">// \r - part of \r\n... drop it</span>
                        loop <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) (</span>bufPos<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span>
                    <span class="hl sym">(-</span><span class="hl num">1</span><span class="hl sym">|</span><span class="hl num">10</span><span class="hl sym">) -&gt;</span> <span class="hl slc">// \n or EOF</span>
                        setCharAtByteString byteString i <span class="hl num">0</span> <span class="hl slc">// null-terminated</span>
                        <span class="hl sym">`</span>seq<span class="hl sym">`</span>
                        <span class="hl sym">(</span>bufPos<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span>
                    _ <span class="hl sym">-&gt;</span>
                        setCharAtByteString byteString i c
                        <span class="hl sym">`</span>seq<span class="hl sym">`</span>
                        loop <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) (</span>bufPos<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span>
            <span class="hl kwa">else</span>
                fillBuffer stream globalBuffer <span class="hl num">0</span> bufferLength
                <span class="hl sym">`</span>seq<span class="hl sym">`</span>
                loop i <span class="hl num">0</span><span class="hl sym">;</span>
    <span class="hl kwa">in</span>
        loop <span class="hl num">0</span> posInBuffer
    <span class="hl sym">;</span>

makeBufferedInputStream <span class="hl sym">::</span> a <span class="hl sym">-&gt;</span> JBufferedInputStream<span class="hl sym">;</span>
makeBufferedInputStream <span class="hl sym">!</span>input <span class="hl sym">=</span>
    eager $ createBufferedInputStream stdin <span class="hl num">1024</span>
    <span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.BufferedInputStream&quot;</span> JBufferedInputStream<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;constructor&quot;</span>
    <span class="hl kwa">private</span> createBufferedInputStream <span class="hl sym">::</span> JInputStream <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> JBufferedInputStream<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;method read&quot;</span>
    <span class="hl kwa">public</span> readIntoArray <span class="hl sym">::</span> JBufferedInputStream <span class="hl sym">-&gt;</span> ByteString <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;static field java.lang.System.in&quot;</span>
    stdin <span class="hl sym">::</span> JInputStream<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.InputStream&quot;</span> JInputStream<span class="hl sym">;</span>
