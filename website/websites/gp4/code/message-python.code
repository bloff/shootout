<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># contributed by Tobias Polzin, translated from Mike Pall's Lua program</span>
<span class="slc"># modified by Brian Atkinson</span>

<span class="kwc">import</span> sys

<span class="kwb">def</span> <span class="kwd">create_coroutine</span><span class="sym">(</span>n<span class="sym">):</span>
	<span class="kwb">if</span> n <span class="sym">&gt;</span> <span class="num">1</span><span class="sym">:</span>
		coroutine <span class="sym">=</span> <span class="kwd">create_coroutine</span><span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
		<span class="kwb">while</span> <span class="num">1</span><span class="sym">:</span>
			yield coroutine<span class="sym">.</span><span class="kwd">next</span><span class="sym">()+</span><span class="num">1</span>
	<span class="kwb">else</span><span class="sym">:</span>
		<span class="kwb">while</span> <span class="num">1</span><span class="sym">:</span>
			yield <span class="num">1</span>

<span class="kwb">def</span> <span class="kwd">main</span><span class="sym">():</span>
	coroutine <span class="sym">=</span> <span class="kwd">create_coroutine</span><span class="sym">(</span> <span class="num">500</span> <span class="sym">)</span>
	count <span class="sym">=</span> <span class="num">0</span>
	<span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span> <span class="kwa">int</span><span class="sym">(</span> sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">] ) ):</span>
		count <span class="sym">+=</span> coroutine<span class="sym">.</span><span class="kwd">next</span><span class="sym">()</span>
	<span class="kwb">print</span> count

<span class="kwd">main</span><span class="sym">()</span>
