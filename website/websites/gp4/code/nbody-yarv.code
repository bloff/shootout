<span class="slc">#!/usr/bin/ruby -w</span>
<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org</span>
<span class="slc">#</span>
<span class="slc"># Modified for succinctness by Greg Buchholz</span>
<span class="slc"># Originally by Michael Neumann</span>

require <span class="str">'matrix'</span>

SOLAR_MASS = <span class="num">4</span> <span class="sym">*</span> Math<span class="sym">::</span>PI<span class="sym">**</span><span class="num">2</span>
DAYS = <span class="num">365.24</span>

Planet = Struct<span class="sym">.</span><span class="kwd">new</span><span class="sym">(:</span>mass<span class="sym">, :</span>pos<span class="sym">, :</span>vel)

<span class="kwa">class</span> Array
  <span class="kwa">def</span> sum<span class="sym">;</span> <span class="kwa">self</span><span class="sym">.</span>inject<span class="sym">{|</span>sum<span class="sym">,</span> x<span class="sym">|</span> sum <span class="sym">+</span> x<span class="sym">}</span> <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">class</span> Vector
  <span class="kwa">def</span> mag<span class="sym">;</span> Math<span class="sym">.</span><span class="kwd">sqrt</span><span class="sym">(</span><span class="kwa">self</span><span class="sym">.</span><span class="kwd">inner_product</span><span class="sym">(</span><span class="kwa">self</span>)) <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">offset_momentum</span><span class="sym">(</span>bodies)
  bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>vel = bodies<span class="sym">.</span>map<span class="sym">{|</span>x<span class="sym">|</span> x<span class="sym">.</span>vel <span class="sym">*</span> x<span class="sym">.</span>mass <span class="sym">}.</span>sum <span class="sym">* (-</span><span class="num">1.0</span><span class="sym">/</span>SOLAR_MASS)
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">energy</span><span class="sym">(</span>b)
  kinetic   = <span class="num">0.5</span> <span class="sym">*</span> b<span class="sym">.</span>map<span class="sym">{|</span>x<span class="sym">|</span> x<span class="sym">.</span>mass <span class="sym">*</span> x<span class="sym">.</span>vel<span class="sym">.</span><span class="kwd">inner_product</span><span class="sym">(</span>x<span class="sym">.</span>vel)<span class="sym">}.</span>sum
  potential = <span class="num">0.0</span>

  <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">0</span> <span class="sym">...</span> b<span class="sym">.</span>size
    <span class="kwa">for</span> j <span class="kwa">in</span> <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span>) <span class="sym">...</span> b<span class="sym">.</span>size
      potential <span class="sym">+</span>= <span class="sym">(</span>b<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> b<span class="sym">[</span>j<span class="sym">].</span>mass) <span class="sym">/ (</span>b<span class="sym">[</span>i<span class="sym">].</span>pos <span class="sym">-</span> b<span class="sym">[</span>j<span class="sym">].</span>pos)<span class="sym">.</span>mag
    <span class="kwa">end</span>
  <span class="kwa">end</span>
  <span class="kwa">return</span> kinetic <span class="sym">-</span> potential
<span class="kwa">end</span>

<span class="kwa">def</span> <span class="kwd">advance</span><span class="sym">(</span>b<span class="sym">,</span> dt)
  <span class="kwa">for</span> i <span class="kwa">in</span> <span class="num">0</span> <span class="sym">...</span> b<span class="sym">.</span>size
    <span class="kwa">for</span> j <span class="kwa">in</span> <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span>) <span class="sym">...</span> b<span class="sym">.</span>size
      dx = <span class="sym">(</span>b<span class="sym">[</span>i<span class="sym">].</span>pos <span class="sym">-</span> b<span class="sym">[</span>j<span class="sym">].</span>pos)
      dist = dx<span class="sym">.</span>mag
      m = dt <span class="sym">/ (</span>dist <span class="sym">*</span> dist <span class="sym">*</span> dist)
      b<span class="sym">[</span>i<span class="sym">].</span>vel <span class="sym">-</span>= dx <span class="sym">*</span> b<span class="sym">[</span>j<span class="sym">].</span>mass <span class="sym">*</span> m
      b<span class="sym">[</span>j<span class="sym">].</span>vel <span class="sym">+</span>= dx <span class="sym">*</span> b<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> m
    <span class="kwa">end</span>
    b<span class="sym">[</span>i<span class="sym">].</span>pos <span class="sym">+</span>= b<span class="sym">[</span>i<span class="sym">].</span>vel <span class="sym">*</span> dt
  <span class="kwa">end</span>
<span class="kwa">end</span>

sun = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>SOLAR_MASS<span class="sym">,</span> Vector<span class="sym">[</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">],</span> Vector<span class="sym">[</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">]</span>)
jupiter = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">,</span>
 Vector<span class="sym">[</span> <span class="num">4.84143144246472090e+00</span><span class="sym">,-</span><span class="num">1.16032004402742839e+00</span><span class="sym">,-</span><span class="num">1.03622044471123109e-01</span><span class="sym">],</span>
 Vector<span class="sym">[</span> <span class="num">1.66007664274403694e-03</span><span class="sym">,</span> <span class="num">7.69901118419740425e-03</span><span class="sym">,-</span><span class="num">6.90460016972063023e-05</span><span class="sym">]</span>)
saturn  = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">,</span>
 Vector<span class="sym">[</span> <span class="num">8.34336671824457987e+00</span><span class="sym">,</span> <span class="num">4.12479856412430479e+00</span><span class="sym">,-</span><span class="num">4.03523417114321381e-01</span><span class="sym">],</span>
 Vector<span class="sym">[-</span><span class="num">2.76742510726862411e-03</span><span class="sym">,</span> <span class="num">4.99852801234917238e-03</span><span class="sym">,</span> <span class="num">2.30417297573763929e-05</span><span class="sym">]</span>)
uranus  = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">,</span>
 Vector<span class="sym">[</span> <span class="num">1.28943695621391310e+01</span><span class="sym">,-</span><span class="num">1.51111514016986312e+01</span><span class="sym">,-</span><span class="num">2.23307578892655734e-01</span><span class="sym">],</span>
 Vector<span class="sym">[</span> <span class="num">2.96460137564761618e-03</span><span class="sym">,</span> <span class="num">2.37847173959480950e-03</span><span class="sym">,-</span><span class="num">2.96589568540237556e-05</span><span class="sym">]</span>)
neptune = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> SOLAR_MASS<span class="sym">,</span>
 Vector<span class="sym">[</span> <span class="num">1.53796971148509165e+01</span><span class="sym">,-</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span> <span class="num">1.79258772950371181e-01</span><span class="sym">],</span>
 Vector<span class="sym">[</span> <span class="num">2.68067772490389322e-03</span><span class="sym">,</span> <span class="num">1.62824170038242295e-03</span><span class="sym">,-</span><span class="num">9.51592254519715870e-05</span><span class="sym">]</span>)

BODIES = <span class="sym">[</span>sun<span class="sym">,</span> jupiter<span class="sym">,</span> saturn<span class="sym">,</span> uranus<span class="sym">,</span> neptune<span class="sym">].</span>collect<span class="sym">{|</span>x<span class="sym">|</span> x<span class="sym">.</span>vel <span class="sym">*</span>= DAYS<span class="sym">;</span> x<span class="sym">}</span>

<span class="kwd">offset_momentum</span><span class="sym">(</span>BODIES)
puts <span class="str">&quot;%.9f&quot;</span> % <span class="kwd">energy</span><span class="sym">(</span>BODIES)
<span class="kwd">Integer</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">]</span>)<span class="sym">.</span>times <span class="sym">{</span> <span class="kwd">advance</span><span class="sym">(</span>BODIES<span class="sym">,</span> <span class="num">0.01</span>) <span class="sym">}</span>
puts <span class="str">&quot;%.9f&quot;</span> % <span class="kwd">energy</span><span class="sym">(</span>BODIES)


