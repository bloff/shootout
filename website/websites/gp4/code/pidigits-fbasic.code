<span class="hl slc">' The Computer Language Shootout</span>
<span class="hl slc">' http://shootout.alioth.debian.org/</span>
<span class="hl slc">' contributed by Simon Nash (yetifoot)</span>
<span class="hl slc">' converted to FreeBASIC from the gcc c version by Mike Pall</span>

#include <span class="hl str">&quot;crt.bi&quot;</span>
#include <span class="hl str">&quot;gmp.bi&quot;</span>

<span class="hl kwa">Option</span> Escape

<span class="hl kwa">Type</span> ctx_t
  <span class="hl kwa">As</span> mpz_t q<span class="hl sym">,</span> r<span class="hl sym">,</span> s<span class="hl sym">,</span> t    <span class="hl slc">' Transformation matrix components.</span>
  <span class="hl kwa">As</span> mpz_t u<span class="hl sym">,</span> v<span class="hl sym">,</span> w       <span class="hl slc">' Temporary numbers.</span>
  <span class="hl kwa">As</span> <span class="hl kwb">Integer</span> d<span class="hl sym">,</span> i<span class="hl sym">,</span> n     <span class="hl slc">' Counters.</span>
  <span class="hl kwa">As</span> ZString <span class="hl sym">*</span> <span class="hl num">11</span> digits <span class="hl slc">' Accumulated digits for one line.</span>
<span class="hl kwa">End Type</span>
<span class="hl slc">'</span>
<span class="hl slc">' Compose matrix with numbers on the right.</span>
<span class="hl kwa">Sub</span> <span class="hl kwd">compose_r</span><span class="hl sym">(</span>c <span class="hl kwa">As</span> ctx_t ptr<span class="hl sym">,</span> bq <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">,</span> br <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">,</span> bs <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">,</span> bt <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> bs<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> bq<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> br<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> bt<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> bt<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> bs<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> bq<span class="hl sym">)</span>
<span class="hl kwa">End Sub</span>

<span class="hl slc">' Compose matrix with numbers on the left.</span>
<span class="hl kwa">Sub</span> <span class="hl kwd">compose_l</span><span class="hl sym">(</span>c <span class="hl kwa">As</span> ctx_t ptr<span class="hl sym">,</span> bq <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">,</span> br <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">,</span> bs <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">,</span> bt <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> bt<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> br<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> bs<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> bt<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> br<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> bq<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_si</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> bq<span class="hl sym">)</span>
<span class="hl kwa">End Sub</span>

<span class="hl slc">' Extract one digit.</span>
<span class="hl kwa">Function</span> <span class="hl kwd">extract</span><span class="hl sym">(</span>c <span class="hl kwa">As</span> ctx_t ptr<span class="hl sym">,</span> j <span class="hl kwa">As</span> uInteger<span class="hl sym">)</span> <span class="hl kwa">As</span> <span class="hl kwb">Integer</span>
  <span class="hl kwd">mpz_mul_ui</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> j<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">)</span>
  <span class="hl kwd">mpz_mul_ui</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> j<span class="hl sym">)</span>
  <span class="hl kwd">mpz_add</span>   <span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">)</span>
  <span class="hl kwd">mpz_tdiv_q</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>w<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">,</span> &#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">)</span>
  <span class="hl kwa">Return</span> <span class="hl kwd">mpz_get_ui</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>w<span class="hl sym">)</span>
<span class="hl kwa">End Function</span>

<span class="hl slc">' Print one digit. Returns 1 for the last digit.</span>
<span class="hl kwa">Function</span> <span class="hl kwd">prdigit</span><span class="hl sym">(</span>c <span class="hl kwa">As</span> ctx_t ptr<span class="hl sym">,</span> y <span class="hl kwa">As</span> <span class="hl kwb">Integer</span><span class="hl sym">)</span> <span class="hl kwa">As</span> <span class="hl kwb">Integer</span>
  c<span class="hl sym">-&gt;</span>digits<span class="hl sym">[</span>c<span class="hl sym">-&gt;</span>d<span class="hl sym">] =</span> <span class="hl kwd">Asc</span><span class="hl sym">(</span><span class="hl str">&quot;0&quot;</span><span class="hl sym">) +</span> y
  c<span class="hl sym">-&gt;</span>d <span class="hl sym">+=</span> <span class="hl num">1</span>
  c<span class="hl sym">-&gt;</span>i <span class="hl sym">+=</span> <span class="hl num">1</span>
  <span class="hl kwa">If</span> <span class="hl sym">(</span>c<span class="hl sym">-&gt;</span>i mod <span class="hl num">10</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">OR</span> <span class="hl sym">(</span>c<span class="hl sym">-&gt;</span>i <span class="hl sym">=</span> c<span class="hl sym">-&gt;</span>n<span class="hl sym">)</span> <span class="hl kwa">Then</span>
    c<span class="hl sym">-&gt;</span>digits<span class="hl sym">[</span>c<span class="hl sym">-&gt;</span>d<span class="hl sym">] =</span> <span class="hl num">0</span>
    <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%-10s\t:%d\n&quot;</span><span class="hl sym">,</span> c<span class="hl sym">-&gt;</span>digits<span class="hl sym">,</span> c<span class="hl sym">-&gt;</span>i<span class="hl sym">)</span>
    c<span class="hl sym">-&gt;</span>d <span class="hl sym">=</span> <span class="hl num">0</span>
  <span class="hl kwa">End If</span>
  <span class="hl kwa">return</span> c<span class="hl sym">-&gt;</span>i <span class="hl sym">=</span> c<span class="hl sym">-&gt;</span>n
<span class="hl kwa">End Function</span>

<span class="hl slc">' Generate successive digits of PI.</span>
<span class="hl kwa">Sub</span> <span class="hl kwd">pidigits</span><span class="hl sym">(</span>c <span class="hl kwa">As</span> ctx_t ptr<span class="hl sym">)</span>
  <span class="hl kwa">Dim As</span> <span class="hl kwb">Integer</span> k <span class="hl sym">=</span> <span class="hl num">1</span>
  <span class="hl kwa">Dim As</span> <span class="hl kwb">Integer</span> y
  c<span class="hl sym">-&gt;</span>d <span class="hl sym">=</span> <span class="hl num">0</span>
  c<span class="hl sym">-&gt;</span>i <span class="hl sym">=</span> <span class="hl num">0</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span>
  <span class="hl kwd">mpz_init_set_ui</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span>
  <span class="hl kwd">mpz_init</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>u<span class="hl sym">)</span>
  <span class="hl kwd">mpz_init</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>v<span class="hl sym">)</span>
  <span class="hl kwd">mpz_init</span><span class="hl sym">(</span>&#64;c<span class="hl sym">-&gt;</span>w<span class="hl sym">)</span>
  <span class="hl kwa">Do</span>
    y <span class="hl sym">=</span> <span class="hl kwd">extract</span><span class="hl sym">(</span>c<span class="hl sym">,</span> <span class="hl num">3</span><span class="hl sym">)</span>
    <span class="hl kwa">If</span> y <span class="hl sym">=</span> <span class="hl kwd">extract</span><span class="hl sym">(</span>c<span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">)</span> <span class="hl kwa">Then</span>
      <span class="hl kwa">If</span> <span class="hl kwd">prdigit</span><span class="hl sym">(</span>c<span class="hl sym">,</span> y<span class="hl sym">)</span> <span class="hl kwa">Then Exit Sub</span>
      <span class="hl kwd">compose_r</span><span class="hl sym">(</span>c<span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">, -</span><span class="hl num">10</span><span class="hl sym">*</span>y<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">Else</span>
      <span class="hl kwd">compose_l</span><span class="hl sym">(</span>c<span class="hl sym">,</span> k<span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">*</span>k<span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span>k<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
      k<span class="hl sym">+=</span><span class="hl num">1</span>
    <span class="hl kwa">End If</span>
  <span class="hl kwa">Loop</span>
<span class="hl kwa">End Sub</span>

<span class="hl kwa">Dim As</span> ctx_t c
  c.n <span class="hl sym">=</span> <span class="hl kwd">CInt</span><span class="hl sym">(</span>Command<span class="hl kwb">$(1))</span>
  <span class="hl kwa">If</span> c.n <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">Then</span> c.n <span class="hl sym">=</span> <span class="hl num">27</span>
  <span class="hl kwd">pidigits</span><span class="hl sym">(</span>&#64;c<span class="hl sym">)</span>


