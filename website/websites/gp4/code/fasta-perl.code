<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by David Pyke</span>
<span class="hl slc"># tweaked by Danny Sauer</span>
<span class="hl slc"># Butchered by Jesse Millikan</span>

<span class="hl kwa">use</span> constant IM <span class="hl sym">=&gt;</span> <span class="hl num">139968</span><span class="hl sym">;</span>
<span class="hl kwa">use</span> constant IA <span class="hl sym">=&gt;</span> <span class="hl num">3877</span><span class="hl sym">;</span>
<span class="hl kwa">use</span> constant IC <span class="hl sym">=&gt;</span> <span class="hl num">29573</span><span class="hl sym">;</span>

<span class="hl kwa">use</span> constant LINELENGTH <span class="hl sym">=&gt;</span> <span class="hl num">60</span><span class="hl sym">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$LAST</span> <span class="hl sym">=</span> <span class="hl num">42</span><span class="hl sym">;</span>

<span class="hl kwa">sub</span> makeCumulative <span class="hl sym">{</span>
    <span class="hl kwc">my</span><span class="hl sym">(</span><span class="hl kwb">$genelist</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$cp</span> <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>

    <span class="hl kwa">foreach</span> <span class="hl sym">(</span>&#64;<span class="hl kwb">$genelist</span><span class="hl sym">){</span>
        <span class="hl kwb">$_</span><span class="hl sym">-&gt;[</span><span class="hl num">1</span><span class="hl sym">] =</span> <span class="hl kwb">$cp</span> <span class="hl sym">+=</span> <span class="hl kwb">$_</span><span class="hl sym">-&gt;[</span><span class="hl num">1</span><span class="hl sym">];</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> makeRandomFasta <span class="hl sym">{</span>
    <span class="hl kwc">my</span><span class="hl sym">(</span><span class="hl kwb">$id</span><span class="hl sym">,</span><span class="hl kwb">$desc</span><span class="hl sym">,</span><span class="hl kwb">$n</span><span class="hl sym">,</span><span class="hl kwb">$genelist</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    print <span class="hl str">&quot;&gt;$id $desc</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$pick</span><span class="hl sym">,</span> <span class="hl kwb">$r</span><span class="hl sym">;</span>

	<span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">){</span>
		<span class="hl kwb">$pick</span><span class="hl sym">=</span><span class="hl str">''</span><span class="hl sym">;</span>

		<span class="hl slc"># Get LINELENGTH chars or what's left of $n</span>
        CHAR<span class="hl sym">:</span> <span class="hl kwa">foreach</span> <span class="hl sym">(</span><span class="hl num">1</span> .. <span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">&gt;</span> LINELENGTH ? LINELENGTH <span class="hl sym">:</span> <span class="hl kwb">$n</span><span class="hl sym">)){</span>
    		<span class="hl kwb">$rand</span> <span class="hl sym">= (</span><span class="hl kwb">$LAST</span> <span class="hl sym">= (</span><span class="hl kwb">$LAST</span> <span class="hl sym">*</span> IA <span class="hl sym">+</span> IC<span class="hl sym">)</span> % IM<span class="hl sym">) /</span> IM<span class="hl sym">;</span>

			<span class="hl slc"># Select gene and append it</span>
    		<span class="hl kwa">foreach</span> <span class="hl sym">(</span>&#64;<span class="hl kwb">$genelist</span><span class="hl sym">){</span>
				<span class="hl kwa">if</span><span class="hl sym">(</span><span class="hl kwb">$rand</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$_</span><span class="hl sym">-&gt;[</span><span class="hl num">1</span><span class="hl sym">]){</span>
					<span class="hl kwb">$pick</span> .<span class="hl sym">=</span> <span class="hl kwb">$_</span><span class="hl sym">-&gt;[</span><span class="hl num">0</span><span class="hl sym">];</span>
					<span class="hl kwa">next</span> CHAR<span class="hl sym">;</span>
				<span class="hl sym">}</span>
    		<span class="hl sym">}</span>
        <span class="hl sym">}</span>

        print <span class="hl str">&quot;$pick</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
		<span class="hl kwb">$n</span> <span class="hl sym">-=</span> LINELENGTH<span class="hl sym">;</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl slc"># Print $n characters of $s (repeated if nessary) with newlines every LINELENGTH</span>
<span class="hl kwa">sub</span> makeRepeatFasta <span class="hl sym">{</span>
    <span class="hl kwc">my</span><span class="hl sym">(</span><span class="hl kwb">$id</span><span class="hl sym">,</span><span class="hl kwb">$desc</span><span class="hl sym">,</span><span class="hl kwb">$s</span><span class="hl sym">,</span><span class="hl kwb">$n</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    print <span class="hl str">&quot;&gt;$id $desc</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>

	<span class="hl kwc">my</span> <span class="hl kwb">$ss</span><span class="hl sym">;</span>
	<span class="hl kwa">while</span><span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">){</span>
		<span class="hl slc"># Overfill $ss with $s</span>
		<span class="hl kwb">$ss</span> .<span class="hl sym">=</span> <span class="hl kwb">$s</span> <span class="hl kwa">while</span> length <span class="hl kwb">$ss</span> <span class="hl sym">&lt;</span> LINELENGTH<span class="hl sym">;</span>
		<span class="hl slc"># Print LINELENGTH chars or whatever's left of $n</span>
        print <span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$ss</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl kwb">$n</span> <span class="hl sym">&gt;</span> LINELENGTH ? LINELENGTH <span class="hl sym">:</span> <span class="hl kwb">$n</span><span class="hl sym">,</span><span class="hl str">&quot;&quot;</span><span class="hl sym">),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
		<span class="hl kwb">$n</span> <span class="hl sym">-=</span> LINELENGTH<span class="hl sym">;</span>
	<span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">$iub</span> <span class="hl sym">= [</span>
    <span class="hl sym">[</span>a<span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>c<span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>g<span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>t<span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>B<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>D<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>H<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>K<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>M<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>N<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>R<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>S<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>V<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>W<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>Y<span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">]</span>
<span class="hl sym">];</span>

<span class="hl kwc">my</span> <span class="hl kwb">$homosapiens</span> <span class="hl sym">= [</span>
    <span class="hl sym">[</span>a<span class="hl sym">,</span> <span class="hl num">0.3029549426680</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>c<span class="hl sym">,</span> <span class="hl num">0.1979883004921</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>g<span class="hl sym">,</span> <span class="hl num">0.1975473066391</span><span class="hl sym">],</span>
    <span class="hl sym">[</span>t<span class="hl sym">,</span> <span class="hl num">0.3015094502008</span><span class="hl sym">]</span>
<span class="hl sym">];</span>

<span class="hl kwb">$alu</span> <span class="hl sym">=</span>
    <span class="hl str">'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</span> .
    <span class="hl str">'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</span> .
    <span class="hl str">'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</span> .
    <span class="hl str">'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</span> .
    <span class="hl str">'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</span> .
    <span class="hl str">'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</span> .
    <span class="hl str">'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</span><span class="hl sym">;</span>

<span class="hl slc">#main</span>

<span class="hl kwc">my</span> <span class="hl kwb">$n</span> <span class="hl sym">= (</span><span class="hl kwb">$ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] ||</span> <span class="hl num">1000</span><span class="hl sym">) ;</span>

makeCumulative <span class="hl kwb">$iub</span><span class="hl sym">;</span>
makeCumulative <span class="hl kwb">$homosapiens</span><span class="hl sym">;</span>

<span class="hl kwd">makeRepeatFasta</span> <span class="hl sym">(</span><span class="hl str">'ONE'</span><span class="hl sym">,</span> <span class="hl str">'Homo sapiens alu'</span><span class="hl sym">,</span> <span class="hl kwb">$alu</span><span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">);</span>
<span class="hl kwd">makeRandomFasta</span> <span class="hl sym">(</span><span class="hl str">'TWO'</span><span class="hl sym">,</span> <span class="hl str">'IUB ambiguity codes'</span><span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">*</span><span class="hl num">3</span><span class="hl sym">,</span> <span class="hl kwb">$iub</span><span class="hl sym">);</span>
<span class="hl kwd">makeRandomFasta</span> <span class="hl sym">(</span><span class="hl str">'THREE'</span><span class="hl sym">,</span> <span class="hl str">'Homo sapiens frequency'</span><span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">*</span><span class="hl num">5</span><span class="hl sym">,</span> <span class="hl kwb">$homosapiens</span><span class="hl sym">);</span>

