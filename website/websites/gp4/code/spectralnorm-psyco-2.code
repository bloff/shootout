<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># Contributed by Sebastien Loisel</span>
<span class="hl slc"># Fixed by Isaac Gouy</span>
<span class="hl slc"># Modified for Psyco for max speed by bearophile, Jan 1 2005</span>

<span class="hl kwa">import</span> sys<span class="hl sym">,</span> psyco

<span class="hl kwa">def</span> <span class="hl kwd">eval_A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">):</span>
    <span class="hl kwa">return</span> <span class="hl num">1.0</span> <span class="hl sym">/ ( (</span>i<span class="hl sym">+</span>j<span class="hl sym">) * (</span>i<span class="hl sym">+</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) /</span> <span class="hl num">2</span> <span class="hl sym">+</span> i <span class="hl sym">+</span> <span class="hl num">1</span> <span class="hl sym">)</span>

<span class="hl kwa">def</span> <span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span>u<span class="hl sym">):</span>
    lenu <span class="hl sym">=</span> <span class="hl kwb">len</span><span class="hl sym">(</span>u<span class="hl sym">)</span>
    v <span class="hl sym">= [</span><span class="hl num">0.0</span><span class="hl sym">] *</span> lenu
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>lenu<span class="hl sym">):</span>
        aux <span class="hl sym">=</span> <span class="hl num">0.0</span>
        <span class="hl kwa">for</span> j <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>lenu<span class="hl sym">):</span>
            aux <span class="hl sym">+=</span> <span class="hl kwd">eval_A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">) *</span> u<span class="hl sym">[</span>j<span class="hl sym">]</span>
        v<span class="hl sym">[</span>i<span class="hl sym">] =</span> aux
    <span class="hl kwa">return</span> v

<span class="hl kwa">def</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span>u<span class="hl sym">):</span>
    lenu <span class="hl sym">=</span> <span class="hl kwb">len</span><span class="hl sym">(</span>u<span class="hl sym">)</span>
    v <span class="hl sym">= [</span><span class="hl num">0.0</span><span class="hl sym">] *</span> lenu
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>lenu<span class="hl sym">):</span>
        aux <span class="hl sym">=</span> <span class="hl num">0.0</span>
        <span class="hl kwa">for</span> j <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>lenu<span class="hl sym">):</span>
            aux <span class="hl sym">+=</span> <span class="hl kwd">eval_A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">) *</span> u<span class="hl sym">[</span>j<span class="hl sym">]</span>
        v<span class="hl sym">[</span>i<span class="hl sym">] =</span> aux
    <span class="hl kwa">return</span> v

<span class="hl kwa">def</span> <span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>u<span class="hl sym">):</span>
    <span class="hl kwa">return</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span><span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span>u<span class="hl sym">))</span>

<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl sym">():</span>
    n <span class="hl sym">=</span> <span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span>
    u <span class="hl sym">= [</span><span class="hl num">1.0</span><span class="hl sym">] *</span> n
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">):</span>
       v <span class="hl sym">=</span> <span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>u<span class="hl sym">)</span>
       u <span class="hl sym">=</span> <span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>v<span class="hl sym">)</span>
    vBv <span class="hl sym">=</span> <span class="hl num">0.0</span>
    vv <span class="hl sym">=</span> <span class="hl num">0.0</span>
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>n<span class="hl sym">):</span>
       vBv <span class="hl sym">+=</span> u<span class="hl sym">[</span>i<span class="hl sym">] *</span> v<span class="hl sym">[</span>i<span class="hl sym">]</span>
       vv <span class="hl sym">+=</span> v<span class="hl sym">[</span>i<span class="hl sym">] *</span> v<span class="hl sym">[</span>i<span class="hl sym">]</span>
    <span class="hl kwa">print</span> <span class="hl str">&quot;%0.9f&quot;</span> <span class="hl sym">% ((</span>vBv<span class="hl sym">/</span>vv<span class="hl sym">)**</span><span class="hl num">0.5</span><span class="hl sym">)</span>

psyco<span class="hl sym">.</span><span class="hl kwd">bind</span><span class="hl sym">(</span>main<span class="hl sym">)</span>
<span class="hl kwd">main</span><span class="hl sym">()</span>
