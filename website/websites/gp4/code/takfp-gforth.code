\ http<span class="sym">:</span><span class="slc">//shootout.alioth.debian.org
</span>\ Provided by Ian Osgood

\ read NUM from last command line argument
<span class="num">0</span><span class="sym">.</span> argc &#64; <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span><span class="kwb">float</span> drop fconstant NUM

\ TAK <span class="kwa">using</span> floating point <span class="kwa">and</span> locals
<span class="sym">:</span> tak <span class="sym">{</span> F<span class="sym">:</span> z F<span class="sym">:</span> y F<span class="sym">:</span> x <span class="sym">--</span> n <span class="sym">}
</span>  y x f<span class="sym">&lt;</span> <span class="kwa">if
</span>    y x z <span class="num">1e</span> f<span class="sym">-</span> recurse
    x z y <span class="num">1e</span> f<span class="sym">-</span> recurse
    z y x <span class="num">1e</span> f<span class="sym">-</span> recurse
    recurse
  <span class="kwa">else</span> z then <span class="sym">;

</span>\ run tak <span class="kwa">and</span> print result from FP stack
  NUM fdup <span class="num">2e</span> f<span class="sym">*</span> fover <span class="num">3e</span> f<span class="sym">*</span> tak f<span class="sym">&gt;</span>d d<span class="sym">&gt;</span>s <span class="num">1</span> u<span class="sym">.</span>r <span class="str">'. emit '</span><span class="num">0</span> emit cr

bye \ done<span class="sym">!</span>
