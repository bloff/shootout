<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Jeffrey Stedfast</span>
<span class="hl com">*/</span>

<span class="hl kwa">using</span> System<span class="hl sym">;</span>
<span class="hl kwa">using</span> System<span class="hl sym">.</span>IO<span class="hl sym">;</span>

<span class="hl kwa">class</span> sumcol <span class="hl sym">{</span>
   <span class="hl kwa">static</span> <span class="hl kwb">int</span> <span class="hl kwd">SumStream</span> <span class="hl sym">(</span>Stream stream<span class="hl sym">)</span>
   <span class="hl sym">{</span>
      <span class="hl kwb">byte</span><span class="hl sym">[]</span> buf <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwb">byte</span> <span class="hl sym">[</span><span class="hl num">4097</span><span class="hl sym">];</span>
      <span class="hl kwb">int</span> nread<span class="hl sym">,</span> n<span class="hl sym">,</span> v <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl kwb">bool</span> negate <span class="hl sym">=</span> <span class="hl kwa">false</span><span class="hl sym">;</span>
      <span class="hl kwb">bool</span> first <span class="hl sym">=</span> <span class="hl kwa">true</span><span class="hl sym">;</span>
      <span class="hl kwb">int</span> sum <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl kwb">char</span> c<span class="hl sym">;</span>

      <span class="hl kwa">do</span> <span class="hl sym">{</span>
         <span class="hl kwa">if</span> <span class="hl sym">((</span>nread <span class="hl sym">=</span> stream<span class="hl sym">.</span><span class="hl kwd">Read</span> <span class="hl sym">(</span>buf<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">4096</span><span class="hl sym">)) &lt;=</span> <span class="hl num">0</span><span class="hl sym">)</span>
            <span class="hl kwa">break</span><span class="hl sym">;</span>

         buf<span class="hl sym">[</span>nread<span class="hl sym">] = (</span><span class="hl kwb">byte</span><span class="hl sym">)</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>
         n <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

         <span class="hl kwa">do</span> <span class="hl sym">{</span>
            <span class="hl kwa">if</span> <span class="hl sym">(</span>first<span class="hl sym">) {</span>
               <span class="hl kwa">if</span> <span class="hl sym">(</span>buf<span class="hl sym">[</span>n<span class="hl sym">] == (</span><span class="hl kwb">byte</span><span class="hl sym">)</span> <span class="hl str">'-'</span><span class="hl sym">) {</span>
                  negate <span class="hl sym">=</span> <span class="hl kwa">true</span><span class="hl sym">;</span>
                  first <span class="hl sym">=</span> <span class="hl kwa">false</span><span class="hl sym">;</span>
                  n<span class="hl sym">++;</span>
               <span class="hl sym">}</span> <span class="hl kwa">else if</span> <span class="hl sym">(</span>buf<span class="hl sym">[</span>n<span class="hl sym">] != (</span><span class="hl kwb">byte</span><span class="hl sym">)</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)</span>
                  first <span class="hl sym">=</span> <span class="hl kwa">false</span><span class="hl sym">;</span>
            <span class="hl sym">}</span>

            <span class="hl kwa">while</span> <span class="hl sym">(</span>buf<span class="hl sym">[</span>n<span class="hl sym">] != (</span><span class="hl kwb">byte</span><span class="hl sym">)</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">) {</span>
               c <span class="hl sym">= (</span><span class="hl kwb">char</span><span class="hl sym">)</span> buf<span class="hl sym">[</span>n<span class="hl sym">];</span>
               <span class="hl kwa">if</span> <span class="hl sym">(</span>c <span class="hl sym">&lt;</span> <span class="hl str">'0'</span> <span class="hl sym">||</span> c <span class="hl sym">&gt;</span> <span class="hl str">'9'</span><span class="hl sym">) {</span>
                  Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span> <span class="hl sym">(</span><span class="hl str">&quot;{0} not a digit, v is {1}&quot;</span><span class="hl sym">,</span> c<span class="hl sym">,</span> v<span class="hl sym">);</span>
                  <span class="hl kwa">throw new</span> <span class="hl kwd">Exception</span> <span class="hl sym">();</span>
               <span class="hl sym">}</span>

               v <span class="hl sym">=</span> v <span class="hl sym">*</span> <span class="hl num">10</span> <span class="hl sym">+ (</span>c <span class="hl sym">-</span> <span class="hl str">'0'</span><span class="hl sym">);</span>
               n<span class="hl sym">++;</span>
            <span class="hl sym">}</span>

            <span class="hl kwa">if</span> <span class="hl sym">(</span>n <span class="hl sym">==</span> nread<span class="hl sym">)</span>
               <span class="hl kwa">break</span><span class="hl sym">;</span>

            <span class="hl kwa">if</span> <span class="hl sym">(</span>negate<span class="hl sym">)</span>
               sum <span class="hl sym">-=</span> v<span class="hl sym">;</span>
            <span class="hl kwa">else</span>
               sum <span class="hl sym">+=</span> v<span class="hl sym">;</span>

            negate <span class="hl sym">=</span> <span class="hl kwa">false</span><span class="hl sym">;</span>
            first <span class="hl sym">=</span> <span class="hl kwa">true</span><span class="hl sym">;</span>
            v <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

            n<span class="hl sym">++;</span>
         <span class="hl sym">}</span> <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwa">true</span><span class="hl sym">);</span>
      <span class="hl sym">}</span> <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwa">true</span><span class="hl sym">);</span>

      <span class="hl kwa">if</span> <span class="hl sym">(</span>negate<span class="hl sym">)</span>
         sum <span class="hl sym">-=</span> v<span class="hl sym">;</span>
      <span class="hl kwa">else</span>
         sum <span class="hl sym">+=</span> v<span class="hl sym">;</span>

      <span class="hl kwa">return</span> sum<span class="hl sym">;</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">Main</span> <span class="hl sym">()</span>
   <span class="hl sym">{</span>
      Stream stdin <span class="hl sym">=</span> Console<span class="hl sym">.</span><span class="hl kwd">OpenStandardInput</span> <span class="hl sym">();</span>
      <span class="hl kwb">int</span> sum<span class="hl sym">;</span>

      <span class="hl kwa">try</span> <span class="hl sym">{</span>
         sum <span class="hl sym">=</span> <span class="hl kwd">SumStream</span> <span class="hl sym">(</span>stdin<span class="hl sym">);</span>
         Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span> <span class="hl sym">(</span>sum<span class="hl sym">);</span>
      <span class="hl sym">}</span> <span class="hl kwa">catch</span> <span class="hl sym">{</span>
         Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span> <span class="hl sym">(</span><span class="hl str">&quot;Invalid input&quot;</span><span class="hl sym">);</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>
