rem The Computer Language Shootout
rem http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/</span>
rem contributed by Josh Goldfoot
rem based on C gcc program by bearophile

<span class="kwa">sub</span> nsieve<span class="sym">(</span>m <span class="kwa">as</span> <span class="kwb">integer</span><span class="sym">)</span>
   <span class="kwa">dim</span> flags<span class="sym">(</span>m<span class="sym">)</span> <span class="kwa">as</span> ubyte   <span class="slc">'FreeBasic has no boolean type</span>
   <span class="kwa">Dim As</span> <span class="kwb">Integer</span> count<span class="sym">,</span> i<span class="sym">,</span> j
   count <span class="sym">=</span> <span class="num">0</span>
   i <span class="sym">=</span> <span class="num">2</span>
   <span class="kwa">while</span> i <span class="sym">&lt;</span> m
      <span class="kwa">if</span> flags<span class="sym">(</span>i<span class="sym">) =</span> <span class="num">0</span> <span class="kwa">then</span>
         count <span class="sym">+=</span> <span class="num">1</span>
         j <span class="sym">=</span> i shl <span class="num">1</span>
         <span class="kwa">while</span> j <span class="sym">&lt;</span> m
            flags<span class="sym">(</span>j<span class="sym">) =</span> <span class="num">1</span>
            j <span class="sym">+=</span> i
         wend
      <span class="kwa">end if</span>
      i <span class="sym">+=</span> <span class="num">1</span>
   wend
   print using <span class="str">&quot;Primes up to ######## ########&quot;</span><span class="sym">;</span>m<span class="sym">;</span>count
<span class="kwa">end sub</span>

<span class="kwa">Dim As</span> <span class="kwb">Integer</span> cmd<span class="sym">,</span> i

cmd <span class="sym">=</span> val<span class="sym">(</span>COMMAND$<span class="sym">)</span>
<span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> <span class="num">2</span>
   nsieve<span class="sym">(</span><span class="num">10000</span> shl <span class="sym">(</span>cmd <span class="sym">-</span> i<span class="sym">))</span>
<span class="kwa">next</span> i
