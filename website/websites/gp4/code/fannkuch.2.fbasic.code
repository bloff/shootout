rem The Computer Language Shootout
rem http<span class="hl sym">://</span>shootout.alioth.debian.org<span class="hl sym">/</span>
rem contributed by Antoni Gual

#include <span class="hl str">&quot;crt.bi&quot;</span>

<span class="hl kwa">dim as</span> <span class="hl kwb">integer</span> <span class="hl kwd">perm</span><span class="hl sym">(</span><span class="hl num">20</span><span class="hl sym">),</span> <span class="hl kwd">permp</span><span class="hl sym">(</span><span class="hl num">20</span><span class="hl sym">),</span> <span class="hl kwd">count</span><span class="hl sym">(</span><span class="hl num">20</span><span class="hl sym">)</span>
<span class="hl kwa">dim as</span> <span class="hl kwb">integer</span> n<span class="hl sym">,</span>print30<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span> m<span class="hl sym">,</span> r<span class="hl sym">,</span> j<span class="hl sym">,</span> i<span class="hl sym">,</span> k<span class="hl sym">,</span> temp<span class="hl sym">,</span> mostFlips<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span> flips<span class="hl sym">,</span> perm0

n <span class="hl sym">=</span> <span class="hl kwd">val</span><span class="hl sym">(</span>command<span class="hl kwb">$)</span>
<span class="hl kwa">if</span> n <span class="hl sym">&lt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span> n <span class="hl sym">=</span> <span class="hl num">7</span>

m <span class="hl sym">=</span> n <span class="hl sym">-</span> <span class="hl num">1</span>
<span class="hl kwa">for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> m <span class="hl sym">:</span> <span class="hl kwd">permp</span><span class="hl sym">(</span>i<span class="hl sym">) =</span> i <span class="hl sym">:</span> <span class="hl kwa">next</span> i
r <span class="hl sym">=</span> n
<span class="hl kwa">do</span>
  <span class="hl kwa">if</span> print30 <span class="hl sym">&lt;</span> <span class="hl num">30</span> <span class="hl kwa">then</span>
     <span class="hl kwa">for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> m
        <span class="hl kwd">printf</span> <span class="hl sym">(</span><span class="hl str">&quot;%d&quot;</span><span class="hl sym">,</span><span class="hl kwd">permp</span><span class="hl sym">(</span>i<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">)</span>
     <span class="hl kwa">next</span> i
     <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%c&quot;</span><span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">)</span>
     print30 <span class="hl sym">+=</span> <span class="hl num">1</span>
  <span class="hl kwa">end if</span>
  <span class="hl kwa">while</span> r <span class="hl sym">&lt;&gt;</span> <span class="hl num">1</span>
     <span class="hl kwd">count</span><span class="hl sym">(</span>r<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">) =</span> r
     r <span class="hl sym">-=</span> <span class="hl num">1</span>
  <span class="hl kwa">wend</span>
  <span class="hl kwa">if not</span> <span class="hl sym">((</span><span class="hl kwd">permp</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)=</span><span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">or</span> <span class="hl sym">(</span><span class="hl kwd">permp</span><span class="hl sym">(</span>m<span class="hl sym">)=</span>m<span class="hl sym">))</span> <span class="hl kwa">then</span>
     <span class="hl kwa">for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> m
        <span class="hl kwd">perm</span><span class="hl sym">(</span>i<span class="hl sym">) =</span> <span class="hl kwd">permp</span><span class="hl sym">(</span>i<span class="hl sym">)</span>
     <span class="hl kwa">next</span> i
     flips <span class="hl sym">=</span> <span class="hl num">0</span>
     k <span class="hl sym">=</span> <span class="hl kwd">perm</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>
     <span class="hl kwa">do</span>
       i<span class="hl sym">=</span><span class="hl num">1</span>
       j<span class="hl sym">=</span>k<span class="hl sym">-</span><span class="hl num">1</span>
       <span class="hl kwa">while</span> i<span class="hl sym">&lt;</span>j
           temp <span class="hl sym">=</span> <span class="hl kwd">perm</span><span class="hl sym">(</span>i<span class="hl sym">)</span>
           <span class="hl kwd">perm</span><span class="hl sym">(</span>i<span class="hl sym">)=</span> <span class="hl kwd">perm</span><span class="hl sym">(</span>j<span class="hl sym">)</span>
           <span class="hl kwd">perm</span><span class="hl sym">(</span>j<span class="hl sym">)=</span> temp
           i <span class="hl sym">+=</span> <span class="hl num">1</span>
           j <span class="hl sym">-=</span> <span class="hl num">1</span>
       <span class="hl kwa">wend</span>
       flips <span class="hl sym">+=</span> <span class="hl num">1</span>
       j<span class="hl sym">=</span><span class="hl kwd">perm</span><span class="hl sym">(</span>k<span class="hl sym">)</span>
       <span class="hl kwd">perm</span><span class="hl sym">(</span>k<span class="hl sym">)=</span>k
       k<span class="hl sym">=</span>j
     <span class="hl kwa">loop until</span> k <span class="hl sym">=</span> <span class="hl num">0</span>
     <span class="hl kwa">if</span> flips <span class="hl sym">&gt;</span> mostFlips <span class="hl kwa">then</span> mostFlips <span class="hl sym">=</span> flips
  <span class="hl kwa">end if</span>
  <span class="hl kwa">Do</span>
     <span class="hl kwa">if</span> r <span class="hl sym">=</span> n <span class="hl kwa">then</span>
        <span class="hl kwd">printf</span> <span class="hl sym">(</span><span class="hl str">&quot;Pfannkuchen(%d) = %d%c&quot;</span><span class="hl sym">,</span>n<span class="hl sym">,</span> mostflips<span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">)</span>
        <span class="hl kwa">end</span>
     <span class="hl kwa">else</span>
        perm0 <span class="hl sym">=</span> <span class="hl kwd">permp</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>
        i <span class="hl sym">=</span> <span class="hl num">0</span>
        k<span class="hl sym">=</span><span class="hl num">1</span>
        <span class="hl kwa">while</span> i <span class="hl sym">&lt;</span> r
           <span class="hl kwd">permp</span><span class="hl sym">(</span>i<span class="hl sym">) =</span> <span class="hl kwd">permp</span><span class="hl sym">(</span>k<span class="hl sym">)</span>
           i<span class="hl sym">+=</span> <span class="hl num">1</span>
           k<span class="hl sym">+=</span><span class="hl num">1</span>
        <span class="hl kwa">wend</span>
        <span class="hl kwd">permp</span><span class="hl sym">(</span>r<span class="hl sym">) =</span> perm0
        <span class="hl kwd">count</span><span class="hl sym">(</span>r<span class="hl sym">) -=</span> <span class="hl num">1</span>
        <span class="hl kwa">if</span> <span class="hl kwd">count</span><span class="hl sym">(</span>r<span class="hl sym">) &gt;</span> <span class="hl num">0</span> <span class="hl kwa">then exit Do</span>
        r <span class="hl sym">+=</span> <span class="hl num">1</span>
     <span class="hl kwa">end if</span>
  <span class="hl kwa">Loop</span>
<span class="hl kwa">loop while</span> <span class="hl num">1</span>
