<span class="hl slc">% ----------------------------------------------------------------------</span>
<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">% This is a modified version of the orignal 'nsieve.swiprolog'</span>
<span class="hl slc">% submission. Whilst that particular implementation made quite heavy</span>
<span class="hl slc">% demands of the global stack [owing to the creation of a very large</span>
<span class="hl slc">% array], the current version:</span>
<span class="hl slc">%</span>
<span class="hl slc">% * Requires an array approximately 1/32 the size since each array slot</span>
<span class="hl slc">%   stores 32 encoded values [as opposed to a single value]</span>
<span class="hl slc">%</span>
<span class="hl slc">% * As expected, utilises bit twiddling for encoding / decoding values</span>
<span class="hl slc">%</span>
<span class="hl slc">% In short, while memory use is curbed, runtime suffers [a trading of</span>
<span class="hl slc">% speed for a saving in space as they say]. At a value of N = 9 runtime</span>
<span class="hl slc">% *should* be within the timeout period, but probably not by much</span>
<span class="hl slc">%</span>
<span class="hl slc">% Contributed by Anthony Borla</span>
<span class="hl slc">% Modified to run with YAP by Glendon Holst</span>
<span class="hl slc">% ----------------------------------------------------------------------</span>

<span class="hl sym">:-</span> yap_flag<span class="hl sym">(</span>unknown<span class="hl sym">,</span>error<span class="hl sym">)</span>.

<span class="hl sym">:-</span> initialization<span class="hl sym">(</span>main<span class="hl sym">)</span>.

main <span class="hl sym">:-</span>
  unix<span class="hl sym">(</span> argv<span class="hl sym">([</span>H<span class="hl sym">|</span>_<span class="hl sym">]) ),</span> number_atom<span class="hl sym">(</span>N<span class="hl sym">,</span>H<span class="hl sym">),</span>

  N1 <span class="hl kwa">is</span> <span class="hl num">10000</span> <span class="hl sym">&lt;&lt;</span> N<span class="hl sym">,</span>
  N2 <span class="hl kwa">is</span> <span class="hl num">10000</span> <span class="hl sym">&lt;&lt; (</span>N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">),</span>
  N3 <span class="hl kwa">is</span> <span class="hl num">10000</span> <span class="hl sym">&lt;&lt; (</span>N <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">),</span>

  calcAndshowSieve<span class="hl sym">(</span>N1<span class="hl sym">),</span>
  calcAndshowSieve<span class="hl sym">(</span>N2<span class="hl sym">),</span>
  calcAndshowSieve<span class="hl sym">(</span>N3<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

calcAndshowSieve<span class="hl sym">(</span>N<span class="hl sym">) :-</span>
   make_array<span class="hl sym">(</span>ns<span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl num">0xffffffff</span><span class="hl sym">,</span> Array<span class="hl sym">),</span>
   nsieve<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span> Array<span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> R<span class="hl sym">),</span>
   format<span class="hl sym">(</span><span class="hl str">'Primes up to~t~w~21|~t~w~30|~n'</span><span class="hl sym">, [</span>N<span class="hl sym">,</span> R<span class="hl sym">])</span>.

<span class="hl slc">% ------------------------------- %</span>

nsieve<span class="hl sym">(</span>ASize<span class="hl sym">,</span> _<span class="hl sym">,</span> ASize<span class="hl sym">,</span> R<span class="hl sym">,</span> R<span class="hl sym">) :- !</span>.

nsieve<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">,</span> ASize<span class="hl sym">,</span> A<span class="hl sym">,</span> R<span class="hl sym">) :-</span>
   <span class="hl sym">(</span>
      is_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">) -&gt;</span>
      clear_sieve<span class="hl sym">(</span>N<span class="hl sym">,</span> N<span class="hl sym">,</span> Array<span class="hl sym">,</span> ASize<span class="hl sym">),</span> A1 <span class="hl kwa">is</span> A <span class="hl sym">+</span> <span class="hl num">1</span>
   <span class="hl sym">;</span>
      A1 <span class="hl kwa">is</span> A
   <span class="hl sym">),</span>
   N1 <span class="hl kwa">is</span> N <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">, !,</span>
   nsieve<span class="hl sym">(</span>N1<span class="hl sym">,</span> Array<span class="hl sym">,</span> ASize<span class="hl sym">,</span> A1<span class="hl sym">,</span> R<span class="hl sym">)</span>.

<span class="hl slc">% ------------- %</span>

clear_sieve<span class="hl sym">(</span>N<span class="hl sym">,</span> M<span class="hl sym">,</span> Array<span class="hl sym">,</span> ASize<span class="hl sym">) :-</span>
   N1 <span class="hl kwa">is</span> N <span class="hl sym">+</span> M<span class="hl sym">,</span> clear_sieve_<span class="hl sym">(</span>N1<span class="hl sym">,</span> M<span class="hl sym">,</span> Array<span class="hl sym">,</span> ASize<span class="hl sym">)</span>.

<span class="hl slc">% ------------- %</span>

clear_sieve_<span class="hl sym">(</span>N<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> ASize<span class="hl sym">) :-</span> ASize <span class="hl sym">&lt;</span> N<span class="hl sym">, !</span>.

clear_sieve_<span class="hl sym">(</span>N<span class="hl sym">,</span> M<span class="hl sym">,</span> Array<span class="hl sym">,</span> ASize<span class="hl sym">) :-</span>
   clear_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">),</span>
   N1 <span class="hl kwa">is</span> N <span class="hl sym">+</span> M<span class="hl sym">, !,</span> clear_sieve_<span class="hl sym">(</span>N1<span class="hl sym">,</span> M<span class="hl sym">,</span> Array<span class="hl sym">,</span> ASize<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

array_slots<span class="hl sym">(</span>N<span class="hl sym">,</span> Slots<span class="hl sym">) :-</span> Slots <span class="hl kwa">is</span> <span class="hl sym">((</span>N <span class="hl sym">+</span> <span class="hl num">15</span><span class="hl sym">) &gt;&gt;</span> <span class="hl num">4</span><span class="hl sym">) +</span> <span class="hl num">1</span>.

<span class="hl slc">% ------------- %</span>

make_array<span class="hl sym">(</span>Name<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">) :-</span>
   array_slots<span class="hl sym">(</span>N<span class="hl sym">,</span> Slots<span class="hl sym">),</span>
   <span class="hl kwb">functor</span><span class="hl sym">(</span>Array<span class="hl sym">,</span> Name<span class="hl sym">,</span> Slots<span class="hl sym">),</span>
   fill_array<span class="hl sym">(</span>Slots<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">)</span>.

<span class="hl slc">% ------------- %</span>

fill_array<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !</span>.

fill_array<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">) :-</span>
   setarg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">,</span> V<span class="hl sym">),</span> N1 <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span>
   fill_array<span class="hl sym">(</span>N1<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">)</span>.

<span class="hl slc">% ------------- %</span>

clear_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">) :-</span>
   Idx <span class="hl kwa">is</span> <span class="hl sym">(</span>N <span class="hl sym">&gt;&gt;</span> <span class="hl num">4</span><span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">,</span> Value <span class="hl kwa">is</span> <span class="hl sym">(</span><span class="hl num">1</span> <span class="hl sym">&lt;&lt; (</span>N <span class="hl sym">/</span>\ <span class="hl num">15</span><span class="hl sym">)),</span>
   <span class="hl kwb">arg</span><span class="hl sym">(</span>Idx<span class="hl sym">,</span> Array<span class="hl sym">,</span> OldValue<span class="hl sym">),</span>
   Complement <span class="hl kwa">is</span> \ Value<span class="hl sym">,</span>
   NewValue <span class="hl kwa">is</span> OldValue <span class="hl sym">/</span>\ Complement<span class="hl sym">,</span>
   setarg<span class="hl sym">(</span>Idx<span class="hl sym">,</span> Array<span class="hl sym">,</span> NewValue<span class="hl sym">)</span>.

is_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">) :-</span>
   Idx <span class="hl kwa">is</span> <span class="hl sym">(</span>N <span class="hl sym">&gt;&gt;</span> <span class="hl num">4</span><span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">,</span> Value <span class="hl kwa">is</span> <span class="hl num">1</span> <span class="hl sym">&lt;&lt; (</span>N <span class="hl sym">/</span>\ <span class="hl num">15</span><span class="hl sym">),</span>
   <span class="hl kwb">arg</span><span class="hl sym">(</span>Idx<span class="hl sym">,</span> Array<span class="hl sym">,</span> OldValue<span class="hl sym">),</span>
   CurrentValue <span class="hl kwa">is</span> OldValue <span class="hl sym">/</span>\ Value<span class="hl sym">,</span>
   CurrentValue <span class="hl sym">=</span>\= <span class="hl num">0</span>.

<span class="hl slc">% ------------------------------- %</span>
