<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Xavier Oswald and Pierre-Alexandre Voye</span>
<span class="hl com">*/</span>

Section Header

  <span class="hl sym">+</span> name <span class="hl sym">:=</span> NSIEVE<span class="hl sym">;</span>

Section Inherit

  <span class="hl sym">-</span> parent_any<span class="hl sym">:</span>OBJECT <span class="hl sym">:=</span> OBJECT<span class="hl sym">;</span>

Section Private

  <span class="hl sym">-</span> string_tmp<span class="hl sym">:</span>STRING <span class="hl sym">:=</span> STRING.create <span class="hl num">64</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> flags<span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>BOOLEAN<span class="hl sym">];</span>

  <span class="hl sym">-</span> primes m<span class="hl sym">:</span>INTEGER <span class="hl sym">&lt;-</span>
  <span class="hl sym">( +</span> result<span class="hl sym">,</span>j<span class="hl sym">,</span>i<span class="hl sym">,</span>tmp<span class="hl sym">:</span> INTEGER<span class="hl sym">;</span>

    flags.fast_resize m<span class="hl sym">;</span>
    flags.set_all_with TRUE<span class="hl sym">;</span>

    tmp <span class="hl sym">:=</span> m <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
    i   <span class="hl sym">:=</span> <span class="hl num">2</span><span class="hl sym">;</span>
    <span class="hl sym">{</span>i <span class="hl sym">&lt;=</span> tmp<span class="hl sym">}</span>.while_do <span class="hl sym">{</span>
      <span class="hl sym">(</span>flags.item i<span class="hl sym">)</span>.if <span class="hl sym">{</span>
        j <span class="hl sym">:=</span> i <span class="hl sym">&lt;&lt;</span> <span class="hl num">1</span><span class="hl sym">;</span>
        <span class="hl sym">{</span>j <span class="hl sym">&lt;=</span> tmp<span class="hl sym">}</span>.while_do <span class="hl sym">{</span>
          flags.put FALSE to j<span class="hl sym">;</span>
          j <span class="hl sym">:=</span> j <span class="hl sym">+</span> i<span class="hl sym">;</span>
        <span class="hl sym">};</span>
        result <span class="hl sym">:=</span> result <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl sym">};</span>
    i <span class="hl sym">:=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">};</span>

    <span class="hl str">&quot;Primes up to &quot;</span>.print<span class="hl sym">;</span>
    string_tmp.clear<span class="hl sym">;</span>
    m.append_in string_tmp format <span class="hl num">8</span><span class="hl sym">;</span>
    string_tmp.add_last <span class="hl str">' '</span><span class="hl sym">;</span>
    result.append_in string_tmp format <span class="hl num">8</span><span class="hl sym">;</span>
    string_tmp.add_last <span class="hl str">'\n'</span><span class="hl sym">;</span>
    string_tmp.print<span class="hl sym">;</span>
  <span class="hl sym">);</span>

Section Public

  <span class="hl sym">-</span> main <span class="hl sym">&lt;-</span>
  <span class="hl sym">( +</span> n<span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>
    <span class="hl sym">+</span> m<span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>

    n <span class="hl sym">:=</span> COMMAND_LINE.item <span class="hl num">1</span>.to_integer<span class="hl sym">;</span>
    m <span class="hl sym">:=</span> <span class="hl num">10</span>_000 <span class="hl sym">* (</span><span class="hl num">1</span> <span class="hl sym">&lt;&lt;</span> n<span class="hl sym">);</span>
    flags <span class="hl sym">:=</span> FAST_ARRAY<span class="hl sym">[</span>BOOLEAN<span class="hl sym">]</span>.create_with_capacity m<span class="hl sym">;</span>
    primes m<span class="hl sym">;</span>
    m <span class="hl sym">:=</span> m <span class="hl sym">&gt;&gt;</span> <span class="hl num">1</span><span class="hl sym">;</span>
    primes m<span class="hl sym">;</span>
    m <span class="hl sym">:=</span> m <span class="hl sym">&gt;&gt;</span> <span class="hl num">1</span><span class="hl sym">;</span>
    primes m<span class="hl sym">;</span>
  <span class="hl sym">);</span>
