<span class="slc">' The Computer Language Shootout</span>
<span class="slc">' http://shootout.alioth.debian.org/</span>
<span class="slc">' contributed by Antoni Gual</span>

option explicit
option escape
#include <span class="str">&quot;crt.bi&quot;</span>
#define iter <span class="num">50</span>

<span class="kwa">dim</span> shared w<span class="sym">,</span>h
const  limit<span class="sym">=</span><span class="num">4.0</span>
<span class="kwa">function</span> calcmandel<span class="sym">(</span><span class="kwa">byval</span> x<span class="sym">,</span><span class="kwa">byval</span> y<span class="sym">)</span>
  <span class="kwa">dim as</span> double zr<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span> zi<span class="sym">=</span><span class="num">0.0</span><span class="sym">,</span> cr<span class="sym">,</span> ci<span class="sym">,</span> tr<span class="sym">,</span> ti
  <span class="kwa">dim</span> ii
  cr <span class="sym">= (</span><span class="num">2.0</span><span class="sym">*</span>x<span class="sym">/</span>w <span class="sym">-</span> <span class="num">1.5</span><span class="sym">) :</span> ci<span class="sym">=(</span><span class="num">2.0</span><span class="sym">*</span>y<span class="sym">/</span>h <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span>
  <span class="kwa">for</span> ii <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> iter<span class="sym">-</span><span class="num">1</span>
    zi <span class="sym">=</span> <span class="num">2.0</span><span class="sym">*</span>zr<span class="sym">*</span>zi <span class="sym">+</span> ci
    zr <span class="sym">=</span> tr <span class="sym">-</span> ti <span class="sym">+</span> cr
    tr<span class="sym">=</span>zr<span class="sym">*</span>zr <span class="sym">:</span> ti<span class="sym">=</span>zi<span class="sym">*</span>zi
    <span class="kwa">if</span> tr<span class="sym">+</span>ti <span class="sym">&gt;</span> limit <span class="kwa">then</span> return <span class="num">0</span>
  <span class="kwa">next</span>
  return <span class="sym">-</span><span class="num">1</span>
<span class="kwa">end function</span>

<span class="kwa">dim</span>  x<span class="sym">,</span> y<span class="sym">,</span>  i<span class="sym">,</span>w1<span class="sym">,</span>bb<span class="sym">,</span>i1
<span class="kwa">dim</span> b <span class="kwa">as</span> uinteger
  w <span class="sym">=</span> val<span class="sym">(</span>command$<span class="sym">)</span>
  <span class="kwa">if</span> w <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> w <span class="sym">=</span> <span class="num">300</span>
  h <span class="sym">=</span> w
  w1<span class="sym">=</span>w<span class="sym">-</span><span class="num">1</span>
  printf<span class="sym">(</span><span class="str">&quot;P4\n%d %d\n&quot;</span><span class="sym">,</span>w<span class="sym">,</span>h<span class="sym">)</span>
  <span class="slc">'</span>
  <span class="kwa">for</span> y <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> h<span class="sym">-</span><span class="num">1</span>
    <span class="kwa">for</span> x <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> w1 <span class="kwa">step</span> <span class="num">8</span>
      b<span class="sym">=</span><span class="num">0</span><span class="sym">:</span>bb<span class="sym">=&amp;</span>h80
      i1<span class="sym">=</span>iif <span class="sym">(</span>x<span class="sym">+</span><span class="num">7</span><span class="sym">&gt;</span>w1<span class="sym">,</span>w1<span class="sym">,</span>x<span class="sym">+</span><span class="num">7</span><span class="sym">)</span>
      <span class="kwa">for</span> i <span class="sym">=</span>x <span class="kwa">to</span>  i1
       b <span class="kwa">or</span><span class="sym">=</span> bb <span class="kwa">and</span> calcmandel<span class="sym">(</span>i<span class="sym">,</span>y<span class="sym">)</span>
       bb shr<span class="sym">=</span><span class="num">1</span>
      <span class="kwa">next</span>
      putchar b
    <span class="kwa">next</span>
  <span class="kwa">next</span>
<span class="kwa">end</span>

