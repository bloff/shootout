<span class="hl slc">% The Computer Language Shootout Benchmarks Game</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">% Based on work by Anthony Borla (SWI-Prolog) and Troestler Christophe (OCaml)</span>
<span class="hl slc">% Modified for Mercury by Glendon Holst</span>

<span class="hl sym">:-</span> module n_body.
<span class="hl sym">:-</span> interface.
<span class="hl sym">:-</span> import_module io.

<span class="hl sym">:-</span> pred main<span class="hl sym">(</span>io<span class="hl sym">::</span>di<span class="hl sym">,</span> io<span class="hl sym">::</span>uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

<span class="hl slc">% ----------------------------------------------------------------------</span>

<span class="hl sym">:-</span> implementation.

<span class="hl sym">:-</span> import_module list.
<span class="hl sym">:-</span> import_module bool.
<span class="hl sym">:-</span> import_module int.
<span class="hl sym">:-</span> import_module <span class="hl kwb">float</span>.
<span class="hl sym">:-</span> import_module math.
<span class="hl sym">:-</span> import_module string.

<span class="hl slc">% ----------------------------------------------------------------------</span>

<span class="hl sym">:-</span> type planet <span class="hl sym">---&gt;</span> planet<span class="hl sym">(</span> x <span class="hl sym">::</span> <span class="hl kwb">float</span><span class="hl sym">,</span> y <span class="hl sym">::</span> <span class="hl kwb">float</span><span class="hl sym">,</span> z <span class="hl sym">::</span> <span class="hl kwb">float</span><span class="hl sym">,</span>
                     vx <span class="hl sym">::</span> <span class="hl kwb">float</span><span class="hl sym">,</span> vy <span class="hl sym">::</span> <span class="hl kwb">float</span><span class="hl sym">,</span> vz <span class="hl sym">::</span> <span class="hl kwb">float</span><span class="hl sym">,</span>
                     mass <span class="hl sym">::</span> <span class="hl kwb">float</span><span class="hl sym">)</span>.

<span class="hl slc">% ----------------------------------------------------------------------</span>

main<span class="hl sym">(!</span>IO<span class="hl sym">) :-</span>
   io.command_line_arguments<span class="hl sym">(</span>Args<span class="hl sym">, !</span>IO<span class="hl sym">),</span>
   <span class="hl sym">(</span>
      if
         Args <span class="hl sym">= [</span>AString<span class="hl sym">|</span>_<span class="hl sym">],</span>
         string.to_int<span class="hl sym">(</span>string.strip<span class="hl sym">(</span>AString<span class="hl sym">),</span> Aint<span class="hl sym">)</span>
      then
         N <span class="hl sym">=</span> Aint
      else
         N <span class="hl kwa">is</span> <span class="hl num">20000000</span>
   <span class="hl sym">),</span>

   make_bodies<span class="hl sym">(</span>Bodies0<span class="hl sym">),</span>

   EnergyStart <span class="hl sym">=</span> energy<span class="hl sym">(</span>Bodies0<span class="hl sym">),</span>
   io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>EnergyStart<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
   loop_advance<span class="hl sym">(</span>N<span class="hl sym">,</span> <span class="hl num">0.01</span><span class="hl sym">,</span> Bodies0<span class="hl sym">,</span> Bodies<span class="hl sym">),</span>
   EnergyAfter <span class="hl sym">=</span> energy<span class="hl sym">(</span>Bodies<span class="hl sym">),</span>
   io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>EnergyAfter<span class="hl sym">)], !</span>IO<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

<span class="hl sym">:-</span> func energy<span class="hl sym">(</span>list<span class="hl sym">(</span>planet<span class="hl sym">)) =</span> <span class="hl kwb">float</span>.
<span class="hl sym">:-</span> func energy_<span class="hl sym">(</span>list<span class="hl sym">(</span>planet<span class="hl sym">),</span> <span class="hl kwb">float</span><span class="hl sym">) =</span> <span class="hl kwb">float</span>.
<span class="hl sym">:-</span> func energy_diff_<span class="hl sym">(</span>planet<span class="hl sym">,</span> list<span class="hl sym">(</span>planet<span class="hl sym">),</span> <span class="hl kwb">float</span><span class="hl sym">) =</span> <span class="hl kwb">float</span>.

energy<span class="hl sym">(</span>Bodies<span class="hl sym">) =</span> energy_<span class="hl sym">(</span>Bodies<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">)</span>.

energy_<span class="hl sym">(</span>Bodies<span class="hl sym">,</span> Energy0<span class="hl sym">) =</span> Result <span class="hl sym">:-</span>
<span class="hl sym">(</span>
   Bodies <span class="hl sym">= [</span>B <span class="hl sym">|</span> Bs<span class="hl sym">] -&gt;</span>
   Energy1 <span class="hl sym">=</span> Energy0 <span class="hl sym">+</span> <span class="hl num">0.5</span> <span class="hl sym">*</span> B^mass <span class="hl sym">* (</span>B^vx <span class="hl sym">*</span> B^vx <span class="hl sym">+</span> B^vy <span class="hl sym">*</span> B^vy <span class="hl sym">+</span> B^vz <span class="hl sym">*</span> B^vz<span class="hl sym">),</span>
   Energy2 <span class="hl sym">=</span> energy_diff_<span class="hl sym">(</span>B<span class="hl sym">,</span> Bs<span class="hl sym">,</span> Energy1<span class="hl sym">),</span>
   Result <span class="hl sym">=</span> energy_<span class="hl sym">(</span>Bs<span class="hl sym">,</span> Energy2<span class="hl sym">)</span>
<span class="hl sym">;</span>
   Result <span class="hl sym">=</span> Energy0
<span class="hl sym">)</span>.

energy_diff_<span class="hl sym">(</span>Planet<span class="hl sym">,</span> Bodies<span class="hl sym">,</span> Energy0<span class="hl sym">) =</span> Result <span class="hl sym">:-</span>
<span class="hl sym">(</span>
   Bodies <span class="hl sym">= [</span>B <span class="hl sym">|</span> Bs<span class="hl sym">] -&gt;</span>
   Dx <span class="hl sym">=</span> Planet^x <span class="hl sym">-</span> B^x<span class="hl sym">,</span>
   Dy <span class="hl sym">=</span> Planet^y <span class="hl sym">-</span> B^y<span class="hl sym">,</span>
   Dz <span class="hl sym">=</span> Planet^z <span class="hl sym">-</span> B^z<span class="hl sym">,</span>
   Distance <span class="hl sym">=</span> <span class="hl kwb">sqrt</span><span class="hl sym">(</span>Dx <span class="hl sym">*</span> Dx <span class="hl sym">+</span> Dy <span class="hl sym">*</span> Dy <span class="hl sym">+</span> Dz <span class="hl sym">*</span> Dz<span class="hl sym">),</span>
   Energy1 <span class="hl sym">=</span> Energy0 <span class="hl sym">- ((</span>Planet^mass <span class="hl sym">*</span> B^mass<span class="hl sym">) /</span> Distance<span class="hl sym">),</span>
   Result <span class="hl sym">=</span> energy_diff_<span class="hl sym">(</span>Planet<span class="hl sym">,</span> Bs<span class="hl sym">,</span> Energy1<span class="hl sym">)</span>
<span class="hl sym">;</span>
   Result <span class="hl sym">=</span> Energy0
<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

<span class="hl sym">:-</span> pred advance<span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">::</span>in<span class="hl sym">,</span> list<span class="hl sym">(</span>planet<span class="hl sym">)::</span>in<span class="hl sym">,</span> list<span class="hl sym">(</span>planet<span class="hl sym">)::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.
<span class="hl sym">:-</span> pred advance_<span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">::</span>in<span class="hl sym">,</span> planet<span class="hl sym">::</span>in<span class="hl sym">,</span> planet<span class="hl sym">::</span>out<span class="hl sym">,</span>
                 list<span class="hl sym">(</span>planet<span class="hl sym">)::</span>in<span class="hl sym">,</span> list<span class="hl sym">(</span>planet<span class="hl sym">)::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

advance<span class="hl sym">(</span>Dt<span class="hl sym">,</span> Bodies0<span class="hl sym">,</span> Bodies<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   Bodies0 <span class="hl sym">= [</span>B0 <span class="hl sym">|</span> B0s<span class="hl sym">] -&gt;</span>
   advance_<span class="hl sym">(</span>Dt<span class="hl sym">,</span> B0<span class="hl sym">,</span> B1<span class="hl sym">,</span> B0s<span class="hl sym">,</span> B1s<span class="hl sym">),</span>
   advance<span class="hl sym">(</span>Dt<span class="hl sym">,</span> B1s<span class="hl sym">,</span> Bs<span class="hl sym">),</span>
   B2 <span class="hl sym">= (</span>B1^x <span class="hl sym">:=</span> B1^x <span class="hl sym">+</span> Dt <span class="hl sym">*</span> B1^vx<span class="hl sym">),</span>
   B3 <span class="hl sym">= (</span>B2^y <span class="hl sym">:=</span> B2^y <span class="hl sym">+</span> Dt <span class="hl sym">*</span> B2^vy<span class="hl sym">),</span>
   B <span class="hl sym">= (</span>B3^z <span class="hl sym">:=</span> B3^z <span class="hl sym">+</span> Dt <span class="hl sym">*</span> B3^vz<span class="hl sym">),</span>
   Bodies <span class="hl sym">= [</span> B <span class="hl sym">|</span> Bs<span class="hl sym">]</span>
<span class="hl sym">;</span>
   Bodies <span class="hl sym">=</span> Bodies0
<span class="hl sym">)</span>.

advance_<span class="hl sym">(</span>Dt<span class="hl sym">,</span> Planet0<span class="hl sym">,</span> Planet<span class="hl sym">,</span> Bodies0<span class="hl sym">,</span> Bodies<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   Bodies0 <span class="hl sym">= [</span>B0 <span class="hl sym">|</span> B0s<span class="hl sym">] -&gt;</span>

   Dx <span class="hl sym">=</span> Planet0^x <span class="hl sym">-</span> B0^x<span class="hl sym">,</span>
   Dy <span class="hl sym">=</span> Planet0^y <span class="hl sym">-</span> B0^y<span class="hl sym">,</span>
   Dz <span class="hl sym">=</span> Planet0^z <span class="hl sym">-</span> B0^z<span class="hl sym">,</span>

   Dist2 <span class="hl sym">=</span> Dx <span class="hl sym">*</span> Dx <span class="hl sym">+</span> Dy <span class="hl sym">*</span> Dy <span class="hl sym">+</span> Dz <span class="hl sym">*</span> Dz<span class="hl sym">,</span>

   Mag <span class="hl sym">=</span> Dt <span class="hl sym">/ (</span>Dist2 <span class="hl sym">*</span> <span class="hl kwb">sqrt</span><span class="hl sym">(</span>Dist2<span class="hl sym">)),</span>

    Planet1 <span class="hl sym">= (</span>Planet0^vx <span class="hl sym">:=</span> Planet0^vx <span class="hl sym">-</span> Dx <span class="hl sym">*</span> B0^mass <span class="hl sym">*</span> Mag<span class="hl sym">),</span>
    Planet2 <span class="hl sym">= (</span>Planet1^vy <span class="hl sym">:=</span> Planet1^vy <span class="hl sym">-</span> Dy <span class="hl sym">*</span> B0^mass <span class="hl sym">*</span> Mag<span class="hl sym">),</span>
    Planet3 <span class="hl sym">= (</span>Planet2^vz <span class="hl sym">:=</span> Planet2^vz <span class="hl sym">-</span> Dz <span class="hl sym">*</span> B0^mass <span class="hl sym">*</span> Mag<span class="hl sym">),</span>

   B1 <span class="hl sym">= (</span>B0^vx <span class="hl sym">:=</span> B0^vx <span class="hl sym">+</span> Dx <span class="hl sym">*</span> Planet3^mass <span class="hl sym">*</span> Mag<span class="hl sym">),</span>
   B2 <span class="hl sym">= (</span>B1^vy <span class="hl sym">:=</span> B1^vy <span class="hl sym">+</span> Dy <span class="hl sym">*</span> Planet3^mass <span class="hl sym">*</span> Mag<span class="hl sym">),</span>
   B <span class="hl sym">= (</span>B2^vz <span class="hl sym">:=</span> B2^vz <span class="hl sym">+</span> Dz <span class="hl sym">*</span> Planet3^mass <span class="hl sym">*</span> Mag<span class="hl sym">),</span>

   advance_<span class="hl sym">(</span>Dt<span class="hl sym">,</span> Planet3<span class="hl sym">,</span> Planet<span class="hl sym">,</span> B0s<span class="hl sym">,</span> Bs<span class="hl sym">),</span>

   Bodies <span class="hl sym">= [</span>B <span class="hl sym">|</span> Bs<span class="hl sym">]</span>
<span class="hl sym">;</span>
   Planet <span class="hl sym">=</span> Planet0<span class="hl sym">,</span>
   Bodies0 <span class="hl sym">=</span> Bodies
<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

<span class="hl sym">:-</span> pred loop_advance<span class="hl sym">(</span>int<span class="hl sym">::</span>in<span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">::</span>in<span class="hl sym">,</span> list<span class="hl sym">(</span>planet<span class="hl sym">)::</span>in<span class="hl sym">,</span> list<span class="hl sym">(</span>planet<span class="hl sym">)::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

loop_advance<span class="hl sym">(</span>N<span class="hl sym">,</span> Dt<span class="hl sym">,</span> Bodies0<span class="hl sym">,</span> Bodies<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   N <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
   advance<span class="hl sym">(</span>Dt<span class="hl sym">,</span> Bodies0<span class="hl sym">,</span> Bodies1<span class="hl sym">),</span>
   loop_advance<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Dt<span class="hl sym">,</span> Bodies1<span class="hl sym">,</span> Bodies<span class="hl sym">)</span>
<span class="hl sym">;</span>
   Bodies <span class="hl sym">=</span> Bodies0
<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

<span class="hl sym">:-</span> type vector3f <span class="hl sym">== {</span><span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">}</span>.

<span class="hl sym">:-</span> pred make_bodies<span class="hl sym">(</span>list<span class="hl sym">(</span>planet<span class="hl sym">)::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

make_bodies<span class="hl sym">(</span>Bodies<span class="hl sym">) :-</span>
   SolarMass <span class="hl sym">=</span> <span class="hl num">3.9478417604357432000e+01</span><span class="hl sym">,</span>
   DaysPerYear <span class="hl sym">=</span> <span class="hl num">365.24</span><span class="hl sym">,</span>
   Jupiter <span class="hl sym">=</span> planet<span class="hl sym">(</span>
      <span class="hl num">4.84143144246472090e+00</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">1.16032004402742839e+00</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">1.03622044471123109e-01</span><span class="hl sym">,</span>
      <span class="hl num">1.66007664274403694e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">7.69901118419740425e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
     <span class="hl sym">-</span><span class="hl num">6.90460016972063023e-05</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">9.54791938424326609e-04</span> <span class="hl sym">*</span> SolarMass<span class="hl sym">),</span>

   Saturn <span class="hl sym">=</span> planet<span class="hl sym">(</span>
      <span class="hl num">8.34336671824457987e+00</span><span class="hl sym">,</span>
      <span class="hl num">4.12479856412430479e+00</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">4.03523417114321381e-01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.76742510726862411e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">4.99852801234917238e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">2.30417297573763929e-05</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">2.85885980666130812e-04</span> <span class="hl sym">*</span> SolarMass<span class="hl sym">),</span>

   Uranus <span class="hl sym">=</span> planet<span class="hl sym">(</span>
      <span class="hl num">1.28943695621391310e+01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">1.51111514016986312e+01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.23307578892655734e-01</span><span class="hl sym">,</span>
      <span class="hl num">2.96460137564761618e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">2.37847173959480950e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.96589568540237556e-05</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">4.36624404335156298e-05</span> <span class="hl sym">*</span> SolarMass<span class="hl sym">),</span>

   Neptune <span class="hl sym">=</span> planet<span class="hl sym">(</span>
      <span class="hl num">1.53796971148509165e+01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.59193146099879641e+01</span><span class="hl sym">,</span>
      <span class="hl num">1.79258772950371181e-01</span><span class="hl sym">,</span>
      <span class="hl num">2.68067772490389322e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">1.62824170038242295e-03</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">9.51592254519715870e-05</span> <span class="hl sym">*</span> DaysPerYear<span class="hl sym">,</span>
      <span class="hl num">5.15138902046611451e-05</span> <span class="hl sym">*</span> SolarMass<span class="hl sym">),</span>

   Planets <span class="hl sym">= [</span>Jupiter<span class="hl sym">,</span> Saturn<span class="hl sym">,</span> Uranus<span class="hl sym">,</span> Neptune<span class="hl sym">],</span>

   <span class="hl sym">{</span>Px<span class="hl sym">,</span> Py<span class="hl sym">,</span> Pz<span class="hl sym">} =</span> offset_momentum<span class="hl sym">(</span>Planets<span class="hl sym">),</span>

   Sun <span class="hl sym">=</span> planet<span class="hl sym">(</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span>
                 Px <span class="hl sym">/</span> SolarMass<span class="hl sym">,</span> Py <span class="hl sym">/</span> SolarMass<span class="hl sym">,</span> Pz <span class="hl sym">/</span> SolarMass<span class="hl sym">,</span> SolarMass<span class="hl sym">),</span>

   Bodies <span class="hl sym">= [</span>Sun <span class="hl sym">|</span> Planets<span class="hl sym">]</span>.

<span class="hl slc">% ------------------------------- %</span>

<span class="hl sym">:-</span> func offset_momentum<span class="hl sym">(</span>list<span class="hl sym">(</span>planet<span class="hl sym">)) =</span> vector3f.

offset_momentum<span class="hl sym">(</span>Bodies<span class="hl sym">) =</span> offset_momentum_<span class="hl sym">(</span>Bodies<span class="hl sym">, {</span><span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">})</span>.

<span class="hl sym">:-</span> func offset_momentum_<span class="hl sym">(</span>list<span class="hl sym">(</span>planet<span class="hl sym">),</span> vector3f<span class="hl sym">) =</span> vector3f.

offset_momentum_<span class="hl sym">(</span>Bodies<span class="hl sym">,</span> Acc<span class="hl sym">) =</span> Result <span class="hl sym">:-</span>
<span class="hl sym">(</span>
   Bodies <span class="hl sym">= [</span>P <span class="hl sym">|</span> Planets<span class="hl sym">] -&gt;</span>
   Acc <span class="hl sym">= {</span>Px<span class="hl sym">,</span> Py<span class="hl sym">,</span> Pz<span class="hl sym">},</span>
   Result <span class="hl sym">=</span> offset_momentum_<span class="hl sym">(</span>Planets<span class="hl sym">,</span>
      <span class="hl sym">{</span>Px <span class="hl sym">- (</span>P^vx <span class="hl sym">*</span> P^mass<span class="hl sym">),</span> Py <span class="hl sym">- (</span>P^vy <span class="hl sym">*</span> P^mass<span class="hl sym">),</span> Pz <span class="hl sym">- (</span>P^vz <span class="hl sym">*</span> P^mass<span class="hl sym">)})</span>
<span class="hl sym">;</span>
   Result <span class="hl sym">=</span> Acc
<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>
