<span class="hl slc">!!! The Computer Language Benchmarks Game</span>
<span class="hl slc">!!!   http://shootout.alioth.debian.org/</span>
<span class="hl slc">!!!</span>
<span class="hl slc">!!!      contributed by George R. Gonzalez</span>
<span class="hl slc">!!!</span>

program mandelbrot
    <span class="hl kwa">IMPLICIT NONE</span>
    <span class="hl kwb">INTEGER</span><span class="hl sym">,</span> <span class="hl kwa">PARAMETER</span>                      <span class="hl sym">::</span> WantedPrecision <span class="hl sym">=</span> <span class="hl num">8</span><span class="hl sym">,</span> Iterations <span class="hl sym">=</span> <span class="hl num">50</span>
    <span class="hl kwb">INTEGER</span>                                 <span class="hl sym">::</span> w<span class="hl sym">,</span> h<span class="hl sym">,</span>   Len<span class="hl sym">,</span>   i
    <span class="hl kwb">INTEGER</span>                                 <span class="hl sym">::</span> y<span class="hl sym">,</span> x<span class="hl sym">,</span> LenOut<span class="hl sym">,</span> row
    <span class="hl kwb">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> limit<span class="hl sym">,</span> limit2
    <span class="hl kwb">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> rx<span class="hl sym">,</span> ry<span class="hl sym">,</span> rw<span class="hl sym">,</span> rh
    <span class="hl kwb">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Tr<span class="hl sym">,</span> Ti
    <span class="hl kwb">REAL</span><span class="hl sym">(</span> WantedPrecision <span class="hl sym">)                 ::</span> zero<span class="hl sym">,</span> one<span class="hl sym">,</span> v1p5<span class="hl sym">,</span> two
    <span class="hl kwb">CHARACTER</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">)                           ::</span> NUM
    <span class="hl kwb">INTEGER</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> ALLOCATABLE<span class="hl sym">,</span> <span class="hl kwa">DIMENSION</span><span class="hl sym">( : ) ::</span> OUTA
    <span class="hl kwb">INTEGER</span>                                 <span class="hl sym">::</span> OUTP<span class="hl sym">,</span> OUTB<span class="hl sym">,</span> OutUnit
    <span class="hl kwb">INTEGER</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> ALLOCATABLE<span class="hl sym">,</span> <span class="hl kwa">DIMENSION</span><span class="hl sym">( : ) ::</span> OutBuf
    <span class="hl kwb">INTEGER</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)                              ::</span> B
    <span class="hl kwb">LOGICAL</span>                                 <span class="hl sym">::</span> Ans
    <span class="hl kwa">CONTINUE</span>
    OutUnit <span class="hl sym">=</span> <span class="hl num">6</span>
    Call GetArg<span class="hl sym">(</span> <span class="hl num">1</span><span class="hl sym">,</span> NUM <span class="hl sym">)</span>
    <span class="hl kwa">READ</span><span class="hl sym">(</span> NUM<span class="hl sym">, *,</span> <span class="hl kwa">END</span> <span class="hl sym">=</span> <span class="hl num">100</span> <span class="hl sym">)</span> w<span class="hl sym">;</span>  h <span class="hl sym">=</span> w<span class="hl sym">;</span>    rw <span class="hl sym">=</span> w<span class="hl sym">;</span> rh <span class="hl sym">=</span> h
    Len <span class="hl sym">=</span> w <span class="hl sym">*</span> h
    ALLOCATE<span class="hl sym">(</span> OUTA <span class="hl sym">(</span> Len <span class="hl sym">) )</span>
    OUTA <span class="hl sym">=</span> <span class="hl num">0</span>
    OUTB <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
    limit <span class="hl sym">=</span> <span class="hl num">2.0</span><span class="hl sym">;</span> limit2 <span class="hl sym">=</span> limit <span class="hl sym">*</span> limit
    <span class="hl kwa">IF</span><span class="hl sym">(</span> w <span class="hl sym">&lt;</span> <span class="hl num">1000</span> <span class="hl sym">)</span> <span class="hl kwa">THEN</span>
        <span class="hl kwa">WRITE</span><span class="hl sym">(</span> UNIT <span class="hl sym">=</span> OutUnit<span class="hl sym">,</span> FMT <span class="hl sym">=</span> <span class="hl str">&quot;( 'P4', /, I3, 1X, I3 )&quot;</span> <span class="hl sym">)</span> w<span class="hl sym">,</span> h
    <span class="hl kwa">ELSE</span>
        <span class="hl kwa">WRITE</span><span class="hl sym">(</span> UNIT <span class="hl sym">=</span> OutUnit<span class="hl sym">,</span> FMT <span class="hl sym">=</span> <span class="hl str">&quot;( 'P4', /, I4, 1X, I4 )&quot;</span> <span class="hl sym">)</span> w<span class="hl sym">,</span> h
    <span class="hl kwa">ENDIF</span>

    <span class="hl kwa">DO</span> y <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>h<span class="hl sym">-</span><span class="hl num">1</span>
        ry <span class="hl sym">=</span> y

        <span class="hl kwa">DO</span> x <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>w<span class="hl sym">-</span><span class="hl num">1</span>
            rx <span class="hl sym">=</span> x<span class="hl sym">;</span>
            Zr <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>Zi <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>Tr <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>Ti <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
            Cr <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> rx <span class="hl sym">/</span> rw <span class="hl sym">-</span> <span class="hl num">1.5</span>
            Ci <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> ry <span class="hl sym">/</span> rh <span class="hl sym">-</span> <span class="hl num">1.0</span>
            Ans <span class="hl sym">=</span> .TRUE.
            i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
            OUTB <span class="hl sym">=</span> OUTB <span class="hl sym">+</span> <span class="hl num">1</span>

            <span class="hl kwa">DO WHILE</span><span class="hl sym">(</span>  i <span class="hl sym">&lt;</span> Iterations   .AND.   Ans  <span class="hl sym">)</span>
                Zi    <span class="hl sym">=</span>       <span class="hl num">2.0</span> <span class="hl sym">*</span> Zr <span class="hl sym">*</span> Zi <span class="hl sym">+</span> Ci
                Zr    <span class="hl sym">=</span>       Tr <span class="hl sym">-</span> Ti <span class="hl sym">+</span> Cr
                Ti    <span class="hl sym">=</span>       Zi <span class="hl sym">*</span> Zi
                Tr    <span class="hl sym">=</span>       Zr <span class="hl sym">*</span> Zr
                i     <span class="hl sym">=</span>       i <span class="hl sym">+</span> <span class="hl num">1</span>
                Ans   <span class="hl sym">=</span>       Tr <span class="hl sym">+</span> Ti <span class="hl sym">&lt;=</span> limit2
            <span class="hl kwa">END DO</span>

            <span class="hl kwa">IF</span><span class="hl sym">(</span> Ans <span class="hl sym">)</span> OUTA<span class="hl sym">(</span> OUTB <span class="hl sym">) =</span> <span class="hl num">1</span><span class="hl sym">;</span>
          <span class="hl kwa">END DO</span>

    <span class="hl kwa">END DO</span>

   LenOut <span class="hl sym">=</span> Len <span class="hl sym">/</span> <span class="hl num">8</span> <span class="hl sym">+</span> <span class="hl num">10</span> <span class="hl sym">+</span> h<span class="hl sym">;</span>
   ALLOCATE<span class="hl sym">(</span> OutBuf<span class="hl sym">(</span> LenOut <span class="hl sym">) )</span>

   I <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span>  OUTP <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> B <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> row <span class="hl sym">=</span> <span class="hl num">0</span>

   <span class="hl kwa">DO WHILE</span><span class="hl sym">(</span> I <span class="hl sym">&lt;</span> OUTB <span class="hl sym">)</span>
      B <span class="hl sym">=</span> ISHFT<span class="hl sym">(</span> B<span class="hl sym">,</span> <span class="hl num">1</span> <span class="hl sym">) +</span> OUTA<span class="hl sym">(</span> I <span class="hl sym">)</span>
      I <span class="hl sym">=</span> I <span class="hl sym">+</span> <span class="hl num">1</span>
      row <span class="hl sym">=</span> row <span class="hl sym">+</span> <span class="hl num">1</span>
      <span class="hl kwa">IF</span><span class="hl sym">(</span> IAND<span class="hl sym">(</span> I<span class="hl sym">,</span> <span class="hl num">7</span> <span class="hl sym">) ==</span> <span class="hl num">0</span> <span class="hl sym">)</span> <span class="hl kwa">THEN</span>
         OUTP <span class="hl sym">=</span> OUTP <span class="hl sym">+</span> <span class="hl num">1</span>
         OutBuf<span class="hl sym">(</span> OUTP <span class="hl sym">) =</span> B<span class="hl sym">;</span>
         B              <span class="hl sym">=</span> <span class="hl num">0</span>
         <span class="hl kwa">ELSEIF</span><span class="hl sym">(</span>  row <span class="hl sym">&gt;=</span> w <span class="hl sym">-</span> <span class="hl num">1</span> <span class="hl sym">)</span> <span class="hl kwa">THEN</span>
              OUTP <span class="hl sym">=</span> OUTP <span class="hl sym">+</span> <span class="hl num">1</span>

              <span class="hl kwa">DO WHILE</span><span class="hl sym">(</span> IAND<span class="hl sym">(</span> I<span class="hl sym">,</span> <span class="hl num">7</span> <span class="hl sym">) /=</span> <span class="hl num">0</span> <span class="hl sym">)</span>
                 B <span class="hl sym">=</span> ISHFT<span class="hl sym">(</span> B<span class="hl sym">,</span> <span class="hl num">1</span> <span class="hl sym">)</span>
                 I <span class="hl sym">=</span> I <span class="hl sym">+</span> <span class="hl num">1</span>
              <span class="hl kwa">END DO</span>

         OutBuf<span class="hl sym">(</span> OUTP <span class="hl sym">) =</span> B<span class="hl sym">;</span>
              B              <span class="hl sym">=</span> <span class="hl num">0</span>
              row            <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwa">ENDIF</span>
   <span class="hl kwa">ENDDO</span>


   <span class="hl kwa">WRITE</span><span class="hl sym">(</span> OutUnit<span class="hl sym">,</span> FMT <span class="hl sym">=</span> <span class="hl str">&quot;(10000000A1)&quot;</span> <span class="hl sym">) (</span> OutBuf<span class="hl sym">(</span>I<span class="hl sym">),</span>I<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">,</span>OUTP <span class="hl sym">)</span>

<span class="hl num">100</span>     <span class="hl kwa">CONTINUE</span>

end program mandelbrot

