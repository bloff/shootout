<span class="str">&quot;  The Computer Language Shootout</span>
<span class="str">   http://shootout.alioth.debian.org/</span>
<span class="str">   contributed by Isaac Gouy&quot;</span><span class="sym">!</span>

<span class="sym">!</span>Shootout.Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span><span class="sym">!</span>

revcomp
   <span class="sym">|</span> stdin stdout fasta <span class="sym">|</span>
   stdin <span class="sym">:=</span> ExternalReadStream on<span class="sym">:</span>
      <span class="sym">(</span>ExternalConnection ioAccessor<span class="sym">: (</span>UnixDiskFileAccessor new handle<span class="sym">:</span> <span class="num">0</span><span class="sym">))</span>.
   stdout <span class="sym">:=</span> ExternalWriteStream on<span class="sym">:</span>
      <span class="sym">(</span>ExternalConnection ioAccessor<span class="sym">: (</span>UnixDiskFileAccessor new handle<span class="sym">:</span> <span class="num">1</span><span class="sym">))</span>.

   fasta <span class="sym">:=</span> stdin readFasta<span class="sym">:</span> <span class="str">'ONE'</span>.
   stdout writeReverseComplementFasta<span class="sym">:</span> fasta key sequence<span class="sym">:</span> fasta value.

   fasta <span class="sym">:=</span> stdin readFasta<span class="sym">:</span> <span class="str">'TWO'</span>.
   stdout writeReverseComplementFasta<span class="sym">:</span> fasta key sequence<span class="sym">:</span> fasta value.

   fasta <span class="sym">:=</span> stdin readFasta<span class="sym">:</span> <span class="str">'THREE'</span>.
   stdout writeReverseComplementFasta<span class="sym">:</span> fasta key sequence<span class="sym">:</span> fasta value.

   stdout flush.
   ^<span class="str">''</span> <span class="sym">! !</span>


<span class="sym">!</span>ExternalReadStream methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!</span>

readFasta<span class="sym">:</span> anId
   <span class="sym">|</span> idString newline buffer description line char <span class="sym">|</span>
   idString <span class="sym">:=</span> <span class="str">'&gt;'</span><span class="sym">,</span>anId.
   newline <span class="sym">:=</span> Character cr.

   <span class="str">&quot;find start of particular fasta sequence&quot;</span>
   <span class="sym">[(</span>self atEnd<span class="sym">)</span> <span class="kwa">or</span><span class="sym">: [</span>
         <span class="sym">(</span>self peek <span class="sym">= $&gt;)</span>
            ifTrue<span class="sym">: [((</span>line <span class="sym">:=</span> self upTo<span class="sym">:</span> newline<span class="sym">)</span>
               indexOfSubCollection<span class="sym">:</span> idString startingAt<span class="sym">:</span> <span class="num">1</span><span class="sym">) =</span> <span class="num">1</span><span class="sym">]</span>
            ifFalse<span class="sym">: [</span>self skipThrough<span class="sym">:</span> newline. false<span class="sym">]]</span>
      <span class="sym">]</span> whileFalse.

   <span class="str">&quot;line-by-line read - it would be a lot faster to block read&quot;</span>
   description <span class="sym">:=</span> line.
   buffer <span class="sym">:=</span> ReadWriteStream on<span class="sym">: (</span>String new<span class="sym">:</span> <span class="num">1028</span><span class="sym">)</span>.
   <span class="sym">[(</span>self atEnd<span class="sym">)</span> <span class="kwa">or</span><span class="sym">: [(</span>char <span class="sym">:=</span> self peek<span class="sym">) = $&gt;]]</span> whileFalse<span class="sym">: [</span>
      <span class="sym">(</span>char <span class="sym">= $;)</span>
         ifTrue<span class="sym">: [</span>self upTo<span class="sym">:</span> newline<span class="sym">]</span>
         ifFalse<span class="sym">: [</span>buffer nextPutAll<span class="sym">: (</span>self upTo<span class="sym">:</span> newline<span class="sym">)]</span>
      <span class="sym">]</span>.
   ^Association key<span class="sym">:</span> description value<span class="sym">:</span> buffer contents <span class="sym">! !</span>


<span class="sym">!</span>ExternalwriteStream methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!</span>

writeReverseComplementFasta<span class="sym">:</span> aString sequence<span class="sym">:</span> aSequence
   <span class="sym">|</span> lineLength n iub <span class="sym">|</span>
   <span class="sym">(</span>aString isNil<span class="sym">)</span> ifTrue<span class="sym">: [</span>^self<span class="sym">]</span>.

   lineLength <span class="sym">:=</span> <span class="num">60</span>. n <span class="sym">:=</span> aSequence size.

   iub <span class="sym">:=</span> String new<span class="sym">:</span> <span class="num">128</span> withAll<span class="sym">: $*</span>.
   iub at<span class="sym">:</span> <span class="kwb">$a</span> asInteger put<span class="sym">:</span> <span class="kwb">$T</span>. iub at<span class="sym">:</span> <span class="kwb">$A</span> asInteger put<span class="sym">:</span> <span class="kwb">$T</span>.
   iub at<span class="sym">:</span> <span class="kwb">$b</span> asInteger put<span class="sym">:</span> <span class="kwb">$V</span>. iub at<span class="sym">:</span> <span class="kwb">$B</span> asInteger put<span class="sym">:</span> <span class="kwb">$V</span>.
   iub at<span class="sym">:</span> <span class="kwb">$c</span> asInteger put<span class="sym">:</span> <span class="kwb">$G</span>. iub at<span class="sym">:</span> <span class="kwb">$C</span> asInteger put<span class="sym">:</span> <span class="kwb">$G</span>.
   iub at<span class="sym">:</span> <span class="kwb">$d</span> asInteger put<span class="sym">:</span> <span class="kwb">$H</span>. iub at<span class="sym">:</span> <span class="kwb">$D</span> asInteger put<span class="sym">:</span> <span class="kwb">$H</span>.
   iub at<span class="sym">:</span> <span class="kwb">$g</span> asInteger put<span class="sym">:</span> <span class="kwb">$C</span>. iub at<span class="sym">:</span> <span class="kwb">$G</span> asInteger put<span class="sym">:</span> <span class="kwb">$C</span>.
   iub at<span class="sym">:</span> <span class="kwb">$h</span> asInteger put<span class="sym">:</span> <span class="kwb">$D</span>. iub at<span class="sym">:</span> <span class="kwb">$H</span> asInteger put<span class="sym">:</span> <span class="kwb">$D</span>.
   iub at<span class="sym">:</span> <span class="kwb">$k</span> asInteger put<span class="sym">:</span> <span class="kwb">$M</span>. iub at<span class="sym">:</span> <span class="kwb">$K</span> asInteger put<span class="sym">:</span> <span class="kwb">$M</span>.
   iub at<span class="sym">:</span> <span class="kwb">$m</span> asInteger put<span class="sym">:</span> <span class="kwb">$K</span>. iub at<span class="sym">:</span> <span class="kwb">$M</span> asInteger put<span class="sym">:</span> <span class="kwb">$K</span>.
   iub at<span class="sym">:</span> <span class="kwb">$n</span> asInteger put<span class="sym">:</span> <span class="kwb">$N</span>. iub at<span class="sym">:</span> <span class="kwb">$N</span> asInteger put<span class="sym">:</span> <span class="kwb">$N</span>.
   iub at<span class="sym">:</span> <span class="kwb">$r</span> asInteger put<span class="sym">:</span> <span class="kwb">$Y</span>. iub at<span class="sym">:</span> <span class="kwb">$R</span> asInteger put<span class="sym">:</span> <span class="kwb">$Y</span>.
   iub at<span class="sym">:</span> <span class="kwb">$s</span> asInteger put<span class="sym">:</span> <span class="kwb">$S</span>. iub at<span class="sym">:</span> <span class="kwb">$S</span> asInteger put<span class="sym">:</span> <span class="kwb">$S</span>.
   iub at<span class="sym">:</span> <span class="kwb">$t</span> asInteger put<span class="sym">:</span> <span class="kwb">$A</span>. iub at<span class="sym">:</span> <span class="kwb">$T</span> asInteger put<span class="sym">:</span> <span class="kwb">$A</span>.
   iub at<span class="sym">:</span> <span class="kwb">$v</span> asInteger put<span class="sym">:</span> <span class="kwb">$B</span>. iub at<span class="sym">:</span> <span class="kwb">$V</span> asInteger put<span class="sym">:</span> <span class="kwb">$B</span>.
   iub at<span class="sym">:</span> <span class="kwb">$w</span> asInteger put<span class="sym">:</span> <span class="kwb">$W</span>. iub at<span class="sym">:</span> <span class="kwb">$W</span> asInteger put<span class="sym">:</span> <span class="kwb">$W</span>.
   iub at<span class="sym">:</span> <span class="kwb">$y</span> asInteger put<span class="sym">:</span> <span class="kwb">$R</span>. iub at<span class="sym">:</span> <span class="kwb">$Y</span> asInteger put<span class="sym">:</span> <span class="kwb">$R</span>.

   self nextPutAll<span class="sym">:</span> aString<span class="sym">;</span> cr.

   <span class="sym">[</span>n <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">]</span> whileTrue<span class="sym">: [</span>
         <span class="num">1</span> to<span class="sym">: ((</span>n <span class="sym">&lt;</span> lineLength<span class="sym">)</span> ifTrue<span class="sym">: [</span>n<span class="sym">]</span> ifFalse<span class="sym">: [</span>lineLength<span class="sym">])</span> <span class="kwa">do</span><span class="sym">:</span>
            <span class="sym">[:</span>i <span class="sym">|</span> self nextPut<span class="sym">: (</span>iub at<span class="sym">: (</span>aSequence at<span class="sym">:</span> n <span class="sym">-</span> i <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> asInteger<span class="sym">)]</span>.
         self cr.
         n <span class="sym">:=</span> n <span class="sym">-</span> lineLength.
      <span class="sym">] ! !</span>
