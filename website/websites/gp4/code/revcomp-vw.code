<span class="com">&quot;* The Computer Language Shootout</span>
<span class="com">    http://shootout.alioth.debian.org/</span>
<span class="com">    contributed by Eliot Miranda *&quot;</span><span class="sym">!</span>
<span class="sym">!</span>Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span><span class="sym">!</span>reverseComplementFrom<span class="sym">:</span> input named<span class="sym">:</span> sequenceName to<span class="sym">:</span> output
   <span class="sym">|</span> complement idString newline description char <span class="sym">|</span>
   complement <span class="sym">:=</span> String new<span class="sym">:</span> <span class="num">128</span><span class="sym">.</span>

   <span class="str">'ACGTUMRWSYKVHDBN'</span> with<span class="sym">:</span>
   <span class="str">'TGCAAKYWSRMBDHVN'</span>
      do<span class="sym">: [:</span>a <span class="sym">:</span>b<span class="sym">|</span>
         complement at<span class="sym">:</span> a asInteger put<span class="sym">:</span> b<span class="sym">.</span>
         complement at<span class="sym">:</span> a asLowercase asInteger put<span class="sym">:</span> b<span class="sym">].</span>

   idString <span class="sym">:=</span> <span class="str">'&gt;'</span> <span class="sym">,</span> sequenceName<span class="sym">.</span>
   newline <span class="sym">:=</span> Character lf<span class="sym">.</span>

   <span class="com">&quot;* find start of particular fasta sequence *&quot;</span>
   <span class="sym">[</span>char <span class="sym">:=</span> input peek<span class="sym">.</span>
    char <span class="sym">==</span> <span class="kwa">nil</span> ifTrue<span class="sym">: [^</span><span class="kwa">self</span><span class="sym">].</span>
   char <span class="sym">= $&gt;</span>
      ifTrue<span class="sym">:</span>
         <span class="sym">[((</span>description <span class="sym">:=</span> input upTo<span class="sym">:</span> newline<span class="sym">)</span>
            indexOfSubCollection<span class="sym">:</span> idString startingAt<span class="sym">:</span> <span class="num">1</span><span class="sym">) =</span> <span class="num">1</span><span class="sym">]</span>
      ifFalse<span class="sym">:</span>
         <span class="sym">[</span>input skipThrough<span class="sym">:</span> newline<span class="sym">.</span>
         <span class="kwa">false</span><span class="sym">]]</span>
      whileFalse<span class="sym">.</span>

   output nextPutAll<span class="sym">:</span> description<span class="sym">;</span> nextPut<span class="sym">:</span> newline<span class="sym">.</span>
   <span class="sym">[(</span>char <span class="sym">:=</span> input peek<span class="sym">) = $&gt;</span> or<span class="sym">: [</span>char <span class="sym">==</span> <span class="kwa">nil</span><span class="sym">]]</span> whileFalse<span class="sym">:</span>
      <span class="sym">[</span>char <span class="sym">= $;</span>
         ifTrue<span class="sym">: [</span>input skipUpTo<span class="sym">:</span> newline<span class="sym">]</span>
         ifFalse<span class="sym">:</span>
            <span class="sym">[[(</span>char <span class="sym">:=</span> input next<span class="sym">) =</span> newline<span class="sym">]</span> whileFalse<span class="sym">:</span>
               <span class="sym">[</span>output nextPut<span class="sym">: (</span>complement at<span class="sym">:</span> char asInteger<span class="sym">)].</span>
             output nextPut<span class="sym">:</span> newline<span class="sym">]] ! !</span>


<span class="sym">!</span>Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmark scripts'</span><span class="sym">!</span>
revcomp
   <span class="sym">#(</span><span class="str">'ONE'</span> <span class="str">'TWO'</span> <span class="str">'THREE'</span><span class="sym">)</span> do<span class="sym">:</span>
      <span class="sym">[:</span>sequenceName <span class="sym">|</span>
         <span class="kwa">self</span> reverseComplementFrom<span class="sym">:</span> <span class="kwa">self</span> stdinSpecial
            named<span class="sym">:</span> sequenceName to<span class="sym">:</span> <span class="kwa">self</span> stdoutSpecial<span class="sym">].</span>

   <span class="kwa">self</span> stdout flush<span class="sym">.   ^</span><span class="str">''</span><span class="sym">! !</span>
