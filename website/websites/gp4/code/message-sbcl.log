BUILD COMMANDS FOR: message.sbcl

Sun Oct 28 10:18:50 PDT 2007

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "message.sbcl_compile")'
### START message.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "message.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END message.sbcl_compile


; compiling file "/home/dunham/gp4/shootout/bench/message/tmp/message.sbcl" (written 28 OCT 2007 10:18:50 AM):
; compiling (DEFCONSTANT +SERIALIZE-THREADS+ ...)
; compiling (DEFPARAMETER *SERIALIZE-THREADS-MUTEX* ...)
; compiling (DEFPARAMETER *SERIALIZE-THREADS-COND* ...)
; compiling (DEFPARAMETER *SERIALIZE-THREADS-FLAG* ...)
; compiling (DEFPARAMETER *N-THREADS* ...)
; compiling (DEFMACRO FOREVER ...)
; compiling (DEFUN CREATE-COND ...)
; compiling (DEFUN CREATE-MUTEX ...)
; compiling (DEFUN LOCK-MUTEX ...)
; compiling (DEFUN RELEASE-MUTEX ...)
; compiling (DEFUN WAIT-ON-COND ...)
; compiling (DEFUN AWAKEN-COND-WAITER ...)
; compiling (DEFUN SPAWN-THREAD ...)
; compiling (DEFCLASS WORKER ...)
; compiling (DEFGENERIC WORK-FCN ...)
; compiling (DEFGENERIC MAIN-REAPER ...)
; compiling (DEFUN WAIT-FOR-MSG ...)
; file: /home/dunham/gp4/shootout/bench/message/tmp/message.sbcl
; in: DEFUN WAIT-FOR-MSG
;     (FUNCALL GET-MSG-FORM)
; --> SB-C::%FUNCALL THE 
; ==>
;   (SB-KERNEL:%COERCE-CALLABLE-TO-FUN FUNCTION)
; 
; note: unable to
;   optimize away possible call to FDEFINITION at runtime
; due to type uncertainty:
;   The first argument is a (OR FUNCTION SYMBOL), not a FUNCTION.

; compiling (DEFMETHOD WORK-FCN ...)
; file: /home/dunham/gp4/shootout/bench/message/tmp/message.sbcl
; in: DEFMETHOD WORK-FCN (WORKER)
;     (1+ MSG)
; ==>
;   (+ MSG 1)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFMETHOD MAIN-REAPER ...)
; compiling (DEFUN MAIN ...)
; file: /home/dunham/gp4/shootout/bench/message/tmp/message.sbcl
; in: DEFUN MAIN
;     (INCF ACCUMULATOR (MAIN-REAPER MAINTHREAD))
; --> LET* 
; ==>
;   (+ ACCUMULATOR #:G71)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a RATIONAL.
;   The second argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
;   The second argument is a NUMBER, not a RATIONAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a SINGLE-FLOAT.
;   The second argument is a NUMBER, not a DOUBLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a DOUBLE-FLOAT.
;   The second argument is a NUMBER, not a SINGLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;   The second argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
;   The second argument is a NUMBER, not a REAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a REAL.
;   The second argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;   The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).
;   The second argument is a NUMBER, not a REAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a REAL.
;   The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).

;     (DOTIMES (I *N-THREADS*)
;     (SETF WORKER (MAKE-INSTANCE 'WORKER))
;     (SETF (GET-CLIENT WORKER) LAST-OBJ)
;     (SETF LAST-OBJ WORKER)
;     (WHEN +SERIALIZE-THREADS+ (SETF *SERIALIZE-THREADS-FLAG* NIL))
;     (SPAWN-THREAD #'(LAMBDA () (WORK-FCN WORKER)))
;     (WHEN +SERIALIZE-THREADS+
;       (LOCK-MUTEX *SERIALIZE-THREADS-MUTEX*)
;       (DO ()
;           (*SERIALIZE-THREADS-FLAG*)
;         (OR *SERIALIZE-THREADS-FLAG*
;             (WAIT-ON-COND *SERIALIZE-THREADS-COND* *SERIALIZE-THREADS-MUTEX*)))
;       (RELEASE-MUTEX *SERIALIZE-THREADS-MUTEX*)))
; --> DO BLOCK LET TAGBODY UNLESS COND IF NOT IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.

; --> DO BLOCK LET TAGBODY PSETQ PSETF LET* MULTIPLE-VALUE-BIND LET 1+ 
; ==>
;   (+ I 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

;     (DOTIMES (I N)
;     (LOCK-MUTEX (GET-MUTEX WORKER))
;     (SETF (GET-MESSAGE WORKER) 0)
;     (AWAKEN-COND-WAITER (GET-COND WORKER))
;     (RELEASE-MUTEX (GET-MUTEX WORKER))
;     (INCF ACCUMULATOR (MAIN-REAPER MAINTHREAD)))
; --> DO BLOCK LET TAGBODY UNLESS COND IF NOT IF >= IF 
; ==>
;   (< SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.

;     (INCF ACCUMULATOR (MAIN-REAPER MAINTHREAD))
; --> LET* 
; ==>
;   (+ ACCUMULATOR #:G71)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a DOUBLE-FLOAT.
;       The second argument is a NUMBER, not a DOUBLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES DOUBLE-FLOAT
;                                                                &REST T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a SINGLE-FLOAT.
;       The second argument is a NUMBER, not a SINGLE-FLOAT.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES SINGLE-FLOAT
;                                                                &REST T).
;       etc.

;     (DOTIMES (I N)
;     (LOCK-MUTEX (GET-MUTEX WORKER))
;     (SETF (GET-MESSAGE WORKER) 0)
;     (AWAKEN-COND-WAITER (GET-COND WORKER))
;     (RELEASE-MUTEX (GET-MUTEX WORKER))
;     (INCF ACCUMULATOR (MAIN-REAPER MAINTHREAD)))
; --> DO BLOCK LET TAGBODY PSETQ PSETF LET* MULTIPLE-VALUE-BIND LET 1+ 
; ==>
;   (+ I 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a UNSIGNED-BYTE, not a FIXNUM.
;       The result is a (VALUES (INTEGER 1) &OPTIONAL), not a (VALUES FIXNUM
;                                                                     &REST T).
;       etc.

; compiling (IF +SERIALIZE-THREADS+ ...); 
; compilation unit finished
;   printed 20 notes


; /home/dunham/gp4/shootout/bench/message/tmp/message.fasl written
; compilation finished in 0:00:00
unhandled SIMPLE-ERROR in thread #<SB-THREAD:THREAD "initial thread" {A6DDBD9}>:
  Error during processing of --eval option (LOAD #P"message.sbcl_compile"):

  unknown &KEY argument: :VALUE

0: (BACKTRACE 128 #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDERR* {90B1609}>)
1: (SB-DEBUG::DEBUGGER-DISABLED-HOOK
    #<SIMPLE-ERROR {A964B81}>
    #<unavailable argument>)
2: (INVOKE-DEBUGGER #<SIMPLE-ERROR {A964B81}>)
3: (INVOKE-DEBUGGER #<SIMPLE-ERROR {A964B81}>)
4: (ERROR
    "Error during processing of --eval ~
                                    option ~S:~%~%  ~A")
5: ((LAMBDA (SB-IMPL::E)) #<SB-INT:SIMPLE-PROGRAM-ERROR {A964A89}>)
6: ((LAMBDA (SB-IMPL::E)) #<SB-INT:SIMPLE-PROGRAM-ERROR {A964A89}>)
7: (SIGNAL #<SB-INT:SIMPLE-PROGRAM-ERROR {A964A89}>)
8: (ERROR SB-INT:SIMPLE-PROGRAM-ERROR)
9: (SB-KERNEL::UNKNOWN-KEY-ARG-ERROR-HANDLER
    #<unavailable argument>
    #.(SB-SYS:INT-SAP #XB5EE06A0)
    #<SB-ALIEN-INTERNALS:ALIEN-VALUE :SAP #XB5EE038C :TYPE (*
                                                            (STRUCT
                                                             SB-VM::OS-CONTEXT-T-STRUCT))>
    (14))
10: (SB-KERNEL::UNKNOWN-KEY-ARG-ERROR-HANDLER
     #<unavailable argument>
     #.(SB-SYS:INT-SAP #XB5EE06A0)
     #<SB-ALIEN-INTERNALS:ALIEN-VALUE :SAP #XB5EE038C :TYPE (*
                                                             (STRUCT
                                                              SB-VM::OS-CONTEXT-T-STRUCT))>
     (14))
11: (SB-KERNEL:INTERNAL-ERROR
     #.(SB-SYS:INT-SAP #XB5EE038C)
     #<unavailable argument>)
12: ("foreign function: #x80603AC")
13: ("foreign function: #x8051A0D")
14: ("foreign function: #x8055BE8")
15: ("foreign function: #x8056409")
16: (SB-THREAD:MAKE-MUTEX)
17: (SB-FASL::FOP-FUNCALL)
18: (SB-FASL::LOAD-FASL-GROUP
     #<SB-SYS:FD-STREAM for "file /home/dunham/gp4/shootout/bench/message/tmp/message.fasl" {A93FC91}>)
19: ((FLET SB-THREAD::WITH-RECURSIVE-LOCK-THUNK))
20: (SB-UNIX::CALL-WITH-LOCAL-INTERRUPTS
     #<CLOSURE (FLET SB-UNIX::WITH-LOCAL-INTERRUPTS-THUNK) {B5EE0765}>
     T)
21: ((FLET SB-UNIX::WITHOUT-INTERRUPTS-THUNK) T)
22: ((FLET SB-UNIX::RUN-WITHOUT-INTERRUPTS))
23: (SB-UNIX::CALL-WITHOUT-INTERRUPTS
     #<CLOSURE (FLET SB-UNIX::WITHOUT-INTERRUPTS-THUNK) {B5EE0855}>)
24: (SB-THREAD::CALL-WITH-RECURSIVE-LOCK
     #<CLOSURE (FLET SB-THREAD::WITH-RECURSIVE-LOCK-THUNK) {B5EE08D5}>
     #S(SB-THREAD:MUTEX
        :NAME "big compiler lock"
        :%OWNER #<SB-THREAD:THREAD "initial thread" {A6DDBD9}>
        :STATE 1))
25: (SB-FASL::LOAD-AS-FASL
     #<SB-SYS:FD-STREAM for "file /home/dunham/gp4/shootout/bench/message/tmp/message.fasl" {A93FC91}>
     NIL
     #<unavailable argument>)
26: (SB-FASL::INTERNAL-LOAD
     #P"/home/dunham/gp4/shootout/bench/message/tmp/message.fasl"
     #P"/home/dunham/gp4/shootout/bench/message/tmp/message.fasl"
     :ERROR
     NIL
     NIL
     :BINARY
     NIL)
27: (SB-FASL::INTERNAL-LOAD
     #P"/home/dunham/gp4/shootout/bench/message/tmp/message.fasl"
     #P"/home/dunham/gp4/shootout/bench/message/tmp/message.fasl"
     :ERROR
     NIL
     NIL
     NIL
     :DEFAULT)
28: (LOAD #P"/home/dunham/gp4/shootout/bench/message/tmp/message.fasl")
29: (NIL #<unavailable lambda list>)
30: (SB-INT:SIMPLE-EVAL-IN-LEXENV
     (HANDLER-BIND ((DEFCONSTANT-UNEQL (LAMBDA (C) (ABORT C))))
                   (LOAD (COMPILE-FILE "message.sbcl")))
     #<NULL-LEXENV>)
31: (SB-FASL::LOAD-AS-SOURCE
     #<SB-SYS:FD-STREAM for "file /home/dunham/gp4/shootout/bench/message/tmp/message.sbcl_compile" {A6E9441}>
     NIL
     NIL)
32: (SB-FASL::INTERNAL-LOAD
     #P"message.sbcl_compile"
     #P"/home/dunham/gp4/shootout/bench/message/tmp/message.sbcl_compile"
     :ERROR
     NIL
     NIL
     :SOURCE
     :DEFAULT)
33: (SB-FASL::INTERNAL-LOAD
     #P"message.sbcl_compile"
     #P"/home/dunham/gp4/shootout/bench/message/tmp/message.sbcl_compile"
     :ERROR
     NIL
     NIL
     NIL
     :DEFAULT)
34: (LOAD #P"message.sbcl_compile")
35: (SB-INT:SIMPLE-EVAL-IN-LEXENV
     (LOAD #P"message.sbcl_compile")
     #<NULL-LEXENV>)
36: (SB-IMPL::PROCESS-EVAL-OPTIONS
     ((DISABLE-DEBUGGER) (LOAD #P"message.sbcl_compile")))
37: (SB-IMPL::TOPLEVEL-INIT)
38: ((LABELS SB-IMPL::RESTART-LISP))

unhandled condition in --disable-debugger mode, quitting
### START message.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END message.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load message.sbcl_run %A
fatal error encountered in SBCL pid 9402(tid 3055712992):
can't load .core for different runtime, sorry

The system is too badly corrupted or confused to continue at the Lisp
level. If the system had been compiled with the SB-LDB feature, we'd drop
into the LDB low-level debugger now. But there's no LDB in this build, so
we can't really do anything but just exit, sorry.
TEST FAILED - Child processed exited with error code (1)


PROGRAM OUTPUT
==============
