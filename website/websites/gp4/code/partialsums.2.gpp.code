<span class="hl slc">// The Computer Language Shootout</span>
<span class="hl slc">// http://shootout.alioth.debian.org/</span>
<span class="hl slc">// contributed by Paul Kitchin</span>

<span class="hl dir">#include &lt;cmath&gt;</span>
<span class="hl dir">#include &lt;iomanip&gt;</span>
<span class="hl dir">#include &lt;iostream&gt;</span>
<span class="hl dir">#include &lt;sstream&gt;</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">char</span> <span class="hl sym">* *</span> argv<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span>argc <span class="hl sym">!=</span> <span class="hl num">2</span><span class="hl sym">)</span>
   <span class="hl sym">{</span>
      std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;Usage: &quot;</span> <span class="hl sym">&lt;&lt;</span> argv<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] &lt;&lt;</span> <span class="hl str">&quot; &lt;n&gt;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
      <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
   std<span class="hl sym">::</span><span class="hl kwb">size_t</span> n<span class="hl sym">;</span>
   <span class="hl sym">{</span>
      std<span class="hl sym">::</span>istringstream <span class="hl kwd">convertor</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]);</span>
      <span class="hl kwa">if</span> <span class="hl sym">(!(</span>convertor <span class="hl sym">&gt;&gt;</span> n<span class="hl sym">) || !</span>convertor<span class="hl sym">.</span><span class="hl kwd">eof</span><span class="hl sym">())</span>
      <span class="hl sym">{</span>
         std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;Usage: &quot;</span> <span class="hl sym">&lt;&lt;</span> argv<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] &lt;&lt;</span> <span class="hl str">&quot; &lt;n&gt;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
         std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">n must be an integer</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
         <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
   <span class="hl sym">++</span>n<span class="hl sym">;</span>
   <span class="hl kwb">double</span> two_thirds_to_the_k <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> one_over_k_squared_plus_k <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> one_over_root_k <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> harmonic <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> alternating_harmonic <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> gregory <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> alternating_value <span class="hl sym">=</span> <span class="hl num">1.0</span><span class="hl sym">;</span>
   <span class="hl kwb">int</span> int_value <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">double</span> value <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> value <span class="hl sym">&lt;</span> n<span class="hl sym">; ++</span>value<span class="hl sym">,</span> alternating_value <span class="hl sym">= -</span>alternating_value<span class="hl sym">, ++</span>int_value<span class="hl sym">)</span>
   <span class="hl sym">{</span>
      <span class="hl kwb">double</span> one_over_value <span class="hl sym">=</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> value<span class="hl sym">;</span>
      two_thirds_to_the_k <span class="hl sym">+=</span> std<span class="hl sym">::</span><span class="hl kwd">pow</span><span class="hl sym">(</span><span class="hl num">2.0</span> <span class="hl sym">/</span> <span class="hl num">3.0</span><span class="hl sym">,</span> int_value<span class="hl sym">);</span>
      one_over_root_k <span class="hl sym">+=</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> std<span class="hl sym">::</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>value<span class="hl sym">);</span>
      one_over_k_squared_plus_k <span class="hl sym">+=</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>value <span class="hl sym">* (</span>value <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">));</span>
      harmonic <span class="hl sym">+=</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> value<span class="hl sym">;</span>
      alternating_harmonic <span class="hl sym">+=</span> alternating_value <span class="hl sym">*</span> one_over_value<span class="hl sym">;</span>
      gregory <span class="hl sym">+=</span> alternating_value <span class="hl sym">/ (</span><span class="hl num">2.0</span> <span class="hl sym">*</span> value <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> std<span class="hl sym">::</span><span class="hl kwd">setprecision</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) &lt;&lt;</span> std<span class="hl sym">::</span>fixed<span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> two_thirds_to_the_k <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">(2/3)^k</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> one_over_root_k <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">k^-0.5</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> one_over_k_squared_plus_k <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">1/k(k+1)</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> flint_hills <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> cookson_hills <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwb">double</span> rieman_zeta <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">double</span> value <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> value <span class="hl sym">&lt;</span> n<span class="hl sym">; ++</span>value<span class="hl sym">)</span>
   <span class="hl sym">{</span>
      <span class="hl kwb">double</span> value_squared <span class="hl sym">=</span> value <span class="hl sym">*</span> value<span class="hl sym">;</span>
      <span class="hl kwb">double</span> value_cubed <span class="hl sym">=</span> value_squared <span class="hl sym">*</span> value<span class="hl sym">;</span>
      <span class="hl kwb">double</span> sin_value <span class="hl sym">=</span> std<span class="hl sym">::</span><span class="hl kwd">sin</span><span class="hl sym">(</span>value<span class="hl sym">);</span>
      <span class="hl kwb">double</span> cos_value <span class="hl sym">=</span> std<span class="hl sym">::</span><span class="hl kwd">cos</span><span class="hl sym">(</span>value<span class="hl sym">);</span>
      flint_hills <span class="hl sym">+=</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>value_cubed <span class="hl sym">*</span> sin_value <span class="hl sym">*</span> sin_value<span class="hl sym">);</span>
      cookson_hills <span class="hl sym">+=</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>value_cubed <span class="hl sym">*</span> cos_value <span class="hl sym">*</span> cos_value<span class="hl sym">);</span>
      rieman_zeta <span class="hl sym">+=</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> value_squared<span class="hl sym">;</span>
   <span class="hl sym">}</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> flint_hills <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">Flint Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> cookson_hills <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">Cookson Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> harmonic <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> rieman_zeta <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">Riemann Zeta</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> alternating_harmonic <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">Alternating Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> gregory <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">Gregory</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
