<span class="slc">#!/usr/bin/tclsh
</span><span class="slc"># $Id: mandelbrot-tcl-3.code,v 1.1 2005-10-29 16:19:32 igouy-guest Exp $
</span><span class="slc"># The Great Computer Language Shootout
</span><span class="slc"># http://shootout.alioth.debian.org/
</span><span class="slc">#
</span><span class="slc"># Contributed by Hemang Lavana
</span>
<span class="kwa">proc</span> main <span class="sym">{</span>argv<span class="sym">} {
</span>    <span class="kwa">set</span> bit_num  <span class="sym">[</span><span class="kwa">set</span> byte_acc <span class="num">0</span><span class="sym">]
</span>    <span class="kwa">set</span> H <span class="sym">[</span><span class="kwa">set</span> W <span class="sym">[</span><span class="kwa">lindex</span> <span class="kwb">$argv</span> <span class="num">0</span><span class="sym">]]

</span>    <span class="kwa">puts</span> stdout <span class="str">&quot;P4</span><span class="esc">\n</span><span class="str">$W $H&quot;</span>
    <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> y <span class="num">0</span><span class="sym">;</span> <span class="kwa">set</span> iter <span class="num">50</span><span class="sym">;</span> <span class="kwa">set</span> limit2 <span class="num">4.0</span><span class="sym">;</span> <span class="kwa">set</span> W_1 <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="kwb">$W</span><span class="num">-1</span><span class="sym">}];</span> <span class="kwa">set</span> Wshift <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="num">8</span><span class="sym">-</span><span class="kwb">$W</span><span class="sym">%</span><span class="num">8</span><span class="sym">}];} {</span><span class="kwb">$y</span> <span class="sym">&lt;</span> <span class="kwb">$H</span><span class="sym">} {</span><span class="kwa">incr</span> y<span class="sym">} {
</span>        <span class="kwa">set</span> Ci <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="num">2.0</span> <span class="sym">*</span> <span class="kwb">$y</span> <span class="sym">/</span> <span class="kwb">$H</span> <span class="num">- 1</span><span class="sym">}]
</span>        <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> x <span class="num">0</span><span class="sym">} {</span><span class="kwb">$x</span> <span class="sym">&lt;</span> <span class="kwb">$W</span><span class="sym">} {</span><span class="kwa">incr</span> x<span class="sym">} {
</span>            <span class="kwa">set</span> Zr <span class="sym">[</span><span class="kwa">set</span> Zi <span class="num">0.0</span><span class="sym">]
</span>            <span class="kwa">set</span> Cr <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="num">2.0</span> <span class="sym">*</span> <span class="kwb">$x</span> <span class="sym">/</span> <span class="kwb">$W</span> <span class="num">- 1.5</span><span class="sym">}]
</span>            <span class="kwa">for</span> <span class="sym">{</span><span class="kwa">set</span> i <span class="num">0</span><span class="sym">} {</span><span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="kwb">$iter</span><span class="sym">} {</span><span class="kwa">incr</span> i<span class="sym">} {
</span>                <span class="kwa">set</span> Tr <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span> <span class="kwb">$Zr</span> <span class="sym">*</span> <span class="kwb">$Zr</span> <span class="sym">-</span> <span class="kwb">$Zi</span> <span class="sym">*</span> <span class="kwb">$Zi</span> <span class="sym">+</span> <span class="kwb">$Cr</span> <span class="sym">}]
</span>                <span class="kwa">set</span> Ti <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span> <span class="num">2.0</span> <span class="sym">*</span> <span class="kwb">$Zr</span> <span class="sym">*</span> <span class="kwb">$Zi</span> <span class="sym">+</span> <span class="kwb">$Ci</span> <span class="sym">}]
</span>                <span class="kwa">set</span> Zr <span class="kwb">$Tr</span><span class="sym">;</span> <span class="kwa">set</span> Zi <span class="kwb">$Ti
</span>                <span class="kwa">if</span> <span class="sym">{[</span><span class="kwa">set</span> isOverLimit <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{(</span><span class="kwb">$Zr</span> <span class="sym">*</span> <span class="kwb">$Zr</span> <span class="sym">+</span> <span class="kwb">$Zi</span> <span class="sym">*</span> <span class="kwb">$Zi</span><span class="sym">) &gt;</span> <span class="kwb">$limit2</span><span class="sym">}]]} {</span><span class="kwa">break</span><span class="sym">}
            }
</span>            <span class="kwa">incr</span> bit_num
            <span class="kwa">set</span> byte_acc <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span><span class="num">2</span> <span class="sym">*</span> <span class="kwb">$byte_acc</span> <span class="sym">+ (</span><span class="kwb">$isOverLimit</span>? <span class="num">0</span> <span class="sym">:</span> <span class="num">1</span><span class="sym">)}]
</span>            <span class="kwa">if</span> <span class="sym">{</span><span class="kwb">$bit_num</span> <span class="sym">==</span> <span class="str">&quot;8&quot;</span><span class="sym">} {
</span>                <span class="kwa">puts</span> <span class="sym">-</span>nonewline stdout <span class="sym">[</span><span class="kwa">binary format</span> c <span class="kwb">$byte_acc</span><span class="sym">]
</span>                <span class="kwa">set</span> bit_num <span class="sym">[</span><span class="kwa">set</span> byte_acc <span class="num">0</span><span class="sym">]
            }</span> elseif <span class="sym">{</span><span class="kwb">$x</span> <span class="sym">==</span> <span class="kwb">$W_1</span><span class="sym">} {
</span>                <span class="kwa">set</span> byte_acc <span class="sym">[</span><span class="kwa">expr</span> <span class="sym">{</span> <span class="kwb">$byte_acc</span> <span class="sym">&lt;&lt;</span> <span class="kwb">$Wshift</span> <span class="sym">}]
</span>                <span class="kwa">puts</span> <span class="sym">-</span>nonewline stdout <span class="sym">[</span><span class="kwa">binary format</span> c <span class="kwb">$byte_acc</span><span class="sym">]
</span>                <span class="kwa">set</span> bit_num <span class="sym">[</span><span class="kwa">set</span> byte_acc <span class="num">0</span><span class="sym">]
            }
        }
    }
}

</span>main <span class="kwb">$argv</span>
