<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">% Based on D language implementation by David Fladebo and work by Anthony Borla</span>
<span class="hl slc">% contributed by Glendon Holst</span>

<span class="hl sym">:-</span> module partialsums.
<span class="hl sym">:-</span> interface.
<span class="hl sym">:-</span> import_module io.

<span class="hl sym">:-</span> pred main<span class="hl sym">(</span>io<span class="hl sym">::</span>di<span class="hl sym">,</span> io<span class="hl sym">::</span>uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

<span class="hl slc">% ----------------------------------------------------------------------</span>

<span class="hl sym">:-</span> implementation.

<span class="hl sym">:-</span> import_module list.
<span class="hl sym">:-</span> import_module int.
<span class="hl sym">:-</span> import_module <span class="hl kwb">float</span>.
<span class="hl sym">:-</span> import_module math.
<span class="hl sym">:-</span> import_module string.

<span class="hl slc">% ----------------------------------------------------------------------</span>

<span class="hl sym">:-</span> type sums <span class="hl sym">== {</span><span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">}</span>.

<span class="hl slc">% ----------------------------------------------------------------------</span>

main<span class="hl sym">(!</span>IO<span class="hl sym">) :-</span>
	io.command_line_arguments<span class="hl sym">(</span>Args<span class="hl sym">, !</span>IO<span class="hl sym">),</span>
	<span class="hl sym">(</span>
		if
			Args <span class="hl sym">= [</span>AString<span class="hl sym">|</span>_<span class="hl sym">],</span>
			string.to_int<span class="hl sym">(</span>string.strip<span class="hl sym">(</span>AString<span class="hl sym">),</span> Aint<span class="hl sym">)</span>
		then
			N <span class="hl sym">=</span> Aint
		else
			N <span class="hl kwa">is</span> <span class="hl num">2500000</span>
	<span class="hl sym">),</span>

	Sums0 <span class="hl sym">= {</span><span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">},</span>
	compute_sums<span class="hl sym">(</span>N<span class="hl sym">,</span> Sums0<span class="hl sym">,</span> Sums<span class="hl sym">),</span> print_sums<span class="hl sym">(</span>Sums<span class="hl sym">, !</span>IO<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

<span class="hl sym">:-</span> pred compute_sums<span class="hl sym">(</span>int<span class="hl sym">::</span>in<span class="hl sym">,</span> sums<span class="hl sym">::</span>in<span class="hl sym">,</span> sums<span class="hl sym">::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.
<span class="hl sym">:-</span> pred compute_sums_<span class="hl sym">(</span>int<span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">,</span> sums<span class="hl sym">,</span> sums<span class="hl sym">)</span> <span class="hl kwa">is</span> det.
<span class="hl sym">:-</span> mode compute_sums_<span class="hl sym">(</span>in<span class="hl sym">,</span> in<span class="hl sym">,</span> in<span class="hl sym">,</span> in<span class="hl sym">,</span> out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

compute_sums<span class="hl sym">(</span>N<span class="hl sym">,</span> Sums0<span class="hl sym">,</span> Sums<span class="hl sym">) :-</span> compute_sums_<span class="hl sym">(</span>N<span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">,</span> Sums0<span class="hl sym">,</span> Sums<span class="hl sym">)</span>.

<span class="hl slc">% ------------- %</span>

compute_sums_<span class="hl sym">(</span>N<span class="hl sym">,</span> D<span class="hl sym">,</span> Alt<span class="hl sym">,</span> Sums0<span class="hl sym">,</span> Sums<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
	N <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
	Sums0 <span class="hl sym">= {</span>A1<span class="hl sym">,</span> A2<span class="hl sym">,</span> A3<span class="hl sym">,</span> A4<span class="hl sym">,</span> A5<span class="hl sym">,</span> A6<span class="hl sym">,</span> A7<span class="hl sym">,</span> A8<span class="hl sym">,</span> A9<span class="hl sym">},</span>

	D2 <span class="hl kwa">is</span> D <span class="hl sym">*</span> D<span class="hl sym">,</span> D3 <span class="hl kwa">is</span> D2 <span class="hl sym">*</span> D<span class="hl sym">,</span> DS <span class="hl kwa">is</span> <span class="hl kwb">sin</span><span class="hl sym">(</span>D<span class="hl sym">),</span> DC <span class="hl kwa">is</span> <span class="hl kwb">cos</span><span class="hl sym">(</span>D<span class="hl sym">),</span>

	A1N <span class="hl kwa">is</span> A1 <span class="hl sym">+</span> pow<span class="hl sym">((</span><span class="hl num">2.0</span> <span class="hl sym">/</span> <span class="hl num">3.0</span><span class="hl sym">), (</span>D <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">)),</span>
	A2N <span class="hl kwa">is</span> A2 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> <span class="hl kwb">sqrt</span><span class="hl sym">(</span>D<span class="hl sym">),</span>
	A3N <span class="hl kwa">is</span> A3 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>D <span class="hl sym">* (</span>D <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">)),</span>
	A4N <span class="hl kwa">is</span> A4 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>D3 <span class="hl sym">*</span> DS <span class="hl sym">*</span> DS<span class="hl sym">),</span>
	A5N <span class="hl kwa">is</span> A5 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>D3 <span class="hl sym">*</span> DC <span class="hl sym">*</span> DC<span class="hl sym">),</span>
	A6N <span class="hl kwa">is</span> A6 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> D<span class="hl sym">,</span>
	A7N <span class="hl kwa">is</span> A7 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>D2<span class="hl sym">),</span>
	A8N <span class="hl kwa">is</span> A8 <span class="hl sym">+</span> Alt <span class="hl sym">/</span> D<span class="hl sym">,</span>
	A9N <span class="hl kwa">is</span> A9 <span class="hl sym">+</span> Alt <span class="hl sym">/ (</span><span class="hl num">2.0</span> <span class="hl sym">*</span> D <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">),</span>

	compute_sums_<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> D <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">, -</span>Alt<span class="hl sym">,</span>
		<span class="hl sym">{</span>A1N<span class="hl sym">,</span> A2N<span class="hl sym">,</span> A3N<span class="hl sym">,</span> A4N<span class="hl sym">,</span> A5N<span class="hl sym">,</span> A6N<span class="hl sym">,</span> A7N<span class="hl sym">,</span> A8N<span class="hl sym">,</span> A9N<span class="hl sym">},</span> Sums<span class="hl sym">)</span>
<span class="hl sym">;</span>
	Sums <span class="hl sym">=</span> Sums0
<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>

<span class="hl sym">:-</span> pred print_sums<span class="hl sym">(</span>sums<span class="hl sym">::</span>in<span class="hl sym">,</span> io<span class="hl sym">::</span>di<span class="hl sym">,</span> io<span class="hl sym">::</span>uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

print_sums<span class="hl sym">(</span>Sums<span class="hl sym">, !</span>IO<span class="hl sym">) :-</span>
	Sums <span class="hl sym">= {</span>A1<span class="hl sym">,</span> A2<span class="hl sym">,</span> A3<span class="hl sym">,</span> A4<span class="hl sym">,</span> A5<span class="hl sym">,</span> A6<span class="hl sym">,</span> A7<span class="hl sym">,</span> A8<span class="hl sym">,</span> A9<span class="hl sym">},</span>

	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">(2/3)^k</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A1<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">k^-0.5</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A2<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">1/k(k+1)</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A3<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Flint Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A4<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Cookson Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A5<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A6<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Riemann Zeta</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A7<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Alternating Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A8<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>
	io.format<span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Gregory</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>A9<span class="hl sym">)], !</span>IO<span class="hl sym">)</span>.

<span class="hl slc">% ------------------------------- %</span>
