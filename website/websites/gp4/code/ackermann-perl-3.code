<span class="slc">#!/usr/bin/perl</span>
<span class="slc"># $Id: ackermann-perl-3.code,v 1.15 2005-11-05 02:06:02 igouy-guest Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="slc"># We avoid using memoize by inlining the cache</span>
<span class="slc"># from Thomas Drugeon</span>

<span class="slc"># in our quest for speed, we must get ugly:</span>
<span class="slc"># it helps reduce stack frame size a little bit</span>
<span class="slc"># from Leif Stensson</span>
<span class="kwa">sub</span> Ack <span class="sym">{</span>
    <span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">]</span> ? <span class="sym">(</span><span class="kwb">$Ack</span><span class="sym">[</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">]][</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">1</span><span class="sym">]] ||=</span> <span class="kwb">$_</span><span class="sym">[</span><span class="num">1</span><span class="sym">]</span> ? <span class="kwd">Ack</span><span class="sym">(</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-</span><span class="num">1</span><span class="sym">,</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">],</span> <span class="kwb">$_</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-</span><span class="num">1</span><span class="sym">))</span>
		    <span class="sym">:</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">))</span>
	<span class="sym">:</span> <span class="kwb">$_</span><span class="sym">[</span><span class="num">1</span><span class="sym">]+</span><span class="num">1</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="kwc">my</span> <span class="kwb">$NUM</span> <span class="sym">=</span> <span class="kwb">$ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
<span class="kwb">$NUM</span> <span class="sym">=</span> <span class="num">1</span> <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$NUM</span> <span class="sym">&lt;</span> <span class="num">1</span><span class="sym">);</span>
<span class="kwc">my</span> <span class="kwb">$ack</span> <span class="sym">=</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> <span class="kwb">$NUM</span><span class="sym">);</span>
print <span class="str">&quot;Ack(3,$NUM): $ack</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
