<span class="hl slc">-- The Great Computer Language Shootout</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- contributed by Mike Pall</span>

<span class="hl kwa">local</span> <span class="hl kwb">floor</span><span class="hl sym">,</span> <span class="hl kwb">ceil</span> <span class="hl sym">=</span> math<span class="hl sym">.</span><span class="hl kwb">floor</span><span class="hl sym">,</span> math<span class="hl sym">.</span><span class="hl kwb">ceil</span>

<span class="hl kwa">local</span> precision <span class="hl sym">=</span> <span class="hl num">50</span> <span class="hl slc">-- Maximum precision of lua_Number (minus safety margin).</span>
<span class="hl kwa">local</span> onebits <span class="hl sym">= (</span><span class="hl num">2</span>^precision<span class="hl sym">)-</span><span class="hl num">1</span>

<span class="hl kwa">local function</span> <span class="hl kwd">nsieve</span><span class="hl sym">(</span>p<span class="hl sym">,</span> m<span class="hl sym">)</span>
  <span class="hl kwa">local</span> cm <span class="hl sym">=</span> <span class="hl kwb">ceil</span><span class="hl sym">(</span>m<span class="hl sym">/</span>precision<span class="hl sym">)</span>
  <span class="hl kwa">do local</span> onebits <span class="hl sym">=</span> onebits<span class="hl sym">;</span> <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span>cm <span class="hl kwa">do</span> p<span class="hl sym">[</span>i<span class="hl sym">] =</span> onebits <span class="hl kwa">end end</span>
  <span class="hl kwa">local</span> count<span class="hl sym">,</span> idx<span class="hl sym">,</span> bit <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">2</span>
  <span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">2</span><span class="hl sym">,</span>m <span class="hl kwa">do</span>
    <span class="hl kwa">local</span> r <span class="hl sym">=</span> p<span class="hl sym">[</span>idx<span class="hl sym">] /</span> bit
    <span class="hl kwa">if</span> r <span class="hl sym">-</span> <span class="hl kwb">floor</span><span class="hl sym">(</span>r<span class="hl sym">) &gt;=</span> <span class="hl num">0.5</span> <span class="hl kwa">then</span> <span class="hl slc">-- Bit set?</span>
      <span class="hl kwa">local</span> kidx<span class="hl sym">,</span> kbit <span class="hl sym">=</span> idx<span class="hl sym">,</span> bit
      <span class="hl kwa">for</span> k<span class="hl sym">=</span>i<span class="hl sym">+</span>i<span class="hl sym">,</span>m<span class="hl sym">,</span>i <span class="hl kwa">do</span>
        kidx <span class="hl sym">=</span> kidx <span class="hl sym">+</span> i
        <span class="hl kwa">while</span> kidx <span class="hl sym">&gt;=</span> cm <span class="hl kwa">do</span> kidx <span class="hl sym">=</span> kidx <span class="hl sym">-</span> cm<span class="hl sym">;</span> kbit <span class="hl sym">=</span> kbit <span class="hl sym">+</span> kbit <span class="hl kwa">end</span>
        <span class="hl kwa">local</span> x <span class="hl sym">=</span> p<span class="hl sym">[</span>kidx<span class="hl sym">]</span>
        <span class="hl kwa">local</span> r <span class="hl sym">=</span> x <span class="hl sym">/</span> kbit
        <span class="hl kwa">if</span> r <span class="hl sym">-</span> <span class="hl kwb">floor</span><span class="hl sym">(</span>r<span class="hl sym">) &gt;=</span> <span class="hl num">0.5</span> <span class="hl kwa">then</span> p<span class="hl sym">[</span>kidx<span class="hl sym">] =</span> x <span class="hl sym">-</span> kbit<span class="hl sym">*</span><span class="hl num">0.5</span> <span class="hl kwa">end</span> <span class="hl slc">-- Clear bit.</span>
      <span class="hl kwa">end</span>
      count <span class="hl sym">=</span> count <span class="hl sym">+</span> <span class="hl num">1</span>
    <span class="hl kwa">end</span>
    idx <span class="hl sym">=</span> idx <span class="hl sym">+</span> <span class="hl num">1</span>
    <span class="hl kwa">if</span> idx <span class="hl sym">&gt;=</span> cm <span class="hl kwa">then</span> idx <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> bit <span class="hl sym">=</span> bit <span class="hl sym">+</span> bit <span class="hl kwa">end</span>
  <span class="hl kwa">end</span>
  <span class="hl kwa">return</span> count
<span class="hl kwa">end</span>

<span class="hl kwa">local</span> N <span class="hl sym">=</span> <span class="hl kwb">tonumber</span><span class="hl sym">(</span>arg <span class="hl kwa">and</span> arg<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span> <span class="hl kwa">or</span> <span class="hl num">1</span>
<span class="hl kwa">if</span> N <span class="hl sym">&lt;</span> <span class="hl num">2</span> <span class="hl kwa">then</span> N <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl kwa">end</span>
<span class="hl kwa">local</span> primes <span class="hl sym">= {}</span>

<span class="hl kwa">for</span> i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span> <span class="hl kwa">do</span>
  <span class="hl kwa">local</span> m <span class="hl sym">= (</span><span class="hl num">2</span>^<span class="hl sym">(</span>N<span class="hl sym">-</span>i<span class="hl sym">))*</span><span class="hl num">10000</span>
  io<span class="hl sym">.</span><span class="hl kwb">write</span><span class="hl sym">(</span><span class="hl kwb">string</span><span class="hl sym">.</span><span class="hl kwb">format</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to %8d %8d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> m<span class="hl sym">,</span> <span class="hl kwd">nsieve</span><span class="hl sym">(</span>primes<span class="hl sym">,</span> m<span class="hl sym">)))</span>
<span class="hl kwa">end</span>
