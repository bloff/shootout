&quot;  The Computer Language Shootout
   http<span class="sym">://</span>shootout<span class="sym">.</span>alioth<span class="sym">.</span>debian<span class="sym">.</span>org<span class="sym">/</span>
   contributed by Isaac Gouy&quot;<span class="sym">!</span>

<span class="sym">!</span>Shootout<span class="sym">.</span>Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span><span class="sym">!</span>

random
   <span class="sym">|</span> n random answer <span class="sym">|</span>
   n <span class="sym">:=</span> CEnvironment argv first asNumber<span class="sym">.</span>
   random <span class="sym">:=</span> RandomNumber to<span class="sym">:</span> <span class="num">100</span><span class="sym">.</span>
   n timesRepeat<span class="sym">: [</span>answer <span class="sym">:=</span> random next<span class="sym">].</span>
   <span class="sym">^(</span>answer asStringWith<span class="sym">:</span> <span class="num">9</span><span class="sym">)</span> withNl <span class="sym">! !</span>


Smalltalk<span class="sym">.</span>Shootout defineClass<span class="sym">: #</span>RandomNumber
	superclass<span class="sym">: #</span>{Core<span class="sym">.</span>Object}
	indexedType<span class="sym">: #</span>none
	private<span class="sym">:</span> <span class="kwa">false</span>
	instanceVariableNames<span class="sym">:</span> <span class="str">'seed scale '</span>
	classInstanceVariableNames<span class="sym">:</span> <span class="str">''</span>
	imports<span class="sym">:</span> <span class="str">''</span>
	category<span class="sym">:</span> <span class="str">'Shootout'</span><span class="sym">!</span>

Shootout<span class="sym">.</span>RandomNumber defineSharedVariable<span class="sym">: #</span>Modulus
	private<span class="sym">:</span> <span class="kwa">false</span>
	constant<span class="sym">:</span> <span class="kwa">false</span>
	category<span class="sym">:</span> <span class="str">'computer language shootout'</span>
	initializer<span class="sym">:</span> <span class="str">'139968'</span><span class="sym">!</span>

<span class="sym">#</span>{Shootout<span class="sym">.</span>RandomNumber<span class="sym">.</span>Modulus} initialize<span class="sym">!</span>

Shootout<span class="sym">.</span>RandomNumber defineSharedVariable<span class="sym">: #</span>FModulus
	private<span class="sym">:</span> <span class="kwa">false</span>
	constant<span class="sym">:</span> <span class="kwa">false</span>
	category<span class="sym">:</span> <span class="str">'computer language shootout'</span>
	initializer<span class="sym">:</span> <span class="str">'139968.0d'</span><span class="sym">!</span>

<span class="sym">#</span>{Shootout<span class="sym">.</span>RandomNumber<span class="sym">.</span>FModulus} initialize<span class="sym">!</span>

Shootout<span class="sym">.</span>RandomNumber defineSharedVariable<span class="sym">: #</span>Multiplier
	private<span class="sym">:</span> <span class="kwa">false</span>
	constant<span class="sym">:</span> <span class="kwa">false</span>
	category<span class="sym">:</span> <span class="str">'computer language shootout'</span>
	initializer<span class="sym">:</span> <span class="str">'3877'</span><span class="sym">!</span>

<span class="sym">#</span>{Shootout<span class="sym">.</span>RandomNumber<span class="sym">.</span>Multiplier} initialize<span class="sym">!</span>

Shootout<span class="sym">.</span>RandomNumber defineSharedVariable<span class="sym">: #</span>Increment
	private<span class="sym">:</span> <span class="kwa">false</span>
	constant<span class="sym">:</span> <span class="kwa">false</span>
	category<span class="sym">:</span> <span class="str">'computer language shootout'</span>
	initializer<span class="sym">:</span> <span class="str">'29573'</span><span class="sym">!</span>

<span class="sym">#</span>{Shootout<span class="sym">.</span>RandomNumber<span class="sym">.</span>Increment} initialize<span class="sym">!</span>


<span class="sym">!</span>Shootout<span class="sym">.</span>RandomNumber class methodsFor<span class="sym">:</span> <span class="str">'instance creation'</span><span class="sym">!</span>

to<span class="sym">:</span> anInteger
   <span class="sym">^</span><span class="kwa">self</span> basicNew to<span class="sym">:</span> anInteger <span class="sym">! !</span>


<span class="sym">!</span>Shootout<span class="sym">.</span>RandomNumber methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!</span>

next
	seed <span class="sym">:= (</span>seed <span class="sym">*</span> Multiplier <span class="sym">+</span> Increment<span class="sym">) \\</span> Modulus<span class="sym">.</span>
	<span class="sym">^(</span>seed <span class="sym">*</span> scale<span class="sym">)</span> asDouble <span class="sym">/</span> FModulus <span class="sym">! !</span>

<span class="sym">!</span>Shootout<span class="sym">.</span>RandomNumber methodsFor<span class="sym">:</span> <span class="str">'private'</span><span class="sym">!</span>

to<span class="sym">:</span> anInteger
   seed <span class="sym">:=</span> <span class="num">42</span><span class="sym">.</span>
   scale <span class="sym">:=</span> anInteger <span class="sym">! !</span>
