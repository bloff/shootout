<span class="com">{ The Great Computer Language Shootout</span>
<span class="com">  http://shootout.alioth.debian.org</span>
<span class="com"></span>
<span class="com">  contributed by Ales Katona</span>
<span class="com">}</span>

<span class="kwa">program</span> fannkuch<span class="sym">;</span>
<span class="kwa">uses</span> Math<span class="sym">;</span>

<span class="kwa">var</span> maxFlips <span class="sym">:</span> <span class="kwb">Longint</span><span class="sym">;</span>

<span class="kwa">procedure</span> <span class="kwd">exch</span><span class="sym">(</span><span class="kwa">var</span> a<span class="sym">,</span>b <span class="sym">:</span> <span class="kwb">Longint</span><span class="sym">);</span> <span class="kwa">inline</span><span class="sym">;</span>
<span class="kwa">var</span> tmp <span class="sym">:</span> <span class="kwb">Longint</span><span class="sym">;</span>
<span class="kwa">begin</span>
  tmp <span class="sym">:=</span> a<span class="sym">;</span> a <span class="sym">:=</span> b<span class="sym">;</span> b <span class="sym">:=</span> tmp<span class="sym">;</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">procedure</span> <span class="kwd">flop</span><span class="sym">(</span>p <span class="sym">:</span> <span class="kwa">array of</span> <span class="kwb">Longint</span><span class="sym">);</span>
<span class="kwa">var</span> flips<span class="sym">,</span>k<span class="sym">,</span>i <span class="sym">:</span> <span class="kwb">Longint</span><span class="sym">;</span>
<span class="kwa">begin</span>
  flips <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
  <span class="kwa">while</span> p<span class="sym">[</span><span class="num">0</span><span class="sym">] &gt;</span> <span class="num">1</span> <span class="kwa">do</span>
  <span class="kwa">begin</span>
    k <span class="sym">:=</span> p<span class="sym">[</span><span class="num">0</span><span class="sym">]-</span><span class="num">1</span><span class="sym">;</span>
    <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">to</span> <span class="sym">(</span>k<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">div</span> <span class="num">2</span> <span class="kwa">do</span>
      <span class="kwd">exch</span><span class="sym">(</span>p<span class="sym">[</span>i<span class="sym">],</span> p<span class="sym">[</span>k<span class="sym">-</span>i<span class="sym">]);</span>
    flips <span class="sym">:=</span> flips <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
  <span class="kwa">end</span><span class="sym">;</span>
  maxFlips <span class="sym">:=</span> <span class="kwd">max</span><span class="sym">(</span>flips<span class="sym">,</span> maxFlips<span class="sym">);</span>
<span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">var</span> n<span class="sym">,</span>i<span class="sym">,</span>x <span class="sym">:</span> <span class="kwb">Longint</span><span class="sym">;</span>
    a<span class="sym">,</span>s <span class="sym">:</span> <span class="kwa">array of</span> <span class="kwb">Longint</span><span class="sym">;</span>
<span class="kwa">begin</span>
  <span class="kwd">Val</span><span class="sym">(</span><span class="kwd">ParamStr</span><span class="sym">(</span><span class="num">1</span><span class="sym">),</span> n<span class="sym">,</span> i<span class="sym">);</span>
  <span class="kwd">SetLength</span><span class="sym">(</span>a<span class="sym">,</span>n<span class="sym">);</span>
  <span class="kwd">SetLength</span><span class="sym">(</span>s<span class="sym">,</span>n<span class="sym">);</span>
  <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">to</span> n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span> a<span class="sym">[</span>i<span class="sym">] :=</span> i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span>
  <span class="kwa">for</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">to</span> n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span> s<span class="sym">[</span>i<span class="sym">] :=</span> <span class="num">0</span><span class="sym">;</span>
  maxFlips <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
  x <span class="sym">:=</span> <span class="num">1</span><span class="sym">;</span>
  <span class="kwa">repeat</span>
    <span class="kwa">if</span> s<span class="sym">[</span>x<span class="sym">] &lt;</span> x <span class="kwa">then</span>
    <span class="kwa">begin</span>
      <span class="kwa">if</span> <span class="kwd">odd</span><span class="sym">(</span>x<span class="sym">)</span> <span class="kwa">then</span> <span class="kwd">exch</span><span class="sym">(</span>a<span class="sym">[</span>x<span class="sym">],</span>a<span class="sym">[</span>s<span class="sym">[</span>x<span class="sym">]])</span> <span class="kwa">else</span> <span class="kwd">exch</span><span class="sym">(</span>a<span class="sym">[</span>x<span class="sym">],</span>a<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
      <span class="kwd">flop</span><span class="sym">(</span>a<span class="sym">);</span>
      s<span class="sym">[</span>x<span class="sym">] :=</span> s<span class="sym">[</span>x<span class="sym">] +</span> <span class="num">1</span><span class="sym">;</span>
      x <span class="sym">:=</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwa">end</span>
    <span class="kwa">else</span>
    <span class="kwa">begin</span>
      s<span class="sym">[</span>x<span class="sym">] :=</span> <span class="num">0</span><span class="sym">;</span>
      x <span class="sym">:=</span> x <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
    <span class="kwa">end</span><span class="sym">;</span>
  <span class="kwa">until</span> x <span class="sym">=</span> n<span class="sym">;</span>
  <span class="kwd">writeln</span><span class="sym">(</span><span class="str">'Pfannkuchen('</span><span class="sym">,</span>n<span class="sym">,</span><span class="str">') = '</span><span class="sym">,</span>maxFlips<span class="sym">);</span>
<span class="kwa">end</span>.
