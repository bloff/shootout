<span class="slc"># ----------------------------------------------------------------------</span>
<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Code based on / inspired by existing, relevant Shootout submissions</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Anthony Borla</span>
<span class="slc"># ----------------------------------------------------------------------</span>

<span class="kwa">def</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n)
  <span class="kwa">return</span> n <span class="sym">+</span> <span class="num">1</span> <span class="kwa">if</span> m == <span class="num">0</span>
  <span class="kwa">return</span> <span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span>) <span class="kwa">if</span> n == <span class="num">0</span>
  <span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n <span class="sym">-</span> <span class="num">1</span>))
<span class="kwa">end</span>

<span class="slc"># ---------------------------------</span>

<span class="kwa">def</span> <span class="kwd">fib</span><span class="sym">(</span>n)
  <span class="kwa">return</span> <span class="num">1</span> <span class="kwa">if</span> n <span class="sym">&lt;</span> <span class="num">2</span>
  <span class="kwd">fib</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">2</span>) <span class="sym">+</span> <span class="kwd">fib</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">1</span>)
<span class="kwa">end</span>

<span class="slc"># ---------------------------------</span>

<span class="kwa">def</span> <span class="kwd">tak</span><span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z)
  <span class="kwa">return</span> z <span class="kwa">unless</span> y <span class="sym">&lt;</span> x
  <span class="kwd">tak</span><span class="sym">(</span><span class="kwd">tak</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> y<span class="sym">,</span> z)<span class="sym">,</span> <span class="kwd">tak</span><span class="sym">(</span>y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> z<span class="sym">,</span> x)<span class="sym">,</span> <span class="kwd">tak</span><span class="sym">(</span>z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> x<span class="sym">,</span> y))
<span class="kwa">end</span>

<span class="slc"># ---------------------------------</span>

n = <span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">.</span>shift <span class="sym">||</span> <span class="num">1</span>)<span class="sym">.</span>to_i

<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Ack(3,%d)</span><span class="sym">:</span> %d\n<span class="str">&quot;, n, ack(3, n)</span>)<span class="sym">;</span>
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Fib(%.1f)</span><span class="sym">:</span> %<span class="num">.1</span>f\n<span class="str">&quot;, 27.0 + n, fib(27.0 + n)</span>)<span class="sym">;</span>

n <span class="sym">-</span>= <span class="num">1</span><span class="sym">;</span>
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Tak(%d,%d,%d)</span><span class="sym">:</span> %d\n<span class="str">&quot;, n * 3, n * 2, n, tak(n * 3, n * 2, n)</span>)<span class="sym">;</span>

<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Fib(3)</span><span class="sym">:</span> %d\n<span class="str">&quot;, fib(3)</span>)<span class="sym">;</span>
<span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0)</span><span class="sym">:</span> %<span class="num">.1</span>f\n<span class="str">&quot;, tak(3.0, 2.0, 1.0)</span>)<span class="sym">;</span>

