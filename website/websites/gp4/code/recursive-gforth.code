<span class="slc">\ Computer Language Shootout</span>
<span class="slc">\ http://shootout.alioth.debian.org/</span>
<span class="slc">\ must use flags &quot;-d 8M -r 8M&quot; when running gforth for NUM=10</span>

<span class="slc">\ read NUM from last command line argument</span>
<span class="num">0</span><span class="sym">.</span> argc <span class="sym">&#64;</span> <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span>drop drop <span class="num">1</span><span class="sym">-</span> constant NUM

<span class="sym">:</span> ack <span class="com">( y x -- n )</span>
  <span class="sym">?</span>dup if swap <span class="sym">?</span>dup if <span class="num">1</span><span class="sym">-</span> over recurse swap <span class="num">1</span><span class="sym">-</span> recurse
                  else               <span class="num">1</span> swap <span class="num">1</span><span class="sym">-</span> recurse then
     else <span class="num">1</span><span class="sym">+</span> then <span class="sym">;</span>

<span class="sym">:</span> ffib <span class="com">( f -- ffib )</span>
  fdup <span class="num">2</span>e f<span class="sym">&lt;</span> if fdrop <span class="num">1</span>e
           else <span class="num">1</span>e f<span class="sym">-</span> fdup recurse fswap <span class="num">1</span>e f<span class="sym">-</span> recurse f<span class="sym">+</span> then <span class="sym">;</span>

<span class="sym">:</span> fib <span class="com">( n -- fib )</span>
  dup <span class="num">2</span> <span class="sym">&lt;</span> if drop <span class="num">1</span>
        else <span class="num">1</span><span class="sym">-</span> dup recurse swap <span class="num">1</span><span class="sym">-</span> recurse <span class="sym">+</span> then <span class="sym">;</span>

<span class="sym">:</span> tak { z y x <span class="sym">--</span> n }
  y x <span class="sym">&lt;</span> if
    y x z <span class="num">1</span><span class="sym">-</span> recurse
    x z y <span class="num">1</span><span class="sym">-</span> recurse
    z y x <span class="num">1</span><span class="sym">-</span> recurse
    recurse
  else z then <span class="sym">;</span>

<span class="sym">:</span> ftak { F<span class="sym">:</span> z F<span class="sym">:</span> y F<span class="sym">:</span> x <span class="sym">--</span> n }
  y x f<span class="sym">&lt;</span> if
    y x z <span class="num">1</span>e f<span class="sym">-</span> recurse
    x z y <span class="num">1</span>e f<span class="sym">-</span> recurse
    z y x <span class="num">1</span>e f<span class="sym">-</span> recurse
    recurse
  else z then <span class="sym">;</span>

<span class="sym">:</span> ff<span class="sym">.</span>   f<span class="sym">&gt;</span>d d<span class="sym">&gt;</span>s <span class="num">1</span> u<span class="sym">.</span>r <span class="sym">.</span><span class="str">&quot; .0&quot;</span> <span class="sym">;</span>

NUM <span class="num">1</span><span class="sym">+   .</span><span class="str">&quot; Ack(3,&quot;</span> dup <span class="num">1</span> u<span class="sym">.</span>r <span class="sym">.</span><span class="str">&quot; ): &quot;</span> <span class="num">3</span> ack <span class="num">1</span> u<span class="sym">.</span>r cr
NUM <span class="num">28</span> <span class="sym">+ .</span><span class="str">&quot; Fib(&quot;</span> dup <span class="num">1</span> u<span class="sym">.</span>r <span class="sym">.</span><span class="str">&quot; .0): &quot;</span> <span class="num">0</span> d<span class="sym">&gt;</span>f ffib ff<span class="sym">.</span> cr
<span class="sym">.</span><span class="str">&quot; Tak(&quot;</span> NUM <span class="num">3</span> <span class="sym">*</span> <span class="num">1</span> u<span class="sym">.</span>r <span class="sym">.</span><span class="str">&quot; ,&quot;</span> NUM <span class="num">2</span><span class="sym">*</span> <span class="num">1</span> u<span class="sym">.</span>r <span class="sym">.</span><span class="str">&quot; ,&quot;</span> NUM <span class="num">1</span> u<span class="sym">.</span>r <span class="sym">.</span><span class="str">&quot; ): &quot;</span>
                     NUM dup <span class="num">2</span><span class="sym">*</span> <span class="num">2</span>dup <span class="sym">+</span> tak <span class="num">1</span> u<span class="sym">.</span>r cr
<span class="sym">.</span><span class="str">&quot; Fib(3): &quot;</span> <span class="num">3</span> fib <span class="num">1</span> u<span class="sym">.</span>r cr
<span class="sym">.</span><span class="str">&quot; Tak(3.0,2.0,1.0): &quot;</span> <span class="num">1</span>e <span class="num">2</span>e <span class="num">3</span>e ftak ff<span class="sym">.</span> cr

bye
