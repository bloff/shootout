<span class="hl slc">;; ---------------------------------------------------------------------</span>
<span class="hl slc">;; The Great Computer Language Shootout</span>
<span class="hl slc">;; http://shootout.alioth.debian.org/</span>
<span class="hl slc">;;</span>
<span class="hl slc">;; Contributed by Anthony Borla</span>
<span class="hl slc">;; ---------------------------------------------------------------------</span>

<span class="hl sym">(</span>require-extension format<span class="hl sym">)</span>

<span class="hl sym">(</span>declare <span class="hl sym">(</span>disable-interrupts<span class="hl sym">) (</span>unsafe<span class="hl sym">) (</span>block<span class="hl sym">) (</span><span class="hl kwa">lambda</span>-lift<span class="hl sym">))</span>

<span class="hl slc">; -------------------------------</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>ack m n<span class="hl sym">)</span>
  <span class="hl sym">(</span><span class="hl kwa">cond</span> <span class="hl sym">((</span>fx<span class="hl sym">=</span> m <span class="hl num">0</span><span class="hl sym">) (</span>fx<span class="hl sym">+</span> n <span class="hl num">1</span><span class="hl sym">))</span>
        <span class="hl sym">((</span>fx<span class="hl sym">=</span> n <span class="hl num">0</span><span class="hl sym">) (</span>ack <span class="hl sym">(</span>fx- m <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl num">1</span><span class="hl sym">))</span>
        <span class="hl sym">(</span>else <span class="hl sym">(</span>ack <span class="hl sym">(</span>fx- m <span class="hl num">1</span><span class="hl sym">) (</span>ack m <span class="hl sym">(</span>fx- n <span class="hl num">1</span><span class="hl sym">))))))</span>

<span class="hl slc">; --------------</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>fib n<span class="hl sym">)</span>
  <span class="hl sym">(</span><span class="hl kwa">cond</span> <span class="hl sym">((</span>fx<span class="hl sym">&lt;</span> n <span class="hl num">2</span><span class="hl sym">)</span> <span class="hl num">1</span><span class="hl sym">)</span>
	<span class="hl sym">(</span>else <span class="hl sym">(</span>fx<span class="hl sym">+ (</span>fib <span class="hl sym">(</span>fx- n <span class="hl num">2</span><span class="hl sym">)) (</span>fib <span class="hl sym">(</span>fx- n <span class="hl num">1</span><span class="hl sym">))))))</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>fibflt n<span class="hl sym">)</span>
  <span class="hl sym">(</span><span class="hl kwa">cond</span> <span class="hl sym">((</span>fp<span class="hl sym">&lt;</span> n <span class="hl num">2.0</span><span class="hl sym">)</span> <span class="hl num">1.0</span><span class="hl sym">)</span>
	<span class="hl sym">(</span>else <span class="hl sym">(</span>fp<span class="hl sym">+ (</span>fibflt <span class="hl sym">(</span>fp- n <span class="hl num">2.0</span><span class="hl sym">)) (</span>fibflt <span class="hl sym">(</span>fp- n <span class="hl num">1.0</span><span class="hl sym">))))))</span>

<span class="hl slc">; --------------</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>tak x y z<span class="hl sym">)</span>
  <span class="hl sym">(</span><span class="hl kwa">cond</span> <span class="hl sym">((</span><span class="hl kwa">not</span> <span class="hl sym">(</span>fx<span class="hl sym">&lt;</span> y x<span class="hl sym">))</span> z<span class="hl sym">)</span>
        <span class="hl sym">(</span>else <span class="hl sym">(</span>tak <span class="hl sym">(</span>tak <span class="hl sym">(</span>fx- x <span class="hl num">1</span><span class="hl sym">)</span> y z<span class="hl sym">) (</span>tak <span class="hl sym">(</span>fx- y <span class="hl num">1</span><span class="hl sym">)</span> z x<span class="hl sym">) (</span>tak <span class="hl sym">(</span>fx- z <span class="hl num">1</span><span class="hl sym">)</span> x y<span class="hl sym">)))))</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>takflt x y z<span class="hl sym">)</span>
  <span class="hl sym">(</span><span class="hl kwa">cond</span> <span class="hl sym">((</span><span class="hl kwa">not</span> <span class="hl sym">(</span>fp<span class="hl sym">&lt;</span> y x<span class="hl sym">))</span> z<span class="hl sym">)</span>
        <span class="hl sym">(</span>else <span class="hl sym">(</span>takflt <span class="hl sym">(</span>takflt <span class="hl sym">(</span>fp- x <span class="hl num">1.0</span><span class="hl sym">)</span> y z<span class="hl sym">) (</span>takflt <span class="hl sym">(</span>fp- y <span class="hl num">1.0</span><span class="hl sym">)</span> z x<span class="hl sym">) (</span>takflt <span class="hl sym">(</span>fp- z <span class="hl num">1.0</span><span class="hl sym">)</span> x y<span class="hl sym">)))))</span>

<span class="hl slc">; -------------------------------</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>main args<span class="hl sym">)</span>
  <span class="hl sym">(</span>let<span class="hl sym">* ((</span>n <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwa">null</span>? args<span class="hl sym">)</span>
              <span class="hl num">1</span>
              <span class="hl sym">(</span>string-<span class="hl sym">&gt;</span>number <span class="hl sym">(</span><span class="hl kwa">car</span> args<span class="hl sym">))))</span>
         <span class="hl sym">(</span>nfp <span class="hl sym">(</span>exact-<span class="hl sym">&gt;</span>inexact n<span class="hl sym">)))</span>

    <span class="hl sym">(</span>format #t <span class="hl str">&quot;Ack(3,~d): ~d~%&quot;</span> n <span class="hl sym">(</span>ack <span class="hl num">3</span> n<span class="hl sym">))</span>

    <span class="hl sym">(</span>format #t <span class="hl str">&quot;Fib(~1F): ~,1F~%&quot;</span> <span class="hl sym">(</span>fp<span class="hl sym">+</span> <span class="hl num">27.0</span> nfp<span class="hl sym">) (</span>fibflt <span class="hl sym">(</span>fp<span class="hl sym">+</span> <span class="hl num">27.0</span> nfp<span class="hl sym">)))</span>

    <span class="hl sym">(</span><span class="hl kwa">set</span><span class="hl sym">!</span> n <span class="hl sym">(</span>sub1 n<span class="hl sym">))</span>
    <span class="hl sym">(</span>format #t <span class="hl str">&quot;Tak(~d,~d,~d): ~d~%&quot;</span> <span class="hl sym">(</span>fx<span class="hl sym">*</span> n <span class="hl num">3</span><span class="hl sym">) (</span>fx<span class="hl sym">*</span> n <span class="hl num">2</span><span class="hl sym">)</span> n <span class="hl sym">(</span>tak <span class="hl sym">(</span>fx<span class="hl sym">*</span> n <span class="hl num">3</span><span class="hl sym">) (</span>fx<span class="hl sym">*</span> n <span class="hl num">2</span><span class="hl sym">)</span> n<span class="hl sym">))</span>

    <span class="hl sym">(</span>format #t <span class="hl str">&quot;Fib(3): ~d~%&quot;</span> <span class="hl sym">(</span>fib <span class="hl num">3</span><span class="hl sym">))</span>
    <span class="hl sym">(</span>format #t <span class="hl str">&quot;Tak(3.0,2.0,1.0): ~,1F~%&quot;</span> <span class="hl sym">(</span>takflt <span class="hl num">3.0 2.0 1.0</span><span class="hl sym">))))</span>

<span class="hl slc">; -------------------------------</span>

<span class="hl sym">(</span>main <span class="hl sym">(</span><span class="hl kwa">command</span>-<span class="hl kwa">line</span>-arguments<span class="hl sym">))</span>

