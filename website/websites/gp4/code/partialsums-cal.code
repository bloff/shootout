<span class="hl com">/**</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * Based on the CAL Open Quark version</span>
<span class="hl com"> * Contributed by Magnus Byne.</span>
<span class="hl com"> */</span>
module Partialsums<span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Prelude using
    typeConstructor <span class="hl sym">=</span> <span class="hl kwc">Double</span><span class="hl sym">,</span> Int<span class="hl sym">,</span> <span class="hl kwc">String</span><span class="hl sym">;</span>
    function <span class="hl sym">=</span> fromInt<span class="hl sym">,</span> seq<span class="hl sym">,</span> eager<span class="hl sym">,</span> add<span class="hl sym">,</span> stringToInt<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Debug using
    function <span class="hl sym">=</span> show<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span><span class="hl kwc">Collections</span><span class="hl sym">.</span><span class="hl kwc">List</span> using
    function <span class="hl sym">=</span> map<span class="hl sym">,</span> head<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span><span class="hl kwc">Utilities</span><span class="hl sym">.</span><span class="hl kwc">MessageFormat</span> using
    function <span class="hl sym">=</span> formatWithPattern<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span><span class="hl kwc">Utilities</span><span class="hl sym">.</span><span class="hl kwc">Locale</span> using
    function <span class="hl sym">=</span> invariantLocale<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span><span class="hl kwc">Utilities</span><span class="hl sym">.</span><span class="hl kwc">Math</span> using
    function <span class="hl sym">=</span> power<span class="hl sym">,</span> sin<span class="hl sym">,</span> cos<span class="hl sym">,</span> sqrt<span class="hl sym">;</span>
    <span class="hl sym">;</span>


data foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;java.io.PrintStream&quot;</span> <span class="hl kwa">private</span> JPrintStream<span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;static field java.lang.System.out&quot;</span>
    <span class="hl kwa">private</span> stdout <span class="hl sym">::</span> JPrintStream<span class="hl sym">;</span>

foreign unsafe <span class="hl kwa">import</span> jvm <span class="hl str">&quot;method print&quot;</span>
    <span class="hl kwa">private</span> print <span class="hl sym">::</span> JPrintStream <span class="hl sym">-&gt;</span> <span class="hl kwc">String</span> <span class="hl sym">-&gt; ();</span>

main <span class="hl sym">:: [</span><span class="hl kwc">String</span><span class="hl sym">] -&gt; ();</span>
<span class="hl kwa">public</span> main <span class="hl sym">!</span>args <span class="hl sym">=</span>
    let
        n <span class="hl sym">=</span> eager $ <span class="hl kwd">stringToInt</span> <span class="hl sym">(</span>head args<span class="hl sym">);</span>
    in
        computeSums n <span class="hl num">1 1 0 0 0 0 0 0 0 0 0</span>
    <span class="hl sym">;</span>

computeSums <span class="hl sym">::</span>
    Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span>
    <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt;</span> <span class="hl kwc">Double</span> <span class="hl sym">-&gt; ();</span>
computeSums <span class="hl sym">!</span>maxIterations <span class="hl sym">!</span>iteration <span class="hl sym">!</span>alt <span class="hl sym">!</span>a1 <span class="hl sym">!</span>a2 <span class="hl sym">!</span>a3 <span class="hl sym">!</span>a4 <span class="hl sym">!</span>a5 <span class="hl sym">!</span>a6 <span class="hl sym">!</span>a7 <span class="hl sym">!</span>a8 <span class="hl sym">!</span>a9<span class="hl sym">=</span>
    <span class="hl kwa">if</span> iteration <span class="hl sym">&lt;=</span> maxIterations then
        let
            k <span class="hl sym">=</span> eager $ fromInt iteration <span class="hl sym">::</span> <span class="hl kwc">Double</span><span class="hl sym">;</span>
            k3 <span class="hl sym">=</span> eager $ k <span class="hl sym">*</span> k <span class="hl sym">*</span> k <span class="hl sym">::</span> <span class="hl kwc">Double</span><span class="hl sym">;</span>
            dk <span class="hl sym">=</span> eager $ <span class="hl num">1</span> <span class="hl sym">/</span> k <span class="hl sym">::</span> <span class="hl kwc">Double</span><span class="hl sym">;</span>
            sk <span class="hl sym">=</span> eager $ sin k<span class="hl sym">;</span>
            ck <span class="hl sym">=</span> eager $ cos k<span class="hl sym">;</span>
        in
            computeSums
                maxIterations
                <span class="hl sym">(</span>iteration <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span>
                <span class="hl sym">(-</span>alt<span class="hl sym">)</span>
                <span class="hl sym">(</span>a1 <span class="hl sym">+</span> <span class="hl kwd">power</span> <span class="hl sym">(</span><span class="hl num">2</span> <span class="hl sym">/</span> <span class="hl num">3</span><span class="hl sym">) (</span>k <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">))</span>
                <span class="hl sym">(</span>a2 <span class="hl sym">+</span> sqrt dk<span class="hl sym">)</span>
                <span class="hl sym">(</span>a3 <span class="hl sym">+</span> <span class="hl num">1</span> <span class="hl sym">/ (</span>k <span class="hl sym">* (</span>k <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)))</span>
                <span class="hl sym">(</span>a4 <span class="hl sym">+</span> <span class="hl num">1</span> <span class="hl sym">/ (</span>k3 <span class="hl sym">*</span> sk <span class="hl sym">*</span> sk<span class="hl sym">))</span>
                <span class="hl sym">(</span>a5 <span class="hl sym">+</span> <span class="hl num">1</span> <span class="hl sym">/ (</span>k3 <span class="hl sym">*</span> ck <span class="hl sym">*</span> ck<span class="hl sym">))</span>
                <span class="hl sym">(</span>a6 <span class="hl sym">+</span> dk<span class="hl sym">)</span>
                <span class="hl sym">(</span>a7 <span class="hl sym">+</span> dk <span class="hl sym">*</span> dk<span class="hl sym">)</span>
                <span class="hl sym">(</span>a8 <span class="hl sym">+</span> alt <span class="hl sym">*</span> dk<span class="hl sym">)</span>
                <span class="hl sym">(</span>a9 <span class="hl sym">+</span> alt <span class="hl sym">/ (</span><span class="hl num">2</span> <span class="hl sym">*</span> k <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">))</span>
    <span class="hl kwa">else</span>
        print
            stdout
            <span class="hl sym">(</span><span class="hl kwc">List</span><span class="hl sym">.</span>foldLeftStrict
                <span class="hl sym">(</span>
                    \acc elem <span class="hl sym">-&gt;</span>
                        acc
                        <span class="hl sym">++</span> formatWithPattern
                            <span class="hl str">&quot;{0,number,0.000000000}</span><span class="hl esc">\t</span><span class="hl str">{1}</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
                            invariantLocale
                            elem
                <span class="hl sym">)</span>
                <span class="hl str">&quot;&quot;</span>
                <span class="hl sym">[</span>
                    <span class="hl sym">(</span>a1<span class="hl sym">,</span> <span class="hl str">&quot;(2/3)^k&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a2<span class="hl sym">,</span> <span class="hl str">&quot;k^-0.5&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a3<span class="hl sym">,</span> <span class="hl str">&quot;1/k(k+1)&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a4<span class="hl sym">,</span> <span class="hl str">&quot;Flint Hills&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a5<span class="hl sym">,</span> <span class="hl str">&quot;Cookson Hills&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a6<span class="hl sym">,</span> <span class="hl str">&quot;Harmonic&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a7<span class="hl sym">,</span> <span class="hl str">&quot;Riemann Zeta&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a8<span class="hl sym">,</span> <span class="hl str">&quot;Alternating Harmonic&quot;</span><span class="hl sym">),</span>
                    <span class="hl sym">(</span>a9<span class="hl sym">,</span> <span class="hl str">&quot;Gregory&quot;</span><span class="hl sym">)</span>
                <span class="hl sym">]</span>
            <span class="hl sym">)</span>
    <span class="hl sym">;</span>

