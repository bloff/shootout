<span class="hl com">{-# OPTIONS -fbang-patterns #-}</span>
<span class="hl slc">--</span>
<span class="hl slc">-- The Computer Language Shootout</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">--</span>
<span class="hl slc">-- Contributed by Don Stewart</span>
<span class="hl slc">--</span>
<span class="hl slc">-- An elegant fold . unfold.</span>
<span class="hl slc">--</span>

<span class="hl kwa">import</span> Data.List
<span class="hl kwa">import qualified</span> Data.ByteString.Lazy.Char8 <span class="hl kwa">as</span> L

main <span class="hl sym">=</span> print . foldl' <span class="hl sym">(+)</span> <span class="hl num">0</span> . unfoldr parse <span class="hl sym">=&lt;&lt;</span> L.getContents

parse <span class="hl sym">!</span>s <span class="hl sym">|</span> Just <span class="hl sym">(</span>n<span class="hl sym">,</span>t<span class="hl sym">) &lt;-</span> L.readInt s <span class="hl sym">=</span> Just <span class="hl sym">(</span>n<span class="hl sym">,</span> L.tail t<span class="hl sym">)</span>
         <span class="hl sym">|</span> otherwise                 <span class="hl sym">=</span> Nothing
