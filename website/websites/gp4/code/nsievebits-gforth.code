<span class="slc">\ The Great Computer Language Shootout</span>
<span class="slc">\ http://shootout.alioth.debian.org/</span>
<span class="slc">\</span>
<span class="slc">\ contributed by Ian Osgood</span>

<span class="slc">\ read NUM from last command line argument</span>
<span class="num">0</span><span class="sym">.</span> argc <span class="sym">&#64;</span> <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span>drop drop <span class="num">2</span> max constant NUM

<span class="sym">:</span> bit<span class="sym">-</span>mask <span class="com">( n -- addr mask )</span>
  dup <span class="num">5</span> rshift cells here <span class="sym">+</span>  <span class="num">1</span> rot <span class="num">31</span> and lshift <span class="sym">;</span>

<span class="sym">:</span> bit<span class="sym">-</span>on<span class="sym">?</span> <span class="com">( n -- f )</span> bit<span class="sym">-</span>mask swap <span class="sym">&#64;</span> and <span class="sym">;</span>

<span class="sym">:</span> bit<span class="sym">-</span>off <span class="com">( n -- )</span> bit<span class="sym">-</span>mask invert over <span class="sym">&#64;</span> and swap <span class="sym">! ;</span>

<span class="sym">:</span> sieve <span class="com">( size -- n )</span>
  here over <span class="num">7</span> <span class="sym">+</span> <span class="num">8</span> <span class="sym">/ -</span><span class="num">1</span> fill
  <span class="num">0</span> over <span class="num">2</span> do
    i bit<span class="sym">-</span>on<span class="sym">?</span> if <span class="num">1</span><span class="sym">+</span>
      over i <span class="num">2</span><span class="sym">*</span> over min <span class="sym">?</span>do
        i bit<span class="sym">-</span>off
      j <span class="sym">+</span>loop
    then
  loop nip <span class="sym">;</span>

<span class="slc">\ count primes up to 2^n*10000</span>
<span class="sym">:</span> test <span class="com">( n -- )</span>
  <span class="num">1</span> swap lshift <span class="num">10000</span> <span class="sym">*</span>
  <span class="sym">.</span><span class="str">&quot; Primes up to &quot;</span> dup <span class="num">8</span> u<span class="sym">.</span>r sieve <span class="num">9</span> u<span class="sym">.</span>r cr <span class="sym">;</span>

<span class="slc">\ run sieve for N, N-1, N-2</span>
  NUM test  NUM <span class="num">1</span><span class="sym">-</span> test  NUM <span class="num">2</span> <span class="sym">-</span> test

bye  <span class="slc">\ done!</span>

