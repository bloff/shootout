<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># contributed by Pavel Valodzka</span>

<span class="hl kwa">def</span> <span class="hl kwd">nsieve</span><span class="hl sym">(</span>m<span class="hl sym">)</span>
  is_prime <span class="hl sym">=</span> Array<span class="hl sym">.</span><span class="hl kwd">new</span><span class="hl sym">(</span>m<span class="hl sym">,</span> <span class="hl kwa">true</span><span class="hl sym">)</span>
  count <span class="hl sym">=</span> <span class="hl num">0</span>
  <span class="hl num">2</span><span class="hl sym">.</span><span class="hl kwd">upto</span><span class="hl sym">(</span>m<span class="hl sym">){|</span>i<span class="hl sym">|</span>
    <span class="hl kwa">if</span> is_prime<span class="hl sym">[</span>i<span class="hl sym">]</span>
      <span class="hl sym">(</span><span class="hl num">2</span> <span class="hl sym">*</span> i<span class="hl sym">).</span><span class="hl kwd">step</span><span class="hl sym">(</span>m<span class="hl sym">,</span> i<span class="hl sym">){|</span>v<span class="hl sym">|</span>
        is_prime<span class="hl sym">[</span>v<span class="hl sym">] =</span> <span class="hl kwa">false</span>
      <span class="hl sym">}</span>
      count <span class="hl sym">+=</span> <span class="hl num">1</span>
    <span class="hl kwa">end</span>
  <span class="hl sym">}</span>
  <span class="hl kwa">return</span> count
<span class="hl kwa">end</span>

n <span class="hl sym">= (</span><span class="hl kwc">ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] ||</span> <span class="hl num">2</span><span class="hl sym">).</span>to_i
n <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl kwa">if</span> <span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">)</span>

<span class="hl num">3</span><span class="hl sym">.</span>times <span class="hl sym">{|</span>t<span class="hl sym">|</span>
  m <span class="hl sym">= (</span><span class="hl num">1</span><span class="hl sym">&lt;&lt;</span>n-t<span class="hl sym">)*</span><span class="hl num">10000</span>
  <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to %8d%9d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> m<span class="hl sym">,</span> <span class="hl kwd">nsieve</span><span class="hl sym">(</span>m<span class="hl sym">))</span>
<span class="hl sym">}</span>
