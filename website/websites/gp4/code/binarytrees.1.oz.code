<span class="hl slc">% The Computer Language Shootout</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">% contributed by Isaac Gouy</span>

<span class="hl kwa">functor</span>
<span class="hl kwa">import</span> Application System

<span class="hl kwa">define</span>
   <span class="hl sym">[</span>Arg<span class="hl sym">] = {</span>Application<span class="hl sym">.</span>getArgs plain<span class="hl sym">}</span>
   N <span class="hl sym">= {</span>String<span class="hl sym">.</span>toInt Arg<span class="hl sym">}</span>

   Min_ <span class="hl sym">=</span> <span class="hl num">4</span>
   Max_ <span class="hl sym">= {</span>Max Min_<span class="hl sym">+</span><span class="hl num">2</span> N<span class="hl sym">}</span>
   StretchDepth <span class="hl sym">=</span> Max_ <span class="hl sym">+</span> <span class="hl num">1</span>
   LongLivedTree

   <span class="hl kwa">fun</span> <span class="hl sym">{</span>NewTree I D<span class="hl sym">}</span>
      <span class="hl kwa">if</span> D <span class="hl sym">==</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
         tree<span class="hl sym">(</span>I nil nil<span class="hl sym">)</span>
      <span class="hl kwa">else</span>
         tree<span class="hl sym">(</span>I <span class="hl sym">{</span>NewTree <span class="hl num">2</span><span class="hl sym">*</span>I<span class="hl sym">-</span><span class="hl num">1</span> D<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">} {</span>NewTree <span class="hl num">2</span><span class="hl sym">*</span>I D<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">})</span>
      <span class="hl kwa">end</span>
   <span class="hl kwa">end</span>

   <span class="hl kwa">fun</span> <span class="hl sym">{</span>ItemCheck T<span class="hl sym">}</span>
      <span class="hl kwa">if</span> T <span class="hl sym">==</span> nil <span class="hl kwa">then</span> <span class="hl num">0</span>
      <span class="hl kwa">else</span> tree<span class="hl sym">(</span>I L R<span class="hl sym">) =</span> T <span class="hl kwa">in</span> I <span class="hl sym">+ {</span>ItemCheck L<span class="hl sym">} - {</span>ItemCheck R<span class="hl sym">}</span> <span class="hl kwa">end</span>
   <span class="hl kwa">end</span>

   <span class="hl kwa">proc</span> <span class="hl sym">{</span>ShowItemCheck S D T<span class="hl sym">}</span>
      <span class="hl sym">{</span>System<span class="hl sym">.</span>showInfo S <span class="hl sym">#</span> D <span class="hl sym">#</span> &quot;<span class="hl sym">\</span>t check<span class="hl sym">:</span> &quot; <span class="hl sym"># {</span>ItemCheck T<span class="hl sym">}}</span>
   <span class="hl kwa">end</span>

   <span class="hl kwa">proc</span> <span class="hl sym">{</span>ShowCheck I D Check<span class="hl sym">}</span>
      <span class="hl sym">{</span>System<span class="hl sym">.</span>showInfo <span class="hl num">2</span><span class="hl sym">*</span>I <span class="hl sym">#</span> &quot;<span class="hl sym">\</span>t trees <span class="hl kwa">of</span> depth &quot; <span class="hl sym">#</span> D <span class="hl sym">#</span> &quot;<span class="hl sym">\</span>t check<span class="hl sym">:</span> &quot; <span class="hl sym">#</span> Check<span class="hl sym">}</span>
   <span class="hl kwa">end</span>

<span class="hl kwa">in</span>
   <span class="hl sym">{</span>ShowItemCheck &quot;stretch tree <span class="hl kwa">of</span> depth &quot; StretchDepth <span class="hl sym">{</span>NewTree <span class="hl num">0</span> StretchDepth<span class="hl sym">}}</span>
   LongLivedTree <span class="hl sym">= {</span>NewTree <span class="hl num">0</span> Max_<span class="hl sym">}</span>

   <span class="hl kwa">for</span> D <span class="hl kwa">in</span> Min_<span class="hl sym">;</span> D<span class="hl sym">=&lt;</span>Max_<span class="hl sym">;</span> D<span class="hl sym">+</span><span class="hl num">2</span> do
      N <span class="hl sym">= {</span>Pow <span class="hl num">2</span> Max_<span class="hl sym">-</span>D<span class="hl sym">+</span>Min_<span class="hl sym">}</span>
      Check <span class="hl sym">= {</span>NewCell <span class="hl num">0</span><span class="hl sym">}</span>
   <span class="hl kwa">in</span>
      <span class="hl kwa">for</span> I <span class="hl kwa">in</span> <span class="hl num">1</span><span class="hl sym">..</span>N do
         Check <span class="hl sym">:= &#64;</span>Check <span class="hl sym">+ {</span>ItemCheck <span class="hl sym">{</span>NewTree I D<span class="hl sym">}} + {</span>ItemCheck <span class="hl sym">{</span>NewTree <span class="hl sym">~</span>I D<span class="hl sym">}}</span>
      <span class="hl kwa">end</span>
      <span class="hl sym">{</span>ShowCheck N D <span class="hl sym">&#64;</span>Check<span class="hl sym">}</span>
   <span class="hl kwa">end</span>

   <span class="hl sym">{</span>ShowItemCheck &quot;long lived tree <span class="hl kwa">of</span> depth &quot; Max_ LongLivedTree<span class="hl sym">}</span>
   <span class="hl sym">{</span>Application<span class="hl sym">.</span>exit <span class="hl num">0</span><span class="hl sym">}</span>
<span class="hl kwa">end</span>
