<span class="com">&quot;*  The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy *&quot;</span><span class="sym">!</span>

<span class="sym">!</span>Tests class methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/30/2006 23:28'</span><span class="sym">!</span>recursive   <span class="sym">|</span> n stdout <span class="sym">|</span>   n <span class="sym">:= (</span>SmalltalkImage current getSystemAttribute<span class="sym">:</span> <span class="num">3</span><span class="sym">)</span> asInteger<span class="sym">.</span>   stdout <span class="sym">:=</span> UnixProcess stdOut<span class="sym">.</span>   stdout       nextPutAll<span class="sym">:</span> <span class="str">'Ack(3,'</span><span class="sym">,</span> n printString<span class="sym">,</span> <span class="str">'): '</span><span class="sym">, (</span><span class="num">3</span> ack<span class="sym">:</span> n<span class="sym">)</span> printString<span class="sym">;</span>       nextPut<span class="sym">:</span> Character lf<span class="sym">;</span>      nextPutAll<span class="sym">:</span> <span class="str">'Fib('</span><span class="sym">, ((</span><span class="num">27.0</span><span class="sym">+</span>n<span class="sym">)</span> asStringWith<span class="sym">:</span> <span class="num">1</span><span class="sym">),</span> <span class="str">'): '</span><span class="sym">,          ((</span><span class="num">27.0</span><span class="sym">+</span>n<span class="sym">)</span> fib asStringWith<span class="sym">:</span> <span class="num">1</span><span class="sym">);</span>       nextPut<span class="sym">:</span> Character lf<span class="sym">.</span>   n <span class="sym">:=</span> n <span class="sym">-</span> <span class="num">1</span><span class="sym">.</span>   stdout       nextPutAll<span class="sym">:</span> <span class="str">'Tak('</span><span class="sym">, (</span><span class="num">3</span><span class="sym">*</span>n<span class="sym">)</span> printString<span class="sym">,</span> <span class="str">','</span><span class="sym">,         (</span><span class="num">2</span><span class="sym">*</span>n<span class="sym">)</span> printString<span class="sym">,</span> <span class="str">','</span><span class="sym">,</span> n printString<span class="sym">,</span> <span class="str">'): '</span><span class="sym">,           (</span><span class="num">3</span><span class="sym">*</span>n tak<span class="sym">:</span> <span class="num">2</span><span class="sym">*</span>n z<span class="sym">:</span> n<span class="sym">)</span> printString<span class="sym">;</span>       nextPut<span class="sym">:</span> Character lf<span class="sym">;</span>      nextPutAll<span class="sym">:</span> <span class="str">'Fib(3): '</span><span class="sym">,</span> <span class="num">3</span> fib printString<span class="sym">;</span>      nextPut<span class="sym">:</span> Character lf<span class="sym">;</span>      nextPutAll<span class="sym">:</span> <span class="str">'Tak(3.0,2.0,1.0): '</span><span class="sym">,           ((</span><span class="num">3.0</span> tak<span class="sym">:</span> <span class="num">2.0</span> z<span class="sym">:</span> <span class="num">1.0</span><span class="sym">)</span> asStringWith<span class="sym">:</span> <span class="num">1</span><span class="sym">);</span>       nextPut<span class="sym">:</span> Character lf<span class="sym">.! !</span>

<span class="sym">!</span>SmallInteger methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 21:30'</span><span class="sym">!</span>ack<span class="sym">:</span> aSmallInteger   <span class="sym">^</span><span class="kwa">self</span> <span class="sym">==</span> <span class="num">0</span>      ifTrue<span class="sym">: [</span>aSmallInteger <span class="sym">+</span> <span class="num">1</span><span class="sym">]</span>      ifFalse<span class="sym">: [</span>         aSmallInteger <span class="sym">==</span> <span class="num">0</span>            ifTrue<span class="sym">: [</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">1</span> ack<span class="sym">:</span>  <span class="num">1</span><span class="sym">]</span>            ifFalse<span class="sym">: [</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">1</span> ack<span class="sym">: (</span><span class="kwa">self</span> ack<span class="sym">:</span> aSmallInteger <span class="sym">-</span> <span class="num">1</span><span class="sym">)] ]! !</span>


<span class="sym">!</span>SmallInteger methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 21:31'</span><span class="sym">!</span>fib   <span class="sym">^</span><span class="kwa">self</span> <span class="sym">&lt;</span> <span class="num">2</span>
      ifTrue<span class="sym">: [</span><span class="num">1</span><span class="sym">]</span>
      ifFalse<span class="sym">: [(</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">2</span><span class="sym">)</span> fib <span class="sym">+ (</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> fib<span class="sym">]! !</span>


<span class="sym">!</span>SmallInteger methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 21:31'</span><span class="sym">!</span>tak<span class="sym">:</span> y z<span class="sym">:</span> z   <span class="sym">^</span>y <span class="sym">&lt;</span> <span class="kwa">self</span>       ifTrue<span class="sym">: [</span>
         <span class="sym">((</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> tak<span class="sym">:</span> y z<span class="sym">:</span> z<span class="sym">)</span>
            tak<span class="sym">: ((</span>y <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> tak<span class="sym">:</span> z z<span class="sym">:</span> <span class="kwa">self</span><span class="sym">)</span> z<span class="sym">: ((</span>z <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> tak<span class="sym">:</span> <span class="kwa">self</span> z<span class="sym">:</span> y<span class="sym">)</span>
      <span class="sym">]</span>      ifFalse<span class="sym">: [</span>z<span class="sym">]! !</span>


<span class="sym">!</span>Float methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 21:49'</span><span class="sym">!</span>fib   <span class="sym">^</span><span class="kwa">self</span> <span class="sym">&lt;</span> <span class="num">2.0</span>
      ifTrue<span class="sym">: [</span><span class="num">1.0</span><span class="sym">]</span>
      ifFalse<span class="sym">: [(</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">2.0</span><span class="sym">)</span> fib <span class="sym">+ (</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> fib<span class="sym">]! !</span>
<span class="sym">!</span>Float methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/29/2006 21:49'</span><span class="sym">!</span>tak<span class="sym">:</span> y z<span class="sym">:</span> z   <span class="sym">^</span>y <span class="sym">&lt;</span> <span class="kwa">self</span>       ifTrue<span class="sym">: [</span>
         <span class="sym">((</span><span class="kwa">self</span> <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> tak<span class="sym">:</span> y z<span class="sym">:</span> z<span class="sym">)</span>
            tak<span class="sym">: ((</span>y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> tak<span class="sym">:</span> z z<span class="sym">:</span> <span class="kwa">self</span><span class="sym">)</span> z<span class="sym">: ((</span>z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> tak<span class="sym">:</span> <span class="kwa">self</span> z<span class="sym">:</span> y<span class="sym">)</span>
      <span class="sym">]</span>      ifFalse<span class="sym">: [</span>z<span class="sym">]! !</span>

<span class="sym">!</span>Float methodsFor<span class="sym">:</span> <span class="str">'benchmarking'</span> stamp<span class="sym">:</span> <span class="str">'  11/30/2006 23:27'</span><span class="sym">!</span>asStringWith<span class="sym">:</span> anInteger   <span class="sym">^(</span><span class="kwa">self</span> asScaledDecimal<span class="sym">:</span> anInteger<span class="sym">)</span> printString copyUpTo<span class="sym">: $</span>s <span class="sym">! !</span>
