<span class="slc">#!/usr/bin/python -OO</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Kevin Carson</span>

<span class="kwc">import</span> sys
<span class="kwc">import</span> psyco

psyco<span class="sym">.</span><span class="kwd">full</span><span class="sym">()</span>

<span class="kwb">def</span> <span class="kwd">fannkuch</span><span class="sym">(</span>n<span class="sym">) :</span>
    p <span class="sym">=</span> <span class="kwa">range</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">)</span>
    q <span class="sym">= [</span>None<span class="sym">]*</span>n
    maxflips <span class="sym">=</span> <span class="num">0</span>

    <span class="kwb">while</span> True <span class="sym">:</span>
        <span class="kwb">if</span> p<span class="sym">[</span><span class="num">0</span><span class="sym">] !=</span> <span class="num">1</span> <span class="sym">:</span>
            q<span class="sym">[</span><span class="num">0</span><span class="sym">:</span>n<span class="sym">] =</span> p<span class="sym">[</span><span class="num">0</span><span class="sym">:</span>n<span class="sym">]</span>

            flips <span class="sym">=</span> <span class="num">0</span>
            <span class="kwb">while</span> q<span class="sym">[</span><span class="num">0</span><span class="sym">] !=</span> <span class="num">1</span> <span class="sym">:</span>
                k <span class="sym">=</span> q<span class="sym">[</span><span class="num">0</span><span class="sym">] -</span> <span class="num">1</span>
                i <span class="sym">=</span> <span class="num">0</span>
                <span class="kwb">while</span> i <span class="sym">&lt;</span> k <span class="sym">:</span>
                    q<span class="sym">[</span>i<span class="sym">],</span>q<span class="sym">[</span>k<span class="sym">] =</span> q<span class="sym">[</span>k<span class="sym">],</span>q<span class="sym">[</span>i<span class="sym">]</span>
                    i <span class="sym">+=</span> <span class="num">1</span>
                    k <span class="sym">-=</span> <span class="num">1</span>
                flips <span class="sym">+=</span> <span class="num">1</span>

            <span class="kwb">if</span> flips <span class="sym">&gt;</span> maxflips <span class="sym">:</span>
                maxflips <span class="sym">=</span> flips

        j <span class="sym">=</span> k <span class="sym">=</span> <span class="num">0</span>
        <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">1</span><span class="sym">,</span> n<span class="sym">) :</span>
            <span class="kwb">if</span> p<span class="sym">[</span>i <span class="sym">-</span> <span class="num">1</span><span class="sym">] &lt;</span> p<span class="sym">[</span>i<span class="sym">] :</span>
                j <span class="sym">=</span> i
            <span class="kwb">if</span> <span class="sym">(</span>j <span class="sym">!=</span> <span class="num">0</span><span class="sym">)</span> <span class="kwb">and</span> <span class="sym">(</span>p<span class="sym">[</span>i<span class="sym">] &gt;</span> p<span class="sym">[</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">]) :</span>
                k <span class="sym">=</span> i

        <span class="kwb">if</span> j <span class="sym">==</span> <span class="num">0</span> <span class="sym">:</span>
            <span class="kwb">break</span>

        p<span class="sym">[</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">],</span>p<span class="sym">[</span>k<span class="sym">] =</span> p<span class="sym">[</span>k<span class="sym">],</span>p<span class="sym">[</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">]</span>

        i <span class="sym">=</span> j
        j <span class="sym">=</span> n <span class="sym">-</span> <span class="num">1</span>
        <span class="kwb">while</span> i <span class="sym">&lt;</span> j <span class="sym">:</span>
            p<span class="sym">[</span>i<span class="sym">],</span>p<span class="sym">[</span>j<span class="sym">] =</span> p<span class="sym">[</span>j<span class="sym">],</span>p<span class="sym">[</span>i<span class="sym">]</span>
            i <span class="sym">+=</span> <span class="num">1</span>
            j <span class="sym">-=</span> <span class="num">1</span>

    <span class="kwb">return</span> maxflips


<span class="kwb">def</span> <span class="kwd">main</span><span class="sym">() :</span>
    <span class="kwb">if</span> <span class="kwa">len</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">) ==</span> <span class="num">2</span> <span class="sym">:</span>
        n <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>
    <span class="kwb">else</span> <span class="sym">:</span>
        n <span class="sym">=</span> <span class="num">1</span>

    <span class="kwb">print</span> <span class="str">&quot;Pfannkuchen(%d) = %ld&quot;</span> <span class="sym">% (</span>n<span class="sym">,</span> <span class="kwd">fannkuch</span><span class="sym">(</span>n<span class="sym">))</span>

<span class="kwd">main</span><span class="sym">()</span>
