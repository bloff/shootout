<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># Contributed by Peter Bjarke Olsen</span>
<span class="hl slc"># Modified by Doug King</span>

seq<span class="hl sym">=</span>Array<span class="hl sym">.</span>new

<span class="hl kwa">def</span> <span class="hl kwd">revcomp</span><span class="hl sym">(</span>seq<span class="hl sym">)</span>
  seq<span class="hl sym">.</span>reverse<span class="hl sym">!.</span>tr<span class="hl sym">!(</span><span class="hl str">'wsatugcyrkmbdhvnATUGCYRKMBDHVN'</span><span class="hl sym">,</span><span class="hl str">'WSTAACGRYMKVHDBNTAACGRYMKVHDBN'</span><span class="hl sym">)</span>
  stringlen<span class="hl sym">=</span>seq<span class="hl sym">.</span>length
  <span class="hl num">0</span><span class="hl sym">.</span><span class="hl kwd">step</span><span class="hl sym">(</span>stringlen-1<span class="hl sym">,</span><span class="hl num">60</span><span class="hl sym">) {|</span>x<span class="hl sym">|</span> print seq<span class="hl sym">.</span><span class="hl kwd">slice</span><span class="hl sym">(</span>x<span class="hl sym">,</span><span class="hl num">60</span><span class="hl sym">) ,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">}</span>
<span class="hl kwa">end</span>

<span class="hl kwa">while</span> <span class="hl kwc">STDIN</span><span class="hl sym">.</span>gets
  <span class="hl kwa">if</span> <span class="hl kwb">$_</span> <span class="hl sym">=</span>~ <span class="hl sym">/&gt;/</span>
    <span class="hl kwa">if</span> seq<span class="hl sym">.</span>length <span class="hl sym">!=</span> <span class="hl num">0</span>
      <span class="hl kwd">revcomp</span><span class="hl sym">(</span>seq<span class="hl sym">.</span>join<span class="hl sym">)</span>
      seq<span class="hl sym">=</span>Array<span class="hl sym">.</span>new
    <span class="hl kwa">end</span>
    puts <span class="hl kwb">$_</span>
  <span class="hl kwa">else</span>
    <span class="hl kwb">$_</span><span class="hl sym">.</span><span class="hl kwd">sub</span><span class="hl sym">(/</span>\n<span class="hl sym">/,</span><span class="hl str">''</span><span class="hl sym">)</span>
    seq<span class="hl sym">.</span>push <span class="hl kwb">$_</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>
<span class="hl kwd">revcomp</span><span class="hl sym">(</span>seq<span class="hl sym">.</span>join<span class="hl sym">)</span>
