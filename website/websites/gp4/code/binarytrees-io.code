<span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org</span>
<span class="com"></span>
<span class="com">   Contributed by Ian Osgood */</span>

TreeNode <span class="sym">:=</span> Object clone <span class="kwa">do</span><span class="sym">(</span>
    bottomUpTree <span class="sym">:=</span> <span class="kwd">method</span><span class="sym">(</span>n<span class="sym">,</span>d<span class="sym">,</span>
        self item <span class="sym">:=</span> n
        <span class="kwa">if</span> <span class="sym">(</span>d<span class="sym">&gt;</span><span class="num">0</span><span class="sym">,</span>   n<span class="sym">=</span><span class="num">2</span><span class="sym">*</span>n<span class="sym">;</span> d<span class="sym">=</span>d<span class="sym">-</span><span class="num">1</span>
            self left  <span class="sym">:=</span> TreeNode clone <span class="kwd">bottomUpTree</span><span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> d<span class="sym">)</span>
            self right <span class="sym">:=</span> TreeNode clone <span class="kwd">bottomUpTree</span><span class="sym">(</span>n<span class="sym">,</span>   d<span class="sym">)</span>
        <span class="sym">)</span>
        self
    <span class="sym">)</span>
    itemCheck <span class="sym">:=</span> <span class="kwd">method</span><span class="sym">(</span>
        <span class="kwa">if</span> <span class="sym">(</span>self <span class="kwd">hasSlot</span><span class="sym">(</span><span class="str">&quot;left&quot;</span><span class="sym">),</span> item <span class="sym">+</span> left itemCheck <span class="sym">-</span> right itemCheck<span class="sym">,</span> item<span class="sym">)</span>
    <span class="sym">)</span>
<span class="sym">)</span>

minDepth <span class="sym">:=</span> <span class="num">4</span>
maxDepth <span class="sym">:=</span> args <span class="kwd">at</span><span class="sym">(</span><span class="num">0</span><span class="sym">)</span> asNumber <span class="kwd">max</span><span class="sym">(</span>minDepth<span class="sym">+</span><span class="num">2</span><span class="sym">)</span>

check <span class="sym">:=</span> TreeNode clone <span class="kwd">bottomUpTree</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> maxDepth<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> itemCheck
<span class="kwd">writeln</span><span class="sym">(</span><span class="str">&quot;stretch tree of depth &quot;</span><span class="sym">,</span> maxDepth<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\t</span> <span class="str">check: &quot;</span><span class="sym">,</span> check<span class="sym">)</span>

longLivedTree <span class="sym">:=</span> TreeNode clone <span class="kwd">bottomUpTree</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> maxDepth<span class="sym">)</span>

<span class="kwa">for</span> <span class="sym">(</span>depth<span class="sym">,</span> minDepth<span class="sym">,</span> maxDepth<span class="sym">,</span> <span class="num">2</span><span class="sym">,</span>
    iterations <span class="sym">:=</span> <span class="num">1</span> clone <span class="kwd">shiftLeft</span><span class="sym">(</span>maxDepth <span class="sym">-</span> depth <span class="sym">+</span> minDepth<span class="sym">)</span>
    check <span class="sym">=</span> <span class="num">0</span>
    <span class="kwa">for</span> <span class="sym">(</span>i<span class="sym">,</span> <span class="num">1</span><span class="sym">,</span> iterations<span class="sym">,</span>
        check <span class="sym">=</span> check <span class="sym">+</span> TreeNode clone <span class="kwd">bottomUpTree</span><span class="sym">(</span> i<span class="sym">,</span> depth<span class="sym">)</span> itemCheck
        check <span class="sym">=</span> check <span class="sym">+</span> TreeNode clone <span class="kwd">bottomUpTree</span><span class="sym">(-</span>i<span class="sym">,</span> depth<span class="sym">)</span> itemCheck
    <span class="sym">)</span>
    <span class="kwd">writeln</span><span class="sym">(</span>iterations<span class="sym">*</span><span class="num">2</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\t</span> <span class="str">trees of depth &quot;</span><span class="sym">,</span> depth<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\t</span> <span class="str">check: &quot;</span><span class="sym">,</span> check<span class="sym">)</span>
<span class="sym">)</span>

check <span class="sym">=</span> longLivedTree itemCheck
<span class="kwd">writeln</span><span class="sym">(</span><span class="str">&quot;long lived tree of depth &quot;</span><span class="sym">,</span> maxDepth<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\t</span> <span class="str">check: &quot;</span><span class="sym">,</span> check<span class="sym">)</span>
