<span class="hl com">/**</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> * contributed by Isaac Gouy</span>
<span class="hl com"> * modified by Stefan Krause</span>
<span class="hl com"> */</span>

<span class="hl kwa">import</span> java<span class="hl sym">.</span>lang<span class="hl sym">.</span><span class="hl kwc">Math</span><span class="hl sym">;</span>

<span class="hl kwa">class</span> partialsums <span class="hl sym">{</span>
   <span class="hl kwa">static final</span> <span class="hl kwb">double</span> twothirds <span class="hl sym">=</span> <span class="hl num">2.0</span><span class="hl sym">/</span><span class="hl num">3.0</span><span class="hl sym">;</span>

   <span class="hl kwa">public static class</span> FasterTrig <span class="hl sym">{</span>
		<span class="hl kwa">private static final</span> <span class="hl kwb">double</span> PI_DOUBLE <span class="hl sym">=</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>PI <span class="hl sym">*</span> <span class="hl num">2.0</span><span class="hl sym">;</span>
		<span class="hl kwa">private static final</span> <span class="hl kwb">double</span> PI_FOURTH <span class="hl sym">=</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>PI <span class="hl sym">/</span> <span class="hl num">4.0</span><span class="hl sym">;</span>
		<span class="hl kwa">private static final</span> <span class="hl kwb">double</span> PI_HALF <span class="hl sym">=</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>PI <span class="hl sym">/</span> <span class="hl num">2.0</span><span class="hl sym">;</span>
		<span class="hl kwa">private static final</span> <span class="hl kwb">double</span> PI <span class="hl sym">=</span> <span class="hl kwc">Math</span><span class="hl sym">.</span>PI<span class="hl sym">;</span>
		<span class="hl kwa">private static final</span> <span class="hl kwb">double</span> SIN_CORRECTION <span class="hl sym">=</span> <span class="hl num">2.44745300000000500000e-16</span><span class="hl sym">;</span>
		<span class="hl kwa">private static final</span> <span class="hl kwb">double</span> COS_CORRECTION <span class="hl sym">=</span> <span class="hl num">2.45045300000000500000e-16</span><span class="hl sym">;</span>

		<span class="hl kwa">private static</span> <span class="hl kwb">double</span> <span class="hl kwd">fastSin</span><span class="hl sym">(</span><span class="hl kwb">double</span> x<span class="hl sym">)</span>
		<span class="hl sym">{</span>
			<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&gt;</span>PI_FOURTH <span class="hl sym">||</span> x <span class="hl sym">&lt;-</span>PI_FOURTH<span class="hl sym">)</span> <span class="hl kwa">throw new</span> <span class="hl kwc">IllegalArgumentException</span><span class="hl sym">(</span><span class="hl str">&quot;invalid angle &quot;</span><span class="hl sym">+</span>x<span class="hl sym">);</span>
			<span class="hl kwa">return</span> <span class="hl kwc">Math</span><span class="hl sym">.</span><span class="hl kwd">sin</span><span class="hl sym">(</span>x<span class="hl sym">);</span>
		<span class="hl sym">}</span>

		<span class="hl kwa">private static</span> <span class="hl kwb">double</span> <span class="hl kwd">fastCos</span><span class="hl sym">(</span><span class="hl kwb">double</span> x<span class="hl sym">)</span>
		<span class="hl sym">{</span>
			<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&gt;</span>PI_FOURTH <span class="hl sym">||</span> x <span class="hl sym">&lt;-</span>PI_FOURTH<span class="hl sym">)</span> <span class="hl kwa">throw new</span> <span class="hl kwc">IllegalArgumentException</span><span class="hl sym">(</span><span class="hl str">&quot;invalid angle &quot;</span><span class="hl sym">+</span>x<span class="hl sym">);</span>
			<span class="hl kwa">return</span> <span class="hl kwc">Math</span><span class="hl sym">.</span><span class="hl kwd">cos</span><span class="hl sym">(</span>x<span class="hl sym">);</span>
		<span class="hl sym">}</span>

		<span class="hl kwa">public static</span> <span class="hl kwb">double</span> <span class="hl kwd">sin</span><span class="hl sym">(</span><span class="hl kwb">double</span> x<span class="hl sym">)</span>
		<span class="hl sym">{</span>
			<span class="hl slc">// The correction factor works fine for this case. If you prefer performance to</span>
			<span class="hl slc">// accuracy you'd just say x = (x % PI_DOUBLE) instead of the two lines below</span>
			<span class="hl kwb">double</span> f <span class="hl sym">=</span> x <span class="hl sym">/</span> PI_DOUBLE<span class="hl sym">;</span>
			x <span class="hl sym">= (</span>x <span class="hl sym">%</span> PI_DOUBLE<span class="hl sym">) -</span> f <span class="hl sym">*</span> SIN_CORRECTION<span class="hl sym">;</span>

			<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&lt;</span><span class="hl num">0</span><span class="hl sym">)</span> x <span class="hl sym">+=</span> PI_DOUBLE<span class="hl sym">;</span>
			<span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">&gt;</span> PI<span class="hl sym">)</span> x <span class="hl sym">-=</span> PI_DOUBLE<span class="hl sym">;</span>

			<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&gt;=</span><span class="hl num">0</span><span class="hl sym">)</span>
			<span class="hl sym">{</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">&gt;</span> PI_HALF<span class="hl sym">)</span> x <span class="hl sym">=</span> PI <span class="hl sym">-</span> x<span class="hl sym">;</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&lt;=</span>PI_FOURTH<span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwd">fastSin</span><span class="hl sym">(</span>x<span class="hl sym">);</span>
				<span class="hl kwa">else return</span> <span class="hl kwd">fastCos</span><span class="hl sym">(</span>x<span class="hl sym">-</span>PI_HALF<span class="hl sym">);</span>
			<span class="hl sym">}</span>
			<span class="hl kwa">else</span>
			<span class="hl sym">{</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">&lt; -</span>PI_HALF<span class="hl sym">)</span> x <span class="hl sym">= -</span>PI <span class="hl sym">-</span> x<span class="hl sym">;</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&gt;=-</span>PI_FOURTH<span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwd">fastSin</span><span class="hl sym">(</span>x<span class="hl sym">);</span>
				<span class="hl kwa">else return</span> <span class="hl sym">-</span><span class="hl kwd">fastCos</span><span class="hl sym">(</span>x<span class="hl sym">+</span>PI_HALF<span class="hl sym">);</span>
			<span class="hl sym">}</span>
		<span class="hl sym">}</span>


		<span class="hl kwa">public static</span> <span class="hl kwb">double</span> <span class="hl kwd">cos</span><span class="hl sym">(</span><span class="hl kwb">double</span> x<span class="hl sym">)</span>
		<span class="hl sym">{</span>
			x <span class="hl sym">+=</span> PI_HALF<span class="hl sym">;</span>
			<span class="hl kwb">double</span> f <span class="hl sym">=</span> x <span class="hl sym">/</span> PI_DOUBLE<span class="hl sym">;</span>
			x <span class="hl sym">= (</span>x <span class="hl sym">%</span> PI_DOUBLE<span class="hl sym">) -</span> f <span class="hl sym">*</span> COS_CORRECTION<span class="hl sym">;</span>

			<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&lt;</span><span class="hl num">0</span><span class="hl sym">)</span> x <span class="hl sym">+=</span> PI_DOUBLE<span class="hl sym">;</span>
			<span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">&gt;</span> PI<span class="hl sym">)</span> x <span class="hl sym">-=</span> PI_DOUBLE<span class="hl sym">;</span>

			<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&gt;=</span><span class="hl num">0</span><span class="hl sym">)</span>
			<span class="hl sym">{</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">&gt;</span> PI_HALF<span class="hl sym">)</span> x <span class="hl sym">=</span> PI <span class="hl sym">-</span> x<span class="hl sym">;</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&lt;=</span>PI_FOURTH<span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwd">fastSin</span><span class="hl sym">(</span>x<span class="hl sym">);</span>
				<span class="hl kwa">else return</span> <span class="hl kwd">fastCos</span><span class="hl sym">(</span>x<span class="hl sym">-</span>PI_HALF<span class="hl sym">);</span>
			<span class="hl sym">}</span>
			<span class="hl kwa">else</span>
			<span class="hl sym">{</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">&lt; -</span>PI_HALF<span class="hl sym">)</span> x <span class="hl sym">= -</span>PI <span class="hl sym">-</span> x<span class="hl sym">;</span>
				<span class="hl kwa">if</span> <span class="hl sym">(</span>x<span class="hl sym">&gt;=-</span>PI_FOURTH<span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl kwd">fastSin</span><span class="hl sym">(</span>x<span class="hl sym">);</span>
				<span class="hl kwa">else return</span> <span class="hl sym">-</span><span class="hl kwd">fastCos</span><span class="hl sym">(</span>x<span class="hl sym">+</span>PI_HALF<span class="hl sym">);</span>
			<span class="hl sym">}</span>
		<span class="hl sym">}</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwc">String</span><span class="hl sym">[]</span> args<span class="hl sym">){</span>
      <span class="hl kwb">int</span> n <span class="hl sym">=</span> <span class="hl kwc">Integer</span><span class="hl sym">.</span><span class="hl kwd">parseInt</span><span class="hl sym">(</span>args<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]);</span>

      <span class="hl kwb">double</span> a1 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> a2 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> a3 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> a4 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> a5 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
      <span class="hl kwb">double</span> a6 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> a7 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> a8 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> a9 <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> alt <span class="hl sym">= -</span><span class="hl num">1.0</span><span class="hl sym">;</span>

      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> k<span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">;</span> k<span class="hl sym">&lt;=</span>n<span class="hl sym">;</span> k<span class="hl sym">++){</span>
    	 <span class="hl kwb">double</span> dk <span class="hl sym">=</span> k<span class="hl sym">;</span>
         <span class="hl kwb">double</span> k2 <span class="hl sym">=</span> dk<span class="hl sym">*</span>dk<span class="hl sym">;</span>
         <span class="hl kwb">double</span> k3 <span class="hl sym">=</span> k2<span class="hl sym">*</span>dk<span class="hl sym">;</span>
         <span class="hl kwb">double</span> sk <span class="hl sym">=</span> FasterTrig<span class="hl sym">.</span><span class="hl kwd">sin</span><span class="hl sym">(</span>dk<span class="hl sym">),</span> ck <span class="hl sym">=</span> FasterTrig<span class="hl sym">.</span><span class="hl kwd">cos</span><span class="hl sym">(</span>dk<span class="hl sym">);</span>
         alt <span class="hl sym">= -</span>alt<span class="hl sym">;</span>

         a1 <span class="hl sym">+=</span> <span class="hl kwc">Math</span><span class="hl sym">.</span><span class="hl kwd">pow</span><span class="hl sym">(</span>twothirds<span class="hl sym">,</span>dk<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span>
         a2 <span class="hl sym">+=</span> <span class="hl num">1.0</span><span class="hl sym">/</span><span class="hl kwc">Math</span><span class="hl sym">.</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>dk<span class="hl sym">);</span>
         a3 <span class="hl sym">+=</span> <span class="hl num">1.0</span><span class="hl sym">/(</span>k2<span class="hl sym">+</span>dk<span class="hl sym">);</span>
         a4 <span class="hl sym">+=</span> <span class="hl num">1.0</span><span class="hl sym">/(</span>k3 <span class="hl sym">*</span> sk<span class="hl sym">*</span>sk<span class="hl sym">);</span>
         a5 <span class="hl sym">+=</span> <span class="hl num">1.0</span><span class="hl sym">/(</span>k3 <span class="hl sym">*</span> ck<span class="hl sym">*</span>ck<span class="hl sym">);</span>
         a6 <span class="hl sym">+=</span> <span class="hl num">1.0</span><span class="hl sym">/</span>dk<span class="hl sym">;</span>
         a7 <span class="hl sym">+=</span> <span class="hl num">1.0</span><span class="hl sym">/</span>k2<span class="hl sym">;</span>
         a8 <span class="hl sym">+=</span> alt<span class="hl sym">/</span>dk<span class="hl sym">;</span>
         a9 <span class="hl sym">+=</span> alt<span class="hl sym">/(</span><span class="hl num">2.0</span><span class="hl sym">*</span>dk <span class="hl sym">-</span><span class="hl num">1.0</span><span class="hl sym">);</span>
      <span class="hl sym">}</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">(2/3)^k</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a1<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">k^-0.5</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a2<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">1/k(k+1)</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a3<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Flint Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a4<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Cookson Hills</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a5<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a6<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Riemann Zeta</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a7<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Alternating Harmonic</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a8<span class="hl sym">);</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\t</span><span class="hl str">Gregory</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> a9<span class="hl sym">);</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>
