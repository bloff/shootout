<span class="sym">/*</span> The Computer Language Shootout
   http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/</span>

   contributed by Diederik van Arkel
<span class="sym">*/</span>

<span class="kwa">module</span> spectralnorm
<span class="kwa">import</span> StdEnv<span class="sym">,</span> StdArrayExtensions<span class="sym">,</span>LanguageShootout

Start
	# n <span class="sym">=</span> argi
	# u <span class="sym">=</span> createUnboxedRealArr n <span class="num">1.0</span>
	# v <span class="sym">=</span> createUnboxedRealArr n <span class="num">0.0</span>
	# r <span class="sym">=</span> eigenvalue n <span class="sym">(</span>powerMethod <span class="num">10</span> n <span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">))</span>
	<span class="sym">=</span> toStringWith <span class="num">9</span> r <span class="sym">+++</span> <span class="str">&quot;\n&quot;</span>


eigenvalue n <span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">) =</span> sqrt<span class="sym">(</span>vBv<span class="sym">/</span>vv<span class="sym">)</span>
   <span class="kwa">where</span>
   vBv <span class="sym">=</span> asum {a<span class="sym">*</span>b \\ a <span class="sym">&lt;-:</span> u <span class="sym">&amp;</span> b <span class="sym">&lt;-:</span> v}
   vv <span class="sym">=</span> asum {a<span class="sym">*</span>a \\ a <span class="sym">&lt;-:</span> v}

asum <span class="sym">:: !</span>{#Real} <span class="sym">-&gt;</span> Real
asum a
	# n	<span class="sym">=</span> size a
	<span class="sym">=</span> sum <span class="num">0.0 0</span> n a
<span class="kwa">where</span>
	sum acc i n a
		<span class="sym">|</span> i <span class="sym">&gt;=</span> n	<span class="sym">=</span> acc
		<span class="sym">=</span> sum <span class="sym">(</span>acc <span class="sym">+</span> a.<span class="sym">[</span>i<span class="sym">]) (</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> n a

powerMethod <span class="num">0</span> n <span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">) = (</span>u<span class="sym">,</span>v<span class="sym">)</span>
powerMethod step n <span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">)</span>
   # <span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">) =</span> AtAv n u v
   # <span class="sym">(</span>v<span class="sym">,</span>u<span class="sym">) =</span> AtAv n v u
   <span class="sym">=</span> powerMethod <span class="sym">(</span>step<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> n <span class="sym">(</span>u<span class="sym">,</span>v<span class="sym">)</span>

A one i j
<span class="sym">//	:==</span> <span class="num">1.0</span> <span class="sym">/</span> toReal <span class="sym">( (</span>i<span class="sym">+</span>j<span class="sym">) * (</span>i<span class="sym">+</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">) /</span> <span class="num">2</span> <span class="sym">+</span> i <span class="sym">+</span> <span class="num">1</span> <span class="sym">)</span>
<span class="sym">//	:==</span> <span class="num">1.0</span> <span class="sym">/</span> toReal <span class="sym">(</span> x <span class="sym">* (</span>x<span class="sym">+</span><span class="num">1</span><span class="sym">) /</span> <span class="num">2</span> <span class="sym">+</span> i <span class="sym">+</span> <span class="num">1</span> <span class="sym">)</span>
	<span class="sym">:==</span> one <span class="sym">/</span> toReal <span class="sym">(</span> x <span class="sym">* (</span>x<span class="sym">+</span><span class="num">1</span><span class="sym">) /</span> <span class="num">2</span> <span class="sym">+</span> i <span class="sym">+</span> <span class="num">1</span> <span class="sym">)</span>
<span class="kwa">where</span>
	x <span class="sym">=</span> i <span class="sym">+</span> j

Av n v a <span class="sym">=</span> aloop <span class="num">1.0</span> <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">) (</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> v a
	<span class="kwa">where</span>
	aloop <span class="sym">:: !</span>Real <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span>{#Real} <span class="sym">!*</span>{#Real} <span class="sym">-&gt;</span> .{#Real}
	aloop one n i v a
	  <span class="sym">|</span> i<span class="sym">&gt;=</span><span class="num">0</span> <span class="sym">=</span> aloop one n <span class="sym">(</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> v {a<span class="sym">&amp;[</span>i<span class="sym">] =</span> avsum one i n v <span class="num">0.0</span>}
	         <span class="sym">=</span> a

	avsum <span class="sym">:: !</span>Real <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span>{#Real} <span class="sym">!</span>Real <span class="sym">-&gt;</span> Real
	avsum one i j v x
	  <span class="sym">|</span> j<span class="sym">&gt;=</span><span class="num">0</span> <span class="sym">=</span> avsum one i <span class="sym">(</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> v <span class="sym">(</span>x<span class="sym">+((</span>A one i j<span class="sym">)*</span>v.<span class="sym">[</span>j<span class="sym">]))</span>
	         <span class="sym">=</span> x

Atv n v a <span class="sym">=</span> aloop <span class="num">1.0</span> <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">) (</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> v a
	<span class="kwa">where</span>
	aloop <span class="sym">:: !</span>Real <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span>{#Real} <span class="sym">!*</span>{#Real} <span class="sym">-&gt;</span> .{#Real}
	aloop one n i v a
	  <span class="sym">|</span> i<span class="sym">&gt;=</span><span class="num">0</span> <span class="sym">=</span> aloop one n <span class="sym">(</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> v {a<span class="sym">&amp;[</span>i<span class="sym">] =</span> atvsum one i n v <span class="num">0.0</span>}
	         <span class="sym">=</span> a

	atvsum <span class="sym">:: !</span>Real <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span>{#Real} <span class="sym">!</span>Real <span class="sym">-&gt;</span> Real
	atvsum one i j v x
	  <span class="sym">|</span> j<span class="sym">&gt;=</span><span class="num">0</span> <span class="sym">=</span> atvsum one i <span class="sym">(</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> v <span class="sym">(</span>x<span class="sym">+((</span>A one j i<span class="sym">)*</span>v.<span class="sym">[</span>j<span class="sym">]))</span>
	         <span class="sym">=</span> x

AtAv n u av
	# v 		<span class="sym">=</span> createUnboxedRealArr n <span class="num">0.0</span>
	#<span class="sym">!</span> v		<span class="sym">=</span> Av n u v
	#<span class="sym">!</span> av		<span class="sym">=</span> Atv n v av
	<span class="sym">= (</span>u<span class="sym">,</span>av<span class="sym">)</span>
