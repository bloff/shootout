<span class="sym">&lt;</span>? <span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com">*/</span>

<span class="kwa">function</span> ack<span class="sym">(</span><span class="kwb">$m</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">){</span>
   <span class="kwa">if</span><span class="sym">(</span><span class="kwb">$m</span> <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span> <span class="kwb">$n</span><span class="sym">+</span><span class="num">1</span><span class="sym">;</span>
   <span class="kwa">if</span><span class="sym">(</span><span class="kwb">$n</span> <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> <span class="kwa">return</span> ack<span class="sym">(</span><span class="kwb">$m</span><span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);</span>
   <span class="kwa">return</span> ack<span class="sym">(</span><span class="kwb">$m</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> ack<span class="sym">(</span><span class="kwb">$m</span><span class="sym">, (</span><span class="kwb">$n</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">)));</span>
<span class="sym">}</span>

<span class="kwa">function</span> fib<span class="sym">(</span><span class="kwb">$n</span><span class="sym">){</span>
   <span class="kwa">if</span><span class="sym">(</span><span class="kwb">$n</span> <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">) {</span> <span class="kwa">return</span> <span class="num">1</span><span class="sym">; }</span>
   <span class="kwa">else</span> <span class="sym">{</span> <span class="kwa">return</span> fib<span class="sym">(</span><span class="kwb">$n</span> <span class="sym">-</span> <span class="num">2</span><span class="sym">) +</span> fib<span class="sym">(</span><span class="kwb">$n</span> <span class="sym">-</span> <span class="num">1</span><span class="sym">); }</span>
<span class="sym">}</span>

<span class="kwa">function</span> tak<span class="sym">(</span><span class="kwb">$x</span><span class="sym">,</span><span class="kwb">$y</span><span class="sym">,</span><span class="kwb">$z</span><span class="sym">){</span>
   <span class="kwa">if</span><span class="sym">(</span><span class="kwb">$y</span> <span class="sym">&lt;</span> <span class="kwb">$x</span><span class="sym">){</span> <span class="kwa">return</span> tak<span class="sym">(</span> tak<span class="sym">(</span><span class="kwb">$x</span><span class="sym">-</span><span class="num">1</span><span class="sym">,</span><span class="kwb">$y</span><span class="sym">,</span><span class="kwb">$z</span><span class="sym">),</span> tak<span class="sym">(</span><span class="kwb">$y</span><span class="sym">-</span><span class="num">1</span><span class="sym">,</span><span class="kwb">$z</span><span class="sym">,</span><span class="kwb">$x</span><span class="sym">),</span> tak<span class="sym">(</span><span class="kwb">$z</span><span class="sym">-</span><span class="num">1</span><span class="sym">,</span><span class="kwb">$x</span><span class="sym">,</span><span class="kwb">$y</span><span class="sym">)); }</span>
   <span class="kwa">else</span> <span class="sym">{</span> <span class="kwa">return</span> <span class="kwb">$z</span><span class="sym">; }</span>
<span class="sym">}</span>

<span class="kwb">$n</span> <span class="sym">=</span> <span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
<span class="kwa">echo</span> <span class="str">&quot;Ack(3,$n): &quot;</span><span class="sym">,</span> ack<span class="sym">(</span><span class="num">3</span><span class="sym">,</span><span class="kwb">$n</span><span class="sym">),</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
<span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;Fib(%.1f): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">27.0</span><span class="sym">+</span><span class="kwb">$n</span><span class="sym">,</span> fib<span class="sym">(</span><span class="num">27.0</span><span class="sym">+</span><span class="kwb">$n</span><span class="sym">));</span>
<span class="kwb">$n</span><span class="sym">--;</span> <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;Tak(%d,%d,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">3</span><span class="sym">*</span><span class="kwb">$n</span><span class="sym">,</span><span class="num">2</span><span class="sym">*</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$n</span><span class="sym">,</span> tak<span class="sym">(</span><span class="num">3</span><span class="sym">*</span><span class="kwb">$n</span><span class="sym">,</span><span class="num">2</span><span class="sym">*</span><span class="kwb">$n</span><span class="sym">,</span><span class="kwb">$n</span><span class="sym">));</span>

<span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;Fib(3): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> fib<span class="sym">(</span><span class="num">3</span><span class="sym">));</span>
<span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> tak<span class="sym">(</span><span class="num">3.0</span><span class="sym">,</span><span class="num">2.0</span><span class="sym">,</span><span class="num">1.0</span><span class="sym">));</span>
?<span class="sym">&gt;</span>
