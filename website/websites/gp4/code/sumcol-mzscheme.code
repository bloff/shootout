#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>mzscheme <span class="sym">-</span>r
<span class="slc">;;; Sumcol</span>
<span class="slc">;;; http://shootout.alioth.debian.org/</span>
<span class="slc">;;;</span>
<span class="slc">;;; Contributed by Bengt Kleberg</span>
<span class="sym">(</span>define sumcol
  <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>inport<span class="sym">)</span>
    <span class="sym">(</span>letrec <span class="sym">((</span>sum <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">(</span>number acc<span class="sym">)</span>
		    <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(</span>eof<span class="sym">-</span>object? number<span class="sym">)</span>
		      acc
		      <span class="sym">(</span>sum <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span> inport<span class="sym">) (+</span> acc <span class="sym">(</span>string<span class="sym">-&gt;</span>number number<span class="sym">)))))))</span>
      <span class="sym">(</span>sum <span class="sym">(</span><span class="kwa">read</span><span class="sym">-</span><span class="kwa">line</span> inport<span class="sym">)</span> <span class="num">0</span><span class="sym">))))</span>

<span class="sym">(</span>define main <span class="sym">(</span><span class="kwa">lambda</span> <span class="sym">()</span>
  <span class="sym">(</span>begin
    <span class="sym">(</span>display <span class="sym">(</span>sumcol <span class="sym">(</span>current<span class="sym">-</span>input<span class="sym">-</span>port<span class="sym">)))</span>
    <span class="sym">(</span>newline<span class="sym">))))</span>

<span class="sym">(</span>main<span class="sym">)</span>
