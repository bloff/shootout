<span class="slc">// ---------------------------------------------------------------------</span>
<span class="slc">// The Great Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">//</span>
<span class="slc">// Code based on / inspired by existing, relevant Shootout submissions</span>
<span class="slc">//</span>
<span class="slc">// Contributed by Anthony Borla</span>
<span class="slc">// ---------------------------------------------------------------------</span>

<span class="kwb">int</span> <span class="kwd">ack</span><span class="sym">(</span><span class="kwb">int</span> x<span class="sym">,</span> <span class="kwb">int</span> y<span class="sym">)</span>
<span class="sym">{</span>
  <span class="kwd">if</span> <span class="sym">(</span>x <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> return y <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
  <span class="kwd">if</span> <span class="sym">(</span>y <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span> return <span class="kwd">ack</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);</span>
  return <span class="kwd">ack</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span>x<span class="sym">,</span> y <span class="sym">-</span> <span class="num">1</span><span class="sym">));</span>
<span class="sym">}</span>

<span class="slc">// --------------</span>

<span class="kwb">int</span> <span class="kwd">fib</span><span class="sym">(</span><span class="kwb">int</span> n<span class="sym">)</span>
<span class="sym">{</span>
  <span class="kwd">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2</span><span class="sym">)</span> return <span class="num">1</span><span class="sym">;</span>
  return <span class="kwd">fib</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">2</span><span class="sym">) +</span> <span class="kwd">fib</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="kwb">float</span> <span class="kwd">fibflt</span><span class="sym">(</span><span class="kwb">float</span> n<span class="sym">)</span>
<span class="sym">{</span>
  <span class="kwd">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2.0</span><span class="sym">)</span> return <span class="num">1.0</span><span class="sym">;</span>
  return <span class="kwd">fibflt</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">2.0</span><span class="sym">) +</span> <span class="kwd">fibflt</span><span class="sym">(</span>n <span class="sym">-</span> <span class="num">1.0</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="slc">// --------------</span>

<span class="kwb">int</span> <span class="kwd">tak</span><span class="sym">(</span><span class="kwb">int</span> x<span class="sym">,</span> <span class="kwb">int</span> y<span class="sym">,</span> <span class="kwb">int</span> z<span class="sym">)</span>
<span class="sym">{</span>
  <span class="kwd">if</span> <span class="sym">(</span>y <span class="sym">&lt;</span> x<span class="sym">)</span> return <span class="kwd">tak</span><span class="sym">(</span><span class="kwd">tak</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">),</span> <span class="kwd">tak</span><span class="sym">(</span>y <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> z<span class="sym">,</span> x<span class="sym">),</span> <span class="kwd">tak</span><span class="sym">(</span>z <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">));</span>
  return z<span class="sym">;</span>
<span class="sym">}</span>

<span class="kwb">float</span> <span class="kwd">takflt</span><span class="sym">(</span><span class="kwb">float</span> x<span class="sym">,</span> <span class="kwb">float</span> y<span class="sym">,</span> <span class="kwb">float</span> z<span class="sym">)</span>
<span class="sym">{</span>
  <span class="kwd">if</span> <span class="sym">(</span>y <span class="sym">&lt;</span> x<span class="sym">)</span> return <span class="kwd">takflt</span><span class="sym">(</span><span class="kwd">takflt</span><span class="sym">(</span>x <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">),</span> <span class="kwd">takflt</span><span class="sym">(</span>y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> z<span class="sym">,</span> x<span class="sym">),</span> <span class="kwd">takflt</span><span class="sym">(</span>z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">));</span>
  return z<span class="sym">;</span>
<span class="sym">}</span>

<span class="slc">// --------------------------------</span>

<span class="kwb">int</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">array</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">)</span> argv<span class="sym">)</span>
<span class="sym">{</span>
  <span class="kwb">int</span> N <span class="sym">= (</span><span class="kwb">int</span><span class="sym">)</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>

  <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;Ack(3,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> N<span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> N<span class="sym">));</span>
  <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;Fib(%.1f): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">27.0</span> <span class="sym">+</span> N<span class="sym">,</span> <span class="kwd">fibflt</span><span class="sym">(</span><span class="num">27.0</span> <span class="sym">+</span> N<span class="sym">));</span>

  N <span class="sym">-=</span> <span class="num">1</span><span class="sym">;</span>
  <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;Tak(%d,%d,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> N <span class="sym">*</span> <span class="num">3</span><span class="sym">,</span> N <span class="sym">*</span> <span class="num">2</span><span class="sym">,</span> N<span class="sym">,</span> <span class="kwd">tak</span><span class="sym">(</span>N <span class="sym">*</span> <span class="num">3</span><span class="sym">,</span> N <span class="sym">*</span> <span class="num">2</span><span class="sym">,</span> N<span class="sym">));</span>

  <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;Fib(3): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">fib</span><span class="sym">(</span><span class="num">3</span><span class="sym">));</span>
  <span class="kwa">write</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">takflt</span><span class="sym">(</span><span class="num">3.0</span><span class="sym">,</span> <span class="num">2.0</span><span class="sym">,</span> <span class="num">1.0</span><span class="sym">));</span>

  return <span class="num">0</span><span class="sym">;</span>
<span class="sym">}</span>

