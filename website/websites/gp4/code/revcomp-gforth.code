<span class="slc">\ reverse-complement.gforth</span>
<span class="slc">\ http://shootout.alioth.debian.org/</span>
<span class="slc">\</span>
<span class="slc">\ Submitted by Ian Osgood</span>

<span class="slc">\ complement mappings</span>
create map s<span class="str">&quot; TVGHefCDijMlKNopqYSAABWxRz&quot;</span> mem<span class="sym">,</span>

<span class="sym">:</span> map<span class="sym">-</span>c <span class="com">( c -- comp )</span> <span class="num">32</span> or <span class="sym">'</span>a <span class="sym">-</span> map <span class="sym">+</span> c<span class="sym">&#64; ;</span>

<span class="num">60</span> constant line<span class="sym">-</span>len

<span class="sym">:</span> rev<span class="sym">-</span>comp <span class="com">( end -- start )</span> line<span class="sym">-</span>len
  begin  over pad u<span class="sym">&gt;</span>
  while  swap <span class="num">1</span><span class="sym">-</span> dup c<span class="sym">&#64;</span> map<span class="sym">-</span>c emit
         swap <span class="num">1</span><span class="sym">-</span> dup <span class="num">0</span><span class="sym">=</span> if cr line<span class="sym">-</span>len <span class="sym">+</span> then
  repeat line<span class="sym">-</span>len <span class="sym">&lt;</span> if cr then <span class="sym">;</span>

<span class="sym">:</span> main   pad <span class="com">( end )</span>
  begin  dup <span class="num">80</span> stdin read<span class="sym">-</span>line throw
  while  over c<span class="sym">&#64; '&gt; =</span>
         if   over  rev<span class="sym">-</span>comp  <span class="sym">-</span>rot type cr
         else <span class="sym">+</span> then
  repeat drop rev<span class="sym">-</span>comp drop <span class="sym">;</span>

main bye  <span class="slc">\ done!</span>

