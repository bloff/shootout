<span class="sym">/*</span> The Computer Language Shootout
   http<span class="sym">://</span>shootout.alioth.debian.org<span class="sym">/</span>
   contributed by Isaac Gouy <span class="sym">(</span>Clean novice<span class="sym">) */</span>

<span class="kwa">module</span> recursive
<span class="kwa">import</span> StdEnv<span class="sym">,</span> LanguageShootout

Start <span class="sym">=</span>
   <span class="sym">(</span> line <span class="str">&quot;Ack(3,&quot;</span> <span class="sym">[</span>n<span class="sym">+</span><span class="num">4</span><span class="sym">] (</span>toString <span class="sym">(</span>ack <span class="num">3</span> <span class="sym">(</span>n<span class="sym">+</span><span class="num">4</span><span class="sym">))) ) +++</span>
   <span class="sym">(</span> line <span class="str">&quot;Fib(&quot;</span> <span class="sym">[</span>n<span class="sym">+</span><span class="num">9</span><span class="sym">] (</span>toString <span class="sym">(</span>fib <span class="sym">(</span>n<span class="sym">+</span><span class="num">9</span><span class="sym">))) ) +++</span>
   <span class="sym">(</span> line <span class="str">&quot;Fib(&quot;</span> <span class="sym">[</span>n<span class="sym">+</span><span class="num">32</span><span class="sym">] (</span>toStringWith <span class="num">1</span> <span class="sym">(</span>fibr <span class="sym">((</span>toReal n<span class="sym">)+</span><span class="num">32.0</span><span class="sym">))) ) +++</span>
   <span class="sym">(</span> line <span class="str">&quot;Tak(&quot;</span> <span class="sym">[</span>n<span class="sym">*</span><span class="num">3</span><span class="sym">,</span>n<span class="sym">*</span><span class="num">2</span><span class="sym">,</span>n<span class="sym">] (</span>toString <span class="sym">(</span>tak <span class="sym">(</span>n<span class="sym">*</span><span class="num">3</span><span class="sym">) (</span>n<span class="sym">*</span><span class="num">2</span><span class="sym">)</span> n<span class="sym">)) ) +++</span>
   <span class="sym">(</span> line <span class="str">&quot;Tak(&quot;</span> <span class="sym">[</span>m<span class="sym">*</span><span class="num">3</span><span class="sym">,</span>m<span class="sym">*</span><span class="num">2</span><span class="sym">,</span>m<span class="sym">]</span>
      <span class="sym">(</span>toStringWith <span class="num">1</span> <span class="sym">(</span>takr <span class="sym">((</span>toReal m<span class="sym">)*</span><span class="num">3.0</span><span class="sym">) ((</span>toReal m<span class="sym">)*</span><span class="num">2.0</span><span class="sym">) (</span>toReal m<span class="sym">))) )</span>
   <span class="kwa">where</span>
   n <span class="sym">=</span> argi
   m <span class="sym">=</span> n<span class="sym">+</span><span class="num">2</span>

ack m n
   <span class="sym">|</span> m <span class="sym">==</span> <span class="num">0</span>   <span class="sym">=</span> n <span class="sym">+</span> <span class="num">1</span>
   <span class="sym">|</span> n <span class="sym">==</span> <span class="num">0</span>   <span class="sym">=</span> ack <span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> <span class="num">1</span>
              <span class="sym">=</span> ack <span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">) (</span>ack m <span class="sym">(</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">))</span>
fib n
   <span class="sym">|</span> n <span class="sym">&lt;</span> <span class="num">2</span>   <span class="sym">=</span> <span class="num">1</span>
   <span class="sym">=</span> fib <span class="sym">(</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">) +</span> fib <span class="sym">(</span>n <span class="sym">-</span> <span class="num">2</span><span class="sym">)</span>

fibr n
   <span class="sym">|</span> n <span class="sym">&lt;</span> <span class="num">2.0</span>   <span class="sym">=</span> <span class="num">1.0</span>
   <span class="sym">=</span> fibr <span class="sym">(</span>n <span class="sym">-</span> <span class="num">1.0</span><span class="sym">) +</span> fibr <span class="sym">(</span>n <span class="sym">-</span> <span class="num">2.0</span><span class="sym">)</span>


tak x y z
   <span class="sym">|</span> y <span class="sym">&lt;</span> x   <span class="sym">=</span> tak <span class="sym">(</span>tak <span class="sym">(</span>x<span class="sym">-</span>one<span class="sym">)</span> y z<span class="sym">)(</span>tak <span class="sym">(</span>y<span class="sym">-</span>one<span class="sym">)</span> z x<span class="sym">)(</span>tak <span class="sym">(</span>z<span class="sym">-</span>one<span class="sym">)</span> x y<span class="sym">)</span>
             <span class="sym">=</span> z

takr x y z
   <span class="sym">|</span> y <span class="sym">&lt;</span> x   <span class="sym">=</span> takr <span class="sym">(</span>takr <span class="sym">(</span>x<span class="sym">-</span><span class="num">1.0</span><span class="sym">)</span> y z<span class="sym">)(</span>takr <span class="sym">(</span>y<span class="sym">-</span><span class="num">1.0</span><span class="sym">)</span> z x<span class="sym">)(</span>takr <span class="sym">(</span>z<span class="sym">-</span><span class="num">1.0</span><span class="sym">)</span> x y<span class="sym">)</span>
             <span class="sym">=</span> z

line a b c <span class="sym">=</span> a <span class="sym">+++</span> csv b <span class="sym">+++</span> <span class="str">&quot;): &quot;</span> <span class="sym">+++</span> c <span class="sym">+++</span> <span class="str">&quot;\n&quot;</span>
csv <span class="sym">[</span>a<span class="sym">] =</span> toString a
csv <span class="sym">[</span>a<span class="sym">:</span>b<span class="sym">] =</span> toString a <span class="sym">+++</span> <span class="str">&quot;,&quot;</span> <span class="sym">+++</span> csv b


