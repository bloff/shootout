<span class="com">(* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Scott Cruzen</span>
<span class="com">*)</span>

<span class="kwa">val</span> n <span class="sym">=</span> valOf <span class="sym">(</span><span class="kwa">Int</span>.fromString <span class="sym">(</span>hd <span class="sym">(</span>CommandLine.arguments<span class="sym">())))</span>

<span class="kwa">fun</span> for <span class="sym">(</span>i<span class="sym">,</span> c<span class="sym">,</span> f<span class="sym">) =</span> <span class="kwa">if</span> c i <span class="kwa">then</span> <span class="sym">(</span>for <span class="sym">(</span>f i<span class="sym">,</span>c<span class="sym">,</span>f<span class="sym">))</span> <span class="kwa">else</span> <span class="sym">()</span>

<span class="kwa">fun</span> print_fmt xr s <span class="sym">=</span>
   print<span class="sym">(</span>concat <span class="sym">[</span><span class="kwa">Real</span>.fmt <span class="sym">(</span><span class="kwa">StringCvt</span>.FIX <span class="sym">(</span>SOME <span class="num">9</span><span class="sym">)) (!</span>xr<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span><span class="sym">,</span> s<span class="sym">,</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">]);</span>

<span class="kwa">val</span> _ <span class="sym">=</span>
   <span class="kwa">let</span>
      <span class="kwa">val</span> a <span class="sym">=</span> ref ~<span class="num">1.0</span>
      <span class="kwa">val</span> sum <span class="sym">=</span> ref <span class="num">0.0</span>
   <span class="kwa">in</span>
      for <span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span>
         <span class="kwa">fn</span> k <span class="sym">=&gt; (</span>sum <span class="sym">:= !</span>sum <span class="sym">+</span> <span class="kwa">Real</span>.Math.pow<span class="sym">(</span><span class="num">2.0</span> <span class="sym">/</span> <span class="num">3.0</span><span class="sym">,</span> <span class="kwa">Real</span>.fromInt k<span class="sym">) ;</span> k <span class="sym">+</span> <span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;(2/3)^k&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span>
         <span class="kwa">fn</span> k <span class="sym">=&gt; (</span>sum <span class="sym">:= !</span>sum <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/</span> <span class="kwa">Real</span>.Math.sqrt<span class="sym">(</span><span class="kwa">Real</span>.fromInt k<span class="sym">) ;</span> k <span class="sym">+</span> <span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;k^-0.5&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span>
         <span class="kwa">fn</span> k <span class="sym">=&gt; (</span><span class="kwa">let val</span> k <span class="sym">=</span> <span class="kwa">Real</span>.fromInt k <span class="kwa">in</span>
            sum <span class="sym">:= !</span>sum <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k <span class="sym">* (</span>k<span class="sym">+</span><span class="num">1.0</span><span class="sym">))</span> <span class="kwa">end</span><span class="sym">;</span> k <span class="sym">+</span> <span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;1/k(k+1)&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span>
         <span class="kwa">fn</span> k <span class="sym">=&gt; (</span><span class="kwa">let val</span> k <span class="sym">=</span> <span class="kwa">Real</span>.fromInt k <span class="kwa">val</span> sk <span class="sym">=</span> <span class="kwa">Real</span>.Math.sin k <span class="kwa">in</span>
            sum <span class="sym">:= !</span>sum <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k <span class="sym">*</span> k <span class="sym">*</span> k <span class="sym">*</span> sk <span class="sym">*</span> sk<span class="sym">)</span> <span class="kwa">end</span><span class="sym">;</span> k<span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;Flint Hills&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span>
         <span class="kwa">fn</span> k <span class="sym">=&gt; (</span><span class="kwa">let val</span> k <span class="sym">=</span> <span class="kwa">Real</span>.fromInt k <span class="kwa">val</span> sk <span class="sym">=</span> <span class="kwa">Real</span>.Math.cos k <span class="kwa">in</span>
            sum <span class="sym">:= !</span>sum <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k <span class="sym">*</span> k <span class="sym">*</span> k <span class="sym">*</span> sk <span class="sym">*</span> sk<span class="sym">)</span> <span class="kwa">end</span><span class="sym">;</span> k<span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;Cookson Hills&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt; (</span>sum <span class="sym">:= !</span>sum <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/</span> <span class="kwa">Real</span>.fromInt k<span class="sym">;</span> k<span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;Harmonic&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt; (</span><span class="kwa">let val</span> k <span class="sym">=</span> <span class="kwa">Real</span>.fromInt k <span class="kwa">in</span>
         sum <span class="sym">:= !</span>sum <span class="sym">+</span> <span class="num">1.0</span> <span class="sym">/ (</span>k <span class="sym">*</span> k<span class="sym">)</span> <span class="kwa">end</span><span class="sym">;</span> k<span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;Riemann Zeta&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt; (</span>a <span class="sym">:=</span> ~ <span class="sym">(!</span>a<span class="sym">);</span> sum <span class="sym">:= !</span>sum <span class="sym">+ !</span>a <span class="sym">/</span> <span class="kwa">Real</span>.fromInt k<span class="sym">;</span> k<span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;Alternating Harmonic&quot;</span><span class="sym">;</span>

      sum <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">;</span>
      a <span class="sym">:=</span> ~<span class="num">1.0</span><span class="sym">;</span>
      for <span class="sym">(</span><span class="num">1</span><span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt;</span> k <span class="sym">&lt;=</span> n<span class="sym">,</span> <span class="kwa">fn</span> k <span class="sym">=&gt; (</span>a <span class="sym">:=</span> ~ <span class="sym">(!</span>a<span class="sym">);</span> sum <span class="sym">:= !</span>sum <span class="sym">+ !</span>a <span class="sym">/ (</span><span class="num">2.0</span> <span class="sym">*</span> <span class="kwa">Real</span>.fromInt k <span class="sym">-</span> <span class="num">1.0</span><span class="sym">);</span> k<span class="sym">+</span><span class="num">1</span><span class="sym">));</span>
      print_fmt sum <span class="str">&quot;Gregory&quot;</span>
   <span class="kwa">end</span>
