<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com"> * contributed by bearophile, Jan 24 2006</span>
<span class="hl com"> * modified by wolfjb, Feb 28 2007</span>
<span class="hl com"> * modified by alex burlyga, may 16, 2008</span>
<span class="hl com"> */</span>
<span class="hl dir">#include &lt;stdio.h&gt;</span>
<span class="hl dir">#include &lt;stdlib.h&gt;</span>

<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">int</span> <span class="hl kwd">ack</span><span class="hl sym">(</span><span class="hl kwc">register</span> <span class="hl kwb">int</span> x<span class="hl sym">,</span> <span class="hl kwc">register</span> <span class="hl kwb">int</span> y<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwb">const</span><span class="hl sym">));</span>
<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">int</span> <span class="hl kwd">fib</span><span class="hl sym">(</span><span class="hl kwb">int</span> n<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwb">const</span><span class="hl sym">));</span>
<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">double</span> <span class="hl kwd">fibFP</span><span class="hl sym">(</span><span class="hl kwb">double</span> n<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwb">const</span><span class="hl sym">));</span>
<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">int</span> <span class="hl kwd">tak</span><span class="hl sym">(</span><span class="hl kwb">int</span> x<span class="hl sym">,</span> <span class="hl kwb">int</span> y<span class="hl sym">,</span> <span class="hl kwb">int</span> z<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwb">const</span><span class="hl sym">));</span>
<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">double</span> <span class="hl kwd">takFP</span><span class="hl sym">(</span><span class="hl kwb">double</span> x<span class="hl sym">,</span> <span class="hl kwb">double</span> y<span class="hl sym">,</span> <span class="hl kwb">double</span> z<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwb">const</span><span class="hl sym">));</span>

<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">int</span> <span class="hl kwd">ack</span><span class="hl sym">(</span><span class="hl kwc">register</span> <span class="hl kwb">int</span> x<span class="hl sym">,</span> <span class="hl kwc">register</span> <span class="hl kwb">int</span> y<span class="hl sym">){</span>
  <span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">) {</span>
    <span class="hl kwa">return</span> y <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">return</span> <span class="hl kwd">ack</span><span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, ((</span>y <span class="hl sym">|</span> <span class="hl num">0</span><span class="hl sym">)</span> ? <span class="hl kwd">ack</span><span class="hl sym">(</span>x<span class="hl sym">,</span> y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) :</span> <span class="hl num">1</span><span class="hl sym">));</span>
<span class="hl sym">}</span>

<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">int</span> <span class="hl kwd">fib</span><span class="hl sym">(</span><span class="hl kwc">register</span> <span class="hl kwb">int</span> n<span class="hl sym">) {</span>
  <span class="hl kwa">if</span> <span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">) {</span>
    <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
  <span class="hl sym">}</span>
  <span class="hl kwa">return</span> <span class="hl kwd">fib</span><span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) +</span> <span class="hl kwd">fib</span><span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">double</span> <span class="hl kwd">fibFP</span><span class="hl sym">(</span><span class="hl kwb">double</span> n<span class="hl sym">) {</span>
  <span class="hl kwa">if</span> <span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2.0</span><span class="hl sym">) {</span>
    <span class="hl kwa">return</span> <span class="hl num">1.0</span><span class="hl sym">;</span>
  <span class="hl sym">}</span>
  <span class="hl kwa">return</span> <span class="hl kwd">fibFP</span><span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2.0</span><span class="hl sym">) +</span> <span class="hl kwd">fibFP</span><span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">int</span> <span class="hl kwd">tak</span><span class="hl sym">(</span><span class="hl kwc">register</span> <span class="hl kwb">int</span> x<span class="hl sym">,</span> <span class="hl kwc">register</span> <span class="hl kwb">int</span> y<span class="hl sym">,</span> <span class="hl kwc">register</span> <span class="hl kwb">int</span> z<span class="hl sym">) {</span>
  <span class="hl kwa">if</span> <span class="hl sym">(</span>y <span class="hl sym">&lt;</span> x<span class="hl sym">) {</span>
    <span class="hl kwa">return</span> <span class="hl kwd">tak</span><span class="hl sym">(</span><span class="hl kwd">tak</span><span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">),</span> <span class="hl kwd">tak</span><span class="hl sym">(</span>y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> z<span class="hl sym">,</span> x<span class="hl sym">),</span> <span class="hl kwd">tak</span><span class="hl sym">(</span>z <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">));</span>
  <span class="hl sym">}</span>
  <span class="hl kwa">return</span> z<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">static</span> <span class="hl kwc">inline</span> <span class="hl kwb">double</span> <span class="hl kwd">takFP</span><span class="hl sym">(</span><span class="hl kwb">double</span> x<span class="hl sym">,</span> <span class="hl kwb">double</span> y<span class="hl sym">,</span> <span class="hl kwb">double</span> z<span class="hl sym">) {</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>y <span class="hl sym">&lt;</span> x<span class="hl sym">)</span>
        <span class="hl kwa">return</span> <span class="hl kwd">takFP</span><span class="hl sym">(</span> <span class="hl kwd">takFP</span><span class="hl sym">(</span>x<span class="hl sym">-</span><span class="hl num">1.0</span><span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">),</span> <span class="hl kwd">takFP</span><span class="hl sym">(</span>y<span class="hl sym">-</span><span class="hl num">1.0</span><span class="hl sym">,</span> z<span class="hl sym">,</span> x<span class="hl sym">),</span> <span class="hl kwd">takFP</span><span class="hl sym">(</span>z<span class="hl sym">-</span><span class="hl num">1.0</span><span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">) );</span>
    <span class="hl kwa">return</span> z<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">int</span>
<span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">char</span> <span class="hl sym">**</span> argv<span class="hl sym">) {</span>
  <span class="hl kwb">int</span> n <span class="hl sym">=</span> <span class="hl num">3</span><span class="hl sym">;</span>

  <span class="hl kwa">if</span><span class="hl sym">(</span>argc <span class="hl sym">&gt;</span> <span class="hl num">1</span><span class="hl sym">) {</span>
    n <span class="hl sym">=</span> <span class="hl kwd">strtol</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">],</span> NULL<span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">) -</span> <span class="hl num">1</span><span class="hl sym">;</span>
  <span class="hl sym">}</span>

  <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Ack(3,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> n <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwd">ack</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,</span> n<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">));</span>
  <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Fib(%.1f): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl num">28.0</span> <span class="hl sym">+</span> n<span class="hl sym">,</span> <span class="hl kwd">fibFP</span><span class="hl sym">(</span><span class="hl num">28.0</span><span class="hl sym">+</span>n<span class="hl sym">));</span>
  <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Tak(%d,%d,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl num">3</span> <span class="hl sym">*</span> n<span class="hl sym">,</span> <span class="hl num">2</span> <span class="hl sym">*</span> n<span class="hl sym">,</span> n<span class="hl sym">,</span> <span class="hl kwd">tak</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">*</span>n<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span>n<span class="hl sym">,</span> n<span class="hl sym">));</span>
  <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Fib(3): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwd">fib</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">));</span>
  <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Tak(3.0,2.0,1.0): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwd">takFP</span><span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">,</span> <span class="hl num">2.0</span><span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">));</span>

  <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
