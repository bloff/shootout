<span class="slc">\ The Computer Language Shootout</span>
<span class="slc">\ http://shootout.alioth.debian.org</span>
<span class="slc">\</span>
<span class="slc">\ contributed by Ian Osgood</span>
<span class="slc">\ modified by Bernd Paysan</span>

<span class="slc">\ read NUM from last command line argument</span>
<span class="num">0</span><span class="sym">.</span> argc <span class="sym">&#64;</span> <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span><span class="kwa">drop drop</span> value NUM

<span class="slc">\ 0 is none</span>
<span class="num">1</span> <span class="kwa">constant</span> red
<span class="num">2</span> <span class="kwa">constant</span> yellow
<span class="num">3</span> <span class="kwa">constant</span> blue

<span class="sym">:</span> p4<span class="sym">-</span>opt<span class="sym">-</span><span class="kwa">Variable</span>  cell allocate throw Value <span class="sym">;</span>

p4<span class="sym">-</span>opt<span class="sym">-</span><span class="kwa">Variable</span> first
p4<span class="sym">-</span>opt<span class="sym">-</span><span class="kwa">Variable</span> second
<span class="kwa">Variable</span> meetings

<span class="sym">:</span> meet <span class="com">( me -- other )</span>
  <span class="kwa">begin</span> pause second <span class="sym">&#64;</span> <span class="num">0</span><span class="sym">=</span> <span class="kwa">until</span>
  first <span class="sym">&#64;</span>
  <span class="kwa">if</span>   second <span class="sym">!</span> first <span class="sym">&#64;</span> first off
  <span class="kwa">else</span> NUM <span class="kwa">dup</span> <span class="num">0</span><span class="sym">=</span> <span class="kwa">if</span> nip <span class="kwa">exit then</span> <span class="num">1</span><span class="sym">-</span> <span class="kwa">to</span> NUM
       first <span class="sym">!</span>
       <span class="kwa">begin</span> pause second <span class="sym">&#64;</span> <span class="kwa">until</span>
       second <span class="sym">&#64;</span> second off
  <span class="kwa">then</span> <span class="sym">;</span>

<span class="sym">:</span> complement <span class="com">( c1 c2 -- c3 )</span>
  <span class="num">2</span><span class="kwa">dup</span> <span class="sym">=</span> <span class="kwa">if drop else</span> <span class="sym">+</span> <span class="num">6</span> <span class="kwa">swap</span> <span class="sym">-</span> <span class="kwa">then</span> <span class="sym">;</span>

<span class="kwa">Variable</span> creatures

<span class="sym">:</span> creature <span class="com">( color -- )</span>
  <span class="num">1</span> creatures <span class="sym">+!</span>
  <span class="num">64</span> <span class="kwa">dup</span> NewTask <span class="num">1</span> <span class="kwa">swap</span> pass
  <span class="com">( task:  color -- )</span>
  <span class="num">0</span> <span class="kwa">swap</span> <span class="com">( #met color )</span>
  <span class="kwa">begin  dup</span> meet <span class="sym">?</span><span class="kwa">dup</span>
  <span class="kwa">while</span>  complement <span class="kwa">swap</span>  <span class="num">1</span><span class="sym">+</span> <span class="kwa">swap</span>
  <span class="kwa">repeat</span>
  <span class="kwa">drop</span>  meetings <span class="sym">+! -</span><span class="num">1</span> creatures <span class="sym">+! ;</span>

<span class="sym">:</span> main
  blue yellow red blue  <span class="num">4 0</span> <span class="kwa">do</span> creature <span class="kwa">loop</span>
  <span class="kwa">begin</span> pause creatures <span class="sym">&#64;</span> <span class="num">0</span><span class="sym">=</span> <span class="kwa">until</span> <span class="sym">;</span>

main  meetings <span class="sym">&#64;</span> <span class="num">1</span> u<span class="sym">.</span>r <span class="kwa">cr</span>  bye  <span class="slc">\ done!</span>
