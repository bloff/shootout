<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org</span>
<span class="hl com">   contributed by Ian Osgood */</span>

Sequence pad <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span>w<span class="hl sym">,</span> s<span class="hl sym">:=</span><span class="hl kwa">self</span><span class="hl sym">;</span> <span class="hl kwd">while</span> <span class="hl sym">(</span>s size <span class="hl sym">&lt;</span> w<span class="hl sym">,</span> s<span class="hl sym">=</span><span class="hl str">&quot; &quot;</span><span class="hl sym">..</span> s<span class="hl sym">) )</span>
<span class="hl kwb">Number</span> clearBit <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span>b<span class="hl sym">, &amp;(</span><span class="hl num">1</span> <span class="hl kwa">clone</span> <span class="hl kwd">shiftLeft</span><span class="hl sym">(</span>b<span class="hl sym">)</span> bitwiseComplement<span class="hl sym">) )</span>

sieve <span class="hl sym">:=</span> <span class="hl kwb">Object</span> <span class="hl kwa">clone do</span><span class="hl sym">(</span>
    flags <span class="hl sym">:=</span> Sequence <span class="hl kwa">clone do</span><span class="hl sym">(</span>
        isSet <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl kwd">at</span><span class="hl sym">(</span>i<span class="hl sym">/</span><span class="hl num">8</span><span class="hl sym">)</span> <span class="hl kwd">at</span><span class="hl sym">(</span>i<span class="hl sym">%</span><span class="hl num">8</span><span class="hl sym">) !=</span> <span class="hl num">0</span><span class="hl sym">)</span>
        clear <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl kwd">atPut</span><span class="hl sym">(</span>i<span class="hl sym">/</span><span class="hl num">8</span><span class="hl sym">,</span> <span class="hl kwd">at</span><span class="hl sym">(</span>i<span class="hl sym">/</span><span class="hl num">8</span><span class="hl sym">)</span> <span class="hl kwd">clearBit</span><span class="hl sym">(</span>i<span class="hl sym">%</span><span class="hl num">8</span><span class="hl sym">) ) )</span>
    <span class="hl sym">)</span>
    show <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span>n<span class="hl sym">,</span>
        flags <span class="hl kwd">setSize</span><span class="hl sym">((</span>n<span class="hl sym">/</span><span class="hl num">8</span><span class="hl sym">)</span> ceil<span class="hl sym">)</span>
        <span class="hl kwa">for</span> <span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> flags size <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> flags <span class="hl kwd">atPut</span><span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl num">255</span><span class="hl sym">))</span>
        primes <span class="hl sym">:=</span> <span class="hl num">0</span>
        <span class="hl kwa">for</span> <span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">,</span> n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span>
            <span class="hl kwa">if</span> <span class="hl sym">(</span>flags <span class="hl kwd">isSet</span><span class="hl sym">(</span>i<span class="hl sym">),</span>
                primes <span class="hl sym">=</span> primes <span class="hl sym">+</span> <span class="hl num">1</span>
                <span class="hl kwa">if</span> <span class="hl sym">(</span>i<span class="hl sym">+</span>i <span class="hl sym">&lt;</span> n<span class="hl sym">,</span> <span class="hl kwa">for</span> <span class="hl sym">(</span>j<span class="hl sym">,</span> i<span class="hl sym">+</span>i<span class="hl sym">,</span> n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> i<span class="hl sym">,</span> flags <span class="hl kwd">clear</span><span class="hl sym">(</span>j<span class="hl sym">) ) )</span>
            <span class="hl sym">)</span>
        <span class="hl sym">)</span>
        <span class="hl kwd">writeln</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to&quot;</span><span class="hl sym">,</span> n asString <span class="hl kwd">pad</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">),</span> primes asString <span class="hl kwd">pad</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">))</span>
    <span class="hl sym">)</span>
<span class="hl sym">)</span>

n <span class="hl sym">:=</span> System args <span class="hl kwd">at</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span> asNumber
sieve <span class="hl kwd">show</span><span class="hl sym">(</span><span class="hl num">10000</span> <span class="hl kwd">shiftLeft</span><span class="hl sym">(</span>n<span class="hl sym">))</span>
sieve <span class="hl kwd">show</span><span class="hl sym">(</span><span class="hl num">10000</span> <span class="hl kwd">shiftLeft</span><span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">))</span>
sieve <span class="hl kwd">show</span><span class="hl sym">(</span><span class="hl num">10000</span> <span class="hl kwd">shiftLeft</span><span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">))</span>
