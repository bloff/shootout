<span class="slc">%%% The Computer Language Shootout</span>
<span class="slc">%%% http://shootout.alioth.debian.org/</span>
<span class="slc">%%% Contributed by: Sergei Matusevich 2005</span>
<span class="slc">%%% vim: syntax=prolog ts=2</span>

flip<span class="sym">( [</span><span class="num">1</span> <span class="sym">|</span> _<span class="sym">],</span> Res<span class="sym">,</span> Res <span class="sym">) :- !</span>.

flip<span class="sym">( [</span>N <span class="sym">|</span> List<span class="sym">],</span> Count<span class="sym">,</span> Res <span class="sym">) :-</span>
  append<span class="sym">(</span> Head<span class="sym">,</span> Tail<span class="sym">, [</span>N <span class="sym">|</span> List<span class="sym">] ),</span>
  length<span class="sym">(</span> Head<span class="sym">,</span> N <span class="sym">),</span>
  reverse<span class="sym">(</span> Head<span class="sym">,</span> RevHead <span class="sym">),</span>
  append<span class="sym">(</span> RevHead<span class="sym">,</span> Tail<span class="sym">,</span> NewList <span class="sym">),</span>
  NewCount <span class="kwa">is</span> Count <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span>
  <span class="sym">!,</span> flip<span class="sym">(</span> NewList<span class="sym">,</span> NewCount<span class="sym">,</span> Res <span class="sym">)</span>.

pfannkuchen<span class="sym">(</span> Len<span class="sym">,</span> _ <span class="sym">) :-</span>
  numlist<span class="sym">(</span> <span class="num">1</span><span class="sym">,</span> Len<span class="sym">,</span> L0 <span class="sym">),</span>
  recorda<span class="sym">(</span> max_flips<span class="sym">,</span> <span class="num">0</span> <span class="sym">),</span>
  permutation<span class="sym">(</span> L0<span class="sym">,</span> L <span class="sym">),</span>
  flip<span class="sym">(</span> L<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> Count <span class="sym">),</span>
  recorded<span class="sym">(</span> max_flips<span class="sym">,</span> Max<span class="sym">,</span> Ref <span class="sym">),</span>
  Count <span class="sym">&gt;</span> Max<span class="sym">,</span>
  recorda<span class="sym">(</span> max_flips<span class="sym">,</span> Count <span class="sym">),</span>
  erase<span class="sym">(</span> Ref <span class="sym">),</span> <span class="kwa">fail</span>.

pfannkuchen<span class="sym">(</span> _<span class="sym">,</span> Res <span class="sym">) :-</span>
  recorded<span class="sym">(</span> max_flips<span class="sym">,</span> Res <span class="sym">)</span>.

main <span class="sym">:-</span>
  <span class="kwb">current_prolog_flag</span><span class="sym">(</span> argv<span class="sym">,</span> Argv <span class="sym">),</span>
  append<span class="sym">(</span> _<span class="sym">, [ --,</span> Arg <span class="sym">|</span> _ <span class="sym">],</span> Argv <span class="sym">),</span>
  atom_number<span class="sym">(</span> Arg<span class="sym">,</span> Param <span class="sym">),</span>
  pfannkuchen<span class="sym">(</span> Param<span class="sym">,</span> Res <span class="sym">),</span>
  format<span class="sym">(</span> <span class="str">'Pfannkuchen(~d) = ~d</span><span class="esc">\n</span><span class="str">'</span><span class="sym">, [</span>Param<span class="sym">,</span> Res<span class="sym">] )</span>.

