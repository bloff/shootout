<span class="slc">#!/usr/bin/ruby</span>
<span class="slc"># The Computer Language Benchmark Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org</span>
<span class="slc">#</span>
<span class="slc"># original code by Martin DeMello</span>
<span class="slc"># modified by Jabari Zakiya 3/20/05</span>
<span class="slc"># modified by Glenn Parker 3/28/05 (format results)</span>
<span class="slc">#</span>

include Math

SOLAR_MASS = <span class="num">4</span><span class="sym">*</span>PI<span class="sym">*</span>PI
DAYS_PER_YEAR = <span class="num">365.24</span>

Vector3D = Struct<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="str">&quot;Vector3D&quot;</span><span class="sym">, :</span>x<span class="sym">, :</span>y<span class="sym">, :</span>z)

<span class="kwa">class</span> Vector3D

  <span class="kwa">def</span> <span class="sym">*(</span>val)
    Vector3D<span class="sym">.</span><span class="kwd">new</span><span class="sym">(*</span><span class="kwa">self</span><span class="sym">.</span>map <span class="sym">{|</span>i<span class="sym">|</span> i <span class="sym">*</span> val<span class="sym">}</span>)
  <span class="kwa">end</span>

  <span class="kwa">def</span> <span class="sym">/(</span>val)
    Vector3D<span class="sym">.</span><span class="kwd">new</span><span class="sym">(*</span><span class="kwa">self</span><span class="sym">.</span>map <span class="sym">{|</span>i<span class="sym">|</span> i <span class="sym">/</span> val<span class="sym">}</span>)
  <span class="kwa">end</span>

  <span class="slc">#in-place add with scale</span>
  <span class="slc"># a.adds(b, s) -&gt; a += b*s</span>

  <span class="kwa">def</span> <span class="kwd">adds</span><span class="sym">(</span>other<span class="sym">,</span> scale)
    <span class="kwa">self</span><span class="sym">[</span><span class="num">0</span><span class="sym">] +</span>= other<span class="sym">[</span><span class="num">0</span><span class="sym">]*</span>scale<span class="sym">;</span> <span class="kwa">self</span><span class="sym">[</span><span class="num">1</span><span class="sym">] +</span>= other<span class="sym">[</span><span class="num">1</span><span class="sym">]*</span>scale
    <span class="kwa">self</span><span class="sym">[</span><span class="num">2</span><span class="sym">] +</span>= other<span class="sym">[</span><span class="num">2</span><span class="sym">]*</span>scale
  <span class="kwa">end</span>

  <span class="kwa">def</span> <span class="kwd">subs</span><span class="sym">(</span>other<span class="sym">,</span> scale)
    <span class="kwa">self</span><span class="sym">[</span><span class="num">0</span><span class="sym">] -</span>= other<span class="sym">[</span><span class="num">0</span><span class="sym">]*</span>scale<span class="sym">;</span> <span class="kwa">self</span><span class="sym">[</span><span class="num">1</span><span class="sym">] -</span>= other<span class="sym">[</span><span class="num">1</span><span class="sym">]*</span>scale
    <span class="kwa">self</span><span class="sym">[</span><span class="num">2</span><span class="sym">] -</span>= other<span class="sym">[</span><span class="num">2</span><span class="sym">]*</span>scale
  <span class="kwa">end</span>

  <span class="kwa">def</span> magnitude
    x=<span class="kwa">self</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span> y=<span class="kwa">self</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span> z=<span class="kwa">self</span><span class="sym">[</span><span class="num">2</span><span class="sym">]</span>
    <span class="kwd">sqrt</span><span class="sym">(</span>x<span class="sym">*</span>x <span class="sym">+</span> y<span class="sym">*</span>y <span class="sym">+</span> z<span class="sym">*</span>z)
  <span class="kwa">end</span>

  <span class="slc"># |self - other|</span>
  <span class="kwa">def</span> <span class="kwd">dmag</span><span class="sym">(</span>other)
    x=<span class="kwa">self</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-</span>other<span class="sym">[</span><span class="num">0</span><span class="sym">];</span> y=<span class="kwa">self</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-</span>other<span class="sym">[</span><span class="num">1</span><span class="sym">];</span> z=<span class="kwa">self</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-</span>other<span class="sym">[</span><span class="num">2</span><span class="sym">]</span>
    <span class="kwd">sqrt</span><span class="sym">(</span>x<span class="sym">*</span>x <span class="sym">+</span> y<span class="sym">*</span>y <span class="sym">+</span> z<span class="sym">*</span>z)
  <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">class</span> Planet
  attr_accessor <span class="sym">:</span>pos<span class="sym">, :</span>v<span class="sym">, :</span>mass

  <span class="kwa">def</span> <span class="kwd">initialize</span><span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">,</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> mass)
    &#64;pos = Vector3D<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z)
    &#64;v = Vector3D<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>vx<span class="sym">,</span> vy<span class="sym">,</span> vz) <span class="sym">*</span> DAYS_PER_YEAR
    &#64;mass = mass <span class="sym">*</span> SOLAR_MASS
  <span class="kwa">end</span>

  <span class="kwa">def</span> <span class="kwd">distance</span><span class="sym">(</span>other)
    <span class="kwa">self</span><span class="sym">.</span>pos<span class="sym">.</span><span class="kwd">dmag</span><span class="sym">(</span>other<span class="sym">.</span>pos)
  <span class="kwa">end</span>
<span class="kwa">end</span>

jupiter = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
   <span class="num">4.84143144246472090e+00</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">1.16032004402742839e+00</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">1.03622044471123109e-01</span><span class="sym">,</span>
   <span class="num">1.66007664274403694e-03</span><span class="sym">,</span>
   <span class="num">7.69901118419740425e-03</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">6.90460016972063023e-05</span><span class="sym">,</span>
   <span class="num">9.54791938424326609e-04</span>)

saturn = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
   <span class="num">8.34336671824457987e+00</span><span class="sym">,</span>
   <span class="num">4.12479856412430479e+00</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">4.03523417114321381e-01</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">2.76742510726862411e-03</span><span class="sym">,</span>
   <span class="num">4.99852801234917238e-03</span><span class="sym">,</span>
   <span class="num">2.30417297573763929e-05</span><span class="sym">,</span>
   <span class="num">2.85885980666130812e-04</span>)

uranus = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
   <span class="num">1.28943695621391310e+01</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">1.51111514016986312e+01</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">2.23307578892655734e-01</span><span class="sym">,</span>
   <span class="num">2.96460137564761618e-03</span><span class="sym">,</span>
   <span class="num">2.37847173959480950e-03</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">2.96589568540237556e-05</span><span class="sym">,</span>
   <span class="num">4.36624404335156298e-05</span>)

neptune = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>
   <span class="num">1.53796971148509165e+01</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span>
   <span class="num">1.79258772950371181e-01</span><span class="sym">,</span>
   <span class="num">2.68067772490389322e-03</span><span class="sym">,</span>
   <span class="num">1.62824170038242295e-03</span><span class="sym">,</span>
   <span class="sym">-</span><span class="num">9.51592254519715870e-05</span><span class="sym">,</span>
   <span class="num">5.15138902046611451e-05</span>)

sun = Planet<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">1</span>)

<span class="kwa">class</span> Array
  <span class="kwa">def</span> each_pair
    a = <span class="sym">[]</span>
    each_index <span class="sym">{|</span>i<span class="sym">|</span>
      <span class="sym">((</span>i<span class="sym">+</span><span class="num">1</span>)<span class="sym">...</span>length)<span class="sym">.</span>each <span class="sym">{|</span>j<span class="sym">|</span>
        <span class="kwa">yield</span> <span class="kwd">at</span><span class="sym">(</span>i)<span class="sym">,</span> <span class="kwd">at</span><span class="sym">(</span>j)
      <span class="sym">}</span>
    <span class="sym">}</span>
  <span class="kwa">end</span>
<span class="kwa">end</span>

bodies = <span class="sym">[</span>sun<span class="sym">,</span> jupiter<span class="sym">,</span> saturn<span class="sym">,</span> uranus<span class="sym">,</span> neptune<span class="sym">]</span>

<span class="kwa">class</span> <span class="sym">&lt;&lt;</span> bodies
  <span class="kwa">def</span> <span class="kwd">advance</span><span class="sym">(</span>dt)
    mag = m1 = m2 = <span class="kwa">nil</span>
    each_pair <span class="sym">{|</span>b1<span class="sym">,</span> b2<span class="sym">|</span>
      d = b1<span class="sym">.</span><span class="kwd">distance</span><span class="sym">(</span>b2)
      mag = dt<span class="sym">/(</span>d<span class="sym">*</span>d<span class="sym">*</span>d)

      m1 = b1<span class="sym">.</span>mass <span class="sym">*</span> mag
      m2 = b2<span class="sym">.</span>mass <span class="sym">*</span> mag

      b1<span class="sym">.</span>v<span class="sym">.</span><span class="kwd">adds</span><span class="sym">(</span>b2<span class="sym">.</span>pos<span class="sym">,</span> m2)
      b1<span class="sym">.</span>v<span class="sym">.</span><span class="kwd">subs</span><span class="sym">(</span>b1<span class="sym">.</span>pos<span class="sym">,</span> m2)
      b2<span class="sym">.</span>v<span class="sym">.</span><span class="kwd">adds</span><span class="sym">(</span>b1<span class="sym">.</span>pos<span class="sym">,</span> m1)
      b2<span class="sym">.</span>v<span class="sym">.</span><span class="kwd">subs</span><span class="sym">(</span>b2<span class="sym">.</span>pos<span class="sym">,</span> m1)
    <span class="sym">}</span>

    each <span class="sym">{|</span>b<span class="sym">|</span> b<span class="sym">.</span>pos<span class="sym">.</span><span class="kwd">adds</span><span class="sym">(</span>b<span class="sym">.</span>v<span class="sym">,</span> dt)<span class="sym">}</span>
  <span class="kwa">end</span>

  <span class="kwa">def</span> energy
    e = <span class="num">0</span>
    each <span class="sym">{|</span>b<span class="sym">|</span> e <span class="sym">+</span>= <span class="num">0.5</span> <span class="sym">*</span> b<span class="sym">.</span>mass <span class="sym">* (</span>b<span class="sym">.</span>v<span class="sym">.</span>magnitude <span class="sym">**</span> <span class="num">2</span>) <span class="sym">}</span>
    each_pair <span class="sym">{|</span>b1<span class="sym">,</span> b2<span class="sym">|</span> e <span class="sym">-</span>= <span class="sym">(</span>b1<span class="sym">.</span>mass <span class="sym">*</span> b2<span class="sym">.</span>mass) <span class="sym">/</span> b1<span class="sym">.</span><span class="kwd">distance</span><span class="sym">(</span>b2) <span class="sym">}</span>
    e
  <span class="kwa">end</span>

  <span class="kwa">def</span> offset_momentum
    p = Vector3D<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span><span class="sym">,</span><span class="num">0</span>)
    sun = <span class="kwa">self</span><span class="sym">[</span><span class="num">0</span><span class="sym">]</span>
    each <span class="sym">{|</span>b<span class="sym">|</span> p<span class="sym">.</span><span class="kwd">adds</span><span class="sym">(</span>b<span class="sym">.</span>v<span class="sym">,</span> b<span class="sym">.</span>mass) <span class="sym">}</span>
    sun<span class="sym">.</span>v<span class="sym">.</span><span class="kwd">subs</span><span class="sym">(</span>p<span class="sym">,</span> <span class="num">1.0</span><span class="sym">/</span>sun<span class="sym">.</span>mass)
  <span class="kwa">end</span>
<span class="kwa">end</span>

bodies<span class="sym">.</span>offset_momentum
puts <span class="str">&quot;%.9f&quot;</span> % bodies<span class="sym">.</span>energy
<span class="kwd">Integer</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">]</span>)<span class="sym">.</span>times <span class="sym">{</span> bodies<span class="sym">.</span><span class="kwd">advance</span><span class="sym">(</span><span class="num">0.01</span>) <span class="sym">}</span>
puts <span class="str">&quot;%.9f&quot;</span> % bodies<span class="sym">.</span>energy
