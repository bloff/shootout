<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">% based on work by Anthony Borla and Christoph Bauer</span>
<span class="hl slc">% contributed by Glendon Holst</span>

<span class="hl sym">:-</span> module recursive.
<span class="hl sym">:-</span> interface.
<span class="hl sym">:-</span> import_module io.

<span class="hl sym">:-</span> pred main<span class="hl sym">(</span>io<span class="hl sym">::</span>di<span class="hl sym">,</span> io<span class="hl sym">::</span>uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det.


<span class="hl sym">:-</span> implementation.

<span class="hl sym">:-</span> import_module list.
<span class="hl sym">:-</span> import_module int.
<span class="hl sym">:-</span> import_module <span class="hl kwb">float</span>.
<span class="hl sym">:-</span> import_module string.


main<span class="hl sym">(!</span>IO<span class="hl sym">) :-</span>
   io.command_line_arguments<span class="hl sym">(</span>Args<span class="hl sym">, !</span>IO<span class="hl sym">),</span>
   <span class="hl sym">(</span>
      if
         Args <span class="hl sym">= [</span>AString<span class="hl sym">|</span>_<span class="hl sym">],</span>
         string.to_int<span class="hl sym">(</span>string.strip<span class="hl sym">(</span>AString<span class="hl sym">),</span> Aint<span class="hl sym">)</span>
      then
         A <span class="hl sym">=</span> Aint
      else
         A <span class="hl kwa">is</span> <span class="hl num">11</span>
   <span class="hl sym">),</span>

   ack<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,</span> A<span class="hl sym">,</span> Val1<span class="hl sym">),</span>
   io.format<span class="hl sym">(</span><span class="hl str">&quot;Ack(3,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,[</span>i<span class="hl sym">(</span>A<span class="hl sym">),</span>i<span class="hl sym">(</span>Val1<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>

   C <span class="hl kwa">is</span> <span class="hl num">27.0</span> <span class="hl sym">+</span> <span class="hl kwb">float</span><span class="hl sym">(</span>A<span class="hl sym">),</span>
   Val2 <span class="hl sym">=</span> fib_float<span class="hl sym">(</span>C<span class="hl sym">),</span>
   io.format<span class="hl sym">(</span><span class="hl str">&quot;Fib(%.1f): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span>C<span class="hl sym">),</span> f<span class="hl sym">(</span>Val2<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>

   B <span class="hl kwa">is</span> A<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span>
   X <span class="hl kwa">is</span> <span class="hl num">3</span><span class="hl sym">*</span>B<span class="hl sym">,</span>
   Y <span class="hl kwa">is</span> <span class="hl num">2</span><span class="hl sym">*</span>B<span class="hl sym">,</span>
   Z <span class="hl kwa">is</span> B<span class="hl sym">,</span>
   tak<span class="hl sym">(</span>X<span class="hl sym">,</span>Y<span class="hl sym">,</span>Z<span class="hl sym">,</span>Val3<span class="hl sym">),</span>
   io.format<span class="hl sym">(</span><span class="hl str">&quot;Tak(%d,%d,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>i<span class="hl sym">(</span>X<span class="hl sym">),</span> i<span class="hl sym">(</span>Y<span class="hl sym">),</span> i<span class="hl sym">(</span>Z<span class="hl sym">),</span> i<span class="hl sym">(</span>Val3<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>

   Val4 <span class="hl sym">=</span> fib<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">),</span>
   io.format<span class="hl sym">(</span><span class="hl str">&quot;Fib(3): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>i<span class="hl sym">(</span>Val4<span class="hl sym">)], !</span>IO<span class="hl sym">),</span>

   tak_float<span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">,</span><span class="hl num">2.0</span><span class="hl sym">,</span><span class="hl num">1.0</span><span class="hl sym">,</span>Val5<span class="hl sym">),</span>
   io.format<span class="hl sym">(</span><span class="hl str">&quot;Tak(%.1f,%.1f,%.1f): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, [</span>f<span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">),</span> f<span class="hl sym">(</span><span class="hl num">2.0</span><span class="hl sym">),</span> f<span class="hl sym">(</span><span class="hl num">1.0</span><span class="hl sym">),</span> f<span class="hl sym">(</span>Val5<span class="hl sym">)], !</span>IO<span class="hl sym">)</span>.



<span class="hl sym">:-</span> pred ack<span class="hl sym">(</span>int<span class="hl sym">::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

ack<span class="hl sym">(</span>M<span class="hl sym">,</span> N<span class="hl sym">,</span> Val<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   if M <span class="hl sym">=</span> <span class="hl num">0</span> then
      Val <span class="hl kwa">is</span> N <span class="hl sym">+</span> <span class="hl num">1</span>
   else if N <span class="hl sym">=</span> <span class="hl num">0</span> then
      ack<span class="hl sym">(</span>M <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> Val<span class="hl sym">)</span>
   else
      ack<span class="hl sym">(</span>M<span class="hl sym">,</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Val1<span class="hl sym">),</span> ack<span class="hl sym">(</span>M <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Val1<span class="hl sym">,</span> Val<span class="hl sym">)</span>
<span class="hl sym">)</span>.



<span class="hl sym">:-</span> func fib<span class="hl sym">(</span>int<span class="hl sym">) =</span> int.

fib<span class="hl sym">(</span>N<span class="hl sym">) = (</span>if N <span class="hl sym">&lt;</span> <span class="hl num">2</span> then <span class="hl num">1</span> else fib<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) +</span> fib<span class="hl sym">(</span>N <span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">))</span>.



<span class="hl sym">:-</span> func fib_float<span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">) =</span> <span class="hl kwb">float</span>.

fib_float<span class="hl sym">(</span>N<span class="hl sym">) = (</span>if N <span class="hl sym">&lt;</span> <span class="hl num">2.0</span> then <span class="hl num">1.0</span> else fib_float<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">) +</span> fib_float<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">2.0</span><span class="hl sym">))</span>.



<span class="hl sym">:-</span> pred tak<span class="hl sym">(</span>int<span class="hl sym">::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

tak<span class="hl sym">(</span>X<span class="hl sym">,</span> Y<span class="hl sym">,</span> Z<span class="hl sym">,</span> Result<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   if <span class="hl sym">(</span>Y <span class="hl sym">&lt;</span> X<span class="hl sym">,</span>
      tak<span class="hl sym">(</span>X<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> Y<span class="hl sym">,</span> Z<span class="hl sym">,</span> A<span class="hl sym">),</span>
      tak<span class="hl sym">(</span>Y<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> Z<span class="hl sym">,</span> X<span class="hl sym">,</span> B<span class="hl sym">),</span>
      tak<span class="hl sym">(</span>Z<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> X<span class="hl sym">,</span> Y<span class="hl sym">,</span> C<span class="hl sym">),</span>
      tak<span class="hl sym">(</span>A<span class="hl sym">,</span> B<span class="hl sym">,</span> C<span class="hl sym">,</span> R<span class="hl sym">))</span>
   then
      Result <span class="hl sym">=</span> R
   else
      Result <span class="hl sym">=</span> Z
<span class="hl sym">)</span>.

<span class="hl sym">:-</span> pred tak_float<span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">::</span>in<span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">::</span>in<span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">::</span>in<span class="hl sym">,</span> <span class="hl kwb">float</span><span class="hl sym">::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det.

tak_float<span class="hl sym">(</span>X<span class="hl sym">,</span> Y<span class="hl sym">,</span> Z<span class="hl sym">,</span> Result<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   if <span class="hl sym">(</span>Y <span class="hl sym">&lt;</span> X<span class="hl sym">,</span>
      tak_float<span class="hl sym">(</span>X<span class="hl sym">-</span><span class="hl num">1.0</span><span class="hl sym">,</span> Y<span class="hl sym">,</span> Z<span class="hl sym">,</span> A<span class="hl sym">),</span>
      tak_float<span class="hl sym">(</span>Y<span class="hl sym">-</span><span class="hl num">1.0</span><span class="hl sym">,</span> Z<span class="hl sym">,</span> X<span class="hl sym">,</span> B<span class="hl sym">),</span>
      tak_float<span class="hl sym">(</span>Z<span class="hl sym">-</span><span class="hl num">1.0</span><span class="hl sym">,</span> X<span class="hl sym">,</span> Y<span class="hl sym">,</span> C<span class="hl sym">),</span>
      tak_float<span class="hl sym">(</span>A<span class="hl sym">,</span> B<span class="hl sym">,</span> C<span class="hl sym">,</span> R<span class="hl sym">))</span>
   then
      Result <span class="hl sym">=</span> R
   else
      Result <span class="hl sym">=</span> Z
<span class="hl sym">)</span>.
