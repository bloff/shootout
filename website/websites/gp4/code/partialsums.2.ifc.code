<span class="hl slc">! The Computer Language Shootout</span>
<span class="hl slc">!   http://shootout.alioth.debian.org/</span>
<span class="hl slc">!</span>
<span class="hl slc">!   Contributed by Steve Decker</span>
<span class="hl slc">!   Version 3</span>
<span class="hl slc">!   Written similarly to the Oberon-2 version among others.</span>
<span class="hl slc">!</span>
<span class="hl slc">! compilation:</span>
<span class="hl slc">!   g95 -O3 -fomit-frame-pointer -funroll-loops partial3.f90</span>
<span class="hl slc">!   gfortran -O3 -fomit-frame-pointer -funroll-loops -ffast-math partial3.f90</span>
<span class="hl slc">!   ifort -O3 -ipo -static partial3.f90</span>

program partial
  implicit none

  integer<span class="hl sym">,</span>   parameter <span class="hl sym">::</span> dp <span class="hl sym">=</span> selected_real_kind<span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">)</span>
  real<span class="hl sym">(</span>dp<span class="hl sym">),</span>  parameter <span class="hl sym">::</span> TwoThirds <span class="hl sym">=</span> <span class="hl num">2</span>._dp<span class="hl sym">/</span><span class="hl num">3</span>._dp<span class="hl sym">,</span> Zero <span class="hl sym">=</span> <span class="hl num">0</span>._dp<span class="hl sym">,</span> One <span class="hl sym">=</span> <span class="hl num">1</span>._dp
  character<span class="hl sym">,</span> parameter <span class="hl sym">::</span> Tab <span class="hl sym">=</span> achar<span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">)</span>

  real<span class="hl sym">(</span>dp<span class="hl sym">)         ::</span> s1 <span class="hl sym">=</span> One<span class="hl sym">,</span> s2 <span class="hl sym">=</span> Zero<span class="hl sym">,</span> s3 <span class="hl sym">=</span> Zero<span class="hl sym">,</span> s4 <span class="hl sym">=</span> Zero<span class="hl sym">,</span> s5 <span class="hl sym">=</span> Zero<span class="hl sym">,  &amp;</span>
                      s6 <span class="hl sym">=</span> Zero<span class="hl sym">,</span> s7 <span class="hl sym">=</span> Zero<span class="hl sym">,</span> s8 <span class="hl sym">=</span> Zero<span class="hl sym">,</span> s9 <span class="hl sym">=</span> Zero<span class="hl sym">,</span> alt <span class="hl sym">= -</span>One
  integer          <span class="hl sym">::</span> n<span class="hl sym">,</span> k
  character<span class="hl sym">(</span>len<span class="hl sym">=</span><span class="hl num">8</span><span class="hl sym">) ::</span> argv

  call get_command_argument<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> argv<span class="hl sym">)</span>
  read <span class="hl sym">(</span>argv<span class="hl sym">,</span> <span class="hl str">&quot;(i8)&quot;</span><span class="hl sym">)</span> n

  do k <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">,</span> n
     alt <span class="hl sym">= -</span>alt

     s1 <span class="hl sym">=</span> s1 <span class="hl sym">+</span> TwoThirds<span class="hl sym">**</span>real<span class="hl sym">(</span>k<span class="hl sym">,</span>dp<span class="hl sym">)</span>
     s2 <span class="hl sym">=</span> s2 <span class="hl sym">+</span> One <span class="hl sym">/</span> sqrt<span class="hl sym">(</span>real<span class="hl sym">(</span>k<span class="hl sym">,</span>dp<span class="hl sym">))</span>
     s3 <span class="hl sym">=</span> s3 <span class="hl sym">+</span> One <span class="hl sym">/ (</span>k <span class="hl sym">* (</span>k <span class="hl sym">+</span> One<span class="hl sym">))</span>
     s4 <span class="hl sym">=</span> s4 <span class="hl sym">+</span> One <span class="hl sym">/ (</span>real<span class="hl sym">(</span>k<span class="hl sym">,</span>dp<span class="hl sym">)**</span><span class="hl num">3</span> <span class="hl sym">*</span> sin<span class="hl sym">(</span>real<span class="hl sym">(</span>k<span class="hl sym">,</span>dp<span class="hl sym">))**</span><span class="hl num">2</span><span class="hl sym">)</span>
     s5 <span class="hl sym">=</span> s5 <span class="hl sym">+</span> One <span class="hl sym">/ (</span>real<span class="hl sym">(</span>k<span class="hl sym">,</span>dp<span class="hl sym">)**</span><span class="hl num">3</span> <span class="hl sym">*</span> cos<span class="hl sym">(</span>real<span class="hl sym">(</span>k<span class="hl sym">,</span>dp<span class="hl sym">))**</span><span class="hl num">2</span><span class="hl sym">)</span>
     s6 <span class="hl sym">=</span> s6 <span class="hl sym">+</span> One <span class="hl sym">/</span> k
     s7 <span class="hl sym">=</span> s7 <span class="hl sym">+</span> One <span class="hl sym">/ (</span>real<span class="hl sym">(</span>k<span class="hl sym">,</span>dp<span class="hl sym">)**</span><span class="hl num">2</span><span class="hl sym">)</span>
     s8 <span class="hl sym">=</span> s8 <span class="hl sym">+</span> alt <span class="hl sym">/</span> k
     s9 <span class="hl sym">=</span> s9 <span class="hl sym">+</span> alt <span class="hl sym">/ (</span><span class="hl num">2</span><span class="hl sym">*</span>k <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)</span>
  end do

  write <span class="hl sym">(*,</span> <span class="hl str">&quot;(f0.9,a)&quot;</span><span class="hl sym">)</span> s1<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;(2/3)^k&quot;</span>
  write <span class="hl sym">(*,</span> <span class="hl str">&quot;(f0.9,a)&quot;</span><span class="hl sym">)</span> s2<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;k^-0.5&quot;</span>
  write <span class="hl sym">(*,</span><span class="hl str">&quot;(f11.9,a)&quot;</span><span class="hl sym">)</span> s3<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;1/k(k+1)&quot;</span>
  write <span class="hl sym">(*,</span> <span class="hl str">&quot;(f0.9,a)&quot;</span><span class="hl sym">)</span> s4<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;Flint Hills&quot;</span>
  write <span class="hl sym">(*,</span> <span class="hl str">&quot;(f0.9,a)&quot;</span><span class="hl sym">)</span> s5<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;Cookson Hills&quot;</span>
  write <span class="hl sym">(*,</span> <span class="hl str">&quot;(f0.9,a)&quot;</span><span class="hl sym">)</span> s6<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;Harmonic&quot;</span>
  write <span class="hl sym">(*,</span> <span class="hl str">&quot;(f0.9,a)&quot;</span><span class="hl sym">)</span> s7<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;Riemann Zeta&quot;</span>
  write <span class="hl sym">(*,</span><span class="hl str">&quot;(f11.9,a)&quot;</span><span class="hl sym">)</span> s8<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;Alternating Harmonic&quot;</span>
  write <span class="hl sym">(*,</span><span class="hl str">&quot;(f11.9,a)&quot;</span><span class="hl sym">)</span> s9<span class="hl sym">,</span> Tab <span class="hl sym">//</span> <span class="hl str">&quot;Gregory&quot;</span>
end program partial
