<span class="hl slc">// The Computer Language Shootout</span>
<span class="hl slc">// http://shootout.alioth.debian.org/</span>
<span class="hl slc">// by bearophile, Jan 24 2006</span>
<span class="hl slc">// converted to C++ by Greg Buchholz</span>
<span class="hl slc">// modified by Paul Kitchin</span>

<span class="hl dir">#include &lt;iomanip&gt;</span>
<span class="hl dir">#include &lt;iostream&gt;</span>
<span class="hl dir">#include &lt;sstream&gt;</span>

<span class="hl kwc">template</span> <span class="hl sym">&lt;</span> <span class="hl kwc">class</span> N <span class="hl sym">&gt;</span>
N <span class="hl kwd">Ack</span><span class="hl sym">(</span>N x<span class="hl sym">,</span> N y<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span>fastcall<span class="hl sym">,</span> <span class="hl kwb">const</span><span class="hl sym">,</span> nothrow<span class="hl sym">));</span>

<span class="hl kwc">template</span> <span class="hl sym">&lt;</span> <span class="hl kwc">class</span> N <span class="hl sym">&gt;</span>
N <span class="hl kwd">Ack</span><span class="hl sym">(</span>N x<span class="hl sym">,</span> N y<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl kwd">__builtin_expect</span><span class="hl sym">(</span>x <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span> ? y <span class="hl sym">+</span> <span class="hl num">1</span> <span class="hl sym">: ((</span>y <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">)</span> ? <span class="hl kwd">Ack</span><span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">) :</span> <span class="hl kwd">Ack</span><span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwd">Ack</span><span class="hl sym">(</span>x<span class="hl sym">,</span> y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)));</span>
<span class="hl sym">}</span>

<span class="hl kwc">template</span> <span class="hl sym">&lt;</span> <span class="hl kwc">class</span> N <span class="hl sym">&gt;</span>
N <span class="hl kwd">Fib</span><span class="hl sym">(</span>N n<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span>fastcall<span class="hl sym">,</span> <span class="hl kwb">const</span><span class="hl sym">,</span> nothrow<span class="hl sym">));</span>

<span class="hl kwc">template</span> <span class="hl sym">&lt;</span> <span class="hl kwc">class</span> N <span class="hl sym">&gt;</span>
N <span class="hl kwd">Fib</span><span class="hl sym">(</span>N n<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">return</span> <span class="hl kwd">__builtin_expect</span><span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span> ? <span class="hl num">1</span> <span class="hl sym">:</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) +</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">template</span> <span class="hl sym">&lt;</span> <span class="hl kwc">class</span> N <span class="hl sym">&gt;</span>
N <span class="hl kwd">Tak</span><span class="hl sym">(</span>N x<span class="hl sym">,</span> N y<span class="hl sym">,</span> N z<span class="hl sym">)</span> <span class="hl kwd">__attribute__</span><span class="hl sym">((</span>fastcall<span class="hl sym">,</span> <span class="hl kwb">const</span><span class="hl sym">,</span> nothrow<span class="hl sym">));</span>

<span class="hl kwc">template</span> <span class="hl sym">&lt;</span> <span class="hl kwc">class</span> N <span class="hl sym">&gt;</span>
N <span class="hl kwd">Tak</span><span class="hl sym">(</span>N x<span class="hl sym">,</span> N y<span class="hl sym">,</span> N z<span class="hl sym">)</span>
<span class="hl sym">{</span>
    <span class="hl kwa">return</span> <span class="hl kwd">__builtin_expect</span><span class="hl sym">(</span>y <span class="hl sym">&lt;</span> x<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span> ? <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl kwd">Tak</span><span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">),</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span>y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> z<span class="hl sym">,</span> x<span class="hl sym">),</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span>z <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">)) :</span> z<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">char</span> <span class="hl sym">* *</span> argv<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span>argc <span class="hl sym">!=</span> <span class="hl num">2</span><span class="hl sym">)</span>
   <span class="hl sym">{</span>
      std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;usage: nsieve &lt;n&gt;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
      <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
   <span class="hl kwb">int</span> n<span class="hl sym">;</span>
   <span class="hl sym">{</span>
      std<span class="hl sym">::</span>istringstream <span class="hl kwd">convertor</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]);</span>
      <span class="hl kwa">if</span> <span class="hl sym">(!(</span>convertor <span class="hl sym">&gt;&gt;</span> n<span class="hl sym">) || !</span>convertor<span class="hl sym">.</span><span class="hl kwd">eof</span><span class="hl sym">())</span>
      <span class="hl sym">{</span>
         std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;usage: nsieve &lt;n&gt;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
         std<span class="hl sym">::</span>cerr <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;   n must be an integer</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
         <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> std<span class="hl sym">::</span><span class="hl kwd">setprecision</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">) &lt;&lt;</span> std<span class="hl sym">::</span><span class="hl kwd">setiosflags</span><span class="hl sym">(</span>std<span class="hl sym">::</span>ios_base<span class="hl sym">::</span>fixed<span class="hl sym">);</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;Ack(3,&quot;</span> <span class="hl sym">&lt;&lt;</span> n <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;): &quot;</span> <span class="hl sym">&lt;&lt;</span> <span class="hl kwd">Ack</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,</span> n<span class="hl sym">) &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;Fib(&quot;</span> <span class="hl sym">&lt;&lt; (</span><span class="hl num">27.0</span> <span class="hl sym">+</span> n<span class="hl sym">) &lt;&lt;</span> <span class="hl str">&quot;): &quot;</span> <span class="hl sym">&lt;&lt;</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span><span class="hl num">27.0</span> <span class="hl sym">+</span> n<span class="hl sym">) &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>
   <span class="hl sym">--</span>n<span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;Tak(&quot;</span> <span class="hl sym">&lt;&lt; (</span><span class="hl num">3</span> <span class="hl sym">*</span> n<span class="hl sym">) &lt;&lt;</span> <span class="hl str">','</span> <span class="hl sym">&lt;&lt; (</span><span class="hl num">2</span> <span class="hl sym">*</span> n<span class="hl sym">) &lt;&lt;</span> <span class="hl str">','</span> <span class="hl sym">&lt;&lt;</span> n <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;): &quot;</span> <span class="hl sym">&lt;&lt;</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl num">3</span> <span class="hl sym">*</span> n<span class="hl sym">,</span> <span class="hl num">2</span> <span class="hl sym">*</span> n<span class="hl sym">,</span> n<span class="hl sym">) &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;Fib(3): &quot;</span> <span class="hl sym">&lt;&lt;</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">) &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>
   std<span class="hl sym">::</span>cout <span class="hl sym">&lt;&lt;</span> <span class="hl str">&quot;Tak(3.0,2.0,1.0): &quot;</span> <span class="hl sym">&lt;&lt;</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">,</span> <span class="hl num">2.0</span><span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">) &lt;&lt;</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

