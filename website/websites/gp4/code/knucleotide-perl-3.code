<span class="slc">#!/usr/bin/env perl</span>
<span class="slc"># $$Id: knucleotide-perl-3.code,v 1.1 2006-02-21 18:52:47 igouy-guest Exp $</span>
<span class="slc">#  The Computer Language Shootout</span>
<span class="slc">#  http://shootout.alioth.debian.org/</span>
<span class="slc">#  contributed by Karl FORNER</span>
<span class="slc"># (borrowed fasta loading routine from Kjetil Skotheim, 2005-11-29)</span>

<span class="kwc">my</span> <span class="kwb">&#64;nuc</span> <span class="sym">= ([</span>qw<span class="sym">{</span>A C G T<span class="sym">}],[</span><span class="kwd">qw</span><span class="sym">(</span>AA AC AG AT CA CC CG CT GA GC GG GT TA TC TG TT<span class="sym">)]);</span>
<span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$sequence</span><span class="sym">);</span>
<span class="sym">$/ =</span> <span class="str">&quot;&gt;&quot;</span><span class="sym">;</span>
<span class="sym">/</span>^THREE<span class="sym">/</span>i <span class="kwa">and</span> <span class="kwb">$sequence</span> <span class="sym">=</span> <span class="kwd">uc</span><span class="sym">(</span>join <span class="str">&quot;&quot;</span><span class="sym">,</span> grep <span class="sym">!/</span>^<span class="sym">(</span>?<span class="sym">:;|</span>THREE<span class="sym">)/,</span> split <span class="sym">/</span><span class="esc">\n</span><span class="sym">+/)</span> <span class="kwa">while</span> <span class="sym">&lt;</span>STDIN<span class="sym">&gt;;</span>

<span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$l</span><span class="sym">,</span><span class="kwb">%h</span><span class="sym">,</span><span class="kwb">&#64;all</span><span class="sym">,</span><span class="kwb">$key</span><span class="sym">,</span><span class="kwb">$value</span><span class="sym">,</span><span class="kwb">$sum</span><span class="sym">) = (</span>length <span class="kwb">$sequence</span><span class="sym">);</span>
keys <span class="kwb">%h</span> <span class="sym">=</span> <span class="kwb">$l</span><span class="sym">;</span>
<span class="kwa">foreach</span> <span class="kwc">my</span> <span class="kwb">$frame</span> <span class="sym">(</span><span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">) {</span>
  <span class="kwd">update_hash_for_frame</span><span class="sym">(</span><span class="kwb">$frame</span><span class="sym">);</span>
  <span class="kwb">$sum</span> <span class="sym">=</span> <span class="kwb">$l</span> <span class="sym">-</span> <span class="kwb">$frame</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">;</span>
  <span class="kwb">&#64;all</span> <span class="sym">=</span> sort <span class="sym">{</span> <span class="kwb">$b</span><span class="sym">-&gt;[</span><span class="num">1</span><span class="sym">] &lt;=&gt;</span> <span class="kwb">$a</span><span class="sym">-&gt;[</span><span class="num">1</span><span class="sym">] ||</span> <span class="kwb">$a</span><span class="sym">-&gt;[</span><span class="num">0</span><span class="sym">] &lt;=&gt;</span> <span class="kwb">$b</span><span class="sym">-&gt;[</span><span class="num">0</span><span class="sym">] }</span>
    map <span class="sym">{ [</span><span class="kwb">$_</span><span class="sym">,</span><span class="kwd">sprintf</span><span class="sym">(</span><span class="str">&quot;%.3f&quot;</span><span class="sym">,(</span><span class="kwb">$h</span><span class="sym">{</span><span class="kwb">$_</span><span class="sym">}||</span><span class="num">0</span><span class="sym">)*</span><span class="num">100</span><span class="sym">/</span><span class="kwb">$sum</span><span class="sym">)] }</span> &#64;<span class="sym">{</span><span class="kwb">$nuc</span><span class="sym">[</span><span class="kwb">$frame</span><span class="sym">-</span><span class="num">1</span><span class="sym">]};</span>
  print <span class="kwd">join</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span>map <span class="sym">{</span> <span class="kwd">join</span><span class="sym">(</span><span class="str">' '</span><span class="sym">,</span>&#64;<span class="kwb">$_</span><span class="sym">) }</span> <span class="kwb">&#64;all</span><span class="sym">),</span><span class="str">&quot;</span><span class="esc">\n\n</span><span class="str">&quot;</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">foreach</span> <span class="kwc">my</span> <span class="kwb">$s</span> <span class="sym">(</span><span class="kwd">qw</span><span class="sym">(</span>GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT<span class="sym">)) {</span>
  <span class="kwd">update_hash_for_frame</span><span class="sym">(</span><span class="kwd">length</span><span class="sym">(</span><span class="kwb">$s</span><span class="sym">));</span>
  print <span class="kwd">join</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">\t</span><span class="str">&quot;</span><span class="sym">,(</span><span class="kwb">$h</span><span class="sym">{</span><span class="kwb">$s</span><span class="sym">}||</span><span class="num">0</span><span class="sym">),</span><span class="kwb">$s</span><span class="sym">),</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">sub</span> update_hash_for_frame <span class="sym">{</span>
  <span class="kwc">my</span> <span class="kwb">$frame</span> <span class="sym">=</span> <span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
  <span class="kwb">$h</span><span class="sym">{</span><span class="kwd">substr</span><span class="sym">(</span><span class="kwb">$sequence</span><span class="sym">,</span><span class="kwb">$_</span><span class="sym">,</span><span class="kwb">$frame</span><span class="sym">)}++</span> <span class="kwa">foreach</span> <span class="sym">(</span><span class="num">0</span>..<span class="sym">(</span><span class="kwb">$l</span> <span class="sym">-</span> <span class="kwb">$frame</span><span class="sym">));</span>
<span class="sym">}</span>






