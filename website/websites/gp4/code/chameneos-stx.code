<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://shootout.alioth.debian.org/</span>
<span class="hl com">    contributed by Paolo Bonzini</span>
<span class="hl com">    modified by Eliot Miranda *&quot;</span><span class="hl sym">!</span>

<span class="hl com">&quot;* SPLITFILE=Tests.st *&quot;</span><span class="hl sym">!</span>

Object subclass<span class="hl sym">:#</span>Tests
   instanceVariableNames<span class="hl sym">:</span><span class="hl str">''</span>
   classVariableNames<span class="hl sym">:</span><span class="hl str">''</span>
   poolDictionaries<span class="hl sym">:</span><span class="hl str">''</span>
   category<span class="hl sym">:</span><span class="hl str">'benchmark-games'</span>
<span class="hl sym">!</span>

<span class="hl sym">!</span>Tests class methodsFor<span class="hl sym">:</span><span class="hl str">'benchmarks-game'</span><span class="hl sym">!</span>

chameneos<span class="hl sym">:</span> n
    <span class="hl sym">|</span> c1 c2 c3 c4 mp <span class="hl sym">|</span>
    c1 <span class="hl sym">:=</span> Chameleon color<span class="hl sym">: #</span>blue<span class="hl sym">.</span>
    c2 <span class="hl sym">:=</span> Chameleon color<span class="hl sym">: #</span>red<span class="hl sym">.</span>
    c3 <span class="hl sym">:=</span> Chameleon color<span class="hl sym">: #</span>yellow<span class="hl sym">.</span>
    c4 <span class="hl sym">:=</span> Chameleon color<span class="hl sym">: #</span>blue<span class="hl sym">.</span>
    mp <span class="hl sym">:=</span> MeetingPlace forMeetings<span class="hl sym">:</span> n<span class="hl sym">.</span>
    c1 fork<span class="hl sym">:</span> mp<span class="hl sym">.</span>
    c2 fork<span class="hl sym">:</span> mp<span class="hl sym">.</span>
    c3 fork<span class="hl sym">:</span> mp<span class="hl sym">.</span>
    c4 fork<span class="hl sym">:</span> mp<span class="hl sym">.</span>
    c1 wait<span class="hl sym">.</span>
    c2 wait<span class="hl sym">.</span>
    c3 wait<span class="hl sym">.</span>
    c4 wait<span class="hl sym">.</span>
    <span class="hl sym">^</span>c1 meetings <span class="hl sym">+</span> c2 meetings <span class="hl sym">+</span> c3 meetings <span class="hl sym">+</span> c4 meetings
<span class="hl sym">!</span>

main
    Stdout print<span class="hl sym">: (</span><span class="hl kwa">self</span> chameneos<span class="hl sym">:</span> Smalltalk commandLineArguments last asNumber<span class="hl sym">);</span> cr
<span class="hl sym">! !</span>

<span class="hl com">&quot;* SPLITFILE=Chameleon.st *&quot;</span><span class="hl sym">!</span>

Object subclass<span class="hl sym">: #</span>Chameleon
   instanceVariableNames<span class="hl sym">:</span> <span class="hl str">'meetings color semaphore waitingForPair'</span>
   classVariableNames<span class="hl sym">:</span> <span class="hl str">''</span>
   poolDictionaries<span class="hl sym">:</span> <span class="hl str">''</span>
   category<span class="hl sym">:</span> <span class="hl str">'benchmarks-game'</span>
<span class="hl sym">!</span>

<span class="hl sym">!</span>Chameleon class methodsFor<span class="hl sym">:</span><span class="hl str">'instance creation'</span><span class="hl sym">!</span>
color<span class="hl sym">:</span> c
    <span class="hl sym">^</span><span class="hl kwa">self</span> new
        initialize<span class="hl sym">;</span>
        color<span class="hl sym">:</span> c
<span class="hl sym">! !</span>


<span class="hl sym">!</span>Chameleon methodsFor<span class="hl sym">:</span><span class="hl str">'initialize-release'</span><span class="hl sym">!</span>
initialize
    meetings <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>
    waitingForPair <span class="hl sym">:=</span> Semaphore new<span class="hl sym">.</span>
    semaphore <span class="hl sym">:=</span> Semaphore new
<span class="hl sym">! !</span>

<span class="hl sym">!</span>Chameleon methodsFor<span class="hl sym">:</span><span class="hl str">'changing colours'</span><span class="hl sym">!</span>
color<span class="hl sym">:</span> c
    color <span class="hl sym">:=</span> c
<span class="hl sym">!</span>

fade
    color <span class="hl sym">:= #</span>faded<span class="hl sym">.</span>
    waitingForPair signal<span class="hl sym">.</span>
    semaphore signal
<span class="hl sym">!</span>

met<span class="hl sym">:</span> other
    <span class="hl sym">|</span> newColor <span class="hl sym">|</span>
    meetings <span class="hl sym">:=</span> meetings <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">.</span>
    color <span class="hl sym">== #</span>red ifTrue<span class="hl sym">: [</span>
    newColor <span class="hl sym">:=</span> other <span class="hl sym">== #</span>yellow ifTrue<span class="hl sym">: [ #</span>blue <span class="hl sym">]</span> ifFalse<span class="hl sym">: [ #</span>yellow <span class="hl sym">] ].</span>
    color <span class="hl sym">== #</span>yellow ifTrue<span class="hl sym">: [</span>
    newColor <span class="hl sym">:=</span> other <span class="hl sym">== #</span>red ifTrue<span class="hl sym">: [ #</span>blue <span class="hl sym">]</span> ifFalse<span class="hl sym">: [ #</span>red <span class="hl sym">] ].</span>
    color <span class="hl sym">== #</span>blue ifTrue<span class="hl sym">: [</span>
    newColor <span class="hl sym">:=</span> other <span class="hl sym">== #</span>red ifTrue<span class="hl sym">: [ #</span>yellow <span class="hl sym">]</span> ifFalse<span class="hl sym">: [ #</span>red <span class="hl sym">] ].</span>
    color <span class="hl sym">:=</span> newColor<span class="hl sym">.</span>
    waitingForPair signal
<span class="hl sym">! !</span>

<span class="hl sym">!</span>Chameleon methodsFor<span class="hl sym">:</span><span class="hl str">'running'</span><span class="hl sym">!</span>
fork<span class="hl sym">:</span> meetingPlace
    <span class="hl sym">^[</span> <span class="hl kwa">self</span> run<span class="hl sym">:</span> meetingPlace <span class="hl sym">]</span> fork
<span class="hl sym">!</span>

run<span class="hl sym">:</span> meetingPlace
    <span class="hl sym">[</span> color <span class="hl sym">== #</span>faded <span class="hl sym">]</span> whileFalse<span class="hl sym">: [</span>
        meetingPlace reachedBy<span class="hl sym">:</span> <span class="hl kwa">self</span><span class="hl sym">.</span>
        waitingForPair wait <span class="hl sym">]</span>
<span class="hl sym">! !</span>

<span class="hl sym">!</span>Chameleon methodsFor<span class="hl sym">:</span><span class="hl str">'accessing'</span><span class="hl sym">!</span>
color
    <span class="hl sym">^</span>color
<span class="hl sym">!</span>

meetings
    <span class="hl sym">^</span>meetings
<span class="hl sym">!</span>

wait
    semaphore wait
<span class="hl sym">! !</span>

<span class="hl com">&quot;* SPLITFILE=MeetingPlace.st *&quot;</span><span class="hl sym">!</span>

Object subclass<span class="hl sym">: #</span>MeetingPlace
   instanceVariableNames<span class="hl sym">:</span> <span class="hl str">'mutex first total max'</span>
   classVariableNames<span class="hl sym">:</span> <span class="hl str">''</span>
   poolDictionaries<span class="hl sym">:</span> <span class="hl str">''</span>
   category<span class="hl sym">:</span> <span class="hl str">'benchmarks-game'</span>
<span class="hl sym">!</span>

<span class="hl sym">!</span>MeetingPlace class methodsFor<span class="hl sym">:</span><span class="hl str">'instance creation'</span><span class="hl sym">!</span>
forMeetings<span class="hl sym">:</span> maxMeetings
    <span class="hl sym">^</span><span class="hl kwa">super</span> new
        initialize<span class="hl sym">;</span>
        max<span class="hl sym">:</span> maxMeetings<span class="hl sym">;</span>
        yourself
<span class="hl sym">! !</span>

<span class="hl sym">!</span>MeetingPlace methodsFor<span class="hl sym">:</span><span class="hl str">'initialize-release'</span><span class="hl sym">!</span>
initialize
    mutex <span class="hl sym">:=</span> Semaphore forMutualExclusion<span class="hl sym">.</span>
    total <span class="hl sym">:=</span> <span class="hl num">0</span>
<span class="hl sym">! !</span>

<span class="hl sym">!</span>MeetingPlace methodsFor<span class="hl sym">:</span><span class="hl str">'running'</span><span class="hl sym">!</span>
max<span class="hl sym">:</span> maxMeetings
    max <span class="hl sym">:=</span> maxMeetings
<span class="hl sym">!</span>

organizeMeetingWith<span class="hl sym">:</span> second
    total <span class="hl sym">&gt;=</span> max
        ifTrue<span class="hl sym">: [</span>
            first fade<span class="hl sym">.</span>
            second fade <span class="hl sym">]</span>
        ifFalse<span class="hl sym">: [</span>
            first met<span class="hl sym">:</span> second color<span class="hl sym">.</span>
            second met<span class="hl sym">:</span> first color <span class="hl sym">].</span>
    total <span class="hl sym">:=</span> total <span class="hl sym">+</span> <span class="hl num">1</span>
<span class="hl sym">!</span>

reachedBy<span class="hl sym">:</span> chameleon
    mutex critical<span class="hl sym">: [</span>
        first isNil
            ifTrue<span class="hl sym">: [</span> first <span class="hl sym">:=</span> chameleon <span class="hl sym">]</span>
            ifFalse<span class="hl sym">: [</span> <span class="hl kwa">self</span> organizeMeetingWith<span class="hl sym">:</span> chameleon<span class="hl sym">.</span> first <span class="hl sym">:=</span> <span class="hl kwa">nil</span> <span class="hl sym">] ]</span>
<span class="hl sym">! !</span>



