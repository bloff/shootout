<span class="slc">-- -*- mode: eiffel -*-</span>
<span class="slc">-- $Id: ackermann-se.code,v 1.18 2005-11-14 16:27:49 igouy-guest Exp $</span>
<span class="slc">-- http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">class</span> ACKERMANN

creation make

<span class="kwa">feature</span>

   make <span class="kwa">is</span>

      <span class="kwa">local</span>
	 num<span class="sym">:</span> <span class="kwb">INTEGER</span><span class="sym">;</span>
      <span class="kwa">do</span>
	 <span class="kwa">if</span> argument_count <span class="sym">=</span> <span class="num">1</span> <span class="kwa">then</span>
	    num <span class="sym">:=</span> <span class="kwd">argument</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.to_integer
	 <span class="kwa">else</span>
	    num <span class="sym">:=</span> <span class="num">1</span>
	 <span class="kwa">end</span>
         std_output.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;Ack(3,&quot;</span><span class="sym">)</span>
         std_output.<span class="kwd">put_integer</span><span class="sym">(</span>num<span class="sym">)</span>
         std_output.<span class="kwd">put_string</span><span class="sym">(</span><span class="str">&quot;): &quot;</span><span class="sym">)</span>
         std_output.<span class="kwd">put_integer</span><span class="sym">(</span><span class="kwd">ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> num<span class="sym">))</span>
         std_output.put_new_line
      <span class="kwa">end</span><span class="sym">;</span>

<span class="kwa">feature</span> <span class="sym">{</span>NONE<span class="sym">}</span>

   <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">:</span><span class="kwb">INTEGER</span><span class="sym">):</span><span class="kwb">INTEGER</span> <span class="kwa">is</span>
      <span class="kwa">do</span>
	 <span class="kwa">if</span> m <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span>
	    <span class="kwa">Result</span> <span class="sym">:=</span> n <span class="sym">+</span> <span class="num">1</span>
	 <span class="kwa">elseif</span> n <span class="sym">=</span> <span class="num">0</span> <span class="kwa">then</span>
	    <span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span>
	 <span class="kwa">else</span>
	    <span class="kwa">Result</span> <span class="sym">:=</span> <span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">, (</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">)))</span>
	 <span class="kwa">end</span>
      <span class="kwa">end</span><span class="sym">;</span>
<span class="kwa">end</span>
