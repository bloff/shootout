<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Xavier Oswald</span>
<span class="hl com">*/</span>

<span class="hl slc">// SPLITFILE=fasta.li</span>
Section Header

  <span class="hl sym">+</span> name <span class="hl sym">:=</span> FASTA<span class="hl sym">;</span>

Section Inherit

  <span class="hl sym">-</span> parent_any<span class="hl sym">:</span>OBJECT <span class="hl sym">:=</span> OBJECT<span class="hl sym">;</span>

Section Private

  <span class="hl sym">-</span> im           <span class="hl sym">:</span>INTEGER <span class="hl sym">:=</span> <span class="hl num">139968</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> ia           <span class="hl sym">:</span>INTEGER <span class="hl sym">:=</span> <span class="hl num">3877</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> ic           <span class="hl sym">:</span>INTEGER <span class="hl sym">:=</span> <span class="hl num">29573</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> last         <span class="hl sym">:</span>INTEGER <span class="hl sym">:=</span> <span class="hl num">42</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> line_length  <span class="hl sym">:</span>INTEGER <span class="hl sym">:=</span> <span class="hl num">60</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> buffer_size  <span class="hl sym">:</span>INTEGER <span class="hl sym">:=</span> <span class="hl num">1024</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> index        <span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>

  <span class="hl sym">-</span> iub          <span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>FREQUENCY<span class="hl sym">];</span>

  <span class="hl sym">-</span> homo_sapiens <span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>FREQUENCY<span class="hl sym">];</span>

  <span class="hl sym">-</span> alu <span class="hl sym">:</span>STRING_CONSTANT <span class="hl sym">:=</span>
            <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\</span>
<span class="hl str">            \GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\</span>
<span class="hl str">            \CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\</span>
<span class="hl str">            \ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\</span>
<span class="hl str">            \GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\</span>
<span class="hl str">            \AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\</span>
<span class="hl str">            \AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl sym">;</span>

  <span class="hl sym">-</span> alub    <span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>CHARACTER<span class="hl sym">] :=</span> FAST_ARRAY<span class="hl sym">[</span>CHARACTER<span class="hl sym">]</span>.create <span class="hl sym">(</span>alu.count<span class="hl sym">);</span>

  <span class="hl sym">-</span> bbuffer <span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>CHARACTER<span class="hl sym">] :=</span> FAST_ARRAY<span class="hl sym">[</span>CHARACTER<span class="hl sym">]</span>.create buffer_size<span class="hl sym">;</span>

  <span class="hl sym">-</span> rand <span class="hl sym">(</span>max<span class="hl sym">:</span>REAL_64<span class="hl sym">) :</span>REAL_64 <span class="hl sym">&lt;-</span>
  <span class="hl sym">(</span>
    last <span class="hl sym">:= (</span>last <span class="hl sym">*</span> ia <span class="hl sym">+</span> ic<span class="hl sym">)</span> % im<span class="hl sym">;</span>
    max <span class="hl sym">*</span> last <span class="hl sym">/</span> im
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> create_iub <span class="hl sym">&lt;-</span>
  <span class="hl sym">(</span>
    iub <span class="hl sym">:=</span> FAST_ARRAY<span class="hl sym">[</span>FREQUENCY<span class="hl sym">]</span>.create_with_capacity <span class="hl num">15</span><span class="hl sym">;</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'a'</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'c'</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'g'</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'t'</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'B'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'D'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'H'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'K'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'M'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'N'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'R'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'S'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'V'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'W'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
    iub.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'Y'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">));</span>
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> create_homo_sapiens <span class="hl sym">&lt;-</span>
  <span class="hl sym">(</span>
    homo_sapiens <span class="hl sym">:=</span> FAST_ARRAY<span class="hl sym">[</span>FREQUENCY<span class="hl sym">]</span>.create_with_capacity <span class="hl num">4</span><span class="hl sym">;</span>
    homo_sapiens.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'a'</span><span class="hl sym">,</span> <span class="hl num">0.3029549426680</span><span class="hl sym">));</span>
    homo_sapiens.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'c'</span><span class="hl sym">,</span> <span class="hl num">0.1979883004921</span><span class="hl sym">));</span>
    homo_sapiens.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'g'</span><span class="hl sym">,</span> <span class="hl num">0.1975473066391</span><span class="hl sym">));</span>
    homo_sapiens.add_last<span class="hl sym">(</span>FREQUENCY.create<span class="hl sym">(</span><span class="hl str">'t'</span><span class="hl sym">,</span> <span class="hl num">0.3015094502008</span><span class="hl sym">));</span>
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> make_cumulative <span class="hl sym">(</span>a<span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>FREQUENCY<span class="hl sym">]) &lt;-</span>
  <span class="hl sym">( +</span> cp <span class="hl sym">:</span>REAL_64<span class="hl sym">;</span>
    <span class="hl num">0</span>.to <span class="hl sym">(</span>a.upper<span class="hl sym">)</span> do <span class="hl sym">{</span> i<span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>
      cp <span class="hl sym">:=</span> cp <span class="hl sym">+ (</span>a.item i<span class="hl sym">)</span>.p<span class="hl sym">;</span>
      <span class="hl sym">(</span>a.item i<span class="hl sym">)</span>.put_p cp<span class="hl sym">;</span>
    <span class="hl sym">};</span>
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> select_random a<span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>FREQUENCY<span class="hl sym">] :</span>CHARACTER <span class="hl sym">&lt;-</span>
  <span class="hl sym">( +</span> return_char <span class="hl sym">:</span>CHARACTER<span class="hl sym">;</span>
    <span class="hl sym">+</span> random <span class="hl sym">:</span>REAL_64<span class="hl sym">;</span>
    <span class="hl sym">+</span> i<span class="hl sym">,</span>up<span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>

    up <span class="hl sym">:=</span> a.upper<span class="hl sym">;</span>
    random <span class="hl sym">:=</span> rand <span class="hl sym">(</span><span class="hl num">1.0</span><span class="hl sym">);</span>

    i <span class="hl sym">:=</span> a.lower<span class="hl sym">;</span>
    <span class="hl sym">{(</span>i <span class="hl sym">&lt;=</span> up<span class="hl sym">) &amp;&amp; {</span>random <span class="hl sym">&gt;=</span> a.item i.p<span class="hl sym">}}</span>.while_do <span class="hl sym">{</span>
      i <span class="hl sym">:=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">};</span>
    <span class="hl sym">(</span>i <span class="hl sym">&lt;=</span> up<span class="hl sym">)</span>.if <span class="hl sym">{</span>
      return_char <span class="hl sym">:=</span> a.item i.c<span class="hl sym">;</span>
    <span class="hl sym">}</span> else <span class="hl sym">{</span>
      return_char <span class="hl sym">:=</span> a.last.c<span class="hl sym">;</span>
    <span class="hl sym">};</span>

    return_char
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> puts tab<span class="hl sym">:</span>NATIVE_ARRAY<span class="hl sym">[</span>CHARACTER<span class="hl sym">] &lt;-</span> `puts<span class="hl sym">(</span>&#64;tab<span class="hl sym">)</span>`<span class="hl sym">;</span>

  <span class="hl sym">-</span> pick<span class="hl sym">:</span>NATIVE_ARRAY<span class="hl sym">[</span>CHARACTER<span class="hl sym">] :=</span> NATIVE_ARRAY<span class="hl sym">[</span>CHARACTER<span class="hl sym">]</span>.create <span class="hl sym">(</span>line_length <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">);</span>

  <span class="hl sym">-</span> make_random_fasta<span class="hl sym">(</span>id<span class="hl sym">,</span> desc<span class="hl sym">:</span>STRING_CONSTANT<span class="hl sym">,</span> a <span class="hl sym">:</span>FAST_ARRAY<span class="hl sym">[</span>FREQUENCY<span class="hl sym">],</span> n<span class="hl sym">:</span>INTEGER<span class="hl sym">) &lt;-</span>
  <span class="hl sym">( +</span> m <span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>
    <span class="hl sym">+</span> n_temp <span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>

    index  <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
    n_temp <span class="hl sym">:=</span> n<span class="hl sym">;</span>

    <span class="hl str">'&gt;'</span>.print<span class="hl sym">;</span>
    id.print<span class="hl sym">;</span>
    <span class="hl str">' '</span>.print<span class="hl sym">;</span>
    desc.print<span class="hl sym">;</span>
    <span class="hl str">'\n'</span>.print<span class="hl sym">;</span>

    <span class="hl sym">{</span>n_temp <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">}</span>.while_do <span class="hl sym">{</span>
      m <span class="hl sym">:=</span> n_temp.min line_length<span class="hl sym">;</span>
      <span class="hl num">0</span>.to <span class="hl sym">(</span>m<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> do <span class="hl sym">{</span> i<span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>
        pick.put <span class="hl sym">(</span>select_random a<span class="hl sym">)</span> to i<span class="hl sym">;</span>
      <span class="hl sym">};</span>
      pick.put <span class="hl str">'\0'</span> to m<span class="hl sym">;</span>
      puts pick<span class="hl sym">;</span>
      n_temp <span class="hl sym">:=</span> n_temp <span class="hl sym">-</span> line_length<span class="hl sym">;</span>
    <span class="hl sym">};</span>
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> make_repeat_fasta<span class="hl sym">(</span>id<span class="hl sym">,</span> desc<span class="hl sym">:</span>STRING_CONSTANT<span class="hl sym">,</span> alu<span class="hl sym">:</span>STRING_CONSTANT<span class="hl sym">,</span> n<span class="hl sym">:</span>INTEGER <span class="hl sym">) &lt;-</span>
  <span class="hl sym">( +</span> k<span class="hl sym">,</span> kn<span class="hl sym">,</span>j<span class="hl sym">,</span>i<span class="hl sym">,</span>idx <span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>

    <span class="hl str">'&gt;'</span>.print<span class="hl sym">;</span>
    id.print<span class="hl sym">;</span>
    <span class="hl str">' '</span>.print<span class="hl sym">;</span>
    desc.print<span class="hl sym">;</span>
    <span class="hl str">'\n'</span>.print<span class="hl sym">;</span>

    kn <span class="hl sym">:=</span> alu.count<span class="hl sym">;</span>
    k <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">;</span>
    i <span class="hl sym">:=</span> n<span class="hl sym">;</span>
    <span class="hl sym">{</span>i <span class="hl sym">&gt;=</span> <span class="hl num">1</span><span class="hl sym">}</span>.while_do <span class="hl sym">{</span>
      j <span class="hl sym">:=</span> i.min line_length<span class="hl sym">;</span>
      idx <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl sym">{</span>j <span class="hl sym">&gt;=</span> <span class="hl num">1</span><span class="hl sym">}</span>.while_do <span class="hl sym">{</span>
        <span class="hl sym">(</span>k <span class="hl sym">&gt;</span> kn<span class="hl sym">)</span>.if <span class="hl sym">{</span>
           k <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">;</span>
        <span class="hl sym">};</span>
        pick.put <span class="hl sym">(</span>alu.item k<span class="hl sym">)</span> to idx<span class="hl sym">;</span>
        k <span class="hl sym">:=</span> k <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
        j <span class="hl sym">:=</span> j <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
        idx <span class="hl sym">:=</span> idx <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl sym">};</span>
      pick.put <span class="hl str">'\0'</span> to idx<span class="hl sym">;</span>
      puts pick<span class="hl sym">;</span>
      i <span class="hl sym">:=</span> i <span class="hl sym">-</span> line_length<span class="hl sym">;</span>
    <span class="hl sym">};</span>
  <span class="hl sym">);</span>

Section Public

  <span class="hl sym">-</span> main <span class="hl sym">&lt;-</span>
  <span class="hl sym">( +</span> n <span class="hl sym">:</span>INTEGER<span class="hl sym">;</span>

    n <span class="hl sym">:=</span> COMMAND_LINE.item <span class="hl num">1</span>.to_integer<span class="hl sym">;</span>

    create_iub<span class="hl sym">;</span>
    create_homo_sapiens<span class="hl sym">;</span>
    make_cumulative iub<span class="hl sym">;</span>
    make_cumulative<span class="hl sym">(</span>homo_sapiens<span class="hl sym">);</span>

    make_repeat_fasta<span class="hl sym">(</span><span class="hl str">&quot;ONE&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span><span class="hl sym">,</span> alu<span class="hl sym">,</span> n <span class="hl sym">*</span> <span class="hl num">2</span><span class="hl sym">);</span>
    make_random_fasta<span class="hl sym">(</span><span class="hl str">&quot;TWO&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span><span class="hl sym">,</span> iub<span class="hl sym">,</span> n <span class="hl sym">*</span> <span class="hl num">3</span><span class="hl sym">);</span>
    make_random_fasta<span class="hl sym">(</span><span class="hl str">&quot;THREE&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span><span class="hl sym">,</span> homo_sapiens<span class="hl sym">,</span> n <span class="hl sym">*</span> <span class="hl num">5</span><span class="hl sym">);</span>
  <span class="hl sym">);</span>
<span class="hl slc">// class FASTA</span>

<span class="hl slc">// SPLITFILE=frequency.li</span>
Section Header

  <span class="hl sym">+</span> name <span class="hl sym">:=</span> FREQUENCY<span class="hl sym">;</span>

Section Inherit

  <span class="hl sym">-</span> parent_any<span class="hl sym">:</span>OBJECT <span class="hl sym">:=</span> OBJECT<span class="hl sym">;</span>

Section Public

  <span class="hl sym">+</span> c <span class="hl sym">:</span>CHARACTER<span class="hl sym">;</span>

  <span class="hl sym">+</span> p <span class="hl sym">:</span>REAL_64<span class="hl sym">;</span>

  <span class="hl sym">-</span> create <span class="hl sym">(</span>p_c<span class="hl sym">:</span>CHARACTER<span class="hl sym">,</span> p_p<span class="hl sym">:</span>REAL_64<span class="hl sym">) :</span>SELF <span class="hl sym">&lt;-</span>
  <span class="hl sym">( +</span> result <span class="hl sym">:</span>SELF<span class="hl sym">;</span>

    result <span class="hl sym">:=</span> clone<span class="hl sym">;</span>
    result.make<span class="hl sym">(</span>p_c<span class="hl sym">,</span>p_p<span class="hl sym">);</span>
    result
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> make <span class="hl sym">(</span>p_c<span class="hl sym">:</span>CHARACTER<span class="hl sym">,</span> p_p<span class="hl sym">:</span>REAL_64<span class="hl sym">) &lt;-</span>
  <span class="hl sym">(</span>
    c <span class="hl sym">:=</span> p_c<span class="hl sym">;</span>
    p <span class="hl sym">:=</span> p_p<span class="hl sym">;</span>
  <span class="hl sym">);</span>

  <span class="hl sym">-</span> put_p r<span class="hl sym">:</span>REAL_64  <span class="hl sym">&lt;-</span>
  <span class="hl sym">(</span>
    p <span class="hl sym">:=</span> r<span class="hl sym">;</span>
  <span class="hl sym">);</span>
<span class="hl slc">// class FREQUENCY</span>
