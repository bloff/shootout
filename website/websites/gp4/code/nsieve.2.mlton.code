<span class="hl com">(*</span>
<span class="hl com"> * The Computer Language Shootout</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> * Contributed by sweeks&#64;sweeks.com.</span>
<span class="hl com"> * Shortened by Vesa Karvonen.</span>
<span class="hl com"> *)</span>

<span class="hl kwa">fun</span> lsl <span class="hl sym">(</span>i<span class="hl sym">,</span> j<span class="hl sym">) =</span> <span class="hl kwa">Word</span>.toInt <span class="hl sym">(</span><span class="hl kwa">Word</span>.<span class="hl sym">&lt;&lt; (</span><span class="hl kwa">Word</span>.fromInt i<span class="hl sym">,</span> <span class="hl kwa">Word</span>.fromInt j<span class="hl sym">))</span>
<span class="hl kwa">val</span> i2s <span class="hl sym">=</span> <span class="hl kwa">StringCvt</span>.padLeft #<span class="hl str">&quot; &quot;</span> <span class="hl num">8</span> <span class="hl kwa">o Int</span>.toString
<span class="hl kwa">fun</span> nsieve m <span class="hl sym">=</span>
    <span class="hl kwa">let val</span> s <span class="hl sym">=</span> Array.array <span class="hl sym">(</span>m <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwa">true</span><span class="hl sym">)</span>
        <span class="hl kwa">fun</span> step <span class="hl sym">(</span>i<span class="hl sym">,</span> cnt<span class="hl sym">) =</span>
            <span class="hl kwa">let fun</span> whack j <span class="hl sym">=</span> <span class="hl kwa">if</span> m <span class="hl sym">&lt;</span> j <span class="hl kwa">then</span> <span class="hl sym">()</span>
                              <span class="hl kwa">else</span> <span class="hl sym">(</span>Array.update <span class="hl sym">(</span>s<span class="hl sym">,</span> j<span class="hl sym">,</span> <span class="hl kwa">false</span><span class="hl sym">) ;</span> whack <span class="hl sym">(</span>j <span class="hl sym">+</span> i<span class="hl sym">))</span>
            <span class="hl kwa">in if</span> m <span class="hl sym">&lt;</span> i <span class="hl kwa">then</span> cnt
               <span class="hl kwa">else</span> step <span class="hl sym">(</span>i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwa">if</span> not <span class="hl sym">(</span>Array.sub <span class="hl sym">(</span>s<span class="hl sym">,</span> i<span class="hl sym">))</span> <span class="hl kwa">then</span> cnt
                                 <span class="hl kwa">else</span> <span class="hl sym">(</span>whack <span class="hl sym">(</span>lsl <span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)) ;</span> cnt <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">))</span> <span class="hl kwa">end</span>
    <span class="hl kwa">in</span> app print <span class="hl sym">[</span><span class="hl str">&quot;Primes up to &quot;</span><span class="hl sym">,</span> i2s m<span class="hl sym">,</span> <span class="hl str">&quot; &quot;</span><span class="hl sym">,</span> i2s <span class="hl sym">(</span>step <span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)),</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">]</span> <span class="hl kwa">end</span>
<span class="hl kwa">val</span> n <span class="hl sym">=</span> valOf <span class="hl sym">(</span><span class="hl kwa">Int</span>.fromString <span class="hl sym">(</span>hd <span class="hl sym">(</span>CommandLine.arguments <span class="hl sym">())))</span>
<span class="hl kwa">val</span> _ <span class="hl sym">= (</span>nsieve <span class="hl sym">(</span>lsl <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> n<span class="hl sym">) *</span> <span class="hl num">10000</span><span class="hl sym">)</span>
       <span class="hl sym">;</span> nsieve <span class="hl sym">(</span>lsl <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) *</span> <span class="hl num">10000</span><span class="hl sym">)</span>
       <span class="hl sym">;</span> nsieve <span class="hl sym">(</span>lsl <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> n <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) *</span> <span class="hl num">10000</span><span class="hl sym">))</span>
