<span class="com">&quot;  The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Paolo Bonzini</span>
<span class="com">&quot;</span>
<span class="com"></span>
<span class="com">| width height m bits s zr zi cr ci i tr stepr stepi |</span>
<span class="com">width := Smalltalk arguments first asInteger.</span>
<span class="com">height := width.</span>
<span class="com">m := 50.</span>
<span class="com">s := FileStream stdout bufferSize: 4096.</span>
<span class="com">s nextPutAll: 'P4'; nl; nextPutAll: width printString, ' ', height</span>
<span class="com">printString; nl.</span>
<span class="com"></span>
<span class="com">stepr := 2.0 / width.</span>
<span class="com">stepi := 2.0 / height.</span>
<span class="com"></span>
<span class="com">0 to: height - 1 do: [ :y |</span>
<span class="com">    bits := 0.</span>
<span class="com">    ci := stepi * y asFloat - 1.0.</span>
<span class="com">    0 to: width - 1 do: [ :x |</span>
<span class="com">        cr := stepr * x asFloat - 1.5.</span>
<span class="com">        zr := cr. zi := ci.</span>
<span class="com"></span>
<span class="com">        bits := bits bitShift: 1.</span>
<span class="com">        i := 1.</span>
<span class="com">        [</span>
<span class="com">            tr := (zr*zr) - (zi*zi) + cr.</span>
<span class="com">            zi := 2.0 * zr * zi + ci.</span>
<span class="com">            zr := tr.</span>
<span class="com">            (zr*zr) + (zi*zi) &lt; 4.0 and: [ (i := i + 1) &lt; m ]</span>
<span class="com">        ] whileTrue.</span>
<span class="com"></span>
<span class="com">        i = m ifTrue: [ bits := bits + 1 ].</span>
<span class="com">        (x bitAnd: 7) == 7 ifTrue: [</span>
<span class="com">            s nextPutByte: bits.</span>
<span class="com">            bits := 0.</span>
<span class="com">        ]</span>
<span class="com">    ].</span>
<span class="com">    (width bitAnd: 7) == 0 ifFalse: [</span>
<span class="com">        bits := bits bitShift: 8 - (width bitAnd: 7).</span>
<span class="com">        s nextPutByte: bits.</span>
<span class="com">    ]</span>
<span class="com">] !</span>
