<span class="slc">// The Great Computer Language Shootout</span>
<span class="slc">// http://shootout.alioth.debian.org/</span>
<span class="slc">//</span>
<span class="slc">// contributed by Diederik van Arkel</span>

<span class="kwa">module</span> fasta

<span class="kwa">import</span> StdEnv<span class="sym">,</span> LanguageShootout<span class="sym">,</span> StdStrictLists<span class="sym">,</span> StdOverloadedList

Start world
	<span class="sym">#</span> n				<span class="sym">=</span> argi
	<span class="sym"># (</span>io<span class="sym">,</span>world<span class="sym">)	=</span> stdio world
	<span class="sym">#</span> rng			<span class="sym">=</span> makeRandomGenerator <span class="num">42</span>
	<span class="sym">#</span> io			<span class="sym">=</span> makeRepeatFasta <span class="str">&quot;ONE&quot;</span> <span class="str">&quot;Homo sapiens alu&quot;</span> <span class="sym">(</span>n<span class="sym">*</span><span class="num">2</span><span class="sym">)</span> io
	<span class="sym"># (</span>rng<span class="sym">,</span>io<span class="sym">)		=</span> makeRandomFasta <span class="str">&quot;TWO&quot;</span> <span class="str">&quot;IUB ambiguity codes&quot;</span> iub <span class="sym">(</span>n<span class="sym">*</span><span class="num">3</span><span class="sym">)</span> rng io
	<span class="sym"># (</span>rng<span class="sym">,</span>io<span class="sym">)		=</span> makeRandomFasta <span class="str">&quot;THREE&quot;</span> <span class="str">&quot;Homo sapiens frequency&quot;</span> homosapiens <span class="sym">(</span>n<span class="sym">*</span><span class="num">5</span><span class="sym">)</span> rng io
	<span class="sym"># (</span>err<span class="sym">,</span>world<span class="sym">)	=</span> fclose io world
	<span class="sym">=</span> world

alu <span class="sym">=:</span>
	<span class="str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> <span class="sym">+++.</span>
	<span class="str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> <span class="sym">+++.</span>
	<span class="str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> <span class="sym">+++.</span>
	<span class="str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> <span class="sym">+++.</span>
	<span class="str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> <span class="sym">+++.</span>
	<span class="str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> <span class="sym">+++.</span>
	<span class="str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

<span class="sym">::</span> IUB <span class="sym">=</span>
	<span class="sym">{</span> c		<span class="sym">:: !</span><span class="kwb">Char</span>
	<span class="sym">,</span> p		<span class="sym">:: !</span><span class="kwb">Real</span>
	<span class="sym">}</span>

<span class="sym">::</span> Table	<span class="sym">:== {!</span>IUB<span class="sym">}</span>

makeCumulative <span class="sym">:: !*</span>Table <span class="sym">-&gt; .</span>Table
makeCumulative table
	<span class="sym">#!</span> maxi	<span class="sym">=</span> size table
	<span class="sym">=</span> update_c <span class="num">0.0 0</span> maxi table
<span class="kwa">where</span>
	update_c prob i maxi table
		<span class="sym">|</span> i &gt;<span class="sym">=</span> maxi
			<span class="sym">=</span> table
		<span class="sym">#!</span> tbl		<span class="sym">=</span> table<span class="sym">.[</span>i<span class="sym">]</span>
		<span class="sym">#!</span> prob		<span class="sym">=</span> prob <span class="sym">+</span> tbl<span class="sym">.</span>p
		<span class="sym">#!</span> table	<span class="sym">= {</span>table <span class="sym">&amp; [</span>i<span class="sym">] = {</span>tbl <span class="sym">&amp;</span> p <span class="sym">=</span> prob<span class="sym">}}</span>
		<span class="sym">=</span> update_c prob <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> maxi table

iub <span class="sym">=</span>
	<span class="sym">{{</span> c <span class="sym">=</span> 'a'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.27</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'c'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.12</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'g'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.12</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 't'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.27</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'B'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'D'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'H'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'K'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'M'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'N'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'R'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'S'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'V'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'W'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'Y'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.02</span> <span class="sym">}</span>
	<span class="sym">}</span>

homosapiens <span class="sym">=</span>
	<span class="sym">{{</span> c <span class="sym">=</span> 'a'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.3029549426680</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'c'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.1979883004921</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 'g'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.1975473066391</span> <span class="sym">}</span>
	<span class="sym">,{</span> c <span class="sym">=</span> 't'<span class="sym">,</span> p <span class="sym">=</span> <span class="num">0.3015094502008</span> <span class="sym">}</span>
	<span class="sym">}</span>

makeRepeatFasta <span class="sym">:: !</span>String <span class="sym">!</span>String <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!*</span><span class="kwb">File</span> <span class="sym">-&gt; *</span><span class="kwb">File</span>
makeRepeatFasta id desc n io
	<span class="sym">#</span> io	<span class="sym">=</span> io &lt;&lt;&lt; <span class="str">&quot;&gt;&quot;</span> &lt;&lt;&lt; id &lt;&lt;&lt; <span class="str">&quot; &quot;</span> &lt;&lt;&lt; desc &lt;&lt;&lt; <span class="str">&quot;\n&quot;</span>
	<span class="sym">=</span> repeat n <span class="num">0</span> io
<span class="kwa">where</span>
	length	<span class="sym">=</span> <span class="num">60</span>
	kn		<span class="sym">=</span> size alu

	repeat <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!*</span><span class="kwb">File</span> <span class="sym">-&gt; *</span><span class="kwb">File</span>
	repeat todo k io
		<span class="sym">|</span> todo &lt;<span class="sym">=</span> <span class="num">0</span>
			<span class="sym">=</span> io
		<span class="sym">#</span> m			<span class="sym">=</span> min todo length
		<span class="sym"># (</span>k<span class="sym">,</span>io<span class="sym">)	=</span> write <span class="num">0</span> k m io
		<span class="sym">=</span> repeat <span class="sym">(</span>todo <span class="sym">-</span> length<span class="sym">)</span> k io

	write <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!*</span><span class="kwb">File</span> <span class="sym">-&gt; (!</span><span class="kwb">Int</span><span class="sym">,!*</span><span class="kwb">File</span><span class="sym">)</span>
	write j k m io
		<span class="sym">|</span> j &gt;<span class="sym">=</span> m
			<span class="sym">= (</span>k<span class="sym">,</span>io &lt;&lt;&lt; <span class="str">&quot;\n&quot;</span><span class="sym">)</span>
		<span class="sym">|</span> k &gt;<span class="sym">=</span> kn
			<span class="sym">=</span> write j <span class="num">0</span> m io
		<span class="sym">#</span> io	<span class="sym">=</span> io &lt;&lt;&lt; alu<span class="sym">.[</span>k<span class="sym">]</span>
		<span class="sym">=</span> write <span class="sym">(</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">) (</span>k<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> m io

makeRandomFasta <span class="sym">:: !</span>String <span class="sym">!</span>String <span class="sym">!*</span>Table <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span>RNG <span class="sym">!*</span><span class="kwb">File</span> <span class="sym">-&gt; (!</span>RNG<span class="sym">,!*</span><span class="kwb">File</span><span class="sym">)</span>
makeRandomFasta id desc table n rng io
	<span class="sym">#</span> io	<span class="sym">=</span> io &lt;&lt;&lt; <span class="str">&quot;&gt;&quot;</span> &lt;&lt;&lt; id &lt;&lt;&lt; <span class="str">&quot; &quot;</span> &lt;&lt;&lt; desc &lt;&lt;&lt; <span class="str">&quot;\n&quot;</span>
	<span class="sym">#</span> table	<span class="sym">=</span> makeCumulative table
	<span class="sym">=</span> repeat n table rng io
<span class="kwa">where</span>
	length	<span class="sym">=</span> <span class="num">60</span>

	repeat <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span>Table <span class="sym">!</span>RNG <span class="sym">!*</span><span class="kwb">File</span> <span class="sym">-&gt; (!</span>RNG<span class="sym">,!*</span><span class="kwb">File</span><span class="sym">)</span>
	repeat todo table rng io
		<span class="sym">|</span> todo &lt;<span class="sym">=</span> <span class="num">0</span>
			<span class="sym">= (</span>rng<span class="sym">,</span>io<span class="sym">)</span>
		<span class="sym">#</span> m					<span class="sym">=</span> min todo length
		<span class="sym"># (</span>rng<span class="sym">,</span>s<span class="sym">)			=</span> write <span class="num">0</span> m rng <span class="sym">[!!]</span>
		<span class="sym">#</span> io				<span class="sym">=</span> io &lt;&lt;&lt; s
		<span class="sym">=</span> repeat <span class="sym">(</span>todo <span class="sym">-</span> length<span class="sym">)</span> table rng io
	<span class="kwa">where</span>
		write <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!</span>RNG <span class="sym">![!</span><span class="kwb">Char</span><span class="sym">!] -&gt; (!</span>RNG<span class="sym">,!</span>String<span class="sym">)</span>
		write j m rng s
			<span class="sym">|</span> j &gt;<span class="sym">=</span> m
				<span class="sym">= (</span>rng<span class="sym">,</span>revlist2string <span class="sym">[!</span>'\n'<span class="sym">:</span>s<span class="sym">!])</span>
			<span class="sym"># (</span>rval<span class="sym">,</span>rng<span class="sym">)	=</span> genRandom <span class="num">1.0</span> rng
			<span class="sym">#</span> c				<span class="sym">=</span> find <span class="num">0</span> rval
			<span class="sym">=</span> write <span class="sym">(</span>j<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> m rng <span class="sym">[!</span>c<span class="sym">:</span>s<span class="sym">!]</span>

		find <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Real</span> <span class="sym">-&gt;</span> <span class="kwb">Char</span>
		find k rval
			<span class="sym">#</span> iub	<span class="sym">=</span> table<span class="sym">.[</span>k<span class="sym">]</span>
			<span class="sym">|</span> iub<span class="sym">.</span>p &lt; rval
				<span class="sym">=</span> find <span class="sym">(</span>k<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> rval
			<span class="sym">=</span> iub<span class="sym">.</span>c

toArray <span class="sym">:: ![!</span><span class="kwb">Char</span><span class="sym">!] -&gt;</span> String
toArray l
	<span class="sym">= {</span>c <span class="sym">\\</span> c &lt;<span class="sym">|-</span> l<span class="sym">}</span>

revlist2string <span class="sym">:: ![!</span><span class="kwb">Char</span><span class="sym">!] -&gt; .</span>String
revlist2string l
	<span class="sym">#</span> s	<span class="sym">=</span> length l
	<span class="sym">#</span> a <span class="sym">=</span> createArray s '&#64;'
	<span class="sym">=</span> fillArray <span class="sym">(</span>s<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> l a
<span class="kwa">where</span>
	fillArray <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">![!</span><span class="kwb">Char</span><span class="sym">!] !*</span>String <span class="sym">-&gt; .</span>String
	fillArray i <span class="sym">[!!]</span> a
		<span class="sym">=</span> a
	fillArray i <span class="sym">[!</span>c<span class="sym">:</span>l<span class="sym">!]</span> a
		<span class="sym">=</span> fillArray <span class="sym">(</span>i<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> l <span class="sym">{</span>a <span class="sym">&amp; [</span>i<span class="sym">] =</span> c<span class="sym">}</span>

<span class="slc">// adapted from 'random' shootout</span>

<span class="sym">::</span> RNG	<span class="sym">:==</span> <span class="kwb">Int</span>

makeRandomGenerator <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">-&gt;</span> RNG
makeRandomGenerator seed
	<span class="sym">=</span> seed

genRandom <span class="sym">:: !</span><span class="kwb">Real</span> <span class="sym">!</span>RNG <span class="sym">-&gt; (!</span><span class="kwb">Real</span><span class="sym">,!</span>RNG<span class="sym">)</span>
genRandom max seed
	<span class="sym">= (</span>newran<span class="sym">,</span>newseed<span class="sym">)</span>
<span class="kwa">where</span>
	newseed <span class="sym">= (</span>seed <span class="sym">*</span> ia <span class="sym">+</span> ic<span class="sym">)</span> rem im
	newran <span class="sym">=</span>  max <span class="sym">*</span> toReal newseed <span class="sym">/</span> imd

im <span class="sym">:==</span> <span class="num">139968</span>
ia <span class="sym">:==</span> <span class="num">3877</span>
ic <span class="sym">:==</span> <span class="num">29573</span>
imd <span class="sym">:==</span> toReal im
