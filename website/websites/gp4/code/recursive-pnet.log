BUILD COMMANDS FOR: recursive.pnet

Mon Apr 30 21:45:48 PDT 2007

cp /home/dunham/gp4/shootout/bench/recursive/recursive.pnet recursive.cs
rm -f recursive.pnet_run
/usr/bin/cscc  /out:recursive.pnet_run recursive.cs
rm recursive.cs

=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/ilrun recursive.pnet_run %A
Uncaught exception: System.StackOverflowException: The requested operation caused a stack overflow
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)
	at recursive.Ack(Int32, Int32)

TEST FAILED - Child processed exited with error code (1)


PROGRAM OUTPUT
==============
