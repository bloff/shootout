<span class="com">&quot;  The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy&quot;!</span>
<span class="com"></span>
<span class="com">!Shootout.Tests class methodsFor: 'benchmarking'!</span>
<span class="com"></span>
<span class="com">nsieve</span>
<span class="com">   | n |</span>
<span class="com">   n := CEnvironment argv first asNumber.</span>
<span class="com">   (n &lt; 2) ifTrue: [n := 2].</span>
<span class="com">    n      primes.</span>
<span class="com">   (n - 1) primes.</span>
<span class="com">   (n - 2) primes.</span>
<span class="com">   ^'' ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!Core.SmallInteger methodsFor: 'computer language shootout'!</span>
<span class="com"></span>
<span class="com">nsieve</span>
<span class="com">   | count isPrime |</span>
<span class="com">   count := 0.</span>
<span class="com">   isPrime := Array new: self withAll: true.</span>
<span class="com"></span>
<span class="com">   2 to: self do: [:i|</span>
<span class="com">      (isPrime at: i) ifTrue: [</span>
<span class="com">         i+i to: self by: i do: [:k| isPrime at: k put: false].</span>
<span class="com">         count := count + 1.</span>
<span class="com">         ].</span>
<span class="com">      ].</span>
<span class="com"></span>
<span class="com">   ^count ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!Core.SmallInteger methodsFor: 'computer language shootout'!</span>
<span class="com"></span>
<span class="com">primes</span>
<span class="com">   | m |</span>
<span class="com">   m := (2 raisedTo: self) * 10000.</span>
<span class="com">   OS.Stdout</span>
<span class="com">      nextPutAll: 'Primes up to '; nextPutAll: (m asPaddedString: 8);</span>
<span class="com">      nextPutAll: ((m nsieve) asPaddedString: 9); cr ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!Core.Integer methodsFor: 'computer language shootout'!</span>
<span class="com"></span>
<span class="com">asPaddedString: aWidth</span>
<span class="com">   | s |</span>
<span class="com">   s := WriteStream on: (String new: 10).</span>
<span class="com">   self printOn: s paddedWith: $  to: aWidth base: 10.</span>
<span class="com">   ^s contents ! !</span>
