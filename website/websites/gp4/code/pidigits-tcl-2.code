<span class="hl slc">## The Computer Lannguage Shootout</span>
<span class="hl slc">## http://shootout.alioth.debian.org/</span>
<span class="hl slc">## contributed by Hemang Lavana</span>
<span class="hl slc">## modified on advice from Mark Janssen</span>

<span class="hl kwa">proc</span> compose <span class="hl sym">{</span>aQRST bQRST<span class="hl sym">} {</span>
    <span class="hl kwa">foreach</span> <span class="hl sym">{</span>aQ aR aS aT<span class="hl sym">}</span> <span class="hl kwb">$aQRST</span> <span class="hl kwa">break</span>
    <span class="hl kwa">foreach</span> <span class="hl sym">{</span>bQ bR bS bT<span class="hl sym">}</span> <span class="hl kwb">$bQRST</span> <span class="hl kwa">break</span>
    <span class="hl kwa">set</span> rQ <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$aQ</span> <span class="hl sym">*</span> <span class="hl kwb">$bQ</span><span class="hl sym">}]</span>
    <span class="hl kwa">set</span> rR <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$aQ</span> <span class="hl sym">*</span> <span class="hl kwb">$bR</span> <span class="hl sym">+</span> <span class="hl kwb">$aR</span> <span class="hl sym">*</span> <span class="hl kwb">$bT</span><span class="hl sym">}]</span>
    <span class="hl kwa">set</span> rS <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$aS</span> <span class="hl sym">*</span> <span class="hl kwb">$bQ</span> <span class="hl sym">+</span> <span class="hl kwb">$aT</span> <span class="hl sym">*</span> <span class="hl kwb">$bS</span><span class="hl sym">}]</span>
    <span class="hl kwa">set</span> rT <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$aS</span> <span class="hl sym">*</span> <span class="hl kwb">$bR</span> <span class="hl sym">+</span> <span class="hl kwb">$aT</span> <span class="hl sym">*</span> <span class="hl kwb">$bT</span><span class="hl sym">}]</span>
    <span class="hl kwa">return</span> <span class="hl sym">[</span><span class="hl kwa">list</span> <span class="hl kwb">$rQ $rR $rS $rT</span><span class="hl sym">]</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> produce <span class="hl sym">{</span>QRST J<span class="hl sym">} {</span>
    <span class="hl kwa">return</span> <span class="hl sym">[</span>compose <span class="hl sym">[</span><span class="hl kwa">list</span> <span class="hl num">10</span> <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{-</span><span class="hl num">10</span><span class="hl sym">*</span><span class="hl kwb">$J</span><span class="hl sym">}]</span> <span class="hl num">0 1</span><span class="hl sym">]</span> <span class="hl kwb">$QRST</span><span class="hl sym">]</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> extract <span class="hl sym">{</span>QRST J<span class="hl sym">} {</span>
    <span class="hl kwa">foreach</span> <span class="hl sym">{</span>Q R S T<span class="hl sym">}</span> <span class="hl kwb">$QRST</span> <span class="hl kwa">break</span>
    <span class="hl kwa">return</span> <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{(</span><span class="hl kwb">$Q</span> <span class="hl sym">*</span> <span class="hl kwb">$J</span> <span class="hl sym">+</span> <span class="hl kwb">$R</span><span class="hl sym">) / (</span><span class="hl kwb">$S</span> <span class="hl sym">*</span> <span class="hl kwb">$J</span> <span class="hl sym">+</span> <span class="hl kwb">$T</span><span class="hl sym">)}]</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> nextX <span class="hl sym">{} {</span>
    <span class="hl kwa">global</span> pidigit
    <span class="hl kwa">set</span> k <span class="hl sym">[</span><span class="hl kwa">incr</span> pidigit<span class="hl sym">(</span>k<span class="hl sym">)]</span>
    <span class="hl kwa">return</span> <span class="hl sym">[</span><span class="hl kwa">list</span> <span class="hl kwb">$k</span> <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">4</span><span class="hl sym">*</span><span class="hl kwb">$k</span><span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">}]</span> <span class="hl num">0</span> <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">2</span><span class="hl sym">*</span><span class="hl kwb">$k</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">}]]</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> nextPidigit <span class="hl sym">{} {</span>
    <span class="hl kwa">global</span> pidigit
    <span class="hl kwa">set</span> digit <span class="hl sym">[</span>extract <span class="hl kwb">$pidigit</span><span class="hl sym">(</span>z<span class="hl sym">)</span> <span class="hl num">3</span><span class="hl sym">]</span>
    <span class="hl kwa">while</span> <span class="hl sym">{</span><span class="hl kwb">$digit</span> <span class="hl sym">!= [</span>extract <span class="hl kwb">$pidigit</span><span class="hl sym">(</span>z<span class="hl sym">)</span> <span class="hl num">4</span><span class="hl sym">]} {</span>
        <span class="hl kwa">set</span> pidigit<span class="hl sym">(</span>z<span class="hl sym">) [</span>compose <span class="hl kwb">$pidigit</span><span class="hl sym">(</span>z<span class="hl sym">) [</span>nextX<span class="hl sym">]]</span>
        <span class="hl kwa">set</span> digit <span class="hl sym">[</span>extract <span class="hl kwb">$pidigit</span><span class="hl sym">(</span>z<span class="hl sym">)</span> <span class="hl num">3</span><span class="hl sym">]</span>
    <span class="hl sym">}</span>
    <span class="hl kwa">set</span> pidigit<span class="hl sym">(</span>z<span class="hl sym">) [</span>produce <span class="hl kwb">$pidigit</span><span class="hl sym">(</span>z<span class="hl sym">)</span> <span class="hl kwb">$digit</span><span class="hl sym">]</span>
    <span class="hl kwa">return</span> <span class="hl kwb">$digit</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> newPidigit <span class="hl sym">{} {</span>
    <span class="hl kwa">global</span> pidigit
    <span class="hl kwa">set</span> pidigit<span class="hl sym">(</span>z<span class="hl sym">) [</span><span class="hl kwa">list</span> <span class="hl num">1 0 0 1</span><span class="hl sym">]</span>
    <span class="hl kwa">set</span> pidigit<span class="hl sym">(</span>k<span class="hl sym">)</span> <span class="hl num">0</span>
    <span class="hl kwa">return</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> generatePidigits <span class="hl sym">{</span>n<span class="hl sym">} {</span>
    <span class="hl kwa">set</span> pi_digits <span class="hl sym">[</span>newPidigit<span class="hl sym">]</span>
    <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> i <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$n</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> i<span class="hl sym">} {</span><span class="hl kwa">append</span> pi_digits <span class="hl sym">[</span>nextPidigit<span class="hl sym">]}</span>
    <span class="hl kwa">return</span> <span class="hl kwb">$pi_digits</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> main <span class="hl sym">{</span>n<span class="hl sym">} {</span>
    <span class="hl kwa">if</span> <span class="hl sym">{</span><span class="hl kwb">$n</span> eq <span class="hl str">&quot;&quot;</span> <span class="hl sym">||</span> <span class="hl kwb">$n</span> <span class="hl sym">&lt;</span> <span class="hl num">27</span><span class="hl sym">} {</span><span class="hl kwa">set</span> n <span class="hl num">27</span><span class="hl sym">}</span>
    <span class="hl kwa">set</span> width <span class="hl num">10</span>
    <span class="hl kwa">set</span> pi_digits <span class="hl sym">[</span>generatePidigits <span class="hl kwb">$n</span><span class="hl sym">]</span>

    <span class="hl kwa">set</span> max <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$n</span><span class="hl sym">-</span><span class="hl kwb">$width</span><span class="hl sym">}]</span>
    <span class="hl kwa">set</span> len <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$width</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">}]</span>
    <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> i <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$max</span><span class="hl sym">} {} {</span>
        <span class="hl kwa">puts</span> <span class="hl str">&quot;[string range $pi_digits $i [incr i $len]]</span><span class="hl esc">\t</span><span class="hl str">:[incr i]&quot;</span>
    <span class="hl sym">}</span>
    <span class="hl kwa">if</span> <span class="hl sym">{</span><span class="hl kwb">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$n</span><span class="hl sym">} {</span>
        <span class="hl kwa">puts</span> <span class="hl sym">[</span><span class="hl kwa">format</span> <span class="hl str">&quot;%-${width}s</span><span class="hl esc">\t</span><span class="hl str">:%s&quot;</span> <span class="hl sym">[</span><span class="hl kwa">string</span> range <span class="hl kwb">$pi_digits $i $n</span><span class="hl sym">]</span> <span class="hl kwb">$n</span><span class="hl sym">]</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>
main <span class="hl sym">[</span><span class="hl kwa">lindex</span> <span class="hl kwb">$argv</span> <span class="hl num">0</span><span class="hl sym">]</span>
