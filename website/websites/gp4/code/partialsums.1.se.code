<span class="hl slc">--   The Computer Language Shootout</span>
<span class="hl slc">--   http://shootout.alioth.debian.org</span>
<span class="hl slc">--</span>
<span class="hl slc">--   Contributed by A. Suter</span>
<span class="hl slc">--</span>
<span class="hl slc">--   Compilation:</span>
<span class="hl slc">--      se c -clean -boost -no_gc -O3 -fomit-frame-pointer</span>
<span class="hl slc">--      -funroll-loops -ffast-math partial_sums.e -o partial_sums</span>

<span class="hl kwa">class</span> PARTIALSUMS

insert
   ARGUMENTS

creation <span class="hl sym">{</span>ANY<span class="hl sym">}</span>
   make

<span class="hl kwa">feature</span> <span class="hl sym">{</span>ANY<span class="hl sym">}</span>
   make <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         sum_1<span class="hl sym">,</span> sum_2<span class="hl sym">,</span> sum_3<span class="hl sym">,</span> flint<span class="hl sym">,</span> cookson<span class="hl sym">,</span> harmonic<span class="hl sym">,</span> riemann<span class="hl sym">,</span> alternating_harmonic<span class="hl sym">,</span> gregory<span class="hl sym">:</span> <span class="hl kwb">REAL</span>
         n_integer<span class="hl sym">,</span> k_integer<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span><span class="hl sym">;</span> k_real<span class="hl sym">,</span> n_real<span class="hl sym">:</span> <span class="hl kwb">REAL</span><span class="hl sym">;</span> c<span class="hl sym">,</span> k_real_2<span class="hl sym">,</span> k_real_3<span class="hl sym">:</span> <span class="hl kwb">REAL</span><span class="hl sym">;</span> flag<span class="hl sym">:</span> <span class="hl kwb">BOOLEAN</span>
      <span class="hl kwa">do</span>
         <span class="hl kwa">if not</span> <span class="hl sym">(</span>argument_count <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl kwa">and then</span> <span class="hl kwd">argument</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>.is_integer<span class="hl sym">)</span> <span class="hl kwa">then</span>
            <span class="hl kwd">die_with_code</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>
         <span class="hl kwa">end</span>
         n_integer <span class="hl sym">:=</span> <span class="hl kwd">argument</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>.to_integer
         n_real <span class="hl sym">:=</span> n_integer
         <span class="hl kwa">if</span> n_integer <span class="hl sym">&lt;=</span> <span class="hl num">1</span> <span class="hl kwa">then</span>
            <span class="hl kwd">die_with_code</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>
         <span class="hl kwa">end</span>

         <span class="hl kwa">from</span>
            sum_1 <span class="hl sym">:=</span> <span class="hl num">1.0</span> <span class="hl slc">-- short for k = 0</span>
            c <span class="hl sym">:=</span> <span class="hl num">2.0</span> <span class="hl sym">/</span> <span class="hl num">3.0</span>
            k_integer <span class="hl sym">:=</span> <span class="hl num">1</span>
            k_real <span class="hl sym">:=</span> <span class="hl num">1.0</span>
         <span class="hl kwa">invariant</span>
            k_integer <span class="hl sym">=</span> k_real
            n_integer <span class="hl sym">=</span> n_real
         until
            k_integer <span class="hl sym">&gt;</span> n_integer
         <span class="hl kwa">loop</span>
            k_real_2 <span class="hl sym">:=</span> k_real ^ <span class="hl num">2</span>
            k_real_3 <span class="hl sym">:=</span> k_real_2 <span class="hl sym">*</span> k_real
            sum_1 <span class="hl sym">:=</span> sum_1 <span class="hl sym">+</span> c ^ k_integer
            sum_2 <span class="hl sym">:=</span> sum_2 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> k_real.sqrt
            sum_3 <span class="hl sym">:=</span> sum_3 <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>k_real <span class="hl sym">* (</span>k_real <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">))</span>
            riemann <span class="hl sym">:=</span> riemann <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> k_real_2
            flint <span class="hl sym">:=</span> flint <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>k_real_3 <span class="hl sym">*</span> k_real.sin ^ <span class="hl num">2</span><span class="hl sym">)</span>
            cookson <span class="hl sym">:=</span> cookson <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span>k_real_3 <span class="hl sym">*</span> k_real.cos ^ <span class="hl num">2</span><span class="hl sym">)</span>
            harmonic <span class="hl sym">:=</span> harmonic <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> k_real
            <span class="hl kwa">if</span> flag <span class="hl kwa">then</span>
               alternating_harmonic <span class="hl sym">:=</span> alternating_harmonic <span class="hl sym">-</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> k_real
               gregory <span class="hl sym">:=</span> gregory <span class="hl sym">-</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span><span class="hl num">2.0</span> <span class="hl sym">*</span> k_real <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">)</span>
            <span class="hl kwa">else</span>
               alternating_harmonic <span class="hl sym">:=</span> alternating_harmonic <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/</span> k_real
               gregory <span class="hl sym">:=</span> gregory <span class="hl sym">+</span> <span class="hl num">1.0</span> <span class="hl sym">/ (</span><span class="hl num">2.0</span> <span class="hl sym">*</span> k_real <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">)</span>
            <span class="hl kwa">end</span>

            flag <span class="hl sym">:=</span> <span class="hl kwa">not</span> flag
            k_integer <span class="hl sym">:=</span> k_integer <span class="hl sym">+</span> <span class="hl num">1</span>
            k_real <span class="hl sym">:=</span> k_real <span class="hl sym">+</span> <span class="hl num">1.0</span>
         <span class="hl kwa">end</span>

         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>sum_1.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%T(2/3)^k%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>sum_2.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%Tk^-0.5%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>sum_3.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%T1/k(k+1)%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>flint.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%TFlint Hills%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>cookson.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%TCookson Hills%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>harmonic.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%THarmonic%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>riemann.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%TRiemann Zeta%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>alternating_harmonic.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%TAlternating Harmonic%N&quot;</span><span class="hl sym">)</span>
         io.<span class="hl kwd">put_string</span><span class="hl sym">(</span>gregory.<span class="hl kwd">to_string_format</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl str">&quot;%TGregory%N&quot;</span><span class="hl sym">)</span>
      <span class="hl kwa">end</span>

<span class="hl kwa">end</span> <span class="hl slc">-- class PARTIALSUMS</span>
