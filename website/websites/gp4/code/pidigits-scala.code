<span class="hl com">/* ------------------------------------------------------------------ */</span>
<span class="hl com">/* The Computer Language Shootout                               */</span>
<span class="hl com">/* http://shootout.alioth.debian.org/                                 */</span>
<span class="hl com">/*                                                                    */</span>
<span class="hl com">/* Contributed by Anthony Borla                                       */</span>
<span class="hl com">/* ------------------------------------------------------------------ */</span>

<span class="hl kwa">object</span> pidigits
<span class="hl sym">{</span>
  <span class="hl kwa">def</span> main<span class="hl sym">(</span>args<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span><span class="hl kwc">String</span><span class="hl sym">]):</span> unit <span class="hl sym">=</span>
  <span class="hl sym">{</span>
    <span class="hl kwa">val</span> N<span class="hl sym">:</span> <span class="hl kwb">int</span> <span class="hl sym">=</span> <span class="hl kwc">Integer</span><span class="hl sym">.</span>parseInt<span class="hl sym">(</span>args<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">));</span> <span class="hl kwa">var</span> i<span class="hl sym">:</span> <span class="hl kwb">int</span> <span class="hl sym">=</span> <span class="hl num">10</span>

    <span class="hl kwa">while</span> <span class="hl sym">(</span>i <span class="hl sym">&lt;=</span> N<span class="hl sym">)</span>
    <span class="hl sym">{</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span>println<span class="hl sym">(</span>pi_digits<span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">) +</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span> <span class="hl sym">+</span> i<span class="hl sym">)</span>
      i <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">10</span>
    <span class="hl sym">}</span>

    i <span class="hl sym">=</span> i <span class="hl sym">-</span> <span class="hl num">10</span>

    <span class="hl kwa">if</span> <span class="hl sym">(</span>i <span class="hl sym">&lt;</span> N<span class="hl sym">)</span>
    <span class="hl sym">{</span>
      <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span>println<span class="hl sym">(</span>pi_digits<span class="hl sym">(</span>N <span class="hl sym">-</span> i<span class="hl sym">) +</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:&quot;</span> <span class="hl sym">+</span> N<span class="hl sym">)</span>
    <span class="hl sym">}</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">def</span> compose<span class="hl sym">(</span>a<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span>BigInt<span class="hl sym">],</span> b<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span>BigInt<span class="hl sym">]):</span> <span class="hl kwc">Array</span><span class="hl sym">[</span>BigInt<span class="hl sym">] =</span>
  <span class="hl sym">{</span>
    <span class="hl kwa">return</span> <span class="hl kwc">Array</span><span class="hl sym">(</span>a<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) *</span> b<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">),</span>
                 a<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) *</span> b<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">) +</span> a<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">) *</span> b<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">),</span>
                 a<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">) *</span> b<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) +</span> a<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">) *</span> b<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">),</span>
                 a<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">) *</span> b<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">) +</span> a<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">) *</span> b<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">))</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">def</span> extract<span class="hl sym">(</span>a<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span>BigInt<span class="hl sym">],</span> j<span class="hl sym">:</span> <span class="hl kwb">int</span><span class="hl sym">):</span> BigInt <span class="hl sym">=</span>
  <span class="hl sym">{</span>
    <span class="hl kwa">return</span> <span class="hl sym">(</span>a<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) *</span> j <span class="hl sym">+</span> a<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)) / (</span>a<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">) *</span> j <span class="hl sym">+</span> a<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">))</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">def</span> pi_digits<span class="hl sym">(</span>c<span class="hl sym">:</span> <span class="hl kwb">int</span><span class="hl sym">):</span> <span class="hl kwc">String</span> <span class="hl sym">=</span>
  <span class="hl sym">{</span>
    <span class="hl kwa">val</span> r<span class="hl sym">:</span> <span class="hl kwc">StringBuffer</span> <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwc">StringBuffer</span><span class="hl sym">();</span> <span class="hl kwa">var</span> i<span class="hl sym">:</span> <span class="hl kwb">int</span> <span class="hl sym">=</span> <span class="hl num">0</span>

    <span class="hl kwa">while</span> <span class="hl sym">(</span>i <span class="hl sym">&lt;</span> c<span class="hl sym">)</span>
    <span class="hl sym">{</span>
      <span class="hl kwa">var</span> y<span class="hl sym">:</span> BigInt <span class="hl sym">=</span> extract<span class="hl sym">(</span>Z<span class="hl sym">,</span> <span class="hl num">3</span><span class="hl sym">)</span>

      <span class="hl kwa">while</span> <span class="hl sym">(</span>y <span class="hl sym">!=</span> extract<span class="hl sym">(</span>Z<span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">))</span>
      <span class="hl sym">{</span>
        K <span class="hl sym">=</span> K <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> Z <span class="hl sym">=</span> compose<span class="hl sym">(</span>Z<span class="hl sym">,</span> <span class="hl kwc">Array</span><span class="hl sym">(</span>K<span class="hl sym">,</span> <span class="hl num">4</span> <span class="hl sym">*</span> K <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">2</span> <span class="hl sym">*</span> K <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">))</span>
        y <span class="hl sym">=</span> extract<span class="hl sym">(</span>Z<span class="hl sym">,</span> <span class="hl num">3</span><span class="hl sym">)</span>
      <span class="hl sym">}</span>

<span class="hl slc">//      Z = compose(Array(10, (-y) * 10, 0, 1), Z)</span>

      Z <span class="hl sym">=</span> compose<span class="hl sym">(</span><span class="hl kwc">Array</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">,</span> y <span class="hl sym">* (-</span><span class="hl num">10</span><span class="hl sym">),</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">),</span> Z<span class="hl sym">)</span>

      r<span class="hl sym">.</span>append<span class="hl sym">(</span>y<span class="hl sym">);</span> i <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>

    <span class="hl kwa">return</span> r<span class="hl sym">.</span>toString<span class="hl sym">()</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">var</span> K<span class="hl sym">:</span> <span class="hl kwb">int</span> <span class="hl sym">=</span> <span class="hl num">0</span>

  <span class="hl kwa">var</span> Z<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span>BigInt<span class="hl sym">] =</span> <span class="hl kwc">Array</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span>
<span class="hl sym">}</span>

