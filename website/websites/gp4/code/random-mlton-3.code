<span class="com">(* random.sml</span>
<span class="com"> *</span>
<span class="com"> *   Floating-point random number generator + test loop.</span>
<span class="com"> *</span>
<span class="com"> * Copyright (c) 2004 by The Fellowship of SML/NJ</span>
<span class="com"> *</span>
<span class="com"> * Author: Matthias Blume (blume&#64;tti-c.org)</span>
<span class="com"> * Modified and ported to MLton by Vesa Karvonen.</span>
<span class="com"> *)</span>

<span class="com">(* the constants *)</span>
<span class="kwa">val</span> <span class="sym">(</span>M<span class="sym">,</span> A<span class="sym">,</span> C<span class="sym">) = (</span><span class="num">0</span>w139968<span class="sym">,</span> <span class="num">0</span>w3877<span class="sym">,</span> <span class="num">0</span>w29573<span class="sym">)</span>

<span class="com">(* floating format, word-&gt;real conversion *)</span>
<span class="kwa">val</span> <span class="sym">(</span>f9<span class="sym">,</span> wreal<span class="sym">) = (</span><span class="kwa">Real</span>.fmt <span class="sym">(</span><span class="kwa">StringCvt</span>.FIX <span class="sym">(</span>SOME <span class="num">9</span><span class="sym">)),</span> <span class="kwb">real</span> <span class="kwa">o Word</span>.toIntX<span class="sym">)</span>

<span class="com">(* the loop *)</span>
<span class="kwa">fun</span> lp <span class="sym">(</span><span class="num">0</span>w0<span class="sym">,</span> s<span class="sym">,</span> m<span class="sym">) =</span> m <span class="sym">*</span> wreal s <span class="sym">/</span> wreal M
  <span class="sym">|</span> lp <span class="sym">(</span>n<span class="sym">,</span>   s<span class="sym">,</span> m<span class="sym">) =</span> lp <span class="sym">(</span>n<span class="sym">-</span><span class="num">0</span>w1<span class="sym">, (</span>s <span class="sym">*</span> A <span class="sym">+</span> C<span class="sym">)</span> mod M<span class="sym">,</span> m<span class="sym">)</span>

<span class="com">(* the driver *)</span>
<span class="kwa">val</span> n <span class="sym">=</span> valOf <span class="sym">(</span><span class="kwa">Int</span>.fromString <span class="sym">(</span>hd <span class="sym">(</span>CommandLine.arguments <span class="sym">())))</span> <span class="kwa">handle</span> _ <span class="sym">=&gt;</span> <span class="num">1</span>
<span class="kwa">val</span> _ <span class="sym">=</span> app print <span class="sym">[</span>f9 <span class="sym">(</span>lp <span class="sym">(</span><span class="kwa">Word</span>.fromInt n<span class="sym">,</span> <span class="num">0</span>w42<span class="sym">,</span> <span class="num">100.0</span><span class="sym">)),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">]</span>
