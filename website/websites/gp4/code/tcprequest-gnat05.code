<span class="hl slc">-- $Id: tcprequest-gnat05.code,v 1.1 2007-11-27 22:34:38 igouy-guest Exp $</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">--</span>
<span class="hl slc">-- Contributed by Pascal Obry on 2005/03/31</span>

<span class="hl kwa">with</span> Ada.Command_Line<span class="hl sym">;</span>    <span class="hl kwa">use</span> Ada.Command_Line<span class="hl sym">;</span>
<span class="hl kwa">with</span> Ada.Text_IO<span class="hl sym">;</span>         <span class="hl kwa">use</span> Ada.Text_IO<span class="hl sym">;</span>
<span class="hl kwa">with</span> Ada.Integer_Text_IO<span class="hl sym">;</span> <span class="hl kwa">use</span> Ada.Integer_Text_IO<span class="hl sym">;</span>
<span class="hl kwa">with</span> Ada.Streams<span class="hl sym">;</span>         <span class="hl kwa">use</span> Ada.Streams<span class="hl sym">;</span>
<span class="hl kwa">with</span> GNAT.Sockets<span class="hl sym">;</span>        <span class="hl kwa">use</span> GNAT.Sockets<span class="hl sym">;</span>

<span class="hl kwa">procedure</span> TCPRequest <span class="hl kwa">is</span>

   N            <span class="hl sym">:</span> <span class="hl kwa">constant</span> <span class="hl kwb">Positive</span> <span class="hl sym">:=</span> <span class="hl kwb">Positive</span><span class="hl sym">'</span>Value <span class="hl sym">(</span>Argument <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">));</span>
   M            <span class="hl sym">:</span> <span class="hl kwa">constant</span> <span class="hl sym">:=</span> <span class="hl num">100</span><span class="hl sym">;</span>
   Reply_Size   <span class="hl sym">:</span> <span class="hl kwa">constant</span> <span class="hl sym">:=</span> <span class="hl num">4</span>_096<span class="hl sym">;</span>
   Request_Size <span class="hl sym">:</span> <span class="hl kwa">constant</span> <span class="hl sym">:=</span> <span class="hl num">64</span><span class="hl sym">;</span>

   Reply   <span class="hl sym">:</span> <span class="hl kwa">constant</span> Stream_Element_Array <span class="hl sym">:= (</span><span class="hl num">1</span> .. Reply_Size <span class="hl sym">=&gt;</span> <span class="hl num">88</span><span class="hl sym">);</span>
   Request <span class="hl sym">:</span> <span class="hl kwa">constant</span> Stream_Element_Array <span class="hl sym">:= (</span><span class="hl num">1</span> .. Request_Size <span class="hl sym">=&gt;</span> <span class="hl num">23</span><span class="hl sym">);</span>

   Address <span class="hl sym">:</span> Sock_Addr_Type<span class="hl sym">;</span>

   <span class="hl kwa">task</span> Client <span class="hl kwa">is</span>
      <span class="hl kwa">entry</span> Start<span class="hl sym">;</span>
   <span class="hl kwa">end</span> Client<span class="hl sym">;</span>

   <span class="hl kwa">task body</span> Client <span class="hl kwa">is</span>
      Socket <span class="hl sym">:</span> Socket_Type<span class="hl sym">;</span>
      Buffer <span class="hl sym">:</span> Stream_Element_Array <span class="hl sym">(</span><span class="hl num">1</span> .. Reply_Size<span class="hl sym">);</span>
      Last   <span class="hl sym">:</span> Stream_Element_Offset<span class="hl sym">;</span>
      Count  <span class="hl sym">:</span> <span class="hl kwb">Natural</span> <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
      Bytes  <span class="hl sym">:</span> <span class="hl kwb">Natural</span> <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">begin</span>
      <span class="hl kwa">accept</span> Start<span class="hl sym">;</span>

      Create_Socket <span class="hl sym">(</span>Socket<span class="hl sym">);</span>
      Connect_Socket <span class="hl sym">(</span>Socket<span class="hl sym">,</span> Address<span class="hl sym">);</span>

      <span class="hl kwa">for</span> K <span class="hl kwa">in</span> <span class="hl num">1</span> .. M <span class="hl sym">*</span> N <span class="hl kwa">loop</span>
         Send_Socket <span class="hl sym">(</span>Socket<span class="hl sym">,</span> Request<span class="hl sym">,</span> Last<span class="hl sym">);</span>

         Bytes <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
         <span class="hl kwa">while</span> Bytes <span class="hl sym">/=</span> Reply_Size <span class="hl kwa">loop</span>
            Receive_Socket <span class="hl sym">(</span>Socket<span class="hl sym">,</span> Buffer<span class="hl sym">,</span> Last<span class="hl sym">);</span>
            Bytes <span class="hl sym">:=</span> Bytes <span class="hl sym">+</span> <span class="hl kwb">Natural</span> <span class="hl sym">(</span>Last<span class="hl sym">);</span>
         <span class="hl kwa">end loop</span><span class="hl sym">;</span>

         Count <span class="hl sym">:=</span> Count <span class="hl sym">+</span> Bytes<span class="hl sym">;</span>
      <span class="hl kwa">end loop</span><span class="hl sym">;</span>

      Close_Socket <span class="hl sym">(</span>Socket<span class="hl sym">);</span>

      Put <span class="hl sym">(</span><span class="hl str">&quot;replies: &quot;</span><span class="hl sym">);</span> Put <span class="hl sym">(</span>N <span class="hl sym">*</span> M<span class="hl sym">,</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">0</span><span class="hl sym">);</span>
      Put <span class="hl sym">(</span>ASCII.HT <span class="hl sym">&amp;</span> <span class="hl str">&quot;bytes: &quot;</span><span class="hl sym">);</span> Put <span class="hl sym">(</span>Count<span class="hl sym">,</span> Width <span class="hl sym">=&gt;</span> <span class="hl num">0</span><span class="hl sym">);</span>
   <span class="hl kwa">end</span> Client<span class="hl sym">;</span>

   Server_Socket <span class="hl sym">:</span> Socket_Type<span class="hl sym">;</span>
   Socket        <span class="hl sym">:</span> Socket_Type<span class="hl sym">;</span>
   Buffer        <span class="hl sym">:</span> Stream_Element_Array <span class="hl sym">(</span><span class="hl num">1</span> .. Request_Size<span class="hl sym">);</span>
   Last          <span class="hl sym">:</span> Stream_Element_Offset<span class="hl sym">;</span>

<span class="hl kwa">begin</span>
   Address.Addr <span class="hl sym">:=</span> Addresses <span class="hl sym">(</span>Get_Host_By_Name <span class="hl sym">(</span><span class="hl str">&quot;localhost&quot;</span><span class="hl sym">),</span> <span class="hl num">1</span><span class="hl sym">);</span>
   Address.Port <span class="hl sym">:=</span> <span class="hl num">2987</span><span class="hl sym">;</span>

   Create_Socket <span class="hl sym">(</span>Server_Socket<span class="hl sym">);</span>
   Bind_Socket <span class="hl sym">(</span>Server_Socket<span class="hl sym">,</span> Address<span class="hl sym">);</span>
   Listen_Socket <span class="hl sym">(</span>Server_Socket<span class="hl sym">);</span>

   Client.Start<span class="hl sym">;</span>

   Accept_Socket <span class="hl sym">(</span>Server_Socket<span class="hl sym">,</span> Socket<span class="hl sym">,</span> Address<span class="hl sym">);</span>

   <span class="hl kwa">for</span> K <span class="hl kwa">in</span> <span class="hl num">1</span> .. M <span class="hl sym">*</span> N <span class="hl kwa">loop</span>
      Receive_Socket <span class="hl sym">(</span>Socket<span class="hl sym">,</span> Buffer<span class="hl sym">,</span> Last<span class="hl sym">);</span>
      Send_Socket <span class="hl sym">(</span>Socket<span class="hl sym">,</span> Reply<span class="hl sym">,</span> Last<span class="hl sym">);</span>
   <span class="hl kwa">end loop</span><span class="hl sym">;</span>
<span class="hl kwa">end</span> TCPRequest<span class="hl sym">;</span>
