<span class="hl slc">-- The Computer Language Shootout</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- by Frederic Merizen</span>

<span class="hl kwa">class</span> FASTA

insert
   ARGUMENTS

creation <span class="hl sym">{</span>ANY<span class="hl sym">}</span>
   make

<span class="hl kwa">feature</span> <span class="hl sym">{</span>ANY<span class="hl sym">}</span>
   im<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span> <span class="hl kwa">is</span> <span class="hl num">139968</span>

   ia<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span> <span class="hl kwa">is</span> <span class="hl num">3877</span>

   ic<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span> <span class="hl kwa">is</span> <span class="hl num">29573</span>

   last<span class="hl sym">:</span> INTEGER_32

   <span class="hl kwd">random</span> <span class="hl sym">(</span>max<span class="hl sym">:</span> REAL_64<span class="hl sym">):</span> REAL_64 <span class="hl kwa">is</span>
      <span class="hl kwa">do</span>
         last <span class="hl sym">:= (</span>last <span class="hl sym">*</span> ia <span class="hl sym">+</span> ic<span class="hl sym">)</span> \\ im
         <span class="hl kwa">Result</span> <span class="hl sym">:=</span> max <span class="hl sym">*</span> last <span class="hl sym">/</span> im
      <span class="hl kwa">end</span>

   alu<span class="hl sym">:</span> STRING <span class="hl kwa">is</span> <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG%</span>
<span class="hl str">                  %GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA%</span>
<span class="hl str">                  %CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT%</span>
<span class="hl str">                  %ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA%</span>
<span class="hl str">                  %GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG%</span>
<span class="hl str">                  %AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC%</span>
<span class="hl str">                  %AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

   iub<span class="hl sym">:</span> FAST_ARRAY<span class="hl sym">[</span><span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]]</span> <span class="hl kwa">is</span>
      <span class="hl kwa">once</span>
         <span class="hl kwa">Result</span> <span class="hl sym">:= {</span>FAST_ARRAY<span class="hl sym">[</span><span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]]</span>
         <span class="hl sym">&lt;&lt;   [</span><span class="hl str">'a'</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">], [</span><span class="hl str">'c'</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">], [</span><span class="hl str">'g'</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">], [</span><span class="hl str">'t'</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">], [</span><span class="hl str">'B'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
            <span class="hl sym">[</span><span class="hl str">'D'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'H'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'K'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'M'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'N'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
            <span class="hl sym">[</span><span class="hl str">'R'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'S'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'V'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'W'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">], [</span><span class="hl str">'Y'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">] &gt;&gt; }</span>
      <span class="hl kwa">end</span>

   homo_sapiens<span class="hl sym">:</span> FAST_ARRAY<span class="hl sym">[</span><span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]]</span> <span class="hl kwa">is</span>
      <span class="hl kwa">once</span>
         <span class="hl kwa">Result</span> <span class="hl sym">:= {</span>FAST_ARRAY<span class="hl sym">[</span><span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]]</span>
         <span class="hl sym">&lt;&lt; [</span><span class="hl str">'a'</span><span class="hl sym">,</span> <span class="hl num">0.3029549426680</span><span class="hl sym">], [</span><span class="hl str">'c'</span><span class="hl sym">,</span> <span class="hl num">0.1979883004921</span><span class="hl sym">],</span>
            <span class="hl sym">[</span><span class="hl str">'g'</span><span class="hl sym">,</span> <span class="hl num">0.1975473066391</span><span class="hl sym">], [</span><span class="hl str">'t'</span><span class="hl sym">,</span> <span class="hl num">0.3015094502008</span><span class="hl sym">] &gt;&gt; }</span>
      <span class="hl kwa">end</span>

   <span class="hl kwd">make_cumulative</span> <span class="hl sym">(</span>a<span class="hl sym">:</span> FAST_ARRAY<span class="hl sym">[</span><span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]])</span> <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         cp<span class="hl sym">:</span> REAL_64<span class="hl sym">;</span> i<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span><span class="hl sym">;</span> t<span class="hl sym">:</span> <span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]</span>
      <span class="hl kwa">do</span>
         cp <span class="hl sym">:=</span> <span class="hl num">0.0</span>
         <span class="hl kwa">from</span>
            i <span class="hl sym">:=</span> a.lower
         until
            i <span class="hl sym">&gt;</span> a.upper
         <span class="hl kwa">loop</span>
            t <span class="hl sym">:=</span> a.<span class="hl kwd">item</span><span class="hl sym">(</span>i<span class="hl sym">)</span>
            cp <span class="hl sym">:=</span> cp <span class="hl sym">+</span> t.second
            t.<span class="hl kwd">set_second</span><span class="hl sym">(</span>cp<span class="hl sym">)</span>
            i <span class="hl sym">:=</span> i <span class="hl sym">+</span> <span class="hl num">1</span>
         <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>

   make <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         n<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span>
      <span class="hl kwa">do</span>
         last <span class="hl sym">:=</span> <span class="hl num">42</span>
         <span class="hl kwd">make_cumulative</span><span class="hl sym">(</span>homo_sapiens<span class="hl sym">)</span>
         <span class="hl kwd">make_cumulative</span><span class="hl sym">(</span>iub<span class="hl sym">)</span>
         <span class="hl kwa">if</span> argument_count <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span>
            n <span class="hl sym">:=</span> <span class="hl kwd">argument</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>.to_integer
         <span class="hl kwa">else</span>
            n <span class="hl sym">:=</span> <span class="hl num">1000</span>
         <span class="hl kwa">end</span>
         <span class="hl kwd">make_repeat_fasta</span><span class="hl sym">(</span><span class="hl str">&quot;ONE&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span><span class="hl sym">,</span> alu<span class="hl sym">,</span> n <span class="hl sym">*</span> <span class="hl num">2</span><span class="hl sym">,</span> std_output<span class="hl sym">)</span>
         <span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span><span class="hl str">&quot;TWO&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span><span class="hl sym">,</span> iub<span class="hl sym">,</span> n <span class="hl sym">*</span> <span class="hl num">3</span><span class="hl sym">,</span> std_output<span class="hl sym">)</span>
         <span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span><span class="hl str">&quot;THREE&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span><span class="hl sym">,</span> homo_sapiens<span class="hl sym">,</span> n <span class="hl sym">*</span> <span class="hl num">5</span><span class="hl sym">,</span> std_output<span class="hl sym">)</span>
      <span class="hl kwa">end</span>

   <span class="hl kwd">select_random</span> <span class="hl sym">(</span>a<span class="hl sym">:</span> FAST_ARRAY<span class="hl sym">[</span><span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]]):</span> <span class="hl kwb">CHARACTER</span> <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         r<span class="hl sym">:</span> REAL_64<span class="hl sym">;</span> i<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span><span class="hl sym">;</span> stop<span class="hl sym">:</span> <span class="hl kwb">BOOLEAN</span><span class="hl sym">;</span> t<span class="hl sym">:</span> <span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]</span>
      <span class="hl kwa">do</span>
         r <span class="hl sym">:=</span> <span class="hl kwd">random</span><span class="hl sym">(</span><span class="hl num">1.0</span><span class="hl sym">)</span>
         <span class="hl kwa">from</span>
            i <span class="hl sym">:=</span> a.lower
         until
            stop
         <span class="hl kwa">loop</span>
            t <span class="hl sym">:=</span> a.<span class="hl kwd">item</span><span class="hl sym">(</span>i<span class="hl sym">)</span>
            stop <span class="hl sym">:=</span> r <span class="hl sym">&lt;</span> t.second <span class="hl kwa">or else</span> i <span class="hl sym">=</span> a.upper
            <span class="hl kwa">if</span> stop <span class="hl kwa">then</span>
               <span class="hl kwa">Result</span> <span class="hl sym">:=</span> t.first
            <span class="hl kwa">end</span>
            i <span class="hl sym">:=</span> i <span class="hl sym">+</span> <span class="hl num">1</span>
         <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>

   line_length<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span> <span class="hl kwa">is</span> <span class="hl num">60</span>

   <span class="hl kwd">make_random_fasta</span> <span class="hl sym">(</span>id<span class="hl sym">,</span> desc<span class="hl sym">:</span> STRING<span class="hl sym">;</span> a<span class="hl sym">:</span> FAST_ARRAY<span class="hl sym">[</span><span class="hl kwa">TUPLE</span><span class="hl sym">[</span><span class="hl kwb">CHARACTER</span><span class="hl sym">,</span> REAL_64<span class="hl sym">]];</span> n<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span><span class="hl sym">;</span> s<span class="hl sym">:</span> OUTPUT_STREAM<span class="hl sym">)</span> <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         i<span class="hl sym">,</span> j<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span>
      <span class="hl kwa">do</span>
         s.<span class="hl kwd">put_character</span><span class="hl sym">(</span><span class="hl str">'&gt;'</span><span class="hl sym">)</span>
         s.<span class="hl kwd">put_string</span><span class="hl sym">(</span>id<span class="hl sym">)</span>
         s.<span class="hl kwd">put_character</span><span class="hl sym">(</span><span class="hl str">' '</span><span class="hl sym">)</span>
         s.<span class="hl kwd">put_string</span><span class="hl sym">(</span>desc<span class="hl sym">)</span>
         s.put_new_line
         <span class="hl kwa">from</span>
            i <span class="hl sym">:=</span> n
         until
            i <span class="hl sym">&lt;</span> <span class="hl num">1</span>
         <span class="hl kwa">loop</span>
            <span class="hl kwa">from</span>
               j <span class="hl sym">:=</span> i.<span class="hl kwd">min</span><span class="hl sym">(</span>line_length<span class="hl sym">)</span>
            until
               j <span class="hl sym">&lt;</span> <span class="hl num">1</span>
            <span class="hl kwa">loop</span>
               s.<span class="hl kwd">put_character</span><span class="hl sym">(</span><span class="hl kwd">select_random</span><span class="hl sym">(</span>a<span class="hl sym">))</span>
               j <span class="hl sym">:=</span> j <span class="hl sym">-</span> <span class="hl num">1</span>
            <span class="hl kwa">end</span>
            s.put_new_line
            i <span class="hl sym">:=</span> i <span class="hl sym">-</span> line_length
         <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>

   <span class="hl kwd">make_repeat_fasta</span> <span class="hl sym">(</span>id<span class="hl sym">,</span> desc<span class="hl sym">,</span> a<span class="hl sym">:</span> STRING<span class="hl sym">;</span> n<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span><span class="hl sym">;</span> s<span class="hl sym">:</span> OUTPUT_STREAM<span class="hl sym">)</span> <span class="hl kwa">is</span>
      <span class="hl kwa">local</span>
         i<span class="hl sym">,</span> j<span class="hl sym">,</span> k<span class="hl sym">,</span> kn<span class="hl sym">:</span> <span class="hl kwb">INTEGER</span>
      <span class="hl kwa">do</span>
         s.<span class="hl kwd">put_character</span><span class="hl sym">(</span><span class="hl str">'&gt;'</span><span class="hl sym">)</span>
         s.<span class="hl kwd">put_string</span><span class="hl sym">(</span>id<span class="hl sym">)</span>
         s.<span class="hl kwd">put_character</span><span class="hl sym">(</span><span class="hl str">' '</span><span class="hl sym">)</span>
         s.<span class="hl kwd">put_string</span><span class="hl sym">(</span>desc<span class="hl sym">)</span>
         s.put_new_line
         kn <span class="hl sym">:=</span> a.count
         k <span class="hl sym">:=</span> <span class="hl num">1</span>
         <span class="hl kwa">from</span>
            i <span class="hl sym">:=</span> n
         until
            i <span class="hl sym">&lt;</span> <span class="hl num">1</span>
         <span class="hl kwa">loop</span>
            <span class="hl kwa">from</span>
               j <span class="hl sym">:=</span> i.<span class="hl kwd">min</span><span class="hl sym">(</span>line_length<span class="hl sym">)</span>
            until
               j <span class="hl sym">&lt;</span> <span class="hl num">1</span>
            <span class="hl kwa">loop</span>
               <span class="hl kwa">if</span> k <span class="hl sym">&gt;</span> kn <span class="hl kwa">then</span>
                  k <span class="hl sym">:=</span> <span class="hl num">1</span>
               <span class="hl kwa">end</span>
               io.<span class="hl kwd">put_character</span><span class="hl sym">(</span>a.<span class="hl kwd">item</span><span class="hl sym">(</span>k<span class="hl sym">))</span>
               k <span class="hl sym">:=</span> k <span class="hl sym">+</span> <span class="hl num">1</span>
               j <span class="hl sym">:=</span> j <span class="hl sym">-</span> <span class="hl num">1</span>
            <span class="hl kwa">end</span>
            s.put_new_line
            i <span class="hl sym">:=</span> i <span class="hl sym">-</span> line_length
         <span class="hl kwa">end</span>
      <span class="hl kwa">end</span>

<span class="hl kwa">end</span> <span class="hl slc">-- class FASTA</span>
