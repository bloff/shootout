BUILD COMMANDS FOR: message.stx

Thu Jun  7 16:19:58 PDT 2007

( if [ ! -d message.stx_run ] ; then mkdir message.stx_run ; fi)
cp /home/dunham/gp4/shootout/bench/message/message.stx message.stx_run/message.stx
cp ../Make.proto message.stx_run
( cd message.stx_run ; ../../../../bin/split_file.bash message.stx ; /opt/stx/rules/stmkmf /opt/stx ; make )
splitfile  Tests.st
splitfile  Consumer.st
splitfile  ProducerConsumer.st
Making makefile ...
stmkmf: setup using /opt/stx ...
generate first pre-Makefile ...
generate second pre-Makefile ...
making makefile for linux-elf/opt-cs-oc  ...
make[5]: Nothing to be done for `additionalMakefiles'.
#cp /opt/stx/rules/Makefile.proto Makefile
generate actual version of Makefile ...
making makefile for linux-elf/opt-cs-oc  ...
make[5]: Nothing to be done for `additionalMakefiles'.
#cp /opt/stx/rules/Makefile.proto Makefile
/opt/stx/stc/stc -CC="gcc" -I/opt/stx/include -I/opt/stx/include -H/opt/stx/include   +sharedLibCode -staticMethods  +optinline  +optcontext +inlineNew +optinline2    -I/opt/stx/include -DLINUX  -DELF  -fPIC -O -O3 -fomit-frame-pointer -march=pentium4   -DDEBUG -Di386 -DELF       -CC="gcc" -S Consumer.st
/opt/stx/stc/stc -CC="gcc" -I/opt/stx/include -I/opt/stx/include -H/opt/stx/include   +sharedLibCode -staticMethods  +optinline  +optcontext +inlineNew +optinline2    -I/opt/stx/include -DLINUX  -DELF  -fPIC -O -O3 -fomit-frame-pointer -march=pentium4   -DDEBUG -Di386 -DELF       -CC="gcc" -S ProducerConsumer.st
/opt/stx/stc/stc -CC="gcc" -I/opt/stx/include -I/opt/stx/include -H/opt/stx/include   +sharedLibCode -staticMethods  +optinline  +optcontext +inlineNew +optinline2    -I/opt/stx/include -DLINUX  -DELF  -fPIC -O -O3 -fomit-frame-pointer -march=pentium4   -DDEBUG -Di386 -DELF       -CC="gcc" -S Tests.st
make --no-print-directory APPLICATION \
		    TARGET=message.stx_run \
		    APPLICATION_CLASSES="Consumer ProducerConsumer Tests" \
		    APPLICATION_OBJS="Consumer.o ProducerConsumer.o Tests.o" \
		    LIBLIST="libbasic" \
		    LIBOBJS="/opt/stx/libbasic/libbasic.so" \
		    LINK_LIBOBJS="libbasic.so" \
		    STARTUP_CLASS="Tests" \
		    STARTUP_SELECTOR="main" \
		    SYSLIBS="" 
make --no-print-directory main.o \
		STARTUP_CLASS="Tests" \
		STARTUP_SELECTOR="main" \
		MAIN_DEFINES=""
gcc -o main.o -c -I/opt/stx/include -DLINUX   -fPIC -O -O3 -fomit-frame-pointer -march=pentium4 -DDEBUG -Di386 -DELF       \
		-DSTARTUP_CLASS="\"Tests\"" \
		-DSTARTUP_SELECTOR="\"main\"" \
		-DCONFIGURATION_STRING="\""linux-elf/opt-cs-oc:"\"" \
		-DBUILD_DATE="\"`date '+%Y-%m-%d %R %Z'`\"" \
		-I/opt/stx/include -I. /opt/stx/librun/main.c
make --no-print-directory linkTarget \
		LIBLIST="libbasic" \
		LIBOBJS="/opt/stx/libbasic/libbasic.so" \
		LINK_LIBOBJS="libbasic.so" \
		TARGET=message.stx_run \
		ADDITIONAL_CLASSES="Consumer ProducerConsumer Tests" \
		ADDITIONAL_OBJS="Consumer.o ProducerConsumer.o Tests.o" \
		ADDITIONAL_LINK_OBJS=""
if [ -f /opt/stx/librun/symbolAddress.h.timestamp ]; then \
	    make --no-print-directory reallyCheckSymbolsInLibrunAreUpToDate; \
	fi
Making librun for changed symbolList...
(cd /opt/stx/librun; make --no-print-directory)
compiling new symbols only (this is a binary distribution)
make --no-print-directory linuxSharedLib LIB=librun.so
../rules/stdRules:1976: warning: overriding commands for target `librun.so'
Make.proto:696: warning: ignoring old commands for target `librun.so'
gcc -nostdlib -shared -Llib -L/usr/local/lib -L/usr/X11/lib -Wl,-R.,-Rlib,-R/opt/stx/`cat ../RELEASE`/lib/lib,-R/usr/local/lib/stx`cat ../RELEASE` -o librun.so errhandler.o init.o classes.o lookup.o backtrace.o new.o send.o process.o stack.o char.o float.o string.o symbol.o globals.o util.o interrupt.o statistic.o interpret.o plugin.o jinterpret.o mcompiler.o memory.o stxmain.o md5.o symlist.o malloc.o  asmhelp.o snapshot.o  
/usr/lib/gcc/i686-pc-linux-gnu/4.1.2/../../../../i686-pc-linux-gnu/bin/ld: warning: creating a DT_TEXTREL in object.
rm -f librun.a
ar r librun.a errhandler.o init.o classes.o lookup.o backtrace.o new.o send.o process.o stack.o char.o float.o string.o symbol.o globals.o util.o interrupt.o statistic.o interpret.o plugin.o jinterpret.o mcompiler.o memory.o stxmain.o md5.o symlist.o malloc.o  asmhelp.o snapshot.o 
ar: creating librun.a
ranlib librun.a
Making modulList (PACK =  ) ...
LIBLIST= libbasic
ADDITIONAL_CLASSES= Consumer ProducerConsumer Tests
making modulList
   included class libraries:
     libbasic
   included additional (user) classes:
     Consumer
     ProducerConsumer
     Tests

making modulList.c from modulList.stc
done with classListEdit
done with modulList.c
gcc -c -I/opt/stx/include -DLINUX  -DELF  -fPIC -O -O3 -fomit-frame-pointer -march=pentium4   -DDEBUG -Di386 -DELF       -I/opt/stx/include modulList.c
done with modulList.o
linking ...
  symlinking to /opt/stx/libbasic/libbasic.so for linkage ...
  symlinking to /opt/stx/librun/librun.so for linkage ...
gcc  -Llib -L/usr/local/lib -L/usr/X11/lib -Wl,-R.,-Rlib,-R/opt/stx/`cat /opt/stx/RELEASE`/lib/lib,-R/usr/local/lib/stx`cat /opt/stx/RELEASE` -o message.stx_run \
		   modulList.o main.o \
		   \
		  libbasic.so Consumer.o ProducerConsumer.o Tests.o \
		  librun.so \
		   -lm    
touch message.stx_run

=================================================================
COMMAND LINE (%A is single numeric argument):

 message.stx_run/message.stx_run -- %A


PROGRAM OUTPUT
==============
7500000
