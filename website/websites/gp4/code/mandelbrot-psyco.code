<span class="kwc">import</span> sys<span class="sym">,</span> psyco

psyco<span class="sym">.</span><span class="kwd">full</span><span class="sym">()</span>

<span class="kwb">def</span> <span class="kwd">main</span><span class="sym">():</span>
    cout <span class="sym">=</span> sys<span class="sym">.</span>stdout<span class="sym">.</span>write
    bit_num <span class="sym">=</span> <span class="num">0</span>
    byte_acc <span class="sym">=</span> <span class="num">0</span>
    iter <span class="sym">=</span> <span class="num">50</span>
    limit2 <span class="sym">=</span> <span class="num">4</span><span class="sym">.</span>
    w <span class="sym">=</span> h <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>

    <span class="kwd">cout</span><span class="sym">(</span><span class="str">&quot;P4</span><span class="esc">\n</span><span class="str">%d %d</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">% (</span>w<span class="sym">,</span> h<span class="sym">))</span>

    <span class="kwb">for</span> y <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>h<span class="sym">):</span>
        fy <span class="sym">=</span> <span class="num">2</span>j <span class="sym">*</span> y <span class="sym">/</span> h <span class="sym">-</span> <span class="num">1</span>j
        <span class="kwb">for</span> x <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>w<span class="sym">):</span>
            z <span class="sym">=</span> <span class="num">0</span>j
            c <span class="sym">=</span> <span class="num">2</span><span class="sym">. *</span> x <span class="sym">/</span> w <span class="sym">-</span> <span class="num">1.5</span> <span class="sym">+</span> fy

            byte_acc <span class="sym">&lt;&lt;=</span> <span class="num">1</span>
            bit_num <span class="sym">+=</span> <span class="num">1</span>

            <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>iter<span class="sym">):</span>
                z <span class="sym">=</span> z <span class="sym">*</span> z <span class="sym">+</span> c
                <span class="kwb">if</span> z<span class="sym">.</span>real <span class="sym">*</span> z<span class="sym">.</span>real <span class="sym">+</span> z<span class="sym">.</span>imag <span class="sym">*</span> z<span class="sym">.</span>imag <span class="sym">&gt;</span> limit2<span class="sym">:</span>
                    <span class="kwb">break</span>
            <span class="kwb">else</span><span class="sym">:</span>
                byte_acc <span class="sym">+=</span> <span class="num">1</span>

            <span class="kwb">if</span> bit_num <span class="sym">==</span> <span class="num">8</span><span class="sym">:</span>
                <span class="kwd">cout</span><span class="sym">(</span><span class="kwa">chr</span><span class="sym">(</span>byte_acc<span class="sym">))</span>
                byte_acc <span class="sym">=</span> bit_num <span class="sym">=</span> <span class="num">0</span>
            <span class="kwb">elif</span> x <span class="sym">==</span> w <span class="sym">-</span> <span class="num">1</span><span class="sym">:</span>
                byte_acc <span class="sym">=</span> byte_acc <span class="sym">&lt;&lt; (</span><span class="num">8</span> <span class="sym">-</span> w <span class="sym">%</span> <span class="num">8</span><span class="sym">)</span>
                <span class="kwd">cout</span><span class="sym">(</span><span class="kwa">chr</span><span class="sym">(</span>byte_acc<span class="sym">))</span>
                byte_acc <span class="sym">=</span> bit_num <span class="sym">=</span> <span class="num">0</span>

<span class="kwd">main</span><span class="sym">()</span>
