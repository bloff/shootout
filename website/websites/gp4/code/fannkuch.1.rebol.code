REBOL <span class="hl sym">[</span>
	Title<span class="hl sym">:</span> <span class="hl str">&quot;fannkuch&quot;</span>
	Author<span class="hl sym">:</span> <span class="hl str">&quot;Robert Brandner&quot;</span>
<span class="hl sym">]</span>

n<span class="hl sym">:</span> either n<span class="hl sym">:</span> system<span class="hl sym">/</span>script<span class="hl sym">/</span>args <span class="hl sym">[</span>to integer<span class="hl sym">!</span> n<span class="hl sym">] [</span><span class="hl num">7</span><span class="hl sym">]</span>

times-rotated<span class="hl sym">:</span> make block<span class="hl sym">!</span> n
insert<span class="hl sym">/</span>dup times-rotated <span class="hl num">0</span> n
perm<span class="hl sym">:</span> make block<span class="hl sym">!</span> n
<span class="hl kwa">repeat</span> i n <span class="hl sym">[</span><span class="hl kwa">append</span> perm i<span class="hl sym">]</span>

next-permutation<span class="hl sym">:</span> does <span class="hl sym">[</span>
	for r <span class="hl num">2</span> n <span class="hl num">1</span> <span class="hl sym">[</span>
		<span class="hl slc">; rotate the first r items to the left</span>
		temp<span class="hl sym">:</span> pick perm <span class="hl num">1</span>
		for i <span class="hl num">1</span> <span class="hl sym">(</span>r - <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl num">1</span> <span class="hl sym">[</span>poke perm i <span class="hl sym">(</span>pick perm <span class="hl sym">(</span>i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">))]</span>
		poke perm r temp
		poke times-rotated r <span class="hl sym">((</span>pick times-rotated r<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">)</span>
		reminder<span class="hl sym">: (</span>pick times-rotated r<span class="hl sym">) //</span> r
		<span class="hl kwa">if</span> reminder <span class="hl sym">&lt;&gt;</span> <span class="hl num">0</span> <span class="hl sym">[</span>return perm<span class="hl sym">]</span>
	<span class="hl sym">]</span>
	return none
<span class="hl sym">]</span>

count-flips<span class="hl sym">:</span> does <span class="hl sym">[</span>
	pk<span class="hl sym">:</span> copy perm
	cnt<span class="hl sym">:</span> <span class="hl num">0</span>
	<span class="hl kwa">while</span> <span class="hl sym">[</span>pk<span class="hl sym">/</span><span class="hl num">1</span> <span class="hl sym">&lt;&gt;</span> <span class="hl num">1</span><span class="hl sym">][</span>
		<span class="hl kwa">reverse</span><span class="hl sym">/</span>part pk pk<span class="hl sym">/</span><span class="hl num">1</span>
		cnt<span class="hl sym">:</span> cnt <span class="hl sym">+</span> <span class="hl num">1</span>
	<span class="hl sym">]</span>
	return cnt
<span class="hl sym">]</span>

mx<span class="hl sym">:</span> <span class="hl num">0</span>
show<span class="hl sym">:</span> <span class="hl num">0</span>
<span class="hl kwa">while</span> <span class="hl sym">[</span>perm<span class="hl sym">] [</span>
	<span class="hl kwa">if</span> <span class="hl sym">(</span>show <span class="hl sym">&lt;</span> <span class="hl num">30</span><span class="hl sym">) [</span><span class="hl kwa">print</span> rejoin perm show<span class="hl sym">:</span> show <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">]</span>
	mx<span class="hl sym">:</span> <span class="hl kwa">max</span> mx count-flips
	perm<span class="hl sym">:</span> next-permutation
<span class="hl sym">]</span>
<span class="hl kwa">print</span> rejoin <span class="hl sym">[</span><span class="hl str">&quot;Pfannkuchen(&quot;</span> n <span class="hl str">&quot;) = &quot;</span> mx<span class="hl sym">]</span>
