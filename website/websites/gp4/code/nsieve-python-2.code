<span class="slc">#!/usr/bin/python</span>

<span class="slc"># The Great Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># Contributed by Tim Rowe</span>


<span class="kwc">import</span> sys
<span class="kwc">import</span> math

n <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">])</span>

<span class="kwb">for</span> run <span class="kwb">in</span> <span class="kwa">range</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> <span class="num">3</span><span class="sym">):</span>

    m <span class="sym">=</span> <span class="kwa">pow</span><span class="sym">(</span><span class="num">2</span><span class="sym">,</span> n <span class="sym">-</span> run<span class="sym">) *</span> <span class="num">10000</span>

    status <span class="sym">= [</span><span class="num">1</span><span class="sym">] * (</span>m <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> <span class="slc"># include entries for 0 and 1, to avoid</span>
                           <span class="slc"># offset calculations in loop</span>

    status<span class="sym">[</span><span class="num">0</span><span class="sym">:</span> <span class="num">2</span><span class="sym">] = [</span><span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">]</span> <span class="slc"># but 0 and 1 are not prime</span>

    limit <span class="sym">=</span> <span class="kwa">int</span><span class="sym">(</span>math<span class="sym">.</span><span class="kwd">floor</span><span class="sym">(</span>math<span class="sym">.</span><span class="kwd">sqrt</span><span class="sym">(</span>m<span class="sym">)))</span>
    <span class="kwb">for</span> i <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">2</span><span class="sym">,</span> limit<span class="sym">):</span>
        <span class="kwb">if</span> status<span class="sym">[</span>i<span class="sym">]:</span>
            <span class="kwb">for</span> j <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span><span class="num">2</span> <span class="sym">*</span> i<span class="sym">,</span> m <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> i<span class="sym">):</span>
                status<span class="sym">[</span>j<span class="sym">] =</span> <span class="num">0</span>

    <span class="kwb">print</span> <span class="str">&quot;Primes up to %8d: %8d&quot;</span> <span class="sym">% (</span>m<span class="sym">,</span> status<span class="sym">.</span><span class="kwd">count</span><span class="sym">(</span><span class="num">1</span><span class="sym">))</span>
