<span class="hl com">{ The Computer Language Benchmarks Game</span>
<span class="hl com">  http://shootout.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">  contributed by Ales Katona</span>
<span class="hl com">  modified by Vincent Snijders</span>
<span class="hl com">  modified by Steve Fisher</span>
<span class="hl com">}</span>

<span class="hl com">{$inline on}</span>
<span class="hl com">{$FPUTYPE SSE2}</span>
<span class="hl com">{$I-}</span>

<span class="hl kwa">var</span>
  n<span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">:</span> <span class="hl kwb">word</span><span class="hl sym">;</span>
  bits<span class="hl sym">,</span> bit<span class="hl sym">:</span> <span class="hl kwb">byte</span><span class="hl sym">;</span>
  c_x<span class="hl sym">,</span> c_y<span class="hl sym">:</span> <span class="hl kwb">double</span><span class="hl sym">;</span>

<span class="hl kwa">procedure</span> calc_point<span class="hl sym">;</span> <span class="hl kwa">inline</span><span class="hl sym">;</span>
<span class="hl kwa">const</span>
  limit<span class="hl sym">:</span> <span class="hl kwb">double</span> <span class="hl sym">=</span> <span class="hl num">4.0</span><span class="hl sym">;</span>
<span class="hl kwa">var</span>
  i<span class="hl sym">:</span> <span class="hl kwb">word</span><span class="hl sym">;</span>
  z_r<span class="hl sym">,</span> z_i<span class="hl sym">,</span> c_r<span class="hl sym">,</span> c_i<span class="hl sym">,</span> t_i<span class="hl sym">,</span> t_r<span class="hl sym">:</span> <span class="hl kwb">double</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
  c_r <span class="hl sym">:=</span> c_x<span class="hl sym">;</span>
  c_i <span class="hl sym">:=</span> c_y<span class="hl sym">;</span>
  z_r <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>  z_i <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>  t_r <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>  t_i <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
  <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl num">1</span> <span class="hl kwa">to</span> <span class="hl num">50</span> <span class="hl kwa">do</span>
  <span class="hl kwa">begin</span>
    z_i <span class="hl sym">:=</span> z_r<span class="hl sym">*</span>z_i<span class="hl sym">*</span><span class="hl num">2</span> <span class="hl sym">+</span> c_i<span class="hl sym">;</span>
    z_r <span class="hl sym">:=</span> t_r <span class="hl sym">-</span> t_i <span class="hl sym">+</span> c_r<span class="hl sym">;</span>
    t_i <span class="hl sym">:=</span> z_i <span class="hl sym">*</span> z_i<span class="hl sym">;</span>
    t_r <span class="hl sym">:=</span> z_r <span class="hl sym">*</span> z_r<span class="hl sym">;</span>
    <span class="hl kwa">if</span> t_r <span class="hl sym">+</span> t_i <span class="hl sym">&gt;=</span> limit <span class="hl kwa">then</span>
    <span class="hl kwa">begin</span>
      bits <span class="hl sym">:=</span> bits <span class="hl kwa">xor</span> bit<span class="hl sym">;</span>
      break
    <span class="hl kwa">end</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl com">{$FPUTYPE X87}</span>

<span class="hl kwa">begin</span>
  <span class="hl kwd">val</span><span class="hl sym">(</span><span class="hl kwd">ParamStr</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> n<span class="hl sym">);</span>

  <span class="hl kwd">writeln</span><span class="hl sym">(</span><span class="hl str">'P4'</span><span class="hl sym">);</span>
  <span class="hl kwd">writeln</span><span class="hl sym">(</span>n<span class="hl sym">,</span><span class="hl str">' '</span><span class="hl sym">,</span>n<span class="hl sym">);</span>
  <span class="hl kwa">for</span> y <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n<span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
  <span class="hl kwa">begin</span>
    c_y <span class="hl sym">:=</span> y <span class="hl sym">*</span> <span class="hl num">2</span> <span class="hl sym">/</span> n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
    bits <span class="hl sym">:=</span> <span class="hl num">255</span><span class="hl sym">;</span>
    bit <span class="hl sym">:=</span> <span class="hl num">128</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> x <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n<span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
    <span class="hl kwa">begin</span>
      c_x <span class="hl sym">:=</span> x <span class="hl sym">*</span> <span class="hl num">2</span> <span class="hl sym">/</span> n <span class="hl sym">-</span> <span class="hl num">1.5</span><span class="hl sym">;</span>

      calc_point<span class="hl sym">;</span>

      <span class="hl kwa">if</span> bit <span class="hl sym">&gt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span>
        bit <span class="hl sym">:=</span> bit <span class="hl kwa">shr</span> <span class="hl num">1</span>
      <span class="hl kwa">else</span>
      <span class="hl kwa">begin</span>
        <span class="hl kwd">write</span><span class="hl sym">(</span><span class="hl kwb">char</span><span class="hl sym">(</span>bits<span class="hl sym">));</span>
        bits <span class="hl sym">:=</span> <span class="hl num">255</span><span class="hl sym">;</span>
        bit <span class="hl sym">:=</span> <span class="hl num">128</span><span class="hl sym">;</span>
      <span class="hl kwa">end</span><span class="hl sym">;</span>
    <span class="hl kwa">end</span><span class="hl sym">;</span>
    <span class="hl kwa">if</span> bit <span class="hl sym">&lt;</span> <span class="hl num">128</span> <span class="hl kwa">then</span> <span class="hl kwd">write</span><span class="hl sym">(</span><span class="hl kwb">char</span><span class="hl sym">(</span>bits <span class="hl kwa">xor</span> <span class="hl sym">((</span>bit <span class="hl kwa">shl</span> <span class="hl num">1</span><span class="hl sym">)-</span><span class="hl num">1</span><span class="hl sym">)));</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl kwa">end</span><span class="hl sym">.</span>
