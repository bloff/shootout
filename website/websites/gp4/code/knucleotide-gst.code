<span class="com">&quot;* The Computer Language Shootout</span>
<span class="com"> http://shootout.alioth.debian.org/</span>
<span class="com"> contributed by Isaac Gouy *&quot;</span>

<span class="sym">!</span> FileStream methodsFor<span class="sym">:</span> <span class="str">'accessing'</span><span class="sym">!</span>

readFasta<span class="sym">:</span> anId
   <span class="sym">|</span> idString newline buffer description line char <span class="sym">|</span>
   idString <span class="sym">:=</span> <span class="str">'&gt;'</span><span class="sym">,</span>anId<span class="sym">.</span>
   newline <span class="sym">:=</span> Character nl<span class="sym">.</span>

   <span class="sym">[(</span><span class="kwa">self</span> atEnd<span class="sym">)</span> or<span class="sym">: [</span>
         <span class="sym">(</span><span class="kwa">self</span> peek <span class="sym">= $&gt;)</span>
            ifTrue<span class="sym">: [(</span>line <span class="sym">:=</span> <span class="kwa">self</span> nextLine<span class="sym">)</span> startsWith<span class="sym">:</span> idString<span class="sym">]</span>
            ifFalse<span class="sym">: [</span><span class="kwa">self</span> skipTo<span class="sym">:</span> newline<span class="sym">.</span> <span class="kwa">false</span><span class="sym">]]</span>
      <span class="sym">]</span> whileFalse<span class="sym">.</span>

   description <span class="sym">:=</span> line<span class="sym">.</span>
   buffer <span class="sym">:=</span> ByteStream on<span class="sym">: (</span>String new<span class="sym">:</span> <span class="num">1024</span><span class="sym">).</span>
   <span class="sym">[(</span><span class="kwa">self</span> atEnd<span class="sym">)</span> or<span class="sym">: [(</span>char <span class="sym">:=</span> <span class="kwa">self</span> peek<span class="sym">) = $&gt;]]</span> whileFalse<span class="sym">: [</span>
      <span class="sym">(</span>char <span class="sym">= $;)</span>
         ifTrue<span class="sym">: [</span><span class="kwa">self</span> nextLine<span class="sym">]</span>
         ifFalse<span class="sym">: [</span>buffer nextPutAll<span class="sym">:</span> <span class="kwa">self</span> nextLine<span class="sym">]</span>
      <span class="sym">].</span>

   <span class="sym">^</span>Association key<span class="sym">:</span> description value<span class="sym">:</span> buffer contents <span class="sym">! !</span>


<span class="sym">!</span> String methodsFor<span class="sym">:</span> <span class="str">'analysis'</span><span class="sym">!</span>

substringFrequencies<span class="sym">:</span> aLength
   <span class="sym">|</span> answer <span class="sym">|</span>
   answer <span class="sym">:=</span> Dictionary new<span class="sym">.</span>
   <span class="num">1</span> to<span class="sym">:</span> aLength do<span class="sym">: [:</span>i <span class="sym">|</span>
      <span class="kwa">self</span> inject<span class="sym">:</span> answer intoSubstringFrequencies<span class="sym">:</span> aLength offset<span class="sym">:</span> i<span class="sym">].</span>
   <span class="sym">^</span>answer <span class="sym">!</span>

inject<span class="sym">:</span> aDictionary intoSubstringFrequencies<span class="sym">:</span> aLength offset<span class="sym">:</span> anInteger
   anInteger to<span class="sym">:</span> <span class="kwa">self</span> size <span class="sym">-</span> aLength <span class="sym">+</span> <span class="num">1</span> by<span class="sym">:</span> aLength do<span class="sym">: [:</span>i <span class="sym">|</span>
      <span class="sym">|</span> fragment assoc <span class="sym">|</span>
      fragment <span class="sym">:=</span> <span class="kwa">self</span> copyFrom<span class="sym">:</span> i to<span class="sym">:</span> i <span class="sym">+</span> aLength <span class="sym">-</span> <span class="num">1</span><span class="sym">.</span>

      <span class="sym">(</span>assoc <span class="sym">:=</span> aDictionary associationAt<span class="sym">:</span> fragment ifAbsent<span class="sym">: [])</span> isNil
         ifTrue<span class="sym">: [</span>aDictionary at<span class="sym">:</span> fragment put<span class="sym">:</span> <span class="num">1</span><span class="sym">]</span>
         ifFalse<span class="sym">: [</span>assoc value<span class="sym">:</span> assoc value <span class="sym">+</span> <span class="num">1</span><span class="sym">] ] !</span>


<span class="sym">!</span>Float methodsFor<span class="sym">:</span> <span class="str">'printing'</span><span class="sym">!</span>

printStringRoundedTo<span class="sym">:</span> anInteger
   <span class="sym">|</span> n s <span class="sym">|</span>
   n <span class="sym">:=</span> <span class="num">0.5</span>d <span class="sym">* (</span><span class="num">10</span> raisedToInteger<span class="sym">:</span> anInteger negated<span class="sym">).</span>
   s <span class="sym">:= ((</span><span class="kwa">self</span> sign <span class="sym">&lt;</span> <span class="num">0</span><span class="sym">)</span> ifTrue<span class="sym">: [</span><span class="kwa">self</span> <span class="sym">-</span> n<span class="sym">]</span> ifFalse<span class="sym">: [</span><span class="kwa">self</span> <span class="sym">+</span> n<span class="sym">])</span> printString<span class="sym">.</span>
   <span class="sym">^</span>s copyFrom<span class="sym">:</span> <span class="num">1</span> to<span class="sym">: (</span>s indexOf<span class="sym">: $.) +</span> anInteger <span class="sym">! !</span>


<span class="sym">|</span> sequence writeFrequencies writeCount <span class="sym">|</span>
sequence <span class="sym">:= ((</span>FileStream stdin bufferSize<span class="sym">:</span> <span class="num">4096</span><span class="sym">)</span>
   readFasta<span class="sym">:</span> <span class="str">'THREE'</span><span class="sym">)</span> value asUppercase<span class="sym">.</span>

writeFrequencies <span class="sym">:= [:</span>k <span class="sym">| |</span> frequencies count <span class="sym">|</span>
   frequencies <span class="sym">:=</span> SortedCollection sortBlock<span class="sym">: [:</span>a <span class="sym">:</span>b<span class="sym">|</span>
      <span class="sym">(</span>a value <span class="sym">=</span> b value<span class="sym">)</span> ifTrue<span class="sym">: [</span>b key <span class="sym">&lt;</span> a key<span class="sym">]</span> ifFalse<span class="sym">: [</span>b value <span class="sym">&lt;</span> a value<span class="sym">]].</span>

   count <span class="sym">:=</span> <span class="num">0.0</span><span class="sym">.</span>
   <span class="sym">(</span>sequence substringFrequencies<span class="sym">:</span> k<span class="sym">)</span>
      associationsDo<span class="sym">: [:</span>each<span class="sym">|</span> frequencies add<span class="sym">:</span> each<span class="sym">.</span> count <span class="sym">:=</span> count <span class="sym">+</span> each value<span class="sym">].</span>

   frequencies do<span class="sym">: [:</span>each <span class="sym">| |</span> percentage <span class="sym">|</span>
      percentage <span class="sym">:= (</span>each value <span class="sym">/</span> count<span class="sym">) *</span> <span class="num">100.0</span><span class="sym">.</span>
      Transcript show<span class="sym">:</span> each key<span class="sym">;</span> space<span class="sym">;</span>
         show<span class="sym">: (</span>percentage printStringRoundedTo<span class="sym">:</span> <span class="num">3</span><span class="sym">);</span> nl<span class="sym">.</span>
      <span class="sym">].</span>
<span class="sym">].</span>

writeCount <span class="sym">:= [:</span>nucleotideFragment <span class="sym">| |</span> frequencies count <span class="sym">|</span>
   frequencies <span class="sym">:=</span> sequence substringFrequencies<span class="sym">:</span> nucleotideFragment size<span class="sym">.</span>
   count <span class="sym">:=</span> frequencies at<span class="sym">:</span> nucleotideFragment ifAbsent<span class="sym">: [</span><span class="num">0</span><span class="sym">].</span>
   Transcript show<span class="sym">:</span> count printString<span class="sym">;</span> tab<span class="sym">;</span> show<span class="sym">:</span> nucleotideFragment<span class="sym">;</span> nl
<span class="sym">].</span>

writeFrequencies value<span class="sym">:</span> <span class="num">1</span><span class="sym">.</span> Transcript nl<span class="sym">.</span>
writeFrequencies value<span class="sym">:</span> <span class="num">2</span><span class="sym">.</span> Transcript nl<span class="sym">.</span>

writeCount value<span class="sym">:</span> <span class="str">'GGT'</span><span class="sym">.</span>
writeCount value<span class="sym">:</span> <span class="str">'GGTA'</span><span class="sym">.</span>
writeCount value<span class="sym">:</span> <span class="str">'GGTATT'</span><span class="sym">.</span>
writeCount value<span class="sym">:</span> <span class="str">'GGTATTTTAATT'</span><span class="sym">.</span>
writeCount value<span class="sym">:</span> <span class="str">'GGTATTTTAATTTATAGT'</span> <span class="sym">!</span>
