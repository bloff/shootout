BUILD COMMANDS FOR: pidigits.sbcl-2.sbcl

Sat Jan  5 21:40:15 PST 2008

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /etc/sbclrc -batch -eval '(load "pidigits.sbcl-2.sbcl_compile")'
### START pidigits.sbcl-2.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "pidigits.sbcl-2.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END pidigits.sbcl-2.sbcl_compile

; loading system definition from
; /usr/share/common-lisp/systems/asdf-binary-locations.asd into
; #<PACKAGE "ASDF0">
; registering #<SYSTEM ASDF-BINARY-LOCATIONS {AE7DEF9}> as ASDF-BINARY-LOCATIONS

; compiling file "/home/dunham/gp4/shootout/bench/pidigits/tmp/pidigits.sbcl-2.sbcl" (written 05 JAN 2008 09:40:15 PM):
; compiling (DEFCONSTANT +DIGITS-PER-LINE+ ...)
; compiling (DEFCONSTANT +DEFAULT-STOP-DIGITS+ ...)
; compiling (DEFUN MAKE-DIGIT-GENERATOR ...)
; file: /home/dunham/gp4/shootout/bench/pidigits/tmp/pidigits.sbcl-2.sbcl
; in: DEFUN MAKE-DIGIT-GENERATOR
;     (* ZQ J)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

;     (+ (* ZQ J) ZR)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

;     (FLOOR (+ (* ZQ J) ZR) ZT)
; --> BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF AND IF 
; --> MINUSP 
; ==>
;   (< SB-KERNEL::DIVISOR 0)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       etc.

; ==>
;   (< NUMBER 0)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       etc.

; --> BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF AND IF AND IF 
; --> PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       etc.

; --> BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF VALUES 1- 
; ==>
;   (- SB-KERNEL::TRU 1)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; --> BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL FUNCTION IF VALUES 
; ==>
;   (+ REM SB-KERNEL::DIVISOR)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

;     (* AQ BQ)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

;     (* AQ BR)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

;     (* AR BT)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

;     (+ (* AQ BR) (* AR BT))
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

;     (* AT BT)
; 
; note: forced to do GENERIC-* (cost 30)
;       unable to do inline fixnum arithmetic (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The second argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The second argument is a INTEGER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES
;                                                          (SIGNED-BYTE 32) &REST
;                                                          T).
;       etc.

; compiling (DEFUN SPIGOT ...)
; file: /home/dunham/gp4/shootout/bench/pidigits/tmp/pidigits.sbcl-2.sbcl
; in: DEFUN SPIGOT
;     (INCF DIGITS-PRINTED +DIGITS-PER-LINE+)
; --> LET* 
; ==>
;   (+ DIGITS-PRINTED #:G18)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).

;     (INCF DIGITS-PRINTED DIGITS)
; --> LET* 
; ==>
;   (+ DIGITS-PRINTED #:G26)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).

;     (LOOP REPEAT +DIGITS-PER-LINE+ DO (FORMAT T "~d" (FUNCALL NEXT-DIGIT)))
; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; ==>
;   (TRUNCATE NUMBER SB-KERNEL::DIVISOR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a (OR SINGLE-FLOAT DOUBLE-FLOAT INTEGER).
; 
; note: unable to
;   convert division by 2^k to shift
; due to type uncertainty:
;   The first argument is a REAL, not a INTEGER.
;   The second argument is a REAL, not a INTEGER.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF AND IF NOT IF ZEROP 
; ==>
;   (= REM 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
; 
; note: unable to open code because: The operands might not be the same type.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF AND IF AND IF MINUSP 
; ==>
;   (< SB-KERNEL::DIVISOR 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; ==>
;   (< NUMBER 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF AND IF AND IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: unable to
;   open-code FLOAT to RATIONAL comparison
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF VALUES 
; ==>
;   (- REM SB-KERNEL::DIVISOR)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a RATIONAL.
;   The second argument is a REAL, not a FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a FLOAT.
;   The second argument is a REAL, not a RATIONAL.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a SINGLE-FLOAT.
;   The second argument is a REAL, not a DOUBLE-FLOAT.
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a REAL, not a DOUBLE-FLOAT.
;   The second argument is a REAL, not a SINGLE-FLOAT.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF AND IF AND IF MINUSP 
; ==>
;   (< SB-KERNEL::DIVISOR 0)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF AND IF AND IF PLUSP 
; ==>
;   (> NUMBER 0)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF AND IF AND IF MINUSP 
; ==>
;   (< NUMBER 0)
; 
; note: forced to do GENERIC-< (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a REAL, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a REAL, not a FIXNUM.
;       etc.

; --> BLOCK LET CEILING CEILING BLOCK MULTIPLE-VALUE-BIND MULTIPLE-VALUE-CALL 
; --> FUNCTION IF VALUES 
; ==>
;   (+ SB-KERNEL::TRU 1)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       The result is a (VALUES INTEGER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; ==>
;   (- REM SB-KERNEL::DIVISOR)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a REAL, not a DOUBLE-FLOAT.
;       The second argument is a REAL, not a DOUBLE-FLOAT.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES DOUBLE-FLOAT &REST
;                                                              T).
;       unable to do inline float arithmetic (cost 2) because:
;       The first argument is a REAL, not a SINGLE-FLOAT.
;       The second argument is a REAL, not a SINGLE-FLOAT.
;       The result is a (VALUES REAL &OPTIONAL), not a (VALUES SINGLE-FLOAT &REST
;                                                              T).
;       etc.

;     (LOOP REPEAT DIGITS DO (FORMAT T "~d" (FUNCALL NEXT-DIGIT)))
; --> BLOCK LET SB-LOOP::LOOP-BODY TAGBODY IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       etc.

; --> BLOCK LET SB-LOOP::LOOP-BODY TAGBODY IF DECF LET* 
; ==>
;   (- #:LOOP-REPEAT-19 #:G21)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       etc.

;     (LOOP REPEAT (- +DIGITS-PER-LINE+ DIGITS) DO (FORMAT T " "))
; --> BLOCK LET SB-LOOP::LOOP-BODY TAGBODY IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       etc.

; --> BLOCK LET SB-LOOP::LOOP-BODY TAGBODY IF DECF LET* 
; ==>
;   (- #:LOOP-REPEAT-22 #:G24)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       etc.

;     (INCF DIGITS-PRINTED DIGITS)
; --> LET* 
; ==>
;   (+ DIGITS-PRINTED #:G26)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline (signed-byte 32) arithmetic (cost 5) because:
;       The first argument is a NUMBER, not a (SIGNED-BYTE 32).
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES (SIGNED-BYTE 32)
;                                                                &REST T).
;       etc.

;     (LOOP REPEAT +DIGITS-PER-LINE+ DO (FORMAT T "~d" (FUNCALL NEXT-DIGIT)))
; --> BLOCK LET SB-LOOP::LOOP-BODY TAGBODY IF <= IF 
; ==>
;   (> SB-C::X SB-C::Y)
; 
; note: forced to do GENERIC-> (cost 10)
;       unable to do inline fixnum comparison (cost 3) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       unable to do inline fixnum comparison (cost 4) because:
;       The first argument is a INTEGER, not a FIXNUM.
;       etc.

; --> BLOCK LET SB-LOOP::LOOP-BODY TAGBODY IF DECF LET* 
; ==>
;   (- #:LOOP-REPEAT-11 #:G13)
; 
; note: forced to do GENERIC-- (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a (INTEGER 1), not a FIXNUM.
;       The result is a (VALUES UNSIGNED-BYTE &OPTIONAL), not a (VALUES FIXNUM
;                                                                       &REST T).
;       etc.

;     (INCF DIGITS-PRINTED +DIGITS-PER-LINE+)
; --> LET* 
; ==>
;   (+ DIGITS-PRINTED #:G18)
; 
; note: forced to do GENERIC-+ (cost 10)
;       unable to do inline fixnum arithmetic (cost 1) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       unable to do inline fixnum arithmetic (cost 2) because:
;       The first argument is a NUMBER, not a FIXNUM.
;       The result is a (VALUES NUMBER &OPTIONAL), not a (VALUES FIXNUM &REST T).
;       etc.

; compiling (DEFUN MAIN ...); 
; compilation unit finished
;   printed 42 notes


; /home/dunham/gp4/shootout/bench/pidigits/tmp/pidigits.sbcl-2.fasl written
; compilation finished in 0:00:01
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /home/dunham/gp4/shootout/bench/pidigits/tmp/sbcl.core:
writing 1912 bytes from the read-only space at 0x01000000
writing 2160 bytes from the static space at 0x01100000
writing 24862720 bytes from the dynamic space at 0x09000000
done]
### START pidigits.sbcl-2.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END pidigits.sbcl-2.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /etc/sbclrc --load pidigits.sbcl-2.sbcl_run %A
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "dev")
              :NAME "notes.text"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "notes.text" {A72C481}> as done.
WARNING:
   Missing FILE-WRITE-DATE for
   #<PATHNAME (with no namestring)
              :HOST #<SB-IMPL::UNIX-HOST {90116E1}>
              :DEVICE NIL
              :DIRECTORY (:ABSOLUTE "usr" "share" "common-lisp" "source"
                          "asdf-binary-locations" "website" "source")
              :NAME "index.lml"
              :TYPE NIL
              :VERSION :NEWEST>:
   treating operation #<ASDF:COMPILE-OP NIL {A7F0289}> on component
   #<ASDF:STATIC-FILE "index.lml" {A772579}> as done.
STYLE-WARNING: redefining LISP-VERSION-STRING in DEFUN
STYLE-WARNING: redefining IMPLEMENTATION-SPECIFIC-DIRECTORY-NAME in DEFUN
STYLE-WARNING: redefining PATHNAME-PREFIX-P in DEFUN
STYLE-WARNING: redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-FOR-SYSTEM-AND-OPERATION (#<STANDARD-CLASS SYSTEM>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>
                                                     #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining OUTPUT-FILES-USING-MAPPINGS in DEFGENERIC
STYLE-WARNING:
   redefining OUTPUT-FILES-USING-MAPPINGS (#<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>
                                           #<BUILT-IN-CLASS T>) in DEFMETHOD
STYLE-WARNING:
   redefining OUTPUT-FILES :AROUND (#<STANDARD-CLASS COMPILE-OP>
                                    #<STANDARD-CLASS SOURCE-FILE>) in DEFMETHOD


PROGRAM OUTPUT
==============
3141592653	:10
5897932384	:20
6264338327	:30
9502884197	:40
1693993751	:50
0582097494	:60
4592307816	:70
4062862089	:80
9862803482	:90
5342117067	:100
9821480865	:110
1328230664	:120
7093844609	:130
5505822317	:140
2535940812	:150
8481117450	:160
2841027019	:170
3852110555	:180
9644622948	:190
9549303819	:200
6442881097	:210
5665933446	:220
1284756482	:230
3378678316	:240
5271201909	:250
1456485669	:260
2346034861	:270
0454326648	:280
2133936072	:290
6024914127	:300
3724587006	:310
6063155881	:320
7488152092	:330
0962829254	:340
0917153643	:350
6789259036	:360
0011330530	:370
5488204665	:380
2138414695	:390
1941511609	:400
4330572703	:410
6575959195	:420
3092186117	:430
3819326117	:440
9310511854	:450
8074462379	:460
9627495673	:470
5188575272	:480
4891227938	:490
1830119491	:500
===================================
!!! Note: Truncated to 50 lines !!!
===================================
