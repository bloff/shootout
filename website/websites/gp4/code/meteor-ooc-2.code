<span class="com">(* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org</span>
<span class="com">   contributed by Isaac Gouy (Oberon-2 novice)</span>
<span class="com">*)</span>


<span class="kwa">MODULE</span> meteor<span class="sym">;</span>
<span class="kwa">IMPORT</span> Shootout<span class="sym">,</span> Out<span class="sym">;</span>

<span class="kwa">CONST</span>
   NW <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span> NE <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span> W <span class="sym">=</span> <span class="num">2</span><span class="sym">;</span> E <span class="sym">=</span> <span class="num">3</span><span class="sym">;</span> SW <span class="sym">=</span> <span class="num">4</span><span class="sym">;</span> SE <span class="sym">=</span> <span class="num">5</span><span class="sym">;</span>
   SIDES <span class="sym">=</span> <span class="num">6</span><span class="sym">;</span>

   BOARD_COLS <span class="sym">=</span> <span class="num">5</span><span class="sym">;</span>
   BOARD_ROWS <span class="sym">=</span> <span class="num">10</span><span class="sym">;</span>
   BOARD_SIZE <span class="sym">=</span> BOARD_COLS <span class="sym">*</span> BOARD_ROWS<span class="sym">;</span>

   PIECES <span class="sym">=</span> <span class="num">10</span><span class="sym">;</span>
   PIECE_SIZE <span class="sym">=</span> <span class="num">5</span><span class="sym">;</span>
   PIECE_ROTATIONS <span class="sym">=</span> SIDES<span class="sym">;</span>
   PIECE_FLIPS <span class="sym">=</span> <span class="num">2</span><span class="sym">;</span>
   PIECE_ORIENTATIONS <span class="sym">=</span> PIECE_ROTATIONS <span class="sym">*</span> PIECE_FLIPS<span class="sym">;</span>


<span class="kwa">TYPE</span>
   Cell <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> CellDesc<span class="sym">;</span>
   CellDesc <span class="sym">=</span>
      <span class="kwa">RECORD</span>
         marked <span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>

   PieceCell <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> PieceCellDesc<span class="sym">;</span>
   PieceCellDesc <span class="sym">=</span>
      <span class="kwa">RECORD</span> <span class="sym">(</span>CellDesc<span class="sym">)</span>
         next <span class="sym">:</span> <span class="kwa">ARRAY</span> SIDES <span class="kwa">OF</span> PieceCell<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>

   PieceShape <span class="sym">=</span> <span class="kwa">ARRAY</span> PIECE_SIZE <span class="kwa">OF</span> PieceCell<span class="sym">;</span>
   PieceCache <span class="sym">=</span> <span class="kwa">ARRAY</span> PIECE_ORIENTATIONS <span class="kwa">OF</span> PieceShape<span class="sym">;</span>

   Piece <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> PieceDesc<span class="sym">;</span>
   PieceDesc <span class="sym">=</span>
      <span class="kwa">RECORD</span>
         number <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
         orientation <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
         cache <span class="sym">:</span> PieceCache<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>

   BoardCell <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> BoardCellDesc<span class="sym">;</span>
   BoardCellDesc <span class="sym">=</span>
      <span class="kwa">RECORD</span> <span class="sym">(</span>CellDesc<span class="sym">)</span>
         next <span class="sym">:</span> <span class="kwa">ARRAY</span> SIDES <span class="kwa">OF</span> BoardCell<span class="sym">;</span>
         number <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
         piece<span class="sym">:</span> Piece<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>


   BoardPieceShape <span class="sym">=</span> <span class="kwa">ARRAY</span> PIECE_SIZE <span class="kwa">OF</span> BoardCell<span class="sym">;</span>
   BoardPiece <span class="sym">=</span> <span class="kwb">POINTER</span> <span class="kwa">TO</span> BoardPieceShape<span class="sym">;</span>
   BoardCache <span class="sym">=</span> <span class="kwa">ARRAY</span>
      PIECES<span class="sym">,</span> PIECE_ORIENTATIONS<span class="sym">,</span> PIECE_SIZE<span class="sym">,</span> BOARD_SIZE <span class="kwa">OF</span> BoardPiece<span class="sym">;</span>

   Board <span class="sym">=</span>
      <span class="kwa">RECORD</span>
         cells <span class="sym">:</span> <span class="kwa">ARRAY</span> BOARD_SIZE <span class="kwa">OF</span> BoardCell<span class="sym">;</span>
         cellsPieceWillFill <span class="sym">:</span> BoardPieceShape<span class="sym">;</span>
         cellCount <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
         cache <span class="sym">:</span> BoardCache<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>

   BoardPieces <span class="sym">=</span> <span class="kwa">ARRAY</span> BOARD_SIZE <span class="kwa">OF</span> <span class="kwb">LONGINT</span><span class="sym">;</span>


<span class="kwa">VAR</span>
   countdown<span class="sym">,</span> n <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   board <span class="sym">:</span> Board<span class="sym">;</span>
   pieces <span class="sym">:</span> <span class="kwa">ARRAY</span> PIECES <span class="kwa">OF</span> Piece<span class="sym">;</span>
   unplaced <span class="sym">:</span> <span class="kwb">SET</span><span class="sym">;</span>
   first<span class="sym">,</span> last<span class="sym">,</span> current<span class="sym">:</span> BoardPieces<span class="sym">;</span>
   once <span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
   noFit <span class="sym">:</span> BoardPiece<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> Cell<span class="sym">)</span> <span class="kwd">Initialize</span> <span class="sym">();</span> <span class="kwa">BEGIN</span> c<span class="sym">.</span>marked <span class="sym">:=</span> FALSE<span class="sym">;</span> <span class="kwa">END</span> Initialize<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> Cell<span class="sym">)</span> <span class="kwd">Mark</span> <span class="sym">();</span> <span class="kwa">BEGIN</span> c<span class="sym">.</span>marked <span class="sym">:=</span> TRUE<span class="sym">;</span> <span class="kwa">END</span> Mark<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> Cell<span class="sym">)</span> <span class="kwd">Unmark</span> <span class="sym">();</span> <span class="kwa">BEGIN</span> c<span class="sym">.</span>marked <span class="sym">:=</span> FALSE<span class="sym">;</span> <span class="kwa">END</span> Unmark<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> BoardCell<span class="sym">)</span> <span class="kwd">Number</span> <span class="sym">(</span>i<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">);</span>
<span class="kwa">BEGIN</span> c<span class="sym">.</span>marked <span class="sym">:=</span> FALSE<span class="sym">;</span> c<span class="sym">.</span>number <span class="sym">:=</span> i<span class="sym">;</span> <span class="kwa">END</span> Number<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> BoardCell<span class="sym">)</span> <span class="kwd">Empty</span> <span class="sym">();</span> <span class="kwa">BEGIN</span> c<span class="sym">.</span>piece <span class="sym">:=</span> <span class="kwa">NIL</span><span class="sym">;</span> <span class="kwa">END</span> Empty<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> BoardCell<span class="sym">)</span> <span class="kwd">IsEmpty</span> <span class="sym">() :</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
<span class="kwa">BEGIN RETURN</span> c<span class="sym">.</span>piece <span class="sym">=</span> <span class="kwa">NIL</span><span class="sym">;</span> <span class="kwa">END</span> IsEmpty<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> BoardCell<span class="sym">)</span> <span class="kwd">ContiguousEmptyCells</span> <span class="sym">() :</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">VAR</span>
   count<span class="sym">,</span> i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   neighbour <span class="sym">:</span> BoardCell<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">IF</span> ~c<span class="sym">.</span>marked <span class="sym">&amp;</span> c<span class="sym">.</span><span class="kwd">IsEmpty</span><span class="sym">()</span> <span class="kwa">THEN</span>
      c<span class="sym">.</span><span class="kwd">Mark</span><span class="sym">();</span>
      count <span class="sym">:=</span> <span class="num">1</span><span class="sym">;</span>
      <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> SIDES <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
         neighbour <span class="sym">:=</span> c<span class="sym">.</span>next<span class="sym">[</span>i<span class="sym">];</span>
         <span class="kwa">IF</span> <span class="sym">(</span>neighbour # <span class="kwa">NIL</span><span class="sym">) &amp;</span> neighbour<span class="sym">.</span><span class="kwd">IsEmpty</span><span class="sym">()</span> <span class="kwa">THEN</span>
            <span class="kwa">INC</span><span class="sym">(</span>count<span class="sym">,</span> neighbour<span class="sym">.</span><span class="kwd">ContiguousEmptyCells</span><span class="sym">());</span>
         <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">ELSE</span>
      count <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">RETURN</span> count<span class="sym">;</span>
<span class="kwa">END</span> ContiguousEmptyCells<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> PieceCell<span class="sym">)</span> <span class="kwd">Flip</span> <span class="sym">();</span>
<span class="kwa">VAR</span>
   swap <span class="sym">:</span> PieceCell<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   swap <span class="sym">:=</span> c<span class="sym">.</span>next<span class="sym">[</span>NE<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>NW<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> swap<span class="sym">;</span>

   swap <span class="sym">:=</span> c<span class="sym">.</span>next<span class="sym">[</span>E<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>E<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>W<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>W<span class="sym">] :=</span> swap<span class="sym">;</span>

   swap <span class="sym">:=</span> c<span class="sym">.</span>next<span class="sym">[</span>SE<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>SW<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> swap<span class="sym">;</span>
<span class="kwa">END</span> Flip<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>c<span class="sym">:</span> PieceCell<span class="sym">)</span> <span class="kwd">Rotate</span> <span class="sym">();</span>
<span class="kwa">VAR</span>
   swap <span class="sym">:</span> PieceCell<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   swap <span class="sym">:=</span> c<span class="sym">.</span>next<span class="sym">[</span>E<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>E<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>NE<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>NW<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>W<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>W<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>SW<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> c<span class="sym">.</span>next<span class="sym">[</span>SE<span class="sym">];</span>
   c<span class="sym">.</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> swap<span class="sym">;</span>
<span class="kwa">END</span> Rotate<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make0</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make0<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make1</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make1<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make2</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make2<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make3</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make3<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make4</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make4<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make5</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make5<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make6</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make6<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make7</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make7<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make8</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
<span class="kwa">END</span> Make8<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Make9</span> <span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> PieceShape<span class="sym">);</span>
<span class="kwa">BEGIN</span>
   a<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">1</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">2</span><span class="sym">].</span>next<span class="sym">[</span>E<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>W<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">4</span><span class="sym">].</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   a<span class="sym">[</span><span class="num">3</span><span class="sym">].</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> a<span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
<span class="kwa">END</span> Make9<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Initialize</span> <span class="sym">(</span>n<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">);</span>
<span class="kwa">VAR</span>
   i<span class="sym">,</span> j<span class="sym">,</span> k <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   c <span class="sym">:</span> PieceCell<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   p<span class="sym">.</span>orientation <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
   p<span class="sym">.</span>number <span class="sym">:=</span> n<span class="sym">;</span>

   <span class="kwa">FOR</span> k <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_ORIENTATIONS <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
      <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
         <span class="kwa">NEW</span><span class="sym">(</span>c<span class="sym">);</span> c<span class="sym">.</span><span class="kwd">Initialize</span><span class="sym">();</span>p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">][</span>i<span class="sym">] :=</span> c<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>

      <span class="kwa">CASE</span> n <span class="kwa">OF</span>
         <span class="num">0</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make0</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">1</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make1</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">2</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make2</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">3</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make3</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">4</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make4</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">5</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make5</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">6</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make6</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">7</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make7</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">8</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make8</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="sym">|</span>  <span class="num">9</span> <span class="sym">:</span> p<span class="sym">.</span><span class="kwd">Make9</span><span class="sym">(</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">] );</span>
      <span class="kwa">END</span><span class="sym">;</span>

      <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> k <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
         <span class="kwa">IF</span> <span class="sym">(</span>i <span class="kwa">MOD</span> PIECE_ROTATIONS<span class="sym">) =</span> <span class="num">0</span> <span class="kwa">THEN</span>
            <span class="kwa">FOR</span> j <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">][</span>j<span class="sym">].</span><span class="kwd">Flip</span><span class="sym">();</span> <span class="kwa">END</span><span class="sym">;</span>
         <span class="kwa">ELSE</span>
            <span class="kwa">FOR</span> j <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span> p<span class="sym">.</span>cache<span class="sym">[</span>k<span class="sym">][</span>j<span class="sym">].</span><span class="kwd">Rotate</span><span class="sym">();</span> <span class="kwa">END</span><span class="sym">;</span>
         <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
<span class="kwa">END</span> Initialize<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">Unmark</span> <span class="sym">();</span>
<span class="kwa">VAR</span> i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span> p<span class="sym">.</span>cache<span class="sym">[</span>p<span class="sym">.</span>orientation<span class="sym">][</span>i<span class="sym">].</span><span class="kwd">Unmark</span><span class="sym">();</span> <span class="kwa">END</span><span class="sym">;</span>
<span class="kwa">END</span> Unmark<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">NextOrientation</span> <span class="sym">() :</span> Piece<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   p<span class="sym">.</span>orientation <span class="sym">:= (</span>p<span class="sym">.</span>orientation <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> <span class="kwa">MOD</span> PIECE_ORIENTATIONS<span class="sym">;</span>
   <span class="kwa">RETURN</span> p<span class="sym">;</span>
<span class="kwa">END</span> NextOrientation<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">)</span> <span class="kwd">cells</span> <span class="sym">(</span>i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">) :</span> PieceCell<span class="sym">;</span>
<span class="kwa">BEGIN RETURN</span> p<span class="sym">.</span>cache<span class="sym">[</span>p<span class="sym">.</span>orientation<span class="sym">][</span>i<span class="sym">];</span> <span class="kwa">END</span> cells<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span><span class="kwa">VAR</span> b<span class="sym">:</span> Board<span class="sym">)</span> <span class="kwd">Initialize</span> <span class="sym">();</span>
<span class="kwa">VAR</span>
   i<span class="sym">,</span> row<span class="sym">,</span> m <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   c <span class="sym">:</span> BoardCell<span class="sym">;</span>
   isFirst<span class="sym">,</span> isLast <span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
<span class="kwa">BEGIN</span>
   b<span class="sym">.</span>cellCount <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>

   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
      <span class="kwa">NEW</span><span class="sym">(</span>c<span class="sym">);</span> c<span class="sym">.</span><span class="kwd">Number</span><span class="sym">(</span>i<span class="sym">);</span> b<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">] :=</span> c<span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>

   m <span class="sym">:= (</span>BOARD_SIZE <span class="kwa">DIV</span> BOARD_COLS<span class="sym">) -</span> <span class="num">1</span><span class="sym">;</span>

   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
      row <span class="sym">:=</span> i <span class="kwa">DIV</span> BOARD_COLS<span class="sym">;</span>
      isFirst <span class="sym">:=</span> i <span class="kwa">MOD</span> BOARD_COLS <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
      isLast <span class="sym">:= (</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">MOD</span> BOARD_COLS <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
      c <span class="sym">:=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">];</span>

      <span class="kwa">IF ODD</span><span class="sym">(</span>row<span class="sym">)</span> <span class="kwa">THEN</span>
         <span class="kwa">IF</span> ~isLast <span class="kwa">THEN</span>
            c<span class="sym">.</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">- (</span>BOARD_COLS <span class="sym">-</span> <span class="num">1</span><span class="sym">)];</span>
         <span class="kwa">END</span><span class="sym">;</span>
         c<span class="sym">.</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">-</span> BOARD_COLS<span class="sym">];</span>

         <span class="kwa">IF</span> row # m <span class="kwa">THEN</span>
            <span class="kwa">IF</span> ~isLast <span class="kwa">THEN</span>
               c<span class="sym">.</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">+</span> BOARD_COLS <span class="sym">+</span> <span class="num">1</span><span class="sym">];</span>
            <span class="kwa">END</span><span class="sym">;</span>
            c<span class="sym">.</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">+</span> BOARD_COLS<span class="sym">];</span>
         <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">ELSE</span>
         <span class="kwa">IF</span> row # <span class="num">0</span> <span class="kwa">THEN</span>
            <span class="kwa">IF</span> ~isFirst <span class="kwa">THEN</span>
               c<span class="sym">.</span>next<span class="sym">[</span>NW<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">- (</span>BOARD_COLS <span class="sym">+</span> <span class="num">1</span><span class="sym">)];</span>
            <span class="kwa">END</span><span class="sym">;</span>
            c<span class="sym">.</span>next<span class="sym">[</span>NE<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">-</span> BOARD_COLS<span class="sym">];</span>
         <span class="kwa">END</span><span class="sym">;</span>

         <span class="kwa">IF</span> row # m <span class="kwa">THEN</span>
            <span class="kwa">IF</span> ~isFirst <span class="kwa">THEN</span>
               c<span class="sym">.</span>next<span class="sym">[</span>SW<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">+ (</span>BOARD_COLS <span class="sym">-</span> <span class="num">1</span><span class="sym">)];</span>
            <span class="kwa">END</span><span class="sym">;</span>
            c<span class="sym">.</span>next<span class="sym">[</span>SE<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">+</span> BOARD_COLS<span class="sym">];</span>
         <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">IF</span> ~isFirst <span class="kwa">THEN</span> c<span class="sym">.</span>next<span class="sym">[</span>W<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">-</span> <span class="num">1</span><span class="sym">];</span> <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">IF</span> ~isLast <span class="kwa">THEN</span> c<span class="sym">.</span>next<span class="sym">[</span>E<span class="sym">] :=</span> b<span class="sym">.</span>cells<span class="sym">[</span>i <span class="sym">+</span> <span class="num">1</span><span class="sym">];</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
<span class="kwa">END</span> Initialize<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span><span class="kwa">VAR</span> b<span class="sym">:</span> Board<span class="sym">)</span> <span class="kwd">Unmark</span> <span class="sym">();</span>
<span class="kwa">VAR</span> i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">BEGIN FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span> b<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">].</span><span class="kwd">Unmark</span><span class="sym">();</span> <span class="kwa">END</span><span class="sym">;</span> <span class="kwa">END</span> Unmark<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span><span class="kwa">VAR</span> b<span class="sym">:</span> Board<span class="sym">)</span> <span class="kwd">FirstEmptyCellIndex</span> <span class="sym">() :</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">VAR</span> i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
      <span class="kwa">IF</span> b<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">].</span><span class="kwd">IsEmpty</span><span class="sym">()</span> <span class="kwa">THEN RETURN</span> i<span class="sym">;</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">RETURN</span> <span class="sym">-</span><span class="num">1</span><span class="sym">;</span>
<span class="kwa">END</span> FirstEmptyCellIndex<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span><span class="kwa">VAR</span> b<span class="sym">:</span> Board<span class="sym">)</span> <span class="kwd">Remove</span> <span class="sym">(</span>p<span class="sym">:</span> Piece<span class="sym">);</span>
<span class="kwa">VAR</span> i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
      <span class="kwa">IF</span> b<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">].</span>piece <span class="sym">=</span> p <span class="kwa">THEN</span> b<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">].</span>piece <span class="sym">:=</span> <span class="kwa">NIL</span><span class="sym">;</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
<span class="kwa">END</span> Remove<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span><span class="kwa">VAR</span> b<span class="sym">:</span> Board<span class="sym">)</span> <span class="kwd">Find</span> <span class="sym">(</span>p<span class="sym">:</span> PieceCell<span class="sym">;</span> c<span class="sym">:</span> BoardCell<span class="sym">);</span>
<span class="kwa">VAR</span> i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">IF</span> <span class="sym">(</span>p # <span class="kwa">NIL</span><span class="sym">) &amp;</span> ~p<span class="sym">.</span>marked <span class="sym">&amp; (</span>c # <span class="kwa">NIL</span><span class="sym">)</span> <span class="kwa">THEN</span>
      b<span class="sym">.</span>cellsPieceWillFill<span class="sym">[</span>b<span class="sym">.</span>cellCount<span class="sym">] :=</span> c<span class="sym">;</span>
      <span class="kwa">INC</span><span class="sym">(</span>b<span class="sym">.</span>cellCount<span class="sym">);</span>
      p<span class="sym">.</span><span class="kwd">Mark</span><span class="sym">();</span>
      <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> SIDES <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
         b<span class="sym">.</span><span class="kwd">Find</span><span class="sym">(</span>p<span class="sym">.</span>next<span class="sym">[</span>i<span class="sym">],</span>c<span class="sym">.</span>next<span class="sym">[</span>i<span class="sym">]);</span>
      <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
<span class="kwa">END</span> Find<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="sym">(</span><span class="kwa">VAR</span> b<span class="sym">:</span> Board<span class="sym">)</span> <span class="kwd">Add</span> <span class="sym">(</span>
      pieceIndex<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span> boardIndex<span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span> p<span class="sym">:</span> Piece<span class="sym">) :</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
<span class="kwa">VAR</span>
   i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   a <span class="sym">:</span> BoardPiece<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   a <span class="sym">:=</span> b<span class="sym">.</span>cache<span class="sym">[</span>p<span class="sym">.</span>number<span class="sym">][</span>p<span class="sym">.</span>orientation<span class="sym">][</span>pieceIndex<span class="sym">][</span>boardIndex<span class="sym">];</span>

   b<span class="sym">.</span>cellCount <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
   p<span class="sym">.</span><span class="kwd">Unmark</span><span class="sym">();</span>

   <span class="kwa">IF</span> a <span class="sym">=</span> <span class="kwa">NIL THEN</span>
      b<span class="sym">.</span><span class="kwd">Find</span><span class="sym">(</span>p<span class="sym">.</span><span class="kwd">cells</span><span class="sym">(</span>pieceIndex<span class="sym">),</span> b<span class="sym">.</span>cells<span class="sym">[</span>boardIndex<span class="sym">]);</span>

      <span class="kwa">IF</span> b<span class="sym">.</span>cellCount # PIECE_SIZE <span class="kwa">THEN</span>
         b<span class="sym">.</span>cache<span class="sym">[</span>p<span class="sym">.</span>number<span class="sym">][</span>p<span class="sym">.</span>orientation<span class="sym">][</span>pieceIndex<span class="sym">][</span>boardIndex<span class="sym">] :=</span> noFit<span class="sym">;</span>
         <span class="kwa">RETURN</span> FALSE<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>

      <span class="kwa">NEW</span><span class="sym">(</span>a<span class="sym">);</span>
      <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span> a<span class="sym">[</span>i<span class="sym">] :=</span> b<span class="sym">.</span>cellsPieceWillFill<span class="sym">[</span>i<span class="sym">];</span> <span class="kwa">END</span><span class="sym">;</span>
      b<span class="sym">.</span>cache<span class="sym">[</span>p<span class="sym">.</span>number<span class="sym">][</span>p<span class="sym">.</span>orientation<span class="sym">][</span>pieceIndex<span class="sym">][</span>boardIndex<span class="sym">] :=</span> a<span class="sym">;</span>
   <span class="kwa">ELSE</span>
      <span class="kwa">IF</span> a <span class="sym">=</span> noFit <span class="kwa">THEN RETURN</span> FALSE<span class="sym">;</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
      <span class="kwa">IF</span> ~a<span class="sym">[</span>i<span class="sym">].</span><span class="kwd">IsEmpty</span><span class="sym">()</span> <span class="kwa">THEN RETURN</span> FALSE<span class="sym">;</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>

   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span> a<span class="sym">[</span>i<span class="sym">].</span>piece <span class="sym">:=</span> p<span class="sym">;</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">RETURN</span> TRUE<span class="sym">;</span>
<span class="kwa">END</span> Add<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="kwd">Initialize</span> <span class="sym">();</span>
<span class="kwa">VAR</span>
   i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   p <span class="sym">:</span> Piece<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   board<span class="sym">.</span><span class="kwd">Initialize</span><span class="sym">();</span>
   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO LEN</span><span class="sym">(</span>pieces<span class="sym">) -</span> <span class="num">1</span> <span class="kwa">DO</span>
      <span class="kwa">NEW</span><span class="sym">(</span>p<span class="sym">);</span> p<span class="sym">.</span><span class="kwd">Initialize</span><span class="sym">(</span>i<span class="sym">);</span> pieces<span class="sym">[</span>i<span class="sym">] :=</span> p<span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
   unplaced <span class="sym">:= {</span><span class="num">0</span><span class="sym">..</span><span class="kwa">LEN</span><span class="sym">(</span>pieces<span class="sym">)-</span><span class="num">1</span><span class="sym">};</span>
   once <span class="sym">:=</span> TRUE<span class="sym">;</span>
   <span class="kwa">NEW</span><span class="sym">(</span>noFit<span class="sym">);</span>
<span class="kwa">END</span> Initialize<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="kwd">UpdateFirstLast</span> <span class="sym">();</span>
<span class="kwa">VAR</span>
   i<span class="sym">,</span> n <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   lessFirst<span class="sym">,</span> moreFirst<span class="sym">,</span> lessLast<span class="sym">,</span> moreLast <span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>

   <span class="kwa">PROCEDURE</span> <span class="kwd">CopyTo</span><span class="sym">(</span><span class="kwa">VAR</span> a <span class="sym">:</span> BoardPieces<span class="sym">);</span>
   <span class="kwa">BEGIN FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span> a<span class="sym">[</span>i<span class="sym">] :=</span> current<span class="sym">[</span>i<span class="sym">];</span> <span class="kwa">END</span><span class="sym">;</span> <span class="kwa">END</span> CopyTo<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">IF</span> once <span class="kwa">THEN</span>
      <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
         n <span class="sym">:=</span> board<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">].</span>piece<span class="sym">.</span>number<span class="sym">;</span> first<span class="sym">[</span>i<span class="sym">] :=</span> n<span class="sym">;</span> last<span class="sym">[</span>i<span class="sym">] :=</span> n<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>
      once <span class="sym">:=</span> FALSE<span class="sym">;</span>
   <span class="kwa">ELSE</span>
      lessFirst <span class="sym">:=</span> FALSE<span class="sym">;</span> moreFirst <span class="sym">:=</span> FALSE<span class="sym">;</span>
      lessLast <span class="sym">:=</span> FALSE<span class="sym">;</span> moreLast <span class="sym">:=</span> FALSE<span class="sym">;</span>
      <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
         n <span class="sym">:=</span> board<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">].</span>piece<span class="sym">.</span>number<span class="sym">;</span>

         <span class="kwa">IF</span> ~moreFirst <span class="sym">&amp;</span> ~lessFirst <span class="sym">&amp; (</span>n <span class="sym">&lt;</span> first<span class="sym">[</span>i<span class="sym">])</span> <span class="kwa">THEN</span>
            lessFirst <span class="sym">:=</span> TRUE<span class="sym">;</span>
         <span class="kwa">ELSIF</span> <span class="sym">(</span>n <span class="sym">&gt;</span> first<span class="sym">[</span>i<span class="sym">])</span> <span class="kwa">THEN</span>
            moreFirst <span class="sym">:=</span> TRUE<span class="sym">;</span>
         <span class="kwa">END</span><span class="sym">;</span>
         <span class="kwa">IF</span> ~lessLast <span class="sym">&amp;</span> ~moreLast <span class="sym">&amp; (</span>n <span class="sym">&gt;</span> last<span class="sym">[</span>i<span class="sym">])</span> <span class="kwa">THEN</span>
            moreLast <span class="sym">:=</span> TRUE<span class="sym">;</span>
         <span class="kwa">ELSIF</span> <span class="sym">(</span>n <span class="sym">&lt;</span> last<span class="sym">[</span>i<span class="sym">])</span> <span class="kwa">THEN</span>
            lessLast <span class="sym">:=</span> TRUE<span class="sym">;</span>
         <span class="kwa">END</span><span class="sym">;</span>
         current<span class="sym">[</span>i<span class="sym">] :=</span> n<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">IF</span> lessFirst <span class="kwa">THEN</span> <span class="kwd">CopyTo</span><span class="sym">(</span>first<span class="sym">);</span> <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">IF</span> moreLast <span class="kwa">THEN</span> <span class="kwd">CopyTo</span><span class="sym">(</span>last<span class="sym">);</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
<span class="kwa">END</span> UpdateFirstLast<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="kwd">PrintSolutions</span> <span class="sym">();</span>
   <span class="kwa">PROCEDURE</span> <span class="kwd">PrintBoard</span> <span class="sym">(</span>a <span class="sym">:</span> BoardPieces<span class="sym">);</span>
   <span class="kwa">VAR</span>
      indent <span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
      i<span class="sym">,</span> j <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   <span class="kwa">BEGIN</span>
      indent <span class="sym">:=</span> FALSE<span class="sym">;</span>
      i <span class="sym">:=</span> <span class="num">0</span><span class="sym">;</span>
      <span class="kwa">WHILE</span> i <span class="sym">&lt;</span> <span class="kwa">LEN</span><span class="sym">(</span>a<span class="sym">)</span> <span class="kwa">DO</span>
         <span class="kwa">IF</span> indent <span class="kwa">THEN</span> Out<span class="sym">.</span><span class="kwd">Char</span><span class="sym">(</span>' '<span class="sym">);</span> <span class="kwa">END</span><span class="sym">;</span>
         <span class="kwa">FOR</span> j <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_COLS <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
            Out<span class="sym">.</span><span class="kwd">Char</span><span class="sym">(</span><span class="kwa">CHR</span><span class="sym">(</span>a<span class="sym">[</span>i<span class="sym">] +</span> <span class="num">48</span><span class="sym">));</span> Out<span class="sym">.</span><span class="kwd">Char</span><span class="sym">(</span>' '<span class="sym">);</span>
            <span class="kwa">INC</span><span class="sym">(</span>i<span class="sym">);</span>
         <span class="kwa">END</span><span class="sym">;</span>
         Out<span class="sym">.</span>Ln<span class="sym">;</span>
         indent <span class="sym">:=</span> ~indent<span class="sym">;</span>
      <span class="kwa">END</span><span class="sym">;</span>
      Out<span class="sym">.</span>Ln<span class="sym">;</span>
   <span class="kwa">END</span> PrintBoard<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   Out<span class="sym">.</span><span class="kwd">Int</span><span class="sym">(</span>n<span class="sym">,</span><span class="num">1</span><span class="sym">);</span> Out<span class="sym">.</span><span class="kwd">String</span><span class="sym">(</span><span class="str">&quot; solutions found&quot;</span><span class="sym">);</span> Out<span class="sym">.</span>Ln<span class="sym">;</span> Out<span class="sym">.</span>Ln<span class="sym">;</span>
   <span class="kwd">PrintBoard</span><span class="sym">(</span>first<span class="sym">);</span>
   <span class="kwd">PrintBoard</span><span class="sym">(</span>last<span class="sym">);</span>
<span class="kwa">END</span> PrintSolutions<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="kwd">PuzzleSolved</span> <span class="sym">();</span>
<span class="kwa">BEGIN</span>
   <span class="kwd">UpdateFirstLast</span><span class="sym">();</span>
   <span class="kwa">DEC</span><span class="sym">(</span>countdown<span class="sym">);</span>
<span class="kwa">END</span> PuzzleSolved<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="kwd">ShouldPrune</span> <span class="sym">() :</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
<span class="kwa">VAR</span>
   i <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   forall <span class="sym">:</span> <span class="kwb">BOOLEAN</span><span class="sym">;</span>
<span class="kwa">BEGIN</span>
   board<span class="sym">.</span><span class="kwd">Unmark</span><span class="sym">();</span>
   <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> BOARD_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
      forall <span class="sym">:= (</span>board<span class="sym">.</span>cells<span class="sym">[</span>i<span class="sym">].</span><span class="kwd">ContiguousEmptyCells</span><span class="sym">()</span> <span class="kwa">MOD</span> PIECE_SIZE<span class="sym">) =</span> <span class="num">0</span><span class="sym">;</span>
      <span class="kwa">IF</span> ~forall <span class="kwa">THEN RETURN</span> ~forall<span class="sym">;</span> <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">RETURN</span> ~forall<span class="sym">;</span>
<span class="kwa">END</span> ShouldPrune<span class="sym">;</span>


<span class="kwa">PROCEDURE</span> <span class="kwd">FindSolutions</span> <span class="sym">();</span>
<span class="kwa">VAR</span>
   emptyCellIndex<span class="sym">,</span> k<span class="sym">,</span> i<span class="sym">,</span> j <span class="sym">:</span> <span class="kwb">LONGINT</span><span class="sym">;</span>
   piece <span class="sym">:</span> Piece<span class="sym">;</span>
<span class="kwa">BEGIN</span>
   <span class="kwa">IF</span> countdown <span class="sym">&gt;</span> <span class="num">0</span> <span class="kwa">THEN</span>
      <span class="kwa">IF</span> unplaced # <span class="sym">{}</span> <span class="kwa">THEN</span>
         emptyCellIndex <span class="sym">:=</span> board<span class="sym">.</span><span class="kwd">FirstEmptyCellIndex</span><span class="sym">();</span>

         <span class="kwa">FOR</span> k <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO LEN</span><span class="sym">(</span>pieces<span class="sym">) -</span> <span class="num">1</span> <span class="kwa">DO</span>
            <span class="kwa">IF</span> k <span class="kwa">IN</span> unplaced <span class="kwa">THEN</span>
               unplaced <span class="sym">:=</span> unplaced <span class="sym">- {</span>k<span class="sym">};</span>

               <span class="kwa">FOR</span> i <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_ORIENTATIONS <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
                  piece <span class="sym">:=</span> pieces<span class="sym">[</span>k<span class="sym">].</span><span class="kwd">NextOrientation</span><span class="sym">();</span>
                  <span class="kwa">FOR</span> j <span class="sym">:=</span> <span class="num">0</span> <span class="kwa">TO</span> PIECE_SIZE <span class="sym">-</span> <span class="num">1</span> <span class="kwa">DO</span>
                     <span class="kwa">IF</span> board<span class="sym">.</span><span class="kwd">Add</span><span class="sym">(</span>j<span class="sym">,</span>emptyCellIndex<span class="sym">,</span>piece<span class="sym">)</span> <span class="kwa">THEN</span>
                        <span class="kwa">IF</span> ~<span class="kwd">ShouldPrune</span><span class="sym">()</span> <span class="kwa">THEN</span> <span class="kwd">FindSolutions</span><span class="sym">();</span> <span class="kwa">END</span><span class="sym">;</span>
                        board<span class="sym">.</span><span class="kwd">Remove</span><span class="sym">(</span>piece<span class="sym">);</span>
                     <span class="kwa">END</span><span class="sym">;</span>
                  <span class="kwa">END</span><span class="sym">;</span>
               <span class="kwa">END</span><span class="sym">;</span>
               unplaced <span class="sym">:=</span> unplaced <span class="sym">+ {</span>k<span class="sym">};</span>
            <span class="kwa">END</span><span class="sym">;</span>
         <span class="kwa">END</span><span class="sym">;</span>
      <span class="kwa">ELSE</span>
         <span class="kwd">PuzzleSolved</span><span class="sym">();</span>
      <span class="kwa">END</span><span class="sym">;</span>
   <span class="kwa">END</span><span class="sym">;</span>
<span class="kwa">END</span> FindSolutions<span class="sym">;</span>


<span class="kwa">BEGIN</span>
   n <span class="sym">:=</span> Shootout<span class="sym">.</span><span class="kwd">Argi</span><span class="sym">();</span>
   countdown <span class="sym">:=</span> n<span class="sym">;</span>
   <span class="kwd">Initialize</span><span class="sym">();</span>

   <span class="kwd">FindSolutions</span><span class="sym">();</span>
   <span class="kwd">PrintSolutions</span><span class="sym">();</span>
<span class="kwa">END</span> meteor<span class="sym">.</span>
