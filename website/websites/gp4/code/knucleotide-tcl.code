<span class="hl slc">#!/usr/bin/tclsh</span>

<span class="hl slc">#  The Great Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Daniel South</span>


<span class="hl kwa">proc</span> kFrequency <span class="hl sym">{</span>s k framesize<span class="hl sym">} {</span>
   <span class="hl kwa">global</span> freq

   <span class="hl kwa">set</span> n <span class="hl sym">[</span><span class="hl kwa">string</span> length <span class="hl kwb">$s</span><span class="hl sym">]</span>
   <span class="hl kwa">incr</span> k <span class="hl sym">-</span><span class="hl num">1</span>
   <span class="hl kwa">incr</span> n <span class="hl sym">-</span><span class="hl kwb">$k</span>
   <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> i <span class="hl sym">[</span><span class="hl kwa">incr</span> framesize <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">]} {</span><span class="hl kwb">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$n</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> i<span class="hl sym">} {</span>
      <span class="hl kwa">set</span> c <span class="hl sym">[</span><span class="hl kwa">string</span> range <span class="hl kwb">$s $i</span> <span class="hl sym">[</span><span class="hl kwa">incr</span> i <span class="hl kwb">$k</span><span class="hl sym">]]</span>
      <span class="hl kwa">if</span> <span class="hl sym">{[</span><span class="hl kwa">catch</span> <span class="hl sym">{</span><span class="hl kwa">incr</span> freq<span class="hl sym">(</span><span class="hl kwb">$c</span><span class="hl sym">)}]} {</span><span class="hl kwa">set</span> freq<span class="hl sym">(</span><span class="hl kwb">$c</span><span class="hl sym">)</span> <span class="hl num">1</span><span class="hl sym">}</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>


<span class="hl kwa">proc</span> frequency <span class="hl sym">{</span>s k<span class="hl sym">} {</span>
   <span class="hl kwa">array unset</span> <span class="hl sym">::</span>freq
   <span class="hl kwa">set</span> sum <span class="hl num">0</span>

   <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> i <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$k</span><span class="hl sym">} {} {</span>kFrequency <span class="hl kwb">$s $k</span> <span class="hl sym">[</span><span class="hl kwa">incr</span> i<span class="hl sym">]}</span>
   <span class="hl kwa">foreach</span> <span class="hl sym">{</span>fragment count<span class="hl sym">} [</span><span class="hl kwa">array</span> get <span class="hl sym">::</span>freq<span class="hl sym">] {</span>
      <span class="hl kwa">lappend</span> sortheap <span class="hl sym">[</span><span class="hl kwa">list</span> <span class="hl kwb">$fragment $count</span><span class="hl sym">]</span>
      <span class="hl kwa">incr</span> sum <span class="hl kwb">$count</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">foreach</span> item <span class="hl sym">[</span><span class="hl kwa">lsort</span> <span class="hl sym">-</span>integer <span class="hl sym">-</span>index <span class="hl num">1</span> <span class="hl sym">-</span>decreasing <span class="hl sym">[</span><span class="hl kwa">lsort</span> <span class="hl kwb">$sortheap</span><span class="hl sym">]] {</span>
      <span class="hl kwa">set</span> percent <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span>double<span class="hl sym">([</span><span class="hl kwa">lindex</span> <span class="hl kwb">$item</span> <span class="hl num">1</span><span class="hl sym">]) /</span> <span class="hl kwb">$sum</span> <span class="hl sym">*</span> <span class="hl num">100</span><span class="hl sym">}]</span>
      <span class="hl kwa">puts</span> <span class="hl sym">[</span><span class="hl kwa">format</span> <span class="hl str">&quot;%s %0.3f&quot;</span> <span class="hl sym">[</span><span class="hl kwa">lindex</span> <span class="hl kwb">$item</span> <span class="hl num">0</span><span class="hl sym">]</span> <span class="hl kwb">$percent</span><span class="hl sym">]</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">puts</span> <span class="hl str">&quot;&quot;</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> count <span class="hl sym">{</span>s fragment<span class="hl sym">} {</span>
    <span class="hl kwa">array unset</span> <span class="hl sym">::</span>freq
    <span class="hl kwa">set</span> count <span class="hl num">0</span>

    <span class="hl kwa">set</span> k <span class="hl sym">[</span><span class="hl kwa">string</span> length <span class="hl kwb">$fragment</span><span class="hl sym">]</span>
    <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> i <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$k</span><span class="hl sym">} {} {</span>kFrequency <span class="hl kwb">$s $k</span> <span class="hl sym">[</span><span class="hl kwa">incr</span> i<span class="hl sym">]}</span>
    <span class="hl kwa">if</span> <span class="hl sym">{[</span><span class="hl kwa">info</span> exists <span class="hl sym">::</span>freq<span class="hl sym">(</span><span class="hl kwb">$fragment</span><span class="hl sym">)]} {</span><span class="hl kwa">set</span> count $<span class="hl sym">::</span>freq<span class="hl sym">(</span><span class="hl kwb">$fragment</span><span class="hl sym">)}</span>
    <span class="hl kwa">puts</span> <span class="hl kwb">$count</span>\t<span class="hl kwb">$fragment</span>
<span class="hl sym">}</span>

<span class="hl kwa">proc</span> main <span class="hl sym">{} {</span>
    <span class="hl kwa">while</span> <span class="hl sym">{[</span><span class="hl kwa">gets</span> stdin line<span class="hl sym">] != -</span><span class="hl num">1</span><span class="hl sym">} {</span><span class="hl kwa">if</span> <span class="hl sym">{[</span><span class="hl kwa">string</span> match <span class="hl str">&quot;&gt;THREE*&quot;</span> <span class="hl kwb">$line</span><span class="hl sym">]}</span> <span class="hl kwa">break</span><span class="hl sym">}</span>
    <span class="hl kwa">while</span> <span class="hl sym">{[</span><span class="hl kwa">gets</span> stdin line<span class="hl sym">] != -</span><span class="hl num">1</span><span class="hl sym">} {</span><span class="hl kwa">append</span> sequence <span class="hl kwb">$line</span><span class="hl sym">}</span>
    <span class="hl kwa">set</span> sequence <span class="hl sym">[</span><span class="hl kwa">string</span> toupper <span class="hl kwb">$sequence</span><span class="hl sym">]</span>

    frequency <span class="hl kwb">$sequence</span> <span class="hl num">1</span>
    frequency <span class="hl kwb">$sequence</span> <span class="hl num">2</span>

    count <span class="hl kwb">$sequence</span> <span class="hl str">&quot;GGT&quot;</span>
    count <span class="hl kwb">$sequence</span> <span class="hl str">&quot;GGTA&quot;</span>
    count <span class="hl kwb">$sequence</span> <span class="hl str">&quot;GGTATT&quot;</span>
    count <span class="hl kwb">$sequence</span> <span class="hl str">&quot;GGTATTTTAATT&quot;</span>
    count <span class="hl kwb">$sequence</span> <span class="hl str">&quot;GGTATTTTAATTTATAGT&quot;</span>
<span class="hl sym">}</span>

main
