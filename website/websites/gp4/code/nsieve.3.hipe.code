<span class="hl slc">%   The Computer Language Benchmarks Game</span>
<span class="hl slc">%   http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">%   contributed by Jiri Isa</span>

<span class="hl sym">-</span><span class="hl kwd">module</span><span class="hl sym">(</span>nsieve<span class="hl sym">)</span>.
<span class="hl sym">-</span><span class="hl kwd">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">])</span>.

<span class="hl kwd">main</span><span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
   N <span class="hl sym">=</span> <span class="hl kwb">list_to_integer</span><span class="hl sym">(</span>Arg<span class="hl sym">),</span>
   <span class="hl kwd">start</span><span class="hl sym">(</span>N<span class="hl sym">),</span>
   erlang<span class="hl sym">:</span><span class="hl kwb">halt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>.

<span class="hl kwd">start</span><span class="hl sym">(</span>N<span class="hl sym">) -&gt;</span>
   <span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">),</span>
   <span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">),</span>
   <span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">)</span>.


<span class="hl kwd">ns</span><span class="hl sym">(</span>N<span class="hl sym">) -&gt;</span>
   M <span class="hl sym">= (</span><span class="hl num">1</span> bsl N<span class="hl sym">) *</span> <span class="hl num">10000</span><span class="hl sym">,</span>
   Array <span class="hl sym">=</span> hipe_bifs<span class="hl sym">:</span><span class="hl kwd">bytearray</span><span class="hl sym">(</span>M <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">),</span>
   Count <span class="hl sym">=</span> <span class="hl kwd">ns</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span> M<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> Array<span class="hl sym">),</span>
   io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to ~8.10b ~8.10b~n&quot;</span><span class="hl sym">, [</span>M<span class="hl sym">,</span> Count<span class="hl sym">])</span>.

<span class="hl kwd">ns</span><span class="hl sym">(</span>Start<span class="hl sym">,</span> Start<span class="hl sym">,</span> Count<span class="hl sym">,</span> _<span class="hl sym">) -&gt;</span> Count<span class="hl sym">;</span>
<span class="hl kwd">ns</span><span class="hl sym">(</span>Start<span class="hl sym">,</span> M<span class="hl sym">,</span> Count<span class="hl sym">,</span> Array<span class="hl sym">) -&gt;</span>
   <span class="hl kwa">case</span> hipe_bifs<span class="hl sym">:</span><span class="hl kwd">bytearray_sub</span><span class="hl sym">(</span>Array<span class="hl sym">,</span> Start<span class="hl sym">)</span> <span class="hl kwa">of</span>
      <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
         <span class="hl kwd">ns</span><span class="hl sym">(</span>Start <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> M<span class="hl sym">,</span> Count<span class="hl sym">,</span> Array<span class="hl sym">);</span>
      <span class="hl num">1</span> <span class="hl sym">-&gt;</span>
         <span class="hl kwd">mark</span><span class="hl sym">(</span>Start <span class="hl sym">+</span> Start<span class="hl sym">,</span> Start<span class="hl sym">,</span> M<span class="hl sym">,</span> Array<span class="hl sym">),</span>
         <span class="hl kwd">ns</span><span class="hl sym">(</span>Start <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> M<span class="hl sym">,</span> Count <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Array<span class="hl sym">)</span>
   <span class="hl kwa">end</span>.

<span class="hl kwd">mark</span><span class="hl sym">(</span>Start<span class="hl sym">,</span> _<span class="hl sym">,</span> M<span class="hl sym">,</span> _<span class="hl sym">)</span> <span class="hl kwa">when</span> Start <span class="hl sym">&gt;</span> M <span class="hl sym">-&gt;</span> ok<span class="hl sym">;</span>
<span class="hl kwd">mark</span><span class="hl sym">(</span>Start<span class="hl sym">,</span> Step<span class="hl sym">,</span> M<span class="hl sym">,</span> Array<span class="hl sym">) -&gt;</span>
   hipe_bifs<span class="hl sym">:</span><span class="hl kwd">bytearray_update</span><span class="hl sym">(</span>Array<span class="hl sym">,</span> Start<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span>
   <span class="hl kwd">mark</span><span class="hl sym">(</span>Start <span class="hl sym">+</span> Step<span class="hl sym">,</span> Step<span class="hl sym">,</span> M<span class="hl sym">,</span> Array<span class="hl sym">)</span>.

