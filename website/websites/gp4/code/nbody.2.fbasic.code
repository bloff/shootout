<span class="slc">' The Computer Language Shootout</span>
<span class="slc">' http://shootout.alioth.debian.org/</span>
<span class="slc">' contributed by Antoni Gual</span>

<span class="slc">'Added to Josh Goldfoot version:</span>
<span class="slc">'-used printf from the c-runtime lib to avoid PRINT USING</span>
<span class="slc">' variations from version to version</span>
<span class="slc">'-changed the sub advance from indexes to pointers</span>

option explicit
option escape
#include <span class="str">&quot;crt.bi&quot;</span>

<span class="kwa">type</span> planet
   <span class="kwa">as</span> double x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">,</span> vx<span class="sym">,</span> vy<span class="sym">,</span> vz<span class="sym">,</span> mass
<span class="kwa">end type</span>

common shared <span class="kwa">as</span> double <span class="kwa">pi</span><span class="sym">,</span> solar_mass<span class="sym">,</span> days_per_year
<span class="kwa">pi</span> <span class="sym">=</span> <span class="num">3.14159265358979323</span>
solar_mass <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> <span class="kwa">pi</span> <span class="sym">*</span> <span class="kwa">pi</span>
days_per_year <span class="sym">=</span> <span class="num">365.24</span>

<span class="kwa">sub</span> init_bodies<span class="sym">(</span>bodies<span class="sym">()</span> <span class="kwa">as</span> planet<span class="sym">)</span>
   rem Sun
   bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.x <span class="sym">=</span> <span class="num">0.0</span>
   bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.y <span class="sym">=</span> <span class="num">0.0</span>
   bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.z <span class="sym">=</span> <span class="num">0.0</span>
   bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vx <span class="sym">=</span> <span class="num">0.0</span>
   bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vy <span class="sym">=</span> <span class="num">0.0</span>
   bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vz <span class="sym">=</span> <span class="num">0.0</span>
   bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.mass <span class="sym">=</span> solar_mass

   rem Jupiter
   bodies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.x <span class="sym">=</span> <span class="num">4.84143144246472090e+00</span>
   bodies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.y <span class="sym">= -</span><span class="num">1.16032004402742839e+00</span>
   bodies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.z <span class="sym">= -</span><span class="num">1.03622044471123109e-01</span>
   bodies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.vx <span class="sym">=</span> <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.vy <span class="sym">=</span> <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.vz <span class="sym">= -</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.mass <span class="sym">=</span> <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> solar_mass

   rem Saturn
   bodies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.x <span class="sym">=</span> <span class="num">8.34336671824457987e+00</span>
   bodies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.y <span class="sym">=</span> <span class="num">4.12479856412430479e+00</span>
   bodies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.z <span class="sym">= -</span><span class="num">4.03523417114321381e-01</span>
   bodies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.vx <span class="sym">= -</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.vy <span class="sym">=</span> <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.vz <span class="sym">=</span> <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">2</span><span class="sym">)</span>.mass <span class="sym">=</span> <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> solar_mass

   rem Uranus
   bodies<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.x <span class="sym">=</span> <span class="num">1.28943695621391310e+01</span>
   bodies<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.y <span class="sym">= -</span><span class="num">1.51111514016986312e+01</span>
   bodies<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.z <span class="sym">= -</span><span class="num">2.23307578892655734e-01</span>
   bodies<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.vx <span class="sym">=</span> <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.vy <span class="sym">=</span> <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.vz <span class="sym">= -</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>.mass <span class="sym">=</span> <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> solar_mass

   rem Neptune
   bodies<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.x <span class="sym">=</span> <span class="num">1.53796971148509165e+01</span>
   bodies<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.y <span class="sym">= -</span><span class="num">2.59193146099879641e+01</span>
   bodies<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.z <span class="sym">=</span> <span class="num">1.79258772950371181e-01</span>
   bodies<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.vx <span class="sym">=</span> <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.vy <span class="sym">=</span> <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.vz <span class="sym">= -</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> days_per_year
   bodies<span class="sym">(</span><span class="num">4</span><span class="sym">)</span>.mass <span class="sym">=</span> <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> solar_mass
<span class="kwa">end sub</span>

<span class="kwa">sub</span> offset_momentum<span class="sym">(</span>nbodies <span class="kwa">as</span> <span class="kwb">integer</span><span class="sym">,</span> bodies<span class="sym">()</span> <span class="kwa">as</span> planet<span class="sym">)</span>
  <span class="kwa">dim as</span> double px<span class="sym">,</span> py<span class="sym">,</span> pz
  <span class="kwa">dim as</span> <span class="kwb">integer</span> i
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> nbodies<span class="sym">-</span><span class="num">1</span>
    px <span class="sym">+=</span> bodies<span class="sym">(</span>i<span class="sym">)</span>.vx <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)</span>.mass
    py <span class="sym">+=</span> bodies<span class="sym">(</span>i<span class="sym">)</span>.vy <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)</span>.mass
    pz <span class="sym">+=</span> bodies<span class="sym">(</span>i<span class="sym">)</span>.vz <span class="sym">*</span> bodies<span class="sym">(</span>i<span class="sym">)</span>.mass
  <span class="kwa">next</span> i
  bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vx <span class="sym">= -</span><span class="num">1</span> <span class="sym">*</span> px <span class="sym">/</span> solar_mass
  bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vy <span class="sym">= -</span><span class="num">1</span> <span class="sym">*</span> py <span class="sym">/</span> solar_mass
  bodies<span class="sym">(</span><span class="num">0</span><span class="sym">)</span>.vz <span class="sym">= -</span><span class="num">1</span> <span class="sym">*</span> pz <span class="sym">/</span> solar_mass
<span class="kwa">end sub</span>

<span class="kwa">function</span> energy<span class="sym">(</span>nbodies <span class="kwa">as</span> <span class="kwb">integer</span><span class="sym">,</span> b<span class="sym">()</span> <span class="kwa">as</span> planet<span class="sym">)</span> <span class="kwa">as</span> double
  <span class="kwa">dim as</span> double e<span class="sym">,</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance
  <span class="kwa">dim as</span> <span class="kwb">integer</span> i<span class="sym">,</span> j
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> nbodies<span class="sym">-</span><span class="num">1</span>
    e <span class="sym">+=</span> <span class="num">0.5</span><span class="sym">*</span>b<span class="sym">(</span>i<span class="sym">)</span>.mass<span class="sym">*(</span>b<span class="sym">(</span>i<span class="sym">)</span>.vx<span class="sym">*</span>b<span class="sym">(</span>i<span class="sym">)</span>.vx<span class="sym">+</span>b<span class="sym">(</span>i<span class="sym">)</span>.vy<span class="sym">*</span>b<span class="sym">(</span>i<span class="sym">)</span>.vy<span class="sym">+</span>b<span class="sym">(</span>i<span class="sym">)</span>.vz<span class="sym">*</span>b<span class="sym">(</span>i<span class="sym">)</span>.vz<span class="sym">)</span>
    <span class="kwa">for</span> j <span class="sym">=</span> i <span class="sym">+</span> <span class="num">1</span> <span class="kwa">to</span> nbodies <span class="sym">-</span> <span class="num">1</span>
      dx <span class="sym">=</span> b<span class="sym">(</span>i<span class="sym">)</span>.x <span class="sym">-</span> b<span class="sym">(</span>j<span class="sym">)</span>.x
      dy <span class="sym">=</span> b<span class="sym">(</span>i<span class="sym">)</span>.y <span class="sym">-</span> b<span class="sym">(</span>j<span class="sym">)</span>.y
      dz <span class="sym">=</span> b<span class="sym">(</span>i<span class="sym">)</span>.z <span class="sym">-</span> b<span class="sym">(</span>j<span class="sym">)</span>.z
      distance <span class="sym">=</span> sqr<span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)</span>
      e <span class="sym">-= (</span>b<span class="sym">(</span>i<span class="sym">)</span>.mass <span class="sym">*</span> b<span class="sym">(</span>j<span class="sym">)</span>.mass<span class="sym">) /</span> distance
    <span class="kwa">next</span> j
  <span class="kwa">next</span> i
  return e
<span class="kwa">end function</span>

<span class="slc">'the advance function is the bottleneck</span>
<span class="kwa">sub</span> advance<span class="sym">(</span>nbodies <span class="kwa">as</span> <span class="kwb">integer</span><span class="sym">,</span> <span class="kwa">byval</span> bodies <span class="kwa">as</span> planet ptr<span class="sym">,</span> dt <span class="kwa">as</span> double<span class="sym">)</span>
  <span class="kwa">dim as</span> double dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">,</span> mag
  <span class="kwa">dim as</span> <span class="kwb">integer</span> i<span class="sym">,</span> j
  <span class="kwa">dim as</span> planet ptr bi<span class="sym">,</span>bj
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> nbodies <span class="sym">-</span> <span class="num">1</span>
    bi<span class="sym">=</span>&#64;bodies<span class="sym">[</span>i<span class="sym">]</span>
    <span class="kwa">for</span> j <span class="sym">=</span> i<span class="sym">+</span><span class="num">1</span> <span class="kwa">to</span> nbodies <span class="sym">-</span> <span class="num">1</span>
      bj<span class="sym">=</span>&#64;bodies<span class="sym">[</span>j<span class="sym">]</span>
      dx <span class="sym">=</span> bi<span class="sym">-&gt;</span>x <span class="sym">-</span> bj<span class="sym">-&gt;</span>x
      dy <span class="sym">=</span> bi<span class="sym">-&gt;</span>y <span class="sym">-</span> bj<span class="sym">-&gt;</span>y
      dz <span class="sym">=</span> bi<span class="sym">-&gt;</span>z <span class="sym">-</span> bj<span class="sym">-&gt;</span>z
      distance <span class="sym">=</span> sqr<span class="sym">(</span>dx <span class="sym">*</span> dx <span class="sym">+</span> dy <span class="sym">*</span> dy <span class="sym">+</span> dz <span class="sym">*</span> dz<span class="sym">)</span>
      mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">)</span>
      bi<span class="sym">-&gt;</span>vx <span class="sym">-=</span> dx <span class="sym">*</span> bj<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag
      bi<span class="sym">-&gt;</span>vy <span class="sym">-=</span> dy <span class="sym">*</span> bj<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag
      bi<span class="sym">-&gt;</span>vz <span class="sym">-=</span> dz <span class="sym">*</span> bj<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag
      bj<span class="sym">-&gt;</span>vx <span class="sym">+=</span> dx <span class="sym">*</span> bi<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag
      bj<span class="sym">-&gt;</span>vy <span class="sym">+=</span> dy <span class="sym">*</span> bi<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag
      bj<span class="sym">-&gt;</span>vz <span class="sym">+=</span> dz <span class="sym">*</span> bi<span class="sym">-&gt;</span>mass <span class="sym">*</span> mag
    <span class="kwa">next</span> j
  <span class="kwa">next</span> i
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span> <span class="kwa">to</span> nbodies <span class="sym">-</span> <span class="num">1</span>
    bi<span class="sym">=</span>&#64;bodies<span class="sym">[</span>i<span class="sym">]</span>
    bi<span class="sym">-&gt;</span>x <span class="sym">+=</span> dt <span class="sym">*</span> bi<span class="sym">-&gt;</span>vx
    bi<span class="sym">-&gt;</span>y <span class="sym">+=</span> dt <span class="sym">*</span> bi<span class="sym">-&gt;</span>vy
    bi<span class="sym">-&gt;</span>z <span class="sym">+=</span> dt <span class="sym">*</span> bi<span class="sym">-&gt;</span>vz
  <span class="kwa">next</span> i
<span class="kwa">end sub</span>

#define NBODIES <span class="num">5</span>
<span class="kwa">sub</span> main<span class="sym">()</span>
  <span class="kwa">dim as</span> <span class="kwb">integer</span> n<span class="sym">,</span> i
  n <span class="sym">=</span> val<span class="sym">(</span>command$<span class="sym">)</span>
  <span class="kwa">if</span> n <span class="sym">&lt;</span> <span class="num">1</span> <span class="kwa">then</span> n <span class="sym">=</span> <span class="num">50000</span>
  <span class="kwa">dim</span> bodies<span class="sym">(</span>NBODIES<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> <span class="kwa">as</span> planet
  init_bodies<span class="sym">(</span>bodies<span class="sym">() )</span>
  offset_momentum<span class="sym">(</span>NBODIES<span class="sym">,</span> bodies<span class="sym">() )</span>
  printf <span class="sym">(</span><span class="str">&quot;%.9f\n&quot;</span><span class="sym">,</span> energy<span class="sym">(</span>NBODIES<span class="sym">,</span> bodies<span class="sym">()))</span>

  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">1</span> <span class="kwa">to</span> n
     advance<span class="sym">(</span>NBODIES<span class="sym">,</span> &#64;bodies<span class="sym">(</span><span class="num">0</span><span class="sym">),</span> <span class="num">0.01</span><span class="sym">)</span>
  <span class="kwa">next</span> i
   printf <span class="sym">(</span><span class="str">&quot;%.9f\n&quot;</span><span class="sym">,</span> energy<span class="sym">(</span>NBODIES<span class="sym">,</span> bodies<span class="sym">()))</span>
<span class="kwa">end sub</span>

main<span class="sym">()</span>
