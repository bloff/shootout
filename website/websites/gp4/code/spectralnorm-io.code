<span class="hl com">/* The Great Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">   Contributed by Ian Osgood */</span>

A <span class="hl sym">:=</span> <span class="hl kwa">block</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">/(((</span>i<span class="hl sym">+</span>j<span class="hl sym">)*(</span>i<span class="hl sym">+</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)/</span><span class="hl num">2</span><span class="hl sym">) +</span> i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">))</span>

Au <span class="hl sym">:=</span> <span class="hl kwa">block</span><span class="hl sym">(</span>u<span class="hl sym">,</span> v<span class="hl sym">,</span>
    <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> u size <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>
        t <span class="hl sym">:=</span> <span class="hl num">0</span>
        u <span class="hl kwa">foreach</span><span class="hl sym">(</span>j<span class="hl sym">,</span> uj<span class="hl sym">,</span> t <span class="hl sym">=</span> t <span class="hl sym">+</span> <span class="hl kwd">A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">) *</span> uj<span class="hl sym">)</span>
        v <span class="hl kwd">atPut</span><span class="hl sym">(</span>i<span class="hl sym">,</span> t<span class="hl sym">)</span>
    <span class="hl sym">)</span>
<span class="hl sym">)</span>

Atu <span class="hl sym">:=</span> <span class="hl kwa">block</span><span class="hl sym">(</span>u<span class="hl sym">,</span> v<span class="hl sym">,</span>
    <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> u size <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>
        t <span class="hl sym">:=</span> <span class="hl num">0</span>
        u <span class="hl kwa">foreach</span><span class="hl sym">(</span>j<span class="hl sym">,</span> uj<span class="hl sym">,</span> t <span class="hl sym">=</span> t <span class="hl sym">+</span> <span class="hl kwd">A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">) *</span> uj<span class="hl sym">)</span>
        v <span class="hl kwd">atPut</span><span class="hl sym">(</span>i<span class="hl sym">,</span> t<span class="hl sym">)</span>
    <span class="hl sym">)</span>
<span class="hl sym">)</span>

AtAu <span class="hl sym">:=</span> <span class="hl kwa">block</span><span class="hl sym">(</span>u<span class="hl sym">,</span> v<span class="hl sym">,</span> w<span class="hl sym">,</span> <span class="hl kwd">Au</span><span class="hl sym">(</span>u<span class="hl sym">,</span>w<span class="hl sym">);</span> <span class="hl kwd">Atu</span><span class="hl sym">(</span>w<span class="hl sym">,</span>v<span class="hl sym">) )</span>

spectralNorm <span class="hl sym">:=</span> <span class="hl kwa">block</span><span class="hl sym">(</span>n<span class="hl sym">,</span>
    u <span class="hl sym">:=</span> <span class="hl kwb">List</span> <span class="hl kwa">clone</span> <span class="hl kwd">preallocateToSize</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
    v <span class="hl sym">:=</span> <span class="hl kwb">List</span> <span class="hl kwa">clone</span> <span class="hl kwd">preallocateToSize</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
    w <span class="hl sym">:=</span> <span class="hl kwb">List</span> <span class="hl kwa">clone</span> <span class="hl kwd">preallocateToSize</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
    n <span class="hl kwd">repeatTimes</span><span class="hl sym">(</span> u <span class="hl kwd">push</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">);</span> v <span class="hl kwd">push</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span> w <span class="hl kwd">push</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) )</span>

    <span class="hl num">10</span> <span class="hl kwd">repeatTimes</span><span class="hl sym">(</span> <span class="hl kwd">AtAu</span><span class="hl sym">(</span>u<span class="hl sym">,</span>v<span class="hl sym">,</span>w<span class="hl sym">);</span> <span class="hl kwd">AtAu</span><span class="hl sym">(</span>v<span class="hl sym">,</span>u<span class="hl sym">,</span>w<span class="hl sym">) )</span>

    vBv <span class="hl sym">:=</span> vv <span class="hl sym">:=</span> <span class="hl num">0</span>
    v <span class="hl kwa">foreach</span><span class="hl sym">(</span>i<span class="hl sym">,</span> vi<span class="hl sym">,</span>
        vBv <span class="hl sym">=</span> vBv <span class="hl sym">+</span> vi <span class="hl sym">*</span> u <span class="hl kwd">at</span><span class="hl sym">(</span>i<span class="hl sym">)</span>
        vv  <span class="hl sym">=</span> vv  <span class="hl sym">+</span> vi squared
    <span class="hl sym">)</span>
    <span class="hl sym">(</span>vBv <span class="hl sym">/</span> vv<span class="hl sym">)</span> sqrt
<span class="hl sym">)</span>

<span class="hl kwd">spectralNorm</span><span class="hl sym">(</span>args <span class="hl kwd">at</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span> asNumber<span class="hl sym">)</span> <span class="hl kwd">asString</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">9</span><span class="hl sym">)</span> println

