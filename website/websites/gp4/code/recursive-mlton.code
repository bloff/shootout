<span class="com">(* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Scott Cruzen</span>
<span class="com">*)</span>

<span class="kwa">fun</span> ack <span class="num">0</span> y <span class="sym">=</span> y <span class="sym">+</span> <span class="num">1</span>
  <span class="sym">|</span> ack x <span class="num">0</span> <span class="sym">=</span> ack <span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> <span class="num">1</span>
  <span class="sym">|</span> ack x y <span class="sym">=</span> ack <span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">) (</span>ack x <span class="sym">(</span>y <span class="sym">-</span> <span class="num">1</span><span class="sym">))</span>

<span class="kwa">fun</span> fib <span class="num">0</span> <span class="sym">=</span> <span class="num">1</span>
  <span class="sym">|</span> fib <span class="num">1</span> <span class="sym">=</span> <span class="num">1</span>
  <span class="sym">|</span> fib n <span class="sym">=</span> fib <span class="sym">(</span>n <span class="sym">-</span> <span class="num">2</span><span class="sym">) +</span> fib <span class="sym">(</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span>

<span class="kwa">fun</span> fib_float n <span class="sym">=</span>
   <span class="kwa">if Real</span>.?<span class="sym">= (</span>n<span class="sym">,</span><span class="num">0.0</span><span class="sym">)</span> <span class="kwa">then</span>
      <span class="num">1.0</span>
   <span class="kwa">else if Real</span>.?<span class="sym">= (</span>n<span class="sym">,</span><span class="num">1.0</span><span class="sym">)</span> <span class="kwa">then</span>
      <span class="num">1.0</span>
   <span class="kwa">else</span>
      fib_float <span class="sym">(</span>n <span class="sym">-</span> <span class="num">2.0</span><span class="sym">) +</span> fib_float <span class="sym">(</span>n <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span>

<span class="kwa">fun</span> tak x y z <span class="sym">=</span>
   <span class="kwa">if</span> y <span class="sym">&lt;</span> x <span class="kwa">then</span>
      tak <span class="sym">(</span>tak <span class="sym">(</span>x <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> y z<span class="sym">) (</span>tak <span class="sym">(</span>y <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> z x<span class="sym">) (</span>tak <span class="sym">(</span>z <span class="sym">-</span> <span class="num">1.0</span><span class="sym">)</span> x y<span class="sym">)</span>
   <span class="kwa">else</span>
      z

<span class="kwa">fun</span> tak_int x y z <span class="sym">=</span>
   <span class="kwa">if</span> y <span class="sym">&lt;</span> x <span class="kwa">then</span>
      tak_int <span class="sym">(</span>tak_int <span class="sym">(</span>x <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> y z<span class="sym">) (</span>tak_int <span class="sym">(</span>y <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> z x<span class="sym">) (</span>tak_int <span class="sym">(</span>z <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> x y<span class="sym">)</span>
   <span class="kwa">else</span>
      z

<span class="kwa">val</span> _ <span class="sym">=</span>
   <span class="kwa">let</span>
      <span class="kwa">val</span> a <span class="sym">=</span> valOf <span class="sym">(</span><span class="kwa">Int</span>.fromString <span class="sym">(</span>hd <span class="sym">(</span>CommandLine.arguments<span class="sym">())))</span>
      <span class="kwa">val</span> b <span class="sym">=</span> a <span class="sym">-</span> <span class="num">1</span>
      <span class="kwa">val</span> c <span class="sym">=</span> <span class="num">27.0</span> <span class="sym">+</span> <span class="kwa">Real</span>.fromInt a
      <span class="kwa">val</span> fmtreal <span class="sym">=</span> <span class="kwa">Real</span>.fmt <span class="sym">(</span><span class="kwa">StringCvt</span>.FIX <span class="sym">(</span>SOME <span class="num">1</span><span class="sym">))</span>
   <span class="kwa">in</span>
      print <span class="sym">(</span>concat <span class="sym">[</span><span class="str">&quot;Ack(3,&quot;</span> <span class="sym">,</span> <span class="kwa">Int</span>.toString a <span class="sym">,</span><span class="str">&quot;): &quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString <span class="sym">(</span>ack <span class="num">3</span> a<span class="sym">) ,</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">]);</span>
      print <span class="sym">(</span>concat <span class="sym">[</span><span class="str">&quot;Fib(&quot;</span> <span class="sym">,</span> fmtreal c <span class="sym">,</span><span class="str">&quot;): &quot;</span> <span class="sym">,</span> fmtreal <span class="sym">(</span>fib_float c<span class="sym">) ,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">]);</span>
      print <span class="sym">(</span>concat <span class="sym">[</span><span class="str">&quot;Tak(&quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString <span class="sym">(</span><span class="num">3</span><span class="sym">*</span>b<span class="sym">),</span> <span class="str">&quot;,&quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString <span class="sym">(</span><span class="num">2</span><span class="sym">*</span>b<span class="sym">),</span> <span class="str">&quot;,&quot;</span><span class="sym">,</span>
         <span class="kwa">Int</span>.toString b<span class="sym">,</span> <span class="str">&quot;): &quot;</span><span class="sym">,</span> <span class="kwa">Int</span>.toString <span class="sym">(</span>tak_int <span class="sym">(</span><span class="num">3</span><span class="sym">*</span>b<span class="sym">) (</span><span class="num">2</span><span class="sym">*</span>b<span class="sym">)</span> b<span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">]);</span>
      print <span class="sym">(</span>concat <span class="sym">[</span><span class="str">&quot;Fib(3): &quot;</span> <span class="sym">,</span><span class="kwa">Int</span>.toString <span class="sym">(</span>fib <span class="num">3</span><span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">]);</span>
      print <span class="sym">(</span>concat <span class="sym">[</span><span class="str">&quot;Tak(3.0,2.0,1.0): &quot;</span> <span class="sym">,</span> fmtreal <span class="sym">(</span>tak <span class="num">3.0 2.0 1.0</span><span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">])</span>
   <span class="kwa">end</span>
