<span class="hl com">{ The Great Computer Language Shootout</span>
<span class="hl com">  http://shootout.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">  contributed by Joost van der Sluis</span>
<span class="hl com">}</span>

<span class="hl kwa">program</span> nsieveBits<span class="hl sym">;</span>
<span class="hl kwa">uses</span> SysUtils<span class="hl sym">;</span>

<span class="hl kwa">const</span> bpc <span class="hl sym">=</span> <span class="hl kwd">SizeOf</span><span class="hl sym">(</span><span class="hl kwb">cardinal</span><span class="hl sym">) *</span> <span class="hl num">8</span><span class="hl sym">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">primes</span><span class="hl sym">(</span>n <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">);</span>
<span class="hl kwa">var</span> size<span class="hl sym">,</span>count<span class="hl sym">,</span>prime<span class="hl sym">,</span>i <span class="hl sym">:</span> <span class="hl kwb">longint</span><span class="hl sym">;</span>
    flags <span class="hl sym">:</span> <span class="hl kwa">array of</span> <span class="hl kwb">cardinal</span><span class="hl sym">;</span>

  <span class="hl kwa">function</span> <span class="hl kwd">IsSet</span><span class="hl sym">(</span>i <span class="hl sym">:</span> longword<span class="hl sym">) :</span> <span class="hl kwb">boolean</span><span class="hl sym">;</span> <span class="hl kwa">inline</span><span class="hl sym">;</span>
  <span class="hl kwa">var</span> offset <span class="hl sym">:</span> <span class="hl kwb">longint</span><span class="hl sym">;</span> mask <span class="hl sym">:</span> <span class="hl kwb">cardinal</span><span class="hl sym">;</span>
  <span class="hl kwa">begin</span>
    offset <span class="hl sym">:=</span> i <span class="hl kwa">div</span> bpc<span class="hl sym">;</span>
    mask   <span class="hl sym">:=</span> <span class="hl num">1</span> <span class="hl kwa">shl</span> <span class="hl sym">(</span>i <span class="hl kwa">mod</span> bpc<span class="hl sym">);</span>
    IsSet <span class="hl sym">:= (</span>flags<span class="hl sym">[</span>offset<span class="hl sym">]</span> <span class="hl kwa">and</span> mask<span class="hl sym">) &lt;&gt;</span> <span class="hl num">0</span><span class="hl sym">;</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>

  <span class="hl kwa">procedure</span> <span class="hl kwd">Clear</span><span class="hl sym">(</span>i <span class="hl sym">:</span> longword<span class="hl sym">);</span> <span class="hl kwa">inline</span><span class="hl sym">;</span>
  <span class="hl kwa">var</span> offset <span class="hl sym">:</span> <span class="hl kwb">longint</span><span class="hl sym">;</span> mask <span class="hl sym">:</span> <span class="hl kwb">cardinal</span><span class="hl sym">;</span>
  <span class="hl kwa">begin</span>
    offset <span class="hl sym">:=</span> i <span class="hl kwa">div</span> bpc<span class="hl sym">;</span>
    mask   <span class="hl sym">:=</span> <span class="hl num">1</span> <span class="hl kwa">shl</span> <span class="hl sym">(</span>i <span class="hl kwa">mod</span> bpc<span class="hl sym">);</span>
    <span class="hl kwa">if</span> <span class="hl sym">((</span>flags<span class="hl sym">[</span>offset<span class="hl sym">]</span> <span class="hl kwa">and</span> mask<span class="hl sym">) &lt;&gt;</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">then</span> flags<span class="hl sym">[</span>offset<span class="hl sym">] :=</span> flags<span class="hl sym">[</span>offset<span class="hl sym">]</span> <span class="hl kwa">and not</span> mask<span class="hl sym">;</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl kwa">begin</span>
  size <span class="hl sym">:=</span> <span class="hl num">10000</span> <span class="hl kwa">shl</span> n<span class="hl sym">;</span>
  <span class="hl kwd">SetLength</span><span class="hl sym">(</span>flags<span class="hl sym">,</span> size <span class="hl kwa">div</span> bpc <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">);</span>
  <span class="hl kwd">filldword</span><span class="hl sym">(</span>flags<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">],</span><span class="hl kwd">length</span><span class="hl sym">(</span>flags<span class="hl sym">),</span><span class="hl kwd">high</span><span class="hl sym">(</span><span class="hl kwb">cardinal</span><span class="hl sym">));</span>

  count <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
  <span class="hl kwa">for</span> prime <span class="hl sym">:=</span> <span class="hl num">2</span> <span class="hl kwa">to</span> size <span class="hl kwa">do</span>
    <span class="hl kwa">if</span> <span class="hl kwd">IsSet</span><span class="hl sym">(</span>prime<span class="hl sym">)</span> <span class="hl kwa">then</span>
    <span class="hl kwa">begin</span>
      count <span class="hl sym">:=</span> count <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
      i <span class="hl sym">:=</span> prime <span class="hl sym">+</span> prime<span class="hl sym">;</span>
      <span class="hl kwa">while</span> i <span class="hl sym">&lt;=</span> size <span class="hl kwa">do</span>
      <span class="hl kwa">begin</span>
        <span class="hl kwd">Clear</span><span class="hl sym">(</span>i<span class="hl sym">);</span>
        i <span class="hl sym">:=</span> i <span class="hl sym">+</span> prime<span class="hl sym">;</span>
      <span class="hl kwa">end</span><span class="hl sym">;</span>
    <span class="hl kwa">end</span><span class="hl sym">;</span>
  <span class="hl kwd">writeln</span><span class="hl sym">(</span><span class="hl str">'Primes up to'</span><span class="hl sym">,</span> size<span class="hl sym">:</span><span class="hl num">9</span><span class="hl sym">,</span> count<span class="hl sym">:</span><span class="hl num">9</span><span class="hl sym">);</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl kwa">var</span> n <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
  n <span class="hl sym">:=</span> <span class="hl kwd">StrToInt</span><span class="hl sym">(</span><span class="hl kwd">paramstr</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">));</span>
  <span class="hl kwd">primes</span><span class="hl sym">(</span>n<span class="hl sym">);</span>
  <span class="hl kwd">primes</span><span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span>
  <span class="hl kwd">primes</span><span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">);</span>
<span class="hl kwa">end</span><span class="hl sym">.</span>
