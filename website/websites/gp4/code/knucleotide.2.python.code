<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># submitted by Ian Osgood</span>
<span class="slc"># modified by Sokolov Yura</span>
<span class="slc"># modified by bearophile</span>

<span class="kwc">from</span> sys <span class="kwc">import</span> stdin

<span class="kwb">def</span> <span class="kwd">gen_freq</span><span class="sym">(</span>seq<span class="sym">,</span> frame<span class="sym">,</span> frequences<span class="sym">):</span>
    ns <span class="sym">=</span> <span class="kwa">len</span><span class="sym">(</span>seq<span class="sym">) +</span> <span class="num">1</span> <span class="sym">-</span> frame
    frequences<span class="sym">.</span><span class="kwd">clear</span><span class="sym">()</span>
    <span class="kwb">for</span> ii <span class="kwb">in</span> <span class="kwa">xrange</span><span class="sym">(</span>ns<span class="sym">):</span>
        nucleo <span class="sym">=</span> seq<span class="sym">[</span>ii<span class="sym">:</span>ii <span class="sym">+</span> frame<span class="sym">]</span>
        <span class="kwb">if</span> nucleo <span class="kwb">in</span> frequences<span class="sym">:</span>
            frequences<span class="sym">[</span>nucleo<span class="sym">] +=</span> <span class="num">1</span>
        <span class="kwb">else</span><span class="sym">:</span>
            frequences<span class="sym">[</span>nucleo<span class="sym">] =</span> <span class="num">1</span>
    <span class="kwb">return</span> ns<span class="sym">,</span> frequences


<span class="kwb">def</span> <span class="kwd">sort_seq</span><span class="sym">(</span>seq<span class="sym">,</span> length<span class="sym">,</span> frequences<span class="sym">):</span>
    n<span class="sym">,</span> frequences <span class="sym">=</span> <span class="kwd">gen_freq</span><span class="sym">(</span>seq<span class="sym">,</span> length<span class="sym">,</span> frequences<span class="sym">)</span>

    l <span class="sym">=</span> <span class="kwd">sorted</span><span class="sym">(</span>frequences<span class="sym">.</span><span class="kwd">items</span><span class="sym">(),</span> reverse<span class="sym">=</span>True<span class="sym">,</span> key<span class="sym">=</span><span class="kwa">lambda</span> <span class="sym">(</span>seq<span class="sym">,</span>freq<span class="sym">): (</span>freq<span class="sym">,</span>seq<span class="sym">))</span>

    <span class="kwb">print</span> <span class="str">'</span><span class="esc">\n</span><span class="str">'</span><span class="sym">.</span><span class="kwd">join</span><span class="sym">(</span><span class="str">&quot;%s %.3f&quot;</span> <span class="sym">% (</span>st<span class="sym">,</span> <span class="num">100.0</span><span class="sym">*</span>fr<span class="sym">/</span>n<span class="sym">)</span> <span class="kwb">for</span> st<span class="sym">,</span>fr <span class="kwb">in</span> l<span class="sym">)</span>
    <span class="kwb">print</span>


<span class="kwb">def</span> <span class="kwd">find_seq</span><span class="sym">(</span>seq<span class="sym">,</span> s<span class="sym">,</span> frequences<span class="sym">):</span>
    n<span class="sym">,</span>t <span class="sym">=</span> <span class="kwd">gen_freq</span><span class="sym">(</span>seq<span class="sym">,</span> <span class="kwa">len</span><span class="sym">(</span>s<span class="sym">),</span> frequences<span class="sym">)</span>
    <span class="kwb">print</span> <span class="str">&quot;%d</span><span class="esc">\t</span><span class="str">%s&quot;</span> <span class="sym">% (</span>t<span class="sym">.</span><span class="kwd">get</span><span class="sym">(</span>s<span class="sym">,</span> <span class="num">0</span><span class="sym">),</span> s<span class="sym">)</span>


<span class="kwb">def</span> <span class="kwd">main</span><span class="sym">():</span>
    frequences <span class="sym">= {}</span>
    <span class="kwb">for</span> line <span class="kwb">in</span> stdin<span class="sym">:</span>
        <span class="kwb">if</span> line<span class="sym">[</span><span class="num">0</span><span class="sym">:</span><span class="num">3</span><span class="sym">] ==</span> <span class="str">&quot;&gt;TH&quot;</span><span class="sym">:</span>
            <span class="kwb">break</span>

    seq <span class="sym">= []</span>
    <span class="kwb">for</span> line <span class="kwb">in</span> stdin<span class="sym">:</span>
        <span class="kwb">if</span> line<span class="sym">[</span><span class="num">0</span><span class="sym">]</span> <span class="kwb">in</span> <span class="str">&quot;&gt;;&quot;</span><span class="sym">:</span>
            <span class="kwb">break</span>
        seq<span class="sym">.</span><span class="kwd">append</span><span class="sym">(</span> line<span class="sym">[:-</span><span class="num">1</span><span class="sym">] )</span>
    sequence <span class="sym">=</span> <span class="str">&quot;&quot;</span><span class="sym">.</span><span class="kwd">join</span><span class="sym">(</span>seq<span class="sym">).</span><span class="kwd">upper</span><span class="sym">()</span>

    <span class="kwb">for</span> nl <span class="kwb">in</span> <span class="num">1</span><span class="sym">,</span><span class="num">2</span><span class="sym">:</span>
        <span class="kwd">sort_seq</span><span class="sym">(</span>sequence<span class="sym">,</span> nl<span class="sym">,</span> frequences<span class="sym">)</span>

    <span class="kwb">for</span> se <span class="kwb">in</span> <span class="str">&quot;GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT&quot;</span><span class="sym">.</span><span class="kwd">split</span><span class="sym">():</span>
        <span class="kwd">find_seq</span><span class="sym">(</span>sequence<span class="sym">,</span> se<span class="sym">,</span> frequences<span class="sym">)</span>

<span class="kwd">main</span><span class="sym">()</span>
