<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Ian Osgood */</span>

fannkuch <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span>n<span class="hl sym">,</span>
    a <span class="hl sym">:=</span> <span class="hl kwb">List</span> <span class="hl kwa">clone</span>
    <span class="hl kwa">for</span> <span class="hl sym">(</span>i<span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">,</span>n<span class="hl sym">,</span> a <span class="hl kwd">append</span><span class="hl sym">(</span>i<span class="hl sym">))</span>
    r <span class="hl sym">:=</span> n
    counts <span class="hl sym">:=</span> a <span class="hl kwa">clone</span>
    count <span class="hl sym">:=</span> maxFlips <span class="hl sym">:=</span> <span class="hl num">0</span>

    <span class="hl kwd">loop</span> <span class="hl sym">(</span>
        <span class="hl slc">// display the first 30 permutations</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span>count <span class="hl sym">&lt;</span> <span class="hl num">30</span><span class="hl sym">,</span> <span class="hl kwd">writeln</span><span class="hl sym">(</span>a <span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl str">&quot;&quot;</span><span class="hl sym">));</span> count <span class="hl sym">=</span> count <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span>

        <span class="hl slc">// eliminate bad choices</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span>a first <span class="hl sym">!=</span> <span class="hl num">1</span> <span class="hl kwa">and</span> a last <span class="hl sym">!=</span> n<span class="hl sym">,</span>
            <span class="hl slc">// pour the batter</span>
            p <span class="hl sym">:=</span> a <span class="hl kwa">clone</span>
            flips <span class="hl sym">:=</span> <span class="hl num">0</span>
            <span class="hl slc">// start flipping</span>
            <span class="hl kwd">while</span> <span class="hl sym">((</span>j <span class="hl sym">:=</span> p first<span class="hl sym">) &gt;</span> <span class="hl num">1</span><span class="hl sym">,</span>
                <span class="hl slc">// reverse 0..j-1</span>
                i <span class="hl sym">:= -</span><span class="hl num">1</span>
                <span class="hl kwd">while</span> <span class="hl sym">((</span>i<span class="hl sym">=</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) &lt; (</span>j<span class="hl sym">=</span>j<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">),</span> p <span class="hl kwd">swapIndices</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">))</span>
                flips <span class="hl sym">=</span> flips <span class="hl sym">+</span> <span class="hl num">1</span>
            <span class="hl sym">)</span>
            <span class="hl kwa">if</span> <span class="hl sym">(</span>flips <span class="hl sym">&gt;</span> maxFlips<span class="hl sym">,</span> maxFlips <span class="hl sym">=</span> flips<span class="hl sym">)</span>
        <span class="hl sym">)</span>

        <span class="hl slc">// generate another permutation</span>
        <span class="hl kwd">while</span> <span class="hl sym">(</span>r<span class="hl sym">&gt;</span><span class="hl num">1</span><span class="hl sym">,</span> counts <span class="hl kwd">atPut</span><span class="hl sym">(</span>r<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span> r<span class="hl sym">);</span> r<span class="hl sym">=</span>r<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
        <span class="hl kwd">loop</span> <span class="hl sym">(</span>
            <span class="hl slc">// -roll(r)</span>
            a <span class="hl kwd">atInsert</span><span class="hl sym">(</span>r<span class="hl sym">,</span> a <span class="hl kwd">removeAt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">))</span>

            <span class="hl kwa">if</span> <span class="hl sym">(</span>counts <span class="hl kwd">atPut</span><span class="hl sym">(</span>r<span class="hl sym">,</span> counts <span class="hl kwd">at</span><span class="hl sym">(</span>r<span class="hl sym">) -</span> <span class="hl num">1</span><span class="hl sym">) &gt;</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwa">break</span><span class="hl sym">)</span>

            <span class="hl kwa">if</span> <span class="hl sym">((</span>r<span class="hl sym">=</span>r<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) ==</span> n<span class="hl sym">,</span> <span class="hl kwa">return</span> maxFlips<span class="hl sym">)</span>
        <span class="hl sym">)</span>
    <span class="hl sym">)</span>
<span class="hl sym">)</span>

n <span class="hl sym">:=</span> System args <span class="hl kwd">at</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span> asNumber
f <span class="hl sym">:=</span> <span class="hl kwd">fannkuch</span><span class="hl sym">(</span>n<span class="hl sym">)</span>
<span class="hl kwd">writeln</span><span class="hl sym">(</span><span class="hl str">&quot;Pfannkuchen(&quot;</span><span class="hl sym">,</span> n<span class="hl sym">,</span> <span class="hl str">&quot;) = &quot;</span><span class="hl sym">,</span> f<span class="hl sym">)</span>
