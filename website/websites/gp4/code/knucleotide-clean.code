<span class="com">/*</span>
<span class="com">	The Computer Language Shootout</span>
<span class="com">	http://shootout.alioth.debian.org/</span>
<span class="com">	the hash function is ported from &quot;simple_hash.h&quot;, available from</span>
<span class="com">	http://cvs.alioth.debian.org/cgi-bin/cvsweb.cgi/shootout/bench/Include/?cvsroot=shootout</span>
<span class="com">	the hashtable functions are based on code written by Isaac Gouy</span>
<span class="com">	contributed by John van Groningen</span>
<span class="com">*/</span>

<span class="kwa">module</span> knucleotide

<span class="kwa">import</span> StdEnv<span class="sym">,</span>StdOverloadedList<span class="sym">,</span>LanguageShootout

Start world
	<span class="sym"># (</span>file<span class="sym">,</span>world<span class="sym">) =</span> stdio world
	  lines <span class="sym">=</span> read_lines <span class="sym">(</span>find_three file<span class="sym">)</span>

	  n_chars <span class="sym">=</span> foldl <span class="sym">(</span>\n s<span class="sym">=</span>n<span class="sym">+</span>size s<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> <span class="num">0</span> lines
	  dna <span class="sym">=</span> fill_sequence lines <span class="num">0</span> <span class="sym">(</span>createArray n_chars '?'<span class="sym">)</span>

	<span class="sym">= ( [([</span>key<span class="sym">+++</span><span class="str">&quot; &quot;</span><span class="sym">+++</span>toStringWith <span class="num">3</span> <span class="sym">(</span><span class="num">100.0</span><span class="sym">*</span>toReal val<span class="sym">/</span>toReal n_chars<span class="sym">)+++</span><span class="str">&quot;\n&quot;</span>
			<span class="sym">\\ {</span>key<span class="sym">,</span>val<span class="sym">} &lt;-</span> sort <span class="sym">(</span>htItems <span class="sym">(</span>frequencies l dna<span class="sym">))],</span>'\n'<span class="sym">) \\</span> l<span class="sym">&lt;-[</span><span class="num">1</span><span class="sym">.</span><span class="num">.2</span><span class="sym">]],</span>

	 	<span class="sym">[</span>toString <span class="sym">((</span>htFind s <span class="sym">(</span>frequencies <span class="sym">(</span>size s<span class="sym">)</span> dna<span class="sym">)).</span>val<span class="sym">)+++</span><span class="str">&quot;\t&quot;</span><span class="sym">+++</span>s<span class="sym">+++</span><span class="str">&quot;\n&quot;</span>
			<span class="sym">\\</span> s <span class="sym">&lt;- [</span> <span class="str">&quot;GGT&quot;</span><span class="sym">,</span><span class="str">&quot;GGTA&quot;</span><span class="sym">,</span><span class="str">&quot;GGTATT&quot;</span><span class="sym">,</span><span class="str">&quot;GGTATTTTAATT&quot;</span><span class="sym">,</span><span class="str">&quot;GGTATTTTAATTTATAGT&quot;</span><span class="sym">] ])</span>

find_three file
	<span class="sym"># (</span>line<span class="sym">,</span>file<span class="sym">) =</span> freadline file
	<span class="sym">|</span> line<span class="sym">.[</span><span class="num">0</span><span class="sym">]==</span>'&gt;' <span class="sym">&amp;&amp;</span> line%<span class="sym">(</span><span class="num">1</span><span class="sym">,</span><span class="num">5</span><span class="sym">)==</span><span class="str">&quot;THREE&quot;</span>
		<span class="sym">=</span> file
		<span class="sym">=</span> find_three file

read_lines file
	<span class="sym"># (</span>line<span class="sym">,</span>file<span class="sym">) =</span> freadline file
	<span class="sym">|</span> size line<span class="sym">==</span><span class="num">0</span>  <span class="sym">= []</span>
	<span class="sym">|</span> line<span class="sym">.[</span><span class="num">0</span><span class="sym">]==</span>';' <span class="sym">=</span> read_lines file
	<span class="sym">|</span> line<span class="sym">.[</span><span class="num">0</span><span class="sym">]==</span>'&gt;' <span class="sym">= []</span>
	<span class="sym">|</span> line<span class="sym">.[</span>size line<span class="sym">-</span><span class="num">1</span><span class="sym">]==</span>'\n'
		<span class="sym">= [</span>line <span class="sym">:</span> read_lines file<span class="sym">]</span>
		<span class="sym">= [</span>line<span class="sym">+++</span><span class="str">&quot;\n&quot;</span> <span class="sym">:</span> read_lines file<span class="sym">]</span>

fill_sequence <span class="sym">[]</span> i a <span class="sym">=</span> a
fill_sequence <span class="sym">[</span>l<span class="sym">:</span>ls<span class="sym">]</span> i a
	<span class="sym">#</span> n <span class="sym">=</span> size l<span class="sym">-</span><span class="num">1</span>
	<span class="sym">=</span> fill_sequence ls <span class="sym">(</span>i<span class="sym">+</span>n<span class="sym">) (</span>copy <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> i a l<span class="sym">)</span> <span class="kwa">where</span>

	copy <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">!*{#</span><span class="kwb">Char</span><span class="sym">} !{#</span><span class="kwb">Char</span><span class="sym">} -&gt; *{#</span><span class="kwb">Char</span><span class="sym">}</span>
	copy j i a l
		<span class="sym">|</span> j&gt;<span class="sym">=</span><span class="num">0</span>	<span class="sym">=</span> copy <span class="sym">(</span>j<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> i <span class="sym">{</span>a <span class="sym">&amp; [</span>i<span class="sym">+</span>j<span class="sym">]=</span>toUpper l<span class="sym">.[</span>j<span class="sym">]}</span> l
				<span class="sym">=</span> a

<span class="kwa">instance</span> &lt; Item <span class="kwa">where</span> <span class="sym">(</span>&lt;<span class="sym">)</span> i1 i2 <span class="sym">=</span> <span class="kwa">if</span> <span class="sym">(</span>i1<span class="sym">.</span>val&lt;&gt;i2<span class="sym">.</span>val<span class="sym">) (</span>i1<span class="sym">.</span>val&gt;i2<span class="sym">.</span>val<span class="sym">) (</span>i1<span class="sym">.</span>key&lt;i2<span class="sym">.</span>key<span class="sym">)</span>

frequencies l s
	<span class="sym">#</span> htSize1 <span class="sym">=</span> <span class="num">25</span>&lt;&lt;<span class="sym">(</span>l<span class="sym">+</span>l<span class="sym">)</span>
	  htSize <span class="sym">=</span> <span class="kwa">if</span> <span class="sym">(</span>l&lt;<span class="sym">=</span><span class="num">13</span> <span class="sym">&amp;&amp;</span> htSize1&lt;size s<span class="sym">)</span> htSize1 <span class="sym">(</span>size s<span class="sym">)</span>
	<span class="sym">=</span> add_sub_strings <span class="num">0</span> <span class="sym">(</span>l<span class="sym">-</span><span class="num">1</span><span class="sym">) (</span>htNew htSize<span class="sym">)</span> <span class="kwa">where</span>

	add_sub_strings i l ht
		<span class="sym">#</span> e<span class="sym">=</span>i<span class="sym">+</span>l
		<span class="sym">|</span> e&gt;<span class="sym">=</span>size s <span class="sym">=</span> ht
		<span class="sym">=</span> add_sub_strings <span class="sym">(</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> l <span class="sym">(</span>htAddOrUpdate <span class="sym">(</span>s % <span class="sym">(</span>i<span class="sym">,</span>e<span class="sym">))</span> <span class="num">1</span> <span class="sym">(</span>\x<span class="sym">-&gt;</span>x<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> ht<span class="sym">)</span>

<span class="slc">// hash table</span>

<span class="slc">//hash :: !{#Char} !Int -&gt; Int</span>
hash key nBuckets
	<span class="sym">#</span> h <span class="sym">=</span> loop key <span class="sym">(</span>size key<span class="sym">-</span><span class="num">1</span><span class="sym">)</span> <span class="num">0</span>;
	<span class="sym">|</span> h&gt;<span class="sym">=</span><span class="num">0</span>
		<span class="sym">=</span> <span class="kwa">if</span> <span class="sym">(</span>h&lt;nBuckets<span class="sym">)</span> h <span class="sym">(</span>h rem nBuckets<span class="sym">)</span>
		<span class="sym">=</span> ~<span class="sym">(</span>h rem nBuckets<span class="sym">)</span> <span class="kwa">where</span>

	loop <span class="sym">:: !{#</span><span class="kwb">Char</span><span class="sym">} !</span><span class="kwb">Int</span> <span class="sym">!</span><span class="kwb">Int</span> <span class="sym">-&gt;</span> <span class="kwb">Int</span>
	loop k n h <span class="sym">=</span> <span class="kwa">if</span> <span class="sym">(</span>n&gt;<span class="sym">=</span><span class="num">0</span><span class="sym">) (</span>loop k <span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">) (</span><span class="num">5</span><span class="sym">*</span>h <span class="sym">+</span> toInt k<span class="sym">.[</span>n<span class="sym">]))</span> h

<span class="sym">::</span> Item <span class="sym">= {</span> key <span class="sym">:: !</span>String<span class="sym">,</span> val <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">}</span>

<span class="sym">::</span> HashTable <span class="sym">= {</span> table<span class="sym">::!.{!</span>Buckets<span class="sym">} }</span>

<span class="sym">::</span> Buckets <span class="sym">=</span> EmptyBucket <span class="sym">|</span> Bucket <span class="sym">!</span>Item <span class="sym">|</span> Buckets <span class="sym">![!</span>Item<span class="sym">!]</span>

htNew <span class="sym">:: !</span><span class="kwb">Int</span> <span class="sym">-&gt; *</span>HashTable
htNew n <span class="sym">= {</span> table <span class="sym">=</span> createArray nprime EmptyBucket <span class="sym">}</span> <span class="kwa">where</span>

   nprime <span class="sym">=</span> hd <span class="sym">(</span>dropWhile <span class="sym">(</span>\x <span class="sym">-&gt;</span> x &lt; n<span class="sym">)</span> primes<span class="sym">)</span>

primes <span class="sym">=: [</span> <span class="num">53</span><span class="sym">,</span>       <span class="num">97</span><span class="sym">,</span>        <span class="num">193</span><span class="sym">,</span>       <span class="num">389</span><span class="sym">,</span>       <span class="num">769</span><span class="sym">,</span>
            <span class="num">1543</span><span class="sym">,</span>     <span class="num">3079</span><span class="sym">,</span>      <span class="num">6151</span><span class="sym">,</span>      <span class="num">12289</span><span class="sym">,</span>     <span class="num">24593</span><span class="sym">,</span>
            <span class="num">49157</span><span class="sym">,</span>    <span class="num">98317</span><span class="sym">,</span>     <span class="num">196613</span><span class="sym">,</span>    <span class="num">93241</span><span class="sym">,</span>     <span class="num">786433</span><span class="sym">,</span>
            <span class="num">1572869</span><span class="sym">,</span>  <span class="num">3145739</span><span class="sym">,</span>   <span class="num">6291469</span><span class="sym">,</span>   <span class="num">12582917</span><span class="sym">,</span>  <span class="num">25165843</span><span class="sym">,</span>
            <span class="num">50331653</span><span class="sym">,</span> <span class="num">100663319</span><span class="sym">,</span> <span class="num">201326611</span><span class="sym">,</span> <span class="num">402653189</span><span class="sym">,</span> <span class="num">805306457</span> <span class="sym">]</span>

<span class="slc">//htFind :: !{#Char} !HashTable -&gt; Item</span>
htFind k <span class="sym">{</span>table<span class="sym">} = (</span>find k table<span class="sym">.[</span>hash k <span class="sym">(</span>size table<span class="sym">)])</span> <span class="kwa">where</span>

	find k <span class="sym">(</span>Bucket item<span class="sym">) =</span> <span class="kwa">if</span> <span class="sym">(</span>item<span class="sym">.</span>key<span class="sym">==</span>k<span class="sym">)</span> item <span class="sym">{</span>key<span class="sym">=</span>k<span class="sym">,</span>val<span class="sym">=</span><span class="num">0</span><span class="sym">}</span>
	find k <span class="sym">(</span>Buckets l<span class="sym">) =</span> find_l k l
	find k EmptyBucket <span class="sym">= {</span>key<span class="sym">=</span>k<span class="sym">,</span>val<span class="sym">=</span><span class="num">0</span><span class="sym">}</span>

	find_l k <span class="sym">[|</span>item<span class="sym">:</span>ls<span class="sym">] =</span> <span class="kwa">if</span> <span class="sym">(</span>item<span class="sym">.</span>key<span class="sym">==</span>k<span class="sym">)</span> item <span class="sym">(</span>find_l k ls<span class="sym">)</span>
	find_l k <span class="sym">[|] = {</span>key<span class="sym">=</span>k<span class="sym">,</span>val<span class="sym">=</span><span class="num">0</span><span class="sym">}</span>

htAddOrUpdate k v f ht<span class="sym">=:{</span>table<span class="sym">}</span>
	<span class="sym"># (</span>nBuckets<span class="sym">,</span>table<span class="sym">) =</span> usize table
	  i <span class="sym">=</span> hash k nBuckets
 	  <span class="sym">(</span>b<span class="sym">,</span>table<span class="sym">) =</span> table<span class="sym">![</span>i<span class="sym">]</span>
	<span class="sym">:== {</span>ht <span class="sym">&amp;</span> table <span class="sym">= {</span>table <span class="sym">&amp; [</span>i<span class="sym">] =</span> addOrUpdateItem b k<span class="sym">}}</span> <span class="kwa">where</span>

<span class="slc">//	addOrUpdateItem :: !Buckets !{#Char} -&gt; Buckets</span>
	addOrUpdateItem EmptyBucket k <span class="sym">=</span> Bucket <span class="sym">{</span>key<span class="sym">=</span>k<span class="sym">,</span>val<span class="sym">=</span>v<span class="sym">}</span>
	addOrUpdateItem <span class="sym">(</span>Bucket item<span class="sym">=:{</span>key<span class="sym">,</span>val<span class="sym">})</span> k
	   <span class="sym">|</span> key<span class="sym">==</span>k	<span class="sym">=</span> Bucket <span class="sym">{</span>item <span class="sym">&amp;</span> val<span class="sym">=</span>f val<span class="sym">}</span>
	   			<span class="sym">=</span> Buckets <span class="sym">[|</span>item <span class="sym">, {</span>key<span class="sym">=</span>k<span class="sym">,</span>val<span class="sym">=</span>v<span class="sym">}]</span>
	addOrUpdateItem <span class="sym">(</span>Buckets b<span class="sym">)</span> k <span class="sym">=</span> Buckets <span class="sym">(</span>addOrUpdateItemL b k<span class="sym">)</span>

<span class="slc">//	addOrUpdateItemL :: ![!Item!] !{#Char} -&gt; [!Item!]</span>
	addOrUpdateItemL <span class="sym">[|</span>item<span class="sym">=:{</span>key<span class="sym">,</span>val<span class="sym">}:</span>ls<span class="sym">]</span> k
	   <span class="sym">|</span> key<span class="sym">==</span>k	<span class="sym">= [|{</span>item <span class="sym">&amp;</span> val<span class="sym">=</span>f val<span class="sym">}:</span>ls<span class="sym">]</span>
	   			<span class="sym">= [|</span>item <span class="sym">:</span> addOrUpdateItemL ls k<span class="sym">]</span>
	addOrUpdateItemL <span class="sym">[|]</span> k <span class="sym">= [|{</span>key<span class="sym">=</span>k<span class="sym">,</span>val<span class="sym">=</span>v<span class="sym">}]</span>

<span class="slc">//htItems :: !HashTable -&gt; [Item]</span>
htItems ht<span class="sym">=:{</span>table<span class="sym">} =</span> ht_items <span class="num">0</span> table <span class="kwa">where</span>

	ht_items i table <span class="sym">|</span> i&gt;<span class="sym">=</span>size table <span class="sym">= []</span>
					 <span class="sym">=</span> ht_items_bucket table<span class="sym">.[</span>i<span class="sym">] (</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span> table

	ht_items_bucket EmptyBucket i table <span class="sym">=</span> ht_items i table
	ht_items_bucket <span class="sym">(</span>Bucket e<span class="sym">)</span>  i table <span class="sym">= [</span>e<span class="sym">:</span>ht_items i table<span class="sym">]</span>
	ht_items_bucket <span class="sym">(</span>Buckets b<span class="sym">)</span> i table <span class="sym">=</span> ht_items_list b i table

	ht_items_list <span class="sym">[|</span>e<span class="sym">:</span>l<span class="sym">]</span> i table <span class="sym">= [</span>e<span class="sym">:</span>ht_items_list l i table<span class="sym">]</span>
	ht_items_list <span class="sym">[|]</span>    i table <span class="sym">=</span> ht_items i table
