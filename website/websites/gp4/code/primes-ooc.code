<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org</span>
<span class="hl com">   contributed by Isaac Gouy (Oberon-2 novice)</span>
<span class="hl com">*)</span>

<span class="hl kwa">MODULE</span> primes<span class="hl sym">;</span>
<span class="hl kwa">IMPORT</span> Shootout<span class="hl sym">,</span> Out<span class="hl sym">,</span> LRealMath<span class="hl sym">;</span>

<span class="hl kwa">VAR</span>
   n<span class="hl sym">,</span> i<span class="hl sym">:</span> <span class="hl kwb">LONGINT</span><span class="hl sym">;</span>


<span class="hl kwa">PROCEDURE</span> <span class="hl kwd">IsPrime</span><span class="hl sym">(</span>k<span class="hl sym">:</span> <span class="hl kwb">LONGINT</span><span class="hl sym">):</span> <span class="hl kwb">BOOLEAN</span><span class="hl sym">;</span>
<span class="hl kwa">VAR</span>
   limit<span class="hl sym">,</span> i<span class="hl sym">:</span> <span class="hl kwb">LONGINT</span><span class="hl sym">;</span>
<span class="hl kwa">BEGIN</span>
   <span class="hl kwa">IF</span> k <span class="hl sym">&lt;</span> <span class="hl num">2</span> <span class="hl kwa">THEN RETURN</span> FALSE<span class="hl sym">;</span>
   <span class="hl kwa">ELSIF</span> k <span class="hl sym">&lt;</span> <span class="hl num">4</span> <span class="hl kwa">THEN RETURN</span> TRUE<span class="hl sym">;</span>
   <span class="hl kwa">ELSIF</span> ~<span class="hl kwa">ODD</span><span class="hl sym">(</span>k<span class="hl sym">)</span> <span class="hl kwa">THEN RETURN</span> FALSE<span class="hl sym">;</span>
   <span class="hl kwa">ELSIF</span> <span class="hl sym">((</span>k<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">MOD</span> <span class="hl num">6</span> # <span class="hl num">0</span><span class="hl sym">) &amp; ((</span>k<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">MOD</span> <span class="hl num">6</span> # <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">THEN RETURN</span> FALSE<span class="hl sym">;</span>
   <span class="hl kwa">ELSE</span>
      limit <span class="hl sym">:=</span> <span class="hl kwa">ENTIER</span><span class="hl sym">(</span>LRealMath<span class="hl sym">.</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>k<span class="hl sym">));</span>
      <span class="hl kwa">FOR</span> i <span class="hl sym">:=</span> <span class="hl num">5</span> <span class="hl kwa">TO</span> limit BY <span class="hl num">2</span> <span class="hl kwa">DO</span>
         <span class="hl kwa">IF</span> k <span class="hl kwa">MOD</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">THEN RETURN</span> FALSE<span class="hl sym">;</span> <span class="hl kwa">END</span><span class="hl sym">;</span>
      <span class="hl kwa">END</span><span class="hl sym">;</span>
   <span class="hl kwa">END</span><span class="hl sym">;</span>
   <span class="hl kwa">RETURN</span> TRUE<span class="hl sym">;</span>
<span class="hl kwa">END</span> IsPrime<span class="hl sym">;</span>


<span class="hl kwa">PROCEDURE</span> <span class="hl kwd">Prime</span><span class="hl sym">(</span>n<span class="hl sym">:</span> <span class="hl kwb">LONGINT</span><span class="hl sym">):</span> <span class="hl kwb">LONGINT</span><span class="hl sym">;</span>
<span class="hl kwa">VAR</span>
   count<span class="hl sym">,</span> k<span class="hl sym">:</span> <span class="hl kwb">LONGINT</span><span class="hl sym">;</span>
<span class="hl kwa">BEGIN</span>
   count <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   k <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">;</span>
   <span class="hl kwa">WHILE</span> count <span class="hl sym">&lt;</span> n <span class="hl kwa">DO</span>
      <span class="hl kwa">IF</span> <span class="hl kwd">IsPrime</span><span class="hl sym">(</span>k<span class="hl sym">)</span> <span class="hl kwa">THEN INC</span><span class="hl sym">(</span>count<span class="hl sym">);</span> <span class="hl kwa">END</span><span class="hl sym">;</span>
      <span class="hl kwa">INC</span><span class="hl sym">(</span>k<span class="hl sym">);</span>
   <span class="hl kwa">END</span><span class="hl sym">;</span>
   <span class="hl kwa">RETURN</span> k<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">;</span>
<span class="hl kwa">END</span> Prime<span class="hl sym">;</span>


<span class="hl kwa">BEGIN</span>
   n <span class="hl sym">:=</span> Shootout<span class="hl sym">.</span><span class="hl kwd">Argi</span><span class="hl sym">();</span>

   Out<span class="hl sym">.</span><span class="hl kwd">String</span><span class="hl sym">(</span><span class="hl str">&quot;1st prime is &quot;</span><span class="hl sym">);</span> Out<span class="hl sym">.</span><span class="hl kwd">Int</span><span class="hl sym">(</span><span class="hl kwd">Prime</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span><span class="hl num">1</span><span class="hl sym">);</span> Out<span class="hl sym">.</span>Ln<span class="hl sym">;</span>
   Out<span class="hl sym">.</span><span class="hl kwd">String</span><span class="hl sym">(</span><span class="hl str">&quot;2nd prime is &quot;</span><span class="hl sym">);</span> Out<span class="hl sym">.</span><span class="hl kwd">Int</span><span class="hl sym">(</span><span class="hl kwd">Prime</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">),</span><span class="hl num">1</span><span class="hl sym">);</span> Out<span class="hl sym">.</span>Ln<span class="hl sym">;</span>

   i <span class="hl sym">:=</span> <span class="hl num">10</span><span class="hl sym">*</span>n<span class="hl sym">;</span>
   <span class="hl kwa">WHILE</span> i <span class="hl sym">&lt;=</span> <span class="hl num">50</span><span class="hl sym">*</span>n <span class="hl kwa">DO</span>
      Out<span class="hl sym">.</span><span class="hl kwd">Int</span><span class="hl sym">(</span>i<span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">);</span> Out<span class="hl sym">.</span><span class="hl kwd">String</span><span class="hl sym">(</span><span class="hl str">&quot;th prime is &quot;</span><span class="hl sym">);</span> Out<span class="hl sym">.</span><span class="hl kwd">Int</span><span class="hl sym">(</span><span class="hl kwd">Prime</span><span class="hl sym">(</span>i<span class="hl sym">),</span><span class="hl num">1</span><span class="hl sym">);</span> Out<span class="hl sym">.</span>Ln<span class="hl sym">;</span>
      <span class="hl kwa">INC</span><span class="hl sym">(</span>i<span class="hl sym">,</span><span class="hl num">10</span><span class="hl sym">*</span>n<span class="hl sym">);</span>
   <span class="hl kwa">END</span><span class="hl sym">;</span>
<span class="hl kwa">END</span> primes<span class="hl sym">.</span>
