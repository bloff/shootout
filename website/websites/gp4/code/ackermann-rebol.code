The Computer Language Shootout http<span class="sym">:</span><span class="slc">//shootout.alioth.debian.org/</span>

REBOL <span class="sym">[</span>Title<span class="sym">:</span> <span class="str">&quot;ackermann&quot;</span> Date<span class="sym">:</span> <span class="num">21</span><span class="sym">-</span>Jun<span class="sym">-</span><span class="num">2003</span> Author<span class="sym">:</span> <span class="str">&quot;Isaac Gouy (Rebol novice)&quot;</span><span class="sym">]</span>

<span class="sym">;</span> get the command line arg
argN<span class="sym">:</span> does <span class="sym">[</span>
   n<span class="sym">:</span> to<span class="sym">-</span>integer system<span class="sym">/</span>script<span class="sym">/</span>args
   either n <span class="sym">&gt;</span> <span class="num">0</span> <span class="sym">[</span>n<span class="sym">] [</span><span class="num">1</span><span class="sym">]</span>
   <span class="sym">]</span>



n<span class="sym">:</span> argN

ack<span class="sym">:</span> func <span class="sym">[</span>m n<span class="sym">][</span>
   <span class="kwa">if</span> m <span class="sym">=</span> <span class="num">0</span> <span class="sym">[</span><span class="kwa">return</span> n <span class="sym">+</span> <span class="num">1</span><span class="sym">]</span>
   <span class="kwa">if</span> n <span class="sym">=</span> <span class="num">0</span> <span class="sym">[</span><span class="kwa">return</span> <span class="kwd">ack</span> <span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">)</span> <span class="num">1</span><span class="sym">]</span>
   <span class="kwa">return</span> <span class="kwd">ack</span> <span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">) (</span>ack <span class="kwd">m</span> <span class="sym">(</span>n <span class="sym">-</span> <span class="num">1</span><span class="sym">))</span>
   <span class="sym">]</span>

print rejoin <span class="sym">[</span><span class="str">&quot;Ack(3,&quot;</span> n <span class="str">&quot;): &quot;</span> ack <span class="num">3</span> n<span class="sym">]</span>
