<span class="slc">-- $Id: message-ghc.code,v 1.31 2006-02-14 19:12:39 igouy-guest Exp $</span>
<span class="slc">-- The Great Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- Contributed by Einar Karttunen</span>
<span class="slc">-- Modified by Simon Marlow and Don Stewart</span>

<span class="kwa">import</span> Control.Concurrent<span class="sym">;</span> <span class="kwa">import</span> Control.Monad<span class="sym">;</span> <span class="kwa">import</span> System

thread im om <span class="sym">=</span> <span class="kwa">do</span> <span class="sym">(</span>x<span class="sym">::</span><span class="kwb">Int</span><span class="sym">) &lt;-</span> takeMVar im<span class="sym">;</span> putMVar om $<span class="sym">!</span> x<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> thread im om

spawn  c  _  <span class="sym">=</span> <span class="kwa">do</span> n <span class="sym">&lt;-</span> newEmptyMVar<span class="sym">;</span> forkIO <span class="sym">(</span>thread c n<span class="sym">);</span> return n

main <span class="sym">=</span> <span class="kwa">do</span> n <span class="sym">&lt;-</span> getArgs <span class="sym">&gt;&gt;=</span> readIO . head
          s <span class="sym">&lt;-</span> newEmptyMVar
          f <span class="sym">&lt;-</span> newEmptyMVar
          e <span class="sym">&lt;-</span> foldM spawn s <span class="sym">[</span><span class="num">1</span>.<span class="num">.500</span><span class="sym">]</span>
          forkIO $ replicateM n <span class="sym">(</span>takeMVar e<span class="sym">) &gt;&gt;=</span> putMVar f . sum
          replicateM n <span class="sym">(</span>putMVar s <span class="num">0</span><span class="sym">)</span>
          takeMVar f <span class="sym">&gt;&gt;=</span> print

