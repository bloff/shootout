#<span class="sym">!/</span>usr<span class="sym">/</span>bin<span class="sym">/</span>guile \
<span class="sym">-</span>e main <span class="sym">-</span>s
<span class="sym">!</span>#
<span class="slc">;;;  http://shootout.alioth.debian.org/</span>
<span class="slc">;;;  by Greg Buchholz</span>

<span class="sym">(</span>define <span class="sym">(</span>main args<span class="sym">)</span>
  <span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span>string<span class="sym">-&gt;</span>number <span class="sym">(</span><span class="kwa">cadr</span> args<span class="sym">))))</span>
    <span class="sym">(</span>display <span class="sym">(</span>tak <span class="sym">(*</span> <span class="num">3.0</span> n<span class="sym">) (*</span> <span class="num">2.0</span> n<span class="sym">) (*</span> <span class="num">1.0</span> n<span class="sym">)) )</span>
    <span class="sym">(</span>newline<span class="sym">)))</span>

<span class="sym">(</span>define <span class="sym">(</span>tak x y z<span class="sym">)</span>
    <span class="sym">(</span><span class="kwa">if</span> <span class="sym">(&gt;=</span> y x<span class="sym">)</span>
        z
        <span class="sym">(</span>tak <span class="sym">(</span>tak <span class="sym">(-</span> x <span class="num">1.0</span><span class="sym">)</span> y z<span class="sym">)</span>
             <span class="sym">(</span>tak <span class="sym">(-</span> y <span class="num">1.0</span><span class="sym">)</span> z x<span class="sym">)</span>
             <span class="sym">(</span>tak <span class="sym">(-</span> z <span class="num">1.0</span><span class="sym">)</span> x y<span class="sym">))))</span>

