<span class="hl com">{ The Computer Language Shootout</span>
<span class="hl com">  http://shootout.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">  contributed by Ales Katona</span>
<span class="hl com">  modified by Vincent Snijders</span>
<span class="hl com">}</span>

<span class="hl kwa">program</span> mandelbrot<span class="hl sym">;</span>

<span class="hl com">{$FPUTYPE SSE2}</span><span class="hl com">{$I-}</span>

<span class="hl kwa">var</span> n<span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">,</span> bits<span class="hl sym">,</span>bit<span class="hl sym">:</span> <span class="hl kwb">Longint</span><span class="hl sym">;</span>
    Cx<span class="hl sym">,</span> Cy<span class="hl sym">:</span> <span class="hl kwb">double</span><span class="hl sym">;</span>

<span class="hl kwa">procedure</span> CalculatePoint<span class="hl sym">;</span> nostackframe<span class="hl sym">;</span>
<span class="hl kwa">const</span>
  Limit<span class="hl sym">:</span> <span class="hl kwb">double</span> <span class="hl sym">=</span><span class="hl num">4.0</span><span class="hl sym">;</span>
  zero<span class="hl sym">:</span> <span class="hl kwb">double</span> <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
<span class="hl kwa">var</span>
  i<span class="hl sym">:</span> <span class="hl kwb">longint</span><span class="hl sym">;</span>
  OutOfLimit<span class="hl sym">:</span> <span class="hl kwb">boolean</span><span class="hl sym">;</span>
  Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Ti<span class="hl sym">,</span> Tr<span class="hl sym">:</span> <span class="hl kwb">Double</span><span class="hl sym">;</span>

<span class="hl kwa">begin</span>
  Cr <span class="hl sym">:=</span> Cx<span class="hl sym">;</span> Ci <span class="hl sym">:=</span> Cy<span class="hl sym">;</span>
  Zr <span class="hl sym">:=</span> zero<span class="hl sym">;</span>  Zi <span class="hl sym">:=</span> zero<span class="hl sym">;</span> Tr <span class="hl sym">:=</span> zero<span class="hl sym">;</span> Ti <span class="hl sym">:=</span> zero<span class="hl sym">;</span>
  i <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span>
  <span class="hl kwa">repeat</span>
    Zi <span class="hl sym">:=</span> <span class="hl num">2</span><span class="hl sym">*</span>Zr<span class="hl sym">*</span>Zi <span class="hl sym">+</span> Ci<span class="hl sym">;</span>
    Zr <span class="hl sym">:=</span> Tr <span class="hl sym">-</span> Ti <span class="hl sym">+</span> Cr<span class="hl sym">;</span>
    Ti <span class="hl sym">:=</span> Zi <span class="hl sym">*</span> Zi<span class="hl sym">;</span>
    Tr <span class="hl sym">:=</span> Zr <span class="hl sym">*</span> Zr<span class="hl sym">;</span>
    <span class="hl kwd">inc</span><span class="hl sym">(</span>i<span class="hl sym">);</span>
    OutOfLimit <span class="hl sym">:= (</span>Tr <span class="hl sym">+</span> Ti<span class="hl sym">&gt;=</span>limit<span class="hl sym">);</span>
  <span class="hl kwa">until</span> OutOfLimit <span class="hl kwa">or</span> <span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">50</span><span class="hl sym">);</span>

  <span class="hl kwa">if</span> OutOfLimit <span class="hl kwa">then</span>
    bits <span class="hl sym">:=</span> bits <span class="hl kwa">xor</span> bit<span class="hl sym">;</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl com">{$FPUTYPE X87}</span>

<span class="hl kwa">begin</span>
  <span class="hl kwd">Val</span><span class="hl sym">(</span><span class="hl kwd">ParamStr</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> n<span class="hl sym">);</span>
  <span class="hl kwd">writeln</span><span class="hl sym">(</span><span class="hl str">'P4'</span><span class="hl sym">);</span>
  <span class="hl kwd">writeln</span><span class="hl sym">(</span>n<span class="hl sym">,</span><span class="hl str">' '</span><span class="hl sym">,</span>n<span class="hl sym">);</span>
  <span class="hl kwa">for</span> y <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n<span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
  <span class="hl kwa">begin</span>
    Cy <span class="hl sym">:=</span> y <span class="hl sym">*</span> <span class="hl num">2</span> <span class="hl sym">/</span> n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span>
    bits <span class="hl sym">:=</span> <span class="hl num">255</span><span class="hl sym">;</span>  bit <span class="hl sym">:=</span> <span class="hl num">128</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> x <span class="hl sym">:=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> n<span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
    <span class="hl kwa">begin</span>
      Cx <span class="hl sym">:=</span> x <span class="hl sym">*</span> <span class="hl num">2</span> <span class="hl sym">/</span> n  <span class="hl sym">-</span> <span class="hl num">1.5</span><span class="hl sym">;</span>

      CalculatePoint<span class="hl sym">;</span>

      <span class="hl kwa">if</span> bit <span class="hl sym">&gt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span>
        bit <span class="hl sym">:=</span> bit <span class="hl kwa">shr</span> <span class="hl num">1</span>
      <span class="hl kwa">else</span>
      <span class="hl kwa">begin</span>
        <span class="hl kwd">write</span><span class="hl sym">(</span><span class="hl kwd">chr</span><span class="hl sym">(</span>bits<span class="hl sym">));</span>
        bits <span class="hl sym">:=</span> <span class="hl num">255</span><span class="hl sym">;</span>  bit <span class="hl sym">:=</span> <span class="hl num">128</span><span class="hl sym">;</span>
      <span class="hl kwa">end</span><span class="hl sym">;</span>
    <span class="hl kwa">end</span><span class="hl sym">;</span>
    <span class="hl kwa">if</span> bit <span class="hl sym">&lt;</span> <span class="hl num">128</span> <span class="hl kwa">then</span> <span class="hl kwd">write</span><span class="hl sym">(</span><span class="hl kwd">chr</span><span class="hl sym">(</span>bits <span class="hl kwa">xor</span><span class="hl sym">((</span>bit <span class="hl kwa">shl</span> <span class="hl num">1</span><span class="hl sym">)-</span><span class="hl num">1</span><span class="hl sym">)));</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>
<span class="hl kwa">end</span><span class="hl sym">.</span>
