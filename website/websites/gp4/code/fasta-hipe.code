<span class="slc">%  The Computer Language Shootout</span>
<span class="slc">%   http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">%   contributed by Alex Peake</span>
<span class="slc">%</span>
<span class="slc">%   erl -noshell -noinput -run fasta main N</span>

<span class="sym">-</span><span class="kwa">module</span><span class="sym">(</span>fasta<span class="sym">).</span>

<span class="sym">-</span><span class="kwa">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">0</span><span class="sym">,</span> main<span class="sym">/</span><span class="num">1</span><span class="sym">]).</span>

<span class="sym">-</span><span class="kwa">define</span><span class="sym">(</span>IM<span class="sym">,</span> <span class="num">139968</span><span class="sym">).</span>
<span class="sym">-</span><span class="kwa">define</span><span class="sym">(</span>IA<span class="sym">,</span> <span class="num">3877</span><span class="sym">).</span>
<span class="sym">-</span><span class="kwa">define</span><span class="sym">(</span>IC<span class="sym">,</span> <span class="num">29573</span><span class="sym">).</span>

<span class="sym">-</span><span class="kwa">define</span><span class="sym">(</span>ALU<span class="sym">,</span><span class="str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="sym">).</span>
<span class="sym">-</span><span class="kwa">define</span><span class="sym">(</span>HS<span class="sym">, [{</span>$a<span class="sym">,</span> <span class="num">0.3029549426680</span><span class="sym">}, {</span>$c<span class="sym">,</span> <span class="num">0.1979883004921</span><span class="sym">}, {</span>$g<span class="sym">,</span> <span class="num">0.1975473066391</span><span class="sym">}, {</span>$t<span class="sym">,</span> <span class="num">0.3015094502008</span><span class="sym">}]).</span>
<span class="sym">-</span><span class="kwa">define</span><span class="sym">(</span>IUB<span class="sym">, [{</span>$a<span class="sym">,</span> <span class="num">0.27</span><span class="sym">}, {</span>$c<span class="sym">,</span> <span class="num">0.12</span><span class="sym">}, {</span>$g<span class="sym">,</span> <span class="num">0.12</span><span class="sym">}, {</span>$t<span class="sym">,</span> <span class="num">0.27</span><span class="sym">}, {</span>$B<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$D<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$H<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$K<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$M<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$N<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$R<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$S<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$V<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$W<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}, {</span>$Y<span class="sym">,</span> <span class="num">0.02</span><span class="sym">}]).</span>

<span class="sym">-</span><span class="kwa">define</span><span class="sym">(</span>LINE_LENGTH<span class="sym">,</span> <span class="num">60</span><span class="sym">).</span>

<span class="kwd">main</span><span class="sym">() -&gt;</span> <span class="kwd">main</span><span class="sym">([</span><span class="str">&quot;1000&quot;</span><span class="sym">]).</span>
<span class="kwd">main</span><span class="sym">([</span>Arg<span class="sym">]) -&gt;</span>
   N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span>Arg<span class="sym">),</span>
   Seed <span class="sym">=</span> <span class="num">42</span><span class="sym">,</span>
   <span class="kwd">write_fasta_cycle</span><span class="sym">(</span><span class="str">&quot;ONE&quot;</span><span class="sym">,</span><span class="str">&quot;Homo sapiens alu&quot;</span><span class="sym">, ?</span>ALU<span class="sym">,</span> N<span class="sym">*</span><span class="num">2</span><span class="sym">),</span>
   NewSeed <span class="sym">=</span> <span class="kwd">write_fasta_rand</span><span class="sym">(</span><span class="str">&quot;TWO&quot;</span><span class="sym">,</span><span class="str">&quot;IUB ambiguity codes&quot;</span><span class="sym">, ?</span>IUB<span class="sym">,</span> N<span class="sym">*</span><span class="num">3</span><span class="sym">,</span> Seed<span class="sym">),</span>
   <span class="kwd">write_fasta_rand</span><span class="sym">(</span><span class="str">&quot;THREE&quot;</span><span class="sym">,</span><span class="str">&quot;Homo sapiens frequency&quot;</span><span class="sym">, ?</span>HS<span class="sym">,</span> N<span class="sym">*</span><span class="num">5</span><span class="sym">,</span> NewSeed<span class="sym">),</span>
   <span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">).</span>

<span class="slc">%% Write a sequence in LINE_LENGTH lines</span>
<span class="kwd">write_fasta_cycle</span><span class="sym">(</span>Id<span class="sym">,</span> Description<span class="sym">,</span> Seq<span class="sym">,</span> Total<span class="sym">) -&gt;</span>
	io<span class="sym">:</span><span class="kwd">put_chars</span><span class="sym">(</span><span class="str">&quot;&gt;&quot;</span> <span class="sym">++</span> Id <span class="sym">++</span> <span class="str">&quot; &quot;</span> <span class="sym">++</span> Description <span class="sym">++</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">),</span>
	<span class="kwd">write_fasta_cycle</span><span class="sym">(</span>Seq<span class="sym">,</span> Total<span class="sym">).</span>
<span class="kwd">write_fasta_cycle</span><span class="sym">(</span>Seq<span class="sym">,</span> Total<span class="sym">)</span> <span class="kwa">when</span> Total <span class="sym">=&lt; ?</span>LINE_LENGTH <span class="sym">-&gt;</span>
	<span class="sym">{</span>Seq1<span class="sym">,</span> _Remainder<span class="sym">} =</span> <span class="kwd">seq_len</span><span class="sym">(</span>Seq<span class="sym">,</span> Total<span class="sym">),</span>
	io<span class="sym">:</span><span class="kwd">put_chars</span><span class="sym">(</span>Seq1 <span class="sym">++</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
<span class="kwd">write_fasta_cycle</span><span class="sym">(</span>Seq<span class="sym">,</span> Total<span class="sym">) -&gt;</span>
	<span class="sym">{</span>Seq1<span class="sym">,</span> Remainder<span class="sym">} =</span> <span class="kwd">seq_len</span><span class="sym">(</span>Seq<span class="sym">, ?</span>LINE_LENGTH<span class="sym">),</span>
	io<span class="sym">:</span><span class="kwd">put_chars</span><span class="sym">(</span>Seq1 <span class="sym">++</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">),</span>
	<span class="kwd">write_fasta_cycle</span><span class="sym">(</span>Remainder<span class="sym">,</span> Total <span class="sym">- ?</span>LINE_LENGTH<span class="sym">).</span>

<span class="slc">%% Return a Len of a cycle of ALU</span>
<span class="kwd">seq_len</span><span class="sym">(</span>Seq<span class="sym">,</span> Len<span class="sym">)</span> <span class="kwa">when</span> <span class="kwb">length</span><span class="sym">(</span>Seq<span class="sym">) &gt;=</span> Len <span class="sym">-&gt;</span>
	lists<span class="sym">:</span><span class="kwd">split</span><span class="sym">(</span>Len<span class="sym">,</span> Seq<span class="sym">);</span>
<span class="kwd">seq_len</span><span class="sym">(</span>Seq<span class="sym">,</span> Len<span class="sym">)</span> <span class="kwa">when</span> <span class="kwb">length</span><span class="sym">(?</span>ALU<span class="sym">) &lt;</span> Len <span class="sym">-</span> <span class="kwb">length</span><span class="sym">(</span>Seq<span class="sym">) -&gt;</span>
	<span class="kwd">seq_len</span><span class="sym">(</span>Seq <span class="sym">++ ?</span>ALU<span class="sym">,</span> Len<span class="sym">);</span>
<span class="kwd">seq_len</span><span class="sym">(</span>Seq<span class="sym">,</span> Len<span class="sym">) -&gt;</span>
	<span class="sym">{</span>Seq1<span class="sym">,</span> Seq2<span class="sym">} =</span> lists<span class="sym">:</span><span class="kwd">split</span><span class="sym">(</span>Len <span class="sym">-</span> <span class="kwb">length</span><span class="sym">(</span>Seq<span class="sym">), ?</span>ALU<span class="sym">),</span>
	<span class="sym">{</span>Seq <span class="sym">++</span> Seq1<span class="sym">,</span> Seq2<span class="sym">}.</span>

<span class="slc">%% Write a random sequence in LINE_LENGTH lines</span>
<span class="kwd">write_fasta_rand</span><span class="sym">(</span>Id<span class="sym">,</span> Description<span class="sym">,</span> Freq<span class="sym">,</span> Total<span class="sym">,</span> Seed<span class="sym">) -&gt;</span>
	io<span class="sym">:</span><span class="kwd">put_chars</span><span class="sym">(</span><span class="str">&quot;&gt;&quot;</span> <span class="sym">++</span> Id <span class="sym">++</span> <span class="str">&quot; &quot;</span> <span class="sym">++</span> Description <span class="sym">++</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">),</span>
	NewSeed <span class="sym">=</span> <span class="kwd">write_fasta_rand</span><span class="sym">(</span>Freq<span class="sym">,</span> Total<span class="sym">,</span> Seed<span class="sym">),</span>
	NewSeed<span class="sym">.</span>
<span class="kwd">write_fasta_rand</span><span class="sym">(</span>Freq<span class="sym">,</span> Total<span class="sym">,</span> Seed<span class="sym">)</span> <span class="kwa">when</span> Total <span class="sym">=&lt; ?</span>LINE_LENGTH <span class="sym">-&gt;</span>
	<span class="sym">{</span>RandList<span class="sym">,</span> NewSeed<span class="sym">} =</span> <span class="kwd">rand_list</span><span class="sym">(</span>Freq<span class="sym">,</span> Total<span class="sym">, [],</span> Seed<span class="sym">),</span>
	io<span class="sym">:</span><span class="kwd">put_chars</span><span class="sym">(</span>RandList<span class="sym">),</span>
	NewSeed<span class="sym">;</span>
<span class="kwd">write_fasta_rand</span><span class="sym">(</span>Freq<span class="sym">,</span> Total<span class="sym">,</span> Seed<span class="sym">) -&gt;</span>
	<span class="sym">{</span>RandList<span class="sym">,</span> NewSeed<span class="sym">} =</span> <span class="kwd">rand_list</span><span class="sym">(</span>Freq<span class="sym">, ?</span>LINE_LENGTH<span class="sym">, [],</span> Seed<span class="sym">),</span>
	io<span class="sym">:</span><span class="kwd">put_chars</span><span class="sym">(</span>RandList<span class="sym">),</span>
	<span class="kwd">write_fasta_rand</span><span class="sym">(</span>Freq<span class="sym">,</span> Total <span class="sym">- ?</span>LINE_LENGTH<span class="sym">,</span> NewSeed<span class="sym">).</span>

<span class="slc">%% Return a Len of a random list of Freq</span>
<span class="kwd">rand_list</span><span class="sym">(</span>_Freq<span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> List<span class="sym">,</span> Seed<span class="sym">) -&gt;</span>
	<span class="sym">{</span>lists<span class="sym">:</span><span class="kwd">reverse</span><span class="sym">([</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span> <span class="sym">|</span> List<span class="sym">]),</span> Seed<span class="sym">};</span>
<span class="kwd">rand_list</span><span class="sym">(</span>Freq<span class="sym">,</span> Len<span class="sym">,</span> List<span class="sym">,</span> Seed<span class="sym">) -&gt;</span>
	<span class="sym">{</span>Rand<span class="sym">,</span> NewSeed<span class="sym">} =</span> <span class="kwd">rand</span><span class="sym">(</span>Seed<span class="sym">),</span>
	<span class="kwd">rand_list</span><span class="sym">(</span>Freq<span class="sym">,</span> Len <span class="sym">-</span> <span class="num">1</span><span class="sym">, [</span><span class="kwd">choose_base</span><span class="sym">(</span>Freq<span class="sym">,</span> Rand<span class="sym">) |</span> List<span class="sym">],</span> NewSeed<span class="sym">).</span>

<span class="slc">%% Functional random number generator</span>
<span class="kwd">rand</span><span class="sym">(</span>Seed<span class="sym">) -&gt;</span>
   NewSeed <span class="sym">= (</span>Seed <span class="sym">* ?</span>IA <span class="sym">+ ?</span>IC<span class="sym">)</span> <span class="kwa">rem</span> <span class="sym">?</span>IM<span class="sym">,</span>
   <span class="sym">{</span>NewSeed <span class="sym">/ ?</span>IM<span class="sym">,</span> NewSeed<span class="sym">}.</span>

<span class="slc">%% Select the Base corresponding to the calculated cumulative Probability</span>
<span class="kwd">choose_base</span><span class="sym">([{</span>Base<span class="sym">,</span>_<span class="sym">}],</span> _<span class="sym">)</span>
	<span class="sym">-&gt;</span> Base<span class="sym">;</span>
<span class="kwd">choose_base</span><span class="sym">([{</span>Base<span class="sym">,</span>Freq<span class="sym">} |</span> _<span class="sym">],</span> Prob<span class="sym">)</span> <span class="kwa">when</span> Prob <span class="sym">&lt;</span> Freq <span class="sym">-&gt;</span>
	Base<span class="sym">;</span>
<span class="kwd">choose_base</span><span class="sym">([{</span>_Base<span class="sym">,</span>Freq<span class="sym">} |</span> Bases<span class="sym">],</span> Prob<span class="sym">) -&gt;</span>
	<span class="kwd">choose_base</span><span class="sym">(</span>Bases<span class="sym">,</span> Prob <span class="sym">-</span> Freq<span class="sym">).</span>
