<span class="hl com">/* The Computer Language Shootout</span>
<span class="hl com">http://shootout.alioth.debian.org/</span>
<span class="hl com">contributed by Alexei Svitkine</span>
<span class="hl com">*/</span>

<span class="hl kwa">public class</span> nsieve
<span class="hl sym">{</span>
  <span class="hl kwa">static</span> <span class="hl kwb">void</span> <span class="hl kwd">nsieve</span><span class="hl sym">(</span><span class="hl kwb">int</span> m<span class="hl sym">) {</span>
    <span class="hl kwb">int</span> count <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span> i<span class="hl sym">,</span> j<span class="hl sym">;</span>
    <span class="hl kwb">boolean</span><span class="hl sym">[]</span> flags <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwb">boolean</span><span class="hl sym">[</span>m<span class="hl sym">];</span>

    <span class="hl kwa">for</span> <span class="hl sym">(</span>i <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> m<span class="hl sym">; ++</span>i<span class="hl sym">)</span>
      <span class="hl kwa">if</span> <span class="hl sym">(!</span>flags<span class="hl sym">[</span>i<span class="hl sym">]) {</span>
        <span class="hl sym">++</span>count<span class="hl sym">;</span>
        <span class="hl kwa">for</span> <span class="hl sym">(</span>j <span class="hl sym">=</span> i <span class="hl sym">&lt;&lt;</span> <span class="hl num">1</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> m<span class="hl sym">;</span> j <span class="hl sym">+=</span> i<span class="hl sym">)</span>
          flags<span class="hl sym">[</span>j<span class="hl sym">] =</span> true<span class="hl sym">;</span>
      <span class="hl sym">}</span>

    <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span><span class="hl kwd">println</span><span class="hl sym">(</span><span class="hl kwc">String</span><span class="hl sym">.</span><span class="hl kwd">format</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to %8d %8d&quot;</span><span class="hl sym">,</span> m<span class="hl sym">,</span> count<span class="hl sym">));</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">public static</span> <span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwc">String</span><span class="hl sym">[]</span> args<span class="hl sym">) {</span>
    <span class="hl kwb">int</span> m <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">;</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>args<span class="hl sym">.</span>length <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">)</span> m <span class="hl sym">=</span> <span class="hl kwc">Integer</span><span class="hl sym">.</span><span class="hl kwd">parseInt</span><span class="hl sym">(</span>args<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]);</span>
    <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> <span class="hl num">3</span><span class="hl sym">;</span> i<span class="hl sym">++)</span>
      <span class="hl kwd">nsieve</span><span class="hl sym">(</span><span class="hl num">10000</span> <span class="hl sym">&lt;&lt; (</span>m<span class="hl sym">-</span>i<span class="hl sym">));</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>
