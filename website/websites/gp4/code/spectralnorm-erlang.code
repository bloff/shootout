<span class="slc">%   The Computer Language Shootout</span>
<span class="slc">%   http://shootout.alioth.debian.org/</span>
<span class="slc">%   contributed by Isaac Gouy (Erlang novice)</span>

<span class="sym">-</span><span class="kwa">module</span><span class="sym">(</span>spectralnorm<span class="sym">).</span>
<span class="sym">-</span><span class="kwa">export</span><span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">]).</span>

<span class="kwd">main</span><span class="sym">([</span>Arg<span class="sym">]) -&gt;</span>
    N <span class="sym">=</span> <span class="kwb">list_to_integer</span><span class="sym">(</span>Arg<span class="sym">),</span>
    <span class="sym">{</span>U<span class="sym">,</span>V<span class="sym">} =</span> <span class="kwd">powerMethod</span><span class="sym">(</span>N<span class="sym">,</span><span class="num">10</span><span class="sym">,</span> <span class="kwd">array</span><span class="sym">(</span><span class="num">1.0</span><span class="sym">,</span>N<span class="sym">,[]),</span> <span class="kwd">array</span><span class="sym">(</span><span class="num">0.0</span><span class="sym">,</span>N<span class="sym">,[]) ),</span>
    io<span class="sym">:</span><span class="kwd">format</span><span class="sym">(</span><span class="str">&quot;~.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,[</span> <span class="kwd">loop</span><span class="sym">(</span>N<span class="sym">,</span>U<span class="sym">,</span>V<span class="sym">,</span><span class="num">0.0</span><span class="sym">,</span><span class="num">0.0</span><span class="sym">) ]),</span>
    erlang<span class="sym">:</span><span class="kwb">halt</span><span class="sym">(</span><span class="num">0</span><span class="sym">).</span>

<span class="slc">% eigenvalue of V</span>
<span class="kwd">loop</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>_<span class="sym">,</span>_<span class="sym">,</span>VBV<span class="sym">,</span>VV<span class="sym">) -&gt;</span> <span class="kwb">math</span><span class="sym">:</span><span class="kwb">sqrt</span><span class="sym">(</span>VBV<span class="sym">/</span>VV<span class="sym">);</span>
<span class="kwd">loop</span><span class="sym">(</span>I<span class="sym">,</span>U<span class="sym">,</span>V<span class="sym">,</span>VBV<span class="sym">,</span>VV<span class="sym">) -&gt;</span>
   VI <span class="sym">=</span> <span class="kwb">element</span><span class="sym">(</span>I<span class="sym">,</span>V<span class="sym">),</span>
   <span class="kwd">loop</span><span class="sym">(</span>I<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>U<span class="sym">,</span>V<span class="sym">,</span> VBV <span class="sym">+</span> <span class="kwb">element</span><span class="sym">(</span>I<span class="sym">,</span>U<span class="sym">)*</span>VI<span class="sym">,</span> VV <span class="sym">+</span> VI<span class="sym">*</span>VI<span class="sym">).</span>

<span class="slc">% 2I steps of the power method</span>
<span class="kwd">powerMethod</span><span class="sym">(</span>_<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>A<span class="sym">,</span>B<span class="sym">) -&gt; {</span>A<span class="sym">,</span>B<span class="sym">};</span>
<span class="kwd">powerMethod</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">,</span>A<span class="sym">,</span>B<span class="sym">) -&gt;</span>
   V <span class="sym">=</span> <span class="kwd">atav</span><span class="sym">(</span>N<span class="sym">,</span>A<span class="sym">,</span>B<span class="sym">),</span>
   U <span class="sym">=</span> <span class="kwd">atav</span><span class="sym">(</span>N<span class="sym">,</span>V<span class="sym">,</span>A<span class="sym">),</span>
   <span class="kwd">powerMethod</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>U<span class="sym">,</span>V<span class="sym">).</span>

<span class="slc">% return element i,j of infinite matrix A</span>
<span class="kwd">a</span><span class="sym">(</span>II<span class="sym">,</span>JJ<span class="sym">) -&gt;</span>
   I <span class="sym">=</span> II<span class="sym">-</span><span class="num">1.0</span><span class="sym">,</span> J <span class="sym">=</span> JJ<span class="sym">-</span><span class="num">1.0</span><span class="sym">,</span>
   <span class="num">1.0</span><span class="sym">/((</span>I<span class="sym">+</span>J<span class="sym">)*(</span>I<span class="sym">+</span>J<span class="sym">+</span><span class="num">1.0</span><span class="sym">)/</span><span class="num">2.0</span> <span class="sym">+</span>I<span class="sym">+</span><span class="num">1.0</span><span class="sym">).</span>

<span class="slc">% multiply vector v by matrix A</span>
<span class="kwd">av</span><span class="sym">(</span>_<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>_<span class="sym">,</span>AV<span class="sym">) -&gt;</span> AV<span class="sym">;</span>
<span class="kwd">av</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span>AV<span class="sym">) -&gt;</span>
   <span class="kwd">av</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>V<span class="sym">,</span> <span class="kwb">setelement</span><span class="sym">(</span>I<span class="sym">,</span>AV<span class="sym">,</span> <span class="kwd">avloop</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span><span class="num">0.0</span><span class="sym">) )).</span>

<span class="kwd">avloop</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>_<span class="sym">,</span>_<span class="sym">,</span>X<span class="sym">) -&gt;</span> X<span class="sym">;</span>
<span class="kwd">avloop</span><span class="sym">(</span>J<span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span>X<span class="sym">) -&gt;</span>
   <span class="kwd">avloop</span><span class="sym">(</span>J<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span> X <span class="sym">+</span> <span class="kwd">a</span><span class="sym">(</span>I<span class="sym">,</span>J<span class="sym">)*</span><span class="kwb">element</span><span class="sym">(</span>J<span class="sym">,</span>V<span class="sym">) ).</span>

<span class="slc">% multiply vector v by matrix A transposed</span>
<span class="kwd">atv</span><span class="sym">(</span>_<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>_<span class="sym">,</span>ATV<span class="sym">) -&gt;</span> ATV<span class="sym">;</span>
<span class="kwd">atv</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span>ATV<span class="sym">) -&gt;</span>
   <span class="kwd">atv</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>V<span class="sym">,</span> <span class="kwb">setelement</span><span class="sym">(</span>I<span class="sym">,</span>ATV<span class="sym">,</span> <span class="kwd">atvloop</span><span class="sym">(</span>N<span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span><span class="num">0.0</span><span class="sym">) )).</span>

<span class="kwd">atvloop</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span>_<span class="sym">,</span>_<span class="sym">,</span>X<span class="sym">) -&gt;</span> X<span class="sym">;</span>
<span class="kwd">atvloop</span><span class="sym">(</span>J<span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span>X<span class="sym">) -&gt;</span> <span class="kwd">atvloop</span><span class="sym">(</span>J<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>I<span class="sym">,</span>V<span class="sym">,</span> X <span class="sym">+</span> <span class="kwd">a</span><span class="sym">(</span>J<span class="sym">,</span>I<span class="sym">)*</span><span class="kwb">element</span><span class="sym">(</span>J<span class="sym">,</span>V<span class="sym">) ).</span>

<span class="slc">% multiply vector v by matrix A and then by matrix A transposed</span>
<span class="kwd">atav</span><span class="sym">(</span>N<span class="sym">,</span>V<span class="sym">,</span>ATAV<span class="sym">) -&gt;</span>
   <span class="kwd">atv</span><span class="sym">(</span>N<span class="sym">,</span>N<span class="sym">,</span> <span class="kwd">av</span><span class="sym">(</span>N<span class="sym">,</span>N<span class="sym">,</span>V<span class="sym">,</span><span class="kwd">array</span><span class="sym">(</span><span class="num">0.0</span><span class="sym">,</span>N<span class="sym">,[])) ,</span>ATAV<span class="sym">).</span>

<span class="slc">% initialize a list and convert it to a tuple</span>
<span class="kwd">array</span><span class="sym">(</span>_<span class="sym">,</span><span class="num">0</span><span class="sym">,</span>L<span class="sym">) -&gt;</span> <span class="kwb">list_to_tuple</span><span class="sym">(</span>L<span class="sym">);</span>
<span class="kwd">array</span><span class="sym">(</span>X<span class="sym">,</span>N<span class="sym">,</span>L<span class="sym">) -&gt;</span> <span class="kwd">array</span><span class="sym">(</span>X<span class="sym">,</span>N<span class="sym">-</span><span class="num">1</span><span class="sym">,[</span>X<span class="sym">|</span>L<span class="sym">]).</span>
