<span class="slc">#!/usr/bin/ruby</span>
<span class="slc"># -*- mode: ruby -*-</span>
<span class="slc"># $Id: ackermann-ruby.code,v 1.27 2006-02-14 19:12:38 igouy-guest Exp $</span>
<span class="slc"># http://www.bagley.org/~doug/shootout/</span>

<span class="kwa">def</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n)
    <span class="kwa">if</span> m == <span class="num">0</span> <span class="kwa">then</span>
	n <span class="sym">+</span> <span class="num">1</span>
    <span class="kwa">elsif</span> n == <span class="num">0</span> <span class="kwa">then</span>
	<span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="num">1</span>)
    <span class="kwa">else</span>
	<span class="kwd">ack</span><span class="sym">(</span>m <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n <span class="sym">-</span> <span class="num">1</span>))
    <span class="kwa">end</span>
<span class="kwa">end</span>

NUM = <span class="kwd">Integer</span><span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">.</span>shift <span class="sym">||</span> <span class="num">1</span>)
print <span class="str">&quot;Ack(3,&quot;</span><span class="sym">,</span> NUM<span class="sym">,</span> <span class="str">&quot;)</span><span class="sym">:</span> <span class="str">&quot;, ack(3, NUM)</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span>
