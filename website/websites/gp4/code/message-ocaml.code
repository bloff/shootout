<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   Contributed by David Teller</span>
<span class="hl com">*)</span>

<span class="hl kwa">let</span> <span class="hl kwd">adder_thread</span> <span class="hl sym">(</span>incoming<span class="hl sym">,</span> outgoing<span class="hl sym">) =</span>
  <span class="hl kwa">while true do</span>
    Event.<span class="hl kwd">sync</span><span class="hl sym">(</span>Event.send <span class="hl kwd">outgoing</span> <span class="hl sym">(</span>Event.<span class="hl kwd">sync</span><span class="hl sym">(</span>Event.receive incoming<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">))</span>
  <span class="hl kwa">done</span>

<span class="hl kwa">let rec</span> make_chain n cur <span class="hl sym">=</span>
  <span class="hl kwa">if</span> n <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> cur <span class="hl kwa">else</span>
    <span class="hl kwa">let</span> next <span class="hl sym">=</span> Event.<span class="hl kwd">new_channel</span><span class="hl sym">()</span> <span class="hl kwa">in</span>
    <span class="hl kwa">let</span> _ <span class="hl sym">=</span> Thread.create <span class="hl kwd">adder_thread</span> <span class="hl sym">(</span>cur<span class="hl sym">,</span> next<span class="hl sym">)</span> <span class="hl kwa">in</span>
    <span class="hl kwd">make_chain</span> <span class="hl sym">(</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> next

<span class="hl kwa">let rec</span> sum chan0 chan1 total n <span class="hl sym">=</span>
  <span class="hl kwa">if</span> n <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> total <span class="hl kwa">else</span> <span class="hl sym">(</span>
    Event.<span class="hl kwd">sync</span><span class="hl sym">(</span>Event.send chan0 <span class="hl num">0</span><span class="hl sym">);</span>
    sum chan0 <span class="hl kwd">chan1</span> <span class="hl sym">(</span>total <span class="hl sym">+</span> Event.<span class="hl kwd">sync</span><span class="hl sym">(</span>Event.receive chan1<span class="hl sym">)) (</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
  <span class="hl sym">)</span>

<span class="hl kwa">let</span> <span class="hl sym">() =</span>
  <span class="hl kwa">let</span> n <span class="hl sym">=</span> <span class="hl kwa">try</span> <span class="hl kwd">int_of_string</span><span class="hl sym">(</span>Array.get Sys.argv <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">with</span> _ <span class="hl sym">-&gt;</span> <span class="hl num">10</span>
  <span class="hl kwa">and</span> first_channel <span class="hl sym">=</span> Event.<span class="hl kwd">new_channel</span><span class="hl sym">()</span> <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> last_channel  <span class="hl sym">=</span> make_chain <span class="hl num">500</span> first_channel <span class="hl kwa">in</span>
  <span class="hl kwd">print_int</span><span class="hl sym">(</span>sum first_channel last_channel <span class="hl num">0</span> n<span class="hl sym">);</span> <span class="hl kwd">print_newline</span><span class="hl sym">()</span>
