BUILD COMMANDS FOR: knucleotide.sbcl

Wed Nov  2 18:12:00 UTC 2005

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "knucleotide.sbcl_compile")'
### START knucleotide.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "knucleotide.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END knucleotide.sbcl_compile


; compiling file "/home/dunham/gp4/shootout/bench/knucleotide/tmp/knucleotide.sbcl" (written 02 NOV 2005 06:12:00 PM):
; compiling (DEFUN READ-DATA ...)
; compiling (DEFUN ACCUMULATE-FREQUENCIES ...)
; file: /home/dunham/gp4/shootout/bench/knucleotide/tmp/knucleotide.sbcl
; in: DEFUN ACCUMULATE-FREQUENCIES
;     (SUBSEQ SEQUENCE START (+ START FRAGMENT-LENGTH))
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (*)), not a SIMPLE-BASE-STRING.
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES SIMPLE-BASE-STRING &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY CHARACTER
;                                                                   (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY CHARACTER (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY SINGLE-FLOAT
;                                                                   (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY SINGLE-FLOAT (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (*)), not a SIMPLE-BIT-VECTOR.
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES SIMPLE-BIT-VECTOR &REST T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 2)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 2)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 4)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 4)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 7)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 7)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 8)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 8)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 15)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 15)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 16)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 16)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 29)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 29)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 31)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 31)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (UNSIGNED-BYTE 32)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (UNSIGNED-BYTE 32)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (SIGNED-BYTE 8)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (SIGNED-BYTE 8) (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (SIGNED-BYTE 16)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (SIGNED-BYTE 16)
;                                                            (*))
;                                              &REST
;                                              T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY * (*)), not a (SIMPLE-ARRAY FIXNUM (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES (SIMPLE-ARRAY FIXNUM (*))
;                                                     &REST
;                                                     T).
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (SIMPLE-ARRAY *
;                                         (*)), not a (SIMPLE-ARRAY
;                                                      (SIGNED-BYTE 32)
;                                                      (*)).
;   The result is a (VALUES (SIMPLE-ARRAY * (*))
;                           &OPTIONAL), not a (VALUES
;                                              (SIMPLE-ARRAY (SIGNED-BYTE 32)
;                                                            (*))
;                                              &REST
;                                              T).

; compiling (DEFUN CALCULATE-FREQUENCIES ...)
; compiling (DEFUN WRITE-FREQUENCIES ...)
; file: /home/dunham/gp4/shootout/bench/knucleotide/tmp/knucleotide.sbcl
; in: DEFUN WRITE-FREQUENCIES
;     (STRING< (CAR V1) (CAR V2))
; ==>
;   (SB-KERNEL:STRING<* SB-C::STRING1
;                       SB-C::STRING2
;                       SB-C::START1
;                       SB-C::END1
;                       SB-C::START2
;                       SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER)
;                               (VECTOR NIL)
;                               BASE-STRING
;                               SYMBOL
;                               CHARACTER), not a SIMPLE-BASE-STRING.
;   The second argument is a (OR (VECTOR CHARACTER)
;                                (VECTOR NIL)
;                                BASE-STRING
;                                SYMBOL
;                                CHARACTER), not a SIMPLE-BASE-STRING.

;     (SORT SORTED-FREQUENCIES
;         #'(LAMBDA (V1 V2) (COND ((> # #) T) ((< # #) NIL) (T (STRING< # #)))))
; --> BLOCK LET TYPECASE LET COND IF COND IF PROGN LET 
; --> SB-KERNEL:WITH-ARRAY-DATA LET LET LET MULTIPLE-VALUE-BIND 
; --> MULTIPLE-VALUE-CALL IF 
; ==>
;   (SB-KERNEL:%WITH-ARRAY-DATA #:ONCE-ONLY-64 #:ONCE-ONLY-65 #:ONCE-ONLY-66)
; 
; note: unable to
;   inline non-SIMPLE-vector-handling logic
; because:
;   upgraded array element type not known at compile time

;     (* (/ (THE (INTEGER 0 999999) (CDR ENTRY)) SUM) 100.0)
; --> * FLOAT 
; ==>
;   (SB-KERNEL:%SINGLE-FLOAT SB-C::N)
; 
; note: forced to do full call
;       unable to do inline float coercion (cost 5) because:
;       The first argument is a RATIONAL, not a (SIGNED-BYTE 32).
;       unable to do inline float coercion (cost 6) because:
;       The first argument is a RATIONAL, not a (UNSIGNED-BYTE 32).

;     (FORMAT T
;           "~A ~,3F~%"
;           (CAR ENTRY)
;           (* (/ (THE (INTEGER 0 999999) (CDR ENTRY)) SUM) 100.0))
; --> FORMAT FORMATTER FUNCTION BLOCK LET 
; ==>
;   (SB-FORMAT::FORMAT-FIXED STREAM
;                            #:FORMAT-ARG-294
;                            #:G687
;                            #:G688
;                            #:G689
;                            #:G690
;                            #:G691
;                            NIL)
; 
; note: doing float to pointer coercion (cost 13)

; compiling (DEFUN MAIN ...); 
; compilation unit finished
;   printed 21 notes


; /home/dunham/gp4/shootout/bench/knucleotide/tmp/knucleotide.fasl written
; compilation finished in 0:00:01
[doing purification: roots handlers stack bindings static cleanup done]
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /home/dunham/gp4/shootout/bench/knucleotide/tmp/sbcl.core:
writing 18582032 bytes from the read-only space at 0x01000000
writing 6240304 bytes from the static space at 0x05000000
writing 4096 bytes from the dynamic space at 0x09000000
done]
### START knucleotide.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END knucleotide.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load knucleotide.sbcl_run %A


PROGRAM OUTPUT
==============
A 30.298
T 30.157
C 19.793
G 19.752

AA 9.177
TA 9.137
AT 9.136
TT 9.094
AC 6.000
CA 5.999
GA 5.986
AG 5.985
TC 5.970
CT 5.970
GT 5.957
TG 5.956
CC 3.915
CG 3.910
GC 3.908
GG 3.902

14717	GGT
4463	GGTA
472	GGTATT
9	GGTATTTTAATT
9	GGTATTTTAATTTATAGT
