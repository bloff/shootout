BUILD COMMANDS FOR: mandelbrot.sbcl

Mon Nov 21 23:58:57 PST 2005

SBCL built with: /usr/bin/sbcl --userinit /dev/null --sysinit /dev/null -batch -eval '(load "mandelbrot.sbcl_compile")'
### START mandelbrot.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "mandelbrot.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END mandelbrot.sbcl_compile


; compiling file "/home/dunham/gp4/shootout/bench/mandelbrot/tmp/mandelbrot.sbcl" (written 21 NOV 2005 11:58:57 PM):
; compiling (DECLAIM (OPTIMIZE SPEED ...))
; compiling (DEFUN RENDER ...)
; compiling (DEFUN MAIN ...)
; file: /home/dunham/gp4/shootout/bench/mandelbrot/tmp/mandelbrot.sbcl
; in: DEFUN MAIN
;     (LAST ARGS)
; ==>
;   (SB-IMPL::LAST1 ARGS)
; 
; caught STYLE-WARNING:
;   Assignment to argument: LIST
;     prevents use of assertion from function type previous declaration:
;     LIST
;   
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition


; /home/dunham/gp4/shootout/bench/mandelbrot/tmp/mandelbrot.fasl written
; compilation finished in 0:00:01
[doing purification: roots handlers stack bindings static cleanup done]
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /home/dunham/gp4/shootout/bench/mandelbrot/tmp/sbcl.core:
writing 19296072 bytes from the read-only space at 0x01000000
writing 6931552 bytes from the static space at 0x05000000
writing 4096 bytes from the dynamic space at 0x09000000
done]
### START mandelbrot.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END mandelbrot.sbcl_run


=================================================================
COMMAND LINE (%A is single numeric argument):

 /usr/bin/sbcl --noinform --core sbcl.core --userinit /dev/null --sysinit /dev/null --load mandelbrot.sbcl_run %A
unhandled SIMPLE-ERROR in thread #<SB-THREAD:THREAD "initial thread" {90034A9}>:
  Error during processing of --eval option "(|LOAD| \"mandelbrot.sbcl_run\")":

  encoding error on stream #<SB-SYS:FD-STREAM for "standard output" {90036D9}>
  (:EXTERNAL-FORMAT :ASCII):
    the character with code 240 cannot be encoded.

0: (BACKTRACE 128 #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDERR* {521A051}>)
1: (SB-DEBUG::DEBUGGER-DISABLED-HOOK
    #<SIMPLE-ERROR {9016769}>
    #<unavailable argument>)
2: (INVOKE-DEBUGGER #<SIMPLE-ERROR {9016769}>)
3: (ERROR
    "Error during processing of --eval ~
                                              option ~S:~%~%  ~A")
4: ((LAMBDA (SB-IMPL::E)) #<SB-INT:STREAM-ENCODING-ERROR {90164B9}>)
5: ((LAMBDA (SB-IMPL::E)) #<SB-INT:STREAM-ENCODING-ERROR {90164B9}>)
6: (SIGNAL #<SB-INT:STREAM-ENCODING-ERROR {90164B9}>)
7: (ERROR SB-INT:STREAM-ENCODING-ERROR)
8: (SB-INT:STREAM-ENCODING-ERROR
    #<SB-SYS:FD-STREAM for "standard output" {90036D9}>
    240)
9: (SB-IMPL::STREAM-ENCODING-ERROR-AND-HANDLE
    #<SB-SYS:FD-STREAM for "standard output" {90036D9}>
    240)
10: (SB-IMPL::OUTPUT-BYTES/ASCII
     #<SB-SYS:FD-STREAM for "standard output" {90036D9}>
Argh! error within --disable-debugger error handling
TEST FAILED - Child processed exited with error code (1)


PROGRAM OUTPUT
==============
P4
200 200
