<span class="com">&quot;  The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com"></span>
<span class="com">   To run: gst -QI /usr/share/gnu-smalltalk/gst.im nbody.gst -a 1000</span>
<span class="com">&quot;</span>
<span class="com"></span>
<span class="com">Object subclass: #NBodySystem</span>
<span class="com">instanceVariableNames: 'bodies'</span>
<span class="com">classVariableNames: ''</span>
<span class="com">poolDictionaries: ''</span>
<span class="com">category: nil !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!NBodySystem methodsFor: 'nbody'!</span>
<span class="com"></span>
<span class="com">after: dt</span>
<span class="com">   1 to: bodies size do: [:i|</span>
<span class="com">      i+1 to: bodies size do: [:j|</span>
<span class="com">         (bodies at: i) and: (bodies at: j) velocityAfter: dt].</span>
<span class="com">   ].</span>
<span class="com">   bodies do: [:each| each positionAfter: dt] !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">energy</span>
<span class="com">   | e |</span>
<span class="com">   e := 0.0d.</span>
<span class="com">   1 to: bodies size do: [:i|</span>
<span class="com">      e := e + (bodies at: i) kineticEnergy.</span>
<span class="com">      i+1 to: bodies size do: [:j|</span>
<span class="com">         e := e - ((bodies at: i) potentialEnergy: (bodies at: j))].</span>
<span class="com">   ].</span>
<span class="com">   ^e ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!NBodySystem methodsFor: 'initialize-release'!</span>
<span class="com"></span>
<span class="com">initialize</span>
<span class="com">   bodies := (OrderedCollection new</span>
<span class="com">      add: Body sun; add: Body jupiter; add: Body saturn;</span>
<span class="com">      add: Body uranus; add: Body neptune; yourself) asArray.</span>
<span class="com"></span>
<span class="com">   bodies first offsetMomentum:</span>
<span class="com">      (bodies inject: (Array with: 0.0d with: 0.0d with: 0.0d)</span>
<span class="com">         into: [:m :each | each addMomentumTo: m]) ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">Object subclass: #Body</span>
<span class="com">instanceVariableNames: 'x y z vx vy vz mass'</span>
<span class="com">classVariableNames: ''</span>
<span class="com">poolDictionaries: ''</span>
<span class="com">category: nil !</span>
<span class="com"></span>
<span class="com">!Body class methodsFor: 'constants'!</span>
<span class="com"></span>
<span class="com">daysPerYear</span>
<span class="com">   ^365.24d !</span>
<span class="com"></span>
<span class="com">pi</span>
<span class="com">   ^3.141592653589793d !</span>
<span class="com"></span>
<span class="com">solarMass</span>
<span class="com">   ^4.0d * self pi * self pi !</span>
<span class="com"></span>
<span class="com">sun</span>
<span class="com">   ^self new</span>
<span class="com">      x: 0.0d0</span>
<span class="com">      y: 0.0d0</span>
<span class="com">      z: 0.0d0</span>
<span class="com">      vx: 0.0d0</span>
<span class="com">      vy: 0.0d0</span>
<span class="com">      vz: 0.0d0</span>
<span class="com">      mass: self solarMass !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">jupiter</span>
<span class="com">   ^self new</span>
<span class="com">      x: 4.84143144246472090d0</span>
<span class="com">      y: -1.16032004402742839d0</span>
<span class="com">      z: -1.03622044471123109d-1</span>
<span class="com">      vx: 1.66007664274403694d-3 * self daysPerYear</span>
<span class="com">      vy: 7.69901118419740425d-3 * self daysPerYear</span>
<span class="com">      vz: -6.90460016972063023d-5 * self daysPerYear</span>
<span class="com">      mass: 9.54791938424326609d-4 * self solarMass !</span>
<span class="com"></span>
<span class="com">saturn</span>
<span class="com">   ^self new</span>
<span class="com">      x: 8.34336671824457987d0</span>
<span class="com">      y: 4.12479856412430479d0</span>
<span class="com">      z: -4.03523417114321381d-1</span>
<span class="com">      vx: -2.76742510726862411d-3 * self daysPerYear</span>
<span class="com">      vy: 4.99852801234917238d-3 * self daysPerYear</span>
<span class="com">      vz: 2.30417297573763929d-5 * self daysPerYear</span>
<span class="com">      mass: 2.85885980666130812d-4 * self solarMass !</span>
<span class="com"></span>
<span class="com">uranus</span>
<span class="com">   ^self new</span>
<span class="com">      x: 1.28943695621391310d1</span>
<span class="com">      y: -1.51111514016986312d1</span>
<span class="com">      z: -2.23307578892655734d-1</span>
<span class="com">      vx: 2.96460137564761618d-3 * self daysPerYear</span>
<span class="com">      vy: 2.37847173959480950d-3 * self daysPerYear</span>
<span class="com">      vz: -2.96589568540237556d-5 * self daysPerYear</span>
<span class="com">      mass: 4.36624404335156298d-5 * self solarMass !</span>
<span class="com"></span>
<span class="com">neptune</span>
<span class="com">   ^self new</span>
<span class="com">      x: 1.53796971148509165d1</span>
<span class="com">      y: -2.59193146099879641d1</span>
<span class="com">      z: 1.79258772950371181d-1</span>
<span class="com">      vx: 2.68067772490389322d-3 * self daysPerYear</span>
<span class="com">      vy: 1.62824170038242295d-3 * self daysPerYear</span>
<span class="com">      vz: -9.51592254519715870d-5 * self daysPerYear</span>
<span class="com">      mass: 5.15138902046611451d-5 * self solarMass !	!</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!Body methodsFor: 'accessing'!</span>
<span class="com"></span>
<span class="com">mass</span>
<span class="com">   ^mass !</span>
<span class="com"></span>
<span class="com">x</span>
<span class="com">   ^x !</span>
<span class="com"></span>
<span class="com">y</span>
<span class="com">   ^y !</span>
<span class="com"></span>
<span class="com">z</span>
<span class="com">   ^z !</span>
<span class="com"></span>
<span class="com">x: d1 y: d2 z: d3 vx: d4 vy: d5 vz: d6 mass: d7</span>
<span class="com">   x := d1.</span>
<span class="com">   y := d2.</span>
<span class="com">   z := d3.</span>
<span class="com">   vx := d4.</span>
<span class="com">   vy := d5.</span>
<span class="com">   vz := d6.</span>
<span class="com">   mass := d7 ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!Body methodsFor: 'nbody'!</span>
<span class="com"></span>
<span class="com">and: aBody velocityAfter: dt</span>
<span class="com">   | dx dy dz distance mag |</span>
<span class="com">   dx := x - aBody x.</span>
<span class="com">   dy := y - aBody y.</span>
<span class="com">   dz := z - aBody z.</span>
<span class="com"></span>
<span class="com">   distance := ((dx*dx) + (dy*dy) + (dz*dz)) sqrt.</span>
<span class="com">   mag := dt / (distance * distance * distance).</span>
<span class="com"></span>
<span class="com">   self decreaseVelocity: dx y: dy z: dz m: aBody mass * mag.</span>
<span class="com">   aBody increaseVelocity: dx y: dy z: dz m: mass * mag !</span>
<span class="com"></span>
<span class="com">increaseVelocity: dx y: dy z: dz m: m</span>
<span class="com">   vx := vx + (dx * m).</span>
<span class="com">   vy := vy + (dy * m).</span>
<span class="com">   vz := vz + (dz * m) !</span>
<span class="com"></span>
<span class="com">decreaseVelocity: dx y: dy z: dz m: m</span>
<span class="com">   vx := vx - (dx * m).</span>
<span class="com">   vy := vy - (dy * m).</span>
<span class="com">   vz := vz - (dz * m) !</span>
<span class="com"></span>
<span class="com">positionAfter: dt</span>
<span class="com">   x := x + (dt * vx).</span>
<span class="com">   y := y + (dt * vy).</span>
<span class="com">   z := z + (dt * vz) !</span>
<span class="com"></span>
<span class="com">kineticEnergy</span>
<span class="com">   ^0.5d * mass * ((vx * vx) + (vy * vy) + (vz * vz)) !</span>
<span class="com"></span>
<span class="com">potentialEnergy: aBody</span>
<span class="com">   | dx dy dz distance |</span>
<span class="com">   dx := x - aBody x.</span>
<span class="com">   dy := y - aBody y.</span>
<span class="com">   dz := z - aBody z.</span>
<span class="com">   distance := ((dx*dx) + (dy*dy) + (dz*dz)) sqrt.</span>
<span class="com">   ^mass * aBody mass / distance !</span>
<span class="com"></span>
<span class="com">addMomentumTo: anArray &quot;cleaner to use a 3d point&quot;</span>
<span class="com">   anArray at: 1 put: (anArray at: 1) + (vx * mass).</span>
<span class="com">   anArray at: 2 put: (anArray at: 2) + (vy * mass).</span>
<span class="com">   anArray at: 3 put: (anArray at: 3) + (vz * mass).</span>
<span class="com">   ^anArray !</span>
<span class="com"></span>
<span class="com">offsetMomentum: anArray &quot;cleaner to use a 3d point&quot;</span>
<span class="com">   | m |</span>
<span class="com">   m := self class solarMass.</span>
<span class="com">   vx := (anArray at: 1) negated / m.</span>
<span class="com">   vy := (anArray at: 2) negated / m.</span>
<span class="com">   vz := (anArray at: 3) negated / m ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">!Float methodsFor: 'printing'!</span>
<span class="com"></span>
<span class="com">printStringRoundedTo: anInteger</span>
<span class="com">   | n s |</span>
<span class="com">   n := 0.5d * (10 raisedToInteger: anInteger negated).</span>
<span class="com">   s := ((self sign &lt; 0) ifTrue: [self - n] ifFalse: [self + n]) printString.</span>
<span class="com">   ^s copyFrom: 1 to: (s indexOf: $.) + anInteger ! !</span>
<span class="com"></span>
<span class="com"></span>
<span class="com">| n bodies |</span>
<span class="com">n := Smalltalk arguments first asInteger.</span>
<span class="com">bodies := NBodySystem new initialize.</span>
<span class="com"></span>
<span class="com">(bodies energy printStringRoundedTo: 9) displayNl.</span>
<span class="com">n timesRepeat: [bodies after: 0.01].</span>
<span class="com">(bodies energy printStringRoundedTo: 9) displayNl !</span>
