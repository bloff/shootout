<span class="hl slc">// The Great Computer Language Shootout</span>
<span class="hl slc">//  http://shootout.alioth.debian.org</span>
<span class="hl slc">//</span>
<span class="hl slc">//  Contributed by Ian Osgood</span>

<span class="hl kwa">function</span> <span class="hl kwd">pad</span><span class="hl sym">(</span>n<span class="hl sym">,</span><span class="hl kwc">width</span><span class="hl sym">) {</span>
  <span class="hl kwa">var</span> s <span class="hl sym">=</span> n<span class="hl sym">.</span><span class="hl kwc">toString</span><span class="hl sym">();</span>
  <span class="hl kwa">while</span> <span class="hl sym">(</span>s<span class="hl sym">.</span><span class="hl kwc">length</span> <span class="hl sym">&lt;</span> <span class="hl kwc">width</span><span class="hl sym">)</span> s <span class="hl sym">=</span> <span class="hl str">' '</span> <span class="hl sym">+</span> s<span class="hl sym">;</span>
  <span class="hl kwa">return</span> s<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> <span class="hl kwd">primes</span><span class="hl sym">(</span>isPrime<span class="hl sym">,</span> n<span class="hl sym">) {</span>
  <span class="hl kwa">var</span> i<span class="hl sym">,</span> count <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span> m <span class="hl sym">=</span> <span class="hl num">10000</span><span class="hl sym">&lt;&lt;</span>n<span class="hl sym">,</span> size <span class="hl sym">=</span> m<span class="hl sym">+</span><span class="hl num">31</span><span class="hl sym">&gt;&gt;</span><span class="hl num">5</span><span class="hl sym">;</span>

  <span class="hl kwa">for</span> <span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span> i<span class="hl sym">&lt;</span>size<span class="hl sym">;</span> i<span class="hl sym">++)</span> isPrime<span class="hl sym">[</span>i<span class="hl sym">] =</span> <span class="hl num">0xffffffff</span><span class="hl sym">;</span>

  <span class="hl kwa">for</span> <span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">2</span><span class="hl sym">;</span> i<span class="hl sym">&lt;</span>m<span class="hl sym">;</span> i<span class="hl sym">++)</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>isPrime<span class="hl sym">[</span>i<span class="hl sym">&gt;&gt;</span><span class="hl num">5</span><span class="hl sym">] &amp;</span> <span class="hl num">1</span><span class="hl sym">&lt;&lt;(</span>i<span class="hl sym">&amp;</span><span class="hl num">31</span><span class="hl sym">)) {</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwa">var</span> j<span class="hl sym">=</span>i<span class="hl sym">+</span>i<span class="hl sym">;</span> j<span class="hl sym">&lt;</span>m<span class="hl sym">;</span> j<span class="hl sym">+=</span>i<span class="hl sym">)</span>
        isPrime<span class="hl sym">[</span>j<span class="hl sym">&gt;&gt;</span><span class="hl num">5</span><span class="hl sym">] &amp;=</span> ~<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">&lt;&lt;(</span>j<span class="hl sym">&amp;</span><span class="hl num">31</span><span class="hl sym">));</span>
      count<span class="hl sym">++;</span>
    <span class="hl sym">}</span>

  <span class="hl kwc">print</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to&quot;</span> <span class="hl sym">+</span> <span class="hl kwd">pad</span><span class="hl sym">(</span>m<span class="hl sym">,</span><span class="hl num">9</span><span class="hl sym">) +</span> <span class="hl kwd">pad</span><span class="hl sym">(</span>count<span class="hl sym">,</span><span class="hl num">9</span><span class="hl sym">));</span>
<span class="hl sym">}</span>

<span class="hl kwa">var</span> n <span class="hl sym">=</span> arguments<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>
<span class="hl kwa">var</span> isPrime <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwc">Array</span><span class="hl sym">((</span><span class="hl num">10000</span><span class="hl sym">&lt;&lt;</span>n<span class="hl sym">)+</span><span class="hl num">31</span><span class="hl sym">&gt;&gt;</span><span class="hl num">5</span><span class="hl sym">)</span>

<span class="hl kwd">primes</span><span class="hl sym">(</span>isPrime<span class="hl sym">,</span> n<span class="hl sym">)</span>
<span class="hl kwd">primes</span><span class="hl sym">(</span>isPrime<span class="hl sym">,</span> n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
<span class="hl kwd">primes</span><span class="hl sym">(</span>isPrime<span class="hl sym">,</span> n<span class="hl sym">-</span><span class="hl num">2</span><span class="hl sym">)</span>
