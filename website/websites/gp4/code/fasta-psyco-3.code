<span class="hl slc"># The Computer Language Shootout Benchmarks</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># Contributed by Kevin Carson</span>
<span class="hl slc"># Optimized for speed by bearophile, Jan 7 2006</span>

<span class="hl kwa">from</span> sys <span class="hl kwa">import</span> argv<span class="hl sym">,</span> stdout
<span class="hl kwa">import</span> psyco
<span class="hl kwa">from</span> array <span class="hl kwa">import</span> array

iub <span class="hl sym">= [[</span><span class="hl str">'a'</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'c'</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'g'</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'t'</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'B'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'D'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'H'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'K'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'M'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'N'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'R'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'S'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'V'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'W'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
       <span class="hl sym">[</span><span class="hl str">'Y'</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">]]</span>

homosapiens <span class="hl sym">= [[</span><span class="hl str">'a'</span><span class="hl sym">,</span> <span class="hl num">0.3029549426680</span><span class="hl sym">],</span>
               <span class="hl sym">[</span><span class="hl str">'c'</span><span class="hl sym">,</span> <span class="hl num">0.1979883004921</span><span class="hl sym">],</span>
               <span class="hl sym">[</span><span class="hl str">'g'</span><span class="hl sym">,</span> <span class="hl num">0.1975473066391</span><span class="hl sym">],</span>
               <span class="hl sym">[</span><span class="hl str">'t'</span><span class="hl sym">,</span> <span class="hl num">0.3015094502008</span><span class="hl sym">]]</span>

alu <span class="hl sym">=</span> <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTT&quot;</span>\
      <span class="hl str">&quot;CGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCC&quot;</span>\
      <span class="hl str">&quot;TGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATC&quot;</span>\
      <span class="hl str">&quot;GCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

IM <span class="hl sym">=</span> <span class="hl num">139968</span>
IA <span class="hl sym">=</span>   <span class="hl num">3877</span>
IC <span class="hl sym">=</span>  <span class="hl num">29573</span>

LAST <span class="hl sym">=</span> <span class="hl num">42</span>
<span class="hl kwa">def</span> <span class="hl kwd">gen_random</span><span class="hl sym">(</span><span class="hl kwb">max</span><span class="hl sym">):</span>
    <span class="hl kwa">global</span> LAST
    LAST <span class="hl sym">= (</span>LAST <span class="hl sym">*</span> IA <span class="hl sym">+</span> IC<span class="hl sym">) %</span> IM
    <span class="hl kwa">return</span> <span class="hl sym">(</span><span class="hl kwb">max</span> <span class="hl sym">*</span> LAST<span class="hl sym">) /</span> IM


<span class="hl kwa">def</span> <span class="hl kwd">makeCumulative</span><span class="hl sym">(</span>genelist<span class="hl sym">):</span>
    cp <span class="hl sym">=</span> <span class="hl num">0.0</span>
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span><span class="hl kwb">len</span><span class="hl sym">(</span>genelist<span class="hl sym">)):</span>
        cp <span class="hl sym">+=</span> genelist<span class="hl sym">[</span>i<span class="hl sym">][</span><span class="hl num">1</span><span class="hl sym">]</span>
        genelist<span class="hl sym">[</span>i<span class="hl sym">][</span><span class="hl num">1</span><span class="hl sym">] =</span> cp


<span class="hl kwa">def</span> <span class="hl kwd">selectRandom</span><span class="hl sym">(</span>genelist<span class="hl sym">):</span>
    r <span class="hl sym">=</span> <span class="hl kwd">gen_random</span><span class="hl sym">(</span><span class="hl num">1.0</span><span class="hl sym">)</span>
    <span class="hl kwa">for</span> pair <span class="hl kwa">in</span> genelist<span class="hl sym">:</span>
        <span class="hl kwa">if</span> r <span class="hl sym">&lt;</span> pair<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]:</span>
            <span class="hl kwa">return</span> pair<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>


<span class="hl kwa">def</span> <span class="hl kwd">makeRandomFasta</span><span class="hl sym">(</span><span class="hl kwb">id</span><span class="hl sym">,</span> desc<span class="hl sym">,</span> genelist<span class="hl sym">,</span> todo<span class="hl sym">):</span>
    <span class="hl kwa">print</span> <span class="hl str">&quot;&gt;&quot;</span> <span class="hl sym">+</span> <span class="hl kwb">str</span><span class="hl sym">(</span><span class="hl kwb">id</span><span class="hl sym">),</span> desc
    line_length <span class="hl sym">=</span> <span class="hl num">60</span>
    a <span class="hl sym">=</span> <span class="hl kwd">array</span><span class="hl sym">(</span><span class="hl str">&quot;c&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot; &quot;</span> <span class="hl sym">*</span> line_length<span class="hl sym">)</span>
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>todo <span class="hl sym">/</span> line_length<span class="hl sym">):</span>
        <span class="hl kwa">for</span> j <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>line_length<span class="hl sym">):</span>
            a<span class="hl sym">[</span>j<span class="hl sym">] =</span> <span class="hl kwd">selectRandom</span><span class="hl sym">(</span>genelist<span class="hl sym">)</span>
        a<span class="hl sym">.</span><span class="hl kwd">tofile</span><span class="hl sym">(</span>stdout<span class="hl sym">)</span>
        <span class="hl kwa">print</span>

    todo <span class="hl sym">=</span> todo <span class="hl sym">%</span> line_length
    <span class="hl kwa">while</span> todo <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">:</span>
        <span class="hl kwa">if</span> todo <span class="hl sym">&gt;</span> line_length<span class="hl sym">:</span>
            out_length <span class="hl sym">=</span> line_length
        <span class="hl kwa">else</span><span class="hl sym">:</span>
            out_length <span class="hl sym">=</span> todo

        pick <span class="hl sym">=</span> <span class="hl str">&quot;&quot;</span>
        <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span>out_length<span class="hl sym">):</span>
            pick <span class="hl sym">+=</span> <span class="hl kwd">selectRandom</span><span class="hl sym">(</span>genelist<span class="hl sym">)</span>

        <span class="hl kwa">print</span> pick
        todo <span class="hl sym">-=</span> line_length


<span class="hl kwa">def</span> <span class="hl kwd">makeRepeatFasta</span><span class="hl sym">(</span><span class="hl kwb">id</span><span class="hl sym">,</span> desc<span class="hl sym">,</span> s<span class="hl sym">,</span> todo<span class="hl sym">):</span>
    <span class="hl kwa">print</span> <span class="hl str">&quot;&gt;%s %s&quot;</span> <span class="hl sym">% (</span><span class="hl kwb">id</span><span class="hl sym">,</span> desc<span class="hl sym">)</span>
    line_length <span class="hl sym">=</span> <span class="hl num">60</span>
    s_length <span class="hl sym">=</span> <span class="hl kwb">len</span><span class="hl sym">(</span>s<span class="hl sym">)</span>
    wrap <span class="hl sym">=</span> <span class="hl num">0</span>

    <span class="hl kwa">while</span> todo <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">:</span>
        <span class="hl kwa">if</span> todo <span class="hl sym">&gt;</span> line_length<span class="hl sym">:</span>
            out_length <span class="hl sym">=</span> line_length
        <span class="hl kwa">else</span><span class="hl sym">:</span>
            out_length <span class="hl sym">=</span> todo

        <span class="hl kwa">while</span> out_length <span class="hl sym">&gt;= (</span>s_length <span class="hl sym">-</span> wrap<span class="hl sym">):</span>
            stdout<span class="hl sym">.</span><span class="hl kwd">write</span><span class="hl sym">(</span>s<span class="hl sym">[</span>wrap<span class="hl sym">:])</span>
            out_length <span class="hl sym">-=</span> s_length <span class="hl sym">-</span> wrap
            wrap <span class="hl sym">=</span> <span class="hl num">0</span>

        <span class="hl kwa">print</span> s<span class="hl sym">[</span>wrap<span class="hl sym">:</span>wrap <span class="hl sym">+</span> out_length<span class="hl sym">]</span>
        wrap <span class="hl sym">+=</span> out_length
        todo <span class="hl sym">-=</span> line_length


psyco<span class="hl sym">.</span><span class="hl kwd">full</span><span class="hl sym">()</span>
n <span class="hl sym">=</span> <span class="hl kwb">int</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span>

<span class="hl kwd">makeCumulative</span><span class="hl sym">(</span>iub<span class="hl sym">)</span>
<span class="hl kwd">makeCumulative</span><span class="hl sym">(</span>homosapiens<span class="hl sym">)</span>

<span class="hl kwd">makeRepeatFasta</span><span class="hl sym">(</span><span class="hl str">&quot;ONE&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Homo sapiens alu&quot;</span><span class="hl sym">,</span> alu<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">)</span>
<span class="hl kwd">makeRandomFasta</span><span class="hl sym">(</span><span class="hl str">&quot;TWO&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;IUB ambiguity codes&quot;</span><span class="hl sym">,</span> iub<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">3</span><span class="hl sym">)</span>
<span class="hl kwd">makeRandomFasta</span><span class="hl sym">(</span><span class="hl str">&quot;THREE&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Homo sapiens frequency&quot;</span><span class="hl sym">,</span> homosapiens<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">5</span><span class="hl sym">)</span>
