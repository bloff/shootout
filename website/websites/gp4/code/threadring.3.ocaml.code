<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Tomasz bla Fortuna *)</span>

<span class="hl kwa">let</span> size<span class="hl sym">,</span> n <span class="hl sym">=</span> <span class="hl num">503</span><span class="hl sym">,</span> int_of_string Sys.argv.<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">)</span>
<span class="hl kwa">let</span> mutex <span class="hl sym">=</span>
  <span class="hl kwa">let</span> f _ <span class="hl sym">=</span> <span class="hl kwa">let</span> m <span class="hl sym">=</span> Mutex.<span class="hl kwd">create</span> <span class="hl sym">()</span> <span class="hl kwa">in</span> Mutex.lock m<span class="hl sym">;</span> m <span class="hl kwa">in</span>
  Array.init size f
<span class="hl kwa">and</span> data <span class="hl sym">=</span> Array.create size <span class="hl num">0</span>

<span class="hl kwa">let</span> run id idata odata <span class="hl sym">=</span>
  <span class="hl kwa">let rec</span> <span class="hl kwd">loop</span> <span class="hl sym">() =</span>
    Mutex.lock mutex.<span class="hl sym">(</span>idata<span class="hl sym">);</span>
    <span class="hl kwa">if</span> data.<span class="hl sym">(</span>idata<span class="hl sym">) =</span> n <span class="hl kwa">then</span> <span class="hl sym">(</span>
      print_int id<span class="hl sym">;</span> <span class="hl kwd">print_newline</span> <span class="hl sym">();</span> exit <span class="hl num">0</span><span class="hl sym">;</span>
    <span class="hl sym">)</span> <span class="hl kwa">else</span> <span class="hl sym">(</span>
      data.<span class="hl sym">(</span>odata<span class="hl sym">) &lt;-</span> data.<span class="hl sym">(</span>idata<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">;</span>
      Mutex.unlock mutex.<span class="hl sym">(</span>odata<span class="hl sym">);</span>
      <span class="hl kwd">loop</span> <span class="hl sym">();</span>
    <span class="hl sym">)</span>
  <span class="hl kwa">in</span> Thread.create <span class="hl kwd">loop</span> <span class="hl sym">()</span>

<span class="hl kwa">let</span> _ <span class="hl sym">=</span>
  <span class="hl kwa">let</span> thread <span class="hl sym">=</span>
    Array.init size
      <span class="hl sym">(</span><span class="hl kwa">fun</span> i <span class="hl sym">-&gt;</span> <span class="hl kwd">run</span> <span class="hl sym">(</span>i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwd">i</span> <span class="hl sym">((</span>i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">mod</span> size<span class="hl sym">))</span> <span class="hl kwa">in</span>
  Mutex.unlock mutex.<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>
  Thread.join thread.<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>



