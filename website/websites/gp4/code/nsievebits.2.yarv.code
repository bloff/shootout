<span class="hl slc">#!/usr/bin/ruby</span>
<span class="hl slc">#</span>
<span class="hl slc"># The Great Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># nsieve-bits in Ruby</span>
<span class="hl slc"># Contributed by Glenn Parker, March 2005</span>

CharExponent <span class="hl sym">=</span> <span class="hl num">3</span>
BitsPerChar <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">&lt;&lt;</span> CharExponent
LowMask <span class="hl sym">=</span> BitsPerChar <span class="hl sym">-</span> <span class="hl num">1</span>

<span class="hl kwa">def</span> <span class="hl kwd">sieve</span><span class="hl sym">(</span>m<span class="hl sym">)</span>
  items <span class="hl sym">=</span> <span class="hl str">&quot;</span><span class="hl esc">\x</span><span class="hl str">FF&quot;</span> <span class="hl sym">* ((</span>m <span class="hl sym">/</span> BitsPerChar<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">)</span>
  masks <span class="hl sym">=</span> <span class="hl str">&quot;&quot;</span>
  BitsPerChar<span class="hl sym">.</span>times <span class="hl kwa">do</span> <span class="hl sym">|</span>b<span class="hl sym">|</span>
    masks <span class="hl sym">&lt;&lt; (</span><span class="hl num">1</span> <span class="hl sym">&lt;&lt;</span> b<span class="hl sym">).</span>chr
  <span class="hl kwa">end</span>

  count <span class="hl sym">=</span> <span class="hl num">0</span>
  pmax <span class="hl sym">=</span> m <span class="hl sym">-</span> <span class="hl num">1</span>
  <span class="hl num">2</span><span class="hl sym">.</span><span class="hl kwd">step</span><span class="hl sym">(</span>pmax<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">do</span> <span class="hl sym">|</span>p<span class="hl sym">|</span>
    <span class="hl kwa">if</span> items<span class="hl sym">[</span>p <span class="hl sym">&gt;&gt;</span> CharExponent<span class="hl sym">][</span>p <span class="hl sym">&amp;</span> LowMask<span class="hl sym">] ==</span> <span class="hl num">1</span>
      count <span class="hl sym">+=</span> <span class="hl num">1</span>
      p<span class="hl sym">.</span><span class="hl kwd">step</span><span class="hl sym">(</span>pmax<span class="hl sym">,</span> p<span class="hl sym">)</span> <span class="hl kwa">do</span> <span class="hl sym">|</span>mult<span class="hl sym">|</span>
	a <span class="hl sym">=</span> mult <span class="hl sym">&gt;&gt;</span> CharExponent
	b <span class="hl sym">=</span> mult <span class="hl sym">&amp;</span> LowMask
	items<span class="hl sym">[</span>a<span class="hl sym">] -=</span> masks<span class="hl sym">[</span>b<span class="hl sym">]</span> <span class="hl kwa">if</span> items<span class="hl sym">[</span>a<span class="hl sym">][</span>b<span class="hl sym">] !=</span> <span class="hl num">0</span>
      <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
  <span class="hl kwa">end</span>
  count
<span class="hl kwa">end</span>

n <span class="hl sym">= (</span><span class="hl kwc">ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] ||</span> <span class="hl num">2</span><span class="hl sym">).</span>to_i
n<span class="hl sym">.</span><span class="hl kwd">step</span><span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">, -</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">do</span> <span class="hl sym">|</span>exponent<span class="hl sym">|</span>
  <span class="hl kwa">break if</span> exponent <span class="hl sym">&lt;</span> <span class="hl num">0</span>
  m <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl sym">**</span> exponent <span class="hl sym">*</span> <span class="hl num">10_000</span>
  count <span class="hl sym">=</span> <span class="hl kwd">sieve</span><span class="hl sym">(</span>m<span class="hl sym">)</span>
  printf <span class="hl str">&quot;Primes up to %8d %8d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> m<span class="hl sym">,</span> count
<span class="hl kwa">end</span>

