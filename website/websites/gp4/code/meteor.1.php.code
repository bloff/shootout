<span class="sym">&lt;</span>? <span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy (PHP novice)</span>
<span class="com">*/</span>

<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;NW&quot;</span><span class="sym">,</span> <span class="num">0</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;NE&quot;</span><span class="sym">,</span> <span class="num">1</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;W&quot;</span><span class="sym">,</span> <span class="num">2</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;E&quot;</span><span class="sym">,</span> <span class="num">3</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;SW&quot;</span><span class="sym">,</span> <span class="num">4</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;SE&quot;</span><span class="sym">,</span> <span class="num">5</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;SIDES&quot;</span><span class="sym">,</span> <span class="num">6</span><span class="sym">);</span>

<span class="kwa">class</span> Cell <span class="sym">{</span>
   var <span class="kwb">$marked</span> <span class="sym">=</span> false<span class="sym">;</span>
   var <span class="kwb">$next</span><span class="sym">;</span>
   <span class="kwa">function</span> Cell<span class="sym">() {</span> <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>SIDES<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> null<span class="sym">; }</span>
   <span class="kwa">function</span> mark<span class="sym">(){</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>marked <span class="sym">=</span> true<span class="sym">; }</span>
   <span class="kwa">function</span> unmark<span class="sym">(){</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>marked <span class="sym">=</span> false<span class="sym">; }</span>
<span class="sym">}</span>

<span class="kwa">class</span> BoardCell <span class="kwa">extends</span> Cell <span class="sym">{</span>
   var <span class="kwb">$number</span><span class="sym">;</span>
   var <span class="kwb">$piece</span><span class="sym">;</span>

   <span class="kwa">function</span> BoardCell<span class="sym">(</span><span class="kwb">$i</span><span class="sym">) {</span>
      Cell<span class="sym">::</span>Cell<span class="sym">();</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>number <span class="sym">=</span> <span class="kwb">$i</span><span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> isEmpty<span class="sym">() {</span> <span class="kwa">return</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>piece <span class="sym">==</span> null<span class="sym">; }</span>
   <span class="kwa">function</span> setEmpty<span class="sym">() {</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>piece <span class="sym">=</span> null<span class="sym">; }</span>

   <span class="kwa">function</span> contiguousEmptyCells<span class="sym">() {</span>
      <span class="kwa">if</span> <span class="sym">((!</span><span class="kwb">$this</span><span class="sym">-&gt;</span>marked<span class="sym">) &amp;&amp; (</span><span class="kwb">$this</span><span class="sym">-&gt;</span>isEmpty<span class="sym">())){</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>mark<span class="sym">();</span>
         <span class="kwb">$count</span> <span class="sym">=</span> <span class="num">1</span><span class="sym">;</span>
         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span> <span class="sym">=</span> <span class="num">0</span> <span class="sym">;</span> <span class="kwb">$i</span> <span class="sym">&lt;</span> SIDES <span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span>
            <span class="kwb">$neighbour</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">];</span>
            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$neighbour</span> <span class="sym">!=</span> null <span class="sym">&amp;&amp;</span> <span class="kwb">$neighbour</span><span class="sym">-&gt;</span>isEmpty<span class="sym">())</span>
               <span class="kwb">$count</span> <span class="sym">+=</span> <span class="kwb">$neighbour</span><span class="sym">-&gt;</span>contiguousEmptyCells<span class="sym">();</span>
         <span class="sym">}</span>
      <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
         <span class="kwb">$count</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
      <span class="sym">}</span>
      <span class="kwa">return</span> <span class="kwb">$count</span><span class="sym">;</span>
   <span class="sym">}</span>
<span class="sym">}</span>


<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;BOARD_COLS&quot;</span><span class="sym">,</span> <span class="num">5</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;BOARD_ROWS&quot;</span><span class="sym">,</span> <span class="num">10</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;BOARD_SIZE&quot;</span><span class="sym">,</span> BOARD_COLS <span class="sym">*</span> BOARD_ROWS<span class="sym">);</span>

<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;PIECES&quot;</span><span class="sym">,</span> <span class="num">10</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;PIECE_SIZE&quot;</span><span class="sym">,</span> <span class="num">5</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;PIECE_ROTATIONS&quot;</span><span class="sym">,</span> SIDES<span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;PIECE_FLIPS&quot;</span><span class="sym">,</span> <span class="num">2</span><span class="sym">);</span>
<span class="kwa">define</span><span class="sym">(</span><span class="str">&quot;PIECE_ORIENTATIONS&quot;</span><span class="sym">,</span> PIECE_ROTATIONS <span class="sym">*</span> PIECE_FLIPS<span class="sym">);</span>

<span class="kwa">class</span> Board <span class="sym">{</span>
   var <span class="kwb">$cells</span><span class="sym">;</span>
   var <span class="kwb">$cellsPieceWillFill</span><span class="sym">;</span>
   var <span class="kwb">$cellCount</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   var <span class="kwb">$cache</span><span class="sym">;</span>
   var <span class="kwb">$noFit</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();</span>

   <span class="kwa">function</span> Board<span class="sym">(){</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> new BoardCell<span class="sym">(</span><span class="kwb">$i</span><span class="sym">);</span>
      <span class="kwb">$m</span> <span class="sym">=</span> <span class="kwa">floor</span><span class="sym">(</span>BOARD_SIZE <span class="sym">/</span> BOARD_COLS<span class="sym">) -</span> <span class="num">1</span><span class="sym">;</span>

      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span>
         <span class="kwb">$row</span> <span class="sym">=</span> <span class="kwa">floor</span><span class="sym">(</span><span class="kwb">$i</span> <span class="sym">/</span> BOARD_COLS<span class="sym">);</span>
         <span class="kwb">$isFirst</span> <span class="sym">=</span> <span class="kwb">$i</span> % BOARD_COLS <span class="sym">==</span> <span class="num">0</span><span class="sym">;</span>
         <span class="kwb">$isLast</span> <span class="sym">= (</span><span class="kwb">$i</span> <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> % BOARD_COLS <span class="sym">==</span> <span class="num">0</span><span class="sym">;</span>
         <span class="kwb">$c</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">];</span>

         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$row</span> % <span class="num">2</span> <span class="sym">==</span> <span class="num">1</span><span class="sym">) {</span>
            <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$isLast</span><span class="sym">)</span> <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">-(</span>BOARD_COLS<span class="sym">-</span><span class="num">1</span><span class="sym">)];</span>
            <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">-</span>BOARD_COLS<span class="sym">];</span>
            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$row</span> <span class="sym">!=</span> <span class="kwb">$m</span><span class="sym">) {</span>
               <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$isLast</span><span class="sym">)</span> <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">+(</span>BOARD_COLS<span class="sym">+</span><span class="num">1</span><span class="sym">)];</span>
               <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">+</span>BOARD_COLS<span class="sym">];</span>
            <span class="sym">}</span>
         <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$row</span> <span class="sym">!=</span> <span class="num">0</span><span class="sym">) {</span>
               <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$isFirst</span><span class="sym">)</span> <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">-(</span>BOARD_COLS<span class="sym">+</span><span class="num">1</span><span class="sym">)];</span>
               <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">-</span>BOARD_COLS<span class="sym">];</span>
            <span class="sym">}</span>
            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$row</span> <span class="sym">!=</span> <span class="kwb">$m</span><span class="sym">) {</span>
               <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$isFirst</span><span class="sym">)</span> <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">+(</span>BOARD_COLS<span class="sym">-</span><span class="num">1</span><span class="sym">)];</span>
               <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">+</span>BOARD_COLS<span class="sym">];</span>
            <span class="sym">}</span>
         <span class="sym">}</span>
         <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$isFirst</span><span class="sym">)</span> <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">-</span><span class="num">1</span><span class="sym">];</span>
         <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$isLast</span><span class="sym">)</span> <span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">+</span><span class="num">1</span><span class="sym">];</span>
      <span class="sym">}</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>initializeCache<span class="sym">();</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> initializeCache<span class="sym">(){</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>PIECES<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span>
         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$j</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">&lt;</span>PIECE_ORIENTATIONS<span class="sym">;</span> <span class="kwb">$j</span><span class="sym">++)</span>
            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$k</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$k</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$k</span><span class="sym">++)</span>
               <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$m</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$m</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$m</span><span class="sym">++)</span>
                  <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$i</span><span class="sym">][</span><span class="kwb">$j</span><span class="sym">][</span><span class="kwb">$k</span><span class="sym">][</span><span class="kwb">$m</span><span class="sym">] =</span> null<span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> unmark<span class="sym">(){</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>unmark<span class="sym">();</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> firstEmptyCellIndex<span class="sym">(){</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>isEmpty<span class="sym">())</span> <span class="kwa">return</span> <span class="kwb">$i</span><span class="sym">;</span>
      <span class="kwa">return</span> <span class="sym">-</span><span class="num">1</span><span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> remove<span class="sym">(&amp;</span><span class="kwb">$p</span><span class="sym">){</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>piece <span class="sym">==</span> <span class="kwb">$p</span><span class="sym">)</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>piece <span class="sym">=</span> null<span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> find<span class="sym">(&amp;</span><span class="kwb">$p</span><span class="sym">,&amp;</span><span class="kwb">$c</span><span class="sym">){</span>
      <span class="kwa">if</span> <span class="sym">((</span><span class="kwb">$p</span> <span class="sym">!=</span> null<span class="sym">) &amp;&amp; ((!</span><span class="kwb">$p</span><span class="sym">-&gt;</span>marked<span class="sym">) &amp;&amp; (</span><span class="kwb">$c</span> <span class="sym">!=</span> null<span class="sym">))){</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>cellsPieceWillFill<span class="sym">[</span><span class="kwb">$this</span><span class="sym">-&gt;</span>cellCount<span class="sym">] =</span> <span class="kwb">$c</span><span class="sym">;</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>cellCount<span class="sym">++;</span>
         <span class="kwb">$p</span><span class="sym">-&gt;</span>mark<span class="sym">();</span>
         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>SIDES<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>find<span class="sym">(</span><span class="kwb">$p</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">],</span><span class="kwb">$c</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]); }</span>
      <span class="sym">}</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> add<span class="sym">(</span><span class="kwb">$pieceIndex</span><span class="sym">,</span><span class="kwb">$boardIndex</span><span class="sym">,&amp;</span><span class="kwb">$p</span><span class="sym">){</span>
      <span class="kwb">$a</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$p</span><span class="sym">-&gt;</span>number<span class="sym">][</span><span class="kwb">$p</span><span class="sym">-&gt;</span>orientation<span class="sym">][</span><span class="kwb">$pieceIndex</span><span class="sym">][</span><span class="kwb">$boardIndex</span><span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>cellCount <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
      <span class="kwb">$p</span><span class="sym">-&gt;</span>unmark<span class="sym">();</span>

      <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$a</span> <span class="sym">==</span> null<span class="sym">){</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>find<span class="sym">(</span><span class="kwb">$p</span><span class="sym">-&gt;</span>cell<span class="sym">(</span><span class="kwb">$pieceIndex</span><span class="sym">),</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$boardIndex</span><span class="sym">]);</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>cellCount <span class="sym">!=</span> PIECE_SIZE<span class="sym">){</span>
            <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$p</span><span class="sym">-&gt;</span>number<span class="sym">][</span><span class="kwb">$p</span><span class="sym">-&gt;</span>orientation<span class="sym">]</span>
               <span class="sym">[</span><span class="kwb">$pieceIndex</span><span class="sym">][</span><span class="kwb">$boardIndex</span><span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>noFit<span class="sym">;</span>
            <span class="kwa">return</span> false<span class="sym">;</span>
         <span class="sym">}</span>
         <span class="kwb">$a</span> <span class="sym">=</span> <span class="kwa">array_slice</span><span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>cellsPieceWillFill<span class="sym">,</span><span class="num">0</span><span class="sym">);</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$p</span><span class="sym">-&gt;</span>number<span class="sym">][</span><span class="kwb">$p</span><span class="sym">-&gt;</span>orientation<span class="sym">][</span><span class="kwb">$pieceIndex</span><span class="sym">][</span><span class="kwb">$boardIndex</span><span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">;</span>
      <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$a</span> <span class="sym">==</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>noFit<span class="sym">)</span> <span class="kwa">return</span> false<span class="sym">;</span>
      <span class="sym">}</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span> <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$a</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>isEmpty<span class="sym">())</span> <span class="kwa">return</span> false<span class="sym">; }</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span> <span class="kwb">$a</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>piece <span class="sym">=</span> <span class="kwb">$p</span><span class="sym">; }</span>
      <span class="kwa">return</span> true<span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> asString<span class="sym">(){</span>
      <span class="kwb">$a</span> <span class="sym">=</span> <span class="kwa">array</span><span class="sym">();</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$a</span><span class="sym">[] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>piece<span class="sym">-&gt;</span>number<span class="sym">;</span>
      <span class="kwa">return implode</span><span class="sym">(</span><span class="str">&quot;&quot;</span><span class="sym">,</span><span class="kwb">$a</span><span class="sym">);</span>
   <span class="sym">}</span>

<span class="com">/*</span>
<span class="com">   function printBoard(){</span>
<span class="com">      print(&quot;cell\tNW NE W  E  SW SE\n&quot;);</span>
<span class="com">      for ($i=0; $i&lt;BOARD_SIZE; $i++){</span>
<span class="com">         printf(&quot;%d \t&quot;, $i);</span>
<span class="com">         for ($j=0; $j&lt;SIDES; $j++){</span>
<span class="com">            $c = $this-&gt;cells[$i]-&gt;next[$j];</span>
<span class="com">            if ($c == null) print(&quot;-- &quot;); else printf(&quot;%2d &quot;, $c-&gt;number);</span>
<span class="com">         }</span>
<span class="com">         print(&quot;\n&quot;);</span>
<span class="com">      }</span>
<span class="com">      print(&quot;\n&quot;);</span>
<span class="com">   }</span>
<span class="com">*/</span>
<span class="sym">}</span>


<span class="kwa">class</span> PieceCell <span class="kwa">extends</span> Cell <span class="sym">{</span>
   <span class="kwa">function</span> PieceCell<span class="sym">() {</span> Cell<span class="sym">::</span>Cell<span class="sym">(); }</span>

   <span class="kwa">function</span> flip<span class="sym">() {</span>
      <span class="kwb">$swap</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$swap</span><span class="sym">;</span>

      <span class="kwb">$swap</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$swap</span><span class="sym">;</span>

      <span class="kwb">$swap</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$swap</span><span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> rotate<span class="sym">() {</span>
      <span class="kwb">$swap</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">];</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$swap</span><span class="sym">;</span>
   <span class="sym">}</span>
<span class="sym">}</span>


<span class="kwa">class</span> Piece <span class="sym">{</span>
   var <span class="kwb">$number</span><span class="sym">;</span>
   var <span class="kwb">$orientation</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
   var <span class="kwb">$cache</span><span class="sym">;</span>

   <span class="kwa">function</span> Piece<span class="sym">(</span><span class="kwb">$n</span><span class="sym">) {</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>number <span class="sym">=</span> <span class="kwb">$n</span><span class="sym">;</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$k</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$k</span><span class="sym">&lt;</span>PIECE_ORIENTATIONS<span class="sym">;</span> <span class="kwb">$k</span><span class="sym">++){</span>

         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span>
            <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">][</span><span class="kwb">$i</span><span class="sym">] =</span> new PieceCell<span class="sym">();</span>

         <span class="kwa">switch</span> <span class="sym">(</span><span class="kwb">$n</span><span class="sym">){</span>
            case <span class="num">0</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make0<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">1</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make1<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">2</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make2<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">3</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make3<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">4</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make4<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">5</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make5<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">6</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make6<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">7</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make7<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">8</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make8<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
            case <span class="num">9</span><span class="sym">:</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>make9<span class="sym">(</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] );</span> <span class="kwa">break</span><span class="sym">;</span>
         <span class="sym">}</span>

         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span><span class="kwb">$k</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span>
            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$i</span> % PIECE_ROTATIONS <span class="sym">==</span> <span class="num">0</span><span class="sym">)</span>
               <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$j</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$j</span><span class="sym">++)</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">][</span><span class="kwb">$j</span><span class="sym">]-&gt;</span>flip<span class="sym">();</span>
            <span class="kwa">else</span>
               <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$j</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$j</span><span class="sym">++)</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$k</span><span class="sym">][</span><span class="kwb">$j</span><span class="sym">]-&gt;</span>rotate<span class="sym">();</span>
      <span class="sym">}</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> unmark<span class="sym">(){</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++)</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$this</span><span class="sym">-&gt;</span>orientation<span class="sym">][</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>unmark<span class="sym">();</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> nextOrientation<span class="sym">(){</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>orientation <span class="sym">= (</span><span class="kwb">$this</span><span class="sym">-&gt;</span>orientation <span class="sym">+</span> <span class="num">1</span><span class="sym">)</span> % PIECE_ORIENTATIONS<span class="sym">;</span>
      <span class="kwa">return</span> <span class="kwb">$this</span><span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> cell<span class="sym">(</span><span class="kwb">$i</span><span class="sym">){</span> <span class="kwa">return</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>cache<span class="sym">[</span><span class="kwb">$this</span><span class="sym">-&gt;</span>orientation<span class="sym">][</span><span class="kwb">$i</span><span class="sym">]; }</span>

   <span class="kwa">function</span> make0<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make1<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make2<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make3<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make4<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make5<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make6<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make7<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make8<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> make9<span class="sym">(&amp;</span><span class="kwb">$a</span><span class="sym">) {</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">1</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>E<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>W<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">2</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>NW<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">];</span>
      <span class="kwb">$a</span><span class="sym">[</span><span class="num">3</span><span class="sym">]-&gt;</span><span class="kwa">next</span><span class="sym">[</span>SE<span class="sym">] =</span> <span class="kwb">$a</span><span class="sym">[</span><span class="num">4</span><span class="sym">];</span>
   <span class="sym">}</span>

<span class="com">/*</span>
<span class="com">   function printPiece(){</span>
<span class="com">      printf(&quot;Piece # %d\n&quot;, $this-&gt;number);</span>
<span class="com">      print(&quot;cell\tNW NE W  E  SW SE\n&quot;);</span>
<span class="com">      for ($i=0; $i&lt;PIECE_SIZE; $i++){</span>
<span class="com">         printf(&quot;%d \t&quot;, $i);</span>
<span class="com">         for ($j=0; $j&lt;SIDES; $j++){</span>
<span class="com">            $neighbour = $this-&gt;cell($i)-&gt;next[$j];</span>
<span class="com">            if ($neighbour == null){</span>
<span class="com">               print(&quot;-- &quot;);</span>
<span class="com">            } else {</span>
<span class="com">               for ($k=0; $k&lt;PIECE_SIZE; $k++)</span>
<span class="com">                  if (($this-&gt;cell($k)) == $neighbour) printf(&quot;%2d &quot;, $k);</span>
<span class="com">            }</span>
<span class="com">         }</span>
<span class="com">         print(&quot;\n&quot;);</span>
<span class="com">      }</span>
<span class="com">      print(&quot;\n&quot;);</span>
<span class="com">   }</span>
<span class="com">*/</span>
<span class="sym">}</span>


<span class="kwa">class</span> Solver <span class="sym">{</span>
   var <span class="kwb">$countdown</span><span class="sym">,</span> <span class="kwb">$n</span><span class="sym">,</span> <span class="kwb">$board</span><span class="sym">,</span> <span class="kwb">$pieces</span><span class="sym">,</span> <span class="kwb">$unplaced</span><span class="sym">,</span> <span class="kwb">$unplacedSize</span><span class="sym">,</span> <span class="kwb">$once</span><span class="sym">,</span>
       <span class="kwb">$first</span><span class="sym">,</span> <span class="kwb">$last</span><span class="sym">,</span> <span class="kwb">$current</span><span class="sym">;</span>

   <span class="kwa">function</span> Solver<span class="sym">(</span><span class="kwb">$arg</span><span class="sym">) {</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>n <span class="sym">=</span> <span class="kwb">$arg</span><span class="sym">;</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>countdown <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>n<span class="sym">;</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>board <span class="sym">=</span> new Board<span class="sym">();</span>

      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>PIECES<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>pieces<span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> new Piece<span class="sym">(</span><span class="kwb">$i</span><span class="sym">);</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>unplaced<span class="sym">[</span><span class="kwb">$i</span><span class="sym">] =</span> true<span class="sym">;</span>
      <span class="sym">}</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>unplacedSize <span class="sym">=</span> PIECES<span class="sym">;</span>

      <span class="kwb">$this</span><span class="sym">-&gt;</span>once <span class="sym">=</span> true<span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> shouldPrune<span class="sym">() {</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>board<span class="sym">-&gt;</span>unmark<span class="sym">();</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>BOARD_SIZE<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++) {</span>
         <span class="kwb">$forall</span> <span class="sym">= (</span><span class="kwb">$this</span><span class="sym">-&gt;</span>board<span class="sym">-&gt;</span>cells<span class="sym">[</span><span class="kwb">$i</span><span class="sym">]-&gt;</span>contiguousEmptyCells<span class="sym">()</span> % PIECE_SIZE<span class="sym">) ==</span> <span class="num">0</span><span class="sym">;</span>
         <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$forall</span><span class="sym">)</span> <span class="kwa">return</span> <span class="sym">!</span><span class="kwb">$forall</span><span class="sym">;</span>
      <span class="sym">}</span>
      <span class="kwa">return</span> <span class="sym">!</span><span class="kwb">$forall</span><span class="sym">;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> puzzleSolved<span class="sym">() {</span>
      <span class="kwb">$a</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>board<span class="sym">-&gt;</span>asString<span class="sym">();</span>
      <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>first <span class="sym">==</span> null<span class="sym">){</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>first <span class="sym">=</span> <span class="kwb">$a</span><span class="sym">;</span>
         <span class="kwb">$this</span><span class="sym">-&gt;</span>last <span class="sym">=</span> <span class="kwb">$a</span><span class="sym">;</span>
      <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$a</span> <span class="sym">&lt;</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>first<span class="sym">){</span>
            <span class="kwb">$this</span><span class="sym">-&gt;</span>first <span class="sym">=</span> <span class="kwb">$a</span><span class="sym">;</span>
         <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
            <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$a</span> <span class="sym">&gt;</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>last<span class="sym">){</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>last <span class="sym">=</span> <span class="kwb">$a</span><span class="sym">; }</span>
         <span class="sym">}</span>
      <span class="sym">}</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>countdown<span class="sym">--;</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> findSolutions<span class="sym">() {</span>
      <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>countdown <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">){</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>unplacedSize <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">){</span>
            <span class="kwb">$emptyCellIndex</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>board<span class="sym">-&gt;</span>firstEmptyCellIndex<span class="sym">();</span>

            <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$k</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$k</span><span class="sym">&lt;</span>PIECES<span class="sym">;</span> <span class="kwb">$k</span><span class="sym">++){</span>
               <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>unplaced<span class="sym">[</span><span class="kwb">$k</span><span class="sym">]){</span>
                  <span class="kwb">$this</span><span class="sym">-&gt;</span>unplaced<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] =</span> false<span class="sym">;</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>unplacedSize<span class="sym">--;</span>

                  <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$i</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$i</span><span class="sym">&lt;</span>PIECE_ORIENTATIONS<span class="sym">;</span> <span class="kwb">$i</span><span class="sym">++){</span>
                     <span class="kwb">$piece</span> <span class="sym">=</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>pieces<span class="sym">[</span><span class="kwb">$k</span><span class="sym">]-&gt;</span>nextOrientation<span class="sym">();</span>
                     <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">$j</span><span class="sym">=</span><span class="num">0</span><span class="sym">;</span> <span class="kwb">$j</span><span class="sym">&lt;</span>PIECE_SIZE<span class="sym">;</span> <span class="kwb">$j</span><span class="sym">++){</span>
                        <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>board<span class="sym">-&gt;</span>add<span class="sym">(</span><span class="kwb">$j</span><span class="sym">,</span><span class="kwb">$emptyCellIndex</span><span class="sym">,</span><span class="kwb">$piece</span><span class="sym">)){</span>
                           <span class="kwa">if</span> <span class="sym">(!</span><span class="kwb">$this</span><span class="sym">-&gt;</span>shouldPrune<span class="sym">())</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>findSolutions<span class="sym">();</span>
                           <span class="kwb">$this</span><span class="sym">-&gt;</span>board<span class="sym">-&gt;</span>remove<span class="sym">(</span><span class="kwb">$piece</span><span class="sym">);</span>
                        <span class="sym">}</span>
                     <span class="sym">}</span>
                  <span class="sym">}</span>
                  <span class="kwb">$this</span><span class="sym">-&gt;</span>unplaced<span class="sym">[</span><span class="kwb">$k</span><span class="sym">] =</span> true<span class="sym">;</span> <span class="kwb">$this</span><span class="sym">-&gt;</span>unplacedSize<span class="sym">++;</span>
               <span class="sym">}</span>
            <span class="sym">}</span>
         <span class="sym">}</span> <span class="kwa">else</span> <span class="sym">{</span>
            <span class="kwb">$this</span><span class="sym">-&gt;</span>puzzleSolved<span class="sym">();</span>
         <span class="sym">}</span>
      <span class="sym">}</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> printBoard<span class="sym">(&amp;</span><span class="kwb">$s</span><span class="sym">) {</span>
      <span class="kwb">$indent</span> <span class="sym">=</span> false<span class="sym">;</span>
      <span class="kwb">$i</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
      <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$i</span> <span class="sym">&lt;</span> <span class="kwa">strlen</span><span class="sym">(</span><span class="kwb">$s</span><span class="sym">)){</span>
         <span class="kwa">if</span> <span class="sym">(</span><span class="kwb">$indent</span><span class="sym">)</span> <span class="kwa">print</span><span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);</span>
         <span class="kwb">$j</span> <span class="sym">=</span> <span class="num">0</span><span class="sym">;</span>
         <span class="kwa">while</span> <span class="sym">(</span><span class="kwb">$j</span> <span class="sym">&lt;</span> BOARD_COLS<span class="sym">){</span>
            <span class="kwa">print</span><span class="sym">(</span><span class="kwb">$s</span><span class="sym">[</span><span class="kwb">$i</span><span class="sym">]);</span> <span class="kwa">print</span><span class="sym">(</span><span class="str">&quot; &quot;</span><span class="sym">);</span>
            <span class="kwb">$j</span><span class="sym">++;</span>
            <span class="kwb">$i</span><span class="sym">++;</span>
         <span class="sym">}</span>
         <span class="kwa">print</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
         <span class="kwb">$indent</span> <span class="sym">= !</span><span class="kwb">$indent</span><span class="sym">;</span>
      <span class="sym">}</span>
      <span class="kwa">print</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">);</span>
   <span class="sym">}</span>

   <span class="kwa">function</span> printSolutions<span class="sym">() {</span>
      <span class="kwa">printf</span><span class="sym">(</span><span class="str">&quot;%d solutions found</span><span class="esc">\n\n</span><span class="str">&quot;</span><span class="sym">,</span><span class="kwb">$this</span><span class="sym">-&gt;</span>n<span class="sym">);</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>printBoard<span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>first<span class="sym">);</span>
      <span class="kwb">$this</span><span class="sym">-&gt;</span>printBoard<span class="sym">(</span><span class="kwb">$this</span><span class="sym">-&gt;</span>last<span class="sym">);</span>
   <span class="sym">}</span>
<span class="sym">}</span>


<span class="kwb">$s</span> <span class="sym">=</span> new Solver<span class="sym">(</span><span class="kwb">$argv</span><span class="sym">[</span><span class="num">1</span><span class="sym">]);</span>
<span class="kwb">$s</span><span class="sym">-&gt;</span>findSolutions<span class="sym">();</span>
<span class="kwb">$s</span><span class="sym">-&gt;</span>printSolutions<span class="sym">();</span>

?<span class="sym">&gt;</span>
