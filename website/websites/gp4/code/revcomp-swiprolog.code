<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Great Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Assumes execution using the following command-line usage:</span>
<span class="slc">%</span>
<span class="slc">%   pl -L0 -T0 -G0 -q -g main -t halt -s SOURCENAME -- USERARG1 ... &lt; in &gt; out</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

main <span class="sym">:-</span>
  prompt<span class="sym">(</span>Old<span class="sym">,</span> <span class="str">''</span><span class="sym">),</span>
  revcomp<span class="sym">(</span>user_input<span class="sym">),</span>
  prompt<span class="sym">(</span>_<span class="sym">,</span> Old<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

revcomp<span class="sym">(</span>S<span class="sym">) :-</span> revcomp_<span class="sym">(</span>S<span class="sym">, [])</span>.

<span class="slc">% ------------- %</span>

revcomp_<span class="sym">(</span>S<span class="sym">,</span> Seg<span class="sym">) :-</span> <span class="kwa">at_end_of_stream</span><span class="sym">(</span>S<span class="sym">), !,</span> dump_segment<span class="sym">(</span>Seg<span class="sym">),</span> <span class="kwa">nl</span>.

revcomp_<span class="sym">(</span>S<span class="sym">,</span> Seg<span class="sym">) :-</span>
  read_line_to_codes<span class="sym">(</span>S<span class="sym">,</span> L<span class="sym">),</span>
  <span class="sym">(</span>is_segment_header<span class="sym">(</span>L<span class="sym">) -&gt;</span> dump_segment<span class="sym">(</span>Seg<span class="sym">),</span> NewSeg <span class="sym">= [],</span> format<span class="sym">(</span><span class="str">'~N~s~N'</span><span class="sym">, [</span>L<span class="sym">]) ;</span> add_to_segment<span class="sym">(</span>L<span class="sym">,</span> Seg<span class="sym">,</span> NewSeg<span class="sym">)),</span>
  <span class="sym">!,</span> revcomp_<span class="sym">(</span>S<span class="sym">,</span> NewSeg<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

<span class="slc">%% 62 is ASCII code for character '&gt;'</span>

is_segment_header<span class="sym">([</span><span class="num">62</span><span class="sym">|</span>_<span class="sym">])</span>.

<span class="slc">% ------------------------------- %</span>

<span class="slc">%% 60 is output line length</span>

dump_segment<span class="sym">([]) :- !</span>.

dump_segment<span class="sym">(</span>Seg<span class="sym">) :-</span> reverse<span class="sym">(</span>Seg<span class="sym">,</span> RSeg<span class="sym">),</span> dump_segment_<span class="sym">(</span>RSeg<span class="sym">,</span> <span class="num">1</span><span class="sym">,</span> <span class="num">60</span><span class="sym">)</span>.

<span class="slc">% ------------- %</span>

dump_segment_<span class="sym">([],</span> _<span class="sym">,</span> _<span class="sym">) :- !</span>.

dump_segment_<span class="sym">([</span>H<span class="sym">|</span>T<span class="sym">],</span> A<span class="sym">,</span> N<span class="sym">) :-</span>
  complement<span class="sym">(</span>H<span class="sym">,</span> C<span class="sym">),</span> <span class="kwb">put_code</span><span class="sym">(</span>C<span class="sym">), (</span>A <span class="sym">=:=</span> N <span class="sym">-&gt;</span> <span class="kwa">nl</span><span class="sym">,</span> A1 <span class="kwa">is</span> <span class="num">1</span><span class="sym">;</span> A1 <span class="kwa">is</span> A <span class="sym">+</span> <span class="num">1</span><span class="sym">),</span>
  <span class="sym">!,</span> dump_segment_<span class="sym">(</span>T<span class="sym">,</span> A1<span class="sym">,</span> N<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

add_to_segment<span class="sym">([],</span> Seg<span class="sym">,</span> Seg<span class="sym">) :- !</span>.
add_to_segment<span class="sym">(</span>L<span class="sym">, [],</span> L<span class="sym">) :- !</span>.
add_to_segment<span class="sym">(</span>L<span class="sym">,</span> Seg<span class="sym">,</span> NewSeg<span class="sym">) :-</span> append<span class="sym">(</span>Seg<span class="sym">,</span> L<span class="sym">,</span> NewSeg<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

<span class="slc">%%      &quot;wsatug cyrkmb dhvnAT UGCYRK MBDHVN&quot;</span>
<span class="slc">%%  to:</span>
<span class="slc">%%      &quot;WSTAAC GRYMKV HDBNTA ACGRYM KVHDBN&quot;</span>

complement<span class="sym">(</span>Code<span class="sym">,</span> Complement<span class="sym">) :-</span>
  <span class="sym">(</span>Code <span class="sym">&gt;</span> <span class="num">90</span> <span class="sym">-&gt;</span> AdjCode <span class="kwa">is</span> Code <span class="sym">-</span> <span class="num">32</span> <span class="sym">;</span> AdjCode <span class="sym">=</span> Code<span class="sym">),</span>
  Idx <span class="kwa">is</span> AdjCode <span class="sym">-</span> <span class="num">65</span><span class="sym">,</span>
  nth0<span class="sym">(</span>Idx<span class="sym">, [</span><span class="num">84</span><span class="sym">,</span> <span class="num">86</span><span class="sym">,</span> <span class="num">71</span><span class="sym">,</span> <span class="num">72</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">67</span><span class="sym">,</span> <span class="num">68</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">77</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">75</span><span class="sym">,</span> <span class="num">78</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">89</span><span class="sym">,</span> <span class="num">83</span><span class="sym">,</span> <span class="num">65</span><span class="sym">,</span> <span class="num">65</span><span class="sym">,</span> <span class="num">66</span><span class="sym">,</span> <span class="num">87</span><span class="sym">,</span> <span class="num">0</span><span class="sym">,</span> <span class="num">82</span><span class="sym">,</span> <span class="num">0</span><span class="sym">],</span> Complement<span class="sym">)</span>.

