<span class="hl slc">// The Computer Language Benchmarks Game</span>
<span class="hl slc">// http://shootout.alioth.debian.org/</span>
<span class="hl slc">// Converted from my Python version by bearophile</span>
<span class="hl slc">// This version shows hi-level coding in D V.1.0</span>


<span class="hl kwa">import</span> std<span class="hl sym">.</span>stdio<span class="hl sym">,</span> std<span class="hl sym">.</span>string<span class="hl sym">;</span>

<span class="hl kwa">void</span> <span class="hl kwd">show</span><span class="hl sym">(</span><span class="hl kwa">char</span><span class="hl sym">[][]</span> seq<span class="hl sym">,</span> <span class="hl kwa">char</span><span class="hl sym">[]</span> table<span class="hl sym">) {</span>
    <span class="hl kwa">auto</span> seq2 <span class="hl sym">=</span> seq<span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl str">&quot;&quot;</span><span class="hl sym">).</span><span class="hl kwd">translate</span><span class="hl sym">(</span>table<span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">).</span>reverse<span class="hl sym">;</span>
    <span class="hl kwa">for</span><span class="hl sym">(</span><span class="hl kwa">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> seq2<span class="hl sym">.</span>length<span class="hl sym">;</span> i <span class="hl sym">+=</span> <span class="hl num">60</span><span class="hl sym">)</span>
        <span class="hl kwd">writefln</span><span class="hl sym">(</span>seq2<span class="hl sym">[</span>i <span class="hl sym">.. (</span>i<span class="hl sym">+</span><span class="hl num">60</span> <span class="hl sym">&gt;</span> length<span class="hl sym">)</span> ? length <span class="hl sym">:</span> i<span class="hl sym">+</span><span class="hl num">60</span><span class="hl sym">]);</span>
<span class="hl sym">}</span>

<span class="hl kwa">void</span> <span class="hl kwd">main</span><span class="hl sym">() {</span>
    <span class="hl kwa">char</span><span class="hl sym">[][]</span> seq<span class="hl sym">;</span>
    <span class="hl kwa">char</span><span class="hl sym">[]</span> line<span class="hl sym">;</span>
    <span class="hl kwa">auto</span> tab <span class="hl sym">=</span> <span class="hl kwd">maketrans</span><span class="hl sym">(</span><span class="hl str">&quot;ACBDGHKMNSRUTWVYacbdghkmnsrutwvy&quot;</span><span class="hl sym">,</span>
                         <span class="hl str">&quot;TGVHCDMKNSYAAWBRTGVHCDMKNSYAAWBR&quot;</span><span class="hl sym">);</span>

    <span class="hl kwa">while</span> <span class="hl sym">((</span>line <span class="hl sym">=</span> <span class="hl kwd">readln</span><span class="hl sym">()) !=</span> <span class="hl kwa">null</span><span class="hl sym">)</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span>line<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] ==</span> <span class="hl str">'&gt;'</span> <span class="hl sym">||</span> line<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] ==</span> <span class="hl str">';'</span><span class="hl sym">) {</span>
            <span class="hl kwd">show</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> tab<span class="hl sym">);</span>
            <span class="hl kwd">writef</span><span class="hl sym">(</span>line<span class="hl sym">);</span>
            seq<span class="hl sym">.</span>length <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
        <span class="hl sym">}</span> <span class="hl kwa">else</span>
            seq <span class="hl sym">~=</span> line<span class="hl sym">;</span>
    <span class="hl kwd">show</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> tab<span class="hl sym">);</span>
<span class="hl sym">}</span>
