<span class="hl com">/* The Great Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">   Contributed by Ian Osgood */</span>

seq <span class="hl sym">:=</span> Sequence <span class="hl kwa">clone do</span><span class="hl sym">(</span>
    complementAt <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span>i<span class="hl sym">,</span>
        <span class="hl str">&quot;TVGHefCDijMlKNopqYSAABWxRz&quot;</span> <span class="hl kwd">at</span><span class="hl sym">(</span><span class="hl kwd">at</span><span class="hl sym">(</span>i<span class="hl sym">)-</span><span class="hl num">65</span><span class="hl sym">)</span>  <span class="hl slc"># &quot;A&quot; at(0)</span>
    <span class="hl sym">)</span>
    revComp <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span> <span class="hl kwa">if</span> <span class="hl sym">(</span>size <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwa">return self</span><span class="hl sym">)</span>
        j <span class="hl sym">:=</span> uppercase size
        <span class="hl kwa">for</span> <span class="hl sym">(</span>i<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> size <span class="hl sym">/</span> <span class="hl num">2</span> <span class="hl sym">-</span> <span class="hl num">0.25</span><span class="hl sym">,</span>
            j <span class="hl sym">=</span> j <span class="hl sym">-</span> <span class="hl num">1</span>
            t <span class="hl sym">:=</span> <span class="hl kwd">complementAt</span><span class="hl sym">(</span>j<span class="hl sym">)</span>
            <span class="hl kwd">atPut</span><span class="hl sym">(</span>j<span class="hl sym">,</span> <span class="hl kwd">complementAt</span><span class="hl sym">(</span>i<span class="hl sym">))</span> <span class="hl kwd">atPut</span><span class="hl sym">(</span>i<span class="hl sym">,</span> t<span class="hl sym">)</span>
        <span class="hl sym">)</span>
        <span class="hl kwa">self</span>
    <span class="hl sym">)</span>
    output <span class="hl sym">:=</span> <span class="hl kwa">method</span><span class="hl sym">(</span> <span class="hl kwa">if</span> <span class="hl sym">(</span>size <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwa">return self</span><span class="hl sym">)</span>
        width <span class="hl sym">:=</span> <span class="hl num">60</span>
        start <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">;</span> end <span class="hl sym">:=</span> width
        <span class="hl kwd">while</span> <span class="hl sym">(</span>end <span class="hl sym">&lt;</span> size<span class="hl sym">,</span>
            <span class="hl kwd">slice</span><span class="hl sym">(</span>start<span class="hl sym">,</span>end<span class="hl sym">)</span> println
            start <span class="hl sym">=</span> end<span class="hl sym">;</span> end <span class="hl sym">=</span> end <span class="hl sym">+</span> width
        <span class="hl sym">)</span>
        <span class="hl kwd">slice</span><span class="hl sym">(</span>start<span class="hl sym">)</span> println
        <span class="hl kwa">self</span>
    <span class="hl sym">)</span>
<span class="hl sym">)</span>

input <span class="hl sym">:=</span> <span class="hl kwb">File</span> standardInput
<span class="hl kwd">while</span> <span class="hl sym">(</span>line <span class="hl sym">:=</span> input readLine<span class="hl sym">,</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>line <span class="hl kwd">beginsWithSeq</span><span class="hl sym">(</span><span class="hl str">&quot;&gt;&quot;</span><span class="hl sym">),</span>
        seq revComp output empty<span class="hl sym">;</span> line println<span class="hl sym">,</span>
        seq <span class="hl kwd">appendSeq</span><span class="hl sym">(</span>line<span class="hl sym">) )</span>
<span class="hl sym">)</span>
seq revComp output
