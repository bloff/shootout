<span class="slc">\ Computer Language Shootout</span>
<span class="slc">\ http://shootout.alioth.debian.org/</span>
<span class="slc">\ contributed by Ian Osgood (R. by Brad Eckert)</span>

<span class="slc">\ read NUM from last command line argument</span>
<span class="num">0</span><span class="sym">.</span> argc <span class="sym">&#64;</span> <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span>drop drop constant NUM

<span class="slc">\ printf(&quot;%.9f&quot;): show nine digits past the decimal point</span>

<span class="sym">:</span> fsplit        <span class="com">( F: r -- )</span> <span class="com">( precision -- sign Dint Dfrac )</span>
  <span class="slc">\ *G Split float into integer component parts.</span>
  <span class="sym">&gt;</span>R FDUP F0<span class="sym">&lt;</span> FABS                <span class="slc">\ int part must fit in a double</span>
  FDUP F<span class="sym">&gt;</span>D <span class="num">2</span>DUP D<span class="sym">&gt;</span>F F<span class="sym">-</span>            <span class="slc">\ get int, leave frac</span>
  <span class="num">2</span><span class="sym">.</span> R<span class="sym">&gt;</span> <span class="num">0</span> <span class="sym">?</span>DO D2<span class="sym">*</span> <span class="num">2</span>DUP D2<span class="sym">*</span> D2<span class="sym">*</span> D<span class="sym">+</span> LOOP <span class="slc">\ 2 * 10^precision</span>
  D<span class="sym">&gt;</span>F F<span class="sym">*</span> F<span class="sym">&gt;</span>D  <span class="num">1</span><span class="sym">.</span> D<span class="sym">+</span> D2<span class="sym">/ ;</span>        <span class="slc">\ round</span>

<span class="sym">:</span> R<span class="sym">.</span>          <span class="com">( F: r -- )</span> <span class="com">( precision -- )</span>
  <span class="slc">\ *G Convert float to a string of a given precision</span>
  <span class="sym">&lt;#</span> DUP <span class="sym">&gt;</span>R fsplit R<span class="sym">&#64;</span> <span class="num">0</span> <span class="sym">?</span>DO <span class="sym">#</span> LOOP D<span class="sym">+</span>
  R<span class="sym">&gt;</span> IF <span class="sym">[</span>CHAR<span class="sym">] .</span> HOLD THEN <span class="sym">#</span>S ROT SIGN <span class="sym">#&gt;</span> type <span class="sym">;</span>

<span class="sym">:</span> sumFn <span class="com">( xt start -- )</span> <span class="num">0</span>e
  NUM <span class="num">1</span><span class="sym">+</span> swap do I <span class="num">0</span> d<span class="sym">&gt;</span>f dup execute f<span class="sym">+</span> loop drop  <span class="num">9</span> R<span class="sym">. #</span>tab emit <span class="sym">;</span>

<span class="slc">\ all these are ( f -- f )</span>

<span class="sym">:</span>noname <span class="sym">[</span> <span class="num">2</span>e <span class="num">3</span>e f<span class="sym">/ ]</span> fliteral fswap f<span class="sym">** ;</span> <span class="num">0</span> sumFn <span class="sym">.</span><span class="str">&quot; (2/3)^k&quot;</span> cr

<span class="sym">:</span>noname fsqrt <span class="num">1</span><span class="sym">/</span>f <span class="sym">;</span> <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; k^-0.5&quot;</span> cr

<span class="sym">:</span>noname fdup <span class="num">1</span>e f<span class="sym">+</span> f<span class="sym">*</span> <span class="num">1</span><span class="sym">/</span>f <span class="sym">;</span> <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; 1/k(k+1)&quot;</span> cr

<span class="sym">:</span>noname fdup fsin fdup f<span class="sym">*</span> fover f<span class="sym">*</span> fover f<span class="sym">*</span> f<span class="sym">*</span> <span class="num">1</span><span class="sym">/</span>f <span class="sym">;</span> <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; Flint Hills&quot;</span> cr

<span class="sym">:</span>noname fdup fcos fdup f<span class="sym">*</span> fover f<span class="sym">*</span> fover f<span class="sym">*</span> f<span class="sym">*</span> <span class="num">1</span><span class="sym">/</span>f <span class="sym">;</span> <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; Cookson Hills&quot;</span> cr

<span class="sym">'</span> <span class="num">1</span><span class="sym">/</span>f <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; Harmonic&quot;</span> cr

<span class="sym">:</span>noname fdup f<span class="sym">*</span> <span class="num">1</span><span class="sym">/</span>f <span class="sym">;</span> <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; Riemann Zeta&quot;</span> cr

<span class="slc">\ these are ( sum f -- sum f )</span>

<span class="sym">:</span>noname <span class="num">1</span><span class="sym">/</span>f fnegate fswap fnegate fswap <span class="sym">;</span> <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; Alternating Harmonic&quot;</span> cr

<span class="sym">:</span>noname f2<span class="sym">*</span> <span class="num">1</span>e f<span class="sym">-</span> <span class="num">1</span><span class="sym">/</span>f fnegate fswap fnegate fswap <span class="sym">;</span> <span class="num">1</span> sumFn <span class="sym">.</span><span class="str">&quot; Gregory&quot;</span> cr

bye
