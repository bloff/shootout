<span class="slc">\ The Computer Language Shootout</span>
<span class="slc">\ http://shootout.alioth.debian.org/</span>
<span class="slc">\ Submitted by Ian Osgood</span>
<span class="slc">\ modified by Bernd Paysan</span>

<span class="slc">\ read NUM from last command line argument</span>
<span class="num">0</span><span class="sym">.</span> argc <span class="sym">&#64;</span> <span class="num">1</span><span class="sym">-</span> arg <span class="sym">&gt;</span>number <span class="num">2</span><span class="kwa">drop drop constant</span> NUM

import float float also

<span class="sym">:</span> mem<span class="sym">,</span>
  <span class="kwa">here over allot swap move</span> <span class="sym">;</span>

<span class="slc">\ random</span>
<span class="num">42</span> value seed
<span class="sym">:</span> random <span class="com">( -- u )</span> seed <span class="num">3877</span> <span class="sym">*</span> <span class="num">29573</span> <span class="sym">+</span> <span class="num">139968</span> <span class="kwa">mod dup to</span> seed <span class="sym">;</span>
<span class="sym">:</span> gen<span class="sym">-</span>random <span class="com">( r -- r' )</span> random fm<span class="sym">*</span> <span class="num">139968</span>e f<span class="sym">/ ;</span>

<span class="num">60</span> <span class="kwa">constant</span> line<span class="sym">-</span>len
<span class="num">128</span> <span class="kwa">constant</span> lines
line<span class="sym">-</span>len <span class="num">1</span><span class="sym">+</span> lines <span class="sym">*</span> <span class="kwa">Constant</span> buf<span class="sym">-</span>size

<span class="slc">\ data arrays</span>
<span class="kwa">Variable</span> linebuf buf<span class="sym">-</span>size <span class="kwa">allot</span>

<span class="kwa">create</span> ALU
  s<span class="str">&quot; GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span> mem<span class="sym">,</span>
  s<span class="str">&quot; GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span> mem<span class="sym">,</span>
  s<span class="str">&quot; CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span> mem<span class="sym">,</span>
  s<span class="str">&quot; ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span> mem<span class="sym">,</span>
  s<span class="str">&quot; GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span> mem<span class="sym">,</span>
  s<span class="str">&quot; AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span> mem<span class="sym">,</span>
  s<span class="str">&quot; AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span> mem<span class="sym">,</span>
<span class="kwa">here constant</span> ALU<span class="sym">-</span>end

<span class="sym">:</span> f<span class="sym">+,</span> <span class="com">( a f -- a' )</span> f<span class="sym">+</span> fdup f<span class="sym">, ;</span>
<span class="sym">:</span> <span class="num">0.02</span><span class="sym">-</span>remainder<span class="sym">,</span> <span class="com">( a -- a&gt;=1)</span>
  <span class="kwa">begin</span> fdup <span class="num">1</span>e f<span class="sym">&lt;</span> <span class="kwa">while</span> <span class="num">0.02</span>e f<span class="sym">+,</span> <span class="kwa">repeat</span> <span class="sym">;</span>

<span class="slc">\ &quot; acgtBDHKMNRSVWY&quot;</span>
falign <span class="kwa">create</span> IUB   <span class="num">0</span>e
  <span class="num">0.27</span>e f<span class="sym">+,</span>  <span class="num">0.12</span>e f<span class="sym">+,</span>  <span class="num">0.12</span>e f<span class="sym">+,</span>  <span class="num">0.27</span>e f<span class="sym">+,</span>
  <span class="num">0.02</span><span class="sym">-</span>remainder<span class="sym">,</span> fdrop

<span class="slc">\ &quot; acgt&quot;</span>
falign <span class="kwa">create</span> HomoSap  <span class="num">0</span>e
  <span class="num">0.3029549426680</span>e f<span class="sym">+,</span>  <span class="num">0.1979883004921</span>e f<span class="sym">+,</span>
  <span class="num">0.1975473066391</span>e f<span class="sym">+,</span>  <span class="num">0.3015094502008</span>e f<span class="sym">+,</span>  fdrop

<span class="sym">:</span> next<span class="sym">-</span><span class="kwa">char</span> <span class="com">( a -- a' c )</span>
  <span class="kwa">dup</span> ALU<span class="sym">-</span>end <span class="sym">=</span> <span class="kwa">if drop</span> ALU <span class="kwa">then  count</span> <span class="sym">;</span>

<span class="sym">:</span> flush<span class="sym">,</span> linebuf <span class="sym">&#64;+</span> <span class="kwa">swap</span> type linebuf off <span class="sym">;</span>
<span class="sym">:</span> <span class="kwa">emit</span><span class="sym">,</span> <span class="com">( char -- )</span>  linebuf <span class="sym">&#64;+ +</span> <span class="kwa">c</span><span class="sym">!</span>  <span class="num">1</span> linebuf <span class="sym">+! ;</span>
<span class="sym">:</span> <span class="kwa">cr</span><span class="sym">,  #</span>lf <span class="kwa">emit</span><span class="sym">,</span> linebuf <span class="sym">&#64;</span> buf<span class="sym">-</span>size <span class="sym">=</span> <span class="kwa">IF</span>
	flush<span class="sym">,</span>
    <span class="kwa">THEN</span> <span class="sym">;</span>

<span class="sym">: ?</span><span class="kwa">cr</span> <span class="com">( col -- col' )</span> <span class="num">1</span><span class="sym">-</span> <span class="kwa">dup</span> <span class="num">0</span><span class="sym">=</span> <span class="kwa">if cr</span><span class="sym">,</span> line<span class="sym">-</span>len <span class="sym">+</span> <span class="kwa">then</span> <span class="sym">;</span>
<span class="sym">: ?</span>end<span class="sym">-</span><span class="kwa">cr</span> <span class="com">( col -- )</span> line<span class="sym">-</span>len <span class="sym">&lt;</span> <span class="kwa">if cr</span><span class="sym">,</span> <span class="kwa">then</span> flush<span class="sym">, ;</span>

<span class="sym">:</span> fasta<span class="sym">-</span><span class="kwa">repeat</span> <span class="com">( n -- )</span> ALU
    <span class="kwa">begin over</span> <span class="num">0</span><span class="sym">&gt;</span> <span class="kwa">while</span>
	    <span class="kwa">over</span> line<span class="sym">-</span>len <span class="kwa">min</span> <span class="num">0</span> <span class="sym">?</span><span class="kwa">DO</span>
		next<span class="sym">-</span><span class="kwa">char emit</span><span class="sym">,</span>  <span class="kwa">LOOP  cr</span><span class="sym">,</span>
	    <span class="kwa">swap</span> line<span class="sym">-</span>len <span class="sym">-</span> <span class="kwa">swap</span>
  <span class="kwa">repeat drop</span> flush<span class="sym">, ;</span>

<span class="sym">:</span> sel<span class="sym">-</span>random <span class="com">( probs -- probs c )</span>
  <span class="num">1</span>e gen<span class="sym">-</span>random s<span class="str">&quot; acgtBDHKMNRSVWY&quot;</span> <span class="kwa">drop over</span>
  <span class="kwa">begin dup</span> f<span class="sym">&#64;</span> fover f<span class="sym">&lt;</span> <span class="kwa">while</span> float<span class="sym">+</span> <span class="kwa">swap char</span><span class="sym">+</span> <span class="kwa">swap repeat</span>
  fdrop <span class="kwa">drop c</span><span class="sym">&#64; ;</span>

<span class="sym">:</span> fasta<span class="sym">-</span>random <span class="com">( n which -- )</span>
    <span class="kwa">begin over</span> <span class="num">0</span><span class="sym">&gt;</span> <span class="kwa">while</span>
	    <span class="kwa">over</span> line<span class="sym">-</span>len <span class="kwa">min</span> <span class="num">0</span> <span class="sym">?</span><span class="kwa">DO</span>
		sel<span class="sym">-</span>random <span class="kwa">emit</span><span class="sym">,</span>  <span class="kwa">LOOP  cr</span><span class="sym">,</span>
	    <span class="kwa">swap</span> line<span class="sym">-</span>len <span class="sym">-</span> <span class="kwa">swap</span>
  <span class="kwa">repeat drop</span> flush<span class="sym">, ;</span>

<span class="sym">:</span> main
  <span class="sym">.</span><span class="str">&quot; &gt;ONE Homo sapiens alu&quot;</span> <span class="kwa">cr</span>
  NUM <span class="num">2</span><span class="sym">*</span> fasta<span class="sym">-</span><span class="kwa">repeat</span>
  <span class="sym">.</span><span class="str">&quot; &gt;TWO IUB ambiguity codes&quot;</span> <span class="kwa">cr</span>
  NUM <span class="num">3</span> <span class="sym">*</span> IUB fasta<span class="sym">-</span>random
  <span class="sym">.</span><span class="str">&quot; &gt;THREE Homo sapiens frequency&quot;</span> <span class="kwa">cr</span>
  NUM <span class="num">5</span> <span class="sym">*</span> HomoSap fasta<span class="sym">-</span>random <span class="sym">;</span>

main bye  <span class="slc">\ done!</span>


