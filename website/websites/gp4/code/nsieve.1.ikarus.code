<span class="hl slc">;; The Computer Language Benchmarks Game</span>
<span class="hl slc">;; http://shootout.alioth.debian.org/</span>

<span class="hl slc">;; Derived by Michael D. Adams from the MzScheme varient</span>

<span class="hl sym">(</span>import <span class="hl sym">(</span>rnrs<span class="hl sym">))</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>nsieve m<span class="hl sym">)</span>
  <span class="hl sym">(</span>let <span class="hl sym">((</span>a <span class="hl sym">(</span>make-bytevector m <span class="hl num">1</span><span class="hl sym">)))</span>
    <span class="hl sym">(</span>let loop <span class="hl sym">((</span>i <span class="hl num">2</span><span class="hl sym">) (</span>n <span class="hl num">0</span><span class="hl sym">))</span>
      <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(&lt;</span> i m<span class="hl sym">)</span>
          <span class="hl sym">(</span>begin
            <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwa">eq</span>? <span class="hl num">1</span> <span class="hl sym">(</span>bytevector-u8-ref a i<span class="hl sym">))</span>
                <span class="hl sym">(</span>begin
                  <span class="hl sym">(</span>let clear <span class="hl sym">((</span>j <span class="hl sym">(+</span> i i<span class="hl sym">)))</span>
                    <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(&lt;</span> j m<span class="hl sym">)</span>
                        <span class="hl sym">(</span>begin
                          <span class="hl sym">(</span>bytevector-u8-<span class="hl kwa">set</span><span class="hl sym">!</span> a j <span class="hl num">0</span><span class="hl sym">)</span>
                          <span class="hl sym">(</span>clear <span class="hl sym">(+</span> j i<span class="hl sym">)))))</span>
                  <span class="hl sym">(</span>loop <span class="hl sym">(+</span> <span class="hl num">1</span> i<span class="hl sym">) (+</span> <span class="hl num">1</span> n<span class="hl sym">)))</span>
                <span class="hl sym">(</span>loop <span class="hl sym">(+</span> <span class="hl num">1</span> i<span class="hl sym">)</span> n<span class="hl sym">)))</span>
          n<span class="hl sym">))))</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>string-pad str len<span class="hl sym">)</span>
  <span class="hl sym">(</span>string-<span class="hl kwa">append</span> <span class="hl sym">(</span>make-string <span class="hl sym">(</span>- len <span class="hl sym">(</span>string-<span class="hl kwa">length</span> str<span class="hl sym">))</span> #\space<span class="hl sym">)</span> str<span class="hl sym">))</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>test n<span class="hl sym">)</span>
  <span class="hl sym">(</span>let<span class="hl sym">* ((</span>m <span class="hl sym">(* (</span><span class="hl kwa">expt</span> <span class="hl num">2</span> n<span class="hl sym">)</span> <span class="hl num">10000</span><span class="hl sym">))</span>
         <span class="hl sym">(</span>count <span class="hl sym">(</span>nsieve m<span class="hl sym">)))</span>
    <span class="hl sym">(</span>display <span class="hl str">&quot;Primes up to &quot;</span><span class="hl sym">) (</span>display <span class="hl sym">(</span>string-pad <span class="hl sym">(</span>number-<span class="hl sym">&gt;</span>string m<span class="hl sym">)</span> <span class="hl num">8</span><span class="hl sym">))</span>
    <span class="hl sym">(</span>display <span class="hl str">&quot; &quot;</span><span class="hl sym">) (</span>display <span class="hl sym">(</span>string-pad <span class="hl sym">(</span>number-<span class="hl sym">&gt;</span>string count<span class="hl sym">)</span> <span class="hl num">8</span><span class="hl sym">))</span>
    <span class="hl sym">(</span>newline<span class="hl sym">)))</span>

<span class="hl sym">(</span>define <span class="hl sym">(</span>main args<span class="hl sym">)</span>
  <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(&lt; (</span><span class="hl kwa">length</span> args<span class="hl sym">)</span> <span class="hl num">2</span><span class="hl sym">)</span>
      <span class="hl sym">(</span>begin
        <span class="hl sym">(</span>display <span class="hl str">&quot;An argument is required&quot;</span><span class="hl sym">) (</span>newline<span class="hl sym">)</span> <span class="hl num">2</span><span class="hl sym">)</span>
      <span class="hl sym">(</span>let <span class="hl sym">((</span>n <span class="hl sym">(</span>string-<span class="hl sym">&gt;</span>number <span class="hl sym">(</span><span class="hl kwa">cadr</span> args<span class="hl sym">))))</span>
        <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwa">not</span> n<span class="hl sym">)</span>
            <span class="hl sym">(</span>begin
              <span class="hl sym">(</span>display <span class="hl str">&quot;An integer is required&quot;</span><span class="hl sym">) (</span>newline<span class="hl sym">)</span> <span class="hl num">2</span><span class="hl sym">)</span>
            <span class="hl sym">(</span>begin
              <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(&gt;=</span> n <span class="hl num">0</span><span class="hl sym">) (</span>test n<span class="hl sym">))</span>
              <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(&gt;=</span> n <span class="hl num">1</span><span class="hl sym">) (</span>test <span class="hl sym">(</span>- n <span class="hl num">1</span><span class="hl sym">)))</span>
              <span class="hl sym">(</span><span class="hl kwa">if</span> <span class="hl sym">(&gt;=</span> n <span class="hl num">2</span><span class="hl sym">) (</span>test <span class="hl sym">(</span>- n <span class="hl num">2</span><span class="hl sym">)))</span>
              <span class="hl num">0</span><span class="hl sym">)))))</span>

<span class="hl sym">(</span>main <span class="hl sym">(</span><span class="hl kwa">command</span>-<span class="hl kwa">line</span><span class="hl sym">))</span>
