<span class="slc">%%% -*- mode: erlang -*-
</span><span class="slc">%%% $Id: sumcol-erlang.code,v 1.3 2005-10-30 04:35:11 igouy-guest Exp $
</span><span class="slc">%%% http://shootout.alioth.debian.org/
</span><span class="slc">%%%
</span><span class="slc">%%% Contributed by Bengt Kleberg (Erlang Guru!)
</span>
<span class="sym">-</span>module<span class="sym">(</span>sumcol<span class="sym">)</span>.
<span class="sym">-</span>export<span class="sym">([</span>main<span class="sym">/</span><span class="num">1</span><span class="sym">])</span>.

<span class="slc">%% get the program argument, which is how many test iterations to run
</span><span class="slc">%% for this test, we ignore this parameter
</span>main<span class="sym">(</span>_Args<span class="sym">) -&gt;
</span>    Sum <span class="sym">=</span> sumcol<span class="sym">(</span> io<span class="sym">:</span>fread<span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~d&quot;</span><span class="sym">),</span> <span class="num">0</span><span class="sym">),
</span>    io<span class="sym">:</span>format<span class="sym">(</span> <span class="str">&quot;~w~n&quot;</span><span class="sym">, [</span>Sum<span class="sym">] ),
</span>    <span class="kwb">halt</span><span class="sym">()</span>.

sumcol<span class="sym">(</span>eof<span class="sym">,</span> Sum<span class="sym">) -&gt;</span>    Sum<span class="sym">;
</span>sumcol<span class="sym">({</span>ok<span class="sym">, [</span>Integer<span class="sym">]},</span> Sum<span class="sym">) -&gt;
</span>    sumcol<span class="sym">(</span> io<span class="sym">:</span>fread<span class="sym">(</span><span class="str">''</span><span class="sym">,</span> <span class="str">&quot;~d&quot;</span><span class="sym">),</span> Sum <span class="sym">+</span> Integer<span class="sym">)</span>.

