<span class="slc">// -*- mode: c++ -*-</span>
<span class="slc">// $Id: ackermann-gpp.code,v 1.19 2005-11-15 19:55:37 igouy-guest Exp $</span>
<span class="slc">// http://www.bagley.org/~doug/shootout/</span>

<span class="dir">#include &lt;iostream&gt;</span>
<span class="dir">#include &lt;stdlib.h&gt;</span>

<span class="kwa">using namespace</span> std<span class="sym">;</span>

<span class="kwb">int</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="kwb">int</span> M<span class="sym">,</span> <span class="kwb">int</span> N<span class="sym">) {</span> <span class="kwa">return</span><span class="sym">(</span>M ? <span class="sym">(</span><span class="kwd">Ack</span><span class="sym">(</span>M<span class="sym">-</span><span class="num">1</span><span class="sym">,</span>N ? <span class="kwd">Ack</span><span class="sym">(</span>M<span class="sym">,(</span>N<span class="sym">-</span><span class="num">1</span><span class="sym">)) :</span> <span class="num">1</span><span class="sym">)) :</span> N<span class="sym">+</span><span class="num">1</span><span class="sym">); }</span>

<span class="kwb">int</span> <span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span> argc<span class="sym">,</span> <span class="kwb">char</span> <span class="sym">*</span>argv<span class="sym">[]) {</span>
    <span class="kwb">int</span> n <span class="sym">= ((</span>argc <span class="sym">==</span> <span class="num">2</span><span class="sym">)</span> ? <span class="kwd">atoi</span><span class="sym">(</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]) :</span> <span class="num">1</span><span class="sym">);</span>

    cout <span class="sym">&lt;&lt;</span> <span class="str">&quot;Ack(3,&quot;</span> <span class="sym">&lt;&lt;</span> n <span class="sym">&lt;&lt;</span> <span class="str">&quot;): &quot;</span> <span class="sym">&lt;&lt;</span> <span class="kwd">Ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">) &lt;&lt;</span> endl<span class="sym">;</span>
    <span class="kwa">return</span><span class="sym">(</span><span class="num">0</span><span class="sym">);</span>
<span class="sym">}</span>
