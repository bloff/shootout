<span class="slc">;; -*- mode: lisp -*-</span>
<span class="slc">;;; $Id: random-cmucl.code,v 1.6 2005-11-01 00:30:36 igouy-guest Exp $</span>
<span class="slc">;;; http://shootout.alioth.debian.org/</span>
<span class="slc">;;; Chih-Chung Chang contributed better declarations to improve performance</span>
<span class="slc">;;; Multi-lisp modifications by Brent Fulgham</span>
<span class="slc">;;; Modified by Juho Snellman 2005-10-26</span>
<span class="slc">;;;   * Reformatted for style.</span>
<span class="slc">;;;   * (THE FIXNUM ...) is undefined behaviour when ... isn't a fixnum,</span>
<span class="slc">;;;     which was causing a failure on SBCL. Recoded using the SBCL / CMUCL</span>
<span class="slc">;;;     modular arithmetic facility instead. (As a bonus it's also faster).</span>

<span class="sym">(</span>defconstant im <span class="num">139968</span><span class="sym">)</span>
<span class="sym">(</span>defconstant ia <span class="num">3877</span><span class="sym">)</span>
<span class="sym">(</span>defconstant ic <span class="num">29573</span><span class="sym">)</span>

<span class="sym">(</span>defvar the<span class="sym">-</span><span class="kwa">last</span> <span class="num">42</span><span class="sym">)</span>

<span class="sym">(</span>declaim <span class="sym">(</span>inline gen<span class="sym">-</span>random<span class="sym">))</span>
<span class="sym">(</span><span class="kwa">defun</span> gen<span class="sym">-</span>random <span class="sym">(</span><span class="kwa">max</span><span class="sym">)</span>
  <span class="sym">(</span>declare <span class="sym">(</span><span class="kwa">type</span> <span class="sym">(</span>unsigned<span class="sym">-</span>byte <span class="num">32</span><span class="sym">)</span> im ia ic the<span class="sym">-</span><span class="kwa">last</span><span class="sym">)</span>
           <span class="sym">(</span>double<span class="sym">-</span><span class="kwa">float max</span><span class="sym">))</span>
  <span class="sym">(</span>let <span class="sym">((</span><span class="kwa">last</span> <span class="sym">(</span>ldb <span class="sym">(</span>byte <span class="num">32 0</span><span class="sym">)</span>
                   <span class="sym">(</span>mod <span class="sym">(</span>ldb <span class="sym">(</span>byte <span class="num">32 0</span><span class="sym">) (+ (*</span> the<span class="sym">-</span><span class="kwa">last</span> ia<span class="sym">)</span> ic<span class="sym">))</span> im<span class="sym">))))</span>
    <span class="sym">(</span>setf the<span class="sym">-</span><span class="kwa">last last</span><span class="sym">)</span>
    <span class="sym">(/ (*</span> <span class="kwa">max last</span><span class="sym">)</span> im<span class="sym">)))</span>

<span class="sym">(</span><span class="kwa">defun</span> main <span class="sym">()</span>
  <span class="sym">(</span>let <span class="sym">((</span>n <span class="sym">(</span>parse<span class="sym">-</span>integer <span class="sym">(</span><span class="kwa">or</span> <span class="sym">(</span><span class="kwa">car</span> <span class="sym">(</span><span class="kwa">last</span> #<span class="sym">+</span>sbcl sb<span class="sym">-</span>ext<span class="sym">:*</span>posix<span class="sym">-</span>argv<span class="sym">*</span>
                                         #<span class="sym">+</span>cmu  extensions<span class="sym">:*</span><span class="kwa">command</span><span class="sym">-</span><span class="kwa">line</span><span class="sym">-</span>strings<span class="sym">*</span>
					 #<span class="sym">+</span>gcl  si<span class="sym">::*</span><span class="kwa">command</span><span class="sym">-</span>args<span class="sym">*))</span> <span class="str">&quot;1&quot;</span><span class="sym">))))</span>
    <span class="sym">(</span>loop for i fixnum from <span class="num">1</span> below n do
      <span class="sym">(</span>gen<span class="sym">-</span>random <span class="num">100.0</span>d0<span class="sym">))</span>
    <span class="sym">(</span>format t <span class="str">&quot;~,9F~%&quot;</span> <span class="sym">(</span>gen<span class="sym">-</span>random <span class="num">100.0</span>d0<span class="sym">))))</span>
