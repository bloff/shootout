<span class="slc">'The Computer Language Shootout</span>
<span class="slc">'http://shootout.alioth.debian.org/</span>
<span class="slc">'contributed by Antoni Gual</span>

option explicit
option <span class="kwa">byval</span>
option escape
#include <span class="str">&quot;crt.bi&quot;</span>
option nokeyword color

enum color
 blue
 red
 yellow
 green
 faded
<span class="kwa">end</span> enum

<span class="kwa">dim</span> shared nmeetings<span class="sym">,</span>report
<span class="kwa">dim</span> shared <span class="kwa">as</span> color color1
<span class="kwa">dim</span> shared cond1<span class="sym">,</span>cond12
<span class="kwa">dim</span> shared meeting
<span class="slc">'</span>
<span class="slc">'--------------------------------------------------------</span>
<span class="kwa">Function</span> complementaryColor <span class="sym">(</span>c1 <span class="kwa">as</span> color<span class="sym">,</span> c2 <span class="kwa">as</span> color<span class="sym">)</span> <span class="kwa">as</span> color
  <span class="kwa">if</span> <span class="sym">(</span>c2 <span class="sym">=</span> Faded<span class="sym">)</span> <span class="kwa">then</span> return Faded
  <span class="kwa">if</span> <span class="sym">(</span>c1 <span class="sym">=</span> c2<span class="sym">)</span> <span class="kwa">then</span> return c1
  <span class="kwa">select case</span> c1
    <span class="kwa">case</span> Blue<span class="sym">:</span>return iif <span class="sym">(</span>c2 <span class="sym">=</span> Red <span class="sym">,</span> Yellow <span class="sym">,</span> Red<span class="sym">)</span>
    <span class="kwa">case</span> Red<span class="sym">:</span>return iif <span class="sym">(</span>c2 <span class="sym">=</span> Blue <span class="sym">,</span> Yellow <span class="sym">,</span> Blue<span class="sym">)</span>
    <span class="kwa">case</span> Yellow<span class="sym">:</span>return iif<span class="sym">(</span>c2 <span class="sym">=</span> Blue<span class="sym">,</span> Red <span class="sym">,</span> Blue<span class="sym">)</span>
    <span class="kwa">case else</span><span class="sym">:</span>return c1
   <span class="kwa">end select</span>
<span class="kwa">end function</span>
<span class="slc">'</span>
<span class="slc">'---------------------------------------------------------</span>
<span class="kwa">sub</span> chameneos<span class="sym">(</span>index<span class="sym">)</span>
<span class="kwa">dim</span> count
<span class="kwa">dim as</span> color clr
clr<span class="sym">=</span>index
do
<span class="kwa">select case</span> meeting
 <span class="kwa">case</span> <span class="num">0</span>
  <span class="kwa">if</span> nmeetings<span class="sym">=</span><span class="num">0</span> <span class="kwa">then</span>
    clr<span class="sym">=</span>faded
    report<span class="sym">+=</span>count
    exit <span class="kwa">sub</span>
  <span class="kwa">else</span>
    meeting<span class="sym">=</span><span class="num">1</span>
    condwait cond1
    <span class="slc">'someone else is at the meeting point</span>
    clr<span class="sym">=</span>complementarycolor <span class="sym">(</span>clr<span class="sym">,</span>color1<span class="sym">)</span>
    nmeetings<span class="sym">-=</span><span class="num">1</span>
    count<span class="sym">+=</span><span class="num">1</span>
    color1<span class="sym">=</span><span class="num">0</span>
    meeting<span class="sym">=</span><span class="num">0</span>
    condbroadcast cond12
  <span class="kwa">end if</span>
<span class="kwa">case</span> <span class="num">1</span>
  meeting<span class="sym">=</span><span class="num">2</span>
  color1<span class="sym">=</span>clr
  count<span class="sym">+=</span><span class="num">1</span>
  condsignal cond1
<span class="kwa">case else</span>
  condwait cond12
<span class="kwa">end select</span>
loop
<span class="kwa">end sub</span>
<span class="slc">'</span>
<span class="slc">'-----------------------------------------------------------</span>
<span class="kwa">dim</span> i
nmeetings <span class="sym">=</span>valint<span class="sym">(</span>command<span class="sym">):</span><span class="kwa">if</span> nmeetings<span class="sym">=</span><span class="num">0</span> <span class="kwa">then</span> nmeetings<span class="sym">=</span><span class="num">100</span>

cond1<span class="sym">=</span>condcreate
cond12<span class="sym">=</span>condcreate

<span class="kwa">dim</span> thechameneos<span class="sym">(</span><span class="num">3</span><span class="sym">)</span>
<span class="kwa">for</span> i<span class="sym">=</span><span class="num">0</span> <span class="kwa">to</span> <span class="num">3</span>
   thechameneos<span class="sym">(</span>i<span class="sym">)=</span>threadcreate<span class="sym">(</span>&#64;chameneos<span class="sym">,</span>i<span class="sym">)</span>
   <span class="kwa">if</span> thechameneos<span class="sym">(</span>i<span class="sym">)=</span><span class="num">0</span> <span class="kwa">then</span> print <span class="str">&quot;Error Crating thread &quot;</span><span class="sym">&amp;</span> i<span class="sym">:</span><span class="kwa">end</span>
<span class="kwa">next</span>

<span class="kwa">for</span> i<span class="sym">=</span><span class="num">0</span> <span class="kwa">to</span> <span class="num">3</span>
threadwait<span class="sym">(</span>thechameneos<span class="sym">(</span>i<span class="sym">))</span>
<span class="kwa">next</span>

printf <span class="sym">(</span><span class="str">&quot;%d\n&quot;</span><span class="sym">,</span>report<span class="sym">)</span>
conddestroy <span class="sym">(</span>cond1<span class="sym">)</span>
conddestroy<span class="sym">(</span>cond12<span class="sym">)</span>
