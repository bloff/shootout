<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com"></span>
<span class="com">   contributed by Isaac Gouy</span>
<span class="com">*/</span>

<span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){</span>
   <span class="kwa">let</span> n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
   println<span class="sym">(</span> Tak<span class="sym">(</span>n<span class="sym">*</span><span class="num">3.0</span>f<span class="sym">,</span> n<span class="sym">*</span><span class="num">2.0</span>f<span class="sym">,</span> n<span class="sym">*</span><span class="num">1.0</span>f<span class="sym">) );</span>
<span class="sym">}</span>


<span class="kwb">float</span> Tak <span class="sym">(</span><span class="kwb">float</span> x<span class="sym">,</span> <span class="kwb">float</span> y<span class="sym">,</span> <span class="kwb">float</span> z<span class="sym">) {</span>
    <span class="kwa">if</span> <span class="sym">(</span>y <span class="sym">&gt;=</span> x<span class="sym">)</span> <span class="kwa">return</span> z<span class="sym">;</span>
    <span class="kwa">else return</span> Tak<span class="sym">(</span>Tak<span class="sym">(</span>x<span class="sym">-</span><span class="num">1.0</span>f<span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">),</span> Tak<span class="sym">(</span>y<span class="sym">-</span><span class="num">1.0</span>f<span class="sym">,</span>z<span class="sym">,</span>x<span class="sym">),</span> Tak<span class="sym">(</span>z<span class="sym">-</span><span class="num">1.0</span>f<span class="sym">,</span>x<span class="sym">,</span>y<span class="sym">));</span>
<span class="sym">}</span>
