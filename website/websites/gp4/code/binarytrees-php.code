<span class="hl sym">&lt;</span>? <span class="hl com">/* The Great Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Isaac Gouy (PHP novice)</span>
<span class="hl com"></span>
<span class="hl com">   php -q binarytrees.php 12</span>
<span class="hl com">*/</span>


<span class="hl kwa">function</span> newTreeNode<span class="hl sym">(&amp;</span><span class="hl kwb">$left</span><span class="hl sym">, &amp;</span><span class="hl kwb">$right</span><span class="hl sym">,</span> <span class="hl kwb">$item</span><span class="hl sym">){</span>
   <span class="hl kwa">return array</span><span class="hl sym">(</span><span class="hl kwb">$left</span><span class="hl sym">,</span><span class="hl kwb">$right</span><span class="hl sym">,</span><span class="hl kwb">$item</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> itemCheck<span class="hl sym">(&amp;</span><span class="hl kwb">$treeNode</span><span class="hl sym">){</span>
   <span class="hl kwa">if</span> <span class="hl sym">(!</span>isset<span class="hl sym">(</span><span class="hl kwb">$treeNode</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">])){</span> <span class="hl kwa">return</span> <span class="hl kwb">$treeNode</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">]; }</span>
   <span class="hl kwa">else</span> <span class="hl sym">{</span><span class="hl kwa">return</span>
      <span class="hl kwb">$treeNode</span><span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">] +</span>
         itemCheck<span class="hl sym">(</span><span class="hl kwb">$treeNode</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]) -</span> itemCheck<span class="hl sym">(</span><span class="hl kwb">$treeNode</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]);</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">function</span> bottomUpTree<span class="hl sym">(</span><span class="hl kwb">$item</span><span class="hl sym">,</span><span class="hl kwb">$depth</span><span class="hl sym">){</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$depth</span><span class="hl sym">&gt;</span><span class="hl num">0</span><span class="hl sym">){</span>
      <span class="hl kwb">$left</span> <span class="hl sym">=</span> bottomUpTree<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span><span class="hl kwb">$item</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl kwb">$depth</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span>
      <span class="hl kwb">$right</span> <span class="hl sym">=</span> bottomUpTree<span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span><span class="hl kwb">$item</span><span class="hl sym">,</span><span class="hl kwb">$depth</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span>
      <span class="hl kwa">return</span> newTreeNode<span class="hl sym">(</span><span class="hl kwb">$left</span><span class="hl sym">,</span><span class="hl kwb">$right</span><span class="hl sym">,</span><span class="hl kwb">$item</span><span class="hl sym">);</span>
      <span class="hl sym">}</span>
   <span class="hl kwa">else</span> <span class="hl sym">{</span>
      <span class="hl kwb">$treeNode</span> <span class="hl sym">=</span> NULL<span class="hl sym">;</span>
      <span class="hl kwa">return</span> newTreeNode<span class="hl sym">(</span><span class="hl kwb">$treeNode</span><span class="hl sym">,</span> <span class="hl kwb">$treeNode</span><span class="hl sym">,</span> <span class="hl kwb">$item</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>


<span class="hl kwb">$minDepth</span> <span class="hl sym">=</span> <span class="hl num">4</span><span class="hl sym">;</span>

<span class="hl kwb">$n</span> <span class="hl sym">= (</span><span class="hl kwb">$argc</span> <span class="hl sym">==</span> <span class="hl num">2</span><span class="hl sym">)</span> ? <span class="hl kwb">$argv</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] :</span> <span class="hl num">1</span><span class="hl sym">;</span>
<span class="hl kwb">$maxDepth</span> <span class="hl sym">=</span> <span class="hl kwa">max</span><span class="hl sym">(</span><span class="hl kwb">$minDepth</span> <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">);</span>
<span class="hl kwb">$stretchDepth</span> <span class="hl sym">=</span> <span class="hl kwb">$maxDepth</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>

<span class="hl kwb">$stretchTree</span> <span class="hl sym">=</span> bottomUpTree<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl kwb">$stretchDepth</span><span class="hl sym">);</span>
<span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;stretch tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
   <span class="hl kwb">$stretchDepth</span><span class="hl sym">,</span> itemCheck<span class="hl sym">(</span><span class="hl kwb">$stretchTree</span><span class="hl sym">));</span>
<span class="hl kwa">unset</span><span class="hl sym">(</span><span class="hl kwb">$stretchTree</span><span class="hl sym">);</span>

<span class="hl kwb">$longLivedTree</span> <span class="hl sym">=</span> bottomUpTree<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl kwb">$maxDepth</span><span class="hl sym">);</span>

<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">$depth</span><span class="hl sym">=</span><span class="hl kwb">$minDepth</span><span class="hl sym">;</span> <span class="hl kwb">$depth</span><span class="hl sym">&lt;=</span><span class="hl kwb">$maxDepth</span><span class="hl sym">;</span> <span class="hl kwb">$depth</span><span class="hl sym">+=</span><span class="hl num">2</span><span class="hl sym">){</span>
   <span class="hl kwb">$iterations</span> <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">&lt;&lt; (</span><span class="hl kwb">$maxDepth</span> <span class="hl sym">-</span> <span class="hl kwb">$depth</span> <span class="hl sym">+</span> <span class="hl kwb">$minDepth</span><span class="hl sym">);</span>

   <span class="hl kwb">$check</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">$i</span><span class="hl sym">=</span><span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwb">$i</span><span class="hl sym">&lt;=</span><span class="hl kwb">$iterations</span><span class="hl sym">;</span> <span class="hl kwb">$i</span><span class="hl sym">++){</span>
      <span class="hl kwb">$t</span> <span class="hl sym">=</span> bottomUpTree<span class="hl sym">(</span><span class="hl kwb">$i</span><span class="hl sym">,</span><span class="hl kwb">$depth</span><span class="hl sym">);</span>
      <span class="hl kwb">$check</span> <span class="hl sym">+=</span> itemCheck<span class="hl sym">(</span><span class="hl kwb">$t</span><span class="hl sym">);</span>
      <span class="hl kwb">$t</span> <span class="hl sym">=</span> NULL<span class="hl sym">;</span>

      <span class="hl kwb">$t</span> <span class="hl sym">=</span> bottomUpTree<span class="hl sym">(-</span><span class="hl kwb">$i</span><span class="hl sym">,</span><span class="hl kwb">$depth</span><span class="hl sym">);</span>
      <span class="hl kwb">$check</span> <span class="hl sym">+=</span> itemCheck<span class="hl sym">(</span><span class="hl kwb">$t</span><span class="hl sym">);</span>
      <span class="hl kwb">$t</span> <span class="hl sym">=</span> NULL<span class="hl sym">;</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\t</span> <span class="hl str">trees of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
      <span class="hl num">2</span><span class="hl sym">*</span><span class="hl kwb">$iterations</span><span class="hl sym">,</span> <span class="hl kwb">$depth</span><span class="hl sym">,</span> <span class="hl kwb">$check</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;long lived tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check: %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
   <span class="hl kwb">$maxDepth</span><span class="hl sym">,</span> itemCheck<span class="hl sym">(</span><span class="hl kwb">$longLivedTree</span><span class="hl sym">));</span>

?<span class="hl sym">&gt;</span>
