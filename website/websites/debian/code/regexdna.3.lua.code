<span class="slc">-- The Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- contributed by Mike Pall</span>

<span class="kwa">local</span> gfind<span class="sym">,</span> <span class="kwb">gsub</span><span class="sym">,</span> <span class="kwb">write</span> <span class="sym">=</span> <span class="kwb">string</span><span class="sym">.</span>gfind<span class="sym">,</span> <span class="kwb">string</span><span class="sym">.</span><span class="kwb">gsub</span><span class="sym">,</span> io<span class="sym">.</span><span class="kwb">write</span>

<span class="kwa">local</span> seq <span class="sym">=</span> io<span class="sym">.</span><span class="kwb">read</span><span class="sym">(</span><span class="str">&quot;*a&quot;</span><span class="sym">)</span>
<span class="kwa">local</span> ilen <span class="sym">=</span> <span class="slc">#seq</span>

seq <span class="sym">=</span> <span class="kwb">gsub</span><span class="sym">(</span>seq<span class="sym">,</span> <span class="str">&quot;&gt;.-</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="str">&quot;&quot;</span><span class="sym">)</span>
seq <span class="sym">=</span> <span class="kwb">gsub</span><span class="sym">(</span>seq<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="str">&quot;&quot;</span><span class="sym">)</span>
<span class="kwa">local</span> clen <span class="sym">=</span> <span class="slc">#seq</span>

<span class="kwa">local</span> variants <span class="sym">= {</span>
  <span class="str">&quot;agggtaaa&quot;</span><span class="sym">,</span> <span class="str">&quot;tttaccct&quot;</span><span class="sym">,</span>
  <span class="str">&quot;[cgt]gggtaaa&quot;</span><span class="sym">,</span> <span class="str">&quot;tttaccc[acg]&quot;</span><span class="sym">,</span>
  <span class="str">&quot;a[act]ggtaaa&quot;</span><span class="sym">,</span> <span class="str">&quot;tttacc[agt]t&quot;</span><span class="sym">,</span>
  <span class="str">&quot;ag[act]gtaaa&quot;</span><span class="sym">,</span> <span class="str">&quot;tttac[agt]ct&quot;</span><span class="sym">,</span>
  <span class="str">&quot;agg[act]taaa&quot;</span><span class="sym">,</span> <span class="str">&quot;ttta[agt]cct&quot;</span><span class="sym">,</span>
  <span class="str">&quot;aggg[acg]aaa&quot;</span><span class="sym">,</span> <span class="str">&quot;ttt[cgt]ccct&quot;</span><span class="sym">,</span>
  <span class="str">&quot;agggt[cgt]aa&quot;</span><span class="sym">,</span> <span class="str">&quot;tt[acg]accct&quot;</span><span class="sym">,</span>
  <span class="str">&quot;agggta[cgt]a&quot;</span><span class="sym">,</span> <span class="str">&quot;t[acg]taccct&quot;</span><span class="sym">,</span>
  <span class="str">&quot;agggtaa[cgt]&quot;</span><span class="sym">,</span> <span class="str">&quot;[acg]ttaccct&quot;</span><span class="sym">,</span>
<span class="sym">}</span>
<span class="kwa">local</span> count<span class="sym">,</span> prev <span class="sym">=</span> <span class="num">0</span>
<span class="kwa">for</span> i<span class="sym">,</span>pattern <span class="kwa">in</span> <span class="kwd">ipairs</span><span class="sym">(</span>variants<span class="sym">)</span> <span class="kwa">do</span>
  <span class="kwa">for</span> _ <span class="kwa">in</span> <span class="kwd">gfind</span><span class="sym">(</span>seq<span class="sym">,</span> pattern<span class="sym">)</span> <span class="kwa">do</span> count <span class="sym">=</span> count <span class="sym">+</span> <span class="num">1</span> <span class="kwa">end</span>
  <span class="kwa">if</span> prev <span class="kwa">then</span>
    <span class="kwb">write</span><span class="sym">(</span>prev<span class="sym">,</span> <span class="str">&quot;|&quot;</span><span class="sym">,</span> pattern<span class="sym">,</span> <span class="str">&quot; &quot;</span><span class="sym">,</span> count<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">)</span>
    count <span class="sym">=</span> <span class="num">0</span>
    prev <span class="sym">=</span> <span class="kwa">nil</span>
  <span class="kwa">else</span>
    prev <span class="sym">=</span> pattern
  <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">local</span> subst <span class="sym">= {</span>
  B <span class="sym">=</span> <span class="str">&quot;(c|g|t)&quot;</span><span class="sym">,</span> D <span class="sym">=</span> <span class="str">&quot;(a|g|t)&quot;</span><span class="sym">,</span>   H <span class="sym">=</span> <span class="str">&quot;(a|c|t)&quot;</span><span class="sym">,</span> K <span class="sym">=</span> <span class="str">&quot;(g|t)&quot;</span><span class="sym">,</span>
  M <span class="sym">=</span> <span class="str">&quot;(a|c)&quot;</span><span class="sym">,</span>   N <span class="sym">=</span> <span class="str">&quot;(a|c|g|t)&quot;</span><span class="sym">,</span> R <span class="sym">=</span> <span class="str">&quot;(a|g)&quot;</span><span class="sym">,</span>   S <span class="sym">=</span> <span class="str">&quot;(c|g)&quot;</span><span class="sym">,</span>
  V <span class="sym">=</span> <span class="str">&quot;(a|c|g)&quot;</span><span class="sym">,</span> W <span class="sym">=</span> <span class="str">&quot;(a|t)&quot;</span><span class="sym">,</span>     Y <span class="sym">=</span> <span class="str">&quot;(c|t)&quot;</span><span class="sym">,</span>
<span class="sym">}</span>
<span class="slc">-- Dumbing down forced by &quot;the rules&quot;:</span>
<span class="kwa">for</span> k<span class="sym">,</span>v <span class="kwa">in</span> <span class="kwd">pairs</span><span class="sym">(</span>subst<span class="sym">)</span> <span class="kwa">do</span> seq <span class="sym">=</span> <span class="kwb">gsub</span><span class="sym">(</span>seq<span class="sym">,</span> k<span class="sym">,</span> v<span class="sym">)</span> <span class="kwa">end</span>
<span class="slc">-- Otherwise you're better off with: seq = gsub(seq, &quot;[BDHKMNRSVWY]&quot;, subst)</span>

<span class="kwb">write</span><span class="sym">(</span><span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> ilen<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> clen<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="slc">#seq, &quot;\n&quot;)</span>
