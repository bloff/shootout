<span class="com">/* The Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy */</span>

<span class="kwa">import</span> Include<span class="sym">;</span>

<span class="kwb">void</span> main<span class="sym">(</span><span class="kwc">String</span><span class="sym">[]</span> args<span class="sym">){</span>
   var n <span class="sym">=</span> <span class="kwc">Integer</span><span class="sym">.</span>parseInt<span class="sym">(</span>args<span class="sym">[</span><span class="num">0</span><span class="sym">]);</span>
   <span class="kwa">let</span> JovianSystem <span class="sym">=</span> <span class="kwa">new</span> NBodySystem<span class="sym">();</span>

   println<span class="sym">(</span> JovianSystem<span class="sym">.</span>energy<span class="sym">.</span>toStringWith<span class="sym">(</span><span class="num">9</span><span class="sym">) );</span>
   <span class="kwa">while</span> <span class="sym">(</span>n<span class="sym">-- &gt;</span> <span class="num">0</span><span class="sym">)</span> JovianSystem<span class="sym">.</span>advance<span class="sym">(</span><span class="num">0.01</span><span class="sym">);</span>
   println<span class="sym">(</span> JovianSystem<span class="sym">.</span>energy<span class="sym">.</span>toStringWith<span class="sym">(</span><span class="num">9</span><span class="sym">) );</span>
<span class="sym">}</span>


<span class="kwa">class</span> NBodySystem <span class="sym">{</span>
   Body<span class="sym">[]</span> bodies <span class="sym">= [</span> Sun<span class="sym">(),</span> Jupiter<span class="sym">(),</span> Saturn<span class="sym">(),</span> Uranus<span class="sym">(),</span> Neptune<span class="sym">() ];</span>

<span class="sym">{</span>
   var px <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span> var py <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span> var pz <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
   <span class="kwa">for</span> <span class="sym">(</span>body <span class="sym">:</span> bodies<span class="sym">) {</span>
      px <span class="sym">+=</span> body<span class="sym">.</span>vx <span class="sym">*</span> body<span class="sym">.</span>mass<span class="sym">;</span>
      py <span class="sym">+=</span> body<span class="sym">.</span>vy <span class="sym">*</span> body<span class="sym">.</span>mass<span class="sym">;</span>
      pz <span class="sym">+=</span> body<span class="sym">.</span>vz <span class="sym">*</span> body<span class="sym">.</span>mass<span class="sym">;</span>
   <span class="sym">}</span>
   bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span>offsetMomentum<span class="sym">(</span>px<span class="sym">,</span>py<span class="sym">,</span>pz<span class="sym">);</span>
<span class="sym">}</span>

   <span class="kwb">void</span> advance<span class="sym">(</span><span class="kwb">double</span> dt<span class="sym">){</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> bodies<span class="sym">.</span>length<span class="sym">; ++</span>i<span class="sym">) {</span>
         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> bodies<span class="sym">.</span>length<span class="sym">; ++</span>j<span class="sym">) {</span>
            var dx <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>x <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>x<span class="sym">;</span>
            var dy <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>y <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>y<span class="sym">;</span>
            var dz <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>z <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>z<span class="sym">;</span>

            var distance <span class="sym">=</span> <span class="kwc">Math</span><span class="sym">.</span>sqrt<span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);</span>
            var mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">);</span>

            bodies<span class="sym">[</span>i<span class="sym">].</span>vx <span class="sym">-=</span> dx <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
            bodies<span class="sym">[</span>i<span class="sym">].</span>vy <span class="sym">-=</span> dy <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
            bodies<span class="sym">[</span>i<span class="sym">].</span>vz <span class="sym">-=</span> dz <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;</span>

            bodies<span class="sym">[</span>j<span class="sym">].</span>vx <span class="sym">+=</span> dx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
            bodies<span class="sym">[</span>j<span class="sym">].</span>vy <span class="sym">+=</span> dy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
            bodies<span class="sym">[</span>j<span class="sym">].</span>vz <span class="sym">+=</span> dz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
         <span class="sym">}</span>
      <span class="sym">}</span>

      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> bodies<span class="sym">.</span>length<span class="sym">; ++</span>i<span class="sym">) {</span>
         bodies<span class="sym">[</span>i<span class="sym">].</span>x <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx<span class="sym">;</span>
         bodies<span class="sym">[</span>i<span class="sym">].</span>y <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy<span class="sym">;</span>
         bodies<span class="sym">[</span>i<span class="sym">].</span>z <span class="sym">+=</span> dt <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vz<span class="sym">;</span>
      <span class="sym">}</span>
   <span class="sym">}</span>

   <span class="kwb">double</span> energy<span class="sym">(){</span>
      var e <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i <span class="sym">&lt;</span> bodies<span class="sym">.</span>length<span class="sym">; ++</span>i<span class="sym">) {</span>
         e <span class="sym">+=</span> <span class="num">0.5</span> <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span>
            <span class="sym">(</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vx
            <span class="sym">+</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vy
            <span class="sym">+</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vz <span class="sym">*</span> bodies<span class="sym">[</span>i<span class="sym">].</span>vz <span class="sym">);</span>

         <span class="kwa">for</span> <span class="sym">(</span><span class="kwb">int</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j <span class="sym">&lt;</span> bodies<span class="sym">.</span>length<span class="sym">; ++</span>j<span class="sym">) {</span>
            var dx <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>x <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>x<span class="sym">;</span>
            var dy <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>y <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>y<span class="sym">;</span>
            var dz <span class="sym">=</span> bodies<span class="sym">[</span>i<span class="sym">].</span>z <span class="sym">-</span> bodies<span class="sym">[</span>j<span class="sym">].</span>z<span class="sym">;</span>

            var distance <span class="sym">=</span> <span class="kwc">Math</span><span class="sym">.</span>sqrt<span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);</span>
            e <span class="sym">-= (</span>bodies<span class="sym">[</span>i<span class="sym">].</span>mass <span class="sym">*</span> bodies<span class="sym">[</span>j<span class="sym">].</span>mass<span class="sym">) /</span> distance<span class="sym">;</span>
         <span class="sym">}</span>
      <span class="sym">}</span>
      <span class="kwa">return</span> e<span class="sym">;</span>
  <span class="sym">}</span>
<span class="sym">}</span>


<span class="kwa">let</span> <span class="kwb">double</span> PI <span class="sym">=</span> <span class="num">3.141592653589793</span><span class="sym">;</span>
<span class="kwa">let</span> <span class="kwb">double</span> SOLAR_MASS <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> PI <span class="sym">*</span> PI<span class="sym">;</span>
<span class="kwa">let</span> <span class="kwb">double</span> DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span><span class="sym">;</span>

<span class="kwa">class</span> Body <span class="sym">{</span>
   <span class="kwb">double</span> x<span class="sym">;</span> <span class="kwb">double</span> y<span class="sym">;</span> <span class="kwb">double</span> z<span class="sym">;</span>
   <span class="kwb">double</span> vx<span class="sym">;</span> <span class="kwb">double</span> vy<span class="sym">;</span> <span class="kwb">double</span> vz<span class="sym">;</span>
   <span class="kwb">double</span> mass<span class="sym">;</span>

   Body offsetMomentum<span class="sym">(</span><span class="kwb">double</span> px<span class="sym">,</span> <span class="kwb">double</span> py<span class="sym">,</span> <span class="kwb">double</span> pz<span class="sym">){</span>
      vx <span class="sym">= -</span>px <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
      vy <span class="sym">= -</span>py <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
      vz <span class="sym">= -</span>pz <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
      <span class="kwa">return this</span><span class="sym">;</span>
   <span class="sym">}</span>
<span class="sym">}</span>

Body Jupiter<span class="sym">() =</span> <span class="kwa">new</span> Body <span class="sym">(</span>
   x<span class="sym">:</span> <span class="num">4.84143144246472090e+00</span><span class="sym">,</span>
   y<span class="sym">: -</span><span class="num">1.16032004402742839e+00</span><span class="sym">,</span>
   z<span class="sym">: -</span><span class="num">1.03622044471123109e-01</span><span class="sym">,</span>
   vx<span class="sym">:</span> <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vy<span class="sym">:</span> <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vz<span class="sym">: -</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   mass<span class="sym">:</span> <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">);</span>

Body Saturn<span class="sym">() =</span> <span class="kwa">new</span> Body <span class="sym">(</span>
   x<span class="sym">:</span> <span class="num">8.34336671824457987e+00</span><span class="sym">,</span>
   y<span class="sym">:</span> <span class="num">4.12479856412430479e+00</span><span class="sym">,</span>
   z<span class="sym">: -</span><span class="num">4.03523417114321381e-01</span><span class="sym">,</span>
   vx<span class="sym">: -</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vy<span class="sym">:</span> <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vz<span class="sym">:</span> <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   mass<span class="sym">:</span> <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">);</span>

Body Uranus<span class="sym">() =</span> <span class="kwa">new</span> Body <span class="sym">(</span>
   x<span class="sym">:</span> <span class="num">1.28943695621391310e+01</span><span class="sym">,</span>
   y<span class="sym">: -</span><span class="num">1.51111514016986312e+01</span><span class="sym">,</span>
   z<span class="sym">: -</span><span class="num">2.23307578892655734e-01</span><span class="sym">,</span>
   vx<span class="sym">:</span> <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vy<span class="sym">:</span> <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vz<span class="sym">: -</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   mass<span class="sym">:</span> <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">);</span>

Body Neptune<span class="sym">() =</span> <span class="kwa">new</span> Body <span class="sym">(</span>
   x<span class="sym">:</span> <span class="num">1.53796971148509165e+01</span><span class="sym">,</span>
   y<span class="sym">: -</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span>
   z<span class="sym">:</span> <span class="num">1.79258772950371181e-01</span><span class="sym">,</span>
   vx<span class="sym">:</span> <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vy<span class="sym">:</span> <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   vz<span class="sym">: -</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
   mass<span class="sym">:</span> <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> SOLAR_MASS
<span class="sym">);</span>

Body Sun<span class="sym">() =</span> <span class="kwa">new</span> Body <span class="sym">(</span>x<span class="sym">:</span><span class="num">0</span><span class="sym">,</span>y<span class="sym">:</span><span class="num">0</span><span class="sym">,</span>z<span class="sym">:</span><span class="num">0</span><span class="sym">,</span>vx<span class="sym">:</span><span class="num">0</span><span class="sym">,</span>vy<span class="sym">:</span><span class="num">0</span><span class="sym">,</span>vz<span class="sym">:</span><span class="num">0</span><span class="sym">,</span> mass<span class="sym">:</span> SOLAR_MASS<span class="sym">);</span>
