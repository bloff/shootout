<span class="com">/* The Great Computer Language Shootout</span>
<span class="com">   http://shootout.alioth.debian.org/</span>
<span class="com">   contributed by Isaac Gouy */</span>

<span class="kwa">var</span> <span class="kwc">PI</span> <span class="sym">=</span> <span class="num">3.141592653589793</span><span class="sym">;</span>
<span class="kwa">var</span> SOLAR_MASS <span class="sym">=</span> <span class="num">4</span> <span class="sym">*</span> <span class="kwc">PI</span> <span class="sym">*</span> <span class="kwc">PI</span><span class="sym">;</span>
<span class="kwa">var</span> DAYS_PER_YEAR <span class="sym">=</span> <span class="num">365.24</span><span class="sym">;</span>

<span class="kwa">function</span> <span class="kwd">Body</span><span class="sym">(</span>x<span class="sym">,</span>y<span class="sym">,</span>z<span class="sym">,</span>vx<span class="sym">,</span>vy<span class="sym">,</span>vz<span class="sym">,</span>mass<span class="sym">){</span>
   <span class="kwa">this</span><span class="sym">.</span>x <span class="sym">=</span> x<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>y <span class="sym">=</span> y<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>z <span class="sym">=</span> z<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>vx <span class="sym">=</span> vx<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>vy <span class="sym">=</span> vy<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>vz <span class="sym">=</span> vz<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>mass <span class="sym">=</span> mass<span class="sym">;</span>
<span class="sym">}</span>

Body<span class="sym">.</span><span class="kwa">prototype</span><span class="sym">.</span>offsetMomentum <span class="sym">=</span> <span class="kwa">function</span><span class="sym">(</span>px<span class="sym">,</span>py<span class="sym">,</span>pz<span class="sym">) {</span>
   <span class="kwa">this</span><span class="sym">.</span>vx <span class="sym">= -</span>px <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>vy <span class="sym">= -</span>py <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
   <span class="kwa">this</span><span class="sym">.</span>vz <span class="sym">= -</span>pz <span class="sym">/</span> SOLAR_MASS<span class="sym">;</span>
   <span class="kwa">return this</span><span class="sym">;</span>
<span class="sym">}</span>

<span class="kwa">function</span> <span class="kwd">Jupiter</span><span class="sym">(){</span>
   <span class="kwa">return new</span> <span class="kwd">Body</span><span class="sym">(</span>
      <span class="num">4.84143144246472090e+00</span><span class="sym">,</span>
      <span class="sym">-</span><span class="num">1.16032004402742839e+00</span><span class="sym">,</span>
      <span class="sym">-</span><span class="num">1.03622044471123109e-01</span><span class="sym">,</span>
      <span class="num">1.66007664274403694e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">7.69901118419740425e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="sym">-</span><span class="num">6.90460016972063023e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">9.54791938424326609e-04</span> <span class="sym">*</span> SOLAR_MASS
   <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">function</span> <span class="kwd">Saturn</span><span class="sym">(){</span>
   <span class="kwa">return new</span> <span class="kwd">Body</span><span class="sym">(</span>
      <span class="num">8.34336671824457987e+00</span><span class="sym">,</span>
      <span class="num">4.12479856412430479e+00</span><span class="sym">,</span>
      <span class="sym">-</span><span class="num">4.03523417114321381e-01</span><span class="sym">,</span>
      <span class="sym">-</span><span class="num">2.76742510726862411e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">4.99852801234917238e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">2.30417297573763929e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">2.85885980666130812e-04</span> <span class="sym">*</span> SOLAR_MASS
   <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">function</span> <span class="kwd">Uranus</span><span class="sym">(){</span>
   <span class="kwa">return new</span> <span class="kwd">Body</span><span class="sym">(</span>
      <span class="num">1.28943695621391310e+01</span><span class="sym">,</span>
      <span class="sym">-</span><span class="num">1.51111514016986312e+01</span><span class="sym">,</span>
      <span class="sym">-</span><span class="num">2.23307578892655734e-01</span><span class="sym">,</span>
      <span class="num">2.96460137564761618e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">2.37847173959480950e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="sym">-</span><span class="num">2.96589568540237556e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">4.36624404335156298e-05</span> <span class="sym">*</span> SOLAR_MASS
   <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">function</span> <span class="kwd">Neptune</span><span class="sym">(){</span>
   <span class="kwa">return new</span> <span class="kwd">Body</span><span class="sym">(</span>
      <span class="num">1.53796971148509165e+01</span><span class="sym">,</span>
      <span class="sym">-</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span>
      <span class="num">1.79258772950371181e-01</span><span class="sym">,</span>
      <span class="num">2.68067772490389322e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">1.62824170038242295e-03</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="sym">-</span><span class="num">9.51592254519715870e-05</span> <span class="sym">*</span> DAYS_PER_YEAR<span class="sym">,</span>
      <span class="num">5.15138902046611451e-05</span> <span class="sym">*</span> SOLAR_MASS
   <span class="sym">);</span>
<span class="sym">}</span>

<span class="kwa">function</span> <span class="kwd">Sun</span><span class="sym">(){</span>
   <span class="kwa">return new</span> <span class="kwd">Body</span><span class="sym">(</span><span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> SOLAR_MASS<span class="sym">);</span>
<span class="sym">}</span>


<span class="kwa">function</span> <span class="kwd">NBodySystem</span><span class="sym">(</span>bodies<span class="sym">){</span>
   <span class="kwa">this</span><span class="sym">.</span>bodies <span class="sym">=</span> bodies<span class="sym">;</span>
   <span class="kwa">var</span> px <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
   <span class="kwa">var</span> py <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
   <span class="kwa">var</span> pz <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
   <span class="kwa">var</span> size <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">.</span><span class="kwc">length</span><span class="sym">;</span>
   <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>size<span class="sym">;</span> i<span class="sym">++){</span>
      <span class="kwa">var</span> b <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">[</span>i<span class="sym">];</span>
      <span class="kwa">var</span> m <span class="sym">=</span> b<span class="sym">.</span>mass<span class="sym">;</span>
      px <span class="sym">+=</span> b<span class="sym">.</span>vx <span class="sym">*</span> m<span class="sym">;</span>
      py <span class="sym">+=</span> b<span class="sym">.</span>vy <span class="sym">*</span> m<span class="sym">;</span>
      pz <span class="sym">+=</span> b<span class="sym">.</span>vz <span class="sym">*</span> m<span class="sym">;</span>
   <span class="sym">}</span>
   <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">[</span><span class="num">0</span><span class="sym">].</span><span class="kwd">offsetMomentum</span><span class="sym">(</span>px<span class="sym">,</span>py<span class="sym">,</span>pz<span class="sym">);</span>
<span class="sym">}</span>

NBodySystem<span class="sym">.</span><span class="kwa">prototype</span><span class="sym">.</span>advance <span class="sym">=</span> <span class="kwa">function</span><span class="sym">(</span>dt<span class="sym">){</span>
   <span class="kwa">var</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">,</span> mag<span class="sym">;</span>
   <span class="kwa">var</span> size <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">.</span><span class="kwc">length</span><span class="sym">;</span>

   <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>size<span class="sym">;</span> i<span class="sym">++) {</span>
      <span class="kwa">var</span> bodyi <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">[</span>i<span class="sym">];</span>
      <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j<span class="sym">&lt;</span>size<span class="sym">;</span> j<span class="sym">++) {</span>
         <span class="kwa">var</span> bodyj <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">[</span>j<span class="sym">];</span>
         dx <span class="sym">=</span> bodyi<span class="sym">.</span>x <span class="sym">-</span> bodyj<span class="sym">.</span>x<span class="sym">;</span>
         dy <span class="sym">=</span> bodyi<span class="sym">.</span>y <span class="sym">-</span> bodyj<span class="sym">.</span>y<span class="sym">;</span>
         dz <span class="sym">=</span> bodyi<span class="sym">.</span>z <span class="sym">-</span> bodyj<span class="sym">.</span>z<span class="sym">;</span>

         distance <span class="sym">=</span> <span class="kwc">Math</span><span class="sym">.</span><span class="kwc">sqrt</span><span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);</span>
         mag <span class="sym">=</span> dt <span class="sym">/ (</span>distance <span class="sym">*</span> distance <span class="sym">*</span> distance<span class="sym">);</span>

         bodyi<span class="sym">.</span>vx <span class="sym">-=</span> dx <span class="sym">*</span> bodyj<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
         bodyi<span class="sym">.</span>vy <span class="sym">-=</span> dy <span class="sym">*</span> bodyj<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
         bodyi<span class="sym">.</span>vz <span class="sym">-=</span> dz <span class="sym">*</span> bodyj<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;</span>

         bodyj<span class="sym">.</span>vx <span class="sym">+=</span> dx <span class="sym">*</span> bodyi<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
         bodyj<span class="sym">.</span>vy <span class="sym">+=</span> dy <span class="sym">*</span> bodyi<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
         bodyj<span class="sym">.</span>vz <span class="sym">+=</span> dz <span class="sym">*</span> bodyi<span class="sym">.</span>mass <span class="sym">*</span> mag<span class="sym">;</span>
      <span class="sym">}</span>
   <span class="sym">}</span>

   <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>size<span class="sym">;</span> i<span class="sym">++) {</span>
      <span class="kwa">var</span> body <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">[</span>i<span class="sym">];</span>
      body<span class="sym">.</span>x <span class="sym">+=</span> dt <span class="sym">*</span> body<span class="sym">.</span>vx<span class="sym">;</span>
      body<span class="sym">.</span>y <span class="sym">+=</span> dt <span class="sym">*</span> body<span class="sym">.</span>vy<span class="sym">;</span>
      body<span class="sym">.</span>z <span class="sym">+=</span> dt <span class="sym">*</span> body<span class="sym">.</span>vz<span class="sym">;</span>
   <span class="sym">}</span>
<span class="sym">}</span>

NBodySystem<span class="sym">.</span><span class="kwa">prototype</span><span class="sym">.</span>energy <span class="sym">=</span> <span class="kwa">function</span><span class="sym">(){</span>
   <span class="kwa">var</span> dx<span class="sym">,</span> dy<span class="sym">,</span> dz<span class="sym">,</span> distance<span class="sym">;</span>
   <span class="kwa">var</span> e <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
   <span class="kwa">var</span> size <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">.</span><span class="kwc">length</span><span class="sym">;</span>

   <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>size<span class="sym">;</span> i<span class="sym">++) {</span>
      <span class="kwa">var</span> bodyi <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">[</span>i<span class="sym">];</span>

      e <span class="sym">+=</span> <span class="num">0.5</span> <span class="sym">*</span> bodyi<span class="sym">.</span>mass <span class="sym">*</span>
         <span class="sym">(</span> bodyi<span class="sym">.</span>vx <span class="sym">*</span> bodyi<span class="sym">.</span>vx
         <span class="sym">+</span> bodyi<span class="sym">.</span>vy <span class="sym">*</span> bodyi<span class="sym">.</span>vy
         <span class="sym">+</span> bodyi<span class="sym">.</span>vz <span class="sym">*</span> bodyi<span class="sym">.</span>vz <span class="sym">);</span>

      <span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> j<span class="sym">=</span>i<span class="sym">+</span><span class="num">1</span><span class="sym">;</span> j<span class="sym">&lt;</span>size<span class="sym">;</span> j<span class="sym">++) {</span>
         <span class="kwa">var</span> bodyj <span class="sym">=</span> <span class="kwa">this</span><span class="sym">.</span>bodies<span class="sym">[</span>j<span class="sym">];</span>
         dx <span class="sym">=</span> bodyi<span class="sym">.</span>x <span class="sym">-</span> bodyj<span class="sym">.</span>x<span class="sym">;</span>
         dy <span class="sym">=</span> bodyi<span class="sym">.</span>y <span class="sym">-</span> bodyj<span class="sym">.</span>y<span class="sym">;</span>
         dz <span class="sym">=</span> bodyi<span class="sym">.</span>z <span class="sym">-</span> bodyj<span class="sym">.</span>z<span class="sym">;</span>

         distance <span class="sym">=</span> <span class="kwc">Math</span><span class="sym">.</span><span class="kwc">sqrt</span><span class="sym">(</span>dx<span class="sym">*</span>dx <span class="sym">+</span> dy<span class="sym">*</span>dy <span class="sym">+</span> dz<span class="sym">*</span>dz<span class="sym">);</span>
         e <span class="sym">-= (</span>bodyi<span class="sym">.</span>mass <span class="sym">*</span> bodyj<span class="sym">.</span>mass<span class="sym">) /</span> distance<span class="sym">;</span>
      <span class="sym">}</span>
   <span class="sym">}</span>
   <span class="kwa">return</span> e<span class="sym">;</span>
<span class="sym">}</span>


<span class="kwa">var</span> n <span class="sym">=</span> arguments<span class="sym">[</span><span class="num">0</span><span class="sym">];</span>
<span class="kwa">var</span> bodies <span class="sym">=</span> <span class="kwa">new</span> <span class="kwd">NBodySystem</span><span class="sym">(</span> <span class="kwc">Array</span><span class="sym">(</span>
   <span class="kwd">Sun</span><span class="sym">(),</span><span class="kwd">Jupiter</span><span class="sym">(),</span><span class="kwd">Saturn</span><span class="sym">(),</span><span class="kwd">Uranus</span><span class="sym">(),</span><span class="kwd">Neptune</span><span class="sym">()</span>
<span class="sym">));</span>

<span class="kwc">print</span><span class="sym">(</span>bodies<span class="sym">.</span><span class="kwd">energy</span><span class="sym">().</span><span class="kwd">toFixed</span><span class="sym">(</span><span class="num">9</span><span class="sym">));</span>
<span class="kwa">for</span> <span class="sym">(</span><span class="kwa">var</span> i<span class="sym">=</span><span class="num">0</span><span class="sym">;</span> i<span class="sym">&lt;</span>n<span class="sym">;</span> i<span class="sym">++){</span> bodies<span class="sym">.</span><span class="kwd">advance</span><span class="sym">(</span><span class="num">0.01</span><span class="sym">); }</span>
<span class="kwc">print</span><span class="sym">(</span>bodies<span class="sym">.</span><span class="kwd">energy</span><span class="sym">().</span><span class="kwd">toFixed</span><span class="sym">(</span><span class="num">9</span><span class="sym">));</span>
