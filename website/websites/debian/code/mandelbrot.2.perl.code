<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># implemented by Greg Buchholz</span>
<span class="slc"># streamlined by Kalev Soikonen</span>

<span class="kwa">sub</span> <span class="kwd">ITER</span> <span class="sym">()	{</span> <span class="num">50</span> <span class="sym">}</span>
<span class="kwa">sub</span> <span class="kwd">LIMITSQR</span> <span class="sym">()	{</span> <span class="num">2.0</span> <span class="sym">**</span> <span class="num">2</span> <span class="sym">}</span>

<span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$w</span><span class="sym">,</span> <span class="kwb">$h</span><span class="sym">,</span> <span class="kwb">$i</span><span class="sym">);</span>
<span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$Cr</span><span class="sym">,</span> <span class="kwb">$Ci</span><span class="sym">,</span> <span class="kwb">$Zr</span><span class="sym">,</span> <span class="kwb">$Zi</span><span class="sym">,</span> <span class="kwb">$Tr</span><span class="sym">,</span> <span class="kwb">$Ti</span><span class="sym">);</span>

<span class="kwa">sub</span> dot <span class="sym">{</span>
    <span class="kwb">$Cr</span> <span class="sym">=</span> <span class="num">2</span> <span class="sym">*</span> <span class="kwb">$_</span><span class="sym">[</span><span class="num">0</span><span class="sym">] /</span> <span class="kwb">$w</span> <span class="sym">-</span> <span class="num">1.5</span><span class="sym">;</span>
    <span class="kwb">$Ci</span> <span class="sym">=</span> <span class="num">2</span> <span class="sym">*</span> <span class="kwb">$_</span><span class="sym">[</span><span class="num">1</span><span class="sym">] /</span> <span class="kwb">$h</span> <span class="sym">-</span> <span class="num">1.0</span><span class="sym">;</span>

    <span class="kwb">$Zr</span> <span class="sym">=</span> <span class="kwb">$Zi</span> <span class="sym">=</span> <span class="kwb">$Tr</span> <span class="sym">=</span> <span class="kwb">$Ti</span> <span class="sym">=</span> <span class="num">0.0</span><span class="sym">;</span>
    <span class="kwb">$i</span> <span class="sym">=</span> ITER<span class="sym">;</span>
    <span class="sym">(</span>
	<span class="kwb">$Zi</span> <span class="sym">=</span> <span class="num">2.0</span> <span class="sym">*</span> <span class="kwb">$Zr</span> <span class="sym">*</span> <span class="kwb">$Zi</span> <span class="sym">+</span> <span class="kwb">$Ci</span><span class="sym">,</span>
	<span class="kwb">$Zr</span> <span class="sym">=</span> <span class="kwb">$Tr</span> <span class="sym">-</span> <span class="kwb">$Ti</span> <span class="sym">+</span> <span class="kwb">$Cr</span><span class="sym">,</span>
	<span class="kwb">$Ti</span> <span class="sym">=</span> <span class="kwb">$Zi</span> <span class="sym">*</span> <span class="kwb">$Zi</span><span class="sym">,</span>
	<span class="kwb">$Tr</span> <span class="sym">=</span> <span class="kwb">$Zr</span> <span class="sym">*</span> <span class="kwb">$Zr</span>
    <span class="sym">)</span> <span class="kwa">until</span> <span class="sym">(</span><span class="kwb">$Tr</span> <span class="sym">+</span> <span class="kwb">$Ti</span> <span class="sym">&gt;</span> LIMITSQR <span class="sym">|| !</span><span class="kwb">$i</span><span class="sym">--);</span>
    <span class="kwa">return</span> <span class="sym">(</span><span class="kwb">$i</span> <span class="sym">== -</span><span class="num">1</span><span class="sym">);</span>
<span class="sym">}</span>

<span class="kwb">$w</span> <span class="sym">=</span> <span class="kwb">$h</span> <span class="sym">=</span> shift <span class="sym">||</span> <span class="num">80</span><span class="sym">;</span>
print <span class="str">&quot;P4</span><span class="esc">\n</span><span class="str">$w $h</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
<span class="kwa">for</span> <span class="kwc">my</span> <span class="kwb">$y</span> <span class="sym">(</span><span class="num">0</span>..<span class="kwb">$h</span><span class="sym">-</span><span class="num">1</span><span class="sym">) {</span>
    print pack <span class="str">'B*'</span><span class="sym">,</span> pack <span class="str">'C*'</span><span class="sym">,</span> map <span class="kwd">dot</span><span class="sym">(</span><span class="kwb">$_</span><span class="sym">,</span> <span class="kwb">$y</span><span class="sym">),</span> <span class="num">0</span>..<span class="kwb">$w</span><span class="sym">-</span><span class="num">1</span><span class="sym">;</span>
<span class="sym">}</span>

