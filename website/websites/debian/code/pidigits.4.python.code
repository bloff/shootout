<span class="slc"># The Computer Language Benchmarks Game</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by Dani Nanz (2007-09-21)</span>

<span class="kwa">import</span> sys
<span class="kwa">import</span> gmpy

<span class="kwa">def</span> <span class="kwd">main</span><span class="sym">(</span>n<span class="sym">):</span>

    pi <span class="sym">=</span> <span class="kwb">str</span><span class="sym">(</span>gmpy<span class="sym">.</span><span class="kwd">pi</span><span class="sym">(</span><span class="kwb">int</span><span class="sym">(</span><span class="num">3.35</span> <span class="sym">*</span> n<span class="sym">)))</span>
    pi_tmp <span class="sym">=</span> <span class="str">''</span><span class="sym">.</span><span class="kwd">join</span><span class="sym">([</span>pi<span class="sym">[</span><span class="num">0</span><span class="sym">],</span> pi<span class="sym">[</span><span class="num">2</span><span class="sym">:]])</span>
    pistr <span class="sym">=</span> pi_tmp<span class="sym">[</span><span class="num">0</span> <span class="sym">:</span> n<span class="sym">]</span>
    w <span class="sym">=</span> <span class="num">10</span>
    out <span class="sym">= []</span>
    <span class="kwa">for</span> i <span class="kwa">in</span> <span class="kwb">xrange</span><span class="sym">(</span><span class="num">0</span><span class="sym">,</span> n <span class="sym">-</span> w <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> w<span class="sym">):</span>
        out<span class="sym">.</span><span class="kwd">extend</span><span class="sym">([</span>pistr<span class="sym">[</span>i <span class="sym">:</span> i <span class="sym">+</span> w<span class="sym">] ,</span> i <span class="sym">+</span> w<span class="sym">])</span>
    <span class="kwa">print</span> <span class="sym">(</span><span class="str">'%s</span><span class="esc">\t</span><span class="str">:%d</span><span class="esc">\n</span><span class="str">'</span> <span class="sym">* (</span><span class="kwb">len</span><span class="sym">(</span>out<span class="sym">) /</span> <span class="num">2</span><span class="sym">)) %</span> <span class="kwb">tuple</span><span class="sym">(</span>out<span class="sym">),</span>
    <span class="kwa">if</span> n <span class="sym">%</span> w <span class="sym">&gt;</span> <span class="num">0</span><span class="sym">:</span>
        <span class="kwa">print</span> <span class="str">&quot;%s</span><span class="esc">\t</span><span class="str">:%d&quot;</span> <span class="sym">% ((</span>pistr<span class="sym">[-(</span>n <span class="sym">%</span> w<span class="sym">):]).</span><span class="kwd">ljust</span><span class="sym">(</span>w<span class="sym">),</span> n<span class="sym">)</span>


<span class="kwd">main</span><span class="sym">(</span><span class="kwb">int</span><span class="sym">(</span>sys<span class="sym">.</span>argv<span class="sym">[</span><span class="num">1</span><span class="sym">]))</span>

