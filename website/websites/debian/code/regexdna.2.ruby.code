<span class="slc"># The Computer Language Benchmarks Game</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc">#</span>
<span class="slc"># contributed by Steve Fisher</span>

dirty_seq = <span class="kwb">$stdin</span><span class="sym">.</span>readlines<span class="sym">.</span>join
seq = dirty_seq<span class="sym">.</span><span class="kwd">gsub</span><span class="sym">( /(</span>?<span class="sym">:</span>^<span class="sym">&gt;.*</span>)?\n<span class="sym">/,</span> <span class="str">&quot;&quot;</span> )

<span class="kwa">def</span> <span class="kwd">count</span><span class="sym">(</span> rx<span class="sym">,</span> str )
  total = <span class="num">0</span>
  rx<span class="sym">.</span><span class="kwd">split</span><span class="sym">(</span> <span class="str">'|'</span> )<span class="sym">.</span>each<span class="sym">{|</span>s<span class="sym">|</span>
    x = s<span class="sym">.</span><span class="kwd">sub</span><span class="sym">(/</span>\[<span class="sym">.*</span>\]<span class="sym">/,</span> <span class="str">&quot; &quot;</span>)<span class="sym">.</span>size
    total <span class="sym">+</span>= <span class="sym">(</span>str<span class="sym">.</span>size <span class="sym">-</span> str<span class="sym">.</span><span class="kwd">gsub</span><span class="sym">(/</span><span class="slc">#{s}/i, &quot;&quot;).size)/x }</span>
  total
<span class="kwa">end</span>

puts <span class="sym">[</span>
  <span class="str">'agggtaaa|tttaccct'</span><span class="sym">,</span>
  <span class="str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="sym">,</span>
  <span class="str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="sym">,</span>
  <span class="str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="sym">,</span>
  <span class="str">'agg[act]taaa|ttta[agt]cct'</span><span class="sym">,</span>
  <span class="str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="sym">,</span>
  <span class="str">'agggt[cgt]aa|tt[acg]accct'</span><span class="sym">,</span>
  <span class="str">'agggta[cgt]a|t[acg]taccct'</span><span class="sym">,</span>
  <span class="str">'agggtaa[cgt]|[acg]ttaccct'</span>
<span class="sym">].</span>map<span class="sym">{|</span>s<span class="sym">|</span> <span class="str">&quot;#{ s } #{ count( s, seq )</span> <span class="sym">}</span><span class="str">&quot; }</span>
<span class="str"></span>
<span class="str">puts</span>
<span class="str">puts dirty_seq.size, seq.size</span>
<span class="str"></span>
<span class="str">puts(</span>
<span class="str">{</span>
<span class="str">'B' =&gt; '(c|g|t)</span><span class="str">', '</span>D<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>g<span class="sym">|</span>t)<span class="str">', '</span>H<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c<span class="sym">|</span>t)<span class="str">', '</span>K<span class="str">' =&gt; '</span><span class="sym">(</span>g<span class="sym">|</span>t)<span class="str">',</span>
<span class="str">'</span>M<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c)<span class="str">', '</span>N<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c<span class="sym">|</span>g<span class="sym">|</span>t)<span class="str">', '</span>R<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>g)<span class="str">', '</span>S<span class="str">' =&gt; '</span><span class="sym">(</span>c<span class="sym">|</span>t)<span class="str">',</span>
<span class="str">'</span>V<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>c<span class="sym">|</span>g)<span class="str">', '</span>W<span class="str">' =&gt; '</span><span class="sym">(</span>a<span class="sym">|</span>t)<span class="str">', '</span>Y<span class="str">' =&gt; '</span><span class="sym">(</span>c<span class="sym">|</span>t)<span class="str">'</span>
<span class="str">}.inject(seq)</span><span class="sym">{|</span>s<span class="sym">,</span>ary<span class="sym">|</span> s<span class="sym">.</span><span class="kwd">gsub</span><span class="sym">( *</span>ary ) <span class="sym">}.</span>size )

