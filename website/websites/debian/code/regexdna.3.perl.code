<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># contributed by Danny Sauer</span>
<span class="slc"># completely rewritten and</span>
<span class="slc"># cleaned up for speed and fun by</span>
<span class="slc"># Mirco Wahab (wahab&#64;chemie.uni-halle.de)</span>
<span class="slc">#</span>
<span class="slc"># Rewritten for speed sextuplication by</span>
<span class="slc"># Emanuele Zeppieri</span>

<span class="kwa">use</span> strict<span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">$input</span> <span class="sym">=</span> <span class="kwa">do</span> <span class="sym">{</span> <span class="kwc">local</span> <span class="sym">$/; &lt;</span>STDIN<span class="sym">&gt; };</span>
<span class="kwc">my</span> <span class="kwb">$file_length</span> <span class="sym">=</span> length <span class="kwb">$input</span><span class="sym">;</span>

<span class="kwb">$input</span> <span class="sym">=</span>~ s<span class="sym">/</span>^<span class="sym">&gt;</span>.<span class="sym">*$//</span>mg<span class="sym">;</span>
<span class="kwb">$input</span> <span class="sym">=</span>~ tr<span class="sym">/</span><span class="esc">\n</span><span class="sym">//</span>d<span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">$seq_length</span> <span class="sym">=</span> length <span class="kwb">$input</span><span class="sym">;</span>

<span class="kwc">my</span> <span class="kwb">$input_lc</span> <span class="sym">=</span> lc <span class="kwb">$input</span><span class="sym">;</span>

<span class="kwa">for</span> <span class="sym">(</span>
        <span class="str">'agggtaaa|tttaccct'</span><span class="sym">,</span>
    <span class="str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="sym">,</span>
    <span class="str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="sym">,</span>
    <span class="str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="sym">,</span>
    <span class="str">'agg[act]taaa|ttta[agt]cct'</span><span class="sym">,</span>
    <span class="str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="sym">,</span>
    <span class="str">'agggt[cgt]aa|tt[acg]accct'</span><span class="sym">,</span>
    <span class="str">'agggta[cgt]a|t[acg]taccct'</span><span class="sym">,</span>
    <span class="str">'agggtaa[cgt]|[acg]ttaccct'</span>
<span class="sym">) {</span>
    <span class="kwc">my</span> <span class="sym">(</span><span class="kwb">$r1</span><span class="sym">,</span> <span class="kwb">$r2</span><span class="sym">) =</span> split <span class="sym">/</span><span class="esc">\|</span><span class="sym">/;</span>
    <span class="kwc">my</span> <span class="kwb">$count</span><span class="sym">;</span>
    <span class="kwb">$count</span><span class="sym">++</span> <span class="kwa">while</span> <span class="kwb">$input_lc</span> <span class="sym">=</span>~ <span class="sym">/</span><span class="kwb">$r1</span><span class="sym">/</span>g<span class="sym">;</span>
    <span class="kwb">$count</span><span class="sym">++</span> <span class="kwa">while</span> <span class="kwb">$input_lc</span> <span class="sym">=</span>~ <span class="sym">/</span><span class="kwb">$r2</span><span class="sym">/</span>g<span class="sym">;</span>
    print <span class="str">&quot;$_ $count</span><span class="esc">\n</span><span class="str">&quot;</span>
<span class="sym">}</span>

<span class="kwc">my</span> <span class="kwb">%iub</span> <span class="sym">= (</span>
    B <span class="sym">=&gt;</span> <span class="str">'(c|g|t)'</span><span class="sym">,</span> D <span class="sym">=&gt;</span> <span class="str">'(a|g|t)'</span><span class="sym">,</span> H <span class="sym">=&gt;</span> <span class="str">'(a|c|t)'</span>  <span class="sym">,</span>
    K <span class="sym">=&gt;</span> <span class="str">'(g|t)'</span>  <span class="sym">,</span> M <span class="sym">=&gt;</span> <span class="str">'(a|c)'</span>  <span class="sym">,</span> N <span class="sym">=&gt;</span> <span class="str">'(a|c|g|t)'</span><span class="sym">,</span>
    R <span class="sym">=&gt;</span> <span class="str">'(a|g)'</span>  <span class="sym">,</span> S <span class="sym">=&gt;</span> <span class="str">'(c|g)'</span>  <span class="sym">,</span> V <span class="sym">=&gt;</span> <span class="str">'(a|c|g)'</span>  <span class="sym">,</span>
    W <span class="sym">=&gt;</span> <span class="str">'(a|t)'</span>  <span class="sym">,</span> Y <span class="sym">=&gt;</span> <span class="str">'(c|t)'</span>
<span class="sym">);</span>
<span class="kwc">my</span> <span class="kwb">$findiub</span> <span class="sym">=</span> <span class="str">'(['</span> . <span class="kwd">join</span><span class="sym">(</span><span class="str">''</span><span class="sym">,</span> keys <span class="kwb">%iub</span><span class="sym">)</span> . <span class="str">'])'</span><span class="sym">;</span>
<span class="kwb">$input</span> <span class="sym">=</span>~ s<span class="sym">/</span><span class="kwb">$findiub</span><span class="sym">/</span><span class="kwb">$iub</span><span class="sym">{</span><span class="kwb">$1</span><span class="sym">}/</span>og<span class="sym">;</span>

printf <span class="str">&quot;</span><span class="esc">\n</span><span class="str">%d</span><span class="esc">\n</span><span class="str">%d</span><span class="esc">\n</span><span class="str">%d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwb">$file_length</span><span class="sym">,</span> <span class="kwb">$seq_length</span><span class="sym">,</span> length <span class="kwb">$input</span><span class="sym">;</span>
