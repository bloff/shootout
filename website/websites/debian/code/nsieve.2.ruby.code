<span class="slc"># The Computer Language Shootout</span>
<span class="slc"># http://shootout.alioth.debian.org/</span>
<span class="slc"># contributed by Pavel Valodzka</span>

<span class="kwa">def</span> <span class="kwd">nsieve</span><span class="sym">(</span>m)
  is_prime = Array<span class="sym">.</span><span class="kwd">new</span><span class="sym">(</span>m<span class="sym">,</span> <span class="kwa">true</span>)
  count = <span class="num">0</span>
  <span class="num">2</span><span class="sym">.</span><span class="kwd">upto</span><span class="sym">(</span>m)<span class="sym">{|</span>i<span class="sym">|</span>
    <span class="kwa">if</span> is_prime<span class="sym">[</span>i<span class="sym">]</span>
      <span class="sym">(</span><span class="num">2</span> <span class="sym">*</span> i)<span class="sym">.</span><span class="kwd">step</span><span class="sym">(</span>m<span class="sym">,</span> i)<span class="sym">{|</span>v<span class="sym">|</span>
        is_prime<span class="sym">[</span>v<span class="sym">]</span> = <span class="kwa">false</span>
      <span class="sym">}</span>
      count <span class="sym">+</span>= <span class="num">1</span>
    <span class="kwa">end</span>
  <span class="sym">}</span>
  <span class="kwa">return</span> count
<span class="kwa">end</span>

n = <span class="sym">(</span><span class="kwc">ARGV</span><span class="sym">[</span><span class="num">0</span><span class="sym">] ||</span> <span class="num">2</span>)<span class="sym">.</span>to_i
n = <span class="num">2</span> <span class="kwa">if</span> <span class="sym">(</span>n <span class="sym">&lt;</span> <span class="num">2</span>)

<span class="num">3</span><span class="sym">.</span>times <span class="sym">{|</span>t<span class="sym">|</span>
  m = <span class="sym">(</span><span class="num">1</span><span class="sym">&lt;&lt;</span>n-t)<span class="sym">*</span><span class="num">10000</span>
  <span class="kwd">printf</span><span class="sym">(</span><span class="str">&quot;Primes up to %8d%9d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> m<span class="sym">,</span> <span class="kwd">nsieve</span><span class="sym">(</span>m))
<span class="sym">}</span>
