<span class="slc">-- The Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- contributed by Isaac Gouy, tuned by Mike Pall</span>

<span class="kwa">local function</span> <span class="kwd">A</span><span class="sym">(</span>i<span class="sym">,</span> j<span class="sym">)</span>
  <span class="kwa">local</span> ij <span class="sym">=</span> i<span class="sym">+</span>j
  <span class="kwa">return</span> <span class="num">1.0</span> <span class="sym">/ (</span>ij <span class="sym">* (</span>ij<span class="sym">+</span><span class="num">1</span><span class="sym">) *</span> <span class="num">0.5</span> <span class="sym">+</span> i<span class="sym">+</span><span class="num">1</span><span class="sym">)</span>
<span class="kwa">end</span>

<span class="kwa">local function</span> <span class="kwd">Av</span><span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">)</span>
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span>n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span>
    <span class="kwa">local</span> a <span class="sym">=</span> <span class="num">0</span>
    <span class="kwa">for</span> j <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span>n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span> a <span class="sym">=</span> a <span class="sym">+</span> <span class="kwd">A</span><span class="sym">(</span>i<span class="sym">,</span>j<span class="sym">) *</span> x<span class="sym">[</span>j<span class="sym">]</span> <span class="kwa">end</span>
    y<span class="sym">[</span>i<span class="sym">] =</span> a
  <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">local function</span> <span class="kwd">Atv</span><span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">)</span>
  <span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span>n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span>
    <span class="kwa">local</span> a <span class="sym">=</span> <span class="num">0</span>
    <span class="kwa">for</span> j <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span>n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span> a <span class="sym">=</span> a <span class="sym">+</span> <span class="kwd">A</span><span class="sym">(</span>j<span class="sym">,</span>i<span class="sym">) *</span> x<span class="sym">[</span>j<span class="sym">]</span> <span class="kwa">end</span>
    y<span class="sym">[</span>i<span class="sym">] =</span> a
  <span class="kwa">end</span>
<span class="kwa">end</span>

<span class="kwa">local function</span> <span class="kwd">AtAv</span><span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">,</span> t<span class="sym">)</span>
  <span class="kwd">Av</span><span class="sym">(</span>n<span class="sym">,</span> x<span class="sym">,</span> t<span class="sym">)</span>
  <span class="kwd">Atv</span><span class="sym">(</span>n<span class="sym">,</span> t<span class="sym">,</span> y<span class="sym">)</span>
<span class="kwa">end</span>


<span class="kwa">local</span> n <span class="sym">=</span> <span class="kwb">tonumber</span><span class="sym">(</span>arg <span class="kwa">and</span> arg<span class="sym">[</span><span class="num">1</span><span class="sym">])</span> <span class="kwa">or</span> <span class="num">100</span>
<span class="kwa">local</span> u<span class="sym">,</span> v<span class="sym">,</span> t <span class="sym">= {}, {}, {}</span>
<span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span>n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span> u<span class="sym">[</span>i<span class="sym">] =</span> <span class="num">1</span> <span class="kwa">end</span>

<span class="kwa">for</span> i <span class="sym">=</span> <span class="num">1</span><span class="sym">,</span><span class="num">10</span> <span class="kwa">do</span> <span class="kwd">AtAv</span><span class="sym">(</span>n<span class="sym">,</span> u<span class="sym">,</span> v<span class="sym">,</span> t<span class="sym">)</span> <span class="kwd">AtAv</span><span class="sym">(</span>n<span class="sym">,</span> v<span class="sym">,</span> u<span class="sym">,</span> t<span class="sym">)</span> <span class="kwa">end</span>

<span class="kwa">local</span> vBv<span class="sym">,</span> vv <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span> <span class="num">0</span>
<span class="kwa">for</span> i <span class="sym">=</span> <span class="num">0</span><span class="sym">,</span>n<span class="sym">-</span><span class="num">1</span> <span class="kwa">do</span>
  <span class="kwa">local</span> ui<span class="sym">,</span> vi <span class="sym">=</span> u<span class="sym">[</span>i<span class="sym">],</span> v<span class="sym">[</span>i<span class="sym">]</span>
  vBv <span class="sym">=</span> vBv <span class="sym">+</span> ui<span class="sym">*</span>vi
  vv <span class="sym">=</span> vv <span class="sym">+</span> vi<span class="sym">*</span>vi
<span class="kwa">end</span>

io<span class="sym">.</span><span class="kwb">write</span><span class="sym">(</span><span class="kwb">string</span><span class="sym">.</span><span class="kwb">format</span><span class="sym">(</span><span class="str">&quot;%0.9f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> math<span class="sym">.</span><span class="kwb">sqrt</span><span class="sym">(</span>vBv <span class="sym">/</span> vv<span class="sym">)))</span>

