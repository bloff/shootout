<span class="slc">-- The Computer Language Shootout</span>
<span class="slc">-- http://shootout.alioth.debian.org/</span>
<span class="slc">-- contributed by Mike Pall</span>

<span class="kwa">local function</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">)</span>
  <span class="kwa">if</span> m <span class="sym">==</span> <span class="num">0</span> <span class="kwa">then return</span> n<span class="sym">+</span><span class="num">1</span> <span class="kwa">end</span>
  <span class="kwa">if</span> n <span class="sym">==</span> <span class="num">0</span> <span class="kwa">then return</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> <span class="num">1</span><span class="sym">)</span> <span class="kwa">end</span>
  <span class="kwa">return</span> <span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">-</span><span class="num">1</span><span class="sym">, (</span><span class="kwd">ack</span><span class="sym">(</span>m<span class="sym">,</span> n<span class="sym">-</span><span class="num">1</span><span class="sym">)))</span> <span class="slc">-- The parentheses are deliberate.</span>
<span class="kwa">end</span>

<span class="kwa">local function</span> <span class="kwd">fib</span><span class="sym">(</span>n<span class="sym">)</span>
  <span class="kwa">if</span> n <span class="sym">&lt;</span> <span class="num">2</span> <span class="kwa">then return</span> <span class="num">1</span> <span class="kwa">end</span>
  <span class="kwa">return</span> <span class="kwd">fib</span><span class="sym">(</span>n<span class="sym">-</span><span class="num">2</span><span class="sym">) +</span> <span class="kwd">fib</span><span class="sym">(</span>n<span class="sym">-</span><span class="num">1</span><span class="sym">)</span>
<span class="kwa">end</span>

<span class="kwa">local function</span> <span class="kwd">tak</span><span class="sym">(</span>x<span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">)</span>
  <span class="kwa">if</span> y <span class="sym">&gt;=</span> x <span class="kwa">then return</span> z <span class="kwa">end</span>
  <span class="kwa">return</span> <span class="kwd">tak</span><span class="sym">(</span><span class="kwd">tak</span><span class="sym">(</span>x<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> y<span class="sym">,</span> z<span class="sym">),</span> <span class="kwd">tak</span><span class="sym">(</span>y<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> z<span class="sym">,</span> x<span class="sym">), (</span><span class="kwd">tak</span><span class="sym">(</span>z<span class="sym">-</span><span class="num">1</span><span class="sym">,</span> x<span class="sym">,</span> y<span class="sym">)))</span>
<span class="kwa">end</span>

<span class="kwa">local</span> <span class="kwb">write</span><span class="sym">,</span> <span class="kwb">format</span> <span class="sym">=</span> io<span class="sym">.</span><span class="kwb">write</span><span class="sym">,</span> <span class="kwb">string</span><span class="sym">.</span><span class="kwb">format</span>
<span class="kwa">local</span> n <span class="sym">=</span> <span class="kwb">tonumber</span><span class="sym">(</span>arg<span class="sym">[</span><span class="num">1</span><span class="sym">]) -</span> <span class="num">1</span>
<span class="kwb">write</span><span class="sym">(</span><span class="kwb">format</span><span class="sym">(</span><span class="str">&quot;Ack(3,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">,</span> <span class="kwd">ack</span><span class="sym">(</span><span class="num">3</span><span class="sym">,</span> n<span class="sym">+</span><span class="num">1</span><span class="sym">)))</span>
<span class="kwb">write</span><span class="sym">(</span><span class="kwb">format</span><span class="sym">(</span><span class="str">&quot;Fib(%.1f): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> n<span class="sym">+</span><span class="num">28.0</span><span class="sym">,</span> <span class="kwd">fib</span><span class="sym">(</span>n<span class="sym">+</span><span class="num">28.0</span><span class="sym">)))</span>
<span class="kwb">write</span><span class="sym">(</span><span class="kwb">format</span><span class="sym">(</span><span class="str">&quot;Tak(%d,%d,%d): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span> <span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span> n<span class="sym">,</span> <span class="kwd">tak</span><span class="sym">(</span><span class="num">3</span><span class="sym">*</span>n<span class="sym">,</span> <span class="num">2</span><span class="sym">*</span>n<span class="sym">,</span> n<span class="sym">)))</span>
<span class="kwb">write</span><span class="sym">(</span><span class="kwb">format</span><span class="sym">(</span><span class="str">&quot;Fib(3): %d</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">fib</span><span class="sym">(</span><span class="num">3</span><span class="sym">)))</span>
<span class="kwb">write</span><span class="sym">(</span><span class="kwb">format</span><span class="sym">(</span><span class="str">&quot;Tak(3.0,2.0,1.0): %.1f</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> <span class="kwd">tak</span><span class="sym">(</span><span class="num">3.0</span><span class="sym">,</span> <span class="num">2.0</span><span class="sym">,</span> <span class="num">1.0</span><span class="sym">)))</span>

