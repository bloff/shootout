<span class="sym">&lt;</span>?php
#
# TheComputer Language Shootout
# http<span class="sym">:</span><span class="slc">//shootout.alioth.debian.org/</span>
#
# reverse complement in PHP
# contributed by Danny Sauer
#

# We<span class="str">'ll need some definitions</span>
<span class="str">define( '</span>LINE_LENGTH<span class="str">', 60 );</span>
<span class="str">define( '</span>SRC<span class="str">', '</span>CGATMKRYVBHD<span class="str">');</span>
<span class="str">define( '</span>DST<span class="str">', '</span>GCTAKMYRBVDH<span class="str">');</span>
<span class="str">$str = '</span><span class="str">';</span>
<span class="str">$seq = '</span><span class="str">';</span>
<span class="str"></span>
<span class="str"># read in the file, a line at a time</span>
<span class="str">while( !feof(STDIN) ) {</span>
<span class="str">    $str = trim(fgets(STDIN));</span>
<span class="str">    if( $str[0] == '</span><span class="sym">&gt;</span><span class="str">' ){</span>
<span class="str">        # if we'</span>re on a comment line<span class="sym">,</span> <span class="kwa">print</span> the previous seq and move on
        print_seq<span class="sym">();</span>
        <span class="kwa">echo</span> <span class="kwb">$str</span><span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
    <span class="sym">}</span><span class="kwa">else</span><span class="sym">{</span>
        # otherwise<span class="sym">,</span> just append to the sequence
        <span class="kwb">$seq</span> .<span class="sym">=</span> <span class="kwb">$str</span><span class="sym">;</span>
    <span class="sym">}</span>
<span class="sym">}</span>
print_seq<span class="sym">();</span>

<span class="kwa">exit</span><span class="sym">;</span>

# <span class="kwa">print</span> the sequence out<span class="sym">,</span> <span class="kwa">if</span> it exists
<span class="kwa">function</span> print_seq<span class="sym">(){</span>
    <span class="kwa">global</span> <span class="kwb">$seq</span><span class="sym">;</span> # no <span class="kwa">time</span><span class="sym">-</span>consuming argument passing <span class="kwa">for</span> us<span class="sym">! :)</span>
    <span class="kwa">if</span><span class="sym">(</span><span class="kwb">$seq</span> <span class="sym">!=</span> <span class="str">''</span><span class="sym">){</span>
        <span class="kwa">echo wordwrap</span><span class="sym">(</span> <span class="kwa">strrev</span><span class="sym">(</span> <span class="kwa">strtr</span><span class="sym">(</span><span class="kwa">strtoupper</span><span class="sym">(</span><span class="kwb">$seq</span><span class="sym">),</span> SRC<span class="sym">,</span> DST<span class="sym">) ),</span>
                       LINE_LENGTH<span class="sym">,</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">,</span> true <span class="sym">),</span> <span class="str">&quot;</span><span class="esc">\n</span><span class="str">&quot;</span><span class="sym">;</span>
    <span class="sym">}</span>
    <span class="kwb">$seq</span> <span class="sym">=</span> <span class="str">''</span><span class="sym">;</span>
<span class="sym">}</span>
?<span class="sym">&gt;</span>
