<span class="slc">% ----------------------------------------------------------------------</span>
<span class="slc">% The Computer Language Shootout</span>
<span class="slc">% http://shootout.alioth.debian.org/</span>
<span class="slc">%</span>
<span class="slc">% Assumes execution using the following command-line usage:</span>
<span class="slc">%</span>
<span class="slc">%   pl -q -g main -t halt -s SOURCENAME -- USERARG1 ... &lt; in &gt; out</span>
<span class="slc">%</span>
<span class="slc">% Contributed by Anthony Borla</span>
<span class="slc">% ----------------------------------------------------------------------</span>

main <span class="sym">:-</span>
  cmdlNumArg<span class="sym">(</span><span class="num">1</span><span class="sym">,</span> N<span class="sym">),</span>
  make_bodies<span class="sym">(</span>Bodies<span class="sym">),</span>

  offset_momentum<span class="sym">(</span>Bodies<span class="sym">),</span>
  energy<span class="sym">(</span>Bodies<span class="sym">,</span> EnergyStart<span class="sym">),</span>
  advance<span class="sym">(</span>Bodies<span class="sym">,</span> N<span class="sym">,</span> <span class="num">0.01</span><span class="sym">),</span>
  energy<span class="sym">(</span>Bodies<span class="sym">,</span> EnergyAfter<span class="sym">),</span>

  format<span class="sym">(</span><span class="str">'~9f~N~9f~N'</span><span class="sym">, [</span>EnergyStart<span class="sym">,</span> EnergyAfter<span class="sym">]),</span>
  drop_bodies<span class="sym">(</span>Bodies<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

offset_momentum<span class="sym">(</span>Bodies<span class="sym">) :-</span>
  setvar<span class="sym">(</span>px<span class="sym">,</span> <span class="num">0.0</span><span class="sym">),</span> setvar<span class="sym">(</span>py<span class="sym">,</span> <span class="num">0.0</span><span class="sym">),</span> setvar<span class="sym">(</span>pz<span class="sym">,</span> <span class="num">0.0</span><span class="sym">),</span>

  forall<span class="sym">(</span>member<span class="sym">(</span>E<span class="sym">,</span> Bodies<span class="sym">),</span>
    <span class="sym">(</span>getvar<span class="sym">(</span>E<span class="sym">, [</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> VX<span class="sym">,</span> VY<span class="sym">,</span> VZ<span class="sym">,</span> Mass<span class="sym">]),</span> getvar<span class="sym">(</span>px<span class="sym">,</span> PX<span class="sym">),</span> getvar<span class="sym">(</span>py<span class="sym">,</span> PY<span class="sym">),</span> getvar<span class="sym">(</span>pz<span class="sym">,</span> PZ<span class="sym">),</span>
    PX1 <span class="kwa">is</span> PX <span class="sym">+</span> VX <span class="sym">*</span> Mass<span class="sym">,</span> PY1 <span class="kwa">is</span> PY <span class="sym">+</span> VY <span class="sym">*</span> Mass<span class="sym">,</span> PZ1 <span class="kwa">is</span> PZ <span class="sym">+</span> VZ <span class="sym">*</span> Mass<span class="sym">,</span>
    setvar<span class="sym">(</span>px<span class="sym">,</span> PX1<span class="sym">),</span> setvar<span class="sym">(</span>py<span class="sym">,</span> PY1<span class="sym">),</span> setvar<span class="sym">(</span>pz<span class="sym">,</span> PZ1<span class="sym">))),</span>

  getvar<span class="sym">(</span>solar_mass<span class="sym">,</span> SOLAR_MASS<span class="sym">),</span>
  getvar<span class="sym">(</span>sun<span class="sym">, [</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> VX<span class="sym">,</span> VY<span class="sym">,</span> VZ<span class="sym">,</span> Mass<span class="sym">]),</span> getvar<span class="sym">(</span>px<span class="sym">,</span> PX<span class="sym">),</span> getvar<span class="sym">(</span>py<span class="sym">,</span> PY<span class="sym">),</span> getvar<span class="sym">(</span>pz<span class="sym">,</span> PZ<span class="sym">),</span>
  VX1 <span class="kwa">is</span> <span class="sym">-(</span>PX <span class="sym">/</span> SOLAR_MASS<span class="sym">),</span> VY1 <span class="kwa">is</span> <span class="sym">-(</span>PY <span class="sym">/</span> SOLAR_MASS<span class="sym">),</span> VZ1 <span class="kwa">is</span> <span class="sym">-(</span>PZ <span class="sym">/</span> SOLAR_MASS<span class="sym">),</span>
  setvar<span class="sym">(</span>sun<span class="sym">, [</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> VX1<span class="sym">,</span> VY1<span class="sym">,</span> VZ1<span class="sym">,</span> Mass<span class="sym">]),</span>

  dropvar<span class="sym">(</span>px<span class="sym">),</span> dropvar<span class="sym">(</span>py<span class="sym">),</span> dropvar<span class="sym">(</span>pz<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

energy<span class="sym">(</span>Bodies<span class="sym">,</span> Energy<span class="sym">) :-</span>
  setvar<span class="sym">(</span>c<span class="sym">,</span> <span class="num">0.0</span><span class="sym">),</span>

  forall<span class="sym">(</span>head_and_tail<span class="sym">(</span>E<span class="sym">,</span> T<span class="sym">,</span> Bodies<span class="sym">),</span>
    <span class="sym">(</span>getvar<span class="sym">(</span>E<span class="sym">, [</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> VX<span class="sym">,</span> VY<span class="sym">,</span> VZ<span class="sym">,</span> Mass<span class="sym">]),</span> getvar<span class="sym">(</span>c<span class="sym">,</span> C<span class="sym">),</span>
    C1 <span class="kwa">is</span> C <span class="sym">+</span> <span class="num">0.5</span> <span class="sym">*</span> Mass <span class="sym">* (</span>VX <span class="sym">*</span> VX <span class="sym">+</span> VY <span class="sym">*</span> VY <span class="sym">+</span> VZ <span class="sym">*</span> VZ<span class="sym">),</span>
    setvar<span class="sym">(</span>c<span class="sym">,</span> C1<span class="sym">),</span>

      <span class="sym">(</span>forall<span class="sym">(</span>member<span class="sym">(</span>ET<span class="sym">,</span> T<span class="sym">),</span>
        <span class="sym">(</span>getvar<span class="sym">(</span>ET<span class="sym">, [</span>XT<span class="sym">,</span> YT<span class="sym">,</span> ZT<span class="sym">,</span> _<span class="sym">,</span> _<span class="sym">,</span> _<span class="sym">,</span> MassT<span class="sym">]),</span> getvar<span class="sym">(</span>c<span class="sym">,</span> CT<span class="sym">),</span>
        DX <span class="kwa">is</span> X <span class="sym">-</span> XT<span class="sym">,</span> DY <span class="kwa">is</span> Y <span class="sym">-</span> YT<span class="sym">,</span> DZ <span class="kwa">is</span> Z <span class="sym">-</span> ZT<span class="sym">,</span>
        DISTANCE <span class="kwa">is</span> <span class="kwb">sqrt</span><span class="sym">(</span>DX <span class="sym">*</span> DX <span class="sym">+</span> DY <span class="sym">*</span> DY <span class="sym">+</span> DZ <span class="sym">*</span> DZ<span class="sym">),</span>
        CT1 <span class="kwa">is</span> CT <span class="sym">- (</span>Mass <span class="sym">*</span> MassT<span class="sym">) /</span> DISTANCE<span class="sym">,</span>
        setvar<span class="sym">(</span>c<span class="sym">,</span> CT1<span class="sym">)))))),</span>

  getvar<span class="sym">(</span>c<span class="sym">,</span> Energy<span class="sym">),</span> dropvar<span class="sym">(</span>c<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

advance<span class="sym">(</span>Bodies<span class="sym">,</span> Repetitions<span class="sym">,</span> DT<span class="sym">) :-</span>
  setvar<span class="sym">(</span>counter<span class="sym">,</span> <span class="num">1</span><span class="sym">),</span>

  <span class="kwa">repeat</span><span class="sym">,</span>
    getvar<span class="sym">(</span>counter<span class="sym">,</span> I<span class="sym">),</span> I1 <span class="kwa">is</span> I <span class="sym">+</span> <span class="num">1</span><span class="sym">,</span> setvar<span class="sym">(</span>counter<span class="sym">,</span> I1<span class="sym">),</span>

    forall<span class="sym">(</span>head_and_tail<span class="sym">(</span>E<span class="sym">,</span> T<span class="sym">,</span> Bodies<span class="sym">),</span>
      <span class="sym">(</span>forall<span class="sym">(</span>member<span class="sym">(</span>ET<span class="sym">,</span> T<span class="sym">),</span>
        <span class="sym">(</span>getvar<span class="sym">(</span>E<span class="sym">, [</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> VX<span class="sym">,</span> VY<span class="sym">,</span> VZ<span class="sym">,</span> Mass<span class="sym">]),</span>
        getvar<span class="sym">(</span>ET<span class="sym">, [</span>XT<span class="sym">,</span> YT<span class="sym">,</span> ZT<span class="sym">,</span> VXT<span class="sym">,</span> VYT<span class="sym">,</span> VZT<span class="sym">,</span> MassT<span class="sym">]),</span>
        DX <span class="kwa">is</span> X <span class="sym">-</span> XT<span class="sym">,</span> DY <span class="kwa">is</span> Y <span class="sym">-</span> YT<span class="sym">,</span> DZ <span class="kwa">is</span> Z <span class="sym">-</span> ZT<span class="sym">,</span>
        DISTANCE <span class="kwa">is</span> <span class="kwb">sqrt</span><span class="sym">(</span>DX <span class="sym">*</span> DX <span class="sym">+</span> DY <span class="sym">*</span> DY <span class="sym">+</span> DZ <span class="sym">*</span> DZ<span class="sym">),</span>
        Mag <span class="kwa">is</span> DT <span class="sym">/ (</span>DISTANCE <span class="sym">*</span> DISTANCE <span class="sym">*</span> DISTANCE<span class="sym">),</span>
        VX1 <span class="kwa">is</span> VX <span class="sym">-</span> DX <span class="sym">*</span> MassT <span class="sym">*</span> Mag<span class="sym">,</span> VY1 <span class="kwa">is</span> VY <span class="sym">-</span> DY <span class="sym">*</span> MassT <span class="sym">*</span> Mag<span class="sym">,</span> VZ1 <span class="kwa">is</span> VZ <span class="sym">-</span> DZ <span class="sym">*</span> MassT <span class="sym">*</span> Mag<span class="sym">,</span>
        VXT1 <span class="kwa">is</span> VXT <span class="sym">+</span> DX <span class="sym">*</span> Mass <span class="sym">*</span> Mag<span class="sym">,</span> VYT1 <span class="kwa">is</span> VYT <span class="sym">+</span> DY <span class="sym">*</span> Mass <span class="sym">*</span> Mag<span class="sym">,</span> VZT1 <span class="kwa">is</span> VZT <span class="sym">+</span> DZ <span class="sym">*</span> Mass <span class="sym">*</span> Mag<span class="sym">,</span>
        setvar<span class="sym">(</span>E<span class="sym">, [</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> VX1<span class="sym">,</span> VY1<span class="sym">,</span> VZ1<span class="sym">,</span> Mass<span class="sym">]),</span>
        setvar<span class="sym">(</span>ET<span class="sym">, [</span>XT<span class="sym">,</span> YT<span class="sym">,</span> ZT<span class="sym">,</span> VXT1<span class="sym">,</span> VYT1<span class="sym">,</span> VZT1<span class="sym">,</span> MassT<span class="sym">]))))),</span>

    forall<span class="sym">(</span>member<span class="sym">(</span>E<span class="sym">,</span> Bodies<span class="sym">),</span>
      <span class="sym">(</span>getvar<span class="sym">(</span>E<span class="sym">, [</span>X<span class="sym">,</span> Y<span class="sym">,</span> Z<span class="sym">,</span> VX<span class="sym">,</span> VY<span class="sym">,</span> VZ<span class="sym">,</span> Mass<span class="sym">]),</span>
      X1 <span class="kwa">is</span> X <span class="sym">+</span> DT <span class="sym">*</span> VX<span class="sym">,</span> Y1 <span class="kwa">is</span> Y <span class="sym">+</span> DT <span class="sym">*</span> VY<span class="sym">,</span> Z1 <span class="kwa">is</span> Z <span class="sym">+</span> DT <span class="sym">*</span> VZ<span class="sym">,</span>
      setvar<span class="sym">(</span>E<span class="sym">, [</span>X1<span class="sym">,</span> Y1<span class="sym">,</span> Z1<span class="sym">,</span> VX<span class="sym">,</span> VY<span class="sym">,</span> VZ<span class="sym">,</span> Mass<span class="sym">]))),</span>

  I <span class="sym">&gt;=</span> Repetitions<span class="sym">,</span>

  dropvar<span class="sym">(</span>counter<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

make_bodies<span class="sym">(</span>Bodies<span class="sym">) :-</span>
  setvar<span class="sym">(</span>solar_mass<span class="sym">,</span> <span class="num">3.9478417604357432000e+01</span><span class="sym">),</span> getvar<span class="sym">(</span>solar_mass<span class="sym">,</span> SOLAR_MASS<span class="sym">),</span>
  Data <span class="sym">=</span>
  <span class="sym">[</span>
    sun<span class="sym">:[</span><span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> <span class="num">0.0</span><span class="sym">,</span> SOLAR_MASS<span class="sym">],</span>
    jupiter<span class="sym">:[</span><span class="num">4.84143144246472090e+00</span><span class="sym">, -</span><span class="num">1.16032004402742839e+00</span><span class="sym">, -</span><span class="num">1.03622044471123109e-01</span><span class="sym">,</span> <span class="num">6.06326392995832020e-01</span><span class="sym">,</span> <span class="num">2.811986844916260200e+00</span><span class="sym">, -</span><span class="num">2.5218361659887636e-02</span><span class="sym">,</span> <span class="num">3.7693674870389486e-02</span><span class="sym">],</span>
    saturn<span class="sym">:[</span><span class="num">8.34336671824457987e+00</span><span class="sym">,</span> <span class="num">4.12479856412430479e+00</span><span class="sym">, -</span><span class="num">4.03523417114321381e-01</span><span class="sym">, -</span><span class="num">1.010774346178792400e+00</span><span class="sym">,</span> <span class="num">1.825662371230411900e+00</span><span class="sym">,</span> <span class="num">8.415761376584154e-03</span><span class="sym">,</span> <span class="num">1.1286326131968767e-02</span><span class="sym">],</span>
    uranus<span class="sym">:[</span><span class="num">1.28943695621391310e+01</span><span class="sym">, -</span><span class="num">1.51111514016986312e+01</span><span class="sym">, -</span><span class="num">2.23307578892655734e-01</span><span class="sym">,</span> <span class="num">1.082791006441535600e+00</span><span class="sym">,</span> <span class="num">8.68713018169607890e-01</span><span class="sym">, -</span><span class="num">1.0832637401363636e-02</span><span class="sym">,</span> <span class="num">1.723724057059711e-03</span><span class="sym">],</span>
    neptune<span class="sym">:[</span><span class="num">1.53796971148509165e+01</span><span class="sym">, -</span><span class="num">2.59193146099879641e+01</span><span class="sym">,</span> <span class="num">1.79258772950371181e-01</span><span class="sym">,</span> <span class="num">9.79090732243897980e-01</span><span class="sym">,</span> <span class="num">5.94698998647676060e-01</span><span class="sym">, -</span><span class="num">3.4755955504078104e-02</span><span class="sym">,</span> <span class="num">2.033686869924631e-03</span><span class="sym">]</span>
  <span class="sym">],</span>
  forall<span class="sym">(</span>member<span class="sym">(</span>Key<span class="sym">:</span>Values<span class="sym">,</span> Data<span class="sym">),</span> setvar<span class="sym">(</span>Key<span class="sym">,</span> Values<span class="sym">)),</span>
  collect_keys<span class="sym">(</span>Data<span class="sym">,</span> Bodies<span class="sym">)</span>.

<span class="slc">% ------------- %</span>

drop_bodies<span class="sym">(</span>Bodies<span class="sym">) :-</span>
  dropvar<span class="sym">(</span>solar_mass<span class="sym">),</span>
  forall<span class="sym">(</span>member<span class="sym">(</span>E<span class="sym">,</span> Bodies<span class="sym">),</span> dropvar<span class="sym">(</span>E<span class="sym">))</span>.

<span class="slc">% ------------------------------- %</span>

getvar<span class="sym">(</span>Id<span class="sym">,</span> Value<span class="sym">) :-</span> nb_getval<span class="sym">(</span>Id<span class="sym">,</span> Value<span class="sym">)</span>.
setvar<span class="sym">(</span>Id<span class="sym">,</span> Value<span class="sym">) :-</span> nb_setval<span class="sym">(</span>Id<span class="sym">,</span> Value<span class="sym">)</span>.
dropvar<span class="sym">(</span>Id<span class="sym">) :-</span> nb_delete<span class="sym">(</span>Id<span class="sym">)</span>.

<span class="slc">% ------------- %</span>

collect_keys<span class="sym">(</span>List<span class="sym">,</span> Values<span class="sym">) :-</span>
  collect_keys_<span class="sym">(</span>List<span class="sym">,</span> Values<span class="sym">)</span>.

collect_keys_<span class="sym">([], [])</span>.
collect_keys_<span class="sym">([</span>H<span class="sym">:</span>_<span class="sym">|</span>T<span class="sym">],</span> K<span class="sym">) :-</span> K <span class="sym">= [</span>H<span class="sym">|</span>T1<span class="sym">],</span> collect_keys_<span class="sym">(</span>T<span class="sym">,</span> T1<span class="sym">)</span>.

<span class="slc">% ------------- %</span>

head_and_tail<span class="sym">(</span>X<span class="sym">,</span> T<span class="sym">, [</span>X<span class="sym">|</span>T<span class="sym">])</span>.
head_and_tail<span class="sym">(</span>X<span class="sym">,</span> T1<span class="sym">, [</span>_<span class="sym">|</span>T<span class="sym">]) :-</span> head_and_tail<span class="sym">(</span>X<span class="sym">,</span> T1<span class="sym">,</span> T<span class="sym">)</span>.

<span class="slc">% ------------------------------- %</span>

argument_value<span class="sym">(</span>N<span class="sym">,</span> Arg<span class="sym">) :-</span>
  <span class="kwb">current_prolog_flag</span><span class="sym">(</span>argv<span class="sym">,</span> Cmdline<span class="sym">),</span> append<span class="sym">(</span>_<span class="sym">, [--|</span>UserArgs<span class="sym">],</span> Cmdline<span class="sym">),</span>
  Nth <span class="kwa">is</span> N <span class="sym">-</span> <span class="num">1</span><span class="sym">,</span> nth0<span class="sym">(</span>Nth<span class="sym">,</span> UserArgs<span class="sym">,</span> Arg<span class="sym">)</span>.

cmdlNumArg<span class="sym">(</span>Nth<span class="sym">,</span> N<span class="sym">) :-</span>
  argument_value<span class="sym">(</span>Nth<span class="sym">,</span> Arg<span class="sym">),</span> <span class="kwb">catch</span><span class="sym">(</span>atom_number<span class="sym">(</span>Arg<span class="sym">,</span> N<span class="sym">),</span> _<span class="sym">,</span> <span class="kwa">fail</span><span class="sym">) ;</span> <span class="kwa">halt</span><span class="sym">(</span><span class="num">1</span><span class="sym">)</span>.

