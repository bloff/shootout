<span class="kwa">import</span> System
<span class="kwa">import</span> Data.List<span class="sym">(</span>foldl<span class="str">')</span>
<span class="str">import GHC.Base</span>
<span class="str"></span>
<span class="str">{-  The Computer Language Shootout</span>
<span class="str">    http://shootout.alioth.debian.org/</span>
<span class="str">    contributed by Sebastian Sylvan</span>
<span class="str">-}</span>
<span class="str"></span>
<span class="str">{-# INLINE rotate #-}</span>
<span class="str">rotate n (x:xs) = let (a,b) = splitAt (n-1) xs in a ++ x : b</span>
<span class="str"></span>
<span class="str">{-# INLINE perms #-}</span>
<span class="str">perms l = foldr perm'</span> <span class="sym">[</span>l<span class="sym">] [</span><span class="num">2</span>..length l<span class="sym">]</span>
    <span class="kwa">where</span> perm<span class="str">' n ls = concat [take n (iterate (rotate n) l) | l &lt;- ls]</span>
<span class="str"></span>
<span class="str">{-# INLINE flop #-}</span>
<span class="str">flop (1:_) = 0</span>
<span class="str">flop xs = 1 + flop (rev xs)</span>
<span class="str"></span>
<span class="str">{-# INLINE rev #-}</span>
<span class="str">rev (x:xs) = reverse a ++ x : b</span>
<span class="str">      where (a,b) = splitAt (x-1) xs</span>
<span class="str"></span>
<span class="str">fannuch xs = foldl'</span> max <span class="num">0</span> $ map flop xs

main <span class="sym">=</span> <span class="kwa">do</span> <span class="sym">[</span>n<span class="sym">] &lt;-</span> getArgs
          <span class="kwa">let</span> xs <span class="sym">=</span> perms <span class="sym">[</span><span class="num">1</span>..read n<span class="sym">]</span>
          putStr $ unlines $ map <span class="sym">(</span>concatMap show<span class="sym">)</span> $ take <span class="num">30</span> xs
          putStrLn $ <span class="str">&quot;Pfannkuchen(&quot;</span> <span class="sym">++</span> n <span class="sym">++</span> <span class="str">&quot;) = &quot;</span> <span class="sym">++</span> show <span class="sym">(</span>fannuch xs<span class="sym">)</span>
