<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>

<span class="hl slc"># Initial port from C by Steve Clark</span>
<span class="hl slc"># Rewrite by Kalev Soikonen</span>
<span class="hl slc"># Modified by Kuang-che Wu</span>
<span class="hl slc"># Multi-threaded by Andrew Rodland</span>

<span class="hl kwa">use</span> <span class="hl kwd">integer</span><span class="hl sym">;</span>
<span class="hl kwa">use</span> <span class="hl kwd">threads</span><span class="hl sym">;</span>

<span class="hl kwa">sub</span> fannkuch <span class="hl sym">{</span>
  <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$n</span><span class="hl sym">,</span> <span class="hl kwb">$last</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>
  <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$iter</span><span class="hl sym">,</span> <span class="hl kwb">$flips</span><span class="hl sym">,</span> <span class="hl kwb">$maxflips</span><span class="hl sym">);</span>
  <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">&#64;q</span><span class="hl sym">,</span> <span class="hl kwb">&#64;p</span><span class="hl sym">,</span> <span class="hl kwb">&#64;count</span><span class="hl sym">);</span>

  <span class="hl kwb">&#64;p</span> <span class="hl sym">= (</span><span class="hl num">1</span> <span class="hl sym">..</span> <span class="hl kwb">$last</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwb">$last</span> <span class="hl sym">+</span> <span class="hl num">1</span> <span class="hl sym">..</span> <span class="hl kwb">$n</span><span class="hl sym">,</span> <span class="hl kwb">$last</span><span class="hl sym">);</span>
  <span class="hl kwb">&#64;count</span> <span class="hl sym">= (</span><span class="hl num">1</span><span class="hl sym">..</span><span class="hl kwb">$n</span><span class="hl sym">);</span>

  TRY<span class="hl sym">:</span> <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">) {</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$p</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] !=</span> <span class="hl num">1</span> <span class="hl sym">&amp;&amp;</span> <span class="hl kwb">$p</span><span class="hl sym">[-</span><span class="hl num">1</span><span class="hl sym">] !=</span> <span class="hl kwb">$n</span><span class="hl sym">) {</span>
      <span class="hl kwb">&#64;q</span> <span class="hl sym">=</span> <span class="hl kwb">&#64;p</span><span class="hl sym">;</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">$flips</span><span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwb">$q</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] !=</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwb">$flips</span><span class="hl sym">++) {</span>
        unshift <span class="hl kwb">&#64;q</span><span class="hl sym">,</span> reverse splice <span class="hl kwb">&#64;q</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwb">$q</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>
      <span class="hl sym">}</span>
      <span class="hl kwb">$maxflips</span> <span class="hl sym">=</span> <span class="hl kwb">$flips</span> <span class="hl kwa">if</span> <span class="hl kwb">$flips</span> <span class="hl sym">&gt;</span> <span class="hl kwb">$maxflips</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>

    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl sym">(</span><span class="hl num">1</span> <span class="hl sym">..</span> <span class="hl kwb">$n</span> <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) {</span>
      splice <span class="hl kwb">&#64;p</span><span class="hl sym">,</span> <span class="hl kwb">$i</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> shift <span class="hl kwb">&#64;p</span><span class="hl sym">;</span>
      <span class="hl kwa">next</span> TRY <span class="hl kwa">if</span> <span class="hl sym">(--</span><span class="hl kwb">$count</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">]);</span>
      <span class="hl kwb">$count</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">] =</span> <span class="hl kwb">$i</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>
    <span class="hl kwa">return</span> <span class="hl kwb">$maxflips</span><span class="hl sym">;</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> print30 <span class="hl sym">{</span>
  <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$n</span><span class="hl sym">,</span> <span class="hl kwb">$iter</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>
  <span class="hl kwb">&#64;p</span> <span class="hl sym">=</span> <span class="hl kwb">&#64;count</span> <span class="hl sym">= (</span><span class="hl num">1</span><span class="hl sym">..</span><span class="hl kwb">$n</span><span class="hl sym">);</span>

  TRY<span class="hl sym">:</span> <span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">) {</span>
    <span class="hl kwc">print</span> <span class="hl kwb">&#64;p</span><span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
    <span class="hl kwa">return if</span> <span class="hl sym">++</span><span class="hl kwb">$iter</span> <span class="hl sym">&gt;=</span> <span class="hl num">30</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl sym">(</span><span class="hl num">1</span> <span class="hl sym">..</span> <span class="hl kwb">$n</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
      splice <span class="hl kwb">&#64;p</span><span class="hl sym">,</span> <span class="hl kwb">$i</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> shift <span class="hl kwb">&#64;p</span><span class="hl sym">;</span>
      <span class="hl kwa">next</span> TRY <span class="hl kwa">if</span> <span class="hl sym">(--</span><span class="hl kwb">$count</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">]);</span>
      <span class="hl kwb">$count</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">] =</span> <span class="hl kwb">$i</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">$n</span> <span class="hl sym">=</span> shift <span class="hl sym">||</span> <span class="hl num">7</span><span class="hl sym">;</span>

print30<span class="hl sym">(</span><span class="hl kwb">$n</span><span class="hl sym">);</span>

<span class="hl kwc">my</span> <span class="hl kwb">&#64;threads</span><span class="hl sym">;</span>
<span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl sym">(</span><span class="hl num">1</span> <span class="hl sym">..</span> <span class="hl kwb">$n</span><span class="hl sym">) {</span>
  push <span class="hl kwb">&#64;threads</span><span class="hl sym">,</span> threads<span class="hl sym">-&gt;</span><span class="hl kwd">create</span><span class="hl sym">(</span>\<span class="hl sym">&amp;</span>fannkuch<span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">,</span> <span class="hl kwb">$i</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">$max</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$thread</span> <span class="hl sym">(</span><span class="hl kwb">&#64;threads</span><span class="hl sym">) {</span>
  <span class="hl kwc">my</span> <span class="hl kwb">$val</span> <span class="hl sym">=</span> <span class="hl kwb">$thread</span><span class="hl sym">-&gt;</span><span class="hl kwd">join</span><span class="hl sym">;</span>
  <span class="hl kwb">$max</span> <span class="hl sym">=</span> <span class="hl kwb">$val</span> <span class="hl kwa">if</span> <span class="hl kwb">$val</span> <span class="hl sym">&gt;</span> <span class="hl kwb">$max</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
<span class="hl kwc">print</span> <span class="hl str">&quot;Pfannkuchen($n) = $max</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
