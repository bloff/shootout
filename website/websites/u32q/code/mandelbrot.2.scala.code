<span class="hl com">/* The Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Isaac Gouy</span>
<span class="hl com">*/</span>

<span class="hl kwa">import</span> java<span class="hl sym">.</span>io<span class="hl sym">.</span><span class="hl kwc">BufferedOutputStream</span>

<span class="hl kwa">object</span> mandelbrot <span class="hl sym">{</span> 
   <span class="hl kwa">def</span> main<span class="hl sym">(</span>args<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span><span class="hl kwc">String</span><span class="hl sym">]) = {</span>
      <span class="hl kwa">val</span> side <span class="hl sym">=</span> <span class="hl kwc">Integer</span><span class="hl sym">.</span>parseInt<span class="hl sym">(</span>args<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">))</span>
      <span class="hl kwa">val</span> limitSquared <span class="hl sym">=</span> <span class="hl num">4.0</span>
      <span class="hl kwa">val</span> max <span class="hl sym">=</span> <span class="hl num">50</span>
      <span class="hl kwa">var</span> bits <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwa">var</span> bitnum <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwa">val</span> w <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwc">BufferedOutputStream</span><span class="hl sym">(</span><span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">)</span>

      Console<span class="hl sym">.</span>println<span class="hl sym">(</span><span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">+</span> side <span class="hl sym">+</span> <span class="hl str">&quot; &quot;</span> <span class="hl sym">+</span> side<span class="hl sym">)</span>

      <span class="hl kwa">var</span> y <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwa">while</span> <span class="hl sym">(</span>y <span class="hl sym">&lt;</span> side<span class="hl sym">){</span>

         <span class="hl kwa">var</span> x <span class="hl sym">=</span> <span class="hl num">0</span>
         <span class="hl kwa">while</span> <span class="hl sym">(</span>x <span class="hl sym">&lt;</span> side<span class="hl sym">){</span>

            <span class="hl kwa">val</span> cr <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> x <span class="hl sym">/</span> side <span class="hl sym">-</span> <span class="hl num">1.5</span>
            <span class="hl kwa">val</span> ci <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> y <span class="hl sym">/</span> side <span class="hl sym">-</span> <span class="hl num">1.0</span>

            <span class="hl kwa">var</span> zr <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span> <span class="hl kwa">var</span> zi <span class="hl sym">=</span> <span class="hl num">0.0</span>
            <span class="hl kwa">var</span> tr <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span> <span class="hl kwa">var</span> ti <span class="hl sym">=</span> <span class="hl num">0.0</span>

            <span class="hl kwa">var</span> j <span class="hl sym">=</span> max
            <span class="hl kwa">do</span> <span class="hl sym">{</span>
               zi <span class="hl sym">=</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> zr <span class="hl sym">*</span> zi <span class="hl sym">+</span> ci
               zr <span class="hl sym">=</span> tr <span class="hl sym">-</span> ti <span class="hl sym">+</span> cr
               ti <span class="hl sym">=</span> zi<span class="hl sym">*</span>zi
               tr <span class="hl sym">=</span> zr<span class="hl sym">*</span>zr

               j <span class="hl sym">=</span> j <span class="hl sym">-</span> <span class="hl num">1</span>
            <span class="hl sym">}</span> <span class="hl kwa">while</span> <span class="hl sym">(!(</span>tr <span class="hl sym">+</span> ti <span class="hl sym">&gt;</span> limitSquared<span class="hl sym">) &amp;&amp;</span> j <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">)</span>


            bits <span class="hl sym">=</span> bits <span class="hl sym">&lt;&lt;</span> <span class="hl num">1</span>
            <span class="hl kwa">if</span> <span class="hl sym">(!(</span>tr <span class="hl sym">+</span> ti <span class="hl sym">&gt;</span> limitSquared<span class="hl sym">))</span> bits <span class="hl sym">=</span> bits <span class="hl sym">+</span> <span class="hl num">1</span>
            bitnum <span class="hl sym">=</span> bitnum <span class="hl sym">+</span> <span class="hl num">1</span>

            <span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">==</span> side <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">){</span>
               bits <span class="hl sym">=</span> bits <span class="hl sym">&lt;&lt; (</span><span class="hl num">8</span> <span class="hl sym">-</span> bitnum<span class="hl sym">)</span>
               bitnum <span class="hl sym">=</span> <span class="hl num">8</span>
            <span class="hl sym">}</span>

            <span class="hl kwa">if</span> <span class="hl sym">(</span>bitnum <span class="hl sym">==</span> <span class="hl num">8</span><span class="hl sym">){</span>
               w<span class="hl sym">.</span>write<span class="hl sym">(</span>bits<span class="hl sym">.</span>toByte<span class="hl sym">)</span>
               bits <span class="hl sym">=</span> <span class="hl num">0</span>
               bitnum <span class="hl sym">=</span> <span class="hl num">0</span>
            <span class="hl sym">}</span>

            x <span class="hl sym">=</span> x <span class="hl sym">+</span> <span class="hl num">1</span>
         <span class="hl sym">}</span>
         y <span class="hl sym">=</span> y <span class="hl sym">+</span> <span class="hl num">1</span>
      <span class="hl sym">}</span>
      w<span class="hl sym">.</span>close
   <span class="hl sym">}</span> 
<span class="hl sym">}</span>
