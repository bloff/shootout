<span class="hl slc">-- The Great Computer Language Shootout</span>
<span class="hl slc">-- http://shootout.alioth.debian.org/</span>
<span class="hl slc">-- Contributed by Greg Buchholz</span>

import Data.Array.Base
import System<span class="hl sym">(</span>getArgs<span class="hl sym">)</span>
import Numeric

main <span class="hl sym">=</span> do
        <span class="hl sym">[</span>arg<span class="hl sym">] &lt;-</span> getArgs
        let n <span class="hl sym">= (</span>read arg<span class="hl sym">) -</span> <span class="hl num">1</span>
        let init <span class="hl sym">=</span> listArray <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span>n<span class="hl sym">) (</span>repeat <span class="hl num">1.0</span><span class="hl sym">)</span>
        let <span class="hl sym">(</span>v<span class="hl sym">:</span>u<span class="hl sym">:</span>rest<span class="hl sym">) =</span> drop <span class="hl num">19</span> $ iterate <span class="hl sym">(</span>eval_AtA_times_u n<span class="hl sym">)</span> init
        let vBv <span class="hl sym">=</span> sum <span class="hl sym">[(</span>u<span class="hl sym">!</span>i<span class="hl sym">)*(</span>v<span class="hl sym">!</span>i<span class="hl sym">) |</span>i<span class="hl sym">&lt;-[</span><span class="hl num">0</span>..n<span class="hl sym">]]</span>
        let vv  <span class="hl sym">=</span> sum <span class="hl sym">[(</span>v<span class="hl sym">!</span>i<span class="hl sym">)*(</span>v<span class="hl sym">!</span>i<span class="hl sym">) |</span>i<span class="hl sym">&lt;-[</span><span class="hl num">0</span>..n<span class="hl sym">]]</span>
        putStrLn $ showFFloat <span class="hl sym">(</span>Just <span class="hl num">9</span><span class="hl sym">) (</span>sqrt <span class="hl sym">(</span>vBv<span class="hl sym">/</span>vv<span class="hl sym">))</span> <span class="hl str">&quot;&quot;</span>

eval_AtA_times_u n u <span class="hl sym">=</span> eval_At_times_u n v
    where v <span class="hl sym">=</span> eval_A_times_u n u

eval_A x y <span class="hl sym">=</span> <span class="hl num">1.0</span><span class="hl sym">/((</span>i<span class="hl sym">+</span>j<span class="hl sym">)*(</span>i<span class="hl sym">+</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)/</span><span class="hl num">2</span><span class="hl sym">+</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
    where i <span class="hl sym">=</span> fromIntegral x
          j <span class="hl sym">=</span> fromIntegral y

eval_A_times_u <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> UArray Int Double <span class="hl sym">-&gt;</span> UArray Int Double
eval_A_times_u n u <span class="hl sym">=</span> unsafeAccumArray <span class="hl sym">(+)</span> <span class="hl num">0</span> <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span>n<span class="hl sym">)</span>
                     <span class="hl sym">[(</span>i<span class="hl sym">,(</span>eval_A i j<span class="hl sym">) *</span> u<span class="hl sym">!</span>j<span class="hl sym">)|</span>i<span class="hl sym">&lt;-[</span><span class="hl num">0</span>..n<span class="hl sym">],</span> j<span class="hl sym">&lt;-[</span><span class="hl num">0</span>..n<span class="hl sym">]]</span>

eval_At_times_u <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> UArray Int Double <span class="hl sym">-&gt;</span> UArray Int Double
eval_At_times_u n u <span class="hl sym">=</span> unsafeAccumArray <span class="hl sym">(+)</span> <span class="hl num">0</span> <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span>n<span class="hl sym">)</span>
                      <span class="hl sym">[(</span>i<span class="hl sym">,(</span>eval_A j i<span class="hl sym">) *</span> u<span class="hl sym">!</span>j<span class="hl sym">)|</span>i<span class="hl sym">&lt;-[</span><span class="hl num">0</span>..n<span class="hl sym">],</span> j<span class="hl sym">&lt;-[</span><span class="hl num">0</span>..n<span class="hl sym">]]</span>
