<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">% contributed by Glendon Holst</span>


<span class="hl sym">:-</span> module revcomp<span class="hl sym">.</span>
<span class="hl sym">:-</span> interface<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module io<span class="hl sym">.</span>

<span class="hl sym">:-</span> pred main<span class="hl sym">(</span>io<span class="hl sym">::</span>di<span class="hl sym">,</span> io<span class="hl sym">::</span>uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>



<span class="hl sym">:-</span> implementation<span class="hl sym">.</span>

<span class="hl sym">:-</span> import_module solutions<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module array<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module list<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module assoc_list<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module pair<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module int<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module bool<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module char<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module string<span class="hl sym">.</span>
<span class="hl sym">:-</span> import_module exception<span class="hl sym">.</span>




main<span class="hl sym">(!</span>IO<span class="hl sym">) :-</span>
   create_translation_table<span class="hl sym">(</span>TranslationTable<span class="hl sym">),</span>
   process_sequence<span class="hl sym">(</span>TranslationTable<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> array<span class="hl sym">.</span>init<span class="hl sym">(</span><span class="hl num">82</span><span class="hl sym">,</span> <span class="hl str">' '</span><span class="hl sym">), !</span>IO<span class="hl sym">).</span>



<span class="hl sym">:-</span> pred create_translation_table<span class="hl sym">(</span>array<span class="hl sym">(</span>char<span class="hl sym">)::</span>out<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>

create_translation_table<span class="hl sym">(</span>TT<span class="hl sym">) :-</span>
   TT_AL <span class="hl sym">= [</span> <span class="hl str">'A'</span><span class="hl sym">-</span><span class="hl str">'T'</span><span class="hl sym">,</span> <span class="hl str">'C'</span><span class="hl sym">-</span><span class="hl str">'G'</span><span class="hl sym">,</span> <span class="hl str">'B'</span><span class="hl sym">-</span><span class="hl str">'V'</span><span class="hl sym">,</span> <span class="hl str">'D'</span><span class="hl sym">-</span><span class="hl str">'H'</span><span class="hl sym">,</span> <span class="hl str">'K'</span><span class="hl sym">-</span><span class="hl str">'M'</span><span class="hl sym">,</span> <span class="hl str">'R'</span><span class="hl sym">-</span><span class="hl str">'Y'</span><span class="hl sym">],</span>
   init_translation_table<span class="hl sym">(</span>TT_AL<span class="hl sym">,</span> array<span class="hl sym">.</span>init<span class="hl sym">(</span><span class="hl num">256</span><span class="hl sym">,</span> <span class="hl str">' '</span><span class="hl sym">),</span> TT<span class="hl sym">).</span>



<span class="hl sym">:-</span> pred init_translation_table<span class="hl sym">(</span>assoc_list<span class="hl sym">(</span>char<span class="hl sym">,</span> char<span class="hl sym">)::</span>in<span class="hl sym">,</span>
   array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_di<span class="hl sym">,</span> array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>

init_translation_table<span class="hl sym">(</span>TT_AL<span class="hl sym">,</span> TT0<span class="hl sym">,</span> TT<span class="hl sym">) :-</span>
   init_translation_table_1<span class="hl sym">(</span>array<span class="hl sym">.</span>size<span class="hl sym">(</span>TT0<span class="hl sym">) -</span> <span class="hl num">1</span><span class="hl sym">,</span> TT0<span class="hl sym">,</span> TT1<span class="hl sym">),</span>
   init_translation_table_2<span class="hl sym">(</span>TT_AL<span class="hl sym">,</span> TT1<span class="hl sym">,</span> TT<span class="hl sym">).</span>




<span class="hl sym">:-</span> pred init_translation_table_1<span class="hl sym">(</span>int<span class="hl sym">::</span>in<span class="hl sym">,</span>
   array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_di<span class="hl sym">,</span> array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>

init_translation_table_1<span class="hl sym">(</span>N<span class="hl sym">,</span> TT0<span class="hl sym">,</span> TT<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   N <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
   TT1 <span class="hl sym">=</span> TT0 ^ elem<span class="hl sym">(</span>N<span class="hl sym">) :=</span> char<span class="hl sym">.</span>to_upper<span class="hl sym">(</span>char<span class="hl sym">.</span>det_from_int<span class="hl sym">(</span>N<span class="hl sym">)),</span>
   init_translation_table_1<span class="hl sym">(</span>N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> TT1<span class="hl sym">,</span> TT<span class="hl sym">)</span>
<span class="hl sym">;</span>
   TT <span class="hl sym">=</span> TT0 ^ elem<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) :=</span> char<span class="hl sym">.</span>det_from_int<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>
<span class="hl sym">).</span>



<span class="hl sym">:-</span> pred init_translation_table_2<span class="hl sym">(</span>assoc_list<span class="hl sym">(</span>char<span class="hl sym">,</span> char<span class="hl sym">)::</span>in<span class="hl sym">,</span>
   array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_di<span class="hl sym">,</span> array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>

init_translation_table_2<span class="hl sym">(</span>TT_AL<span class="hl sym">,</span> TT0<span class="hl sym">,</span> TT<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   TT_AL <span class="hl sym">= [</span>K<span class="hl sym">-</span>V <span class="hl sym">|</span> TT_ALs<span class="hl sym">] -&gt;</span>
   TT1 <span class="hl sym">=</span> TT0 ^ elem<span class="hl sym">(</span>char<span class="hl sym">.</span>to_int<span class="hl sym">(</span>K<span class="hl sym">)) :=</span> V<span class="hl sym">,</span>
   TT2 <span class="hl sym">=</span> TT1 ^ elem<span class="hl sym">(</span>char<span class="hl sym">.</span>to_int<span class="hl sym">(</span>char<span class="hl sym">.</span>to_lower<span class="hl sym">(</span>K<span class="hl sym">))) :=</span> V<span class="hl sym">,</span>
   TT3 <span class="hl sym">=</span> TT2 ^ elem<span class="hl sym">(</span>char<span class="hl sym">.</span>to_int<span class="hl sym">(</span>V<span class="hl sym">)) :=</span> K<span class="hl sym">,</span>
   TT4 <span class="hl sym">=</span> TT3 ^ elem<span class="hl sym">(</span>char<span class="hl sym">.</span>to_int<span class="hl sym">(</span>char<span class="hl sym">.</span>to_lower<span class="hl sym">(</span>V<span class="hl sym">))) :=</span> K<span class="hl sym">,</span>
   init_translation_table_2<span class="hl sym">(</span>TT_ALs<span class="hl sym">,</span> TT4<span class="hl sym">,</span> TT<span class="hl sym">)</span>
<span class="hl sym">;</span>
   TT <span class="hl sym">=</span> TT0
<span class="hl sym">).</span>



<span class="hl sym">:-</span> pred process_sequence<span class="hl sym">(</span>array<span class="hl sym">(</span>char<span class="hl sym">)::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span> array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_di<span class="hl sym">,</span> io<span class="hl sym">::</span>di<span class="hl sym">,</span> io<span class="hl sym">::</span>uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>

process_sequence<span class="hl sym">(</span>TTable<span class="hl sym">,</span> Buff0Len<span class="hl sym">,</span> Buff0<span class="hl sym">, !</span>IO<span class="hl sym">) :-</span>
   io<span class="hl sym">.</span>read_line_as_string<span class="hl sym">(</span>IOResult<span class="hl sym">, !</span>IO<span class="hl sym">),</span>
<span class="hl sym">(</span>
   IOResult <span class="hl sym">=</span> ok<span class="hl sym">(</span>LineIn<span class="hl sym">) -&gt;</span>
   <span class="hl sym">(</span>
      Line <span class="hl sym">=</span> string<span class="hl sym">.</span>chomp<span class="hl sym">(</span>LineIn<span class="hl sym">),</span>
      LineLen <span class="hl sym">=</span> string<span class="hl sym">.</span>length<span class="hl sym">(</span>Line<span class="hl sym">),</span>
      <span class="hl sym">(</span>
         LineLen <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
         <span class="hl sym">(</span>
            Line ^ unsafe_elem<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) = (</span><span class="hl str">'&gt;'</span><span class="hl sym">) -&gt;</span>
            <span class="hl sym">(</span>
               Buff0Len <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
               print_reversed<span class="hl sym">(</span>Buff0Len <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Buff0<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">, !</span>IO<span class="hl sym">),</span>
               io<span class="hl sym">.</span>flush_output<span class="hl sym">(!</span>IO<span class="hl sym">)</span>
            <span class="hl sym">;</span>
               <span class="hl kwa">true</span>
            <span class="hl sym">),</span>
            io<span class="hl sym">.</span>write_string<span class="hl sym">(</span>Line<span class="hl sym">, !</span>IO<span class="hl sym">),</span> io<span class="hl sym">.</span><span class="hl kwa">nl</span><span class="hl sym">(!</span>IO<span class="hl sym">),</span>
            process_sequence<span class="hl sym">(</span>TTable<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> Buff0<span class="hl sym">, !</span>IO<span class="hl sym">)</span>
         <span class="hl sym">;</span>
            NewBuffLen <span class="hl sym">=</span> Buff0Len <span class="hl sym">+</span> LineLen<span class="hl sym">,</span>
            <span class="hl sym">(</span>
               NewBuffLen <span class="hl sym">&gt;</span> array<span class="hl sym">.</span>size<span class="hl sym">(</span>Buff0<span class="hl sym">) -&gt;</span>
                  Buff1 <span class="hl sym">=</span> array<span class="hl sym">.</span>resize<span class="hl sym">(</span>Buff0<span class="hl sym">,</span> <span class="hl num">2</span> <span class="hl sym">*</span> NewBuffLen <span class="hl sym">,</span> <span class="hl str">' '</span><span class="hl sym">)</span>
               <span class="hl sym">;</span>
                  Buff1 <span class="hl sym">=</span> Buff0
            <span class="hl sym">),</span>
            translate<span class="hl sym">(</span>TTable<span class="hl sym">,</span> Line<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> LineLen<span class="hl sym">,</span> Buff1<span class="hl sym">,</span> Buff0Len<span class="hl sym">,</span> Buff<span class="hl sym">),</span>
            process_sequence<span class="hl sym">(</span>TTable<span class="hl sym">,</span> NewBuffLen<span class="hl sym">,</span> Buff<span class="hl sym">, !</span>IO<span class="hl sym">)</span>
         <span class="hl sym">)</span>
      <span class="hl sym">;</span>
            process_sequence<span class="hl sym">(</span>TTable<span class="hl sym">,</span> Buff0Len<span class="hl sym">,</span> Buff0<span class="hl sym">, !</span>IO<span class="hl sym">)</span>
      <span class="hl sym">)</span>
   <span class="hl sym">)</span>
<span class="hl sym">;</span>
   <span class="hl sym">(</span>
      Buff0Len <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
      print_reversed<span class="hl sym">(</span>Buff0Len <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Buff0<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">, !</span>IO<span class="hl sym">),</span>
      io<span class="hl sym">.</span>flush_output<span class="hl sym">(!</span>IO<span class="hl sym">)</span>
   <span class="hl sym">;</span>
      <span class="hl kwa">true</span>
   <span class="hl sym">)</span>
<span class="hl sym">).</span>



<span class="hl sym">:-</span> pred translate<span class="hl sym">(</span>array<span class="hl sym">(</span>char<span class="hl sym">)::</span>in<span class="hl sym">,</span> string<span class="hl sym">::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span>
   array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_di<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span> array<span class="hl sym">(</span>char<span class="hl sym">)::</span>array_uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>

translate<span class="hl sym">(</span>TTable<span class="hl sym">,</span> Line<span class="hl sym">,</span> Idx<span class="hl sym">,</span> Len<span class="hl sym">,</span> Buff0<span class="hl sym">,</span> BIdx<span class="hl sym">,</span> Buff<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   Idx <span class="hl sym">&lt;</span> Len <span class="hl sym">-&gt;</span>
   TC <span class="hl sym">= (</span>TTable ^ elem<span class="hl sym">(</span>char<span class="hl sym">.</span>to_int<span class="hl sym">(</span>Line ^ unsafe_elem<span class="hl sym">(</span>Idx<span class="hl sym">)))),</span>
   Buff1 <span class="hl sym">= (</span>Buff0 ^ elem<span class="hl sym">(</span>BIdx<span class="hl sym">) :=</span> TC<span class="hl sym">),</span>
   translate<span class="hl sym">(</span>TTable<span class="hl sym">,</span> Line<span class="hl sym">,</span> Idx <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Len<span class="hl sym">,</span> Buff1<span class="hl sym">,</span> BIdx <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Buff<span class="hl sym">)</span>
<span class="hl sym">;</span>
   Buff <span class="hl sym">=</span> Buff0
<span class="hl sym">).</span>



<span class="hl sym">:-</span> pred print_reversed<span class="hl sym">(</span>int<span class="hl sym">::</span>in<span class="hl sym">,</span> array<span class="hl sym">(</span>char<span class="hl sym">)::</span>in<span class="hl sym">,</span> int<span class="hl sym">::</span>in<span class="hl sym">,</span> io<span class="hl sym">::</span>di<span class="hl sym">,</span> io<span class="hl sym">::</span>uo<span class="hl sym">)</span> <span class="hl kwa">is</span> det<span class="hl sym">.</span>

print_reversed<span class="hl sym">(</span>Idx<span class="hl sym">,</span> Buff<span class="hl sym">,</span> CPos0<span class="hl sym">, !</span>IO<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
   Idx <span class="hl sym">&gt;=</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
   C <span class="hl sym">=</span> Buff ^ elem<span class="hl sym">(</span>Idx<span class="hl sym">),</span>
   <span class="hl sym">(</span>CPos0 <span class="hl sym">=</span> <span class="hl num">60</span> <span class="hl sym">-&gt;</span> io<span class="hl sym">.</span><span class="hl kwa">nl</span><span class="hl sym">(!</span>IO<span class="hl sym">),</span> CPos <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">;</span> CPos <span class="hl sym">=</span> CPos0 <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">),</span>
   io<span class="hl sym">.</span>write_char<span class="hl sym">(</span>C<span class="hl sym">, !</span>IO<span class="hl sym">),</span>
   print_reversed<span class="hl sym">(</span>Idx <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Buff<span class="hl sym">,</span> CPos<span class="hl sym">, !</span>IO<span class="hl sym">)</span>
<span class="hl sym">;</span>
   io<span class="hl sym">.</span><span class="hl kwa">nl</span><span class="hl sym">(!</span>IO<span class="hl sym">)</span>
<span class="hl sym">).</span>


