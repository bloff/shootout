<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Daniel Green, 2010-04-30</span>
<span class="hl slc"># based on python 3 #3</span>


<span class="hl kwa">use</span> <span class="hl num">5.10.1</span><span class="hl sym">;</span>
<span class="hl kwa">use</span> <span class="hl kwd">warnings</span><span class="hl sym">;</span>
<span class="hl kwa">use</span> <span class="hl kwd">strict</span><span class="hl sym">;</span>
<span class="hl kwa">use</span> <span class="hl kwd">integer</span><span class="hl sym">;</span>
<span class="hl kwa">use</span> List<span class="hl sym">::</span>Util <span class="hl kwd">qw</span><span class="hl sym">(</span>min<span class="hl sym">);</span>

<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$w</span><span class="hl sym">,</span> <span class="hl kwb">$h</span><span class="hl sym">) = (</span><span class="hl num">5</span><span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">$dir_no</span> <span class="hl sym">=</span> <span class="hl num">6</span><span class="hl sym">;</span>
<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$S</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">) = (</span><span class="hl kwb">$w</span> <span class="hl sym">*</span> <span class="hl kwb">$h</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">$SE</span> <span class="hl sym">=</span> <span class="hl kwb">$S</span> <span class="hl sym">+ (</span><span class="hl kwb">$E</span> <span class="hl sym">/</span> <span class="hl num">2</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">$SW</span> <span class="hl sym">=</span> <span class="hl kwb">$SE</span> <span class="hl sym">-</span> <span class="hl kwb">$E</span><span class="hl sym">;</span>
<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$W</span><span class="hl sym">,</span> <span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$NE</span><span class="hl sym">) = (-</span><span class="hl kwb">$E</span><span class="hl sym">, -</span><span class="hl kwb">$SE</span><span class="hl sym">, -</span><span class="hl kwb">$SW</span><span class="hl sym">);</span>

<span class="hl kwc">my</span> <span class="hl kwb">%rd</span> <span class="hl sym">= (</span><span class="hl kwb">$E</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$NE</span><span class="hl sym">,</span> <span class="hl kwb">$NE</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$NW</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$W</span><span class="hl sym">,</span> <span class="hl kwb">$W</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$SW</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$SE</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$E</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">%fd</span> <span class="hl sym">= (</span><span class="hl kwb">$E</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$NE</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$SE</span><span class="hl sym">,</span> <span class="hl kwb">$NW</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$SW</span><span class="hl sym">,</span> <span class="hl kwb">$W</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$W</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span> <span class="hl sym">=&gt;</span> <span class="hl kwb">$NE</span><span class="hl sym">);</span>

<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$na</span><span class="hl sym">,</span> <span class="hl kwb">$nb</span><span class="hl sym">,</span> <span class="hl kwb">$nc</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$board</span><span class="hl sym">,</span> <span class="hl kwb">$cti</span><span class="hl sym">,</span> <span class="hl kwb">$pieces</span><span class="hl sym">) =</span> <span class="hl kwd">get_puzzle</span><span class="hl sym">();</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;fps</span> <span class="hl sym">=</span> <span class="hl kwd">get_footprints</span><span class="hl sym">(</span><span class="hl kwb">$board</span><span class="hl sym">,</span> <span class="hl kwb">$cti</span><span class="hl sym">,</span> <span class="hl kwb">$pieces</span><span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;se_nh</span> <span class="hl sym">=</span> <span class="hl kwd">get_senh</span><span class="hl sym">(</span><span class="hl kwb">$board</span><span class="hl sym">,</span> <span class="hl kwb">$cti</span><span class="hl sym">);</span>

<span class="hl kwc">my</span> <span class="hl kwb">%free</span> <span class="hl sym">=</span> map <span class="hl sym">{</span> <span class="hl kwb">$_</span> <span class="hl sym">=&gt;</span> undef <span class="hl sym">}</span> <span class="hl num">0</span> <span class="hl sym">..</span> scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$board</span><span class="hl sym">} -</span> <span class="hl num">1</span><span class="hl sym">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;curr_board</span> <span class="hl sym">= (-</span><span class="hl num">1</span><span class="hl sym">)</span> x scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$board</span><span class="hl sym">};</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;pieces_left</span> <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl sym">..</span> scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$pieces</span><span class="hl sym">} -</span> <span class="hl num">1</span><span class="hl sym">;</span>
<span class="hl kwc">my</span> <span class="hl kwb">&#64;solutions</span> <span class="hl sym">= ();</span>
<span class="hl kwc">my</span> <span class="hl kwb">$needed</span> <span class="hl sym">=</span> <span class="hl kwb">$ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">];</span>

<span class="hl kwd">solve</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> \<span class="hl kwb">%free</span><span class="hl sym">,</span> \<span class="hl kwb">&#64;pieces_left</span><span class="hl sym">);</span>
<span class="hl kwb">&#64;solutions</span> <span class="hl sym">=</span> sort <span class="hl kwb">&#64;solutions</span><span class="hl sym">;</span>

say scalar <span class="hl kwb">&#64;solutions</span><span class="hl sym">,</span>  <span class="hl str">' solutions found'</span><span class="hl sym">;</span>
<span class="hl kwd">print_board</span><span class="hl sym">(</span><span class="hl kwb">$solutions</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]);</span>
<span class="hl kwd">print_board</span><span class="hl sym">(</span><span class="hl kwb">$solutions</span><span class="hl sym">[-</span><span class="hl num">1</span><span class="hl sym">]);</span>
<span class="hl kwc">print</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>


<span class="hl kwa">sub</span> rotate <span class="hl sym">{</span>
    <span class="hl kwa">return</span> <span class="hl sym">[</span>map <span class="hl sym">{</span><span class="hl kwb">$rd</span><span class="hl sym">{</span><span class="hl kwb">$_</span><span class="hl sym">}}</span> &#64;<span class="hl sym">{</span><span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]}];</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> flip <span class="hl sym">{</span>
    <span class="hl kwa">return</span> <span class="hl sym">[</span>map <span class="hl sym">{</span><span class="hl kwb">$fd</span><span class="hl sym">{</span><span class="hl kwb">$_</span><span class="hl sym">}}</span> &#64;<span class="hl sym">{</span><span class="hl kwb">$_</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]}];</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> permute <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$ido</span><span class="hl sym">,</span> <span class="hl kwb">$r_ido</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    <span class="hl kwc">my</span> <span class="hl kwb">&#64;ps</span> <span class="hl sym">= (</span><span class="hl kwb">$ido</span><span class="hl sym">);</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$r</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> <span class="hl kwb">$dir_no</span> <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) {</span>
        push <span class="hl kwb">&#64;ps</span><span class="hl sym">,</span> <span class="hl kwd">rotate</span><span class="hl sym">(</span><span class="hl kwb">$ps</span><span class="hl sym">[-</span><span class="hl num">1</span><span class="hl sym">]);</span>

        <span class="hl kwa">if</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$ido</span><span class="hl sym">} ~~</span> &#64;<span class="hl sym">{</span><span class="hl kwb">$r_ido</span><span class="hl sym">}) {</span>
            <span class="hl kwc">my</span> <span class="hl kwb">$end</span> <span class="hl sym">=</span> <span class="hl kwd">min</span><span class="hl sym">(</span>scalar <span class="hl kwb">&#64;ps</span><span class="hl sym">,</span> <span class="hl kwd">int</span><span class="hl sym">(</span><span class="hl kwb">$dir_no</span><span class="hl sym">/</span><span class="hl num">2</span><span class="hl sym">));</span>
            <span class="hl kwb">&#64;ps</span> <span class="hl sym">=</span> <span class="hl kwb">&#64;ps</span><span class="hl sym">[</span><span class="hl num">0</span> <span class="hl sym">..</span> <span class="hl kwb">$end</span><span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">];</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
    
    push <span class="hl kwb">&#64;ps</span><span class="hl sym">,</span> map <span class="hl sym">{</span> <span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl kwb">$_</span><span class="hl sym">) }</span> <span class="hl kwb">&#64;ps</span><span class="hl sym">;</span>

    <span class="hl kwa">return</span> \<span class="hl kwb">&#64;ps</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> convert <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$ido</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    <span class="hl kwc">my</span> <span class="hl kwb">&#64;out</span> <span class="hl sym">= (</span><span class="hl num">0</span><span class="hl sym">);</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$o</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$ido</span><span class="hl sym">}) {</span>
        push <span class="hl kwb">&#64;out</span><span class="hl sym">,</span> <span class="hl kwb">$out</span><span class="hl sym">[-</span><span class="hl num">1</span><span class="hl sym">] +</span> <span class="hl kwb">$o</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>
    
    <span class="hl kwc">my</span> <span class="hl kwb">%unique</span><span class="hl sym">;</span>
    <span class="hl kwa">return</span> <span class="hl sym">[</span>grep <span class="hl sym">{ !</span><span class="hl kwb">$unique</span><span class="hl sym">{</span><span class="hl kwb">$_</span><span class="hl sym">}++ }</span> <span class="hl kwb">&#64;out</span><span class="hl sym">];</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> get_footprints <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$bd</span><span class="hl sym">,</span> <span class="hl kwb">$ct</span><span class="hl sym">,</span> <span class="hl kwb">$ps</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    <span class="hl kwc">my</span> <span class="hl kwb">&#64;fp</span><span class="hl sym">;</span>
    <span class="hl kwa">foreach</span> <span class="hl kwc">my</span> <span class="hl kwb">$p</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$ps</span><span class="hl sym">} -</span> <span class="hl num">1</span><span class="hl sym">) {</span>
        <span class="hl kwa">foreach</span> <span class="hl kwc">my</span> <span class="hl kwb">$ci</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$bd</span><span class="hl sym">} -</span> <span class="hl num">1</span><span class="hl sym">) {</span>
            <span class="hl kwb">$fp</span><span class="hl sym">[</span><span class="hl kwb">$ci</span><span class="hl sym">]-&gt;[</span><span class="hl kwb">$p</span><span class="hl sym">] = [];</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>

    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$c</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$bd</span><span class="hl sym">}) {</span>
        <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">my</span> <span class="hl kwb">$pi</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwb">$pi</span> <span class="hl sym">&lt;</span> scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$ps</span><span class="hl sym">};</span> <span class="hl kwb">$pi</span><span class="hl sym">++) {</span>
            <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$pp</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$ps</span><span class="hl sym">-&gt;[</span><span class="hl kwb">$pi</span><span class="hl sym">]}) {</span>
                <span class="hl kwc">my</span> <span class="hl kwb">%f</span> <span class="hl sym">= ();</span>
                <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$o</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$pp</span><span class="hl sym">}) {</span>
                    <span class="hl kwa">if</span> <span class="hl sym">(</span>exists <span class="hl kwb">$ct</span><span class="hl sym">-&gt;{</span><span class="hl kwb">$c</span> <span class="hl sym">+</span> <span class="hl kwb">$o</span><span class="hl sym">}) {</span>
                        <span class="hl kwb">$f</span><span class="hl sym">{</span><span class="hl kwb">$ct</span><span class="hl sym">-&gt;{</span><span class="hl kwb">$c</span> <span class="hl sym">+</span> <span class="hl kwb">$o</span><span class="hl sym">}}++;</span>
                    <span class="hl sym">}</span>
                <span class="hl sym">}</span>

                <span class="hl kwa">if</span> <span class="hl sym">(</span>scalar keys <span class="hl kwb">%f</span> <span class="hl sym">==</span> <span class="hl num">5</span><span class="hl sym">) {</span>
                    push &#64;<span class="hl sym">{</span><span class="hl kwb">$fp</span><span class="hl sym">[</span><span class="hl kwd">min</span><span class="hl sym">(</span>keys <span class="hl kwb">%f</span><span class="hl sym">)]-&gt;[</span><span class="hl kwb">$pi</span><span class="hl sym">]}, [</span>keys <span class="hl kwb">%f</span><span class="hl sym">];</span>
                <span class="hl sym">}</span>
            <span class="hl sym">}</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
    
    <span class="hl kwa">return</span> <span class="hl kwb">&#64;fp</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> get_senh <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$bd</span><span class="hl sym">,</span> <span class="hl kwb">$ct</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>
    
    <span class="hl kwc">my</span> <span class="hl kwb">&#64;se_nh2</span> <span class="hl sym">= ();</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$c</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$bd</span><span class="hl sym">}) {</span>
        <span class="hl kwc">my</span> <span class="hl kwb">%f</span> <span class="hl sym">= ();</span>
        <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$o</span> <span class="hl sym">(</span><span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">) {</span>
            <span class="hl kwa">if</span> <span class="hl sym">(</span>exists <span class="hl kwb">$ct</span><span class="hl sym">-&gt;{</span><span class="hl kwb">$c</span> <span class="hl sym">+</span> <span class="hl kwb">$o</span><span class="hl sym">}) {</span>
                <span class="hl kwb">$f</span><span class="hl sym">{</span><span class="hl kwb">$ct</span><span class="hl sym">-&gt;{</span><span class="hl kwb">$c</span> <span class="hl sym">+</span> <span class="hl kwb">$o</span><span class="hl sym">}}++;</span>
            <span class="hl sym">}</span>
        <span class="hl sym">}</span>
        
        push <span class="hl kwb">&#64;se_nh2</span><span class="hl sym">,</span> \<span class="hl kwb">%f</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>
    
    <span class="hl kwa">return</span> <span class="hl kwb">&#64;se_nh2</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> get_puzzle <span class="hl sym">{</span>

    <span class="hl kwc">my</span> <span class="hl kwb">&#64;bd</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$y</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> <span class="hl kwb">$h</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
        <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$x</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> <span class="hl kwb">$w</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
            push <span class="hl kwb">&#64;bd</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">*</span><span class="hl kwb">$x</span> <span class="hl sym">+</span> <span class="hl kwb">$S</span><span class="hl sym">*</span><span class="hl kwb">$y</span> <span class="hl sym">+</span> <span class="hl kwb">$y%2</span><span class="hl sym">;</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>

    <span class="hl kwc">my</span> <span class="hl kwb">%ct</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$i</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> scalar <span class="hl kwb">&#64;bd</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
        <span class="hl kwb">$ct</span><span class="hl sym">{</span><span class="hl kwb">$bd</span><span class="hl sym">[</span><span class="hl kwb">$i</span><span class="hl sym">]} =</span> <span class="hl kwb">$i</span><span class="hl sym">;</span>
    <span class="hl sym">}</span>

    <span class="hl kwc">my</span> <span class="hl kwb">&#64;idos</span> <span class="hl sym">= ([</span><span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$SE</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span><span class="hl sym">,</span> <span class="hl kwb">$W</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$W</span><span class="hl sym">,</span> <span class="hl kwb">$W</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$W</span><span class="hl sym">,</span> <span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">,</span> <span class="hl kwb">$SW</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$NE</span><span class="hl sym">,</span> <span class="hl kwb">$W</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$NE</span><span class="hl sym">,</span> <span class="hl kwb">$NE</span><span class="hl sym">,</span> <span class="hl kwb">$W</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$NE</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$NE</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$SE</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">,</span> <span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$SE</span><span class="hl sym">],</span>
                <span class="hl sym">[</span><span class="hl kwb">$E</span><span class="hl sym">,</span> <span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$NW</span><span class="hl sym">,</span> <span class="hl kwb">$NW</span><span class="hl sym">]);</span>

    <span class="hl kwc">my</span> <span class="hl kwb">&#64;ps</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$p</span> <span class="hl sym">(</span>map <span class="hl sym">{</span> <span class="hl kwd">permute</span><span class="hl sym">(</span><span class="hl kwb">$_</span><span class="hl sym">,</span> <span class="hl kwb">$idos</span><span class="hl sym">[</span><span class="hl num">3</span><span class="hl sym">]) }</span> <span class="hl kwb">&#64;idos</span><span class="hl sym">) {</span>
        push <span class="hl kwb">&#64;ps</span><span class="hl sym">, [</span>map <span class="hl sym">{</span><span class="hl kwd">convert</span><span class="hl sym">(</span><span class="hl kwb">$_</span><span class="hl sym">)}</span> &#64;<span class="hl sym">{</span><span class="hl kwb">$p</span><span class="hl sym">}];</span>
    <span class="hl sym">}</span>
    
    <span class="hl kwa">return</span> <span class="hl sym">(</span>\<span class="hl kwb">&#64;bd</span><span class="hl sym">,</span> \<span class="hl kwb">%ct</span><span class="hl sym">,</span> \<span class="hl kwb">&#64;ps</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> print_board <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$bd</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

    <span class="hl kwc">print</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$y</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> <span class="hl kwb">$h</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
        <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$x</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">..</span> <span class="hl kwb">$w</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) {</span>
            <span class="hl kwc">print</span> <span class="hl kwd">substr</span><span class="hl sym">(</span><span class="hl kwb">$bd</span><span class="hl sym">,</span> <span class="hl kwb">$x</span> <span class="hl sym">+</span> <span class="hl kwb">$y</span> <span class="hl sym">*</span> <span class="hl kwb">$w</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">) .</span> <span class="hl str">' '</span><span class="hl sym">;</span>
        <span class="hl sym">}</span>
        
        <span class="hl kwc">print</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
        
        <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$y</span> <span class="hl sym">%</span> <span class="hl num">2</span> <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">) {</span>
            <span class="hl kwc">print</span> <span class="hl str">' '</span><span class="hl sym">;</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> solve <span class="hl sym">{</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$i_min</span><span class="hl sym">,</span> <span class="hl kwb">$free</span><span class="hl sym">,</span> <span class="hl kwb">$pieces_left</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>
    
    <span class="hl kwc">my</span> <span class="hl kwb">$fp_i_cands</span> <span class="hl sym">=</span> <span class="hl kwb">$fps</span><span class="hl sym">[</span><span class="hl kwb">$i_min</span><span class="hl sym">];</span>
    
    <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$p</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$pieces_left</span><span class="hl sym">}) {</span>
        <span class="hl kwc">my</span> <span class="hl kwb">$fp_cands</span> <span class="hl sym">=</span> <span class="hl kwb">$fp_i_cands</span><span class="hl sym">-&gt;[</span><span class="hl kwb">$p</span><span class="hl sym">];</span>
        <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$fpa</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$fp_cands</span><span class="hl sym">}) {</span>
            
            <span class="hl kwb">$na</span> <span class="hl sym">=</span> scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$fpa</span><span class="hl sym">};</span>
            <span class="hl kwb">$nb</span> <span class="hl sym">=</span> scalar keys <span class="hl sym">%{</span><span class="hl kwb">$free</span><span class="hl sym">};</span>
            <span class="hl kwb">$nc</span> <span class="hl sym">=</span> scalar grep <span class="hl sym">{</span> exists <span class="hl kwb">$free</span><span class="hl sym">-&gt;{</span><span class="hl kwb">$_</span><span class="hl sym">} }</span> &#64;<span class="hl sym">{</span><span class="hl kwb">$fpa</span><span class="hl sym">};</span>

            <span class="hl kwa">if</span> <span class="hl sym">((</span><span class="hl kwb">$na</span> <span class="hl sym">==</span> <span class="hl kwb">$nc</span><span class="hl sym">) || (</span><span class="hl kwb">$na</span> <span class="hl sym">==</span> <span class="hl kwb">$nc</span> <span class="hl sym">&amp;&amp;</span> <span class="hl kwb">$nb</span> <span class="hl sym">==</span> <span class="hl kwb">$nc</span><span class="hl sym">)) {</span>
                <span class="hl kwa">for</span> <span class="hl kwc">my</span> <span class="hl kwb">$ci</span> <span class="hl sym">(</span>&#64;<span class="hl sym">{</span><span class="hl kwb">$fpa</span><span class="hl sym">}) {</span>
                    <span class="hl kwb">$curr_board</span><span class="hl sym">[</span><span class="hl kwb">$ci</span><span class="hl sym">] =</span> <span class="hl kwb">$p</span><span class="hl sym">;</span>
                <span class="hl sym">}</span>
                
                <span class="hl kwa">if</span> <span class="hl sym">(</span>scalar &#64;<span class="hl sym">{</span><span class="hl kwb">$pieces_left</span><span class="hl sym">} &gt;</span> <span class="hl num">1</span><span class="hl sym">) {</span>
                    
                    <span class="hl kwc">my</span> <span class="hl kwb">%fp</span> <span class="hl sym">=</span> map <span class="hl sym">{</span> <span class="hl kwb">$_</span> <span class="hl sym">=&gt;</span> undef <span class="hl sym">}</span> &#64;<span class="hl sym">{</span><span class="hl kwb">$fpa</span><span class="hl sym">};</span>
                    <span class="hl kwc">my</span> <span class="hl kwb">%n_free</span><span class="hl sym">;</span>
                    <span class="hl kwb">&#64;n_free</span><span class="hl sym">{</span> grep <span class="hl sym">{ !</span>exists <span class="hl kwb">$fp</span><span class="hl sym">{</span><span class="hl kwb">$_</span><span class="hl sym">} }</span> keys <span class="hl sym">%{</span><span class="hl kwb">$free</span><span class="hl sym">} } = ();</span>
                    
                    <span class="hl kwc">my</span> <span class="hl kwb">$n_i_min</span> <span class="hl sym">=</span> <span class="hl kwd">min</span><span class="hl sym">(</span>keys <span class="hl kwb">%n_free</span><span class="hl sym">);</span>
                    <span class="hl kwa">if</span> <span class="hl sym">((</span>scalar grep <span class="hl sym">{</span> exists <span class="hl kwb">$se_nh</span><span class="hl sym">[</span><span class="hl kwb">$n_i_min</span><span class="hl sym">]-&gt;{</span><span class="hl kwb">$_</span><span class="hl sym">} }</span> keys <span class="hl kwb">%n_free</span><span class="hl sym">) &gt;</span> <span class="hl num">0</span><span class="hl sym">) {</span>
                        <span class="hl kwc">my</span> <span class="hl kwb">&#64;n_pieces_left</span> <span class="hl sym">=</span> &#64;<span class="hl sym">{</span><span class="hl kwb">$pieces_left</span><span class="hl sym">};</span>
                        <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">my</span> <span class="hl kwb">$x</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwb">$x</span> <span class="hl sym">&lt;</span> scalar <span class="hl kwb">&#64;n_pieces_left</span><span class="hl sym">;</span> <span class="hl kwb">$x</span><span class="hl sym">++) {</span>
                            <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$n_pieces_left</span><span class="hl sym">[</span><span class="hl kwb">$x</span><span class="hl sym">] ==</span> <span class="hl kwb">$p</span><span class="hl sym">) {</span>
                                <span class="hl kwd">splice</span><span class="hl sym">(</span><span class="hl kwb">&#64;n_pieces_left</span><span class="hl sym">,</span> <span class="hl kwb">$x</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">);</span>
                                <span class="hl kwa">last</span><span class="hl sym">;</span>
                            <span class="hl sym">}</span>
                        <span class="hl sym">}</span>
                        
                        <span class="hl kwd">solve</span><span class="hl sym">(</span><span class="hl kwb">$n_i_min</span><span class="hl sym">,</span> \<span class="hl kwb">%n_free</span><span class="hl sym">,</span> \<span class="hl kwb">&#64;n_pieces_left</span><span class="hl sym">);</span>
                    <span class="hl sym">}</span>
                <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
                    <span class="hl kwc">my</span> <span class="hl kwb">$s</span> <span class="hl sym">=</span> <span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl str">''</span><span class="hl sym">,</span> <span class="hl kwb">&#64;curr_board</span><span class="hl sym">);</span>
                    push <span class="hl kwb">&#64;solutions</span><span class="hl sym">,</span> <span class="hl kwb">$s</span><span class="hl sym">;</span>
                    <span class="hl kwc">my</span> <span class="hl kwb">$rs</span> <span class="hl sym">=</span> reverse <span class="hl kwb">$s</span><span class="hl sym">;</span>
                    push <span class="hl kwb">&#64;solutions</span><span class="hl sym">,</span> <span class="hl kwb">$rs</span><span class="hl sym">;</span>
                    
                    <span class="hl kwa">if</span> <span class="hl sym">(</span>scalar <span class="hl kwb">&#64;solutions</span> <span class="hl sym">&gt;=</span> <span class="hl kwb">$needed</span><span class="hl sym">) {</span>
                        <span class="hl kwa">return</span><span class="hl sym">;</span>
                    <span class="hl sym">}</span>
                <span class="hl sym">}</span>
            <span class="hl sym">}</span>
        <span class="hl sym">}</span>
        
        <span class="hl kwa">if</span> <span class="hl sym">(</span>scalar <span class="hl kwb">&#64;solutions</span> <span class="hl sym">&gt;=</span> <span class="hl kwb">$needed</span><span class="hl sym">) {</span>
            <span class="hl kwa">return</span><span class="hl sym">;</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
    
    <span class="hl kwa">return</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
