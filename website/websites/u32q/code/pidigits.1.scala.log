
Sun, 31 Aug 2008 01:27:24 GMT

MAKE:
mv pidigits.scala pidigits.scala
mv: `pidigits.scala' and `pidigits.scala' are the same file
make: [pidigits.scala_run] Error 1 (ignored)
/usr/local/src/scala-2.7.2.RC1/bin/scalac -optimise pidigits.scala
iterations: 0 for 1
iterations: 0 for 1
iterations: 0 for 1
iterations: 0 for 1
iterations: 0 for 15
iterations: 1 for 1
############# Cought exception: scala.tools.nsc.backend.icode.CheckerError: Incompatible stacks: <> and <REFERENCE(pidigits)> #################

Method: pidigits.pi_digits
Method owner: object pidigits
scala.tools.nsc.backend.icode.CheckerError: Incompatible stacks: <> and <REFERENCE(pidigits)>
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeStackLattice$.lub2(TypeFlowAnalysis.scala:55)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeFlowLattice$.lub2(TypeFlowAnalysis.scala:100)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeFlowLattice$.lub2(TypeFlowAnalysis.scala:77)
	at scala.tools.nsc.backend.icode.analysis.CompleteLattice$$anonfun$lub$1.apply(CompleteLattice.scala:40)
	at scala.List.reduceLeft(List.scala:1089)
	at scala.tools.nsc.backend.icode.analysis.CompleteLattice$class.lub(CompleteLattice.scala:40)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeFlowLattice$.lub(TypeFlowAnalysis.scala:77)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$anonfun$forwardAnalysis$1.apply(DataFlowAnalysis.scala:71)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$anonfun$forwardAnalysis$1.apply(DataFlowAnalysis.scala:68)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$class.forwardAnalysis(DataFlowAnalysis.scala:68)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.forwardAnalysis(TypeFlowAnalysis.scala:106)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.run(TypeFlowAnalysis.scala:163)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeMethod(Inliners.scala:292)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeClass(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$InliningPhase.apply(Inliners.scala:36)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.FlatHashTable$$anon$1.foreach(FlatHashTable.scala:113)
	at scala.Iterable$class.foreach(Iterable.scala:256)
	at scala.collection.mutable.HashSet.foreach(HashSet.scala:31)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase.apply(ICodes.scala:85)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:268)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:266)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:247)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:579)
	at scala.tools.nsc.Global$Run.compile(Global.scala:663)
	at scala.tools.nsc.Main$.process(Main.scala:84)
	at scala.tools.nsc.Main$.main(Main.scala:98)
	at scala.tools.nsc.Main.main(Main.scala)
def pi_digits(c: Int (INT)): java.lang.String {
locals: value c, value r, variable i, variable y, variable eqEqTemp$1, value ev$2, value ev$3, variable $inlThis0, variable $retVal0
startBlock: 1
blocks: [1,2,3,5,6,7,9,10,11,12,13,14,16,17,18,20,21]

1: 
  SCOPE_ENTER value r
  NEW REFERENCE(java.lang.StringBuffer)
  DUP
  CALL_METHOD java.lang.StringBufferjava.lang.StringBuffer.<init> (static-instance)
  STORE_LOCAL value r
  SCOPE_ENTER variable i
  CONSTANT (Constant(0))
  STORE_LOCAL variable i
  JUMP 2
  
2[loop header]: 
  LOAD_LOCAL variable i
  LOAD_LOCAL value c
  CJUMP (INT)LT ? 3 : 5
  
3: 
  SCOPE_ENTER variable y
  THIS
  THIS
  STORE_LOCAL variable $inlThis0
  JUMP 21
  
5: 
  LOAD_LOCAL value r
  CALL_METHOD java.lang.StringBufferjava.lang.StringBuffer.toString (dynamic)
  RETURN (REFERENCE(java.lang.String))
  
6[loop header]: 
  LOAD_LOCAL variable y
  THIS
  THIS
  CALL_METHOD pidigitspidigits.Z (dynamic)
  CONSTANT (Constant(4))
  CALL_METHOD pidigitspidigits.extract (dynamic)
  STORE_LOCAL variable eqEqTemp$1
  DUP
  CZJUMP (REFERENCE(java.lang.Object))EQ ? 10 : 11
  
7: 
  THIS
  THIS
  CALL_METHOD pidigitspidigits.K (dynamic)
  CONSTANT (Constant(1))
  CALL_PRIMITIVE Arithmetic(ADD,INT)
  CALL_METHOD pidigitspidigits.K_$eq (dynamic)
  THIS
  THIS
  THIS
  CALL_METHOD pidigitspidigits.Z (dynamic)
  SCOPE_ENTER value ev$2
  LOAD_MODULE object ScalaRunTime
  LOAD_MODULE object Array
  NEW REFERENCE(scala.runtime.BoxedObjectArray)
  DUP
  CONSTANT (Constant(4))
  CREATE_ARRAY REFERENCE(scala.BigInt) x 1
  DUP
  CONSTANT (Constant(0))
  LOAD_MODULE object BigInt
  THIS
  CALL_METHOD pidigitspidigits.K (dynamic)
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  DUP
  CONSTANT (Constant(1))
  LOAD_MODULE object BigInt
  CONSTANT (Constant(4))
  THIS
  CALL_METHOD pidigitspidigits.K (dynamic)
  CALL_PRIMITIVE Arithmetic(MUL,INT)
  CONSTANT (Constant(2))
  CALL_PRIMITIVE Arithmetic(ADD,INT)
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  DUP
  CONSTANT (Constant(2))
  LOAD_MODULE object BigInt
  CONSTANT (Constant(0))
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  DUP
  CONSTANT (Constant(3))
  LOAD_MODULE object BigInt
  CONSTANT (Constant(2))
  THIS
  CALL_METHOD pidigitspidigits.K (dynamic)
  CALL_PRIMITIVE Arithmetic(MUL,INT)
  CONSTANT (Constant(1))
  CALL_PRIMITIVE Arithmetic(ADD,INT)
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  CHECK_CAST ARRAY[REFERENCE(java.lang.Object)]
  CALL_METHOD scala.runtime.BoxedObjectArrayscala.runtime.BoxedObjectArray.<init> (static-instance)
  CALL_METHOD scala.Arrayscala.Array.apply (dynamic)
  CONSTANT (Constant(BigInt))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  STORE_LOCAL value ev$2
  LOAD_LOCAL value ev$2
  IS_INSTANCE REFERENCE(scala.runtime.BoxedArray)
  CZJUMP (BOOL)NE ? 12 : 13
  
9: 
  THIS
  THIS
  SCOPE_ENTER value ev$3
  LOAD_MODULE object ScalaRunTime
  LOAD_MODULE object Array
  NEW REFERENCE(scala.runtime.BoxedObjectArray)
  DUP
  CONSTANT (Constant(4))
  CREATE_ARRAY REFERENCE(scala.BigInt) x 1
  DUP
  CONSTANT (Constant(0))
  LOAD_MODULE object BigInt
  CONSTANT (Constant(10))
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  DUP
  CONSTANT (Constant(1))
  LOAD_LOCAL variable y
  LOAD_MODULE object BigInt
  CONSTANT (Constant(-10))
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  CALL_METHOD scala.BigIntscala.BigInt.$times (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  DUP
  CONSTANT (Constant(2))
  LOAD_MODULE object BigInt
  CONSTANT (Constant(0))
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  DUP
  CONSTANT (Constant(3))
  LOAD_MODULE object BigInt
  CONSTANT (Constant(1))
  CALL_METHOD scala.BigIntscala.BigInt.int2bigInt (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.BigInt))
  CHECK_CAST ARRAY[REFERENCE(java.lang.Object)]
  CALL_METHOD scala.runtime.BoxedObjectArrayscala.runtime.BoxedObjectArray.<init> (static-instance)
  CALL_METHOD scala.Arrayscala.Array.apply (dynamic)
  CONSTANT (Constant(BigInt))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  STORE_LOCAL value ev$3
  LOAD_LOCAL value ev$3
  IS_INSTANCE REFERENCE(scala.runtime.BoxedArray)
  CZJUMP (BOOL)NE ? 16 : 17
  
10: 
  DROP REFERENCE(java.lang.Object)
  LOAD_LOCAL variable eqEqTemp$1
  CZJUMP (REFERENCE(java.lang.Object))EQ ? 9 : 7
  
11: 
  LOAD_LOCAL variable eqEqTemp$1
  CALL_METHOD java.lang.Objectjava.lang.Object.equals (dynamic)
  CZJUMP (BOOL)NE ? 9 : 7
  
12: 
  LOAD_MODULE object ScalaRunTime
  LOAD_LOCAL value ev$2
  CHECK_CAST REFERENCE(scala.runtime.BoxedArray)
  CONSTANT (Constant(BigInt))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  JUMP 14
  
13: 
  LOAD_LOCAL value ev$2
  JUMP 14
  
14: 
  CHECK_CAST ARRAY[REFERENCE(scala.BigInt)]
  SCOPE_EXIT value ev$2
  CALL_METHOD pidigitspidigits.compose (dynamic)
  CALL_METHOD pidigitspidigits.Z_$eq (dynamic)
  THIS
  THIS
  CALL_METHOD pidigitspidigits.Z (dynamic)
  CONSTANT (Constant(3))
  CALL_METHOD pidigitspidigits.extract (dynamic)
  STORE_LOCAL variable y
  JUMP 6
  
16: 
  LOAD_MODULE object ScalaRunTime
  LOAD_LOCAL value ev$3
  CHECK_CAST REFERENCE(scala.runtime.BoxedArray)
  CONSTANT (Constant(BigInt))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  JUMP 18
  
17: 
  LOAD_LOCAL value ev$3
  JUMP 18
  
18: 
  CHECK_CAST ARRAY[REFERENCE(scala.BigInt)]
  SCOPE_EXIT value ev$3
  THIS
  CALL_METHOD pidigitspidigits.Z (dynamic)
  CALL_METHOD pidigitspidigits.compose (dynamic)
  CALL_METHOD pidigitspidigits.Z_$eq (dynamic)
  LOAD_LOCAL value r
  LOAD_LOCAL variable y
  CALL_METHOD java.lang.StringBufferjava.lang.StringBuffer.append (dynamic)
  DROP REFERENCE(java.lang.StringBuffer)
  LOAD_LOCAL variable i
  CONSTANT (Constant(1))
  CALL_PRIMITIVE Arithmetic(ADD,INT)
  STORE_LOCAL variable i
  SCOPE_EXIT variable y
  JUMP 2
  
20: 
  CONSTANT (Constant(3))
  CALL_METHOD pidigitspidigits.extract (dynamic)
  STORE_LOCAL variable y
  JUMP 6
  
21: 
  LOAD_LOCAL variable $inlThis0
  LOAD_FIELD variable Z
  JUMP 20
  
}
Exception handlers: 
  
Exception in thread "main" scala.tools.nsc.backend.icode.CheckerError: Incompatible stacks: <> and <REFERENCE(pidigits)>
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeStackLattice$.lub2(TypeFlowAnalysis.scala:55)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeFlowLattice$.lub2(TypeFlowAnalysis.scala:100)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeFlowLattice$.lub2(TypeFlowAnalysis.scala:77)
	at scala.tools.nsc.backend.icode.analysis.CompleteLattice$$anonfun$lub$1.apply(CompleteLattice.scala:40)
	at scala.List.reduceLeft(List.scala:1089)
	at scala.tools.nsc.backend.icode.analysis.CompleteLattice$class.lub(CompleteLattice.scala:40)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$typeFlowLattice$.lub(TypeFlowAnalysis.scala:77)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$anonfun$forwardAnalysis$1.apply(DataFlowAnalysis.scala:71)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$anonfun$forwardAnalysis$1.apply(DataFlowAnalysis.scala:68)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$class.forwardAnalysis(DataFlowAnalysis.scala:68)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.forwardAnalysis(TypeFlowAnalysis.scala:106)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.run(TypeFlowAnalysis.scala:163)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeMethod(Inliners.scala:292)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeClass(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$InliningPhase.apply(Inliners.scala:36)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.FlatHashTable$$anon$1.foreach(FlatHashTable.scala:113)
	at scala.Iterable$class.foreach(Iterable.scala:256)
	at scala.collection.mutable.HashSet.foreach(HashSet.scala:31)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase.apply(ICodes.scala:85)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:268)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:266)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:247)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:579)
	at scala.tools.nsc.Global$Run.compile(Global.scala:663)
	at scala.tools.nsc.Main$.process(Main.scala:84)
	at scala.tools.nsc.Main$.main(Main.scala:98)
	at scala.tools.nsc.Main.main(Main.scala)
make: [pidigits.scala_run] Error 1 (ignored)

COMMAND LINE:
 /usr/local/src/scala-2.7.2.RC1/bin/scala -howtorun object pidigits 2000

PROGRAM FAILED 


PROGRAM OUTPUT:
java.lang.ClassNotFoundException: pidigits
