<span class="hl str">&quot;&quot;&quot;</span>
<span class="hl str">The Computer Language Benchmarks Game</span>
<span class="hl str">http://shootout.alioth.debian.org/</span>
<span class="hl str">Contributed by Antti Kervinen</span>
<span class="hl str">2to3</span>
<span class="hl str">&quot;&quot;&quot;</span>

THREADS <span class="hl sym">=</span> <span class="hl num">503</span>

<span class="hl slc"># Uses pthread library on Linux</span>
<span class="hl kwa">import</span> _thread
<span class="hl kwa">import</span> sys

<span class="hl slc"># Set minimum stack size for threads, otherwise the program may fail</span>
<span class="hl slc"># to create such a many threads</span>
_thread<span class="hl sym">.</span><span class="hl kwd">stack_size</span><span class="hl sym">(</span><span class="hl num">32</span><span class="hl sym">*</span><span class="hl num">1024</span><span class="hl sym">)</span>

<span class="hl kwa">def</span> <span class="hl kwd">threadfun</span><span class="hl sym">(</span>my_number<span class="hl sym">,</span> my_lock<span class="hl sym">,</span> next_lock<span class="hl sym">):</span>
    <span class="hl kwa">global</span> N<span class="hl sym">,</span> main_thread_lock
    <span class="hl kwa">while</span> <span class="hl num">1</span><span class="hl sym">:</span>
        my_lock<span class="hl sym">.</span><span class="hl kwd">acquire</span><span class="hl sym">()</span>
        <span class="hl kwa">if</span> N <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">:</span>
            <span class="hl kwa">print</span><span class="hl sym">(</span>my_number<span class="hl sym">)</span>
            main_thread_lock<span class="hl sym">.</span><span class="hl kwd">release</span><span class="hl sym">()</span>
        <span class="hl kwa">else</span><span class="hl sym">:</span>
            N <span class="hl sym">-=</span> <span class="hl num">1</span>
            next_lock<span class="hl sym">.</span><span class="hl kwd">release</span><span class="hl sym">()</span>

<span class="hl slc"># main</span>
N <span class="hl sym">=</span> <span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span>
main_thread_lock <span class="hl sym">=</span> _thread<span class="hl sym">.</span><span class="hl kwd">allocate_lock</span><span class="hl sym">()</span>
main_thread_lock<span class="hl sym">.</span><span class="hl kwd">acquire</span><span class="hl sym">()</span>

first_lock <span class="hl sym">=</span> _thread<span class="hl sym">.</span><span class="hl kwd">allocate_lock</span><span class="hl sym">()</span>
next_lock <span class="hl sym">=</span> first_lock

<span class="hl kwa">for</span> number <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl sym">(</span>THREADS<span class="hl sym">):</span>
    this_lock <span class="hl sym">=</span> next_lock
    this_lock<span class="hl sym">.</span><span class="hl kwd">acquire</span><span class="hl sym">()</span>
    <span class="hl kwa">if</span> number <span class="hl sym">==</span> THREADS <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">:</span>
        next_lock <span class="hl sym">=</span> first_lock
    <span class="hl kwa">else</span><span class="hl sym">:</span>
        next_lock <span class="hl sym">=</span> _thread<span class="hl sym">.</span><span class="hl kwd">allocate_lock</span><span class="hl sym">()</span>
    _thread<span class="hl sym">.</span><span class="hl kwd">start_new_thread</span><span class="hl sym">(</span>threadfun<span class="hl sym">,</span>
                            <span class="hl sym">(</span>number <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> this_lock<span class="hl sym">,</span> next_lock<span class="hl sym">))</span>

first_lock<span class="hl sym">.</span><span class="hl kwd">release</span><span class="hl sym">()</span>
main_thread_lock<span class="hl sym">.</span><span class="hl kwd">acquire</span><span class="hl sym">()</span>
