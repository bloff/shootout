<span class="hl com">(*</span>
<span class="hl com">** The Computer Language Benchmarks Game</span>
<span class="hl com">** http://shootout.alioth.debian.org/</span>
<span class="hl com">**</span>
<span class="hl com">** contributed by Hongwei Xi</span>
<span class="hl com">**</span>
<span class="hl com">** compilation command:</span>
<span class="hl com">**   atscc -msse2 -mfpmath=sse -O3 n-body.dats -o n-body -lm</span>
<span class="hl com">*)</span>

staload _<span class="hl com">(*anonymous*)</span> <span class="hl sym">=</span> <span class="hl str">&quot;prelude/DATS/array.dats&quot;</span>

staload M <span class="hl sym">=</span> <span class="hl str">&quot;libc/SATS/math.sats&quot;</span>

<span class="hl kwa">typedef</span> body <span class="hl sym">= (</span>
  double<span class="hl sym">,</span> double<span class="hl sym">,</span> double<span class="hl sym">,</span> double<span class="hl sym">,</span> double<span class="hl sym">,</span> double<span class="hl sym">,</span> double
<span class="hl sym">)</span>

<span class="hl kwa">val</span> sun <span class="hl sym">= (</span><span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">)</span>

<span class="hl kwa">val</span> jupiter <span class="hl sym">= (</span>
  <span class="hl num">4.84143144246472090</span><span class="hl sym">,</span>
 ~<span class="hl num">1.16032004402742839</span><span class="hl sym">,</span>
 ~<span class="hl num">1.03622044471123109e-1</span><span class="hl sym">,</span>
  <span class="hl num">1.66007664274403694e-3</span><span class="hl sym">,</span>
  <span class="hl num">7.69901118419740425e-3</span><span class="hl sym">,</span>
 ~<span class="hl num">6.90460016972063023e-5</span><span class="hl sym">,</span>
  <span class="hl num">9.54791938424326609e-4</span>
<span class="hl sym">)</span>

<span class="hl kwa">val</span> saturn <span class="hl sym">= (</span>
  <span class="hl num">8.34336671824457987</span><span class="hl sym">,</span>
  <span class="hl num">4.12479856412430479</span><span class="hl sym">,</span>
 ~<span class="hl num">4.03523417114321381e-1</span><span class="hl sym">,</span>
 ~<span class="hl num">2.76742510726862411e-3</span><span class="hl sym">,</span>
  <span class="hl num">4.99852801234917238e-3</span><span class="hl sym">,</span>
  <span class="hl num">2.30417297573763929e-5</span><span class="hl sym">,</span>
  <span class="hl num">2.85885980666130812e-4</span>
<span class="hl sym">)</span>

<span class="hl kwa">val</span> neptune <span class="hl sym">= (</span>
  <span class="hl num">1.28943695621391310e+1</span><span class="hl sym">,</span>
 ~<span class="hl num">1.51111514016986312e+1</span><span class="hl sym">,</span>
 ~<span class="hl num">2.23307578892655734e-1</span><span class="hl sym">,</span>
  <span class="hl num">2.96460137564761618e-3</span><span class="hl sym">,</span>
  <span class="hl num">2.37847173959480950e-3</span><span class="hl sym">,</span>
 ~<span class="hl num">2.96589568540237556e-5</span><span class="hl sym">,</span>
  <span class="hl num">4.36624404335156298e-5</span>
<span class="hl sym">)</span>

<span class="hl kwa">val</span> uranus <span class="hl sym">= (</span>
  <span class="hl num">1.53796971148509165e+1</span><span class="hl sym">,</span>
 ~<span class="hl num">2.59193146099879641e+1</span><span class="hl sym">,</span>
  <span class="hl num">1.79258772950371181e-1</span><span class="hl sym">,</span>
  <span class="hl num">2.68067772490389322e-3</span><span class="hl sym">,</span>
  <span class="hl num">1.62824170038242295e-3</span><span class="hl sym">,</span>
 ~<span class="hl num">9.51592254519715870e-5</span><span class="hl sym">,</span>
  <span class="hl num">5.15138902046611451e-5</span>
<span class="hl sym">)</span>

<span class="hl dir">#define PI 3.1415926535898</span>
<span class="hl dir">#define SOLAR_MASS (4.0 * PI * PI)</span>
<span class="hl dir">#define DAYS_PER_YEAR 365.24</span>

<span class="hl kwa">typedef</span> bodylst <span class="hl sym">(</span>n<span class="hl sym">:</span> int<span class="hl sym">) =</span> list <span class="hl sym">(</span>body<span class="hl sym">,</span> n<span class="hl sym">)</span>

<span class="hl dir">#define N 5; #define N1 (N - 1)</span>

<span class="hl kwa">macdef</span> darray <span class="hl sym">() =</span> array_make_elt<span class="hl sym">&lt;</span>double<span class="hl sym">&gt; (</span>N<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">)</span>
<span class="hl kwa">val</span> <span class="hl sym">(</span>x<span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">) = (</span>darray <span class="hl sym">(),</span> darray <span class="hl sym">(),</span> darray <span class="hl sym">())</span>
<span class="hl kwa">val</span> <span class="hl sym">(</span>vx<span class="hl sym">,</span> vy<span class="hl sym">,</span> vz<span class="hl sym">) = (</span>darray <span class="hl sym">(),</span> darray <span class="hl sym">(),</span> darray <span class="hl sym">())</span>
<span class="hl kwa">val</span> m <span class="hl sym">=</span> darray <span class="hl sym">()</span>

<span class="hl kwa">val</span> <span class="hl sym">() =</span> loop <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> theBodies<span class="hl sym">)</span> <span class="hl kwa">where</span> <span class="hl sym">{</span>
  <span class="hl dir">#define DPY DAYS_PER_YEAR</span>
  <span class="hl kwa">val</span> theBodies <span class="hl sym">=</span> '<span class="hl sym">[</span>sun<span class="hl sym">,</span> jupiter<span class="hl sym">,</span> saturn<span class="hl sym">,</span> neptune<span class="hl sym">,</span> uranus<span class="hl sym">]</span>
  <span class="hl kwa">fun</span> loop <span class="hl sym">{</span>i<span class="hl sym">:</span> nat<span class="hl sym">} (</span>i<span class="hl sym">:</span> int i<span class="hl sym">,</span> bs<span class="hl sym">:</span> bodylst <span class="hl sym">(</span>N<span class="hl sym">-</span>i<span class="hl sym">)):</span> void <span class="hl sym">=</span>
    <span class="hl kwa">if</span> i <span class="hl sym">&lt;</span> N <span class="hl kwa">then let</span>
      <span class="hl kwa">val</span><span class="hl sym">+</span> list_cons <span class="hl sym">(</span>b<span class="hl sym">,</span> bs<span class="hl sym">) =</span> bs
    <span class="hl kwa">in</span>
      x<span class="hl sym">[</span>i<span class="hl sym">] :=</span> b<span class="hl num">.0</span><span class="hl sym">;</span> y<span class="hl sym">[</span>i<span class="hl sym">] :=</span> b<span class="hl num">.1</span><span class="hl sym">;</span> z<span class="hl sym">[</span>i<span class="hl sym">] :=</span> b<span class="hl num">.2</span><span class="hl sym">;</span>
      vx<span class="hl sym">[</span>i<span class="hl sym">] :=</span> b<span class="hl num">.3</span> <span class="hl sym">*</span> DPY<span class="hl sym">;</span> vy<span class="hl sym">[</span>i<span class="hl sym">] :=</span> b<span class="hl num">.4</span> <span class="hl sym">*</span> DPY<span class="hl sym">;</span> vz<span class="hl sym">[</span>i<span class="hl sym">] :=</span> b<span class="hl num">.5</span> <span class="hl sym">*</span> DPY<span class="hl sym">;</span>
      m<span class="hl sym">[</span>i<span class="hl sym">] :=</span> b<span class="hl num">.6</span> <span class="hl sym">*</span> SOLAR_MASS<span class="hl sym">;</span>
      loop <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> bs<span class="hl sym">)</span>
    <span class="hl kwa">end</span>
<span class="hl sym">}</span>

<span class="hl com">(* one step *)</span>

<span class="hl kwa">infix</span> <span class="hl num">0</span> <span class="hl sym">+= -=  //</span> <span class="hl kwa">for</span> similar C notation
<span class="hl kwa">macdef</span> <span class="hl sym">+= (</span>x<span class="hl sym">,</span> d<span class="hl sym">) = (,(</span>x<span class="hl sym">) := ,(</span>x<span class="hl sym">) + ,(</span>d<span class="hl sym">))</span>
<span class="hl kwa">macdef</span> <span class="hl sym">-= (</span>x<span class="hl sym">,</span> d<span class="hl sym">) = (,(</span>x<span class="hl sym">) := ,(</span>x<span class="hl sym">) - ,(</span>d<span class="hl sym">))</span>

<span class="hl kwa">fn</span> advance <span class="hl sym">(</span>dt<span class="hl sym">:</span> double<span class="hl sym">):</span> void <span class="hl sym">=</span> <span class="hl kwa">let</span>
  <span class="hl kwa">fun</span> pl <span class="hl sym">{</span>i<span class="hl sym">:</span>nat <span class="hl sym">|</span> i <span class="hl sym">&lt;=</span> N <span class="hl sym">} (</span>dt<span class="hl sym">:</span> double<span class="hl sym">,</span> i<span class="hl sym">:</span> int i<span class="hl sym">):</span> void <span class="hl sym">=</span>
    <span class="hl kwa">if</span> i <span class="hl sym">&lt;</span> N <span class="hl kwa">then begin</span>
      x<span class="hl sym">[</span>i<span class="hl sym">] +=</span> dt<span class="hl sym">*</span>vx<span class="hl sym">[</span>i<span class="hl sym">];</span> y<span class="hl sym">[</span>i<span class="hl sym">] +=</span> dt<span class="hl sym">*</span>vy<span class="hl sym">[</span>i<span class="hl sym">];</span> z<span class="hl sym">[</span>i<span class="hl sym">] +=</span> dt<span class="hl sym">*</span>vz<span class="hl sym">[</span>i<span class="hl sym">];</span> pl <span class="hl sym">(</span>dt<span class="hl sym">,</span> i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">end</span>
  <span class="hl kwa">fun</span> vl <span class="hl sym">{</span>i<span class="hl sym">,</span>j<span class="hl sym">:</span>int <span class="hl sym">|</span> <span class="hl num">0</span> <span class="hl sym">&lt;=</span> i<span class="hl sym">;</span> i <span class="hl sym">&lt;</span> j<span class="hl sym">;</span> j <span class="hl sym">&lt;=</span> N<span class="hl sym">}</span>
    <span class="hl sym">(</span>dt<span class="hl sym">:</span> double<span class="hl sym">,</span> i<span class="hl sym">:</span> int i<span class="hl sym">,</span> j<span class="hl sym">:</span> int j<span class="hl sym">):</span> void <span class="hl sym">=</span> <span class="hl kwa">case</span><span class="hl sym">+</span> <span class="hl num">0</span> <span class="hl kwa">of</span>
    <span class="hl sym">|</span> _ <span class="hl kwa">when</span> i <span class="hl sym">&lt;</span> N1 <span class="hl sym">=&gt;</span> <span class="hl kwa">if</span> j <span class="hl sym">&lt;</span> N <span class="hl kwa">then let</span>
        <span class="hl kwa">val</span> dx <span class="hl sym">=</span> x<span class="hl sym">[</span>i<span class="hl sym">] -</span> x<span class="hl sym">[</span>j<span class="hl sym">]</span> <span class="hl kwa">and</span> dy <span class="hl sym">=</span> y<span class="hl sym">[</span>i<span class="hl sym">] -</span> y<span class="hl sym">[</span>j<span class="hl sym">]</span> <span class="hl kwa">and</span> dz <span class="hl sym">=</span> z<span class="hl sym">[</span>i<span class="hl sym">] -</span> z<span class="hl sym">[</span>j<span class="hl sym">]</span>
        <span class="hl kwa">val</span> dist2 <span class="hl sym">=</span> dx <span class="hl sym">*</span> dx <span class="hl sym">+</span> dy <span class="hl sym">*</span> dy <span class="hl sym">+</span> dz <span class="hl sym">*</span> dz
        <span class="hl kwa">val</span> dist <span class="hl sym">=</span> $M<span class="hl sym">.</span>sqrt <span class="hl sym">(</span>dist2<span class="hl sym">);</span> <span class="hl kwa">val</span> mag <span class="hl sym">=</span> dt <span class="hl sym">/ (</span>dist <span class="hl sym">*</span> dist2<span class="hl sym">)</span>
        <span class="hl kwa">val</span> mi <span class="hl sym">=</span> m<span class="hl sym">[</span>i<span class="hl sym">] *</span> mag <span class="hl kwa">and</span> mj <span class="hl sym">=</span> m<span class="hl sym">[</span>j<span class="hl sym">] *</span> mag
      <span class="hl kwa">in</span>
        vx<span class="hl sym">[</span>i<span class="hl sym">] -=</span> dx <span class="hl sym">*</span> mj<span class="hl sym">;</span> vy<span class="hl sym">[</span>i<span class="hl sym">] -=</span> dy <span class="hl sym">*</span> mj<span class="hl sym">;</span> vz<span class="hl sym">[</span>i<span class="hl sym">] -=</span> dz <span class="hl sym">*</span> mj<span class="hl sym">;</span>
        vx<span class="hl sym">[</span>j<span class="hl sym">] +=</span> dx <span class="hl sym">*</span> mi<span class="hl sym">;</span> vy<span class="hl sym">[</span>j<span class="hl sym">] +=</span> dy <span class="hl sym">*</span> mi<span class="hl sym">;</span> vz<span class="hl sym">[</span>j<span class="hl sym">] +=</span> dz <span class="hl sym">*</span> mi<span class="hl sym">;</span>
        vl <span class="hl sym">(</span>dt<span class="hl sym">,</span> i<span class="hl sym">,</span> j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
      <span class="hl kwa">end else</span> vl <span class="hl sym">(</span>dt<span class="hl sym">,</span> i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> i<span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">)</span>
    <span class="hl sym">|</span> _ <span class="hl sym">=&gt;</span> pl <span class="hl sym">(</span>dt<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)</span>
<span class="hl kwa">in</span>
  vl <span class="hl sym">(</span>dt<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span>
<span class="hl kwa">end</span>

<span class="hl com">(* calculate initial velocity for the sun *)</span>
<span class="hl kwa">fn</span> offmoment <span class="hl sym">():</span> void <span class="hl sym">=</span> <span class="hl kwa">let</span>
  <span class="hl dir">#define M SOLAR_MASS</span>
  <span class="hl kwa">fun</span> loop <span class="hl sym">(</span>i<span class="hl sym">:</span> natLte N<span class="hl sym">,</span> px<span class="hl sym">:</span> double<span class="hl sym">,</span> py<span class="hl sym">:</span> double<span class="hl sym">,</span> pz<span class="hl sym">:</span> double<span class="hl sym">):</span> void <span class="hl sym">=</span>
    <span class="hl kwa">if</span> i <span class="hl sym">&lt;</span> N <span class="hl kwa">then let</span>
      <span class="hl kwa">val</span> mi <span class="hl sym">=</span> m<span class="hl sym">[</span>i<span class="hl sym">]</span> <span class="hl kwa">in</span> loop <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> px<span class="hl sym">+</span>vx<span class="hl sym">[</span>i<span class="hl sym">]*</span>mi<span class="hl sym">,</span> py<span class="hl sym">+</span>vy<span class="hl sym">[</span>i<span class="hl sym">]*</span>mi<span class="hl sym">,</span> pz<span class="hl sym">+</span>vz<span class="hl sym">[</span>i<span class="hl sym">]*</span>mi<span class="hl sym">)</span>
    <span class="hl kwa">end else begin</span>
      vx<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] :=</span> ~px <span class="hl sym">/</span> M<span class="hl sym">;</span> vy<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] :=</span> ~py <span class="hl sym">/</span> M<span class="hl sym">;</span> vz<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] :=</span> ~pz <span class="hl sym">/</span> M
    <span class="hl kwa">end</span> <span class="hl sym">//</span> <span class="hl kwa">end of</span> <span class="hl sym">[</span><span class="hl kwa">if</span><span class="hl sym">]</span>
<span class="hl kwa">in</span>
  loop <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">)</span>
<span class="hl kwa">end</span>

<span class="hl kwa">fn</span> energy <span class="hl sym">():</span> double <span class="hl sym">=</span> <span class="hl kwa">let</span> <span class="hl sym">//</span> mutual recursion
  <span class="hl kwa">fn</span><span class="hl sym">*</span> l <span class="hl sym">(</span>i<span class="hl sym">:</span> natLt N<span class="hl sym">,</span> j<span class="hl sym">:</span> natLte N<span class="hl sym">,</span> e<span class="hl sym">:</span> double<span class="hl sym">):</span> double <span class="hl sym">=</span>
    <span class="hl kwa">if</span> j <span class="hl sym">&lt;</span> N <span class="hl kwa">then let</span>
      <span class="hl kwa">val</span> dx <span class="hl sym">=</span> x<span class="hl sym">[</span>i<span class="hl sym">] -</span> x<span class="hl sym">[</span>j<span class="hl sym">]</span> <span class="hl kwa">and</span> dy <span class="hl sym">=</span> y<span class="hl sym">[</span>i<span class="hl sym">] -</span> y<span class="hl sym">[</span>j<span class="hl sym">]</span> <span class="hl kwa">and</span> dz <span class="hl sym">=</span> z<span class="hl sym">[</span>i<span class="hl sym">] -</span> z<span class="hl sym">[</span>j<span class="hl sym">]</span>
      <span class="hl kwa">val</span> dist2 <span class="hl sym">=</span> dx <span class="hl sym">*</span> dx <span class="hl sym">+</span> dy <span class="hl sym">*</span> dy <span class="hl sym">+</span> dz <span class="hl sym">*</span> dz<span class="hl sym">;</span> <span class="hl kwa">val</span> dist <span class="hl sym">=</span> $M<span class="hl sym">.</span>sqrt <span class="hl sym">(</span>dist2<span class="hl sym">)</span>
    <span class="hl kwa">in</span>
      l <span class="hl sym">(</span>i<span class="hl sym">,</span> j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> e<span class="hl sym">-</span>m<span class="hl sym">[</span>i<span class="hl sym">]*</span>m<span class="hl sym">[</span>j<span class="hl sym">]/</span>dist<span class="hl sym">)</span>
    <span class="hl kwa">end else</span> l0 <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> e<span class="hl sym">)</span>

  <span class="hl kwa">and</span> l0 <span class="hl sym">(</span>i<span class="hl sym">:</span> natLte N<span class="hl sym">,</span> e<span class="hl sym">:</span> double<span class="hl sym">):</span> double <span class="hl sym">=</span>
    <span class="hl kwa">if</span> i <span class="hl sym">&lt;</span> N <span class="hl kwa">then let</span>
      <span class="hl kwa">val</span> vxi <span class="hl sym">=</span> vx<span class="hl sym">[</span>i<span class="hl sym">]</span> <span class="hl kwa">and</span> vyi <span class="hl sym">=</span> vy<span class="hl sym">[</span>i<span class="hl sym">]</span> <span class="hl kwa">and</span> vzi <span class="hl sym">=</span> vz<span class="hl sym">[</span>i<span class="hl sym">]</span>
    <span class="hl kwa">in</span>
      l <span class="hl sym">(</span>i<span class="hl sym">,</span> i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> e <span class="hl sym">+</span> <span class="hl num">0.5</span><span class="hl sym">*</span>m<span class="hl sym">[</span>i<span class="hl sym">]*(</span>vxi<span class="hl sym">*</span>vxi<span class="hl sym">+</span>vyi<span class="hl sym">*</span>vyi<span class="hl sym">+</span>vzi<span class="hl sym">*</span>vzi<span class="hl sym">))</span>
    <span class="hl kwa">end else</span> e
<span class="hl kwa">in</span>
  l0 <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">)</span>
<span class="hl kwa">end</span>

<span class="hl kwa">fun</span> advances <span class="hl sym">(</span>i<span class="hl sym">:</span> Nat<span class="hl sym">):</span> void <span class="hl sym">=</span> <span class="hl kwa">if</span> i <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> <span class="hl sym">(</span>advance <span class="hl num">0.01</span><span class="hl sym">;</span> advances <span class="hl sym">(</span>i<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">))</span>

<span class="hl kwa">implement</span> main <span class="hl sym">(</span>argc<span class="hl sym">,</span> argv<span class="hl sym">) =</span> <span class="hl kwa">let</span>
  <span class="hl kwa">val</span> <span class="hl sym">() =</span> assert <span class="hl sym">(</span>argc <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">)</span>
  <span class="hl kwa">val</span> n <span class="hl sym">=</span> int1_of <span class="hl sym">(</span>argv<span class="hl sym">.[</span><span class="hl num">1</span><span class="hl sym">]);</span> <span class="hl kwa">val</span> <span class="hl sym">() =</span> assert <span class="hl sym">(</span>n <span class="hl sym">&gt;=</span> <span class="hl num">2</span><span class="hl sym">)</span>
<span class="hl kwa">in</span>
  offmoment<span class="hl sym">();</span>
  printf <span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> &#64;<span class="hl sym">(</span>energy<span class="hl sym">()));</span>
  advances n<span class="hl sym">;</span>
  printf <span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> &#64;<span class="hl sym">(</span>energy<span class="hl sym">()));</span>
<span class="hl kwa">end</span>

<span class="hl com">(* end of [n-body1.dats] *)</span>
