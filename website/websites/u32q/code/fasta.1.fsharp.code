<span class="hl sym">//</span> <span class="hl kwd">The Computer Language Benchmarks Game</span>
<span class="hl sym">//</span> http<span class="hl sym">://</span>shootout<span class="hl sym">.</span>alioth<span class="hl sym">.</span>debian<span class="hl sym">.</span>org<span class="hl sym">/</span>
<span class="hl sym">//</span>
<span class="hl sym">//</span> <span class="hl kwd">Contributed</span> by <span class="hl kwd">Valentin Kraevskiy</span>

<span class="hl kwa">let</span> im <span class="hl sym">=</span> <span class="hl num">139968</span>
<span class="hl kwa">let</span> ia <span class="hl sym">=</span> <span class="hl num">3877</span>
<span class="hl kwa">let</span> ic <span class="hl sym">=</span> <span class="hl num">29573</span>
<span class="hl kwa">let mutable</span> seed <span class="hl sym">=</span> <span class="hl num">42</span><span class="hl sym">;</span>

<span class="hl kwa">let</span> inline random max <span class="hl sym">=</span>
    seed <span class="hl sym">&lt;- (</span>seed <span class="hl sym">*</span> ia <span class="hl sym">+</span> ic<span class="hl sym">) %</span> im
    max <span class="hl sym">*</span> <span class="hl kwb">float</span> seed <span class="hl sym">/</span> <span class="hl kwb">float</span> im

<span class="hl kwa">let</span> alu <span class="hl sym">=</span>
    <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG\</span>
<span class="hl str">     GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA\</span>
<span class="hl str">     CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT\</span>
<span class="hl str">     ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA\</span>
<span class="hl str">     GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG\</span>
<span class="hl str">     AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC\</span>
<span class="hl str">     AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span><span class="hl kwd">B</span>

<span class="hl kwa">let</span> makeCumulative <span class="hl sym">=</span>
    <span class="hl kwc">List</span><span class="hl sym">.</span>fold <span class="hl sym">(</span><span class="hl kwa">fun</span> <span class="hl sym">(</span>cp<span class="hl sym">,</span> res<span class="hl sym">) (</span>c<span class="hl sym">,</span> p<span class="hl sym">) -&gt;</span> cp <span class="hl sym">+</span> p<span class="hl sym">, (</span>c<span class="hl sym">,</span> cp <span class="hl sym">+</span> p<span class="hl sym">) ::</span> res<span class="hl sym">) (</span><span class="hl num">0.0</span><span class="hl sym">, [])</span>
    <span class="hl sym">&gt;&gt;</span> snd <span class="hl sym">&gt;&gt;</span> <span class="hl kwc">List</span><span class="hl sym">.</span>toArray

<span class="hl kwa">let</span> homoSapiens <span class="hl sym">=</span>
    makeCumulative
        <span class="hl sym">[</span><span class="hl kwb">'a'B</span><span class="hl sym">,</span> <span class="hl num">0.3029549426680</span>
         <span class="hl kwb">'c'B</span><span class="hl sym">,</span> <span class="hl num">0.1979883004921</span>
         <span class="hl kwb">'g'B</span><span class="hl sym">,</span> <span class="hl num">0.1975473066391</span>
         <span class="hl kwb">'t'B</span><span class="hl sym">,</span> <span class="hl num">0.3015094502008</span><span class="hl sym">]</span>

<span class="hl kwa">let</span> iub <span class="hl sym">=</span>
    makeCumulative
        <span class="hl sym">[</span><span class="hl kwb">'a'B</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">;</span> <span class="hl kwb">'c'B</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">;</span> <span class="hl kwb">'g'B</span><span class="hl sym">,</span> <span class="hl num">0.12</span>
         <span class="hl kwb">'t'B</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">;</span> <span class="hl kwb">'B'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">;</span> <span class="hl kwb">'D'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span>
         <span class="hl kwb">'H'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">;</span> <span class="hl kwb">'K'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">;</span> <span class="hl kwb">'M'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span>
         <span class="hl kwb">'N'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">;</span> <span class="hl kwb">'R'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">;</span> <span class="hl kwb">'S'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span>
         <span class="hl kwb">'V'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">;</span> <span class="hl kwb">'W'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">;</span> <span class="hl kwb">'Y'B</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">]</span>

<span class="hl kwa">let</span> inline selectRandom <span class="hl sym">(</span>f<span class="hl sym">:</span> _ <span class="hl sym">[])  =</span>
    <span class="hl kwa">let</span> r <span class="hl sym">=</span> random <span class="hl num">1.0</span>
    <span class="hl kwa">let rec</span> find <span class="hl sym">=</span> <span class="hl kwa">function</span>
        <span class="hl sym">|</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span> fst f<span class="hl sym">.[</span><span class="hl num">0</span><span class="hl sym">]</span>
        <span class="hl sym">|</span> n <span class="hl kwa">when</span> r <span class="hl sym">&lt;</span> snd f<span class="hl sym">.[</span>n<span class="hl sym">] -&gt;</span> fst f<span class="hl sym">.[</span>n<span class="hl sym">]</span>
        <span class="hl sym">|</span> n <span class="hl sym">-&gt;</span> find <span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)</span>
    find <span class="hl sym">&lt;|</span> f<span class="hl sym">.</span><span class="hl kwd">Length</span> <span class="hl sym">-</span> <span class="hl num">1</span>

<span class="hl kwa">let</span> width <span class="hl sym">=</span> <span class="hl num">60</span>
<span class="hl kwa">let</span> stream <span class="hl sym">=</span> <span class="hl kwc">System</span><span class="hl sym">.</span><span class="hl kwc">Console</span><span class="hl sym">.</span><span class="hl kwd">OpenStandardOutput</span> <span class="hl sym">()</span>
<span class="hl kwa">let</span> buffer <span class="hl sym">=</span> <span class="hl kwc">Array</span><span class="hl sym">.</span>create <span class="hl num">1024 0u</span>y
<span class="hl kwa">let mutable</span> index <span class="hl sym">=</span> <span class="hl num">0</span>
<span class="hl kwa">let</span> inline flush <span class="hl sym">() =</span>
    stream<span class="hl sym">.</span><span class="hl kwd">Write</span> <span class="hl sym">(</span>buffer<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> index<span class="hl sym">)</span>
    index <span class="hl sym">&lt;-</span> <span class="hl num">0</span>
<span class="hl kwa">let</span> inline write b <span class="hl sym">=</span>
    buffer<span class="hl sym">.[</span>index<span class="hl sym">] &lt;-</span> b
    index <span class="hl sym">&lt;-</span> index <span class="hl sym">+</span> <span class="hl num">1</span>
    <span class="hl kwa">if</span> index <span class="hl sym">=</span> buffer<span class="hl sym">.</span><span class="hl kwd">Length</span> <span class="hl kwa">then</span> flush <span class="hl sym">()</span>

<span class="hl kwa">let</span> randomFasta desc table n <span class="hl sym">=</span>
    <span class="hl kwc">Array</span><span class="hl sym">.</span>iter write desc
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">1</span> <span class="hl sym">..</span> n <span class="hl kwa">do</span>
        write <span class="hl sym">&lt;|</span> selectRandom table
        <span class="hl kwa">if</span> i <span class="hl sym">%</span> width <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> write '\n<span class="hl kwb">'B</span>
    <span class="hl kwa">if</span> n <span class="hl sym">%</span> width <span class="hl sym">&lt;&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> write '\n<span class="hl kwb">'B</span>

<span class="hl kwa">let</span> repeatFasta desc <span class="hl sym">(</span>table <span class="hl sym">:</span> byte <span class="hl sym">[])</span> n <span class="hl sym">=</span>
    <span class="hl kwc">Array</span><span class="hl sym">.</span>iter write desc
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">1</span> <span class="hl sym">..</span> n <span class="hl kwa">do</span>
        write <span class="hl sym">&lt;|</span> table<span class="hl sym">.[(</span>i <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">) %</span> table<span class="hl sym">.</span><span class="hl kwd">Length</span><span class="hl sym">]</span>
        <span class="hl kwa">if</span> i <span class="hl sym">%</span> width <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">then</span> write '\n<span class="hl kwb">'B</span>
    <span class="hl kwa">if</span> n <span class="hl sym">%</span> width <span class="hl sym">&lt;&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> write '\n<span class="hl kwb">'B</span>

<span class="hl sym">[&lt;</span><span class="hl kwd">EntryPoint</span><span class="hl sym">&gt;]</span>
<span class="hl kwa">let</span> main args <span class="hl sym">=</span>
    <span class="hl kwa">let</span> n <span class="hl sym">=</span> <span class="hl kwa">try</span> <span class="hl kwb">int</span> args<span class="hl sym">.[</span><span class="hl num">0</span><span class="hl sym">]</span> <span class="hl kwa">with</span> _ <span class="hl sym">-&gt;</span> <span class="hl num">1000</span>
    repeatFasta <span class="hl str">&quot;&gt;ONE Homo sapiens alu</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl kwd">B</span> alu <span class="hl sym">(</span><span class="hl num">2</span> <span class="hl sym">*</span> n<span class="hl sym">)</span>
    randomFasta <span class="hl str">&quot;&gt;TWO IUB ambiguity codes</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl kwd">B</span> iub <span class="hl sym">(</span><span class="hl num">3</span> <span class="hl sym">*</span> n<span class="hl sym">)</span>
    randomFasta <span class="hl str">&quot;&gt;THREE Homo sapiens frequency</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl kwd">B</span> homoSapiens  <span class="hl sym">(</span><span class="hl num">5</span> <span class="hl sym">*</span> n<span class="hl sym">)</span>
    flush <span class="hl sym">()</span>
    <span class="hl num">0</span>
