<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> * contributed by Rex Kerr</span>
<span class="hl com"> */</span>

<span class="hl kwa">object</span> revcomp <span class="hl sym">{</span>
  <span class="hl kwa">val</span> table <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwc">Array</span><span class="hl sym">[</span>Char<span class="hl sym">](</span><span class="hl num">128</span><span class="hl sym">)</span>
  <span class="hl kwa">for</span> <span class="hl sym">(</span>i <span class="hl sym">&lt;-</span> <span class="hl num">0</span> to <span class="hl num">127</span><span class="hl sym">) {</span> table<span class="hl sym">(</span>i<span class="hl sym">) =</span> i<span class="hl sym">.</span>toChar <span class="hl sym">}</span>
  <span class="hl kwa">for</span> <span class="hl sym">((</span>i<span class="hl sym">,</span>o<span class="hl sym">) &lt;-</span> <span class="hl str">&quot;ACGTUMRWSYKVHDB&quot;</span><span class="hl sym">.</span>toList zip <span class="hl str">&quot;TGCAAKYWSRMBDHVN&quot;</span><span class="hl sym">.</span>toList<span class="hl sym">) {</span>
    table<span class="hl sym">(</span>i<span class="hl sym">) =</span> o
    table<span class="hl sym">(</span>i<span class="hl sym">.</span>toLowerCase<span class="hl sym">) =</span> o
  <span class="hl sym">}</span>

  <span class="hl kwa">val</span> buf <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwc">StringBuilder</span>
  <span class="hl kwa">def</span> out <span class="hl sym">{</span>
    buf reverse<span class="hl sym">;</span>
    <span class="hl str">&quot;.{1,60}&quot;</span><span class="hl sym">.</span>r findAllIn<span class="hl sym">(</span>buf<span class="hl sym">)</span> foreach<span class="hl sym">(</span>println _<span class="hl sym">)</span>
    buf clear
  <span class="hl sym">}</span>

  <span class="hl kwa">def</span> main<span class="hl sym">(</span>args<span class="hl sym">:</span><span class="hl kwc">Array</span><span class="hl sym">[</span><span class="hl kwc">String</span><span class="hl sym">]) = {</span>
    io<span class="hl sym">.</span><span class="hl kwc">Source</span><span class="hl sym">.</span>fromInputStream<span class="hl sym">(</span> <span class="hl kwc">System</span><span class="hl sym">.</span><span class="hl kwa">in</span> <span class="hl sym">).</span>getLines<span class="hl sym">.</span>foreach<span class="hl sym">(</span>s <span class="hl sym">=&gt; {</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span>s startsWith <span class="hl str">&quot;&gt;&quot;</span><span class="hl sym">) {</span>
        out
        print<span class="hl sym">(</span>s<span class="hl sym">)</span>
      <span class="hl sym">}</span>
      <span class="hl kwa">else</span> s<span class="hl sym">.</span>trim<span class="hl sym">.</span>foreach<span class="hl sym">(</span>buf append table<span class="hl sym">(</span>_<span class="hl sym">))</span>
    <span class="hl sym">})</span>
    out
  <span class="hl sym">}</span>
<span class="hl sym">}</span>
