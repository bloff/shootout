<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Antoine Pitrou</span>
<span class="hl slc"># modified by Dominique Wahli</span>
<span class="hl slc"># modified by Heinrich Acker</span>
<span class="hl slc"># 2to3</span>

<span class="hl kwa">import</span> sys

<span class="hl kwa">def</span> <span class="hl kwd">make_tree</span><span class="hl sym">(</span>item<span class="hl sym">,</span> depth<span class="hl sym">):</span>
    <span class="hl kwa">if not</span> depth<span class="hl sym">:</span> <span class="hl kwa">return</span> item<span class="hl sym">,</span> <span class="hl kwa">None</span><span class="hl sym">,</span> <span class="hl kwa">None</span>
    item2 <span class="hl sym">=</span> item <span class="hl sym">+</span> item
    depth <span class="hl sym">-=</span> <span class="hl num">1</span>
    <span class="hl kwa">return</span> item<span class="hl sym">,</span> <span class="hl kwd">make_tree</span><span class="hl sym">(</span>item2 <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> depth<span class="hl sym">),</span> <span class="hl kwd">make_tree</span><span class="hl sym">(</span>item2<span class="hl sym">,</span> depth<span class="hl sym">)</span>

<span class="hl kwa">def</span> <span class="hl kwd">check_tree</span><span class="hl sym">(</span>xxx_todo_changeme<span class="hl sym">):</span>
    <span class="hl sym">(</span>item<span class="hl sym">,</span> left<span class="hl sym">,</span> right<span class="hl sym">) =</span> xxx_todo_changeme
    <span class="hl kwa">if not</span> left<span class="hl sym">:</span> <span class="hl kwa">return</span> item
    <span class="hl kwa">return</span> item <span class="hl sym">+</span> <span class="hl kwd">check_tree</span><span class="hl sym">(</span>left<span class="hl sym">) -</span> <span class="hl kwd">check_tree</span><span class="hl sym">(</span>right<span class="hl sym">)</span>

min_depth <span class="hl sym">=</span> <span class="hl num">4</span>
max_depth <span class="hl sym">=</span> <span class="hl kwb">max</span><span class="hl sym">(</span>min_depth <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]))</span>
stretch_depth <span class="hl sym">=</span> max_depth <span class="hl sym">+</span> <span class="hl num">1</span>

<span class="hl kwa">print</span><span class="hl sym">(</span><span class="hl str">&quot;stretch tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check:&quot;</span> <span class="hl sym">%</span> stretch_depth<span class="hl sym">,</span> <span class="hl kwd">check_tree</span><span class="hl sym">(</span><span class="hl kwd">make_tree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> stretch_depth<span class="hl sym">)))</span>

long_lived_tree <span class="hl sym">=</span> <span class="hl kwd">make_tree</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> max_depth<span class="hl sym">)</span>

iterations <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">**</span>max_depth
<span class="hl kwa">for</span> depth <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl sym">(</span>min_depth<span class="hl sym">,</span> stretch_depth<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">):</span>

    check <span class="hl sym">=</span> <span class="hl num">0</span>
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> iterations <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">):</span>
        check <span class="hl sym">+=</span> <span class="hl kwd">check_tree</span><span class="hl sym">(</span><span class="hl kwd">make_tree</span><span class="hl sym">(</span>i<span class="hl sym">,</span> depth<span class="hl sym">)) +</span> <span class="hl kwd">check_tree</span><span class="hl sym">(</span><span class="hl kwd">make_tree</span><span class="hl sym">(-</span>i<span class="hl sym">,</span> depth<span class="hl sym">))</span>

    <span class="hl kwa">print</span><span class="hl sym">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\t</span> <span class="hl str">trees of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check:&quot;</span> <span class="hl sym">% (</span>iterations <span class="hl sym">*</span> <span class="hl num">2</span><span class="hl sym">,</span> depth<span class="hl sym">),</span> check<span class="hl sym">)</span>
    iterations <span class="hl sym">/=</span> <span class="hl num">4</span>

<span class="hl kwa">print</span><span class="hl sym">(</span><span class="hl str">&quot;long lived tree of depth %d</span><span class="hl esc">\t</span> <span class="hl str">check:&quot;</span> <span class="hl sym">%</span> max_depth<span class="hl sym">,</span> <span class="hl kwd">check_tree</span><span class="hl sym">(</span>long_lived_tree<span class="hl sym">))</span>
