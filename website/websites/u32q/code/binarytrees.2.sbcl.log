
Fri, 08 Apr 2011 00:59:39 GMT

MAKE:
cp: `binarytrees.sbcl-2.sbcl' and `./binarytrees.sbcl-2.sbcl' are the same file
SBCL built with: /usr/local/bin/sbcl --userinit /dev/null --batch --eval '(load "binarytrees.sbcl-2.sbcl_compile")'
### START binarytrees.sbcl-2.sbcl_compile
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "binarytrees.sbcl-2.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END binarytrees.sbcl-2.sbcl_compile


; compiling file "/home/dunham/shootout/bench/binarytrees/binarytrees.sbcl-2.sbcl" (written 18 FEB 2011 10:56:09 AM):
; compiling (DECLAIM (OPTIMIZE # ...))
; compiling (DEFUN BUILD-BTREE ...)
; compiling (DEFUN CHECK-NODE ...)
; compiling (DEFUN LOOP-DEPTHS ...)
; compiling (DEFUN MAIN ...)

; /home/dunham/benchmarksgame/binarytrees/tmp/binarytrees.sbcl-2.fasl written
; compilation finished in 0:00:00.022
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into sbcl.core:
writing 3512 bytes from the read-only space at 0x01000000
writing 2256 bytes from the static space at 0x01100000
writing 27607040 bytes from the dynamic space at 0x09000000
done]
### START binarytrees.sbcl-2.sbcl_run
(main) (quit)
### END binarytrees.sbcl-2.sbcl_run

0.51s to complete and log all make actions

COMMAND LINE:
/usr/local/bin/sbcl  --noinform --core sbcl.core --userinit /dev/null --load binarytrees.sbcl-2.sbcl_run 20

PROGRAM OUTPUT:
stretch tree of depth 21	 check: -1
2097152	 trees of depth 4	 check: -2097152
524288	 trees of depth 6	 check: -524288
131072	 trees of depth 8	 check: -131072
32768	 trees of depth 10	 check: -32768
8192	 trees of depth 12	 check: -8192
2048	 trees of depth 14	 check: -2048
512	 trees of depth 16	 check: -512
128	 trees of depth 18	 check: -128
32	 trees of depth 20	 check: -32
long lived tree of depth 20	 check: -1
