
Fri, 29 Aug 2008 07:16:50 GMT

MAKE:
mv fasta.scala fasta.scala
mv: `fasta.scala' and `fasta.scala' are the same file
make: [fasta.scala_run] Error 1 (ignored)
/usr/local/src/scala-2.7.2.RC1/bin/scalac -optimise fasta.scala
iterations: 0 for 1
iterations: 0 for 4
iterations: 0 for 1
iterations: 0 for 1
iterations: 0 for 1
iterations: 0 for 1
iterations: 0 for 4
iterations: 0 for 7
iterations: 4 for 4
in: (1,IState(Map(),<>))
(2,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed9 -> CHAR, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed3 -> CHAR, variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed11 -> CHAR),<>))
(3,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed9 -> CHAR, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed3 -> CHAR, variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed11 -> CHAR),<>))
(4,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed9 -> CHAR, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed3 -> CHAR, variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(5,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed31 -> CHAR, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed32 -> DOUBLE, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed36 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed34 -> DOUBLE, variable boxed11 -> CHAR),<>))
(6,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed31 -> CHAR, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed32 -> DOUBLE, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed36 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed34 -> DOUBLE, variable boxed11 -> CHAR),<>))
(7,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed31 -> CHAR, variable boxed23 -> CHAR, variable boxed32 -> DOUBLE, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed36 -> DOUBLE, variable boxed34 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(9,IState(Map(variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed31 -> CHAR, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed32 -> DOUBLE, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed36 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed34 -> DOUBLE, variable boxed11 -> CHAR),<>))
(10,IState(Map(variable boxed15 -> CHAR, variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable cp$10 -> REFERENCE(scala.runtime.DoubleRef), variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable ev$30 -> REFERENCE(java.lang.Object), variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed31 -> CHAR, variable boxed23 -> CHAR, variable boxed32 -> DOUBLE, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed36 -> DOUBLE, variable boxed34 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed11 -> CHAR),<>))
(11,IState(Map(variable boxed15 -> CHAR, variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable cp$10 -> REFERENCE(scala.runtime.DoubleRef), variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable ev$30 -> REFERENCE(java.lang.Object), variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed31 -> CHAR, variable boxed23 -> CHAR, variable boxed32 -> DOUBLE, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed36 -> DOUBLE, variable boxed34 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed11 -> CHAR),<>))
(12,IState(Map(variable boxed15 -> CHAR, variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable cp$10 -> REFERENCE(scala.runtime.DoubleRef), variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable ev$30 -> REFERENCE(java.lang.Object), variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed31 -> CHAR, variable boxed23 -> CHAR, variable boxed32 -> DOUBLE, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed36 -> DOUBLE, variable boxed34 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
out: (1,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed9 -> CHAR, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed3 -> CHAR, variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed11 -> CHAR),<>))
(2,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed9 -> CHAR, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed3 -> CHAR, variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(3,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed9 -> CHAR, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed3 -> CHAR, variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(4,IState(Map(variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed3 -> CHAR, variable boxed10 -> DOUBLE, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed11 -> CHAR),<>))
(5,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed31 -> CHAR, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed32 -> DOUBLE, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed36 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed34 -> DOUBLE, variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(6,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed31 -> CHAR, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed32 -> DOUBLE, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed36 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed34 -> DOUBLE, variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(7,IState(Map(variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, value _HomoSapiens -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed9 -> CHAR, value s -> REFERENCE(FastaOutputStream), variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, value HomoSapiens -> ARRAY[REFERENCE(Frequency)], variable boxed31 -> CHAR, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed32 -> DOUBLE, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, variable boxed33 -> CHAR, value n -> INT, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed36 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed34 -> DOUBLE, variable boxed11 -> CHAR),<>))
(8,IState(Map(),<>))
(9,IState(Map(variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed15 -> CHAR, variable boxed21 -> CHAR, variable boxed27 -> CHAR, variable boxed16 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed20 -> DOUBLE, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed14 -> DOUBLE, variable boxed30 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable cp$10 -> REFERENCE(scala.runtime.DoubleRef), variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable ev$30 -> REFERENCE(java.lang.Object), variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed31 -> CHAR, variable boxed17 -> CHAR, variable boxed25 -> CHAR, variable boxed23 -> CHAR, variable boxed5 -> CHAR, variable boxed32 -> DOUBLE, variable boxed26 -> DOUBLE, variable boxed13 -> CHAR, variable boxed29 -> CHAR, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed2 -> DOUBLE, variable boxed8 -> DOUBLE, variable boxed36 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed34 -> DOUBLE, variable boxed11 -> CHAR),<>))
(10,IState(Map(variable boxed15 -> CHAR, variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable cp$10 -> REFERENCE(scala.runtime.DoubleRef), variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable ev$30 -> REFERENCE(java.lang.Object), variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed31 -> CHAR, variable boxed23 -> CHAR, variable boxed32 -> DOUBLE, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed36 -> DOUBLE, variable boxed34 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(11,IState(Map(variable boxed15 -> CHAR, variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable cp$10 -> REFERENCE(scala.runtime.DoubleRef), variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable ev$30 -> REFERENCE(java.lang.Object), variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed31 -> CHAR, variable boxed23 -> CHAR, variable boxed32 -> DOUBLE, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed36 -> DOUBLE, variable boxed34 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed11 -> CHAR),<REFERENCE(java.lang.Object)>))
(12,IState(Map(variable boxed15 -> CHAR, variable a0 -> ARRAY[REFERENCE(scala.Tuple2)], variable boxed21 -> CHAR, variable boxed20 -> DOUBLE, variable boxed18 -> DOUBLE, variable boxed16 -> DOUBLE, variable boxed27 -> CHAR, variable boxed22 -> DOUBLE, variable $inlThis0 -> REFERENCE(fasta), variable boxed1 -> CHAR, value ALU -> REFERENCE(java.lang.String), variable boxed30 -> DOUBLE, variable boxed14 -> DOUBLE, variable boxed7 -> CHAR, variable boxed12 -> DOUBLE, variable boxed6 -> DOUBLE, variable boxed4 -> DOUBLE, variable boxed24 -> DOUBLE, variable boxed37 -> CHAR, value _IUB -> ARRAY[REFERENCE(scala.Tuple2)], variable cp$10 -> REFERENCE(scala.runtime.DoubleRef), variable boxed9 -> CHAR, variable boxed38 -> DOUBLE, variable boxed19 -> CHAR, variable ev$30 -> REFERENCE(java.lang.Object), variable boxed28 -> DOUBLE, variable boxed35 -> CHAR, variable boxed3 -> CHAR, value IUB -> ARRAY[REFERENCE(Frequency)], variable boxed10 -> DOUBLE, variable boxed25 -> CHAR, variable boxed17 -> CHAR, variable boxed31 -> CHAR, variable boxed23 -> CHAR, variable boxed32 -> DOUBLE, variable boxed5 -> CHAR, variable boxed29 -> CHAR, variable boxed13 -> CHAR, variable boxed26 -> DOUBLE, variable boxed33 -> CHAR, value ev$1 -> REFERENCE(java.lang.Object), variable boxed8 -> DOUBLE, variable boxed2 -> DOUBLE, variable boxed36 -> DOUBLE, variable boxed34 -> DOUBLE, value ev$2 -> REFERENCE(java.lang.Object), variable boxed11 -> CHAR),<ARRAY[REFERENCE(Frequency)]>))
java.util.NoSuchElementException: key not found: 8
	at scala.collection.Map$class.default(Map.scala:169)
	at scala.collection.jcl.HashMap.default(HashMap.scala:17)
	at scala.collection.Map$class.apply(Map.scala:80)
	at scala.collection.jcl.HashMap.apply(HashMap.scala:17)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$anonfun$forwardAnalysis$1.apply(DataFlowAnalysis.scala:71)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$anonfun$forwardAnalysis$1.apply(DataFlowAnalysis.scala:68)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$class.forwardAnalysis(DataFlowAnalysis.scala:68)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.forwardAnalysis(TypeFlowAnalysis.scala:106)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.run(TypeFlowAnalysis.scala:163)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeMethod(Inliners.scala:292)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeClass(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$InliningPhase.apply(Inliners.scala:36)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.FlatHashTable$$anon$1.foreach(FlatHashTable.scala:113)
	at scala.Iterable$class.foreach(Iterable.scala:256)
	at scala.collection.mutable.HashSet.foreach(HashSet.scala:31)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase.apply(ICodes.scala:85)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:268)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:266)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:247)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:579)
	at scala.tools.nsc.Global$Run.compile(Global.scala:663)
	at scala.tools.nsc.Main$.process(Main.scala:84)
	at scala.tools.nsc.Main$.main(Main.scala:98)
	at scala.tools.nsc.Main.main(Main.scala)
############# Cought exception: java.lang.RuntimeException: Could not find element key not found: 8 #################

Method: fasta.main
Method owner: object fasta
java.lang.RuntimeException: Could not find element key not found: 8
	at scala.Predef$.error(Predef.scala:76)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$class.forwardAnalysis(DataFlowAnalysis.scala:80)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.forwardAnalysis(TypeFlowAnalysis.scala:106)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.run(TypeFlowAnalysis.scala:163)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeMethod(Inliners.scala:292)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeClass(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$InliningPhase.apply(Inliners.scala:36)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.FlatHashTable$$anon$1.foreach(FlatHashTable.scala:113)
	at scala.Iterable$class.foreach(Iterable.scala:256)
	at scala.collection.mutable.HashSet.foreach(HashSet.scala:31)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase.apply(ICodes.scala:85)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:268)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:266)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:247)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:579)
	at scala.tools.nsc.Global$Run.compile(Global.scala:663)
	at scala.tools.nsc.Main$.process(Main.scala:84)
	at scala.tools.nsc.Main$.main(Main.scala:98)
	at scala.tools.nsc.Main.main(Main.scala)
def main(args: Array[java.lang.String] (ARRAY[REFERENCE(java.lang.String)])): Unit {
locals: value args, value ALU, value _IUB, value ev$1, variable boxed1, variable boxed2, variable boxed3, variable boxed4, variable boxed5, variable boxed6, variable boxed7, variable boxed8, variable boxed9, variable boxed10, variable boxed11, variable boxed12, variable boxed13, variable boxed14, variable boxed15, variable boxed16, variable boxed17, variable boxed18, variable boxed19, variable boxed20, variable boxed21, variable boxed22, variable boxed23, variable boxed24, variable boxed25, variable boxed26, variable boxed27, variable boxed28, variable boxed29, variable boxed30, value IUB, value _HomoSapiens, value ev$2, variable boxed31, variable boxed32, variable boxed33, variable boxed34, variable boxed35, variable boxed36, variable boxed37, variable boxed38, value HomoSapiens, value n, value s, variable a0, variable cp$10, variable ev$30, variable $inlThis0, variable $retVal0
startBlock: 1
blocks: [1,2,3,4,5,6,7,8,9,10,11,12]

1: 
  SCOPE_ENTER value ALU
  CONSTANT (Constant(GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA))
  STORE_LOCAL value ALU
  SCOPE_ENTER value _IUB
  SCOPE_ENTER value ev$1
  LOAD_MODULE object ScalaRunTime
  LOAD_MODULE object Array
  NEW REFERENCE(scala.runtime.BoxedObjectArray)
  DUP
  CONSTANT (Constant(15))
  CREATE_ARRAY REFERENCE(scala.Tuple2) x 1
  DUP
  CONSTANT (Constant(0))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(a))
  STORE_LOCAL variable boxed1
  LOAD_LOCAL variable boxed1
  BOX CHAR
  CONSTANT (Constant(0.27))
  STORE_LOCAL variable boxed2
  LOAD_LOCAL variable boxed2
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(1))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(c))
  STORE_LOCAL variable boxed3
  LOAD_LOCAL variable boxed3
  BOX CHAR
  CONSTANT (Constant(0.12))
  STORE_LOCAL variable boxed4
  LOAD_LOCAL variable boxed4
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(2))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(g))
  STORE_LOCAL variable boxed5
  LOAD_LOCAL variable boxed5
  BOX CHAR
  CONSTANT (Constant(0.12))
  STORE_LOCAL variable boxed6
  LOAD_LOCAL variable boxed6
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(3))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(t))
  STORE_LOCAL variable boxed7
  LOAD_LOCAL variable boxed7
  BOX CHAR
  CONSTANT (Constant(0.27))
  STORE_LOCAL variable boxed8
  LOAD_LOCAL variable boxed8
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(4))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(B))
  STORE_LOCAL variable boxed9
  LOAD_LOCAL variable boxed9
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed10
  LOAD_LOCAL variable boxed10
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(5))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(D))
  STORE_LOCAL variable boxed11
  LOAD_LOCAL variable boxed11
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed12
  LOAD_LOCAL variable boxed12
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(6))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(H))
  STORE_LOCAL variable boxed13
  LOAD_LOCAL variable boxed13
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed14
  LOAD_LOCAL variable boxed14
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(7))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(K))
  STORE_LOCAL variable boxed15
  LOAD_LOCAL variable boxed15
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed16
  LOAD_LOCAL variable boxed16
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(8))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(M))
  STORE_LOCAL variable boxed17
  LOAD_LOCAL variable boxed17
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed18
  LOAD_LOCAL variable boxed18
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(9))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(N))
  STORE_LOCAL variable boxed19
  LOAD_LOCAL variable boxed19
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed20
  LOAD_LOCAL variable boxed20
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(10))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(R))
  STORE_LOCAL variable boxed21
  LOAD_LOCAL variable boxed21
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed22
  LOAD_LOCAL variable boxed22
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(11))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(S))
  STORE_LOCAL variable boxed23
  LOAD_LOCAL variable boxed23
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed24
  LOAD_LOCAL variable boxed24
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(12))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(V))
  STORE_LOCAL variable boxed25
  LOAD_LOCAL variable boxed25
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed26
  LOAD_LOCAL variable boxed26
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(13))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(W))
  STORE_LOCAL variable boxed27
  LOAD_LOCAL variable boxed27
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed28
  LOAD_LOCAL variable boxed28
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(14))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(Y))
  STORE_LOCAL variable boxed29
  LOAD_LOCAL variable boxed29
  BOX CHAR
  CONSTANT (Constant(0.02))
  STORE_LOCAL variable boxed30
  LOAD_LOCAL variable boxed30
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  CHECK_CAST ARRAY[REFERENCE(java.lang.Object)]
  CALL_METHOD scala.runtime.BoxedObjectArrayscala.runtime.BoxedObjectArray.<init> (static-instance)
  CALL_METHOD scala.Arrayscala.Array.apply (dynamic)
  CONSTANT (Constant(Tuple2))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  STORE_LOCAL value ev$1
  LOAD_LOCAL value ev$1
  IS_INSTANCE REFERENCE(scala.runtime.BoxedArray)
  CZJUMP (BOOL)NE ? 2 : 3
  
2: 
  LOAD_MODULE object ScalaRunTime
  LOAD_LOCAL value ev$1
  CHECK_CAST REFERENCE(scala.runtime.BoxedArray)
  CONSTANT (Constant(Tuple2))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  JUMP 4
  
3: 
  LOAD_LOCAL value ev$1
  JUMP 4
  
4: 
  CHECK_CAST ARRAY[REFERENCE(scala.Tuple2)]
  SCOPE_EXIT value ev$1
  STORE_LOCAL value _IUB
  SCOPE_ENTER value IUB
  THIS
  LOAD_LOCAL value _IUB
  STORE_LOCAL variable a0
  STORE_LOCAL variable $inlThis0
  JUMP 9
  
5: 
  LOAD_MODULE object ScalaRunTime
  LOAD_LOCAL value ev$2
  CHECK_CAST REFERENCE(scala.runtime.BoxedArray)
  CONSTANT (Constant(Tuple2))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  JUMP 7
  
6: 
  LOAD_LOCAL value ev$2
  JUMP 7
  
7: 
  CHECK_CAST ARRAY[REFERENCE(scala.Tuple2)]
  SCOPE_EXIT value ev$2
  STORE_LOCAL value _HomoSapiens
  SCOPE_ENTER value HomoSapiens
  THIS
  LOAD_LOCAL value _HomoSapiens
  CALL_METHOD fastafasta.makeCumulative (dynamic)
  STORE_LOCAL value HomoSapiens
  SCOPE_ENTER value n
  LOAD_LOCAL value args
  CONSTANT (Constant(0))
  LOAD_ARRAY_ITEM (REFERENCE(java.lang.Object))
  CALL_METHOD java.lang.Integerjava.lang.Integer.parseInt (static-class)
  STORE_LOCAL value n
  SCOPE_ENTER value s
  NEW REFERENCE(FastaOutputStream)
  DUP
  LOAD_FIELD java.lang.System.out
  CALL_METHOD FastaOutputStreamFastaOutputStream.<init> (static-instance)
  STORE_LOCAL value s
  LOAD_LOCAL value s
  CONSTANT (Constant(ONE Homo sapiens alu))
  CALL_METHOD FastaOutputStreamFastaOutputStream.writeDescription (dynamic)
  LOAD_LOCAL value s
  LOAD_LOCAL value ALU
  LOAD_LOCAL value n
  CONSTANT (Constant(2))
  CALL_PRIMITIVE Arithmetic(MUL,INT)
  CALL_METHOD FastaOutputStreamFastaOutputStream.writeRepeatingSequence (dynamic)
  LOAD_LOCAL value s
  CONSTANT (Constant(TWO IUB ambiguity codes))
  CALL_METHOD FastaOutputStreamFastaOutputStream.writeDescription (dynamic)
  LOAD_LOCAL value s
  LOAD_LOCAL value IUB
  LOAD_LOCAL value n
  CONSTANT (Constant(3))
  CALL_PRIMITIVE Arithmetic(MUL,INT)
  CALL_METHOD FastaOutputStreamFastaOutputStream.writeRandomSequence (dynamic)
  LOAD_LOCAL value s
  CONSTANT (Constant(THREE Homo sapiens frequency))
  CALL_METHOD FastaOutputStreamFastaOutputStream.writeDescription (dynamic)
  LOAD_LOCAL value s
  LOAD_LOCAL value HomoSapiens
  LOAD_LOCAL value n
  CONSTANT (Constant(5))
  CALL_PRIMITIVE Arithmetic(MUL,INT)
  CALL_METHOD FastaOutputStreamFastaOutputStream.writeRandomSequence (dynamic)
  LOAD_LOCAL value s
  CALL_METHOD FastaOutputStreamjava.io.FilterOutputStream.close (dynamic)
  SCOPE_EXIT value ALU
  SCOPE_EXIT value _IUB
  SCOPE_EXIT value IUB
  SCOPE_EXIT value _HomoSapiens
  SCOPE_EXIT value HomoSapiens
  SCOPE_EXIT value n
  SCOPE_EXIT value s
  RETURN (UNIT)
  
8: 
  STORE_LOCAL value IUB
  SCOPE_ENTER value _HomoSapiens
  SCOPE_ENTER value ev$2
  LOAD_MODULE object ScalaRunTime
  LOAD_MODULE object Array
  NEW REFERENCE(scala.runtime.BoxedObjectArray)
  DUP
  CONSTANT (Constant(4))
  CREATE_ARRAY REFERENCE(scala.Tuple2) x 1
  DUP
  CONSTANT (Constant(0))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(a))
  STORE_LOCAL variable boxed31
  LOAD_LOCAL variable boxed31
  BOX CHAR
  CONSTANT (Constant(0.302954942668))
  STORE_LOCAL variable boxed32
  LOAD_LOCAL variable boxed32
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(1))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(c))
  STORE_LOCAL variable boxed33
  LOAD_LOCAL variable boxed33
  BOX CHAR
  CONSTANT (Constant(0.1979883004921))
  STORE_LOCAL variable boxed34
  LOAD_LOCAL variable boxed34
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(2))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(g))
  STORE_LOCAL variable boxed35
  LOAD_LOCAL variable boxed35
  BOX CHAR
  CONSTANT (Constant(0.1975473066391))
  STORE_LOCAL variable boxed36
  LOAD_LOCAL variable boxed36
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  DUP
  CONSTANT (Constant(3))
  LOAD_MODULE object Predef$Pair
  CONSTANT (Constant(t))
  STORE_LOCAL variable boxed37
  LOAD_LOCAL variable boxed37
  BOX CHAR
  CONSTANT (Constant(0.3015094502008))
  STORE_LOCAL variable boxed38
  LOAD_LOCAL variable boxed38
  BOX DOUBLE
  CALL_METHOD scala.Predef$Pairscala.Predef$Pair.apply (dynamic)
  STORE_ARRAY_ITEM (REFERENCE(scala.Tuple2))
  CHECK_CAST ARRAY[REFERENCE(java.lang.Object)]
  CALL_METHOD scala.runtime.BoxedObjectArrayscala.runtime.BoxedObjectArray.<init> (static-instance)
  CALL_METHOD scala.Arrayscala.Array.apply (dynamic)
  CONSTANT (Constant(Tuple2))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  STORE_LOCAL value ev$2
  LOAD_LOCAL value ev$2
  IS_INSTANCE REFERENCE(scala.runtime.BoxedArray)
  CZJUMP (BOOL)NE ? 5 : 6
  
9: 
  SCOPE_ENTER variable cp$10
  NEW REFERENCE(scala.runtime.DoubleRef)
  DUP
  CONSTANT (Constant(0.0))
  CALL_METHOD scala.runtime.DoubleRefscala.runtime.DoubleRef.<init> (static-instance)
  STORE_LOCAL variable cp$10
  SCOPE_ENTER variable ev$30
  LOAD_MODULE object ScalaRunTime
  NEW REFERENCE(scala.runtime.BoxedObjectArray)
  DUP
  LOAD_LOCAL variable a0
  CHECK_CAST ARRAY[REFERENCE(java.lang.Object)]
  CALL_METHOD scala.runtime.BoxedObjectArrayscala.runtime.BoxedObjectArray.<init> (static-instance)
  NEW REFERENCE(fasta$$anonfun$makeCumulative$1)
  DUP
  LOAD_LOCAL variable cp$10
  CALL_METHOD fasta$$anonfun$makeCumulative$1fasta$$anonfun$makeCumulative$1.<init> (static-instance)
  CALL_METHOD scala.runtime.BoxedObjectArrayscala.runtime.BoxedArray.map (dynamic)
  CONSTANT (Constant(Frequency))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  STORE_LOCAL variable ev$30
  LOAD_LOCAL variable ev$30
  IS_INSTANCE REFERENCE(scala.runtime.BoxedArray)
  CZJUMP (BOOL)NE ? 10 : 11
  
10: 
  LOAD_MODULE object ScalaRunTime
  LOAD_LOCAL variable ev$30
  CHECK_CAST REFERENCE(scala.runtime.BoxedArray)
  CONSTANT (Constant(Frequency))
  CALL_METHOD scala.runtime.ScalaRunTimescala.runtime.ScalaRunTime.arrayValue (dynamic)
  JUMP 12
  
11: 
  LOAD_LOCAL variable ev$30
  JUMP 12
  
12: 
  CHECK_CAST ARRAY[REFERENCE(Frequency)]
  SCOPE_EXIT variable ev$30
  SCOPE_EXIT variable cp$10
  JUMP 8
  
}
Exception handlers: 
  
Exception in thread "main" java.lang.RuntimeException: Could not find element key not found: 8
	at scala.Predef$.error(Predef.scala:76)
	at scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$class.forwardAnalysis(DataFlowAnalysis.scala:80)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.forwardAnalysis(TypeFlowAnalysis.scala:106)
	at scala.tools.nsc.backend.icode.analysis.TypeFlowAnalysis$MethodTFA.run(TypeFlowAnalysis.scala:163)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeMethod(Inliners.scala:292)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$Inliner$$anonfun$analyzeClass$1.apply(Inliners.scala:270)
	at scala.List.foreach(List.scala:834)
	at scala.tools.nsc.backend.opt.Inliners$Inliner.analyzeClass(Inliners.scala:270)
	at scala.tools.nsc.backend.opt.Inliners$InliningPhase.apply(Inliners.scala:36)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase$$anonfun$apply$1.apply(ICodes.scala:85)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.FlatHashTable$$anon$1.foreach(FlatHashTable.scala:113)
	at scala.Iterable$class.foreach(Iterable.scala:256)
	at scala.collection.mutable.HashSet.foreach(HashSet.scala:31)
	at scala.tools.nsc.backend.icode.ICodes$ICodePhase.apply(ICodes.scala:85)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:268)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:247)
	at scala.Iterator$class.foreach(Iterator.scala:410)
	at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:266)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:247)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:579)
	at scala.tools.nsc.Global$Run.compile(Global.scala:663)
	at scala.tools.nsc.Main$.process(Main.scala:84)
	at scala.tools.nsc.Main$.main(Main.scala:98)
	at scala.tools.nsc.Main.main(Main.scala)
make: [fasta.scala_run] Error 1 (ignored)

COMMAND LINE:
 /usr/local/src/scala-2.7.2.RC1/bin/scala -howtorun object fasta 250000

PROGRAM FAILED 


PROGRAM OUTPUT:
java.lang.ClassNotFoundException: fasta
