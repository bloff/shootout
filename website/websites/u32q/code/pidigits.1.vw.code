<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://shootout.alioth.debian.org/</span>
<span class="hl com">    contributed by Isaac Gouy</span>
<span class="hl com">    modified by Eliot Miranda *&quot;</span>!

<span class="hl kwc">Object</span> <span class="hl kwb">subclass:</span> <span class="hl kwd">#PiDigitSpigot</span>   <span class="hl kwb">instanceVariableNames:</span> <span class="hl str">'z x inverse'</span>   <span class="hl kwb">classVariableNames:</span> <span class="hl str">''</span>   <span class="hl kwb">poolDictionaries:</span> <span class="hl str">''</span>   <span class="hl kwb">category:</span> <span class="hl str">'Shootout'</span>!

<span class="hl kwc">Object</span> <span class="hl kwb">subclass:</span> <span class="hl kwd">#Transformation</span>   <span class="hl kwb">instanceVariableNames:</span> <span class="hl str">'q r s t k'</span>   <span class="hl kwb">classVariableNames:</span> <span class="hl str">''</span>   <span class="hl kwb">poolDictionaries:</span> <span class="hl str">''</span>   <span class="hl kwb">category:</span> <span class="hl str">'Shootout'</span>!!<span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'private'</span>!<span class="hl kwb">consume:</span> aTransformation   <span class="hl sym">^</span>z <span class="hl kwb">*</span> aTransformation! !!<span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'private'</span>!digit   <span class="hl sym">^(</span>z <span class="hl kwb">extract:</span> <span class="hl num">3</span><span class="hl sym">)</span> <span class="hl kwb">floor</span>! !!<span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'private'</span>!<span class="hl kwb">isSafe:</span> aDigit   <span class="hl sym">^</span>aDigit <span class="hl kwb">=</span> <span class="hl sym">(</span>z <span class="hl kwb">extract:</span> <span class="hl num">4</span><span class="hl sym">)</span> <span class="hl kwb">floor</span>! !!<span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'private'</span>!<span class="hl kwb">produce:</span> anInteger   inverse <span class="hl kwb">q:</span> <span class="hl num">10</span> <span class="hl kwb">r: -</span><span class="hl num">10</span> <span class="hl kwb">*</span> anInteger <span class="hl kwb">s:</span> <span class="hl num">0</span> <span class="hl kwb">t:</span> <span class="hl num">1</span><span class="hl sym">.   ^</span>inverse <span class="hl kwb">*</span> z! !!<span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!next   <span class="hl kwd">| y |</span>   <span class="hl sym">^(</span><span class="hl kwa">self</span> <span class="hl kwb">isSafe:</span> <span class="hl sym">(</span>y <span class="hl sym">:=</span> <span class="hl kwa">self</span> <span class="hl kwb">digit</span><span class="hl sym">))</span>      <span class="hl kwb">ifTrue:</span> <span class="hl sym">[</span>z <span class="hl sym">:=</span> <span class="hl kwa">self</span> <span class="hl kwb">produce:</span> y<span class="hl sym">.</span> y<span class="hl sym">]</span>      <span class="hl kwb">ifFalse:</span> <span class="hl sym">[</span>z <span class="hl sym">:=</span> <span class="hl kwa">self</span> <span class="hl kwb">consume:</span> x <span class="hl kwb">next</span><span class="hl sym">.</span> <span class="hl kwa">self</span> <span class="hl kwb">next</span><span class="hl sym">]</span>! !!<span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'initialize-release'</span>!initialize   z <span class="hl sym">:=</span> <span class="hl kwc">Transformation</span> <span class="hl kwb">unity</span><span class="hl sym">.</span>   x <span class="hl sym">:=</span> <span class="hl kwc">Transformation</span> <span class="hl kwb">new</span><span class="hl sym">.</span>   inverse <span class="hl sym">:=</span> <span class="hl kwc">Transformation</span> <span class="hl kwb">new</span><span class="hl sym">.</span>! !!<span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'instance creation'</span>!new   <span class="hl sym">^</span><span class="hl kwa">super</span> <span class="hl kwb">new initialize</span>! !!<span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span>!<span class="hl kwb">pidigitsTo:</span> v <span class="hl kwb">width:</span> width <span class="hl kwb">to:</span> output   <span class="hl kwd">| n i pidigits |</span>   n <span class="hl sym">:=</span> v<span class="hl sym">.</span>   i <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>   pidigits <span class="hl sym">:=</span> <span class="hl kwc">PiDigitSpigot</span> <span class="hl kwb">new</span><span class="hl sym">.   [</span>n &gt; <span class="hl num">0</span><span class="hl sym">]</span> <span class="hl kwb">whileTrue:</span>      <span class="hl sym">[</span>n &lt; <span class="hl kwb">width         ifTrue:</span>            <span class="hl sym">[</span>n <span class="hl kwb">timesRepeat:</span> <span class="hl sym">[</span>output <span class="hl kwb">nextPut:</span> <span class="hl sym">(</span><span class="hl kwc">Character</span> <span class="hl kwb">digitValue:</span> pidigits <span class="hl kwb">next</span><span class="hl sym">)].</span>            n <span class="hl kwb">to:</span> width <span class="hl kwb">do:</span> <span class="hl sym">[</span><span class="hl kwd">:each</span> <span class="hl sym">|</span> output <span class="hl kwb">space</span><span class="hl sym">].</span>            i <span class="hl sym">:=</span> i <span class="hl kwb">+</span> n<span class="hl sym">]</span>         <span class="hl kwb">ifFalse:</span>            <span class="hl sym">[</span>width <span class="hl kwb">timesRepeat:</span> <span class="hl sym">[</span>output <span class="hl kwb">nextPut:</span> <span class="hl sym">(</span><span class="hl kwc">Character</span> <span class="hl kwb">digitValue:</span> pidigits <span class="hl kwb">next</span><span class="hl sym">)].</span>            i <span class="hl sym">:=</span> i <span class="hl kwb">+</span> width<span class="hl sym">].</span>
      output <span class="hl kwb">tab</span><span class="hl sym">;</span> <span class="hl kwb">nextPut:</span> $:<span class="hl sym">;</span> <span class="hl kwb">print:</span> i<span class="hl sym">;</span> <span class="hl kwb">nl</span><span class="hl sym">.</span>
      n <span class="hl sym">:=</span> n <span class="hl kwb">-</span> width<span class="hl sym">]</span>! !!<span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmark scripts'</span>!pidigits   <span class="hl kwa">self</span> <span class="hl kwb">pidigitsTo:</span> <span class="hl kwa">self</span> <span class="hl kwb">arg width:</span> <span class="hl num">10</span> <span class="hl kwb">to:</span> <span class="hl kwa">self</span> <span class="hl kwb">stdout</span><span class="hl sym">.   ^</span><span class="hl str">''</span>! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!<span class="hl kwb">*</span> aTransformation   <span class="hl sym">^</span><span class="hl kwa">self</span> <span class="hl kwb">species       q:</span> q <span class="hl kwb">*</span> aTransformation <span class="hl kwb">q      r:</span> q <span class="hl kwb">*</span> aTransformation <span class="hl kwb">r +</span> <span class="hl sym">(</span>r <span class="hl kwb">*</span> aTransformation <span class="hl kwb">t</span><span class="hl sym">)</span>      <span class="hl kwb">s:</span> s <span class="hl kwb">*</span> aTransformation <span class="hl kwb">q +</span> <span class="hl sym">(</span>t <span class="hl kwb">*</span> aTransformation <span class="hl kwb">s</span><span class="hl sym">)</span>      <span class="hl kwb">t:</span> s <span class="hl kwb">*</span> aTransformation <span class="hl kwb">r +</span> <span class="hl sym">(</span>t <span class="hl kwb">*</span> aTransformation <span class="hl kwb">t</span><span class="hl sym">)</span>! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!<span class="hl kwb">extract:</span> anInteger   <span class="hl sym">^(</span>q <span class="hl kwb">*</span> anInteger <span class="hl kwb">+</span> r<span class="hl sym">)</span> <span class="hl kwb">//</span> <span class="hl sym">(</span>s <span class="hl kwb">*</span> anInteger <span class="hl kwb">+</span> t<span class="hl sym">)</span>! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!next   k <span class="hl sym">:=</span> k <span class="hl kwb">+</span><span class="hl num">1</span><span class="hl sym">.</span>   q <span class="hl sym">:=</span> k<span class="hl sym">.</span>   r <span class="hl sym">:=</span> <span class="hl num">4</span> <span class="hl kwb">*</span> k <span class="hl kwb">+</span> <span class="hl num">2</span><span class="hl sym">.</span>   s <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>   t <span class="hl sym">:=</span> <span class="hl num">2</span> <span class="hl kwb">*</span> k <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl sym">.</span>! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!q   <span class="hl sym">^</span>q! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!<span class="hl kwb">q:</span> anInteger1 <span class="hl kwb">r:</span> anInteger2 <span class="hl kwb">s:</span> anInteger3 <span class="hl kwb">t:</span> anInteger4   q <span class="hl sym">:=</span> anInteger1<span class="hl sym">.</span>   r <span class="hl sym">:=</span> anInteger2<span class="hl sym">.</span>   s <span class="hl sym">:=</span> anInteger3<span class="hl sym">.</span>   t <span class="hl sym">:=</span> anInteger4<span class="hl sym">.</span>   k <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!r   <span class="hl sym">^</span>r! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!s   <span class="hl sym">^</span>s! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'accessing'</span>!t   <span class="hl sym">^</span>t! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">methodsFor:</span> <span class="hl str">'initialize-release'</span>!initialize   q <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>   r <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>   s <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>   t <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>   k <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'instance creation'</span>!new   <span class="hl sym">^</span><span class="hl kwa">super</span> <span class="hl kwb">new initialize</span>! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'instance creation'</span>!<span class="hl kwb">q:</span> anInteger1 <span class="hl kwb">r:</span> anInteger2 <span class="hl kwb">s:</span> anInteger3 <span class="hl kwb">t:</span> anInteger4   <span class="hl sym">^(</span><span class="hl kwa">super</span> <span class="hl kwb">new</span><span class="hl sym">)</span> <span class="hl kwb">q:</span> anInteger1 <span class="hl kwb">r:</span> anInteger2 <span class="hl kwb">s:</span> anInteger3 <span class="hl kwb">t:</span> anInteger4! !!<span class="hl kwc">Transformation</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'instance creation'</span>!unity   <span class="hl sym">^</span><span class="hl kwa">self</span> <span class="hl kwb">q:</span> <span class="hl num">1</span> <span class="hl kwb">r:</span> <span class="hl num">0</span> <span class="hl kwb">s:</span> <span class="hl num">0</span> <span class="hl kwb">t:</span> <span class="hl num">1</span>! !
