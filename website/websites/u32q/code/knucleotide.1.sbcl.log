
Tue, 19 May 2009 17:31:23 GMT

MAKE:
cp: `knucleotide.sbcl' and `./knucleotide.sbcl' are the same file
SBCL built with: /usr/local/bin/sbcl --userinit /dev/null --batch --eval '(load "knucleotide.sbcl_compile")'
### START knucleotide.sbcl_compile
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(handler-bind ((sb-ext:defconstant-uneql      (lambda (c) (abort c))))      (load (compile-file "knucleotide.sbcl" ))) (save-lisp-and-die "sbcl.core" :purify t)
### END knucleotide.sbcl_compile


; compiling file "/home/dunham/shootout/bench/knucleotide/knucleotide.sbcl" (written 21 FEB 2009 04:21:15 PM):
; compiling (DEFUN READ-DATA ...)
; compiling (DEFUN ACCUMULATE-FREQUENCIES ...)
; compiling (DEFUN CALCULATE-FREQUENCIES ...)
; compiling (DEFUN WRITE-FREQUENCIES ...)
; file: /home/dunham/shootout/bench/knucleotide/knucleotide.sbcl
; in: DEFUN WRITE-FREQUENCIES
;     (* (/ (THE (INTEGER 0 999999) (CDR ENTRY)) SUM) 100.0)
; --> * FLOAT 
; ==>
;   (SB-KERNEL:%SINGLE-FLOAT SB-C::N)
; 
; note: forced to do full call
;       unable to do inline float coercion (cost 5) because:
;       The first argument is a RATIONAL, not a (SIGNED-BYTE 32).
;       unable to do inline float coercion (cost 6) because:
;       The first argument is a RATIONAL, not a (UNSIGNED-BYTE 32).

;     (FORMAT T "~A ~,3F~%" (CAR ENTRY)
;             (* (/ (THE (INTEGER 0 999999) (CDR ENTRY)) SUM) 100.0))
; --> FORMAT FORMATTER FUNCTION BLOCK LET 
; ==>
;   (SB-FORMAT::FORMAT-FIXED STREAM #:FORMAT-ARG-307 #:G587 #:G588 #:G589 #:G590
;                            #:G591 NIL)
; 
; note: doing float to pointer coercion (cost 13)

;     (STRING< (CAR V1) (CAR V2))
; ==>
;   (SB-KERNEL:STRING<* SB-C::STRING1 SB-C::STRING2 SB-C::START1 SB-C::END1
;                       SB-C::START2 SB-C::END2)
; 
; note: unable to
;   optimize
; due to type uncertainty:
;   The first argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                               SYMBOL CHARACTER), not a SIMPLE-BASE-STRING.
;   The second argument is a (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING
;                                SYMBOL CHARACTER), not a SIMPLE-BASE-STRING.

; compiling (DEFUN MAIN ...); 
; compilation unit finished
;   printed 3 notes


; /home/dunham/benchmarksgame/knucleotide/tmp/knucleotide.fasl written
; compilation finished in 0:00:00.158
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /home/dunham/benchmarksgame/knucleotide/tmp/sbcl.core:
writing 3488 bytes from the read-only space at 0x01000000
writing 2160 bytes from the static space at 0x01100000
writing 27217920 bytes from the dynamic space at 0x09000000
done]
### START knucleotide.sbcl_run
(proclaim '(optimize (speed 3) (safety 0) (debug 0) (compilation-speed 0) (space 0)))
(main) (quit)
### END knucleotide.sbcl_run

0.70s to complete and log all make actions

COMMAND LINE:
/usr/local/bin/sbcl  --noinform --core sbcl.core --userinit /dev/null --load knucleotide.sbcl_run 0 < knucleotide-input25000000.txt

PROGRAM OUTPUT:
A 30.295
T 30.151
C 19.800
G 19.754

AA 9.177
TA 9.132
AT 9.131
TT 9.091
CA 6.002
AC 6.001
AG 5.987
GA 5.984
CT 5.971
TC 5.971
GT 5.957
TG 5.956
CC 3.917
GC 3.911
CG 3.909
GG 3.902

1471758	GGT
446535	GGTA
47336	GGTATT
893	GGTATTTTAATT
893	GGTATTTTAATTTATAGT
