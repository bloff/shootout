<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Eric Willigers</span>
<span class="hl com">*/</span>

<span class="hl kwa">object</span> revcomp <span class="hl kwa">extends</span> java<span class="hl sym">.</span>io<span class="hl sym">.</span><span class="hl kwc">ByteArrayOutputStream</span> with Application <span class="hl sym">{</span>
   <span class="hl kwa">val</span> cmp <span class="hl sym">=</span> <span class="hl kwc">Array</span><span class="hl sym">.</span>range<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">128</span><span class="hl sym">)</span>
   <span class="hl kwa">for</span> <span class="hl sym">((</span>a<span class="hl sym">,</span> b<span class="hl sym">) &lt;-</span> <span class="hl str">&quot;TAGCVHRMYKBDU&quot;</span><span class="hl sym">.</span>toList<span class="hl sym">.</span>zip<span class="hl sym">(</span><span class="hl str">&quot;ATCGBDYKRMVHA&quot;</span><span class="hl sym">.</span>toList<span class="hl sym">)) {</span>
      cmp<span class="hl sym">(</span>a<span class="hl sym">) =</span> b
      cmp<span class="hl sym">(</span>a <span class="hl sym">+</span> <span class="hl num">32</span><span class="hl sym">) =</span> b
   <span class="hl sym">}</span>

   <span class="hl kwa">def</span> reverse<span class="hl sym">() {</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span>count <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">) {</span>
         <span class="hl kwa">var</span> begin <span class="hl sym">=</span> buf<span class="hl sym">.</span>indexOf<span class="hl sym">(</span><span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">) +</span> <span class="hl num">1</span>
         <span class="hl kwa">var</span> end <span class="hl sym">=</span> count <span class="hl sym">-</span> <span class="hl num">1</span>
         <span class="hl kwa">while</span> <span class="hl sym">(</span>begin <span class="hl sym">&lt;=</span> end<span class="hl sym">) {</span>
            <span class="hl kwa">if</span> <span class="hl sym">(</span>buf<span class="hl sym">(</span>begin<span class="hl sym">) ==</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)</span> begin <span class="hl sym">+=</span> <span class="hl num">1</span>
            <span class="hl kwa">if</span> <span class="hl sym">(</span>buf<span class="hl sym">(</span>end<span class="hl sym">) ==</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">'</span><span class="hl sym">)</span> end <span class="hl sym">-=</span> <span class="hl num">1</span>
            <span class="hl kwa">if</span> <span class="hl sym">(</span>begin <span class="hl sym">&lt;=</span> end<span class="hl sym">) {</span>
               <span class="hl kwa">val</span> tmp <span class="hl sym">=</span> buf<span class="hl sym">(</span>begin<span class="hl sym">)</span>
               buf<span class="hl sym">(</span>begin<span class="hl sym">) =</span> cmp<span class="hl sym">(</span>buf<span class="hl sym">(</span>end<span class="hl sym">)).</span>byteValue
               begin <span class="hl sym">+=</span> <span class="hl num">1</span>
               buf<span class="hl sym">(</span>end<span class="hl sym">) =</span> cmp<span class="hl sym">(</span>tmp<span class="hl sym">).</span>byteValue
               end <span class="hl sym">-=</span> <span class="hl num">1</span>
            <span class="hl sym">}</span>
         <span class="hl sym">}</span>
         <span class="hl kwc">System</span><span class="hl sym">.</span>out<span class="hl sym">.</span>write<span class="hl sym">(</span>buf<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> count<span class="hl sym">)</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">val</span> line <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwc">Array</span><span class="hl sym">[</span><span class="hl kwc">Byte</span><span class="hl sym">](</span><span class="hl num">82</span><span class="hl sym">)</span>
   <span class="hl kwa">var</span> read <span class="hl sym">=</span> <span class="hl kwc">System</span><span class="hl sym">.</span>in<span class="hl sym">.</span>read<span class="hl sym">(</span>line<span class="hl sym">)</span>
   <span class="hl kwa">while</span> <span class="hl sym">(</span>read <span class="hl sym">!= -</span><span class="hl num">1</span><span class="hl sym">) {</span>
      <span class="hl kwa">var</span> i <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwa">var</span> last <span class="hl sym">=</span> <span class="hl num">0</span>
      <span class="hl kwa">while</span> <span class="hl sym">(</span>i <span class="hl sym">&lt;</span> read<span class="hl sym">) {</span>
         <span class="hl kwa">if</span> <span class="hl sym">(</span>line<span class="hl sym">(</span>i<span class="hl sym">) ==</span> <span class="hl str">'&gt;'</span><span class="hl sym">) {</span>
            write<span class="hl sym">(</span>line<span class="hl sym">,</span> last<span class="hl sym">,</span> i <span class="hl sym">-</span> last<span class="hl sym">)</span>
            reverse<span class="hl sym">()</span>
            reset<span class="hl sym">()</span>
            last <span class="hl sym">=</span> i
         <span class="hl sym">}</span>
         i <span class="hl sym">+=</span> <span class="hl num">1</span>
      <span class="hl sym">}</span>
      write<span class="hl sym">(</span>line<span class="hl sym">,</span> last<span class="hl sym">,</span> read <span class="hl sym">-</span> last<span class="hl sym">)</span>
      read <span class="hl sym">=</span> <span class="hl kwc">System</span><span class="hl sym">.</span>in<span class="hl sym">.</span>read<span class="hl sym">(</span>line<span class="hl sym">)</span>
   <span class="hl sym">}</span>
   reverse<span class="hl sym">()</span>
<span class="hl sym">}</span>
