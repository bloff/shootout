<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># Contributed by Sebastien Loisel</span>
<span class="hl slc"># Fixed by Isaac Gouy</span>
<span class="hl slc"># Sped up by Josh Goldfoot</span>
<span class="hl slc"># Dirtily sped up by Simon Descarpentries</span>
<span class="hl slc"># Speed up by M. Griffin</span>

<span class="hl kwa">import</span> math
<span class="hl kwa">import</span> sys

<span class="hl kwa">def</span> <span class="hl kwd">eval_A_times_u</span> <span class="hl sym">(</span>u<span class="hl sym">):</span>
	<span class="hl kwa">return</span> <span class="hl sym">[</span><span class="hl kwb">sum</span><span class="hl sym">([((</span><span class="hl num">1.0</span> <span class="hl sym">/ ((</span>i <span class="hl sym">+</span> j<span class="hl sym">) * (</span>i <span class="hl sym">+</span> j <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">) /</span> <span class="hl num">2</span> <span class="hl sym">+</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)) *</span> u_j<span class="hl sym">)</span> <span class="hl kwa">for</span> j<span class="hl sym">,</span> u_j <span class="hl kwa">in</span> <span class="hl kwb">enumerate</span><span class="hl sym">(</span>u<span class="hl sym">)])</span> <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span><span class="hl kwb">len</span><span class="hl sym">(</span>u<span class="hl sym">))]</span>

<span class="hl kwa">def</span> <span class="hl kwd">eval_At_times_u</span> <span class="hl sym">(</span>u<span class="hl sym">):</span>
	<span class="hl kwa">return</span> <span class="hl sym">[</span><span class="hl kwb">sum</span><span class="hl sym">([((</span><span class="hl num">1.0</span> <span class="hl sym">/ ((</span>j <span class="hl sym">+</span> i<span class="hl sym">) * (</span>j <span class="hl sym">+</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">) /</span> <span class="hl num">2</span> <span class="hl sym">+</span> j <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)) *</span> u_j<span class="hl sym">)</span> <span class="hl kwa">for</span> j<span class="hl sym">,</span> u_j <span class="hl kwa">in</span> <span class="hl kwb">enumerate</span><span class="hl sym">(</span>u<span class="hl sym">)])</span> <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span><span class="hl kwb">len</span><span class="hl sym">(</span>u<span class="hl sym">))]</span>

<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl sym">():</span>
	u <span class="hl sym">= [</span><span class="hl num">1</span><span class="hl sym">] *</span> <span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])</span>

	<span class="hl kwa">for</span> dummy <span class="hl kwa">in</span> <span class="hl kwb">xrange</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">):</span>
		v <span class="hl sym">=</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span><span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span>u<span class="hl sym">))</span>
		u <span class="hl sym">=</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span><span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span>v<span class="hl sym">))</span>

	vBv <span class="hl sym">=</span> <span class="hl kwb">sum</span><span class="hl sym">(</span><span class="hl kwb">map</span><span class="hl sym">(</span><span class="hl kwa">lambda</span> x<span class="hl sym">,</span>y<span class="hl sym">:</span> x<span class="hl sym">*</span>y<span class="hl sym">,</span> u<span class="hl sym">,</span> v<span class="hl sym">))</span>
	vv <span class="hl sym">=</span> <span class="hl kwb">sum</span><span class="hl sym">(</span><span class="hl kwb">map</span><span class="hl sym">(</span><span class="hl kwa">lambda</span> x<span class="hl sym">:</span> x<span class="hl sym">*</span>x<span class="hl sym">,</span> v<span class="hl sym">))</span>

	<span class="hl kwa">print</span><span class="hl sym">(</span><span class="hl str">'%0.9f'</span> <span class="hl sym">% (</span>math<span class="hl sym">.</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>vBv<span class="hl sym">/</span>vv<span class="hl sym">)))</span>

<span class="hl kwd">main</span><span class="hl sym">()</span>

