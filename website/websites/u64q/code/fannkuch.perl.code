<source>
<def></def><slc># The Computer Language Benchmarks Game</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc># Initial port from C by Steve Clark</slc><br />
<def></def><slc># Rewrite by Kalev Soikonen</slc><br />
<def></def><slc># Modified by Kuang-che Wu</slc><br />
<def></def><br />
<kwa>use</kwa> <def></def><kwd>integer</kwd><def></def><sym>;</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>fannkuch</def> <sym>{</sym><br />
<def></def>    <kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>$n</kwb><def></def><sym>) =</sym> <def></def><kwd>shift</kwd><def></def><sym>;</sym><br />
<def></def>    <kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>$iter</kwb><def></def><sym>,</sym> <def></def><kwb>$flips</kwb><def></def><sym>,</sym> <def></def><kwb>$maxflips</kwb><def></def><sym>,</sym> <def></def><kwb>$i</kwb><def></def><sym>);</sym><br />
<def></def>    <kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>@q</kwb><def></def><sym>,</sym> <def></def><kwb>@p</kwb><def></def><sym>,</sym> <def></def><kwb>@count</kwb><def></def><sym>);</sym><br />
<def></def><br />
    <kwb>$iter</kwb> <def></def><sym>=</sym> <def></def><kwb>$maxflips</kwb> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>    <kwb>@p</kwb> <def></def><sym>=</sym> <def></def><kwb>@count</kwb> <def></def><sym>= (</sym><def></def><num>1</num><def></def><sym>..</sym><def></def><kwb>$n</kwb><def></def><sym>);</sym><br />
<def></def>    <kwb>$m</kwb> <def></def><sym>=</sym> <def></def><kwb>$n</kwb> <def></def><sym>-</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def><br />
    TRY</def><sym>:</sym> <def></def><kwa>while</kwa> <def></def><sym>(</sym><def></def><num>1</num><def></def><sym>) {</sym><br />
<def></def>	<kwa>if</kwa> <def></def><sym>(</sym><def></def><kwb>$iter</kwb> <def></def><sym>&lt;</sym> <def></def><num>30</num><def></def><sym>) {</sym><br />
<def></def>	    <kwc>print</kwc> <def></def><kwb>@p</kwb><def></def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>	    <kwb>$iter</kwb><def></def><sym>++;</sym><br />
<def></def>	<sym>}</sym><br />
<def></def><br />
	<kwa>if</kwa> <def></def><sym>(</sym><def></def><kwb>$p</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>] !=</sym> <def></def><num>1</num> <def></def><sym>&amp;&amp;</sym> <def></def><kwb>$p</kwb><def></def><sym>[</sym><def></def><kwb>$m</kwb><def></def><sym>] !=</sym> <def></def><kwb>$n</kwb><def></def><sym>) {</sym><br />
<def></def>	    <kwb>@q</kwb> <def></def><sym>=</sym> <def></def><kwb>@p</kwb><def></def><sym>;</sym><br />
<def></def>	    <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>$flips</kwb><def></def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def></def><kwb>$q</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>] !=</sym> <def></def><num>1</num><def></def><sym>;</sym> <def></def><kwb>$flips</kwb><def></def><sym>++) {</sym><br />
<def>		unshift</def> <kwb>@q</kwb><def></def><sym>,</sym> <def>reverse splice</def> <kwb>@q</kwb><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><kwb>$q</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def></def>	    <sym>}</sym><br />
<def></def>	    <kwb>$maxflips</kwb> <def></def><sym>=</sym> <def></def><kwb>$flips</kwb> <def></def><kwa>if</kwa> <def></def><sym>(</sym><def></def><kwb>$flips</kwb> <def></def><sym>&gt;</sym> <def></def><kwb>$maxflips</kwb><def></def><sym>);</sym><br />
<def></def>	<sym>}</sym><br />
<def></def><br />
	<kwa>for</kwa> <def></def><kwc>my</kwc><def></def><kwb>$i</kwb><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>..</sym><def></def><kwb>$m</kwb><def></def><sym>) {</sym><br />
<def>	    splice</def> <kwb>@p</kwb><def></def><sym>,</sym> <def></def><kwb>$i</kwb><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>shift</def> <kwb>@p</kwb><def></def><sym>;</sym><br />
<def></def>	    <kwa>next</kwa> <def>TRY</def> <kwa>if</kwa> <def></def><sym>(--</sym><def></def><kwb>$count</kwb><def></def><sym>[</sym><def></def><kwb>$i</kwb><def></def><sym>]);</sym><br />
<def></def>	    <kwb>$count</kwb><def></def><sym>[</sym><def></def><kwb>$i</kwb><def></def><sym>] =</sym> <def></def><kwb>$i</kwb> <def></def><sym>+</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>	<sym>}</sym><br />
<def></def>	<kwa>return</kwa> <def></def><kwb>$maxflips</kwb><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>for</kwa> <def></def><sym>(</sym><def>shift</def> <sym>||</sym> <def></def><num>7</num><def></def><sym>) {</sym><br />
<def></def>    <kwc>print</kwc> <def></def><str>&quot;Pfannkuchen($_) = &quot;</str><def></def><sym>.</sym><def></def><kwd>fannkuch</kwd><def></def><sym>(</sym><def></def><kwb>$_</kwb><def></def><sym>).</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
</source>
