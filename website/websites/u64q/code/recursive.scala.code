<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Shootout</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by Andrei Formiga</span>
<span class="hl com"> */</span>

<span class="hl kwa">object</span> recursive
<span class="hl sym">{</span>
  <span class="hl kwa">def</span> ack<span class="hl sym">(</span>x<span class="hl sym">:</span><span class="hl kwb">int</span><span class="hl sym">,</span> y<span class="hl sym">:</span><span class="hl kwb">int</span><span class="hl sym">):</span> <span class="hl kwb">int</span> <span class="hl sym">=</span> <span class="hl kwa">if</span> <span class="hl sym">(</span>x <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">)</span> y <span class="hl sym">+</span> <span class="hl num">1</span>
			       <span class="hl kwa">else if</span> <span class="hl sym">(</span>y <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">)</span> ack<span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span>
			       <span class="hl kwa">else</span> ack<span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> ack<span class="hl sym">(</span>x<span class="hl sym">,</span> y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">))</span>

  <span class="hl kwa">def</span> fib<span class="hl sym">(</span>n<span class="hl sym">:</span><span class="hl kwb">int</span><span class="hl sym">):</span> <span class="hl kwb">int</span> <span class="hl sym">=</span> <span class="hl kwa">if</span> <span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">)</span> <span class="hl num">1</span> <span class="hl kwa">else</span> fib<span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">) +</span> fib<span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)</span>

  <span class="hl kwa">def</span> fib<span class="hl sym">(</span>n<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">):</span> <span class="hl kwb">double</span> <span class="hl sym">=</span> <span class="hl kwa">if</span> <span class="hl sym">(</span>n <span class="hl sym">&lt;</span> <span class="hl num">2.0</span><span class="hl sym">)</span> <span class="hl num">1.0</span> <span class="hl kwa">else</span> fib<span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">2.0</span><span class="hl sym">) +</span> fib<span class="hl sym">(</span>n <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">)</span>

  <span class="hl kwa">def</span> tak<span class="hl sym">(</span>x<span class="hl sym">:</span><span class="hl kwb">int</span><span class="hl sym">,</span> y<span class="hl sym">:</span><span class="hl kwb">int</span><span class="hl sym">,</span> z<span class="hl sym">:</span><span class="hl kwb">int</span><span class="hl sym">):</span> <span class="hl kwb">int</span> <span class="hl sym">=</span> <span class="hl kwa">if</span> <span class="hl sym">(</span>y <span class="hl sym">&lt;</span> x<span class="hl sym">)</span> tak<span class="hl sym">(</span>tak<span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">),</span>
						     tak<span class="hl sym">(</span>y <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> z<span class="hl sym">,</span> x<span class="hl sym">),</span>
						     tak<span class="hl sym">(</span>z <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">))</span>
				      <span class="hl kwa">else</span> z

  <span class="hl kwa">def</span> tak<span class="hl sym">(</span>x<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> y<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">,</span> z<span class="hl sym">:</span><span class="hl kwb">double</span><span class="hl sym">):</span> <span class="hl kwb">double</span> <span class="hl sym">=</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>y <span class="hl sym">&lt;</span> x<span class="hl sym">)</span>  tak<span class="hl sym">(</span>tak<span class="hl sym">(</span>x <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">),</span> tak<span class="hl sym">(</span>y <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> z<span class="hl sym">,</span> x<span class="hl sym">),</span> tak<span class="hl sym">(</span>z <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> x<span class="hl sym">,</span> y<span class="hl sym">))</span>
    <span class="hl kwa">else</span> z

  <span class="hl kwa">def</span> main<span class="hl sym">(</span>args<span class="hl sym">:</span> <span class="hl kwc">Array</span><span class="hl sym">[</span><span class="hl kwc">String</span><span class="hl sym">]) = {</span>
    <span class="hl kwa">var</span> n <span class="hl sym">=</span> <span class="hl kwc">Integer</span><span class="hl sym">.</span>parseInt<span class="hl sym">(</span>args<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">))</span>
    Console<span class="hl sym">.</span>println<span class="hl sym">(</span><span class="hl str">&quot;Ack(3,&quot;</span> <span class="hl sym">+</span> n <span class="hl sym">+</span> <span class="hl str">&quot;): &quot;</span> <span class="hl sym">+</span> ack<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,</span> n<span class="hl sym">))</span>
    Console<span class="hl sym">.</span>printf<span class="hl sym">(</span><span class="hl str">&quot;Fib({0,number,.#}): {1,number,.#}</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">, (</span><span class="hl num">27.0</span><span class="hl sym">+</span>n<span class="hl sym">),</span> fib<span class="hl sym">(</span><span class="hl num">27.0</span><span class="hl sym">+</span>n<span class="hl sym">))</span>
    n <span class="hl sym">=</span> n <span class="hl sym">-</span> <span class="hl num">1</span>
    Console<span class="hl sym">.</span>println<span class="hl sym">(</span><span class="hl str">&quot;Tak(&quot;</span> <span class="hl sym">+ (</span><span class="hl num">3</span><span class="hl sym">*</span>n<span class="hl sym">) +</span> <span class="hl str">&quot;,&quot;</span> <span class="hl sym">+ (</span><span class="hl num">2</span><span class="hl sym">*</span>n<span class="hl sym">) +</span> <span class="hl str">&quot;,&quot;</span> <span class="hl sym">+</span> n <span class="hl sym">+</span> <span class="hl str">&quot;): &quot;</span> <span class="hl sym">+</span> tak<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">*</span>n<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">*</span>n<span class="hl sym">,</span> n<span class="hl sym">))</span>
    Console<span class="hl sym">.</span>println<span class="hl sym">(</span><span class="hl str">&quot;Fib(3): &quot;</span> <span class="hl sym">+</span> fib<span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">))</span>
    Console<span class="hl sym">.</span>println<span class="hl sym">(</span><span class="hl str">&quot;Tak(3.0,2.0,1.0): &quot;</span> <span class="hl sym">+</span> tak<span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">,</span><span class="hl num">2.0</span><span class="hl sym">,</span><span class="hl num">1.0</span><span class="hl sym">))</span>
  <span class="hl sym">}</span>
<span class="hl sym">}</span>
