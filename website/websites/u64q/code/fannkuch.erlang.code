<source>
<def></def><slc>%   The Computer Language Shootout</slc><br />
<def></def><slc>%   http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>%</slc><br />
<def></def><slc>%   contributed by Hans Svensson</slc><br />
<def></def><br />
<sym>-</sym><def></def><kwa>module</kwa><def></def><sym>(</sym><def>fannkuch</def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>export</kwa><def></def><sym>([</sym><def>main</def><sym>/</sym><def></def><num>1</num><def></def><sym>]).</sym><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>([</sym><def>Arg</def><sym>]) -&gt;</sym><br />
<def>    N</def> <sym>=</sym> <def></def><kwb>list_to_integer</kwb><def></def><sym>(</sym><def>Arg</def><sym>),</sym><br />
<def>    F</def> <sym>=</sym> <def></def><kwd>main</kwd><def></def><sym>(</sym><def>N</def><sym>),</sym><br />
<def>    io</def><sym>:</sym><def></def><kwd>fwrite</kwd><def></def><sym>(</sym><def></def><str>&quot;Pfannkuchen(~p) = ~p~n&quot;</str><def></def><sym>, [</sym><def>N</def><sym>,</sym> <def>F</def><sym>]),</sym><br />
<def>    erlang</def><sym>:</sym><def></def><kwb>halt</kwb><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>);</sym><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>(</sym><def>N</def><sym>)</sym> <def></def><kwa>when</kwa> <def>N</def> <sym>&gt;</sym> <def></def><num>0</num> <def></def><sym>-&gt;</sym><br />
<def>    L</def> <sym>=</sym> <def>lists</def><sym>:</sym><def></def><kwd>seq</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym><def>N</def><sym>),</sym><br />
<def></def>    <kwb>put</kwb><def></def><sym>(</sym><def>pr</def><sym>,</sym><def></def><num>30</num><def></def><sym>),</sym><br />
<def></def>    <kwb>put</kwb><def></def><sym>(</sym><def>maxflip</def><sym>,</sym><def></def><num>0</num><def></def><sym>),</sym><br />
<def></def>    <kwd>cP</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym><def>N</def><sym>,</sym><def>L</def><sym>,</sym><def>true</def><sym>),</sym><br />
<def></def>    <kwb>get</kwb><def></def><sym>(</sym><def>maxflip</def><sym>).</sym><br />
<def></def><br />
<kwd>cP</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym><def>N</def><sym>,</sym><def>L</def><sym>,</sym><def>_</def><sym>) -&gt;</sym><br />
<def></def>    <kwd>test</kwd><def></def><sym>(</sym><def>L</def><sym>),</sym><br />
<def></def>    <kwd>cP</kwd><def></def><sym>(</sym><def></def><num>2</num><def></def><sym>,</sym><def>N</def><sym>,</sym><def>L</def><sym>,</sym><def>true</def><sym>);</sym><br />
<def></def><kwd>cP</kwd><def></def><sym>(</sym><def>B</def><sym>,</sym><def>N</def><sym>,</sym><def>_</def><sym>,</sym><def>_</def><sym>)</sym> <def></def><kwa>when</kwa> <def>B</def> <sym>&gt;</sym> <def>N</def> <sym>-&gt;</sym><br />
<def>    ok</def><sym>;</sym><br />
<def></def><kwd>cP</kwd><def></def><sym>(</sym><def>B</def><sym>,</sym><def>N</def><sym>,</sym><def>L</def><sym>,</sym><def>Cont</def><sym>) -&gt;</sym><br />
<def>    Is</def> <sym>=</sym> <def>lists</def><sym>:</sym><def></def><kwd>seq</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym><def>B</def><sym>-</sym><def></def><num>1</num><def></def><sym>),</sym><br />
<def>    Ls</def> <sym>=</sym> <def>lists</def><sym>:</sym><def></def><kwd>map</kwd><def></def><sym>(</sym><def></def><kwa>fun</kwa><def></def><sym>(</sym><def>D</def><sym>) -&gt;</sym> <def></def><kwd>rotate</kwd><def></def><sym>(</sym><def>D</def><sym>,</sym><def>B</def><sym>,</sym><def>L</def><sym>)</sym> <def></def><kwa>end</kwa><def></def><sym>,</sym><def>Is</def><sym>),</sym><br />
<def></def>    <kwa>case</kwa> <def></def><kwb>length</kwb><def></def><sym>(</sym><def>Ls</def><sym>)</sym> <def></def><kwa>of</kwa><br />
<def></def>	<num>1</num> <def></def><sym>-&gt;</sym><br />
<def></def>	    <kwd>test</kwd><def></def><sym>(</sym><def></def><kwb>hd</kwb><def></def><sym>(</sym><def>Ls</def><sym>));</sym><br />
<def>	_</def> <sym>-&gt;</sym><br />
<def>	    lists</def><sym>:</sym><def></def><kwd>map</kwd><def></def><sym>(</sym><def></def><kwa>fun</kwa><def></def><sym>(</sym><def>L_</def><sym>) -&gt;</sym> <def></def><kwd>test</kwd><def></def><sym>(</sym><def>L_</def><sym>),</sym><br />
<def>				 lists</def><sym>:</sym><def></def><kwd>map</kwd><def></def><sym>(</sym><def></def><kwa>fun</kwa><def></def><sym>(</sym><def>D</def><sym>) -&gt;</sym> <def></def><kwd>cP</kwd><def></def><sym>(</sym><def>D</def><sym>,</sym><def>N</def><sym>,</sym><def>L_</def><sym>,</sym><def>false</def><sym>)</sym> <def></def><kwa>end</kwa><def></def><sym>,</sym><br />
<def>					   lists</def><sym>:</sym><def></def><kwd>seq</kwd><def></def><sym>(</sym><def></def><num>2</num><def></def><sym>,</sym><def>B</def><sym>-</sym><def></def><num>1</num><def></def><sym>))</sym><br />
<def></def>		      <kwa>end</kwa><def></def><sym>,</sym><def>Ls</def><sym>)</sym><br />
<def></def>    <kwa>end</kwa><def></def><sym>,</sym><br />
<def></def>    <kwa>case</kwa> <def>Cont</def> <kwa>of</kwa><br />
<def>	true</def> <sym>-&gt;</sym><br />
<def></def>	    <kwd>cP</kwd><def></def><sym>(</sym><def>B</def><sym>+</sym><def></def><num>1</num><def></def><sym>,</sym><def>N</def><sym>,</sym><def>L</def><sym>,</sym><def>true</def><sym>);</sym><br />
<def>	false</def> <sym>-&gt;</sym><br />
<def>	    ok</def><br />
    <kwa>end</kwa><def></def><sym>.</sym><br />
<def></def><br />
<kwd>rotate</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>,[</sym><def>H</def><sym>|[</sym><def>H2</def><sym>|</sym><def>T</def><sym>]]) -&gt;</sym><br />
<def></def>    <sym>[</sym><def>H2</def> <sym>| [</sym> <def>H</def> <sym>|</sym> <def>T</def><sym>]];</sym><br />
<def></def><kwd>rotate</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym><def>J</def><sym>,[</sym><def>H</def><sym>|</sym><def>T</def><sym>]) -&gt;</sym><br />
<def></def>    <sym>{</sym><def>H2</def><sym>,</sym><def>T2</def><sym>} =</sym> <def>lists</def><sym>:</sym><def></def><kwd>split</kwd><def></def><sym>(</sym><def>J</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym><def>T</def><sym>),</sym><br />
<def>    H2</def> <sym>++ [</sym><def>H</def><sym>] ++</sym> <def>T2</def><sym>;</sym><br />
<def></def><kwd>rotate</kwd><def></def><sym>(</sym><def>I</def><sym>,</sym><def>J</def><sym>,</sym><def>L</def><sym>) -&gt;</sym><br />
<def></def>    <sym>{</sym><def>H</def><sym>,</sym><def>T</def><sym>} =</sym> <def>lists</def><sym>:</sym><def></def><kwd>split</kwd><def></def><sym>(</sym><def>J</def><sym>,</sym><def>L</def><sym>),</sym><br />
<def></def>    <sym>{</sym><def>H1</def><sym>,</sym><def>H2</def><sym>} =</sym> <def>lists</def><sym>:</sym><def></def><kwd>split</kwd><def></def><sym>(</sym><def>I</def><sym>,</sym><def>H</def><sym>),</sym><br />
<def>    H2</def> <sym>++</sym> <def>H1</def> <sym>++</sym> <def>T</def><sym>.</sym><br />
<def></def><br />
<kwd>test</kwd><def></def><sym>(</sym><def>L</def><sym>) -&gt;</sym><br />
<def></def>    <kwa>case</kwa> <def></def><kwb>get</kwb><def></def><sym>(</sym><def>pr</def><sym>)</sym> <def></def><kwa>of</kwa><br />
<def></def>	<num>0</num> <def></def><sym>-&gt;</sym> <def>ok</def><sym>;</sym><br />
<def>	N</def> <sym>-&gt;</sym> <def>lists</def><sym>:</sym><def></def><kwd>map</kwd><def></def><sym>(</sym><def></def><kwa>fun</kwa><def></def><sym>(</sym><def>I</def><sym>) -&gt;</sym> <def>io</def><sym>:</sym><def></def><kwd>format</kwd><def></def><sym>(</sym><def></def><str>&quot;~p&quot;</str><def></def><sym>,[</sym><def>I</def><sym>])</sym> <def></def><kwa>end</kwa><def></def><sym>,</sym> <def>L</def><sym>),</sym><br />
<def>	     io</def><sym>:</sym><def></def><kwd>format</kwd><def></def><sym>(</sym><def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def><sym>),</sym><br />
<def></def>	     <kwb>put</kwb><def></def><sym>(</sym><def>pr</def><sym>,</sym><def>N</def><sym>-</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>    <kwa>end</kwa><def></def><sym>,</sym><br />
<def>    X</def> <sym>=</sym> <def></def><kwd>flip</kwd><def></def><sym>(</sym><def>L</def><sym>,</sym><def></def><num>0</num><def></def><sym>),</sym><br />
<def>    Y</def> <sym>=</sym> <def></def><kwb>get</kwb><def></def><sym>(</sym><def>maxflip</def><sym>),</sym><br />
<def></def>    <kwa>case</kwa> <def>X</def> <sym>&gt;</sym> <def>Y</def> <kwa>of</kwa><br />
<def>	true</def> <sym>-&gt;</sym> <def></def><kwb>put</kwb><def></def><sym>(</sym><def>maxflip</def><sym>,</sym><def>X</def><sym>);</sym><br />
<def>	false</def> <sym>-&gt;</sym> <def>ok</def><br />
    <kwa>end</kwa><def></def><sym>.</sym><br />
<def></def><br />
<kwd>flip</kwd><def></def><sym>([</sym><def></def><num>1</num><def></def><sym>|</sym><def>_</def><sym>],</sym> <def>N</def><sym>) -&gt;</sym> <def>N</def><sym>;</sym><br />
<def></def><kwd>flip</kwd><def></def><sym>([</sym><def>I</def><sym>|</sym><def>_</def><sym>]=</sym><def>L</def><sym>,</sym> <def>N</def><sym>) -&gt;</sym><br />
<def></def>    <sym>{</sym><def>H</def><sym>,</sym> <def>T</def><sym>} =</sym> <def>lists</def><sym>:</sym><def></def><kwd>split</kwd><def></def><sym>(</sym><def>I</def><sym>,</sym> <def>L</def><sym>),</sym><br />
<def></def>    <kwd>flip</kwd><def></def><sym>(</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>(</sym><def>H</def><sym>)++</sym><def>T</def><sym>,</sym> <def>N</def><sym>+</sym><def></def><num>1</num><def></def><sym>).</sym><def></def><br />
</source>
