<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Tomasz bla Fortuna *)</span>

<span class="hl kwa">let</span> size <span class="hl sym">=</span> <span class="hl num">503</span>
<span class="hl kwa">and</span> n <span class="hl sym">=</span> int_of_string <span class="hl kwc">Sys</span><span class="hl sym">.</span>argv<span class="hl sym">.(</span><span class="hl num">1</span><span class="hl sym">)</span>

<span class="hl kwa">type</span> channel <span class="hl sym">= {</span> m <span class="hl sym">:</span> <span class="hl kwc">Mutex</span><span class="hl sym">.</span>t<span class="hl sym">;</span> d <span class="hl sym">:</span> <span class="hl kwb">int ref</span> <span class="hl sym">}</span>
<span class="hl kwa">let</span> channel <span class="hl sym">() =</span>
  <span class="hl kwa">let</span> mx <span class="hl sym">=</span> <span class="hl kwc">Mutex</span><span class="hl sym">.</span>create <span class="hl sym">()</span> <span class="hl kwa">in</span> <span class="hl kwc">Mutex</span><span class="hl sym">.</span>lock mx<span class="hl sym">;</span>
  <span class="hl sym">{</span> m <span class="hl sym">=</span> mx<span class="hl sym">;</span> d <span class="hl sym">=</span> <span class="hl kwb">ref</span> <span class="hl num">0</span><span class="hl sym">}</span>

<span class="hl kwa">let rec</span> spawn id i o loop <span class="hl sym">() =</span>
  <span class="hl kwa">let rec</span> thread <span class="hl sym">() =</span>
    <span class="hl kwc">Mutex</span><span class="hl sym">.</span>lock i<span class="hl sym">.</span>m<span class="hl sym">;</span>
    <span class="hl kwa">if</span> <span class="hl sym">!(</span>i<span class="hl sym">.</span>d<span class="hl sym">) =</span> n <span class="hl kwa">then</span> <span class="hl sym">(</span>
      print_int <span class="hl sym">(</span>size<span class="hl sym">-</span>id<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span> print_newline <span class="hl sym">();</span> exit <span class="hl num">0</span><span class="hl sym">;</span>
    <span class="hl sym">);</span>
    o<span class="hl sym">.</span>d <span class="hl sym">:= !(</span>i<span class="hl sym">.</span>d<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">;</span>  <span class="hl com">(* Forward token *)</span>
    <span class="hl kwc">Mutex</span><span class="hl sym">.</span>unlock o<span class="hl sym">.</span>m<span class="hl sym">;</span>
    thread <span class="hl sym">()</span>
  <span class="hl kwa">in</span>
  <span class="hl kwa">if</span> id <span class="hl sym">&gt;</span> <span class="hl num">1</span> <span class="hl kwa">then</span> <span class="hl sym">(</span>
    <span class="hl kwa">let</span> new_o <span class="hl sym">=</span> <span class="hl kwa">if</span> id <span class="hl sym">=</span> <span class="hl num">2</span> <span class="hl kwa">then</span> loop <span class="hl kwa">else</span> channel <span class="hl sym">()</span> <span class="hl kwa">in</span>
    <span class="hl kwa">let</span> f <span class="hl sym">=</span> spawn <span class="hl sym">(</span>id<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> o new_o loop <span class="hl kwa">in</span>
    ignore <span class="hl sym">(</span><span class="hl kwc">Thread</span><span class="hl sym">.</span>create f <span class="hl sym">())</span>
  <span class="hl sym">);</span>
  thread <span class="hl sym">()</span>

<span class="hl kwa">let</span> _ <span class="hl sym">=</span>
  <span class="hl kwa">let</span> loop<span class="hl sym">,</span> o <span class="hl sym">=</span> channel <span class="hl sym">(),</span> channel <span class="hl sym">()</span> <span class="hl kwa">in</span>
  <span class="hl kwc">Mutex</span><span class="hl sym">.</span>unlock loop<span class="hl sym">.</span>m<span class="hl sym">;</span>
  <span class="hl kwc">Thread</span><span class="hl sym">.</span>join <span class="hl sym">(</span><span class="hl kwc">Thread</span><span class="hl sym">.</span>create <span class="hl sym">(</span>spawn size loop o loop<span class="hl sym">) ())</span>
