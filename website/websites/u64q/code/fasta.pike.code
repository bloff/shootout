<source>
<def></def><com>/* The Computer Language Shootout</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com>   contributed by Lance Dillon</com><br />
<com>   significant speedup [used 'String.Buffer' for I/O] by Anthony Borla</com><br />
<com>*/</com><def><br />
<br />
class Frequency</def> <sym>{</sym><br />
<def></def>  <kwb>string</kwb> <def>code</def><sym>;</sym><br />
<def></def>  <kwb>float</kwb> <def>percent</def><sym>;</sym><br />
<def></def><br />
  <kwb>void</kwb> <def></def><kwd>create</kwd><def></def><sym>(</sym><def></def><kwb>string</kwb> <def>c</def><sym>,</sym> <def></def><kwb>float</kwb> <def>p</def><sym>) {</sym><br />
<def>    code</def><sym>=</sym><def>c</def><sym>;</sym><br />
<def>    percent</def><sym>=</sym><def>p</def><sym>;</sym><br />
<def></def>  <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>int</kwb> <def></def><kwd>main</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>argc</def><sym>,</sym> <def></def><kwb>array</kwb> <def>argv</def><sym>) {</sym><br />
<def></def>  <kwb>string</kwb> <def>ALU</def><sym>=</sym><def></def><str>&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</str><def></def><br />
      <str>&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</str><def></def><br />
      <str>&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</str><def></def><br />
      <str>&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</str><def></def><br />
      <str>&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</str><def></def><br />
      <str>&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</str><def></def><br />
      <str>&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</str><def></def><sym>;</sym><br />
<def></def><br />
  <kwb>array</kwb><def></def><sym>(</sym><def>Frequency</def><sym>)</sym> <def>IUB</def><sym>=({</sym> <def></def><kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;a&quot;</str><def></def><sym>,</sym><def></def><num>0.27</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;c&quot;</str><def></def><sym>,</sym><def></def><num>0.12</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;g&quot;</str><def></def><sym>,</sym><def></def><num>0.12</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;t&quot;</str><def></def><sym>,</sym><def></def><num>0.27</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;B&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;D&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;H&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;K&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;M&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;N&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;R&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;S&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;V&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;W&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>	       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;Y&quot;</str><def></def><sym>,</sym><def></def><num>0.02</num><def></def><sym>)</sym><br />
<def></def>  <sym>});</sym><br />
<def></def><br />
  <kwb>array</kwb><def></def><sym>(</sym><def>Frequency</def><sym>)</sym> <def>HomoSapiens</def><sym>=({</sym> <def></def><kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;a&quot;</str><def></def><sym>,</sym><def></def><num>0.3029549426680</num><def></def><sym>),</sym><br />
<def></def>		       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;c&quot;</str><def></def><sym>,</sym><def></def><num>0.1979883004921</num><def></def><sym>),</sym><br />
<def></def>		       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;g&quot;</str><def></def><sym>,</sym><def></def><num>0.1975473066391</num><def></def><sym>),</sym><br />
<def></def>		       <kwd>Frequency</kwd><def></def><sym>(</sym><def></def><str>&quot;t&quot;</str><def></def><sym>,</sym><def></def><num>0.3015094502008</num><def></def><sym>)</sym><br />
<def></def>  <sym>});</sym><br />
<def></def><br />
  <kwd>makeCumulative</kwd><def></def><sym>(</sym><def>HomoSapiens</def><sym>);</sym><br />
<def></def>  <kwd>makeCumulative</kwd><def></def><sym>(</sym><def>IUB</def><sym>);</sym><br />
<def></def><br />
  <kwb>int</kwb> <def>n</def><sym>=(</sym><def></def><kwb>int</kwb><def></def><sym>)</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def>  <kwd>makeRepeatFasta</kwd><def></def><sym>(</sym><def></def><str>&quot;ONE&quot;</str><def></def><sym>,</sym><def></def><str>&quot;Homo sapiens alu&quot;</str><def></def><sym>,</sym><def>ALU</def><sym>,</sym><def>n</def><sym>*</sym><def></def><num>2</num><def></def><sym>);</sym><br />
<def></def>  <kwd>makeRandomFasta</kwd><def></def><sym>(</sym><def></def><str>&quot;TWO&quot;</str><def></def><sym>,</sym><def></def><str>&quot;IUB ambiguity codes&quot;</str><def></def><sym>,</sym><def>IUB</def><sym>,</sym><def>n</def><sym>*</sym><def></def><num>3</num><def></def><sym>);</sym><br />
<def></def>  <kwd>makeRandomFasta</kwd><def></def><sym>(</sym><def></def><str>&quot;THREE&quot;</str><def></def><sym>,</sym><def></def><str>&quot;Homo sapiens frequency&quot;</str><def></def><sym>,</sym><def>HomoSapiens</def><sym>,</sym><def>n</def><sym>*</sym><def></def><num>5</num><def></def><sym>);</sym><br />
<def></def><br />
<sym>}</sym><br />
<def></def><br />
<kwb>void</kwb> <def></def><kwd>makeCumulative</kwd><def></def><sym>(</sym><def></def><kwb>array</kwb><def></def><sym>(</sym><def>Frequency</def><sym>)</sym> <def>a</def><sym>) {</sym><br />
<def></def>  <kwb>float</kwb> <def>cp</def><sym>=</sym><def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>  <kwd>foreach</kwd> <def></def><sym>(</sym><def>a</def><sym>;</sym> <def></def><kwb>int</kwb> <def>ind</def><sym>;</sym> <def>Frequency f</def><sym>) {</sym><br />
<def>    cp</def><sym>+=</sym><def>f</def><sym>-&gt;</sym><def>percent</def><sym>;</sym><br />
<def>    f</def><sym>-&gt;</sym><def>percent</def><sym>=</sym><def>cp</def><sym>;</sym><br />
<def></def>  <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>string</kwb> <def></def><kwd>selectRandom</kwd><def></def><sym>(</sym><def></def><kwb>array</kwb><def></def><sym>(</sym><def>Frequency</def><sym>)</sym> <def>a</def><sym>) {</sym><br />
<def></def>  <kwb>float</kwb> <def>r</def><sym>=</sym><def></def><kwd>myrandom</kwd><def></def><sym>(</sym><def></def><num>1.0</num><def></def><sym>);</sym><br />
<def></def>  <kwd>for</kwd> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def></def><kwa>sizeof</kwa><def></def><sym>(</sym><def>a</def><sym>);</sym> <def>i</def><sym>++)</sym><br />
<def></def>    <kwd>if</kwd> <def></def><sym>(</sym><def>r</def><sym>&lt;</sym><def>a</def><sym>[</sym><def>i</def><sym>]-&gt;</sym><def>percent</def><sym>)</sym><br />
<def>      return a</def><sym>[</sym><def>i</def><sym>]-&gt;</sym><def>code</def><sym>;</sym><br />
<def>  return a</def><sym>[-</sym><def></def><num>1</num><def></def><sym>]-&gt;</sym><def>code</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>int</kwb> <def>LineLength</def><sym>=</sym><def></def><num>60</num><def></def><sym>;</sym><br />
<def></def><br />
<kwb>void</kwb> <def></def><kwd>makeRandomFasta</kwd><def></def><sym>(</sym><def></def><kwb>string</kwb> <def>id</def><sym>,</sym> <def></def><kwb>string</kwb> <def>desc</def><sym>,</sym> <def></def><kwb>array</kwb><def></def><sym>(</sym><def>Frequency</def><sym>)</sym> <def>a</def><sym>,</sym> <def></def><kwb>int</kwb> <def>n</def><sym>) {</sym><br />
<def></def>  <kwb>int</kwb> <def>m</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym><br />
<def>  String.Buffer lineout</def> <sym>=</sym> <def>String.</def><kwd>Buffer</kwd><def></def><sym>();</sym><br />
<def></def><br />
  <kwa>write</kwa><def></def><sym>(</sym><def></def><str>&quot;&gt;&quot;</str><def></def><sym>+</sym><def>id</def><sym>+</sym><def></def><str>&quot; &quot;</str><def></def><sym>+</sym><def>desc</def><sym>+</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>);</sym><br />
<def></def><br />
  <kwd>while</kwd> <def></def><sym>(</sym><def>n</def><sym>&gt;</sym><def></def><num>0</num><def></def><sym>) {</sym><br />
<def></def>    <kwd>if</kwd> <def></def><sym>(</sym><def>n</def><sym>&lt;</sym><def>LineLength</def><sym>)</sym><br />
<def>      m</def><sym>=</sym><def>n</def><sym>;</sym><br />
<def>    else<br />
      m</def><sym>=</sym><def>LineLength</def><sym>;</sym><br />
<def></def><br />
    <kwd>for</kwd> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>m</def><sym>;</sym> <def>i</def><sym>++)</sym> <def>lineout</def><sym>-&gt;</sym><def></def><kwd>add</kwd><def></def><sym>(</sym><def></def><kwd>selectRandom</kwd><def></def><sym>(</sym><def>a</def><sym>));</sym><br />
<def></def>    <kwa>write</kwa><def></def><sym>(</sym><def></def><str>&quot;%s</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>lineout</def><sym>-&gt;</sym><def></def><kwd>get</kwd><def></def><sym>());</sym> <def>n</def><sym>-=</sym><def>LineLength</def><sym>;</sym><br />
<def></def>  <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>void</kwb> <def></def><kwd>makeRepeatFasta</kwd><def></def><sym>(</sym><def></def><kwb>string</kwb> <def>id</def><sym>,</sym> <def></def><kwb>string</kwb> <def>desc</def><sym>,</sym> <def></def><kwb>string</kwb> <def>alu</def><sym>,</sym> <def></def><kwb>int</kwb> <def>n</def><sym>) {</sym><br />
<def></def>  <kwb>int</kwb> <def>m</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>  <kwb>int</kwb> <def>k</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>  <kwb>int</kwb> <def>kn</def><sym>=</sym><def></def><kwa>sizeof</kwa><def></def><sym>(</sym><def>alu</def><sym>);</sym><br />
<def>  String.Buffer lineout</def> <sym>=</sym> <def>String.</def><kwd>Buffer</kwd><def></def><sym>();</sym><br />
<def></def><br />
  <kwa>write</kwa><def></def><sym>(</sym><def></def><str>&quot;&gt;&quot;</str><def></def><sym>+</sym><def>id</def><sym>+</sym><def></def><str>&quot; &quot;</str><def></def><sym>+</sym><def>desc</def><sym>+</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>);</sym><br />
<def></def><br />
  <kwd>while</kwd> <def></def><sym>(</sym><def>n</def><sym>&gt;</sym><def></def><num>0</num><def></def><sym>) {</sym><br />
<def></def>    <kwd>if</kwd> <def></def><sym>(</sym><def>n</def><sym>&lt;</sym><def>LineLength</def><sym>)</sym><br />
<def>      m</def><sym>=</sym><def>n</def><sym>;</sym><br />
<def>    else<br />
      m</def><sym>=</sym><def>LineLength</def><sym>;</sym><br />
<def></def>    <kwd>for</kwd> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>m</def><sym>;</sym> <def>i</def><sym>++) {</sym><br />
<def></def>      <kwd>if</kwd> <def></def><sym>(</sym><def>k</def><sym>==</sym><def>kn</def><sym>)</sym><br />
<def>	k</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym><br />
<def>      lineout</def><sym>-&gt;</sym><def></def><kwd>add</kwd><def></def><sym>(</sym><def></def><kwa>sprintf</kwa><def></def><sym>(</sym><def></def><str>&quot;%c&quot;</str><def></def><sym>,</sym> <def>alu</def><sym>[</sym><def>k</def><sym>]));</sym><br />
<def>      k</def><sym>++;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
    <kwa>write</kwa><def></def><sym>(</sym><def></def><str>&quot;%s</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>lineout</def><sym>-&gt;</sym><def></def><kwd>get</kwd><def></def><sym>());</sym> <def>n</def><sym>-=</sym><def>LineLength</def><sym>;</sym><br />
<def></def>  <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwb>constant</kwb> <def>IM</def><sym>=</sym><def></def><num>139968</num><def></def><sym>;</sym><br />
<def></def><kwb>constant</kwb> <def>IA</def><sym>=</sym><def></def><num>3877</num><def></def><sym>;</sym><br />
<def></def><kwb>constant</kwb> <def>IC</def><sym>=</sym><def></def><num>29573</num><def></def><sym>;</sym><br />
<def></def><kwb>int</kwb> <def>seed</def><sym>=</sym><def></def><num>42</num><def></def><sym>;</sym><br />
<def></def><br />
<kwb>float</kwb> <def></def><kwd>myrandom</kwd><def></def><sym>(</sym><def></def><kwb>float</kwb> <def></def><kwa>max</kwa><def></def><sym>) {</sym><br />
<def>  seed</def><sym>=(</sym><def>seed</def><sym>*</sym><def>IA</def><sym>+</sym><def>IC</def><sym>)%</sym><def>IM</def><sym>;</sym><br />
<def></def>  <kwd>return</kwd> <def></def><sym>(</sym><def></def><kwa>max</kwa><def></def><sym>*</sym><def>seed</def><sym>/</sym><def>IM</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
</source>
