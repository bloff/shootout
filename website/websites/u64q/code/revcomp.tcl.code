<source>
<def></def><slc>#!/usr/bin/tclsh</slc><br />
<def></def><slc># $Id: revcomp.tcl.code,v 1.1 2008-08-05 04:40:20 igouy-guest Exp $</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># reverse-complement benchmark for shootout.alioth.debian.org</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># contributed by Michael Schlenker &lt;mic42@users.sourceforge.net&gt;</slc><br />
<def></def><slc>#</slc><br />
<def></def><kwa>proc</kwa> <def>main</def> <sym>{} {</sym><br />
<def></def>    <kwa>set</kwa> <def>acc</def> <str>&quot;&quot;</str><def></def><br />
    <kwa>while</kwa> <def></def><sym>{[</sym><def></def><kwa>gets</kwa> <def>stdin line</def><sym>] !=</sym> <def></def><kwc>-1</kwc><def></def><sym>} {</sym><br />
<def></def>	<kwa>if</kwa> <def></def><sym>{[</sym><def></def><kwa>string</kwa> <def>match</def> <str>&quot;&gt;*&quot;</str><def></def> <kwb>$line</kwb><def></def><sym>]} {</sym><br />
<def></def>	    <kwa>if</kwa> <def></def><sym>{[</sym><def></def><kwa>string</kwa> <def>length</def> <kwb>$acc</kwb><def></def><sym>]} {</sym><br />
<def>		put_reverse_fasta</def> <kwb>$head $acc</kwb><br />
<def></def>		<kwa>set</kwa> <def>acc</def> <str>&quot;&quot;</str><def></def><br />
	    <sym>}</sym><br />
<def></def>	    <kwa>set</kwa> <def>head</def> <kwb>$line</kwb><br />
<def></def>	<sym>}</sym> <def>else</def> <sym>{</sym><br />
<def></def>	    <kwa>append</kwa> <def>acc</def> <kwb>$line</kwb><br />
<def></def>	<sym>}</sym><br />
<def></def>    <sym>}</sym><br />
<def>    put_reverse_fasta</def> <kwb>$head $acc</kwb><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>put_reverse_fasta</def> <sym>{</sym><def>head body</def><sym>} {</sym><br />
<def></def>    <kwa>set</kwa> <def>l</def> <sym>[</sym><def></def><kwa>string</kwa> <def>length</def> <kwb>$body</kwb><def></def><sym>]</sym><br />
<def></def>    <kwa>set</kwa> <def>body</def> <sym>[</sym><def></def><kwa>string</kwa> <def>map</def> <sym>{</sym><def>A T a T C G c G G C g C T A t A U A u A M K m K R Y \<br />
	    r Y Y R y R K M k M V B v B H D h D D H d H B V b V</def><sym>}</sym> <def></def><kwb>$body</kwb><def></def><sym>]</sym><br />
<def></def>    <kwa>while</kwa> <def></def><sym>{</sym><def></def><kwb>$l</kwb><def></def><sym>} {</sym><def></def><kwa>append</kwa> <def>out</def> <sym>[</sym><def></def><kwa>string</kwa> <def>index</def> <kwb>$body</kwb> <def></def><sym>[</sym><def></def><kwa>incr</kwa> <def>l</def> <kwc>-1</kwc><def></def><sym>]]}</sym><br />
<def></def>    <kwa>incr</kwa> <def>l</def> <kwc>-1</kwc><br />
<def></def>    <kwa>set</kwa> <def>body</def> <kwb>$head</kwb><br />
<def></def>    <kwa>while</kwa> <def></def><sym>{[</sym><def></def><kwa>incr</kwa> <def>l</def><sym>] &lt; [</sym><def></def><kwa>string</kwa> <def>length</def> <kwb>$out</kwb><def></def><sym>]} {</sym><br />
<def></def>	<kwa>append</kwa> <def>body \n</def><sym>[</sym><def></def><kwa>string</kwa> <def>range</def> <kwb>$out $l</kwb> <def></def><sym>[</sym><def></def><kwa>incr</kwa> <def>l</def> <num>59</num><def></def><sym>]]</sym><br />
<def></def>    <sym>}</sym><br />
<def></def>    <kwa>puts</kwa> <def></def><kwb>$body</kwb><br />
<def></def><sym>}</sym><br />
<def><br />
main</def><br />
</source>
