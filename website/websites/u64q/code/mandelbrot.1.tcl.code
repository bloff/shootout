<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># contributed by Stephane Arnold</span>

<span class="hl kwa">proc</span> main <span class="hl sym">{</span>W<span class="hl sym">} {</span>
    <span class="hl kwa">set</span> H <span class="hl kwb">$W</span>

    <span class="hl kwa">puts</span> stdout <span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">$W $H&quot;</span>
	<span class="hl kwa">fconfigure</span> stdout <span class="hl kwc">-translation</span> <span class="hl kwa">binary</span>
	<span class="hl kwa">set</span> iter <span class="hl num">50</span>
	<span class="hl kwa">set</span> limit2 <span class="hl num">4.0</span>
	<span class="hl kwa">set</span> wscale <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">2</span>.<span class="hl sym">/</span><span class="hl kwb">$W</span><span class="hl sym">}]</span>
	<span class="hl kwa">set</span> hscale <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">2</span>.<span class="hl sym">/</span><span class="hl kwb">$H</span><span class="hl sym">}]</span>
	<span class="hl kwa">set</span> offset <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$W</span><span class="hl sym">%</span><span class="hl num">8</span><span class="hl sym">}]</span>
    <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> y <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$y</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$H</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> y<span class="hl sym">} {</span>
        <span class="hl kwa">set</span> Ci <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$hscale</span><span class="hl sym">*</span> double<span class="hl sym">(</span><span class="hl kwb">$y</span><span class="hl sym">)</span> <span class="hl kwc">-1</span>.0<span class="hl sym">}]</span>
        <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> xb <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$xb</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$W</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> xb <span class="hl num">8</span><span class="hl sym">} {</span>
			<span class="hl kwa">set</span> bits <span class="hl num">0</span>
			<span class="hl kwa">set</span> xbb <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$xb</span><span class="hl sym">+</span><span class="hl num">8</span> <span class="hl sym">&gt;</span> <span class="hl kwb">$W</span> ? <span class="hl kwb">$W</span> <span class="hl sym">:</span> <span class="hl kwb">$xb</span><span class="hl sym">+</span><span class="hl num">8</span><span class="hl sym">}]</span>
			<span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> x <span class="hl kwb">$xb</span><span class="hl sym">} {</span><span class="hl kwb">$x</span><span class="hl sym">&lt;</span><span class="hl kwb">$xbb</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> x<span class="hl sym">} {</span>
			  <span class="hl kwa">set</span> bits <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$bits</span><span class="hl sym">&lt;&lt;</span><span class="hl num">1</span><span class="hl sym">}]</span>
			   <span class="hl kwa">set</span> Zr <span class="hl sym">[</span><span class="hl kwa">set</span> Zi <span class="hl num">0.0</span><span class="hl sym">]</span>
            <span class="hl kwa">set</span> Zrq <span class="hl sym">[</span><span class="hl kwa">set</span> Ziq <span class="hl num">0.0</span><span class="hl sym">]</span>
            <span class="hl kwa">set</span> Cr <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$wscale</span> <span class="hl sym">*</span> double<span class="hl sym">(</span><span class="hl kwb">$x</span><span class="hl sym">)-</span> <span class="hl num">1.5</span><span class="hl sym">}]</span>
            <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> i <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$i</span><span class="hl sym">&lt;</span><span class="hl kwb">$iter</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> i<span class="hl sym">} {</span>
               <span class="hl kwa">set</span> Zri <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$Zr</span><span class="hl sym">*</span><span class="hl kwb">$Zi</span><span class="hl sym">}]</span>
               <span class="hl kwa">set</span> Zr <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span> <span class="hl kwb">$Zrq</span> <span class="hl sym">-</span> <span class="hl kwb">$Ziq</span> <span class="hl sym">+</span> <span class="hl kwb">$Cr</span> <span class="hl sym">}]</span>
               <span class="hl kwa">set</span> Zi <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span> <span class="hl kwb">$Zri</span> <span class="hl sym">+</span> <span class="hl kwb">$Zri</span> <span class="hl sym">+</span> <span class="hl kwb">$Ci</span> <span class="hl sym">}]</span>
               <span class="hl kwa">set</span> Zrq <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$Zr</span><span class="hl sym">*</span><span class="hl kwb">$Zr</span><span class="hl sym">}]</span>
               <span class="hl kwa">set</span> Ziq <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$Zi</span><span class="hl sym">*</span><span class="hl kwb">$Zi</span><span class="hl sym">}]</span>
               <span class="hl kwa">if</span> <span class="hl sym">{</span><span class="hl kwb">$Zrq</span> <span class="hl sym">+</span> <span class="hl kwb">$Ziq</span> <span class="hl sym">&gt;</span> <span class="hl kwb">$limit2</span><span class="hl sym">} {</span>
                  <span class="hl kwa">incr</span> bits
                  <span class="hl kwa">break</span>
               <span class="hl sym">}</span>
            <span class="hl sym">}</span>
         <span class="hl sym">}</span>
         <span class="hl kwa">if</span> <span class="hl sym">{</span><span class="hl kwb">$xb</span><span class="hl sym">+</span><span class="hl num">7</span><span class="hl sym">&gt;=</span><span class="hl kwb">$W</span><span class="hl sym">} {</span><span class="hl kwa">set</span> bits <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{((</span><span class="hl kwb">$bits</span><span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)&lt;&lt;</span><span class="hl kwb">$offset</span><span class="hl sym">)</span><span class="hl kwc">-1</span><span class="hl sym">}]}</span>
         <span class="hl kwa">puts</span> <span class="hl kwc">-nonewline</span> stdout <span class="hl sym">[</span><span class="hl kwa">binary format</span> c <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">255</span><span class="hl sym">-</span><span class="hl kwb">$bits</span><span class="hl sym">}]]</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>
<span class="hl kwa">eval</span> main <span class="hl kwb">$argv</span>
