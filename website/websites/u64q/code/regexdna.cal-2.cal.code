<span class="hl com">/**</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * Based on the CAL Open Quark version</span>
<span class="hl com"> * Contributed by Magnus Byne.</span>
<span class="hl com"> */</span>
<span class="hl kwa">module</span> Regexdna<span class="hl sym">;</span>

<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Prelude <span class="hl kwa">using</span>
    <span class="hl kwa">typeConstructor</span> <span class="hl sym">=</span> Boolean<span class="hl sym">,</span> Char<span class="hl sym">,</span> Int<span class="hl sym">,</span> String<span class="hl sym">;</span>
    <span class="hl kwa">function</span> <span class="hl sym">=</span> concat<span class="hl sym">,</span> eager<span class="hl sym">,</span> seq<span class="hl sym">;</span>
    <span class="hl sym">;</span>
<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>Debug <span class="hl kwa">using</span>
    <span class="hl kwa">typeClass</span> <span class="hl sym">=</span> Show<span class="hl sym">;</span>
    <span class="hl kwa">function</span> <span class="hl sym">=</span> show<span class="hl sym">;</span>
    <span class="hl sym">;</span>
<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Core<span class="hl sym">.</span>String <span class="hl kwa">using</span>
    <span class="hl kwa">function</span> <span class="hl sym">=</span> length<span class="hl sym">,</span> replaceAllString<span class="hl sym">,</span> splitString<span class="hl sym">;</span>
    <span class="hl sym">;</span>
<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>Collections<span class="hl sym">.</span>List <span class="hl kwa">using</span>
    <span class="hl kwa">function</span> <span class="hl sym">=</span> foldLeftStrict<span class="hl sym">;</span>
    <span class="hl sym">;</span>
<span class="hl kwa">import</span> Cal<span class="hl sym">.</span>IO<span class="hl sym">.</span>Console <span class="hl kwa">using</span>
    <span class="hl kwa">function</span> <span class="hl sym">=</span> print<span class="hl sym">,</span> printLine<span class="hl sym">;</span>
    <span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.lang.StringBuilder&quot;</span>
    <span class="hl kwa">private</span> JStringBuilder <span class="hl kwa">deriving</span> Show<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;constructor&quot;</span>
    <span class="hl kwa">private</span> createStringBuilder <span class="hl sym">::</span> JStringBuilder<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;method append&quot;</span>
    <span class="hl kwa">private</span> appendString <span class="hl sym">::</span> JStringBuilder <span class="hl sym">-&gt;</span> String <span class="hl sym">-&gt;</span> JStringBuilder<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;method append&quot;</span>
    <span class="hl kwa">private</span> appendChar <span class="hl sym">::</span> JStringBuilder <span class="hl sym">-&gt;</span> Char <span class="hl sym">-&gt;</span> JStringBuilder<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.BufferedReader&quot;</span>
    <span class="hl kwa">private</span> JBufferedReader<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.InputStream&quot;</span> <span class="hl kwa">private</span> JInputStream<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.InputStreamReader&quot;</span>
    <span class="hl kwa">private</span> JInputStreamReader<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.Reader&quot;</span> <span class="hl kwa">private</span> JReader<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.FileReader&quot;</span> <span class="hl kwa">private</span> JFileReader<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.io.PrintStream&quot;</span> <span class="hl kwa">private</span> JPrintStream<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.util.regex.Matcher&quot;</span> <span class="hl kwa">private</span> JMatcher<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.util.regex.Pattern&quot;</span> <span class="hl kwa">private</span> JPattern<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;java.lang.CharSequence&quot;</span> <span class="hl kwa">private</span> JCharSequence<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;static method java.util.regex.Pattern.compile&quot;</span>
    <span class="hl kwa">private</span> compilePattern <span class="hl sym">::</span> String <span class="hl sym">-&gt;</span> JPattern<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;method matcher&quot;</span>
    <span class="hl kwa">private</span> getMatcher <span class="hl sym">::</span> JPattern <span class="hl sym">-&gt;</span> JCharSequence <span class="hl sym">-&gt;</span> JMatcher<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;method find&quot;</span> <span class="hl kwa">private</span> find <span class="hl sym">::</span> JMatcher <span class="hl sym">-&gt;</span> Boolean<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;constructor&quot;</span>
    <span class="hl kwa">private</span> createBufferedReader <span class="hl sym">::</span> JReader <span class="hl sym">-&gt;</span> JBufferedReader<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;constructor&quot;</span>
    <span class="hl kwa">private</span> createInputStreamReaderStream <span class="hl sym">::</span>
        JInputStream <span class="hl sym">-&gt;</span> JInputStreamReader<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;method append&quot;</span>
    <span class="hl kwa">private</span> append <span class="hl sym">::</span>
        JStringBuilder <span class="hl sym">-&gt;</span> JCharArray <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> JStringBuilder<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;method read&quot;</span>
    <span class="hl kwa">private</span> read <span class="hl sym">::</span> JBufferedReader <span class="hl sym">-&gt;</span> JCharArray <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;static field java.lang.System.out&quot;</span>
    <span class="hl kwa">private</span> stdout <span class="hl sym">::</span> JPrintStream<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;static field java.lang.System.in&quot;</span>
    <span class="hl kwa">private</span> stdin <span class="hl sym">::</span> JInputStream<span class="hl sym">;</span>

<span class="hl kwa">data foreign unsafe import jvm</span> <span class="hl str">&quot;char[]&quot;</span> JCharArray<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;newArray&quot;</span> char_newArray <span class="hl sym">::</span> Int <span class="hl sym">-&gt;</span> JCharArray<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;cast&quot;</span>
    jInputStreamReaderToJReader <span class="hl sym">::</span> JInputStreamReader <span class="hl sym">-&gt;</span> JReader<span class="hl sym">;</span>

<span class="hl kwa">foreign unsafe import jvm</span> <span class="hl str">&quot;cast&quot;</span>
    stringToJCharSequence <span class="hl sym">::</span> String <span class="hl sym">-&gt;</span> JCharSequence<span class="hl sym">;</span>

<span class="hl com">/** read a dna file from stdin into a buffer */</span>
readFile <span class="hl sym">::</span> JBufferedReader <span class="hl sym">-&gt;</span> String<span class="hl sym">;</span>
readFile <span class="hl sym">!</span>bufferedReader <span class="hl sym">=</span>
    <span class="hl kwa">let</span>
        charBuffer <span class="hl sym">::</span> JCharArray<span class="hl sym">;</span>
        charBuffer <span class="hl sym">=</span> eager $ char_newArray <span class="hl num">10240</span><span class="hl sym">;</span>

        stringBuilder <span class="hl sym">::</span> JStringBuilder<span class="hl sym">;</span>
        stringBuilder <span class="hl sym">=</span> eager $ createStringBuilder<span class="hl sym">;</span>

        readAll <span class="hl sym">::</span> JCharArray <span class="hl sym">-&gt;</span> JStringBuilder <span class="hl sym">-&gt;</span> String<span class="hl sym">;</span>
        readAll <span class="hl sym">!</span>charBuffer <span class="hl sym">!</span>stringBuilder <span class="hl sym">=</span>
            <span class="hl kwa">let</span>
                charsRead <span class="hl sym">::</span> Int<span class="hl sym">;</span>
                charsRead <span class="hl sym">=</span> eager $ read bufferedReader charBuffer <span class="hl num">0 10240</span><span class="hl sym">;</span>
            <span class="hl kwa">in</span>
                <span class="hl kwa">if</span> charsRead <span class="hl sym">!= -</span><span class="hl num">1</span> <span class="hl kwa">then</span>
                    append stringBuilder charBuffer <span class="hl num">0</span> charsRead
                    <span class="hl sym">`</span>seq<span class="hl sym">`</span>
                    readAll charBuffer stringBuilder
                <span class="hl kwa">else</span>
                    show stringBuilder
            <span class="hl sym">;</span>
    <span class="hl kwa">in</span>
        readAll charBuffer stringBuilder
    <span class="hl sym">;</span>

<span class="hl com">/** Counts the number of matches remaining in a matcher */</span>
countMatches <span class="hl sym">::</span> JMatcher <span class="hl sym">-&gt;</span> Int <span class="hl sym">-&gt;</span> Int<span class="hl sym">;</span>
countMatches <span class="hl sym">!</span>matcher <span class="hl sym">!</span>count <span class="hl sym">=</span>
    <span class="hl kwa">if</span> find matcher <span class="hl kwa">then</span>
        countMatches matcher <span class="hl sym">(</span>count <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">else</span>
        count
    <span class="hl sym">;</span>

<span class="hl com">/** List of variants to search for */</span>
variants <span class="hl sym">:: [</span>String<span class="hl sym">];</span>
variants <span class="hl sym">=</span>
    <span class="hl sym">[</span>
        <span class="hl str">&quot;agggtaaa|tttaccct&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;a[act]ggtaaa|tttacc[agt]t&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;ag[act]gtaaa|tttac[agt]ct&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;agg[act]taaa|ttta[agt]cct&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;agggt[cgt]aa|tt[acg]accct&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;agggta[cgt]a|t[acg]taccct&quot;</span><span class="hl sym">,</span>
        <span class="hl str">&quot;agggtaa[cgt]|[acg]ttaccct&quot;</span>
    <span class="hl sym">]</span>
    <span class="hl sym">;</span>

doReplace <span class="hl sym">!</span>str <span class="hl sym">!</span>pos <span class="hl sym">!</span>strBuilder <span class="hl sym">=</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>pos <span class="hl sym">==</span> String<span class="hl sym">.</span>length str<span class="hl sym">)</span> <span class="hl kwa">then</span>
        strBuilder
    <span class="hl kwa">else</span>
        <span class="hl kwa">let</span>
            c <span class="hl sym">=</span> eager $ String<span class="hl sym">.</span>subscript str pos<span class="hl sym">;</span>
        <span class="hl kwa">in</span>
            <span class="hl sym">(</span><span class="hl kwa">case</span> c <span class="hl kwa">of</span>
            <span class="hl str">'B'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(c|g|t)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'D'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(a|g|t)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'H'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(a|c|t)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'K'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(g|t)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'M'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(a|c)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'N'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(a|c|g|t)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'R'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(a|g)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'S'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(c|g)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'V'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(a|c|g)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'W'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(a|t)&quot;</span><span class="hl sym">;</span>
            <span class="hl str">'Y'</span> <span class="hl sym">-&gt;</span> appendString strBuilder <span class="hl str">&quot;(c|t)&quot;</span><span class="hl sym">;</span>
            _ <span class="hl sym">-&gt;</span> appendChar strBuilder c<span class="hl sym">;)</span>
            <span class="hl sym">`</span>seq<span class="hl sym">`</span>
            doReplace str <span class="hl sym">(</span>pos<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> strBuilder
    <span class="hl sym">;</span>

main <span class="hl sym">:: [</span>String<span class="hl sym">] -&gt; ();</span>
<span class="hl kwa">public</span> main args <span class="hl sym">=</span>
    <span class="hl kwa">let</span>
        bufferReader <span class="hl sym">::</span> JBufferedReader<span class="hl sym">;</span>
        bufferReader <span class="hl sym">=</span>
            eager
            $ createBufferedReader
                <span class="hl sym">(</span>jInputStreamReaderToJReader
                    <span class="hl sym">(</span>createInputStreamReaderStream stdin<span class="hl sym">)</span>
                <span class="hl sym">)</span>
            <span class="hl sym">;</span>

        input <span class="hl sym">::</span> String<span class="hl sym">;</span>
        input <span class="hl sym">=</span> eager $ readFile bufferReader<span class="hl sym">;</span>

        sequence <span class="hl sym">::</span> String<span class="hl sym">;</span>
        sequence <span class="hl sym">=</span> replaceAllString input <span class="hl str">&quot;&gt;.*</span><span class="hl esc">\n</span><span class="hl str">|</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">;</span>
    <span class="hl kwa">in</span>

        print
            <span class="hl sym">(</span>foldLeftStrict
                <span class="hl sym">(</span>
                    \<span class="hl sym">!</span>accumulator <span class="hl sym">!</span>variant <span class="hl sym">-&gt;</span>
                        accumulator
                        <span class="hl sym">++</span> variant
                        <span class="hl sym">++</span> <span class="hl str">&quot; &quot;</span>
                        <span class="hl sym">++</span> show
                            <span class="hl sym">(</span>
                                List<span class="hl sym">.</span>sum
                                $ List<span class="hl sym">.</span>map
                                    <span class="hl sym">(</span>
                                        \<span class="hl sym">!</span>v <span class="hl sym">-&gt;</span>
                                            countMatches
                                                <span class="hl sym">(</span>getMatcher
                                                    <span class="hl sym">(</span>compilePattern v<span class="hl sym">)</span>
                                                    <span class="hl sym">(</span>stringToJCharSequence
                                                        sequence
                                                    <span class="hl sym">)</span>
                                                <span class="hl sym">)</span>
                                                <span class="hl num">0</span>
                                    <span class="hl sym">)</span>
                                    <span class="hl sym">(</span>String<span class="hl sym">.</span>splitString <span class="hl str">&quot;|&quot;</span> variant<span class="hl sym">)</span>
                            <span class="hl sym">)</span>
                        <span class="hl sym">++</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
                <span class="hl sym">)</span>
                <span class="hl str">&quot;&quot;</span>
                variants
            <span class="hl sym">)</span>
        <span class="hl sym">`</span>seq<span class="hl sym">`</span>
        printLine <span class="hl str">&quot;&quot;</span>
        <span class="hl sym">`</span>seq<span class="hl sym">`</span>
        printLine <span class="hl sym">(</span>show $ length input<span class="hl sym">)</span>
        <span class="hl sym">`</span>seq<span class="hl sym">`</span>
        printLine <span class="hl sym">(</span>show $ length sequence<span class="hl sym">)</span>
        <span class="hl sym">`</span>seq<span class="hl sym">`</span>
        printLine
            <span class="hl sym">(</span>
                show
                $ length <span class="hl sym">(</span>show $ doReplace sequence <span class="hl num">0</span> createStringBuilder<span class="hl sym">)</span>
            <span class="hl sym">)</span>
    <span class="hl sym">;</span>

