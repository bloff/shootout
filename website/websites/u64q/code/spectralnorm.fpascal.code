<source>
<def></def><com>{ The Computer Language Shootout</com><br />
<com>  http://shootout.alioth.debian.org</com><br />
<com></com><br />
<com>  contributed by Ian Osgood</com><br />
<com>  modified by Vincent Snijders</com><br />
<com>}</com><def></def><br />
<br />
<kwa>program</kwa> <def>spectralNorm</def><sym>;</sym><br />
<def></def><br />
<br />
<com>{$mode objfpc}</com><def></def><com>{$inline on}</com><def></def><br />
<br />
<kwa>var</kwa> <def>n</def><sym>,</sym><def>i</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>;</sym><br />
<def>    u</def><sym>,</sym><def>v</def><sym>,</sym><def>tmp</def> <sym>:</sym> <def></def><kwa>array of</kwa> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def>    vBv</def><sym>,</sym><def>vv</def> <sym>:</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>A</kwd><def></def><sym>(</sym><def>i</def><sym>,</sym><def>j</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>):</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym> <def></def><kwa>inline</kwa><def></def><sym>;</sym><br />
<def></def><kwa>begin</kwa><br />
<def>  A</def> <sym>:=</sym> <def></def><num>1</num> <def></def><sym>/ ((</sym><def>i</def><sym>+</sym><def>j</def><sym>)*(</sym><def>i</def><sym>+</sym><def>j</def><sym>+</sym><def></def><num>1</num><def></def><sym>)</sym> <def></def><kwa>div</kwa> <def></def><num>2</num> <def></def><sym>+</sym> <def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>);</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def></def><kwd>mulAv</kwd><def></def><sym>(</sym><def></def><kwa>var</kwa> <def>v</def><sym>,</sym> <def>Av</def> <sym>:</sym> <def></def><kwa>array of</kwa> <def></def><kwb>double</kwb><def></def><sym>);</sym><br />
<def></def><kwa>var</kwa> <def>i</def><sym>,</sym><def>j</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>;</sym><br />
<def></def><kwa>begin</kwa><br />
<def></def>  <kwa>for</kwa> <def>i</def> <sym>:=</sym> <def></def><kwd>low</kwd><def></def><sym>(</sym><def>Av</def><sym>)</sym> <def></def><kwa>to</kwa> <def></def><kwd>high</kwd><def></def><sym>(</sym><def>Av</def><sym>)</sym> <def></def><kwa>do</kwa><br />
<def></def>  <kwa>begin</kwa><br />
<def>    Av</def><sym>[</sym><def>i</def><sym>] :=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>    <kwa>for</kwa> <def>j</def> <sym>:=</sym> <def></def><kwd>low</kwd><def></def><sym>(</sym><def>v</def><sym>)</sym> <def></def><kwa>to</kwa> <def></def><kwd>high</kwd><def></def><sym>(</sym><def>v</def><sym>)</sym> <def></def><kwa>do</kwa><br />
<def>      Av</def><sym>[</sym><def>i</def><sym>] :=</sym> <def>Av</def><sym>[</sym><def>i</def><sym>] +</sym> <def></def><kwd>A</kwd><def></def><sym>(</sym><def>i</def><sym>,</sym><def>j</def><sym>) *</sym> <def>v</def><sym>[</sym><def>j</def><sym>];</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def></def><kwd>mulAtv</kwd><def></def><sym>(</sym><def></def><kwa>var</kwa> <def>v</def><sym>,</sym> <def>Atv</def> <sym>:</sym> <def></def><kwa>array of</kwa> <def></def><kwb>double</kwb><def></def><sym>);</sym><br />
<def></def><kwa>var</kwa> <def>i</def><sym>,</sym><def>j</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>;</sym><br />
<def></def><kwa>begin</kwa><br />
<def></def>  <kwa>for</kwa> <def>i</def> <sym>:=</sym> <def></def><kwd>low</kwd><def></def><sym>(</sym><def>Atv</def><sym>)</sym> <def></def><kwa>to</kwa> <def></def><kwd>high</kwd><def></def><sym>(</sym><def>Atv</def><sym>)</sym> <def></def><kwa>do</kwa><br />
<def></def>  <kwa>begin</kwa><br />
<def>    Atv</def><sym>[</sym><def>i</def><sym>] :=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>    <kwa>for</kwa> <def>j</def> <sym>:=</sym> <def></def><kwd>low</kwd><def></def><sym>(</sym><def>v</def><sym>)</sym> <def></def><kwa>to</kwa> <def></def><kwd>high</kwd><def></def><sym>(</sym><def>v</def><sym>)</sym> <def></def><kwa>do</kwa><br />
<def>      Atv</def><sym>[</sym><def>i</def><sym>] :=</sym> <def>Atv</def><sym>[</sym><def>i</def><sym>] +</sym> <def></def><kwd>A</kwd><def></def><sym>(</sym><def>j</def><sym>,</sym><def>i</def><sym>) *</sym> <def>v</def><sym>[</sym><def>j</def><sym>];</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def></def><kwd>mulAtAv</kwd><def></def><sym>(</sym><def></def><kwa>var</kwa> <def>v</def><sym>,</sym> <def>AtAv</def> <sym>:</sym> <def></def><kwa>array of</kwa> <def></def><kwb>double</kwb><def></def><sym>);</sym><br />
<def></def><kwa>begin</kwa><br />
<def></def>  <kwd>mulAv</kwd><def></def><sym>(</sym><def>v</def><sym>,</sym> <def>tmp</def><sym>);</sym><br />
<def></def>  <kwd>mulAtv</kwd><def></def><sym>(</sym><def>tmp</def><sym>,</sym> <def>AtAv</def><sym>);</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>begin</kwa><br />
<def></def>  <kwd>Val</kwd><def></def><sym>(</sym><def></def><kwd>paramstr</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>),</sym> <def>n</def><sym>,</sym> <def>i</def><sym>);</sym><br />
<def></def>  <kwd>SetLength</kwd><def></def><sym>(</sym><def>u</def><sym>,</sym> <def>n</def><sym>);</sym><br />
<def></def>  <kwd>SetLength</kwd><def></def><sym>(</sym><def>v</def><sym>,</sym> <def>n</def><sym>);</sym><br />
<def></def>  <kwd>SetLength</kwd><def></def><sym>(</sym><def>tmp</def><sym>,</sym> <def>n</def><sym>);</sym><br />
<def></def><br />
  <kwa>for</kwa> <def>i</def> <sym>:=</sym> <def></def><kwd>low</kwd><def></def><sym>(</sym><def>u</def><sym>)</sym> <def></def><kwa>to</kwa> <def></def><kwd>high</kwd><def></def><sym>(</sym><def>u</def><sym>)</sym> <def></def><kwa>do</kwa> <def>u</def><sym>[</sym><def>i</def><sym>] :=</sym> <def></def><num>1.0</num><def></def><sym>;</sym><br />
<def></def><br />
  <kwa>for</kwa> <def>i</def> <sym>:=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def></def><num>10</num> <def></def><kwa>do begin</kwa> <def></def><kwd>mulAtAv</kwd><def></def><sym>(</sym><def>u</def><sym>,</sym><def>v</def><sym>);</sym> <def></def><kwd>mulAtAv</kwd><def></def><sym>(</sym><def>v</def><sym>,</sym><def>u</def><sym>)</sym> <def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
  <kwa>for</kwa> <def>i</def> <sym>:=</sym> <def></def><kwd>low</kwd><def></def><sym>(</sym><def>u</def><sym>)</sym> <def></def><kwa>to</kwa> <def></def><kwd>high</kwd><def></def><sym>(</sym><def>u</def><sym>)</sym> <def></def><kwa>do</kwa><br />
<def></def>  <kwa>begin</kwa><br />
<def>    vBv</def> <sym>:=</sym> <def>vBv</def> <sym>+</sym> <def>u</def><sym>[</sym><def>i</def><sym>]*</sym><def>v</def><sym>[</sym><def>i</def><sym>];</sym><br />
<def>    vv</def>  <sym>:=</sym> <def>vv</def>  <sym>+</sym> <def>v</def><sym>[</sym><def>i</def><sym>]*</sym><def>v</def><sym>[</sym><def>i</def><sym>];</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
  <kwd>writeln</kwd><def></def><sym>(</sym><def></def><kwd>sqrt</kwd><def></def><sym>(</sym><def>vBv</def><sym>/</sym><def>vv</def><sym>):</sym><def></def><num>0</num><def></def><sym>:</sym><def></def><num>9</num><def></def><sym>);</sym><br />
<def></def><kwa>end</kwa><def></def><sym>.</sym><def></def><br />
</source>
