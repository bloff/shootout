<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># recursive test, by Andreas Koenig, Sep 24 2006</span>

<span class="hl slc">### Uses temp variables to help perl free memory earlier</span>

<span class="hl kwa">use</span> <span class="hl kwd">strict</span><span class="hl sym">;</span>

<span class="hl kwa">sub</span> Ack
<span class="hl sym">{</span>
	<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$x</span><span class="hl sym">,</span> <span class="hl kwb">$y</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

	<span class="hl kwa">return</span> <span class="hl kwb">$y</span> <span class="hl sym">+</span> <span class="hl num">1</span>         <span class="hl kwa">if</span> <span class="hl kwb">$x</span> <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">;</span>
	<span class="hl kwa">return</span> <span class="hl kwd">Ack</span><span class="hl sym">(</span><span class="hl kwb">$x</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">if</span> <span class="hl kwb">$y</span> <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">;</span>

        <span class="hl kwc">my</span> <span class="hl kwb">$y2</span> <span class="hl sym">=</span> <span class="hl kwd">Ack</span><span class="hl sym">(</span><span class="hl kwb">$x</span><span class="hl sym">,</span> <span class="hl kwb">$y</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">);</span>
	<span class="hl kwc">my</span> <span class="hl kwb">$ret</span> <span class="hl sym">=</span> <span class="hl kwd">Ack</span><span class="hl sym">(</span><span class="hl kwb">$x</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwb">$y2</span><span class="hl sym">);</span>
        <span class="hl kwa">return</span> <span class="hl kwb">$ret</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> Fib
<span class="hl sym">{</span>
	<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$n</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

	<span class="hl kwa">return</span> <span class="hl num">1</span> <span class="hl kwa">if</span> <span class="hl kwb">$n</span> <span class="hl sym">&lt;</span> <span class="hl num">2</span><span class="hl sym">;</span>

        <span class="hl kwc">my</span> <span class="hl kwb">$f1</span> <span class="hl sym">=</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">);</span>
        <span class="hl kwc">my</span> <span class="hl kwb">$f2</span> <span class="hl sym">=</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">-</span> <span class="hl num">2</span><span class="hl sym">);</span>
	<span class="hl kwa">return</span> <span class="hl kwb">$f2</span> <span class="hl sym">+</span> <span class="hl kwb">$f1</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwa">sub</span> Tak
<span class="hl sym">{</span>
	<span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$x</span><span class="hl sym">,</span> <span class="hl kwb">$y</span><span class="hl sym">,</span> <span class="hl kwb">$z</span><span class="hl sym">) =</span> <span class="hl kwb">&#64;_</span><span class="hl sym">;</span>

        <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwb">$y</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$x</span><span class="hl sym">) {</span>
          <span class="hl kwc">my</span> <span class="hl kwb">$z1</span> <span class="hl sym">=</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl kwb">$x</span> <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> <span class="hl kwb">$y</span><span class="hl sym">,</span> <span class="hl kwb">$z</span><span class="hl sym">);</span>
          <span class="hl kwc">my</span> <span class="hl kwb">$z2</span> <span class="hl sym">=</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl kwb">$y</span> <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> <span class="hl kwb">$z</span><span class="hl sym">,</span> <span class="hl kwb">$x</span><span class="hl sym">);</span>
          <span class="hl kwc">my</span> <span class="hl kwb">$z3</span> <span class="hl sym">=</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl kwb">$z</span> <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">,</span> <span class="hl kwb">$x</span><span class="hl sym">,</span> <span class="hl kwb">$y</span><span class="hl sym">);</span>
          <span class="hl kwc">my</span> <span class="hl kwb">$ret</span> <span class="hl sym">=</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl kwb">$z1</span><span class="hl sym">,</span> <span class="hl kwb">$z2</span><span class="hl sym">,</span> <span class="hl kwb">$z3</span><span class="hl sym">);</span>
          <span class="hl kwa">return</span> <span class="hl kwb">$ret</span><span class="hl sym">;</span>
        <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
          <span class="hl kwa">return</span> <span class="hl kwb">$z</span><span class="hl sym">;</span>
        <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">$n</span> <span class="hl sym">= (</span><span class="hl kwb">$ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] ||</span> <span class="hl num">0</span><span class="hl sym">) -</span> <span class="hl num">1</span><span class="hl sym">;</span>
printf <span class="hl str">&quot;Ack(%d,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
	<span class="hl num">3</span><span class="hl sym">,</span> <span class="hl kwb">$n</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl kwd">Ack</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,</span> <span class="hl kwb">$n</span> <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">);</span>
printf <span class="hl str">&quot;Fib(%.1f): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
	<span class="hl num">28.0</span> <span class="hl sym">+</span> <span class="hl kwb">$n</span><span class="hl sym">,</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span><span class="hl num">28.0</span> <span class="hl sym">+</span> <span class="hl kwb">$n</span><span class="hl sym">);</span>
printf <span class="hl str">&quot;Tak(%d,%d,%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
	<span class="hl kwb">$n</span> <span class="hl sym">*</span> <span class="hl num">3</span><span class="hl sym">,</span> <span class="hl kwb">$n</span> <span class="hl sym">*</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">,</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl kwb">$n</span> <span class="hl sym">*</span> <span class="hl num">3</span><span class="hl sym">,</span> <span class="hl kwb">$n</span> <span class="hl sym">*</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl kwb">$n</span><span class="hl sym">);</span>
printf <span class="hl str">&quot;Fib(%d): %d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
	<span class="hl num">3</span><span class="hl sym">,</span> <span class="hl kwd">Fib</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">);</span>
printf <span class="hl str">&quot;Tak(%.1f,%.1f,%.1f): %.1f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span>
	<span class="hl num">3.0</span><span class="hl sym">,</span><span class="hl num">2.0</span><span class="hl sym">,</span><span class="hl num">1.0</span><span class="hl sym">,</span> <span class="hl kwd">Tak</span><span class="hl sym">(</span><span class="hl num">3.0</span><span class="hl sym">,</span><span class="hl num">2.0</span><span class="hl sym">,</span><span class="hl num">1.0</span><span class="hl sym">);</span>
