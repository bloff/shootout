<source>
<def></def><com>&quot;* The Computer Language Shootout</com><br />
<com> http://shootout.alioth.debian.org/</com><br />
<com> contributed by Isaac Gouy</com><br />
<com> modified by Paolo Bonzini *&quot;</com><def></def><br />
<br />
<kwc>ReadStream</kwc> <def></def><kwb>subclass:</kwb> <def></def><kwd>#RepeatStream</kwd>  <def></def><kwb>instanceVariableNames:</kwb> <def></def><str>'repeatPtr repeatLimit'</str><def></def> <kwb>classVariableNames:</kwb> <def></def><str>''</str><def></def> <kwb>poolDictionaries:</kwb> <def></def><str>''</str><def></def> <kwb>category:</kwb> <def></def><kwa>nil</kwa> <def>!<br />
<br />
!</def><kwc>RepeatStream</kwc> <def></def><kwb>class methodsFor:</kwb> <def></def><str>'instance creation '</str><def>!</def><br />
<br />
<kwb>to:</kwb> <def>anInteger</def> <kwb>on:</kwb> <def>aCollection</def><br />
   <sym>^(</sym><def></def><kwa>super</kwa> <def></def><kwb>on:</kwb> <def>aCollection</def><sym>)</sym> <def></def><kwb>to:</kwb> <def>anInteger ! !<br />
<br />
!</def><kwc>RepeatStream</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'initialize-release'</str><def>!</def><br />
<br />
<kwb>to:</kwb> <def>anInteger<br />
   repeatPtr</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>.</sym><br />
<def>   repeatLimit</def> <sym>:=</sym> <def>anInteger ! !<br />
<br />
!</def><kwc>RepeatStream</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'accessing-reading'</str><def>!</def><br />
<br />
<kwb>next</kwb><br />
<def></def>    <kwd>| element |</kwd><br />
<def>    ptr &gt;</def> <kwb>endPtr ifTrue:</kwb> <def></def><sym>[</sym> <def></def><kwa>self</kwa> <def></def><kwb>position:</kwb> <def></def><num>0</num> <def></def><sym>].</sym><br />
<def>    element</def> <sym>:=</sym> <def>collection</def> <kwb>at:</kwb> <def>ptr</def><sym>.</sym><br />
<def>    ptr</def> <sym>:=</sym> <def>ptr</def> <kwb>+</kwb> <def></def><num>1</num><def></def><sym>.</sym> <def>repeatPtr</def> <sym>:=</sym> <def>repeatPtr</def> <kwb>+</kwb> <def></def><num>1</num><def></def><sym>.</sym><br />
<def></def>    <sym>^</sym><def>element ! !<br />
<br />
!</def><kwc>RepeatStream</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'testing'</str><def>!</def><br />
<br />
<kwb>atEnd</kwb><br />
<def></def>   <sym>^</sym><def>repeatPtr</def> <kwb>&gt;=</kwb> <def>repeatLimit ! !</def><br />
<br />
<br />
<kwc>RepeatStream</kwc> <def></def><kwb>subclass:</kwb> <def></def><kwd>#RandomStream</kwd> <def></def><kwb>instanceVariableNames:</kwb> <def></def><str>'random percentages'</str><def></def><br />
<kwb>classVariableNames:</kwb> <def></def><str>''</str><def></def> <kwb>poolDictionaries:</kwb> <def></def><str>''</str><def></def> <kwb>category:</kwb> <def></def><kwa>nil</kwa> <def>!<br />
<br />
!</def><kwc>RandomStream</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'private methods'</str><def>!</def><br />
<br />
<kwb>initCollection:</kwb> <def>aCollection</def> <kwb>limit:</kwb> <def>size</def><br />
   <kwd>| cp |</kwd><br />
<def>   repeatPtr</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>.</sym><br />
<def>   random</def> <sym>:=</sym> <def></def><kwc>RandomNumber</kwc> <def></def><kwb>to:</kwb> <def></def><num>1.0</num><def></def><sym>.</sym><br />
<def>   percentages</def> <sym>:=</sym> <def></def><kwc>Array</kwc> <def></def><kwb>new:</kwb> <def>size</def><sym>.</sym><br />
<def>   collection</def> <sym>:=</sym> <def></def><kwc>Array</kwc> <def></def><kwb>new:</kwb> <def>size</def><sym>.</sym><br />
<def>   cp</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>.</sym><br />
<def></def>   <num>1</num> <def></def><kwb>to:</kwb> <def>size</def> <kwb>do:</kwb> <def></def><sym>[</sym><def></def><kwd>:i</kwd><def></def><sym>|</sym><br />
<def>      cp</def> <sym>:=</sym> <def>cp</def> <kwb>+</kwb> <def></def><sym>(</sym><def>aCollection</def> <kwb>at:</kwb> <def>i</def><sym>)</sym> <def></def><kwb>value</kwb><def></def><sym>.</sym><br />
<def>      collection</def> <kwb>at:</kwb> <def>i</def> <kwb>put:</kwb> <def></def><sym>(</sym><def>aCollection</def> <kwb>at:</kwb> <def>i</def><sym>)</sym> <def></def><kwb>key</kwb><def></def><sym>.</sym><br />
<def>      percentages</def> <kwb>at:</kwb> <def>i</def> <kwb>put:</kwb> <def></def><sym>(</sym><def>cp</def> <kwb>*</kwb> <def></def><kwc>RandomNumber</kwc> <def></def><kwb>scale</kwb><def></def><sym>)</sym> <def></def><kwb>ceiling</kwb><def></def><sym>.</sym><br />
<def></def>   <sym>]</sym> <def>! !<br />
<br />
!</def><kwc>RandomStream</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'accessing'</str><def>!</def><br />
<br />
<kwb>next</kwb><br />
<def></def>   <kwd>| r |</kwd><br />
<def>   r</def> <sym>:=</sym> <def>random</def> <kwb>next</kwb><def></def><sym>.</sym><br />
<def>   repeatPtr</def> <sym>:=</sym> <def>repeatPtr</def> <kwb>+</kwb> <def></def><num>1</num><def></def><sym>.</sym><br />
<def></def>   <num>1</num> <def></def><kwb>to:</kwb> <def>percentages</def> <kwb>size do:</kwb> <def></def><sym>[</sym><def></def><kwd>:i</kwd><def></def><sym>|</sym><br />
<def></def>      <sym>(</sym><def>r &lt;</def> <sym>(</sym><def>percentages</def> <kwb>at:</kwb> <def>i</def><sym>))</sym> <def></def><kwb>ifTrue:</kwb> <def></def><sym>[^</sym><def>collection</def> <kwb>at:</kwb> <def>i</def><sym>]].</sym><br />
<def></def><kwa>self</kwa> <def></def><kwb>halt</kwb> <def>!</def><br />
<br />
<kwb>random:</kwb> <def>aRandomNumber</def><br />
<com>&quot;* Share the random number generator so we can get the expected results. *&quot;</com><def><br />
   random</def> <sym>:=</sym> <def>aRandomNumber ! !<br />
<br />
<br />
!</def> <kwc>FileStream</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'accessing'</str><def>!</def><br />
<br />
<kwb>writeFasta:</kwb> <def>aString</def> <kwb>sequence:</kwb> <def>aStream</def><br />
   <kwd>| i |</kwd><br />
<def></def>   <kwa>self</kwa> <def></def><kwb>nextPut:</kwb> <def>$&gt;</def><sym>;</sym> <def></def><kwb>nextPutAll:</kwb> <def>aString</def><sym>;</sym> <def></def><kwb>nl</kwb><def></def><sym>.</sym><br />
<def><br />
   i</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>.</sym><br />
<def></def>   <sym>[</sym><def>aStream</def> <kwb>atEnd</kwb><def></def><sym>]</sym> <def></def><kwb>whileFalse:</kwb> <def></def><sym>[</sym><br />
<def></def>      <sym>(</sym><def>i</def> <kwb>==</kwb> <def></def><num>60</num><def></def><sym>)</sym> <def></def><kwb>ifTrue:</kwb> <def></def><sym>[</sym><def></def><kwa>self</kwa> <def></def><kwb>nl</kwb><def></def><sym>.</sym> <def>i</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>].</sym><br />
<def></def>      <kwa>self</kwa> <def></def><kwb>nextPut:</kwb> <def>aStream</def> <kwb>next</kwb><def></def><sym>.</sym><br />
<def>      i</def> <sym>:=</sym> <def>i</def> <kwb>+</kwb> <def></def><num>1</num><def></def><sym>.</sym><br />
<def></def>      <sym>].</sym><br />
<def></def>   <kwa>self</kwa> <def></def><kwb>nl</kwb> <def>! !</def><br />
<br />
<br />
<kwc>Object</kwc> <def></def><kwb>subclass:</kwb> <def></def><kwd>#RandomNumber</kwd><br />
<def></def><kwb>instanceVariableNames:</kwb> <def></def><str>'seed scale'</str><def></def><br />
<kwb>classVariableNames:</kwb> <def></def><str>'Increment Multiplier Modulus '</str><def></def><br />
<kwb>poolDictionaries:</kwb> <def></def><str>''</str><def></def> <kwb>category:</kwb> <def></def><kwa>nil</kwa> <def>!<br />
<br />
!</def><kwc>RandomNumber</kwc> <def></def><kwb>class methodsFor:</kwb> <def></def><str>'instance creation'</str><def>!</def><br />
<br />
<kwb>scale</kwb><br />
<def></def>   <sym>^</sym><def></def><kwc>Modulus</kwc><def>!</def><br />
<br />
<kwb>to:</kwb> <def>anInteger</def><br />
   <kwc>Increment</kwc> <def></def><sym>:=</sym> <def></def><num>29573</num><def></def><sym>.</sym><br />
<def></def>   <kwc>Multiplier</kwc> <def></def><sym>:=</sym> <def></def><num>3877</num><def></def><sym>.</sym><br />
<def></def>   <kwc>Modulus</kwc> <def></def><sym>:=</sym> <def></def><num>139968</num><def></def><sym>.</sym><br />
<def></def>   <sym>^</sym><def></def><kwa>self</kwa> <def></def><kwb>basicNew to:</kwb> <def>anInteger ! !<br />
<br />
!</def><kwc>RandomNumber</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'accessing'</str><def>!</def><br />
<br />
<kwb>next</kwb><br />
<def></def>   <sym>^</sym><def>seed</def> <sym>:=</sym> <def>seed</def> <kwb>*</kwb> <def></def><kwc>Multiplier</kwc> <def></def><kwb>+</kwb> <def></def><kwc>Increment</kwc> <def>\\</def> <kwc>Modulus</kwc><def>! !<br />
<br />
!</def><kwc>RandomNumber</kwc> <def></def><kwb>methodsFor:</kwb> <def></def><str>'private'</str><def>!<br />
<br />
to: anInteger<br />
   seed</def> <sym>:=</sym> <def></def><num>42</num><def></def><sym>.</sym><br />
<def>   scale</def> <sym>:=</sym> <def>anInteger ! !</def><br />
<br />
<br />
<kwd>| n r s x |</kwd><br />
<def>n</def> <sym>:=</sym> <def></def><kwc>Smalltalk</kwc> <def></def><kwb>arguments first asInteger</kwb><def></def><sym>.</sym><br />
<def>s</def> <sym>:=</sym> <def></def><kwc>FileStream</kwc> <def></def><kwb>stdout bufferSize:</kwb> <def></def><num>4096</num><def></def><sym>.</sym><br />
<def><br />
s</def> <kwb>writeFasta:</kwb> <def></def><str>'ONE Homo sapiens alu'</str><def></def> <kwb>sequence:</kwb><br />
<def></def>   <sym>(</sym> <def></def><kwc>RepeatStream</kwc> <def></def><kwb>to:</kwb> <def>n</def><kwb>*</kwb><def></def><num>2</num> <def></def><kwb>on:</kwb><br />
<def></def>      <str>'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</str><def>,</def><br />
      <str>'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</str><def>,</def><br />
      <str>'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</str><def>,</def><br />
      <str>'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</str><def>,</def><br />
      <str>'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</str><def>,</def><br />
      <str>'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</str><def>,</def><br />
      <str>'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</str><def></def> <sym>).</sym><br />
<def><br />
r</def> <sym>:=</sym> <def></def><kwc>RandomNumber</kwc> <def></def><kwb>to:</kwb> <def></def><num>1</num><def></def><sym>.</sym> <def></def><com>&quot;Shared random sequence&quot;</com><def><br />
<br />
s</def> <kwb>writeFasta:</kwb> <def></def><str>'TWO IUB ambiguity codes'</str><def></def> <kwb>sequence:</kwb><br />
<def></def>   <sym>((</sym> <def></def><kwc>RandomStream</kwc> <def></def><kwb>to:</kwb> <def>n</def><kwb>*</kwb><def></def><num>3</num> <def></def><kwb>on:</kwb> <def></def><sym>(</sym><br />
<def></def>      <kwc>OrderedCollection</kwc> <def></def><kwb>new</kwb><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$a</num> <def></def><kwb>value:</kwb> <def></def><num>0.27</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$c</num> <def></def><kwb>value:</kwb> <def></def><num>0.12</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$g</num> <def></def><kwb>value:</kwb> <def></def><num>0.12</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$t</num> <def></def><kwb>value:</kwb> <def></def><num>0.27</num><def></def><sym>);</sym><br />
<def></def><br />
         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$B</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$D</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$H</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$K</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$M</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$N</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$R</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$S</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$V</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$W</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$Y</num> <def></def><kwb>value:</kwb> <def></def><num>0.02</num><def></def><sym>);</sym><br />
<def>         yourself</def> <sym>))</sym> <def></def><kwb>random:</kwb> <def>r</def><sym>).</sym><br />
<def><br />
s</def> <kwb>writeFasta:</kwb> <def></def><str>'THREE Homo sapiens frequency'</str><def></def> <kwb>sequence:</kwb><br />
<def></def>   <sym>((</sym> <def></def><kwc>RandomStream</kwc> <def></def><kwb>to:</kwb> <def>n</def><kwb>*</kwb><def></def><num>5</num> <def></def><kwb>on:</kwb> <def></def><sym>(</sym><br />
<def></def>      <kwc>OrderedCollection</kwc> <def></def><kwb>new</kwb><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$a</num> <def></def><kwb>value:</kwb> <def></def><num>0.3029549426680</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$c</num> <def></def><kwb>value:</kwb> <def></def><num>0.1979883004921</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$g</num> <def></def><kwb>value:</kwb> <def></def><num>0.1975473066391</num><def></def><sym>);</sym><br />
<def></def>         <kwb>add:</kwb> <def></def><sym>(</sym><def></def><kwc>Association</kwc> <def></def><kwb>key:</kwb> <def></def><num>$t</num> <def></def><kwb>value:</kwb> <def></def><num>0.3015094502008</num><def></def><sym>);</sym><br />
<def>         yourself</def> <sym>))</sym> <def></def><kwb>random:</kwb> <def>r</def><sym>).</sym><br />
<def><br />
s</def> <kwb>flush</kwb><def></def><sym>;</sym> <def></def><kwb>close</kwb> <def>!</def><br />
</source>
