<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># contributed by Danny Sauer</span>
<span class="hl slc"># completely rewritten and</span>
<span class="hl slc"># cleaned up for speed and fun by</span>
<span class="hl slc"># Mirco Wahab (wahab&#64;chemie.uni-halle.de)</span>
<span class="hl slc">#</span>
<span class="hl slc"># Rewritten by</span>
<span class="hl slc"># Emanuele Zeppieri</span>

<span class="hl kwa">use</span> <span class="hl kwd">strict</span><span class="hl sym">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$input</span> <span class="hl sym">=</span> <span class="hl kwa">do</span> <span class="hl sym">{</span> <span class="hl kwc">local</span> <span class="hl sym">$/; &lt;</span>STDIN<span class="hl sym">&gt; };</span>
<span class="hl kwc">my</span> <span class="hl kwb">$file_length</span> <span class="hl sym">=</span> length <span class="hl kwb">$input</span><span class="hl sym">;</span>

<span class="hl kwb">$input</span> <span class="hl sym">=~</span> s<span class="hl sym">/^&gt;.*$//</span><span class="hl kwd">mg</span><span class="hl sym">;</span>
<span class="hl kwb">$input</span> <span class="hl sym">=~</span> tr<span class="hl sym">/</span><span class="hl esc">\n</span><span class="hl sym">//</span><span class="hl kwd">d</span><span class="hl sym">;</span>

<span class="hl kwc">my</span> <span class="hl kwb">$seq_length</span> <span class="hl sym">=</span> length <span class="hl kwb">$input</span><span class="hl sym">;</span>

<span class="hl kwa">for</span> <span class="hl sym">(</span>
        <span class="hl str">'agggtaaa|tttaccct'</span><span class="hl sym">,</span>
    <span class="hl str">'[cgt]gggtaaa|tttaccc[acg]'</span><span class="hl sym">,</span>
    <span class="hl str">'a[act]ggtaaa|tttacc[agt]t'</span><span class="hl sym">,</span>
    <span class="hl str">'ag[act]gtaaa|tttac[agt]ct'</span><span class="hl sym">,</span>
    <span class="hl str">'agg[act]taaa|ttta[agt]cct'</span><span class="hl sym">,</span>
    <span class="hl str">'aggg[acg]aaa|ttt[cgt]ccct'</span><span class="hl sym">,</span>
    <span class="hl str">'agggt[cgt]aa|tt[acg]accct'</span><span class="hl sym">,</span>
    <span class="hl str">'agggta[cgt]a|t[acg]taccct'</span><span class="hl sym">,</span>
    <span class="hl str">'agggtaa[cgt]|[acg]ttaccct'</span>
<span class="hl sym">) {</span>
    <span class="hl kwc">my</span> <span class="hl sym">(</span><span class="hl kwb">$r1</span><span class="hl sym">,</span> <span class="hl kwb">$r2</span><span class="hl sym">) =</span> split <span class="hl sym">/</span>\<span class="hl sym">|/;</span>
    <span class="hl kwc">my</span> <span class="hl kwb">$count</span><span class="hl sym">;</span>
    <span class="hl kwb">$count</span><span class="hl sym">++</span> <span class="hl kwa">while</span> <span class="hl kwb">$input</span> <span class="hl sym">=~ /</span><span class="hl kwb">$r1</span><span class="hl sym">/</span><span class="hl kwd">gi</span><span class="hl sym">;</span>
    <span class="hl kwb">$count</span><span class="hl sym">++</span> <span class="hl kwa">while</span> <span class="hl kwb">$input</span> <span class="hl sym">=~ /</span><span class="hl kwb">$r2</span><span class="hl sym">/</span><span class="hl kwd">gi</span><span class="hl sym">;</span>
    <span class="hl kwc">print</span> <span class="hl str">&quot;$_ $count</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
<span class="hl sym">}</span>

<span class="hl kwc">my</span> <span class="hl kwb">%iub</span> <span class="hl sym">= (</span>
    B <span class="hl sym">=&gt;</span> <span class="hl str">'(c|g|t)'</span><span class="hl sym">,</span> D <span class="hl sym">=&gt;</span> <span class="hl str">'(a|g|t)'</span><span class="hl sym">,</span> H <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c|t)'</span>  <span class="hl sym">,</span>
    K <span class="hl sym">=&gt;</span> <span class="hl str">'(g|t)'</span>  <span class="hl sym">,</span> M <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c)'</span>  <span class="hl sym">,</span> N <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c|g|t)'</span><span class="hl sym">,</span>
    R <span class="hl sym">=&gt;</span> <span class="hl str">'(a|g)'</span>  <span class="hl sym">,</span> S <span class="hl sym">=&gt;</span> <span class="hl str">'(c|g)'</span>  <span class="hl sym">,</span> V <span class="hl sym">=&gt;</span> <span class="hl str">'(a|c|g)'</span>  <span class="hl sym">,</span>
    W <span class="hl sym">=&gt;</span> <span class="hl str">'(a|t)'</span>  <span class="hl sym">,</span> Y <span class="hl sym">=&gt;</span> <span class="hl str">'(c|t)'</span>
<span class="hl sym">);</span>
<span class="hl kwc">my</span> <span class="hl kwb">$findiub</span> <span class="hl sym">=</span> <span class="hl str">'(['</span> <span class="hl sym">.</span> <span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl str">''</span><span class="hl sym">,</span> keys <span class="hl kwb">%iub</span><span class="hl sym">) .</span> <span class="hl str">'])'</span><span class="hl sym">;</span>
<span class="hl kwb">$input</span> <span class="hl sym">=~</span> s<span class="hl sym">/</span><span class="hl kwb">$findiub</span><span class="hl sym">/</span><span class="hl kwb">$iub</span><span class="hl sym">{</span><span class="hl kwb">$1</span><span class="hl sym">}/</span><span class="hl kwd">og</span><span class="hl sym">;</span>

printf <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">%d</span><span class="hl esc">\n</span><span class="hl str">%d</span><span class="hl esc">\n</span><span class="hl str">%d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwb">$file_length</span><span class="hl sym">,</span> <span class="hl kwb">$seq_length</span><span class="hl sym">,</span> length <span class="hl kwb">$input</span><span class="hl sym">;</span>
