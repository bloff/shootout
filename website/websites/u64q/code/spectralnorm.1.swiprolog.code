<span class="hl slc">% ----------------------------------------------------------------------</span>
<span class="hl slc">% The Great Computer Language Shootout</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">% Contributed by Anthony Borla</span>
<span class="hl slc">% ----------------------------------------------------------------------</span>

main <span class="hl sym">:-</span>
  cmdlNumArg<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> N<span class="hl sym">),</span>
  approximate<span class="hl sym">(</span>N<span class="hl sym">,</span> R<span class="hl sym">),</span>
  format<span class="hl sym">(</span><span class="hl str">'~9f~n'</span><span class="hl sym">, [</span>R<span class="hl sym">]).</span>

<span class="hl slc">% ------------------------------- %</span>

approximate<span class="hl sym">(</span>N<span class="hl sym">,</span> R<span class="hl sym">) :-</span>
  make_array<span class="hl sym">(</span>app_u<span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">,</span> U<span class="hl sym">),</span> make_array<span class="hl sym">(</span>app_v<span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> V<span class="hl sym">),</span>

  setvar<span class="hl sym">(</span>counter<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">),</span>
  <span class="hl kwa">repeat</span><span class="hl sym">,</span>
    getvar<span class="hl sym">(</span>counter<span class="hl sym">,</span> I<span class="hl sym">),</span> I1 <span class="hl kwa">is</span> I <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> setvar<span class="hl sym">(</span>counter<span class="hl sym">,</span> I1<span class="hl sym">),</span>
    mulAtAv<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">),</span>
    mulAtAv<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> U<span class="hl sym">),</span>
  I <span class="hl sym">&gt;=</span> <span class="hl num">10</span><span class="hl sym">,</span>
  dropvar<span class="hl sym">(</span>counter<span class="hl sym">),</span>

  vbv_loop<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> VbV<span class="hl sym">),</span> vv_loop<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> V<span class="hl sym">,</span> Vv<span class="hl sym">),</span>

  drop_array<span class="hl sym">(</span>app_u<span class="hl sym">),</span> drop_array<span class="hl sym">(</span>app_v<span class="hl sym">),</span>

  Vi <span class="hl kwa">is</span> VbV <span class="hl sym">/</span> Vv<span class="hl sym">,</span> R <span class="hl kwa">is</span> <span class="hl kwb">sqrt</span><span class="hl sym">(</span>Vi<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

vbv_loop<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> VbV<span class="hl sym">) :-</span> vbv_loop_<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> VbV<span class="hl sym">).</span>

vbv_loop_<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> VAcc<span class="hl sym">,</span> VAcc<span class="hl sym">) :- !.</span>

vbv_loop_<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> VAcc<span class="hl sym">,</span> VbV<span class="hl sym">) :-</span>
  get_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> UValue<span class="hl sym">),</span> get_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> VValue<span class="hl sym">),</span>
  VAcc1 <span class="hl kwa">is</span> VAcc <span class="hl sym">+</span> UValue <span class="hl sym">*</span> VValue<span class="hl sym">,</span>
  N1 <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span> vbv_loop_<span class="hl sym">(</span>N1<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> VAcc1<span class="hl sym">,</span> VbV<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

vv_loop<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> Vv<span class="hl sym">) :-</span> vv_loop_<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> Vv<span class="hl sym">).</span>

vv_loop_<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> VAcc<span class="hl sym">,</span> VAcc<span class="hl sym">) :- !.</span>

vv_loop_<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> VAcc<span class="hl sym">,</span> Vv<span class="hl sym">) :-</span>
  get_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> VValue<span class="hl sym">),</span>
  VAcc1 <span class="hl kwa">is</span> VAcc <span class="hl sym">+</span> VValue <span class="hl sym">*</span> VValue<span class="hl sym">,</span>
  N1 <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span> vv_loop_<span class="hl sym">(</span>N1<span class="hl sym">,</span> U<span class="hl sym">,</span> V<span class="hl sym">,</span> VAcc1<span class="hl sym">,</span> Vv<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

a<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> AResult<span class="hl sym">) :-</span>
  Ia <span class="hl kwa">is</span> I <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> Ja <span class="hl kwa">is</span> J <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>
  AResult <span class="hl kwa">is</span> <span class="hl num">1.0</span> <span class="hl sym">/ ((</span>Ia <span class="hl sym">+</span> Ja<span class="hl sym">) * (</span>Ia <span class="hl sym">+</span> Ja <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">) /</span> <span class="hl num">2.0</span> <span class="hl sym">+</span> Ia <span class="hl sym">+</span> <span class="hl num">1.0</span><span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

mulAv<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> Av<span class="hl sym">) :-</span>  mulAv_<span class="hl sym">(</span>N<span class="hl sym">,</span> N<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Av<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

mulAv_<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

mulAv_<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Av<span class="hl sym">) :-</span>
  set_arg<span class="hl sym">(</span>I<span class="hl sym">,</span> Av<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">),</span>
  mulAvJ_<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Av<span class="hl sym">),</span>
  I1 <span class="hl kwa">is</span> I <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span> mulAv_<span class="hl sym">(</span>I1<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Av<span class="hl sym">).</span>

mulAvJ_<span class="hl sym">(</span>_<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

mulAvJ_<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Av<span class="hl sym">) :-</span>
  get_arg<span class="hl sym">(</span>I<span class="hl sym">,</span> Av<span class="hl sym">,</span> AvValue<span class="hl sym">),</span> get_arg<span class="hl sym">(</span>J<span class="hl sym">,</span> V<span class="hl sym">,</span> VValue<span class="hl sym">),</span> a<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> AResult<span class="hl sym">),</span>
  AvNew <span class="hl kwa">is</span> AvValue <span class="hl sym">+</span> AResult <span class="hl sym">*</span> VValue<span class="hl sym">,</span>
  set_arg<span class="hl sym">(</span>I<span class="hl sym">,</span> Av<span class="hl sym">,</span> AvNew<span class="hl sym">),</span>
  J1 <span class="hl kwa">is</span> J <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span> mulAvJ_<span class="hl sym">(</span>I<span class="hl sym">,</span> J1<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Av<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

mulAtV<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> Atv<span class="hl sym">) :-</span>  mulAtV_<span class="hl sym">(</span>N<span class="hl sym">,</span> N<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Atv<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

mulAtV_<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

mulAtV_<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Atv<span class="hl sym">) :-</span>
  set_arg<span class="hl sym">(</span>I<span class="hl sym">,</span> Atv<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">),</span>
  mulAtVJ_<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Atv<span class="hl sym">),</span>
  I1 <span class="hl kwa">is</span> I <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span> mulAtV_<span class="hl sym">(</span>I1<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Atv<span class="hl sym">).</span>

mulAtVJ_<span class="hl sym">(</span>_<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

mulAtVJ_<span class="hl sym">(</span>I<span class="hl sym">,</span> J<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Atv<span class="hl sym">) :-</span>
  get_arg<span class="hl sym">(</span>I<span class="hl sym">,</span> Atv<span class="hl sym">,</span> AtvValue<span class="hl sym">),</span> get_arg<span class="hl sym">(</span>J<span class="hl sym">,</span> V<span class="hl sym">,</span> VValue<span class="hl sym">),</span> a<span class="hl sym">(</span>J<span class="hl sym">,</span> I<span class="hl sym">,</span> AResult<span class="hl sym">),</span>
  AtvNew <span class="hl kwa">is</span> AtvValue <span class="hl sym">+</span> AResult <span class="hl sym">*</span> VValue<span class="hl sym">,</span>
  set_arg<span class="hl sym">(</span>I<span class="hl sym">,</span> Atv<span class="hl sym">,</span> AtvNew<span class="hl sym">),</span>
  J1 <span class="hl kwa">is</span> J <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span> mulAtVJ_<span class="hl sym">(</span>I<span class="hl sym">,</span> J1<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Atv<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

mulAtAv<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> AtAv<span class="hl sym">) :-</span>
  make_array<span class="hl sym">(</span>mul_u<span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> U<span class="hl sym">),</span>
  mulAv<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> U<span class="hl sym">),</span> mulAtV<span class="hl sym">(</span>N<span class="hl sym">,</span> U<span class="hl sym">,</span> AtAv<span class="hl sym">),</span>
  drop_array<span class="hl sym">(</span>mul_u<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

make_array<span class="hl sym">(</span>Name<span class="hl sym">,</span> N<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">) :-</span>
  <span class="hl kwb">functor</span><span class="hl sym">(</span>Array<span class="hl sym">,</span> Name<span class="hl sym">,</span> N<span class="hl sym">),</span>
  fill_array<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

fill_array<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

fill_array<span class="hl sym">(</span>N<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">) :-</span>
  nb_setarg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">,</span> V<span class="hl sym">),</span> N1 <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">, !,</span>
  fill_array<span class="hl sym">(</span>N1<span class="hl sym">,</span> V<span class="hl sym">,</span> Array<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

drop_array<span class="hl sym">(</span>Name<span class="hl sym">) :-</span> nb_delete<span class="hl sym">(</span>Name<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

set_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">,</span> V<span class="hl sym">) :-</span> nb_setarg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">,</span> V<span class="hl sym">).</span>
get_arg<span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">,</span> V<span class="hl sym">) :-</span> <span class="hl kwb">arg</span><span class="hl sym">(</span>N<span class="hl sym">,</span> Array<span class="hl sym">,</span> V<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

getvar<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">) :-</span> nb_getval<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">).</span>
setvar<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">) :-</span> nb_setval<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">).</span>
dropvar<span class="hl sym">(</span>Id<span class="hl sym">) :-</span> nb_delete<span class="hl sym">(</span>Id<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

argument_value<span class="hl sym">(</span>N<span class="hl sym">,</span> Arg<span class="hl sym">) :-</span>
  <span class="hl kwb">current_prolog_flag</span><span class="hl sym">(</span>argv<span class="hl sym">,</span> Cmdline<span class="hl sym">),</span> append<span class="hl sym">(</span>_<span class="hl sym">, [--|</span>UserArgs<span class="hl sym">],</span> Cmdline<span class="hl sym">),</span>
  Nth <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> nth0<span class="hl sym">(</span>Nth<span class="hl sym">,</span> UserArgs<span class="hl sym">,</span> Arg<span class="hl sym">).</span>

cmdlNumArg<span class="hl sym">(</span>Nth<span class="hl sym">,</span> N<span class="hl sym">) :-</span>
  argument_value<span class="hl sym">(</span>Nth<span class="hl sym">,</span> Arg<span class="hl sym">),</span> <span class="hl kwb">catch</span><span class="hl sym">(</span>atom_number<span class="hl sym">(</span>Arg<span class="hl sym">,</span> N<span class="hl sym">),</span> _<span class="hl sym">,</span> <span class="hl kwa">fail</span><span class="hl sym">) ;</span> <span class="hl kwa">halt</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">).</span>

