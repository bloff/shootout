<span class="hl slc">%% The Computer Language Shootout</span>
<span class="hl slc">%% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%% contributed by Kenneth Johansson, Vlad Dumitrescu, Ulf Wiger</span>

<span class="hl sym">-</span><span class="hl kwa">module</span><span class="hl sym">(</span>knucleotide<span class="hl sym">).</span>
<span class="hl sym">-</span><span class="hl kwa">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">]).</span>

<span class="hl slc">%% turn characters a..z to uppercase and strip out any newline</span>
<span class="hl kwd">to_upper_no_nl</span><span class="hl sym">(</span>Str<span class="hl sym">) -&gt;</span>                               <span class="hl kwd">to_upper_no_nl</span><span class="hl sym">(</span>Str<span class="hl sym">, []).</span>
<span class="hl kwd">to_upper_no_nl</span><span class="hl sym">([</span>C<span class="hl sym">|</span>Cs<span class="hl sym">],</span> Acc<span class="hl sym">)</span> <span class="hl kwa">when</span> C <span class="hl sym">&gt;=</span> $a<span class="hl sym">,</span> C <span class="hl sym">=&lt;</span> $z <span class="hl sym">-&gt;</span> <span class="hl kwd">to_upper_no_nl</span><span class="hl sym">(</span>Cs<span class="hl sym">, [</span>C<span class="hl sym">-(</span>$a<span class="hl sym">-</span>$A<span class="hl sym">)|</span> Acc<span class="hl sym">]);</span>
<span class="hl kwd">to_upper_no_nl</span><span class="hl sym">([</span>C<span class="hl sym">|</span>Cs<span class="hl sym">],</span> Acc<span class="hl sym">)</span> <span class="hl kwa">when</span> C <span class="hl sym">==</span> $\n <span class="hl sym">-&gt;</span>         <span class="hl kwd">to_upper_no_nl</span><span class="hl sym">(</span>Cs<span class="hl sym">,</span>  Acc<span class="hl sym">);</span>
<span class="hl kwd">to_upper_no_nl</span><span class="hl sym">([</span>C<span class="hl sym">|</span>Cs<span class="hl sym">],</span> Acc<span class="hl sym">) -&gt;</span>                       <span class="hl kwd">to_upper_no_nl</span><span class="hl sym">(</span>Cs<span class="hl sym">, [</span>C <span class="hl sym">|</span> Acc<span class="hl sym">]);</span>
<span class="hl kwd">to_upper_no_nl</span><span class="hl sym">([],</span> Acc<span class="hl sym">) -&gt;</span>                           lists<span class="hl sym">:</span><span class="hl kwd">reverse</span><span class="hl sym">(</span>Acc<span class="hl sym">).</span>

<span class="hl slc">% Read in lines from stdin and discard them until a line starting with</span>
<span class="hl slc">% &gt;THREE are reached.</span>
<span class="hl kwd">seek_three</span><span class="hl sym">() -&gt;</span>
    <span class="hl kwa">case</span> io<span class="hl sym">:</span><span class="hl kwd">get_line</span><span class="hl sym">(</span><span class="hl str">''</span><span class="hl sym">)</span> <span class="hl kwa">of</span>
	<span class="hl str">&quot;&gt;TH&quot;</span> <span class="hl sym">++</span> _ <span class="hl sym">-&gt;</span> found<span class="hl sym">;</span>
	eof        <span class="hl sym">-&gt;</span> erlang<span class="hl sym">:</span><span class="hl kwd">error</span><span class="hl sym">(</span>eof<span class="hl sym">);</span>
	_          <span class="hl sym">-&gt;</span> <span class="hl kwd">seek_three</span><span class="hl sym">()</span>
    <span class="hl kwa">end</span><span class="hl sym">.</span>

<span class="hl slc">%% Read in lines from stdin until eof.</span>
<span class="hl slc">%% Lines are converted to upper case and put into a single list.</span>
<span class="hl kwd">dna_seq</span><span class="hl sym">()      -&gt;</span> <span class="hl kwd">seek_three</span><span class="hl sym">(),</span> <span class="hl kwd">dna_seq</span><span class="hl sym">([]).</span>
<span class="hl kwd">dna_seq</span><span class="hl sym">(</span> Seq <span class="hl sym">) -&gt;</span>
    <span class="hl kwa">case</span> io<span class="hl sym">:</span><span class="hl kwd">get_line</span><span class="hl sym">(</span><span class="hl str">''</span><span class="hl sym">)</span> <span class="hl kwa">of</span>
        eof  <span class="hl sym">-&gt;</span> <span class="hl kwb">list_to_binary</span><span class="hl sym">(</span>lists<span class="hl sym">:</span><span class="hl kwd">reverse</span><span class="hl sym">(</span>Seq<span class="hl sym">));</span>
        Line <span class="hl sym">-&gt;</span> Uline <span class="hl sym">=</span> <span class="hl kwd">to_upper_no_nl</span><span class="hl sym">(</span>Line<span class="hl sym">),</span>
                <span class="hl kwd">dna_seq</span><span class="hl sym">([</span>Uline<span class="hl sym">|</span>Seq<span class="hl sym">])</span>
    <span class="hl kwa">end</span><span class="hl sym">.</span>

<span class="hl slc">%% Create a dictinary with the dna sequence as key and the number of times</span>
<span class="hl slc">%% it was in the original sequence as value.</span>
<span class="hl slc">%% Len is the number of basepairs to use as the key.</span>
<span class="hl kwd">gen_freq</span><span class="hl sym">(</span>T<span class="hl sym">,</span> Dna<span class="hl sym">,</span> Len<span class="hl sym">) -&gt;</span>
    <span class="hl kwd">gen_freq</span><span class="hl sym">(</span>Dna<span class="hl sym">,</span> Len<span class="hl sym">,</span> T <span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl kwb">size</span><span class="hl sym">(</span>Dna<span class="hl sym">)).</span>
<span class="hl kwd">gen_freq</span><span class="hl sym">(&lt;&lt;&gt;&gt;,</span> _<span class="hl sym">,</span> Frequency<span class="hl sym">,</span> Acc<span class="hl sym">,</span> _<span class="hl sym">) -&gt;</span>
    <span class="hl sym">{</span>Frequency<span class="hl sym">,</span>Acc<span class="hl sym">};</span>
<span class="hl kwd">gen_freq</span><span class="hl sym">(</span>Dna<span class="hl sym">,</span> Len<span class="hl sym">,</span> Frequency<span class="hl sym">,</span> Acc<span class="hl sym">,</span> Dec<span class="hl sym">)</span> <span class="hl kwa">when</span> Dec <span class="hl sym">&gt;=</span> Len <span class="hl sym">-&gt;</span>
    <span class="hl sym">&lt;&lt;</span>Key<span class="hl sym">:</span>Len<span class="hl sym">/</span><span class="hl kwb">binary</span><span class="hl sym">,</span> _<span class="hl sym">/</span><span class="hl kwb">binary</span><span class="hl sym">&gt;&gt; =</span> Dna<span class="hl sym">,</span>
    <span class="hl kwd">update_counter</span><span class="hl sym">(</span>Key<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> Frequency<span class="hl sym">),</span>
    <span class="hl sym">&lt;&lt;</span>_<span class="hl sym">,</span> T<span class="hl sym">/</span><span class="hl kwb">binary</span><span class="hl sym">&gt;&gt; =</span> Dna<span class="hl sym">,</span>
    <span class="hl kwd">gen_freq</span><span class="hl sym">(</span>T<span class="hl sym">,</span> Len<span class="hl sym">,</span> Frequency<span class="hl sym">,</span> Acc <span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> Dec <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span>
<span class="hl kwd">gen_freq</span><span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> Frequency<span class="hl sym">,</span> Acc<span class="hl sym">,</span> _<span class="hl sym">) -&gt;</span>
     <span class="hl sym">{</span>Frequency<span class="hl sym">,</span>Acc<span class="hl sym">}.</span>

<span class="hl kwd">update_counter</span><span class="hl sym">(</span>Key<span class="hl sym">,</span> Incr<span class="hl sym">,</span> T<span class="hl sym">) -&gt;</span>
    try ets<span class="hl sym">:</span><span class="hl kwd">update_counter</span><span class="hl sym">(</span>T<span class="hl sym">,</span> Key<span class="hl sym">,</span> Incr<span class="hl sym">)</span> <span class="hl kwa">of</span>
	Res <span class="hl sym">-&gt;</span>
	    Res
    <span class="hl kwa">catch</span>
	error<span class="hl sym">:</span>badarg <span class="hl sym">-&gt;</span>
	    ets<span class="hl sym">:</span><span class="hl kwd">insert</span><span class="hl sym">(</span>T<span class="hl sym">, {</span>Key<span class="hl sym">,</span> Incr<span class="hl sym">})</span>
    <span class="hl kwa">end</span><span class="hl sym">.</span>

<span class="hl slc">%% Print the frequency table</span>
<span class="hl kwd">printf</span><span class="hl sym">({</span>Frequency<span class="hl sym">,</span> Tot<span class="hl sym">}) -&gt;</span>
    <span class="hl kwd">printf</span><span class="hl sym">(</span>lists<span class="hl sym">:</span><span class="hl kwd">reverse</span><span class="hl sym">(</span>lists<span class="hl sym">:</span><span class="hl kwd">keysort</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span>ets<span class="hl sym">:</span><span class="hl kwd">tab2list</span><span class="hl sym">(</span>Frequency<span class="hl sym">))),</span> Tot<span class="hl sym">).</span>
<span class="hl kwd">printf</span><span class="hl sym">([],</span>_<span class="hl sym">) -&gt;</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\</span><span class="hl str">n&quot;</span><span class="hl sym">);</span>
<span class="hl kwd">printf</span><span class="hl sym">([</span>H <span class="hl sym">|</span>T<span class="hl sym">],</span>Tot<span class="hl sym">)-&gt;</span>
    <span class="hl sym">{</span>Nucleoid<span class="hl sym">,</span>Cnt<span class="hl sym">}=</span>H<span class="hl sym">,</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~s ~.3f</span><span class="hl esc">\</span><span class="hl str">n&quot;</span><span class="hl sym">,[</span><span class="hl kwb">binary_to_list</span><span class="hl sym">(</span>Nucleoid<span class="hl sym">),(</span>Cnt<span class="hl sym">*</span><span class="hl num">100.0</span><span class="hl sym">)/</span>Tot<span class="hl sym">]),</span>
    <span class="hl kwd">printf</span><span class="hl sym">(</span>T<span class="hl sym">,</span>Tot<span class="hl sym">).</span>

<span class="hl kwd">write_count</span><span class="hl sym">(</span>Dna<span class="hl sym">,</span> Pattern<span class="hl sym">) -&gt;</span>
    <span class="hl kwd">new_hash</span><span class="hl sym">(</span>
      <span class="hl kwa">fun</span><span class="hl sym">(</span>T<span class="hl sym">) -&gt;</span>
	      <span class="hl sym">{</span> Freq <span class="hl sym">,</span>_<span class="hl sym">} =</span> <span class="hl kwd">gen_freq</span><span class="hl sym">(</span>T<span class="hl sym">,</span> Dna<span class="hl sym">,</span> <span class="hl kwb">size</span><span class="hl sym">(</span>Pattern<span class="hl sym">)),</span>
	      <span class="hl kwa">case</span> ets<span class="hl sym">:</span><span class="hl kwd">lookup</span><span class="hl sym">(</span>Freq<span class="hl sym">,</span> Pattern<span class="hl sym">)</span> <span class="hl kwa">of</span>
		  <span class="hl sym">[{</span>_<span class="hl sym">,</span> Value<span class="hl sym">}] -&gt;</span>
		      io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~w</span><span class="hl esc">\</span><span class="hl str">t~s</span><span class="hl esc">\</span><span class="hl str">n&quot;</span><span class="hl sym">,[</span>Value<span class="hl sym">,</span><span class="hl kwb">binary_to_list</span><span class="hl sym">(</span>Pattern<span class="hl sym">)]);</span>
		  <span class="hl sym">[] -&gt;</span>
		      io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~w</span><span class="hl esc">\</span><span class="hl str">t~s</span><span class="hl esc">\</span><span class="hl str">n&quot;</span><span class="hl sym">,[</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl kwb">binary_to_list</span><span class="hl sym">(</span>Pattern<span class="hl sym">)])</span>
	      <span class="hl kwa">end</span>
      <span class="hl kwa">end</span><span class="hl sym">).</span>

<span class="hl kwd">new_hash</span><span class="hl sym">(</span>F<span class="hl sym">) -&gt;</span>
    T <span class="hl sym">=</span> ets<span class="hl sym">:</span><span class="hl kwd">new</span><span class="hl sym">(</span><span class="hl kwb">hash</span><span class="hl sym">, [</span>set<span class="hl sym">]),</span>
    Res <span class="hl sym">=</span> <span class="hl kwd">F</span><span class="hl sym">(</span>T<span class="hl sym">),</span>
    ets<span class="hl sym">:</span><span class="hl kwd">delete</span><span class="hl sym">(</span>T<span class="hl sym">),</span>
    Res<span class="hl sym">.</span>

<span class="hl kwd">main</span><span class="hl sym">(</span>_Arg<span class="hl sym">) -&gt;</span>
    Seq <span class="hl sym">=</span> <span class="hl kwd">dna_seq</span><span class="hl sym">(),</span>
    lists<span class="hl sym">:</span><span class="hl kwd">foreach</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>H<span class="hl sym">) -&gt;</span>
			  <span class="hl kwd">new_hash</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>T<span class="hl sym">) -&gt;</span>
					   <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl kwd">gen_freq</span><span class="hl sym">(</span>T<span class="hl sym">,</span>Seq<span class="hl sym">,</span>H<span class="hl sym">))</span>
				   <span class="hl kwa">end</span><span class="hl sym">)</span>
		  <span class="hl kwa">end</span><span class="hl sym">, [</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">]),</span>
    lists<span class="hl sym">:</span><span class="hl kwd">foreach</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>H<span class="hl sym">) -&gt;</span> <span class="hl kwd">write_count</span><span class="hl sym">(</span>Seq<span class="hl sym">,</span>H<span class="hl sym">)</span> <span class="hl kwa">end</span><span class="hl sym">, [&lt;&lt;</span><span class="hl str">&quot;GGT&quot;</span><span class="hl sym">&gt;&gt;,&lt;&lt;</span><span class="hl str">&quot;GGTA&quot;</span><span class="hl sym">&gt;&gt;,&lt;&lt;</span><span class="hl str">&quot;GGTATT&quot;</span><span class="hl sym">&gt;&gt;,&lt;&lt;</span><span class="hl str">&quot;GGTATTTTAATT&quot;</span><span class="hl sym">&gt;&gt;,&lt;&lt;</span><span class="hl str">&quot;GGTATTTTAATTTATAGT&quot;</span><span class="hl sym">&gt;&gt;]),</span>
    <span class="hl kwb">halt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">).</span>

