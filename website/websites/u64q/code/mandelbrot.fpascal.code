<source>
<def></def><com>{ The Computer Language Benchmarks Game</com><br />
<com>  http://shootout.alioth.debian.org</com><br />
<com></com><br />
<com>  contributed by Ales Katona</com><br />
<com>  modified by Vincent Snijders</com><br />
<com>  modified by Steve Fisher</com><br />
<com>}</com><def></def><br />
<br />
<com>{$inline on}</com><def></def><br />
<com>{$FPUTYPE SSE2}</com><def></def><br />
<com>{$I-}</com><def></def><br />
<br />
<kwa>var</kwa><br />
<def>  n</def><sym>,</sym> <def>x</def><sym>,</sym> <def>y</def><sym>:</sym> <def></def><kwb>word</kwb><def></def><sym>;</sym><br />
<def>  bits</def><sym>,</sym> <def>bit</def><sym>:</sym> <def></def><kwb>byte</kwb><def></def><sym>;</sym><br />
<def>  c_x</def><sym>,</sym> <def>c_y</def><sym>:</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def>calc_point</def><sym>;</sym> <def></def><kwa>inline</kwa><def></def><sym>;</sym><br />
<def></def><kwa>const</kwa><br />
<def>  limit</def><sym>:</sym> <def></def><kwb>double</kwb> <def></def><sym>=</sym> <def></def><num>4.0</num><def></def><sym>;</sym><br />
<def></def><kwa>var</kwa><br />
<def>  i</def><sym>:</sym> <def></def><kwb>word</kwb><def></def><sym>;</sym><br />
<def>  z_r</def><sym>,</sym> <def>z_i</def><sym>,</sym> <def>c_r</def><sym>,</sym> <def>c_i</def><sym>,</sym> <def>t_i</def><sym>,</sym> <def>t_r</def><sym>:</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def></def><kwa>begin</kwa><br />
<def>  c_r</def> <sym>:=</sym> <def>c_x</def><sym>;</sym><br />
<def>  c_i</def> <sym>:=</sym> <def>c_y</def><sym>;</sym><br />
<def>  z_r</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>;</sym>  <def>z_i</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>;</sym>  <def>t_r</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>;</sym>  <def>t_i</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>i</def> <sym>:=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def></def><num>50</num> <def></def><kwa>do</kwa><br />
<def></def>  <kwa>begin</kwa><br />
<def>    z_i</def> <sym>:=</sym> <def>z_r</def><sym>*</sym><def>z_i</def><sym>*</sym><def></def><num>2</num> <def></def><sym>+</sym> <def>c_i</def><sym>;</sym><br />
<def>    z_r</def> <sym>:=</sym> <def>t_r</def> <sym>-</sym> <def>t_i</def> <sym>+</sym> <def>c_r</def><sym>;</sym><br />
<def>    t_i</def> <sym>:=</sym> <def>z_i</def> <sym>*</sym> <def>z_i</def><sym>;</sym><br />
<def>    t_r</def> <sym>:=</sym> <def>z_r</def> <sym>*</sym> <def>z_r</def><sym>;</sym><br />
<def></def>    <kwa>if</kwa> <def>t_r</def> <sym>+</sym> <def>t_i</def> <sym>&gt;=</sym> <def>limit</def> <kwa>then</kwa><br />
<def></def>    <kwa>begin</kwa><br />
<def>      bits</def> <sym>:=</sym> <def>bits</def> <kwa>xor</kwa> <def>bit</def><sym>;</sym><br />
<def>      break</def><br />
    <kwa>end</kwa><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<com>{$FPUTYPE X87}</com><def></def><br />
<br />
<kwa>begin</kwa><br />
<def></def>  <kwd>val</kwd><def></def><sym>(</sym><def></def><kwd>ParamStr</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>),</sym> <def>n</def><sym>);</sym><br />
<def></def><br />
  <kwd>writeln</kwd><def></def><sym>(</sym><def></def><str>'P4'</str><def></def><sym>);</sym><br />
<def></def>  <kwd>writeln</kwd><def></def><sym>(</sym><def>n</def><sym>,</sym><def></def><str>' '</str><def></def><sym>,</sym><def>n</def><sym>);</sym><br />
<def></def>  <kwa>for</kwa> <def>y</def> <sym>:=</sym> <def></def><num>0</num> <def></def><kwa>to</kwa> <def>n</def><sym>-</sym><def></def><num>1</num> <def></def><kwa>do</kwa><br />
<def></def>  <kwa>begin</kwa><br />
<def>    c_y</def> <sym>:=</sym> <def>y</def> <sym>*</sym> <def></def><num>2</num> <def></def><sym>/</sym> <def>n</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def>    bits</def> <sym>:=</sym> <def></def><num>255</num><def></def><sym>;</sym><br />
<def>    bit</def> <sym>:=</sym> <def></def><num>128</num><def></def><sym>;</sym><br />
<def></def>    <kwa>for</kwa> <def>x</def> <sym>:=</sym> <def></def><num>0</num> <def></def><kwa>to</kwa> <def>n</def><sym>-</sym><def></def><num>1</num> <def></def><kwa>do</kwa><br />
<def></def>    <kwa>begin</kwa><br />
<def>      c_x</def> <sym>:=</sym> <def>x</def> <sym>*</sym> <def></def><num>2</num> <def></def><sym>/</sym> <def>n</def> <sym>-</sym> <def></def><num>1.5</num><def></def><sym>;</sym><br />
<def><br />
      calc_point</def><sym>;</sym><br />
<def></def><br />
      <kwa>if</kwa> <def>bit</def> <sym>&gt;</sym> <def></def><num>1</num> <def></def><kwa>then</kwa><br />
<def>        bit</def> <sym>:=</sym> <def>bit</def> <kwa>shr</kwa> <def></def><num>1</num><br />
<def></def>      <kwa>else</kwa><br />
<def></def>      <kwa>begin</kwa><br />
<def></def>        <kwd>write</kwd><def></def><sym>(</sym><def></def><kwb>char</kwb><def></def><sym>(</sym><def>bits</def><sym>));</sym><br />
<def>        bits</def> <sym>:=</sym> <def></def><num>255</num><def></def><sym>;</sym><br />
<def>        bit</def> <sym>:=</sym> <def></def><num>128</num><def></def><sym>;</sym><br />
<def></def>      <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def>    <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def>    <kwa>if</kwa> <def>bit</def> <sym>&lt;</sym> <def></def><num>128</num> <def></def><kwa>then</kwa> <def></def><kwd>write</kwd><def></def><sym>(</sym><def></def><kwb>char</kwb><def></def><sym>(</sym><def>bits</def> <kwa>xor</kwa> <def></def><sym>((</sym><def>bit</def> <kwa>shl</kwa> <def></def><num>1</num><def></def><sym>)-</sym><def></def><num>1</num><def></def><sym>)));</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>end</kwa><def></def><sym>.</sym><def></def><br />
</source>
