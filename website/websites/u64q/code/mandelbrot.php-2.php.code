<source>
<def></def><sym>&lt;</sym><def>?php</def><br />
<com>/* The Computer Language Shootout</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com>   contributed by Thomas GODART (based on Greg Buchholz's C program) */</com><def></def><br />
<br />
<kwc>$w</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$h</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$bit_num</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def><kwc>$byte_acc</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def><kwc>$i</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$iter</kwc> <def></def><sym>=</sym> <def></def><num>50</num><def></def><sym>;</sym><br />
<def></def><kwc>$x</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$y</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$limit2</kwc> <def></def><sym>=</sym> <def></def><num>4</num><def></def><sym>;</sym><br />
<def></def><kwc>$Zr</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Zi</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Cr</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Ci</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Tr</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Ti</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def><br />
@</def><kwc>$h</kwc> <def></def><sym>= (</sym><def></def><kwc>$argc</kwc> <def></def><sym>==</sym> <def></def><num>2</num><def></def><sym>)</sym> <def>?</def> <kwc>$argv</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>] :</sym> <def></def><num>600</num><def></def><sym>;</sym><br />
<def></def><kwc>$w</kwc> <def></def><sym>=</sym> <def></def><kwc>$h</kwc><def></def><sym>;</sym><br />
<def></def><br />
<kwa>printf</kwa> <def></def><sym>(</sym><def></def><str>&quot;P4</str><esc>\n</esc><str>%d %d</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def></def><kwc>$w</kwc><def></def><sym>,</sym> <def></def><kwc>$h</kwc><def></def><sym>);</sym><br />
<def></def><br />
<kwa>for</kwa> <def></def><sym>(</sym><def></def><kwc>$y</kwc> <def></def><sym>=</sym> <def></def><num>0</num> <def></def><sym>;</sym> <def></def><kwc>$y</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$h</kwc> <def></def><sym>; ++</sym><def></def><kwc>$y</kwc><def></def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>	<kwa>for</kwa> <def></def><sym>(</sym><def></def><kwc>$x</kwc> <def></def><sym>=</sym> <def></def><num>0</num> <def></def><sym>;</sym> <def></def><kwc>$x</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$w</kwc> <def></def><sym>; ++</sym><def></def><kwc>$x</kwc><def></def><sym>)</sym><br />
<def></def>	<sym>{</sym><br />
<def></def>		<kwc>$Zr</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Zi</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Tr</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$Ti</kwc> <def></def><sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def><br />
		<kwc>$Cr</kwc> <def></def><sym>= (</sym><def></def><num>2.0</num> <def></def><sym>*</sym> <def></def><kwc>$x</kwc> <def></def><sym>/</sym> <def></def><kwc>$w</kwc> <def></def><sym>-</sym> <def></def><num>1.5</num><def></def><sym>);</sym> <def></def><kwc>$Ci</kwc> <def></def><sym>= (</sym><def></def><num>2.0</num> <def></def><sym>*</sym> <def></def><kwc>$y</kwc> <def></def><sym>/</sym> <def></def><kwc>$h</kwc> <def></def><sym>-</sym> <def></def><num>1.0</num><def></def><sym>);</sym><br />
<def></def><br />
		<kwa>for</kwa> <def></def><sym>(</sym><def></def><kwc>$i</kwc> <def></def><sym>=</sym> <def></def><num>0</num> <def></def><sym>;</sym> <def></def><kwc>$i</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$iter</kwc> <def></def><kwd>and</kwd> <def></def><sym>(</sym><def></def><kwc>$Tr</kwc> <def></def><sym>+</sym> <def></def><kwc>$Ti</kwc> <def></def><sym>&lt;=</sym> <def></def><kwc>$limit2</kwc><def></def><sym>) ; ++</sym><def></def><kwc>$i</kwc><def></def><sym>)</sym><br />
<def></def>		<sym>{</sym><br />
<def></def>			<kwc>$Zi</kwc> <def></def><sym>=</sym> <def></def><num>2.0</num> <def></def><sym>*</sym> <def></def><kwc>$Zr</kwc> <def></def><sym>*</sym> <def></def><kwc>$Zi</kwc> <def></def><sym>+</sym> <def></def><kwc>$Ci</kwc><def></def><sym>;</sym><br />
<def></def>			<kwc>$Zr</kwc> <def></def><sym>=</sym> <def></def><kwc>$Tr</kwc> <def></def><sym>-</sym> <def></def><kwc>$Ti</kwc> <def></def><sym>+</sym> <def></def><kwc>$Cr</kwc><def></def><sym>;</sym><br />
<def></def>			<kwc>$Tr</kwc> <def></def><sym>=</sym> <def></def><kwc>$Zr</kwc> <def></def><sym>*</sym> <def></def><kwc>$Zr</kwc><def></def><sym>;</sym><br />
<def></def>			<kwc>$Ti</kwc> <def></def><sym>=</sym> <def></def><kwc>$Zi</kwc> <def></def><sym>*</sym> <def></def><kwc>$Zi</kwc><def></def><sym>;</sym><br />
<def></def>		<sym>}</sym><br />
<def></def><br />
		<kwc>$byte_acc</kwc> <def></def><sym>=</sym> <def></def><kwc>$byte_acc</kwc> <def></def><sym>&lt;&lt;</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>		<kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>$Tr</kwc> <def></def><sym>+</sym> <def></def><kwc>$Ti</kwc> <def></def><sym>&lt;=</sym> <def></def><kwc>$limit2</kwc><def></def><sym>)</sym> <def></def><kwc>$byte_acc</kwc> <def></def><sym>=</sym> <def></def><kwc>$byte_acc</kwc> <def></def><sym>|</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def><br />
		<sym>++</sym><def></def><kwc>$bit_num</kwc><def></def><sym>;</sym><br />
<def></def><br />
		<kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>$bit_num</kwc> <def></def><sym>==</sym> <def></def><num>8</num><def></def><sym>)</sym><br />
<def></def>		<sym>{</sym><br />
<def></def>			<kwa>echo chr</kwa> <def></def><sym>(</sym><def></def><kwc>$byte_acc</kwc><def></def><sym>);</sym><br />
<def></def>			<kwc>$byte_acc</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>			<kwc>$bit_num</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>		<sym>}</sym><br />
<def></def>		<kwa>else if</kwa> <def></def><sym>(</sym><def></def><kwc>$x</kwc> <def></def><sym>==</sym> <def></def><kwc>$w</kwc> <def></def><sym>-</sym> <def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>		<sym>{</sym><br />
<def></def>			<kwc>$byte_acc</kwc> <def></def><sym>=</sym> <def></def><kwc>$byte_acc</kwc> <def></def><sym>&lt;&lt; (</sym><def></def><num>8</num> <def></def><sym>-</sym> <def></def><kwc>$w</kwc> <def>%</def> <num>8</num><def></def><sym>);</sym><br />
<def></def>			<kwa>echo chr</kwa> <def></def><sym>(</sym><def></def><kwc>$byte_acc</kwc><def></def><sym>);</sym><br />
<def></def>			<kwc>$byte_acc</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>			<kwc>$bit_num</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>		<sym>}</sym><br />
<def></def>	<sym>}</sym><br />
<def></def><sym>}</sym><br />
<def><br />
?</def><sym>&gt;</sym><def></def><br />
</source>
