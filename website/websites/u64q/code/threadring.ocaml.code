<source>
<def></def><com>(* The Computer Language Benchmarks Game</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com>   Contributed by Charles Martin. *)</com><def></def><br />
<br />
<kwa>let</kwa> <def>size</def> <sym>=</sym> <def></def><num>503</num><br />
<def></def><br />
<kwa>let</kwa> <def>n</def> <sym>=</sym> <def>int_of_string</def> <kwc>Sys</kwc><def></def><sym>.</sym><def>argv</def><sym>.(</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def><br />
<kwa>let</kwa> <def>run id ichan ochan</def> <sym>=</sym><br />
<def></def>  <kwa>let rec</kwa> <def>loop</def> <sym>() =</sym><br />
<def></def>    <kwa>let</kwa> <def>token</def> <sym>=</sym> <def></def><kwc>Event</kwc><def></def><sym>.</sym><def>sync</def> <sym>(</sym><def></def><kwc>Event</kwc><def></def><sym>.</sym><def>receive ichan</def><sym>)</sym> <def></def><kwa>in</kwa><br />
<def></def>    <kwa>if</kwa> <def>token</def> <sym>=</sym> <def>n</def> <kwa>then</kwa> <def></def><sym>(</sym><def>print_int id</def><sym>;</sym> <def>print_newline</def> <sym>();</sym> <def>exit</def> <num>0</num><def></def><sym>)</sym><br />
<def></def>    <kwa>else</kwa> <def></def><sym>(</sym><def></def><kwc>Event</kwc><def></def><sym>.</sym><def>sync</def> <sym>(</sym><def></def><kwc>Event</kwc><def></def><sym>.</sym><def>send ochan</def> <sym>(</sym><def>token</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>));</sym> <def>loop</def> <sym>())</sym><br />
<def></def>  <kwa>in</kwa> <def></def><kwc>Thread</kwc><def></def><sym>.</sym><def>create loop</def> <sym>()</sym><br />
<def></def><br />
<kwa>let</kwa> <def></def><sym>() =</sym><br />
<def></def>  <kwa>let</kwa> <def>channels</def> <sym>=</sym><br />
<def></def>    <kwc>Array</kwc><def></def><sym>.</sym><def>init size</def><br />
      <sym>(</sym><def></def><kwa>fun</kwa> <def>_</def> <sym>-&gt;</sym> <def></def><kwc>Event</kwc><def></def><sym>.</sym><def>new_channel</def> <sym>())</sym> <def></def><kwa>in</kwa><br />
<def></def>  <kwa>let</kwa> <def>threads</def> <sym>=</sym><br />
<def></def>    <kwc>Array</kwc><def></def><sym>.</sym><def>init size</def><br />
      <sym>(</sym><def></def><kwa>fun</kwa> <def>i</def> <sym>-&gt;</sym> <def>run</def> <sym>(</sym><def>i</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>)</sym> <def>channels</def><sym>.(</sym><def>i</def><sym>)</sym> <def>channels</def><sym>.((</sym><def>i</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>)</sym> <def></def><kwa>mod</kwa> <def>size</def><sym>))</sym> <def></def><kwa>in</kwa><br />
<def></def>  <kwc>Event</kwc><def></def><sym>.</sym><def>sync</def> <sym>(</sym><def></def><kwc>Event</kwc><def></def><sym>.</sym><def>send channels</def><sym>.(</sym><def></def><num>0</num><def></def><sym>)</sym> <def></def><num>0</num><def></def><sym>);</sym><br />
<def></def>  <kwc>Thread</kwc><def></def><sym>.</sym><def>join threads</def><sym>.(</sym><def></def><num>0</num><def></def><sym>)</sym><def></def><br />
</source>
