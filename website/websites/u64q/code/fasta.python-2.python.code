<source>
<def></def><slc># The Computer Language Benchmarks Game</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># modified by Ian Osgood</slc><br />
<def></def><slc># modified again by Heinrich Acker</slc><br />
<def></def><br />
<kwa>import</kwa> <def>sys</def><sym>,</sym> <def>bisect<br />
<br />
alu</def> <sym>= (</sym><br />
<def></def>   <str>'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</str><def></def><br />
   <str>'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</str><def></def><br />
   <str>'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</str><def></def><br />
   <str>'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</str><def></def><br />
   <str>'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</str><def></def><br />
   <str>'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</str><def></def><br />
   <str>'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</str><def></def><sym>)</sym><br />
<def><br />
iub</def> <sym>=</sym> <def></def><kwb>zip</kwb><def></def><sym>(</sym><def></def><str>'acgtBDHKMNRSVWY'</str><def></def><sym>, [</sym><def></def><num>0.27</num><def></def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>] + [</sym><def></def><num>0.02</num><def></def><sym>]*</sym><def></def><num>11</num><def></def><sym>)</sym><br />
<def><br />
homosapiens</def> <sym>= [</sym><br />
<def></def>    <sym>(</sym><def></def><str>'a'</str><def></def><sym>,</sym> <def></def><num>0.3029549426680</num><def></def><sym>),</sym><br />
<def></def>    <sym>(</sym><def></def><str>'c'</str><def></def><sym>,</sym> <def></def><num>0.1979883004921</num><def></def><sym>),</sym><br />
<def></def>    <sym>(</sym><def></def><str>'g'</str><def></def><sym>,</sym> <def></def><num>0.1975473066391</num><def></def><sym>),</sym><br />
<def></def>    <sym>(</sym><def></def><str>'t'</str><def></def><sym>,</sym> <def></def><num>0.3015094502008</num><def></def><sym>),</sym><br />
<def></def><sym>]</sym><br />
<def></def><br />
<br />
<kwa>def</kwa> <def></def><kwd>genRandom</kwd><def></def><sym>(</sym><def>lim</def><sym>,</sym> <def>ia</def> <sym>=</sym> <def></def><num>3877</num><def></def><sym>,</sym> <def>ic</def> <sym>=</sym> <def></def><num>29573</num><def></def><sym>,</sym> <def>im</def> <sym>=</sym> <def></def><num>139968</num><def></def><sym>):</sym><br />
<def>    seed</def> <sym>=</sym> <def></def><num>42</num><br />
<def>    imf</def> <sym>=</sym> <def></def><kwb>float</kwb><def></def><sym>(</sym><def>im</def><sym>)</sym><br />
<def></def>    <kwa>while</kwa> <def></def><num>1</num><def></def><sym>:</sym><br />
<def>        seed</def> <sym>= (</sym><def>seed</def> <sym>*</sym> <def>ia</def> <sym>+</sym> <def>ic</def><sym>) %</sym> <def>im</def><br />
        <kwa>yield</kwa> <def>lim</def> <sym>*</sym> <def>seed</def> <sym>/</sym> <def>imf<br />
<br />
Random</def> <sym>=</sym> <def></def><kwd>genRandom</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>.)</sym><br />
<def></def><br />
<kwa>def</kwa> <def></def><kwd>makeCumulative</kwd><def></def><sym>(</sym><def>table</def><sym>):</sym><br />
<def>    P</def> <sym>= []</sym><br />
<def>    C</def> <sym>= []</sym><br />
<def>    prob</def> <sym>=</sym> <def></def><num>0</num><def></def><sym>.</sym><br />
<def></def>    <kwa>for</kwa> <def>char</def><sym>,</sym> <def>p</def> <kwa>in</kwa> <def>table</def><sym>:</sym><br />
<def>        prob</def> <sym>+=</sym> <def>p<br />
        P</def> <sym>+= [</sym><def>prob</def><sym>]</sym><br />
<def>        C</def> <sym>+= [</sym><def>char</def><sym>]</sym><br />
<def></def>    <kwa>return</kwa> <def></def><sym>(</sym><def>P</def><sym>,</sym> <def>C</def><sym>)</sym><br />
<def></def><br />
<kwa>def</kwa> <def></def><kwd>repeatFasta</kwd><def></def><sym>(</sym><def>src</def><sym>,</sym> <def>n</def><sym>):</sym><br />
<def>    width</def> <sym>=</sym> <def></def><num>60</num><br />
<def>    r</def> <sym>=</sym> <def></def><kwb>len</kwb><def></def><sym>(</sym><def>src</def><sym>)</sym><br />
<def>    s</def> <sym>=</sym> <def>src</def> <sym>+</sym> <def>src</def> <sym>+</sym> <def>src</def><sym>[:</sym><def>n</def> <sym>%</sym> <def>r</def><sym>]</sym><br />
<def></def>    <kwa>for</kwa> <def>j</def> <kwa>in</kwa> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def>n</def> <sym>//</sym> <def>width</def><sym>):</sym><br />
<def>        i</def> <sym>=</sym> <def>j</def><sym>*</sym><def>width</def> <sym>%</sym> <def>r</def><br />
        <kwa>print</kwa> <def>s</def><sym>[</sym><def>i</def><sym>:</sym><def>i</def><sym>+</sym><def>width</def><sym>]</sym><br />
<def></def>    <kwa>if</kwa> <def>n</def> <sym>%</sym> <def>width</def><sym>:</sym><br />
<def></def>        <kwa>print</kwa> <def>s</def><sym>[-(</sym><def>n</def> <sym>%</sym> <def>width</def><sym>):]</sym><br />
<def></def><br />
<kwa>def</kwa> <def></def><kwd>randomFasta</kwd><def></def><sym>(</sym><def>table</def><sym>,</sym> <def>n</def><sym>):</sym><br />
<def>    width</def> <sym>=</sym> <def></def><num>60</num><br />
<def>    r</def> <sym>=</sym> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def>width</def><sym>)</sym><br />
<def>    gR</def> <sym>=</sym> <def>Random</def><sym>.</sym><def>next<br />
    bb</def> <sym>=</sym> <def>bisect</def><sym>.</sym><def>bisect<br />
    jn</def> <sym>=</sym> <def></def><str>''</str><def></def><sym>.</sym><def>join<br />
    probs</def><sym>,</sym> <def>chars</def> <sym>=</sym> <def></def><kwd>makeCumulative</kwd><def></def><sym>(</sym><def>table</def><sym>)</sym><br />
<def></def>    <kwa>for</kwa> <def>j</def> <kwa>in</kwa> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def>n</def> <sym>//</sym> <def>width</def><sym>):</sym><br />
<def></def>        <kwa>print</kwa> <def></def><kwd>jn</kwd><def></def><sym>([</sym><def>chars</def><sym>[</sym><def></def><kwd>bb</kwd><def></def><sym>(</sym><def>probs</def><sym>,</sym> <def></def><kwd>gR</kwd><def></def><sym>())]</sym> <def></def><kwa>for</kwa> <def>i</def> <kwa>in</kwa> <def>r</def><sym>])</sym><br />
<def></def>    <kwa>if</kwa> <def>n</def> <sym>%</sym> <def>width</def><sym>:</sym><br />
<def></def>        <kwa>print</kwa> <def></def><kwd>jn</kwd><def></def><sym>([</sym><def>chars</def><sym>[</sym><def></def><kwd>bb</kwd><def></def><sym>(</sym><def>probs</def><sym>,</sym> <def></def><kwd>gR</kwd><def></def><sym>())]</sym> <def></def><kwa>for</kwa> <def>i</def> <kwa>in</kwa> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def>n</def> <sym>%</sym> <def>width</def><sym>)])</sym><br />
<def><br />
<br />
n</def> <sym>=</sym> <def></def><kwb>int</kwb><def></def><sym>(</sym><def>sys</def><sym>.</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>])</sym><br />
<def></def><br />
<kwa>print</kwa> <def></def><str>'&gt;ONE Homo sapiens alu'</str><def></def><br />
<kwd>repeatFasta</kwd><def></def><sym>(</sym><def>alu</def><sym>,</sym> <def>n</def><sym>*</sym><def></def><num>2</num><def></def><sym>)</sym><br />
<def></def><br />
<kwa>print</kwa> <def></def><str>'&gt;TWO IUB ambiguity codes'</str><def></def><br />
<kwd>randomFasta</kwd><def></def><sym>(</sym><def>iub</def><sym>,</sym> <def>n</def><sym>*</sym><def></def><num>3</num><def></def><sym>)</sym><br />
<def></def><br />
<kwa>print</kwa> <def></def><str>'&gt;THREE Homo sapiens frequency'</str><def></def><br />
<kwd>randomFasta</kwd><def></def><sym>(</sym><def>homosapiens</def><sym>,</sym> <def>n</def><sym>*</sym><def></def><num>5</num><def></def><sym>)</sym><def></def><br />
</source>
