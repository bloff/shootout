<source>
<def></def><slc>// The Computer Language Shootout</slc><br />
<def></def><slc>// http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>// contributed by Isaac Gouy</slc><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>ack</kwd><def></def><sym>(</sym><def>m</def><sym>,</sym><def>n</def><sym>){</sym><br />
<def></def>   <kwa>if</kwa> <def></def><sym>(</sym><def>m</def><sym>==</sym><def></def><num>0</num><def></def><sym>) {</sym> <def></def><kwa>return</kwa> <def>n</def><sym>+</sym><def></def><num>1</num><def></def><sym>; }</sym><br />
<def></def>   <kwa>if</kwa> <def></def><sym>(</sym><def>n</def><sym>==</sym><def></def><num>0</num><def></def><sym>) {</sym> <def></def><kwa>return</kwa> <def></def><kwd>ack</kwd><def></def><sym>(</sym><def>m</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>); }</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwd>ack</kwd><def></def><sym>(</sym><def>m</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym> <def></def><kwd>ack</kwd><def></def><sym>(</sym><def>m</def><sym>,</sym><def>n</def><sym>-</sym><def></def><num>1</num><def></def><sym>) );</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>fib</kwd><def></def><sym>(</sym><def>n</def><sym>) {</sym><br />
<def></def>    <kwa>if</kwa> <def></def><sym>(</sym><def>n</def> <sym>&lt;</sym> <def></def><num>2</num><def></def><sym>){</sym> <def></def><kwa>return</kwa> <def></def><num>1</num><def></def><sym>; }</sym><br />
<def></def>    <kwa>return</kwa> <def></def><kwd>fib</kwd><def></def><sym>(</sym><def>n</def><sym>-</sym><def></def><num>2</num><def></def><sym>) +</sym> <def></def><kwd>fib</kwd><def></def><sym>(</sym><def>n</def><sym>-</sym><def></def><num>1</num><def></def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>tak</kwd><def></def><sym>(</sym><def>x</def><sym>,</sym><def>y</def><sym>,</sym><def>z</def><sym>) {</sym><br />
<def></def>  <kwa>if</kwa> <def></def><sym>(</sym><def>y</def> <sym>&gt;=</sym> <def>x</def><sym>)</sym> <def></def><kwa>return</kwa> <def>z</def><sym>;</sym><br />
<def></def>  <kwa>return</kwa> <def></def><kwd>tak</kwd><def></def><sym>(</sym><def></def><kwd>tak</kwd><def></def><sym>(</sym><def>x</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym><def>y</def><sym>,</sym><def>z</def><sym>),</sym> <def></def><kwd>tak</kwd><def></def><sym>(</sym><def>y</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym><def>z</def><sym>,</sym><def>x</def><sym>),</sym> <def></def><kwd>tak</kwd><def></def><sym>(</sym><def>z</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym><def>x</def><sym>,</sym><def>y</def><sym>));</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>var</kwa> <def>n</def> <sym>=</sym> <def></def><kwd>parseInt</kwd><def></def><sym>(</sym><def>arguments</def><sym>[</sym><def></def><num>0</num><def></def><sym>]);</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def></def><str>&quot;Ack(3,&quot;</str><def></def> <sym>+</sym> <def>n</def> <sym>+</sym> <def></def><str>&quot;): &quot;</str><def></def> <sym>+</sym> <def></def><kwd>ack</kwd><def></def><sym>(</sym><def></def><num>3</num><def></def><sym>,</sym><def>n</def><sym>));</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def></def><str>&quot;Fib(&quot;</str><def></def> <sym>+ (</sym><def></def><num>27.0</num><def></def><sym>+</sym><def>n</def><sym>).</sym><def></def><kwd>toFixed</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>) +</sym> <def></def><str>&quot;): &quot;</str><def></def> <sym>+</sym> <def></def><kwd>fib</kwd><def></def><sym>(</sym><def></def><num>27.0</num><def></def><sym>+</sym><def>n</def><sym>).</sym><def></def><kwd>toFixed</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>));</sym><br />
<def>n</def><sym>--;</sym> <def></def><kwc>print</kwc><def></def><sym>(</sym><def></def><str>&quot;Tak(&quot;</str><def></def> <sym>+</sym> <def></def><num>3</num><def></def><sym>*</sym><def>n</def> <sym>+</sym> <def></def><str>&quot;,&quot;</str><def></def> <sym>+</sym> <def></def><num>2</num><def></def><sym>*</sym><def>n</def> <sym>+</sym> <def></def><str>&quot;,&quot;</str><def></def> <sym>+</sym> <def>n</def> <sym>+</sym> <def></def><str>&quot;): &quot;</str><def></def> <sym>+</sym> <def></def><kwd>tak</kwd><def></def><sym>(</sym><def></def><num>3</num><def></def><sym>*</sym><def>n</def><sym>,</sym><def></def><num>2</num><def></def><sym>*</sym><def>n</def><sym>,</sym><def>n</def><sym>));</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def></def><str>&quot;Fib(3): &quot;</str><def></def> <sym>+</sym> <def></def><kwd>fib</kwd><def></def><sym>(</sym><def></def><num>3</num><def></def><sym>));</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def></def><str>&quot;Tak(3.0,2.0,1.0): &quot;</str><def></def> <sym>+</sym> <def></def><kwd>tak</kwd><def></def><sym>(</sym><def></def><num>3.0</num><def></def><sym>,</sym><def></def><num>2.0</num><def></def><sym>,</sym><def></def><num>1.0</num><def></def><sym>).</sym><def></def><kwd>toFixed</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>));</sym><def></def><br />
</source>
