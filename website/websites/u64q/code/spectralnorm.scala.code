<source>
<def></def><com>/* The Computer Language Benchmarks Game</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com>   contributed by Isaac Gouy</com><br />
<com>   modified by Meiko Rachimow</com><br />
<com>*/</com><def></def><br />
<br />
<kwa>object</kwa> <def>spectralnorm</def> <sym>{</sym><br />
<def></def><br />
   <kwa>def</kwa> <def>main</def><sym>(</sym><def>args</def><sym>:</sym> <def></def><kwc>Array</kwc><def></def><sym>[</sym><def></def><kwc>String</kwc><def></def><sym>]) = {</sym><br />
<def></def>      <kwa>val</kwa> <def>n</def> <sym>= {</sym><def></def><kwa>if</kwa> <def></def><sym>(</sym><def>args</def><sym>.</sym><def>length</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>)</sym> <def></def><kwc>Integer</kwc><def></def><sym>.</sym><def>parseInt</def><sym>(</sym><def>args</def><sym>(</sym><def></def><num>0</num><def></def><sym>))</sym> <def></def><kwa>else</kwa> <def></def><num>100</num><def></def><sym>}</sym><br />
<def></def>      <kwa>val</kwa> <def>formatter</def> <sym>=</sym> <def></def><kwa>new</kwa> <def>java</def><sym>.</sym><def>text</def><sym>.</sym><def></def><kwc>DecimalFormat</kwc><def></def><sym>(</sym><def></def><str>&quot;#.000000000&quot;</str><def></def><sym>);</sym><br />
<def>      println</def><sym>(</sym><def>formatter</def><sym>.</sym><def>format</def><sym>(</sym><def></def><kwa>new</kwa> <def>SpectralNorm</def><sym>()</sym> <def>approximate</def><sym>(</sym><def>n</def><sym>)))</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>class</kwa> <def>SpectralNorm</def><sym>(){</sym><br />
<def></def><br />
   <kwa>type</kwa> <def></def><kwc>Vector</kwc> <def></def><sym>=</sym> <def></def><kwc>Array</kwc><def></def><sym>[</sym><def></def><kwb>double</kwb><def></def><sym>]</sym><br />
<def></def><br />
   <kwa>def</kwa> <def>approximate</def><sym>(</sym><def>n</def><sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>)= {</sym><br />
<def></def>      <kwa>val</kwa> <def>u</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwc>Vector</kwc><def></def><sym>(</sym><def>n</def><sym>)</sym><br />
<def></def>      <kwa>var</kwa> <def>i</def> <sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>      <kwa>while</kwa> <def></def><sym>(</sym><def>i</def> <sym>&lt;</sym> <def>n</def><sym>){</sym> <def>u</def><sym>(</sym><def>i</def><sym>) =</sym> <def></def><num>1.0</num><def></def><sym>;</sym> <def>i</def> <sym>=</sym> <def>i</def><sym>+</sym><def></def><num>1</num> <def></def><sym>}</sym><br />
<def></def><br />
      <kwa>val</kwa> <def>v</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwc>Vector</kwc><def></def><sym>(</sym><def>n</def><sym>)</sym><br />
<def><br />
      i</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwa>while</kwa> <def></def><sym>(</sym><def>i</def> <sym>&lt;</sym> <def></def><num>10</num><def></def><sym>){</sym><br />
<def>         multiplyAtAv</def><sym>(</sym><def>n</def><sym>,</sym><def>u</def><sym>,</sym><def>v</def><sym>)</sym><br />
<def>         multiplyAtAv</def><sym>(</sym><def>n</def><sym>,</sym><def>v</def><sym>,</sym><def>u</def><sym>)</sym><br />
<def>         i</def> <sym>=</sym> <def>i</def><sym>+</sym><def></def><num>1</num><br />
<def></def>      <sym>}</sym><br />
<def></def><br />
      <kwa>var</kwa> <def>vbv</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym> <def></def><kwa>var</kwa> <def>vv</def> <sym>=</sym> <def></def><num>0.0</num><br />
<def>      i</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwa>while</kwa> <def></def><sym>(</sym><def>i</def> <sym>&lt;</sym> <def>n</def><sym>){</sym><br />
<def>         vbv</def> <sym>=</sym> <def>vbv</def> <sym>+</sym> <def>u</def><sym>(</sym><def>i</def><sym>)*</sym><def>v</def><sym>(</sym><def>i</def><sym>)</sym><br />
<def>         vv</def> <sym>=</sym> <def>vv</def> <sym>+</sym> <def>v</def><sym>(</sym><def>i</def><sym>)*</sym><def>v</def><sym>(</sym><def>i</def><sym>)</sym><br />
<def>         i</def> <sym>=</sym> <def>i</def><sym>+</sym><def></def><num>1</num><br />
<def></def>      <sym>}</sym><br />
<def></def><br />
      <kwc>Math</kwc> <def>sqrt</def><sym>(</sym><def>vbv</def><sym>/</sym><def>vv</def><sym>)</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
<br />
   <kwa>def</kwa> <def>a</def><sym>(</sym><def>i</def><sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>j</def><sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) =</sym> <def></def><num>1.0</num><def></def><sym>/((</sym><def>i</def><sym>+</sym><def>j</def><sym>)*(</sym><def>i</def><sym>+</sym><def>j</def><sym>+</sym><def></def><num>1</num><def></def><sym>)/</sym><def></def><num>2</num> <def></def><sym>+</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def><br />
   <kwa>def</kwa> <def>multiplyAv</def><sym>(</sym><def>n</def><sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>v</def><sym>:</sym> <def></def><kwc>Vector</kwc><def></def><sym>,</sym> <def>av</def><sym>:</sym> <def></def><kwc>Vector</kwc><def></def><sym>) = {</sym><br />
<def></def>      <kwa>var</kwa> <def>i</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwa>while</kwa> <def></def><sym>(</sym><def>i</def> <sym>&lt;</sym> <def>n</def><sym>){</sym><br />
<def>         av</def><sym>(</sym><def>i</def><sym>) =</sym> <def></def><num>0.0</num><br />
<def></def>         <kwa>var</kwa> <def>j</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>         <kwa>while</kwa> <def></def><sym>(</sym><def>j</def> <sym>&lt;</sym> <def>n</def><sym>){</sym> <def>av</def><sym>(</sym><def>i</def><sym>) =</sym> <def>av</def><sym>(</sym><def>i</def><sym>) +</sym> <def>a</def><sym>(</sym><def>i</def><sym>,</sym><def>j</def><sym>) *</sym> <def>v</def><sym>(</sym><def>j</def><sym>);</sym> <def>j</def> <sym>=</sym> <def>j</def><sym>+</sym><def></def><num>1</num> <def></def><sym>}</sym><br />
<def>         i</def> <sym>=</sym> <def>i</def><sym>+</sym><def></def><num>1</num><br />
<def></def>      <sym>}</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <kwa>def</kwa> <def>multiplyAtv</def><sym>(</sym><def>n</def><sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>v</def><sym>:</sym> <def></def><kwc>Vector</kwc><def></def><sym>,</sym> <def>atv</def><sym>:</sym> <def></def><kwc>Vector</kwc><def></def><sym>) = {</sym><br />
<def></def>      <kwa>var</kwa> <def>i</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwa>while</kwa> <def></def><sym>(</sym><def>i</def> <sym>&lt;</sym> <def>n</def><sym>){</sym><br />
<def>         atv</def><sym>(</sym><def>i</def><sym>) =</sym> <def></def><num>0.0</num><br />
<def></def>         <kwa>var</kwa> <def>j</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>         <kwa>while</kwa> <def></def><sym>(</sym><def>j</def> <sym>&lt;</sym> <def>n</def><sym>){</sym> <def>atv</def><sym>(</sym><def>i</def><sym>) =</sym> <def>atv</def><sym>(</sym><def>i</def><sym>) +</sym> <def>a</def><sym>(</sym><def>j</def><sym>,</sym><def>i</def><sym>) *</sym> <def>v</def><sym>(</sym><def>j</def><sym>);</sym> <def>j</def> <sym>=</sym> <def>j</def><sym>+</sym><def></def><num>1</num> <def></def><sym>}</sym><br />
<def>         i</def> <sym>=</sym> <def>i</def><sym>+</sym><def></def><num>1</num><br />
<def></def>      <sym>}</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <kwa>def</kwa> <def>multiplyAtAv</def><sym>(</sym><def>n</def><sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>v</def><sym>:</sym> <def></def><kwc>Vector</kwc><def></def><sym>,</sym> <def>atav</def><sym>:</sym> <def></def><kwc>Vector</kwc><def></def><sym>) = {</sym><br />
<def></def>      <kwa>val</kwa> <def>u</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwc>Vector</kwc><def></def><sym>(</sym><def>n</def><sym>)</sym><br />
<def>      multiplyAv</def><sym>(</sym><def>n</def><sym>,</sym><def>v</def><sym>,</sym><def>u</def><sym>)</sym><br />
<def>      multiplyAtv</def><sym>(</sym><def>n</def><sym>,</sym><def>u</def><sym>,</sym><def>atav</def><sym>)</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
<sym>}</sym><def></def><br />
</source>
