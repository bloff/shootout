<source>
<def></def><slc># The Computer Language Shootout</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># submitted by Ian Osgood</slc><br />
<def></def><slc># modified by Sokolov Yura</slc><br />
<def></def><slc># modified by bearophile</slc><br />
<def></def><br />
<kwa>from</kwa> <def>sys</def> <kwa>import</kwa> <def>stdin</def><br />
<br />
<kwa>def</kwa> <def></def><kwd>gen_freq</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def>frame</def><sym>,</sym> <def>frequences</def><sym>):</sym><br />
<def>    ns</def> <sym>=</sym> <def></def><kwb>len</kwb><def></def><sym>(</sym><def>seq</def><sym>) +</sym> <def></def><num>1</num> <def></def><sym>-</sym> <def>frame<br />
    frequences</def><sym>.</sym><def></def><kwd>clear</kwd><def></def><sym>()</sym><br />
<def></def>    <kwa>for</kwa> <def>ii</def> <kwa>in</kwa> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def>ns</def><sym>):</sym><br />
<def>        nucleo</def> <sym>=</sym> <def>seq</def><sym>[</sym><def>ii</def><sym>:</sym><def>ii</def> <sym>+</sym> <def>frame</def><sym>]</sym><br />
<def></def>        <kwa>if</kwa> <def>nucleo</def> <kwa>in</kwa> <def>frequences</def><sym>:</sym><br />
<def>            frequences</def><sym>[</sym><def>nucleo</def><sym>] +=</sym> <def></def><num>1</num><br />
<def></def>        <kwa>else</kwa><def></def><sym>:</sym><br />
<def>            frequences</def><sym>[</sym><def>nucleo</def><sym>] =</sym> <def></def><num>1</num><br />
<def></def>    <kwa>return</kwa> <def>ns</def><sym>,</sym> <def>frequences</def><br />
<br />
<br />
<kwa>def</kwa> <def></def><kwd>sort_seq</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def>length</def><sym>,</sym> <def>frequences</def><sym>):</sym><br />
<def>    n</def><sym>,</sym> <def>frequences</def> <sym>=</sym> <def></def><kwd>gen_freq</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def>length</def><sym>,</sym> <def>frequences</def><sym>)</sym><br />
<def><br />
    l</def> <sym>=</sym> <def></def><kwb>sorted</kwb><def></def><sym>(</sym><def>frequences</def><sym>.</sym><def></def><kwd>items</kwd><def></def><sym>(),</sym> <def>reverse</def><sym>=</sym><def></def><kwa>True</kwa><def></def><sym>,</sym> <def>key</def><sym>=</sym><def></def><kwa>lambda</kwa> <def></def><sym>(</sym><def>seq</def><sym>,</sym><def>freq</def><sym>): (</sym><def>freq</def><sym>,</sym><def>seq</def><sym>))</sym><br />
<def></def><br />
    <kwa>print</kwa> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>.</sym><def></def><kwd>join</kwd><def></def><sym>(</sym><def></def><str>&quot;%s %.3f&quot;</str><def></def> <sym>% (</sym><def>st</def><sym>,</sym> <def></def><num>100.0</num><def></def><sym>*</sym><def>fr</def><sym>/</sym><def>n</def><sym>)</sym> <def></def><kwa>for</kwa> <def>st</def><sym>,</sym><def>fr</def> <kwa>in</kwa> <def>l</def><sym>)</sym><br />
<def></def>    <kwa>print</kwa><br />
<def></def><br />
<br />
<kwa>def</kwa> <def></def><kwd>find_seq</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def>s</def><sym>,</sym> <def>frequences</def><sym>):</sym><br />
<def>    n</def><sym>,</sym><def>t</def> <sym>=</sym> <def></def><kwd>gen_freq</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def></def><kwb>len</kwb><def></def><sym>(</sym><def>s</def><sym>),</sym> <def>frequences</def><sym>)</sym><br />
<def></def>    <kwa>print</kwa> <def></def><str>&quot;%d</str><esc>\t</esc><str>%s&quot;</str><def></def> <sym>% (</sym><def>t</def><sym>.</sym><def></def><kwd>get</kwd><def></def><sym>(</sym><def>s</def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym> <def>s</def><sym>)</sym><br />
<def></def><br />
<br />
<kwa>def</kwa> <def></def><kwd>main</kwd><def></def><sym>():</sym><br />
<def>    frequences</def> <sym>= {}</sym><br />
<def></def>    <kwa>for</kwa> <def>line</def> <kwa>in</kwa> <def>stdin</def><sym>:</sym><br />
<def></def>        <kwa>if</kwa> <def>line</def><sym>[</sym><def></def><num>0</num><def></def><sym>:</sym><def></def><num>3</num><def></def><sym>] ==</sym> <def></def><str>&quot;&gt;TH&quot;</str><def></def><sym>:</sym><br />
<def></def>            <kwa>break</kwa><br />
<def><br />
    seq</def> <sym>= []</sym><br />
<def></def>    <kwa>for</kwa> <def>line</def> <kwa>in</kwa> <def>stdin</def><sym>:</sym><br />
<def></def>        <kwa>if</kwa> <def>line</def><sym>[</sym><def></def><num>0</num><def></def><sym>]</sym> <def></def><kwa>in</kwa> <def></def><str>&quot;&gt;;&quot;</str><def></def><sym>:</sym><br />
<def></def>            <kwa>break</kwa><br />
<def>        seq</def><sym>.</sym><def></def><kwd>append</kwd><def></def><sym>(</sym> <def>line</def><sym>[:-</sym><def></def><num>1</num><def></def><sym>] )</sym><br />
<def>    sequence</def> <sym>=</sym> <def></def><str>&quot;&quot;</str><def></def><sym>.</sym><def></def><kwd>join</kwd><def></def><sym>(</sym><def>seq</def><sym>).</sym><def></def><kwd>upper</kwd><def></def><sym>()</sym><br />
<def></def><br />
    <kwa>for</kwa> <def>nl</def> <kwa>in</kwa> <def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>:</sym><br />
<def></def>        <kwd>sort_seq</kwd><def></def><sym>(</sym><def>sequence</def><sym>,</sym> <def>nl</def><sym>,</sym> <def>frequences</def><sym>)</sym><br />
<def></def><br />
    <kwa>for</kwa> <def>se</def> <kwa>in</kwa> <def></def><str>&quot;GGT GGTA GGTATT GGTATTTTAATT GGTATTTTAATTTATAGT&quot;</str><def></def><sym>.</sym><def></def><kwd>split</kwd><def></def><sym>():</sym><br />
<def></def>        <kwd>find_seq</kwd><def></def><sym>(</sym><def>sequence</def><sym>,</sym> <def>se</def><sym>,</sym> <def>frequences</def><sym>)</sym><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>()</sym><def></def><br />
</source>
