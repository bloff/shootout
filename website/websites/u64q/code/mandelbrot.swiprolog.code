<span class="hl slc">% ----------------------------------------------------------------------</span>
<span class="hl slc">% The Great Computer Language Shootout</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%</span>
<span class="hl slc">% Assumes execution using the following command-line usage:</span>
<span class="hl slc">%</span>
<span class="hl slc">%   pl -q -g main -t halt -s SOURCENAME -- USERARG1 ... &lt; in &gt; out</span>
<span class="hl slc">%</span>
<span class="hl slc">% Contributed by Anthony Borla</span>
<span class="hl slc">% ----------------------------------------------------------------------</span>

main <span class="hl sym">:-</span>
  set_stream<span class="hl sym">(</span><span class="hl kwb">current_output</span><span class="hl sym">,</span> buffer<span class="hl sym">(</span>full<span class="hl sym">)),</span>

  cmdlNumArg<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> Height<span class="hl sym">),</span> Width <span class="hl sym">=</span> Height<span class="hl sym">,</span>
  setvar<span class="hl sym">(</span>byteout<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span> setvar<span class="hl sym">(</span>bitnumber<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span> setvar<span class="hl sym">(</span>outflag<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span>

  format<span class="hl sym">(</span><span class="hl str">'P4~N~d ~d~N'</span><span class="hl sym">,[</span>Height<span class="hl sym">,</span> Width<span class="hl sym">]),</span>
  pointsY<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span>

  dropvar<span class="hl sym">(</span>byteout<span class="hl sym">),</span> dropvar<span class="hl sym">(</span>bitnumber<span class="hl sym">),</span> dropvar<span class="hl sym">(</span>outflag<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

pointsY<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">) :-</span>
  Y1 <span class="hl kwa">is</span> Y <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Height <span class="hl sym">&gt;=</span> Y1<span class="hl sym">, !,</span> pointsX<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span>
  pointsY<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y1<span class="hl sym">,</span> X<span class="hl sym">).</span>

pointsY<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

<span class="hl slc">% ------------- %</span>

pointsX<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">) :-</span>
  X1 <span class="hl kwa">is</span> X <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Width <span class="hl sym">&gt;=</span> X1<span class="hl sym">, !,</span>

  <span class="hl sym">(</span>mandel<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">,</span> <span class="hl num">50</span><span class="hl sym">) -&gt;</span> LimitAdj <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl sym">;</span> LimitAdj <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">),</span>

  getvar<span class="hl sym">(</span>bitnumber<span class="hl sym">,</span> BITN<span class="hl sym">),</span> BITN1 <span class="hl kwa">is</span> BITN <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> setvar<span class="hl sym">(</span>bitnumber<span class="hl sym">,</span> BITN1<span class="hl sym">),</span>
  <span class="hl sym">(</span>BITN1 <span class="hl sym">==</span> <span class="hl num">8</span> <span class="hl sym">-&gt;</span> setvar<span class="hl sym">(</span>outflag<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">) ;</span> <span class="hl kwa">true</span><span class="hl sym">),</span>

  getvar<span class="hl sym">(</span>byteout<span class="hl sym">,</span> BYTEOUT<span class="hl sym">),</span> BYTEOUT1 <span class="hl kwa">is</span> BYTEOUT <span class="hl sym">*</span> <span class="hl num">2</span> <span class="hl sym">+</span> LimitAdj<span class="hl sym">,</span> setvar<span class="hl sym">(</span>byteout<span class="hl sym">,</span> BYTEOUT1<span class="hl sym">),</span>
  <span class="hl sym">((</span>Width <span class="hl sym">==</span> X1<span class="hl sym">,</span> BITN1 \<span class="hl sym">==</span> <span class="hl num">8</span><span class="hl sym">) -&gt; (</span>getvar<span class="hl sym">(</span>byteout<span class="hl sym">,</span> BYTEOUT2<span class="hl sym">),</span> BYTEOUT3 <span class="hl kwa">is</span> BYTEOUT2 <span class="hl sym">*</span> <span class="hl num">2</span> <span class="hl sym">** (</span><span class="hl num">8</span> <span class="hl sym">-</span> Width <span class="hl kwa">mod</span> <span class="hl num">8</span><span class="hl sym">),</span> setvar<span class="hl sym">(</span>byteout<span class="hl sym">,</span> BYTEOUT3<span class="hl sym">),</span> setvar<span class="hl sym">(</span>outflag<span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">)) ;</span> <span class="hl kwa">true</span><span class="hl sym">),</span>

  output<span class="hl sym">,</span>

  pointsX<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X1<span class="hl sym">).</span>

pointsX<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

<span class="hl slc">% ------------- %</span>

mandel<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">,</span> Repetitions<span class="hl sym">) :-</span>
  Cr <span class="hl kwa">is</span> <span class="hl sym">(</span><span class="hl num">2.0</span> <span class="hl sym">*</span> X <span class="hl sym">/</span> Width <span class="hl sym">-</span> <span class="hl num">1.5</span><span class="hl sym">),</span> Ci <span class="hl kwa">is</span> <span class="hl sym">(</span><span class="hl num">2.0</span> <span class="hl sym">*</span> Y <span class="hl sym">/</span> Height <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">),</span>
  mandel_<span class="hl sym">(</span>Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">).</span>

mandel_<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> Repetitions<span class="hl sym">) :- !,</span> Limit <span class="hl kwa">is</span> Zr <span class="hl sym">*</span> Zr <span class="hl sym">+</span> Zi <span class="hl sym">*</span> Zi<span class="hl sym">,</span> Limit <span class="hl sym">&gt;</span> <span class="hl num">4.0</span><span class="hl sym">.</span>

mandel_<span class="hl sym">(</span>Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> N<span class="hl sym">) :-</span>
  Zr1 <span class="hl kwa">is</span> Zr <span class="hl sym">*</span> Zr <span class="hl sym">-</span> Zi <span class="hl sym">*</span> Zi <span class="hl sym">+</span> Cr<span class="hl sym">,</span> Zi1 <span class="hl kwa">is</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> Zr <span class="hl sym">*</span> Zi <span class="hl sym">+</span> Ci<span class="hl sym">,</span> Limit <span class="hl kwa">is</span> Zr1 <span class="hl sym">*</span> Zr1 <span class="hl sym">+</span> Zi1 <span class="hl sym">*</span> Zi1<span class="hl sym">,</span>
  Limit <span class="hl sym">=&lt;</span> <span class="hl num">4.0</span><span class="hl sym">,</span> N1 <span class="hl kwa">is</span> N <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">, !,</span> mandel_<span class="hl sym">(</span>Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Zr1<span class="hl sym">,</span> Zi1<span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> N1<span class="hl sym">).</span>

mandel_<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

<span class="hl slc">% ------------- %</span>

output <span class="hl sym">:-</span>
  getvar<span class="hl sym">(</span>outflag<span class="hl sym">,</span> OUTFLAG<span class="hl sym">),</span> getvar<span class="hl sym">(</span>byteout<span class="hl sym">,</span> BYTEOUT<span class="hl sym">),</span>
  <span class="hl sym">(</span>OUTFLAG <span class="hl sym">==</span> <span class="hl num">1</span> <span class="hl sym">-&gt; (</span><span class="hl kwb">put_byte</span><span class="hl sym">(</span>BYTEOUT<span class="hl sym">),</span> setvar<span class="hl sym">(</span>bitnumber<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span> setvar<span class="hl sym">(</span>byteout<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">),</span> setvar<span class="hl sym">(</span>outflag<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">)) ;</span> <span class="hl kwa">true</span><span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

getvar<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">) :-</span> nb_getval<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">).</span>
setvar<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">) :-</span> nb_setval<span class="hl sym">(</span>Id<span class="hl sym">,</span> Value<span class="hl sym">).</span>
dropvar<span class="hl sym">(</span>Id<span class="hl sym">) :-</span> nb_delete<span class="hl sym">(</span>Id<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

argument_value<span class="hl sym">(</span>N<span class="hl sym">,</span> Arg<span class="hl sym">) :-</span>
  <span class="hl kwb">current_prolog_flag</span><span class="hl sym">(</span>argv<span class="hl sym">,</span> Cmdline<span class="hl sym">),</span> append<span class="hl sym">(</span>_<span class="hl sym">, [--|</span>UserArgs<span class="hl sym">],</span> Cmdline<span class="hl sym">),</span>
  Nth <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span> nth0<span class="hl sym">(</span>Nth<span class="hl sym">,</span> UserArgs<span class="hl sym">,</span> Arg<span class="hl sym">).</span>

cmdlNumArg<span class="hl sym">(</span>Nth<span class="hl sym">,</span> N<span class="hl sym">) :-</span>
  argument_value<span class="hl sym">(</span>Nth<span class="hl sym">,</span> Arg<span class="hl sym">),</span> <span class="hl kwb">catch</span><span class="hl sym">(</span>atom_number<span class="hl sym">(</span>Arg<span class="hl sym">,</span> N<span class="hl sym">),</span> _<span class="hl sym">,</span> <span class="hl kwa">fail</span><span class="hl sym">) ;</span> <span class="hl kwa">halt</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">).</span>

