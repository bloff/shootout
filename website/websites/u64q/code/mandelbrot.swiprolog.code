<source>
<def></def><slc>% ----------------------------------------------------------------------</slc><br />
<def></def><slc>% The Great Computer Language Shootout</slc><br />
<def></def><slc>% http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>%</slc><br />
<def></def><slc>% Assumes execution using the following command-line usage:</slc><br />
<def></def><slc>%</slc><br />
<def></def><slc>%   pl -q -g main -t halt -s SOURCENAME -- USERARG1 ... &lt; in &gt; out</slc><br />
<def></def><slc>%</slc><br />
<def></def><slc>% Contributed by Anthony Borla</slc><br />
<def></def><slc>% ----------------------------------------------------------------------</slc><br />
<def><br />
main</def> <sym>:-</sym><br />
<def>  set_stream</def><sym>(</sym><def></def><kwb>current_output</kwb><def></def><sym>,</sym> <def>buffer</def><sym>(</sym><def>full</def><sym>)),</sym><br />
<def><br />
  cmdlNumArg</def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym> <def>Height</def><sym>),</sym> <def>Width</def> <sym>=</sym> <def>Height</def><sym>,</sym><br />
<def>  setvar</def><sym>(</sym><def>byteout</def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym> <def>setvar</def><sym>(</sym><def>bitnumber</def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym> <def>setvar</def><sym>(</sym><def>outflag</def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym><br />
<def><br />
  format</def><sym>(</sym><def></def><str>'P4~N~d ~d~N'</str><def></def><sym>,[</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>]),</sym><br />
<def>  pointsY</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym><br />
<def><br />
  dropvar</def><sym>(</sym><def>byteout</def><sym>),</sym> <def>dropvar</def><sym>(</sym><def>bitnumber</def><sym>),</sym> <def>dropvar</def><sym>(</sym><def>outflag</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
pointsY</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>X</def><sym>) :-</sym><br />
<def>  Y1</def> <kwa>is</kwa> <def>Y</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>Height</def> <sym>&gt;=</sym> <def>Y1</def><sym>, !,</sym> <def>pointsX</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def>Y</def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym><br />
<def>  pointsY</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def>Y1</def><sym>,</sym> <def>X</def><sym>).</sym><br />
<def><br />
pointsY</def><sym>(</sym><def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
pointsX</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>X</def><sym>) :-</sym><br />
<def>  X1</def> <kwa>is</kwa> <def>X</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>Width</def> <sym>&gt;=</sym> <def>X1</def><sym>, !,</sym><br />
<def></def><br />
  <sym>(</sym><def>mandel</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>X</def><sym>,</sym> <def></def><num>50</num><def></def><sym>) -&gt;</sym> <def>LimitAdj</def> <sym>=</sym> <def></def><num>0</num> <def></def><sym>;</sym> <def>LimitAdj</def> <sym>=</sym> <def></def><num>1</num><def></def><sym>),</sym><br />
<def><br />
  getvar</def><sym>(</sym><def>bitnumber</def><sym>,</sym> <def>BITN</def><sym>),</sym> <def>BITN1</def> <kwa>is</kwa> <def>BITN</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>setvar</def><sym>(</sym><def>bitnumber</def><sym>,</sym> <def>BITN1</def><sym>),</sym><br />
<def></def>  <sym>(</sym><def>BITN1</def> <sym>==</sym> <def></def><num>8</num> <def></def><sym>-&gt;</sym> <def>setvar</def><sym>(</sym><def>outflag</def><sym>,</sym> <def></def><num>1</num><def></def><sym>) ;</sym> <def></def><kwa>true</kwa><def></def><sym>),</sym><br />
<def><br />
  getvar</def><sym>(</sym><def>byteout</def><sym>,</sym> <def>BYTEOUT</def><sym>),</sym> <def>BYTEOUT1</def> <kwa>is</kwa> <def>BYTEOUT</def> <sym>*</sym> <def></def><num>2</num> <def></def><sym>+</sym> <def>LimitAdj</def><sym>,</sym> <def>setvar</def><sym>(</sym><def>byteout</def><sym>,</sym> <def>BYTEOUT1</def><sym>),</sym><br />
<def></def>  <sym>((</sym><def>Width</def> <sym>==</sym> <def>X1</def><sym>,</sym> <def>BITN1 \</def><sym>==</sym> <def></def><num>8</num><def></def><sym>) -&gt; (</sym><def>getvar</def><sym>(</sym><def>byteout</def><sym>,</sym> <def>BYTEOUT2</def><sym>),</sym> <def>BYTEOUT3</def> <kwa>is</kwa> <def>BYTEOUT2</def> <sym>*</sym> <def></def><num>2</num> <def></def><sym>** (</sym><def></def><num>8</num> <def></def><sym>-</sym> <def>Width</def> <kwa>mod</kwa> <def></def><num>8</num><def></def><sym>),</sym> <def>setvar</def><sym>(</sym><def>byteout</def><sym>,</sym> <def>BYTEOUT3</def><sym>),</sym> <def>setvar</def><sym>(</sym><def>outflag</def><sym>,</sym> <def></def><num>1</num><def></def><sym>)) ;</sym> <def></def><kwa>true</kwa><def></def><sym>),</sym><br />
<def><br />
  output</def><sym>,</sym><br />
<def><br />
  pointsX</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>X1</def><sym>).</sym><br />
<def><br />
pointsX</def><sym>(</sym><def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
mandel</def><sym>(</sym><def>Height</def><sym>,</sym> <def>Width</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>X</def><sym>,</sym> <def>Repetitions</def><sym>) :-</sym><br />
<def>  Cr</def> <kwa>is</kwa> <def></def><sym>(</sym><def></def><num>2.0</num> <def></def><sym>*</sym> <def>X</def> <sym>/</sym> <def>Width</def> <sym>-</sym> <def></def><num>1.5</num><def></def><sym>),</sym> <def>Ci</def> <kwa>is</kwa> <def></def><sym>(</sym><def></def><num>2.0</num> <def></def><sym>*</sym> <def>Y</def> <sym>/</sym> <def>Height</def> <sym>-</sym> <def></def><num>1.0</num><def></def><sym>),</sym><br />
<def>  mandel_</def><sym>(</sym><def>Cr</def><sym>,</sym> <def>Ci</def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>Repetitions</def><sym>,</sym> <def></def><num>0</num><def></def><sym>).</sym><br />
<def><br />
mandel_</def><sym>(</sym><def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>Zr</def><sym>,</sym> <def>Zi</def><sym>,</sym> <def>Repetitions</def><sym>,</sym> <def>Repetitions</def><sym>) :- !,</sym> <def>Limit</def> <kwa>is</kwa> <def>Zr</def> <sym>*</sym> <def>Zr</def> <sym>+</sym> <def>Zi</def> <sym>*</sym> <def>Zi</def><sym>,</sym> <def>Limit</def> <sym>&gt;</sym> <def></def><num>4.0</num><def></def><sym>.</sym><br />
<def><br />
mandel_</def><sym>(</sym><def>Cr</def><sym>,</sym> <def>Ci</def><sym>,</sym> <def>Zr</def><sym>,</sym> <def>Zi</def><sym>,</sym> <def>Repetitions</def><sym>,</sym> <def>N</def><sym>) :-</sym><br />
<def>  Zr1</def> <kwa>is</kwa> <def>Zr</def> <sym>*</sym> <def>Zr</def> <sym>-</sym> <def>Zi</def> <sym>*</sym> <def>Zi</def> <sym>+</sym> <def>Cr</def><sym>,</sym> <def>Zi1</def> <kwa>is</kwa> <def></def><num>2.0</num> <def></def><sym>*</sym> <def>Zr</def> <sym>*</sym> <def>Zi</def> <sym>+</sym> <def>Ci</def><sym>,</sym> <def>Limit</def> <kwa>is</kwa> <def>Zr1</def> <sym>*</sym> <def>Zr1</def> <sym>+</sym> <def>Zi1</def> <sym>*</sym> <def>Zi1</def><sym>,</sym><br />
<def>  Limit</def> <sym>=&lt;</sym> <def></def><num>4.0</num><def></def><sym>,</sym> <def>N1</def> <kwa>is</kwa> <def>N</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>, !,</sym> <def>mandel_</def><sym>(</sym><def>Cr</def><sym>,</sym> <def>Ci</def><sym>,</sym> <def>Zr1</def><sym>,</sym> <def>Zi1</def><sym>,</sym> <def>Repetitions</def><sym>,</sym> <def>N1</def><sym>).</sym><br />
<def><br />
mandel_</def><sym>(</sym><def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
output</def> <sym>:-</sym><br />
<def>  getvar</def><sym>(</sym><def>outflag</def><sym>,</sym> <def>OUTFLAG</def><sym>),</sym> <def>getvar</def><sym>(</sym><def>byteout</def><sym>,</sym> <def>BYTEOUT</def><sym>),</sym><br />
<def></def>  <sym>(</sym><def>OUTFLAG</def> <sym>==</sym> <def></def><num>1</num> <def></def><sym>-&gt; (</sym><def></def><kwb>put_byte</kwb><def></def><sym>(</sym><def>BYTEOUT</def><sym>),</sym> <def>setvar</def><sym>(</sym><def>bitnumber</def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym> <def>setvar</def><sym>(</sym><def>byteout</def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym> <def>setvar</def><sym>(</sym><def>outflag</def><sym>,</sym> <def></def><num>0</num><def></def><sym>)) ;</sym> <def></def><kwa>true</kwa><def></def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
getvar</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>) :-</sym> <def>nb_getval</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>).</sym><br />
<def>setvar</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>) :-</sym> <def>nb_setval</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>).</sym><br />
<def>dropvar</def><sym>(</sym><def>Id</def><sym>) :-</sym> <def>nb_delete</def><sym>(</sym><def>Id</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
argument_value</def><sym>(</sym><def>N</def><sym>,</sym> <def>Arg</def><sym>) :-</sym><br />
<def></def>  <kwb>current_prolog_flag</kwb><def></def><sym>(</sym><def>argv</def><sym>,</sym> <def>Cmdline</def><sym>),</sym> <def>append</def><sym>(</sym><def>_</def><sym>, [--|</sym><def>UserArgs</def><sym>],</sym> <def>Cmdline</def><sym>),</sym><br />
<def>  Nth</def> <kwa>is</kwa> <def>N</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>nth0</def><sym>(</sym><def>Nth</def><sym>,</sym> <def>UserArgs</def><sym>,</sym> <def>Arg</def><sym>).</sym><br />
<def><br />
cmdlNumArg</def><sym>(</sym><def>Nth</def><sym>,</sym> <def>N</def><sym>) :-</sym><br />
<def>  argument_value</def><sym>(</sym><def>Nth</def><sym>,</sym> <def>Arg</def><sym>),</sym> <def></def><kwb>catch</kwb><def></def><sym>(</sym><def>atom_number</def><sym>(</sym><def>Arg</def><sym>,</sym> <def>N</def><sym>),</sym> <def>_</def><sym>,</sym> <def></def><kwa>fail</kwa><def></def><sym>) ;</sym> <def></def><kwa>halt</kwa><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>).</sym><br />
<def></def><br />
</source>
