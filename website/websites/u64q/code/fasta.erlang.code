<source>
<def></def><slc>%  The Computer Language Shootout</slc><br />
<def></def><slc>%   http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>%</slc><br />
<def></def><slc>%   contributed by Alex Peake</slc><br />
<def></def><slc>%</slc><br />
<def></def><slc>%   erl -noshell -noinput -run fasta main N</slc><br />
<def></def><br />
<sym>-</sym><def></def><kwa>module</kwa><def></def><sym>(</sym><def>fasta</def><sym>).</sym><br />
<def></def><br />
<sym>-</sym><def></def><kwa>export</kwa><def></def><sym>([</sym><def>main</def><sym>/</sym><def></def><num>0</num><def></def><sym>,</sym> <def>main</def><sym>/</sym><def></def><num>1</num><def></def><sym>]).</sym><br />
<def></def><br />
<sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>IM</def><sym>,</sym> <def></def><num>139968</num><def></def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>IA</def><sym>,</sym> <def></def><num>3877</num><def></def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>IC</def><sym>,</sym> <def></def><num>29573</num><def></def><sym>).</sym><br />
<def></def><br />
<sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>ALU</def><sym>,</sym><def></def><str>&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGGGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGACCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAATACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCCAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</str><def></def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>HS</def><sym>, [{</sym><def>$a</def><sym>,</sym> <def></def><num>0.3029549426680</num><def></def><sym>}, {</sym><def>$c</def><sym>,</sym> <def></def><num>0.1979883004921</num><def></def><sym>}, {</sym><def>$g</def><sym>,</sym> <def></def><num>0.1975473066391</num><def></def><sym>}, {</sym><def>$t</def><sym>,</sym> <def></def><num>0.3015094502008</num><def></def><sym>}]).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>IUB</def><sym>, [{</sym><def>$a</def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>}, {</sym><def>$c</def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>}, {</sym><def>$g</def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>}, {</sym><def>$t</def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>}, {</sym><def>$B</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$D</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$H</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$K</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$M</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$N</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$R</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$S</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$V</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$W</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}, {</sym><def>$Y</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>}]).</sym><br />
<def></def><br />
<sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>LINE_LENGTH</def><sym>,</sym> <def></def><num>60</num><def></def><sym>).</sym><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>() -&gt;</sym> <def></def><kwd>main</kwd><def></def><sym>([</sym><def></def><str>&quot;1000&quot;</str><def></def><sym>]).</sym><br />
<def></def><kwd>main</kwd><def></def><sym>([</sym><def>Arg</def><sym>]) -&gt;</sym><br />
<def>   N</def> <sym>=</sym> <def></def><kwb>list_to_integer</kwb><def></def><sym>(</sym><def>Arg</def><sym>),</sym><br />
<def>   Seed</def> <sym>=</sym> <def></def><num>42</num><def></def><sym>,</sym><br />
<def></def>   <kwd>write_fasta_cycle</kwd><def></def><sym>(</sym><def></def><str>&quot;ONE&quot;</str><def></def><sym>,</sym><def></def><str>&quot;Homo sapiens alu&quot;</str><def></def><sym>, ?</sym><def>ALU</def><sym>,</sym> <def>N</def><sym>*</sym><def></def><num>2</num><def></def><sym>),</sym><br />
<def>   NewSeed</def> <sym>=</sym> <def></def><kwd>write_fasta_rand</kwd><def></def><sym>(</sym><def></def><str>&quot;TWO&quot;</str><def></def><sym>,</sym><def></def><str>&quot;IUB ambiguity codes&quot;</str><def></def><sym>, ?</sym><def>IUB</def><sym>,</sym> <def>N</def><sym>*</sym><def></def><num>3</num><def></def><sym>,</sym> <def>Seed</def><sym>),</sym><br />
<def></def>   <kwd>write_fasta_rand</kwd><def></def><sym>(</sym><def></def><str>&quot;THREE&quot;</str><def></def><sym>,</sym><def></def><str>&quot;Homo sapiens frequency&quot;</str><def></def><sym>, ?</sym><def>HS</def><sym>,</sym> <def>N</def><sym>*</sym><def></def><num>5</num><def></def><sym>,</sym> <def>NewSeed</def><sym>),</sym><br />
<def></def>   <kwb>halt</kwb><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>).</sym><br />
<def></def><br />
<slc>%% Write a sequence in LINE_LENGTH lines</slc><br />
<def></def><kwd>write_fasta_cycle</kwd><def></def><sym>(</sym><def>Id</def><sym>,</sym> <def>Description</def><sym>,</sym> <def>Seq</def><sym>,</sym> <def>Total</def><sym>) -&gt;</sym><br />
<def>	io</def><sym>:</sym><def></def><kwd>put_chars</kwd><def></def><sym>(</sym><def></def><str>&quot;&gt;&quot;</str><def></def> <sym>++</sym> <def>Id</def> <sym>++</sym> <def></def><str>&quot; &quot;</str><def></def> <sym>++</sym> <def>Description</def> <sym>++</sym> <def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def><sym>),</sym><br />
<def></def>	<kwd>write_fasta_cycle</kwd><def></def><sym>(</sym><def>Seq</def><sym>,</sym> <def>Total</def><sym>).</sym><br />
<def></def><kwd>write_fasta_cycle</kwd><def></def><sym>(</sym><def>Seq</def><sym>,</sym> <def>Total</def><sym>)</sym> <def></def><kwa>when</kwa> <def>Total</def> <sym>=&lt; ?</sym><def>LINE_LENGTH</def> <sym>-&gt;</sym><br />
<def></def>	<sym>{</sym><def>Seq1</def><sym>,</sym> <def>_Remainder</def><sym>} =</sym> <def></def><kwd>seq_len</kwd><def></def><sym>(</sym><def>Seq</def><sym>,</sym> <def>Total</def><sym>),</sym><br />
<def>	io</def><sym>:</sym><def></def><kwd>put_chars</kwd><def></def><sym>(</sym><def>Seq1</def> <sym>++</sym> <def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def><sym>);</sym><br />
<def></def><kwd>write_fasta_cycle</kwd><def></def><sym>(</sym><def>Seq</def><sym>,</sym> <def>Total</def><sym>) -&gt;</sym><br />
<def></def>	<sym>{</sym><def>Seq1</def><sym>,</sym> <def>Remainder</def><sym>} =</sym> <def></def><kwd>seq_len</kwd><def></def><sym>(</sym><def>Seq</def><sym>, ?</sym><def>LINE_LENGTH</def><sym>),</sym><br />
<def>	io</def><sym>:</sym><def></def><kwd>put_chars</kwd><def></def><sym>(</sym><def>Seq1</def> <sym>++</sym> <def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def><sym>),</sym><br />
<def></def>	<kwd>write_fasta_cycle</kwd><def></def><sym>(</sym><def>Remainder</def><sym>,</sym> <def>Total</def> <sym>- ?</sym><def>LINE_LENGTH</def><sym>).</sym><br />
<def></def><br />
<slc>%% Return a Len of a cycle of ALU</slc><br />
<def></def><kwd>seq_len</kwd><def></def><sym>(</sym><def>Seq</def><sym>,</sym> <def>Len</def><sym>)</sym> <def></def><kwa>when</kwa> <def></def><kwb>length</kwb><def></def><sym>(</sym><def>Seq</def><sym>) &gt;=</sym> <def>Len</def> <sym>-&gt;</sym><br />
<def>	lists</def><sym>:</sym><def></def><kwd>split</kwd><def></def><sym>(</sym><def>Len</def><sym>,</sym> <def>Seq</def><sym>);</sym><br />
<def></def><kwd>seq_len</kwd><def></def><sym>(</sym><def>Seq</def><sym>,</sym> <def>Len</def><sym>)</sym> <def></def><kwa>when</kwa> <def></def><kwb>length</kwb><def></def><sym>(?</sym><def>ALU</def><sym>) &lt;</sym> <def>Len</def> <sym>-</sym> <def></def><kwb>length</kwb><def></def><sym>(</sym><def>Seq</def><sym>) -&gt;</sym><br />
<def></def>	<kwd>seq_len</kwd><def></def><sym>(</sym><def>Seq</def> <sym>++ ?</sym><def>ALU</def><sym>,</sym> <def>Len</def><sym>);</sym><br />
<def></def><kwd>seq_len</kwd><def></def><sym>(</sym><def>Seq</def><sym>,</sym> <def>Len</def><sym>) -&gt;</sym><br />
<def></def>	<sym>{</sym><def>Seq1</def><sym>,</sym> <def>Seq2</def><sym>} =</sym> <def>lists</def><sym>:</sym><def></def><kwd>split</kwd><def></def><sym>(</sym><def>Len</def> <sym>-</sym> <def></def><kwb>length</kwb><def></def><sym>(</sym><def>Seq</def><sym>), ?</sym><def>ALU</def><sym>),</sym><br />
<def></def>	<sym>{</sym><def>Seq</def> <sym>++</sym> <def>Seq1</def><sym>,</sym> <def>Seq2</def><sym>}.</sym><br />
<def></def><br />
<slc>%% Write a random sequence in LINE_LENGTH lines</slc><br />
<def></def><kwd>write_fasta_rand</kwd><def></def><sym>(</sym><def>Id</def><sym>,</sym> <def>Description</def><sym>,</sym> <def>Freq</def><sym>,</sym> <def>Total</def><sym>,</sym> <def>Seed</def><sym>) -&gt;</sym><br />
<def>	io</def><sym>:</sym><def></def><kwd>put_chars</kwd><def></def><sym>(</sym><def></def><str>&quot;&gt;&quot;</str><def></def> <sym>++</sym> <def>Id</def> <sym>++</sym> <def></def><str>&quot; &quot;</str><def></def> <sym>++</sym> <def>Description</def> <sym>++</sym> <def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def><sym>),</sym><br />
<def>	NewSeed</def> <sym>=</sym> <def></def><kwd>write_fasta_rand</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Total</def><sym>,</sym> <def>Seed</def><sym>),</sym><br />
<def>	NewSeed</def><sym>.</sym><br />
<def></def><kwd>write_fasta_rand</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Total</def><sym>,</sym> <def>Seed</def><sym>)</sym> <def></def><kwa>when</kwa> <def>Total</def> <sym>=&lt; ?</sym><def>LINE_LENGTH</def> <sym>-&gt;</sym><br />
<def></def>	<sym>{</sym><def>RandList</def><sym>,</sym> <def>NewSeed</def><sym>} =</sym> <def></def><kwd>rand_list</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Total</def><sym>, [],</sym> <def>Seed</def><sym>),</sym><br />
<def>	io</def><sym>:</sym><def></def><kwd>put_chars</kwd><def></def><sym>(</sym><def>RandList</def><sym>),</sym><br />
<def>	NewSeed</def><sym>;</sym><br />
<def></def><kwd>write_fasta_rand</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Total</def><sym>,</sym> <def>Seed</def><sym>) -&gt;</sym><br />
<def></def>	<sym>{</sym><def>RandList</def><sym>,</sym> <def>NewSeed</def><sym>} =</sym> <def></def><kwd>rand_list</kwd><def></def><sym>(</sym><def>Freq</def><sym>, ?</sym><def>LINE_LENGTH</def><sym>, [],</sym> <def>Seed</def><sym>),</sym><br />
<def>	io</def><sym>:</sym><def></def><kwd>put_chars</kwd><def></def><sym>(</sym><def>RandList</def><sym>),</sym><br />
<def></def>	<kwd>write_fasta_rand</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Total</def> <sym>- ?</sym><def>LINE_LENGTH</def><sym>,</sym> <def>NewSeed</def><sym>).</sym><br />
<def></def><br />
<slc>%% Return a Len of a random list of Freq</slc><br />
<def></def><kwd>rand_list</kwd><def></def><sym>(</sym><def>_Freq</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>List</def><sym>,</sym> <def>Seed</def><sym>) -&gt;</sym><br />
<def></def>	<sym>{</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>([</sym><def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def> <sym>|</sym> <def>List</def><sym>]),</sym> <def>Seed</def><sym>};</sym><br />
<def></def><kwd>rand_list</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Len</def><sym>,</sym> <def>List</def><sym>,</sym> <def>Seed</def><sym>) -&gt;</sym><br />
<def></def>	<sym>{</sym><def>Rand</def><sym>,</sym> <def>NewSeed</def><sym>} =</sym> <def></def><kwd>rand</kwd><def></def><sym>(</sym><def>Seed</def><sym>),</sym><br />
<def></def>	<kwd>rand_list</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Len</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, [</sym><def></def><kwd>choose_base</kwd><def></def><sym>(</sym><def>Freq</def><sym>,</sym> <def>Rand</def><sym>) |</sym> <def>List</def><sym>],</sym> <def>NewSeed</def><sym>).</sym><br />
<def></def><br />
<slc>%% Functional random number generator</slc><br />
<def></def><kwd>rand</kwd><def></def><sym>(</sym><def>Seed</def><sym>) -&gt;</sym><br />
<def>   NewSeed</def> <sym>= (</sym><def>Seed</def> <sym>* ?</sym><def>IA</def> <sym>+ ?</sym><def>IC</def><sym>)</sym> <def></def><kwa>rem</kwa> <def></def><sym>?</sym><def>IM</def><sym>,</sym><br />
<def></def>   <sym>{</sym><def>NewSeed</def> <sym>/ ?</sym><def>IM</def><sym>,</sym> <def>NewSeed</def><sym>}.</sym><br />
<def></def><br />
<slc>%% Select the Base corresponding to the calculated cumulative Probability</slc><br />
<def></def><kwd>choose_base</kwd><def></def><sym>([{</sym><def>Base</def><sym>,</sym><def>_</def><sym>}],</sym> <def>_</def><sym>)</sym><br />
<def></def>	<sym>-&gt;</sym> <def>Base</def><sym>;</sym><br />
<def></def><kwd>choose_base</kwd><def></def><sym>([{</sym><def>Base</def><sym>,</sym><def>Freq</def><sym>} |</sym> <def>_</def><sym>],</sym> <def>Prob</def><sym>)</sym> <def></def><kwa>when</kwa> <def>Prob</def> <sym>&lt;</sym> <def>Freq</def> <sym>-&gt;</sym><br />
<def>	Base</def><sym>;</sym><br />
<def></def><kwd>choose_base</kwd><def></def><sym>([{</sym><def>_Base</def><sym>,</sym><def>Freq</def><sym>} |</sym> <def>Bases</def><sym>],</sym> <def>Prob</def><sym>) -&gt;</sym><br />
<def></def>	<kwd>choose_base</kwd><def></def><sym>(</sym><def>Bases</def><sym>,</sym> <def>Prob</def> <sym>-</sym> <def>Freq</def><sym>).</sym><def></def><br />
</source>
