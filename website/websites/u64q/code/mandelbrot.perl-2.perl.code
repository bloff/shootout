<source>
<def></def><slc># The Computer Language Shootout</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc># implemented by Greg Buchholz</slc><br />
<def></def><slc># streamlined by Kalev Soikonen</slc><br />
<def></def><br />
<kwa>sub</kwa> <def></def><kwd>ITER</kwd> <def></def><sym>()	{</sym> <def></def><num>50</num> <def></def><sym>}</sym><br />
<def></def><kwa>sub</kwa> <def></def><kwd>LIMITSQR</kwd> <def></def><sym>()	{</sym> <def></def><num>2.0</num> <def></def><sym>**</sym> <def></def><num>2</num> <def></def><sym>}</sym><br />
<def></def><br />
<kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>$w</kwb><def></def><sym>,</sym> <def></def><kwb>$h</kwb><def></def><sym>,</sym> <def></def><kwb>$i</kwb><def></def><sym>);</sym><br />
<def></def><kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>$Cr</kwb><def></def><sym>,</sym> <def></def><kwb>$Ci</kwb><def></def><sym>,</sym> <def></def><kwb>$Zr</kwb><def></def><sym>,</sym> <def></def><kwb>$Zi</kwb><def></def><sym>,</sym> <def></def><kwb>$Tr</kwb><def></def><sym>,</sym> <def></def><kwb>$Ti</kwb><def></def><sym>);</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>dot</def> <sym>{</sym><br />
<def></def>    <kwb>$Cr</kwb> <def></def><sym>=</sym> <def></def><num>2</num> <def></def><sym>*</sym> <def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>] /</sym> <def></def><kwb>$w</kwb> <def></def><sym>-</sym> <def></def><num>1.5</num><def></def><sym>;</sym><br />
<def></def>    <kwb>$Ci</kwb> <def></def><sym>=</sym> <def></def><num>2</num> <def></def><sym>*</sym> <def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>] /</sym> <def></def><kwb>$h</kwb> <def></def><sym>-</sym> <def></def><num>1.0</num><def></def><sym>;</sym><br />
<def></def><br />
    <kwb>$Zr</kwb> <def></def><sym>=</sym> <def></def><kwb>$Zi</kwb> <def></def><sym>=</sym> <def></def><kwb>$Tr</kwb> <def></def><sym>=</sym> <def></def><kwb>$Ti</kwb> <def></def><sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>    <kwb>$i</kwb> <def></def><sym>=</sym> <def></def><kwd>ITER</kwd><def></def><sym>;</sym><br />
<def></def>    <sym>(</sym><br />
<def></def>	<kwb>$Zi</kwb> <def></def><sym>=</sym> <def></def><num>2.0</num> <def></def><sym>*</sym> <def></def><kwb>$Zr</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zi</kwb> <def></def><sym>+</sym> <def></def><kwb>$Ci</kwb><def></def><sym>,</sym><br />
<def></def>	<kwb>$Zr</kwb> <def></def><sym>=</sym> <def></def><kwb>$Tr</kwb> <def></def><sym>-</sym> <def></def><kwb>$Ti</kwb> <def></def><sym>+</sym> <def></def><kwb>$Cr</kwb><def></def><sym>,</sym><br />
<def></def>	<kwb>$Ti</kwb> <def></def><sym>=</sym> <def></def><kwb>$Zi</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zi</kwb><def></def><sym>,</sym><br />
<def></def>	<kwb>$Tr</kwb> <def></def><sym>=</sym> <def></def><kwb>$Zr</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zr</kwb><br />
<def></def>    <sym>)</sym> <def></def><kwa>until</kwa> <def></def><sym>(</sym><def></def><kwb>$Tr</kwb> <def></def><sym>+</sym> <def></def><kwb>$Ti</kwb> <def></def><sym>&gt;</sym> <def>LIMITSQR</def> <sym>|| !</sym><def></def><kwb>$i</kwb><def></def><sym>--);</sym><br />
<def></def>    <kwa>return</kwa> <def></def><sym>(</sym><def></def><kwb>$i</kwb> <def></def><sym>== -</sym><def></def><num>1</num><def></def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>$w</kwb> <def></def><sym>=</sym> <def></def><kwb>$h</kwb> <def></def><sym>=</sym> <def>shift</def> <sym>||</sym> <def></def><num>80</num><def></def><sym>;</sym><br />
<def></def><kwc>print</kwc> <def></def><str>&quot;P4</str><esc>\n</esc><str>$w $h</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def><kwa>for</kwa> <def></def><kwc>my</kwc> <def></def><kwb>$y</kwb> <def></def><sym>(</sym><def></def><num>0</num><def></def><sym>..</sym><def></def><kwb>$h</kwb><def></def><sym>-</sym><def></def><num>1</num><def></def><sym>) {</sym><br />
<def></def>    <kwc>print</kwc> <def>pack</def> <str>'B*'</str><def></def><sym>,</sym> <def>pack</def> <str>'C*'</str><def></def><sym>,</sym> <def>map</def> <kwd>dot</kwd><def></def><sym>(</sym><def></def><kwb>$_</kwb><def></def><sym>,</sym> <def></def><kwb>$y</kwb><def></def><sym>),</sym> <def></def><num>0</num><def></def><sym>..</sym><def></def><kwb>$w</kwb><def></def><sym>-</sym><def></def><num>1</num><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
</source>
