<source>
<def></def><slc>-- The Great Computer Language Shootout</slc><br />
<def></def><slc>-- http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>-- Contributed by Greg Buchholz</slc><br />
<def></def><br />
<kwa>import</kwa> <def>Data.Array.Base</def><br />
<kwa>import</kwa> <def>System</def><sym>(</sym><def>getArgs</def><sym>)</sym><br />
<def></def><kwa>import</kwa> <def>Numeric<br />
<br />
main</def> <sym>=</sym> <def></def><kwa>do</kwa><br />
<def></def>        <sym>[</sym><def>arg</def><sym>] &lt;-</sym> <def>getArgs</def><br />
        <kwa>let</kwa> <def>n</def> <sym>= (</sym><def>read arg</def><sym>) -</sym> <def></def><num>1</num><br />
<def></def>        <kwa>let</kwa> <def>init</def> <sym>=</sym> <def>listArray</def> <sym>(</sym><def></def><num>0</num><def></def><sym>,</sym><def>n</def><sym>) (</sym><def>repeat</def> <num>1.0</num><def></def><sym>)</sym><br />
<def></def>        <kwa>let</kwa> <def></def><sym>(</sym><def>v</def><sym>:</sym><def>u</def><sym>:</sym><def>rest</def><sym>) =</sym> <def>drop</def> <num>19</num> <def>$ iterate</def> <sym>(</sym><def>eval_AtA_times_u n</def><sym>)</sym> <def>init</def><br />
        <kwa>let</kwa> <def>vBv</def> <sym>=</sym> <def>sum</def> <sym>[(</sym><def>u</def><sym>!</sym><def>i</def><sym>)*(</sym><def>v</def><sym>!</sym><def>i</def><sym>) |</sym><def>i</def><sym>&lt;-[</sym><def></def><num>0</num><def>..n</def><sym>]]</sym><br />
<def></def>        <kwa>let</kwa> <def>vv</def>  <sym>=</sym> <def>sum</def> <sym>[(</sym><def>v</def><sym>!</sym><def>i</def><sym>)*(</sym><def>v</def><sym>!</sym><def>i</def><sym>) |</sym><def>i</def><sym>&lt;-[</sym><def></def><num>0</num><def>..n</def><sym>]]</sym><br />
<def>        putStrLn $ showFFloat</def> <sym>(</sym><def>Just</def> <num>9</num><def></def><sym>) (</sym><def>sqrt</def> <sym>(</sym><def>vBv</def><sym>/</sym><def>vv</def><sym>))</sym> <def></def><str>&quot;&quot;</str><def><br />
<br />
eval_AtA_times_u n u</def> <sym>=</sym> <def>eval_At_times_u n v</def><br />
    <kwa>where</kwa> <def>v</def> <sym>=</sym> <def>eval_A_times_u n u<br />
<br />
eval_A x y</def> <sym>=</sym> <def></def><num>1.0</num><def></def><sym>/((</sym><def>i</def><sym>+</sym><def>j</def><sym>)*(</sym><def>i</def><sym>+</sym><def>j</def><sym>+</sym><def></def><num>1</num><def></def><sym>)/</sym><def></def><num>2</num><def></def><sym>+</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>    <kwa>where</kwa> <def>i</def> <sym>=</sym> <def>fromIntegral x<br />
          j</def> <sym>=</sym> <def>fromIntegral y<br />
<br />
eval_A_times_u</def> <sym>::</sym> <def></def><kwb>Int</kwb> <def></def><sym>-&gt;</sym> <def>UArray</def> <kwb>Int Double</kwb> <def></def><sym>-&gt;</sym> <def>UArray</def> <kwb>Int Double</kwb><br />
<def>eval_A_times_u n u</def> <sym>=</sym> <def>unsafeAccumArray</def> <sym>(+)</sym> <def></def><num>0</num> <def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym><def>n</def><sym>)</sym><br />
<def></def>                     <sym>[(</sym><def>i</def><sym>,(</sym><def>eval_A i j</def><sym>) *</sym> <def>u</def><sym>!</sym><def>j</def><sym>)|</sym><def>i</def><sym>&lt;-[</sym><def></def><num>0</num><def>..n</def><sym>],</sym> <def>j</def><sym>&lt;-[</sym><def></def><num>0</num><def>..n</def><sym>]]</sym><br />
<def><br />
eval_At_times_u</def> <sym>::</sym> <def></def><kwb>Int</kwb> <def></def><sym>-&gt;</sym> <def>UArray</def> <kwb>Int Double</kwb> <def></def><sym>-&gt;</sym> <def>UArray</def> <kwb>Int Double</kwb><br />
<def>eval_At_times_u n u</def> <sym>=</sym> <def>unsafeAccumArray</def> <sym>(+)</sym> <def></def><num>0</num> <def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym><def>n</def><sym>)</sym><br />
<def></def>                      <sym>[(</sym><def>i</def><sym>,(</sym><def>eval_A j i</def><sym>) *</sym> <def>u</def><sym>!</sym><def>j</def><sym>)|</sym><def>i</def><sym>&lt;-[</sym><def></def><num>0</num><def>..n</def><sym>],</sym> <def>j</def><sym>&lt;-[</sym><def></def><num>0</num><def>..n</def><sym>]]</sym><def></def><br />
</source>
