<span class="hl slc">// The Computer Language Shootout</span>
<span class="hl slc">// http://shootout.alioth.debian.org/</span>
<span class="hl slc">// contributed by Adam Montague</span>

<span class="hl kwb">float</span> <span class="hl kwd">A</span><span class="hl sym">(</span><span class="hl kwb">int</span> i<span class="hl sym">,</span> <span class="hl kwb">int</span> j<span class="hl sym">)</span>
<span class="hl sym">{</span>
	return <span class="hl num">1.0</span> <span class="hl sym">/ ((</span>i <span class="hl sym">+</span> j<span class="hl sym">) * (</span>i <span class="hl sym">+</span> j <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">) /</span> <span class="hl num">2</span> <span class="hl sym">+</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwb">float</span> <span class="hl kwd">Av</span><span class="hl sym">(</span><span class="hl kwb">int</span> n<span class="hl sym">,</span> <span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> v<span class="hl sym">,</span> <span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> Av<span class="hl sym">)</span>
<span class="hl sym">{</span>
	<span class="hl kwd">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> n<span class="hl sym">;</span> i<span class="hl sym">++) {</span>
		Av<span class="hl sym">[</span>i<span class="hl sym">] =</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
		<span class="hl kwd">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> j <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> n<span class="hl sym">;</span> j<span class="hl sym">++) {</span>
			Av<span class="hl sym">[</span>i<span class="hl sym">] +=</span> <span class="hl kwd">A</span><span class="hl sym">(</span>i<span class="hl sym">,</span> j<span class="hl sym">) *</span> v<span class="hl sym">[</span>j<span class="hl sym">];</span>
		<span class="hl sym">}</span>
	<span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwb">float</span> <span class="hl kwd">Atv</span><span class="hl sym">(</span><span class="hl kwb">int</span> n<span class="hl sym">,</span> <span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> v<span class="hl sym">,</span> <span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> Atv<span class="hl sym">)</span>
<span class="hl sym">{</span>
	<span class="hl kwd">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> n<span class="hl sym">;</span> i<span class="hl sym">++) {</span>
		Atv<span class="hl sym">[</span>i<span class="hl sym">] =</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
		<span class="hl kwd">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> j <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> n<span class="hl sym">;</span> j<span class="hl sym">++) {</span>
			Atv<span class="hl sym">[</span>i<span class="hl sym">] +=</span> <span class="hl kwd">A</span><span class="hl sym">(</span>j<span class="hl sym">,</span> i<span class="hl sym">) *</span> v<span class="hl sym">[</span>j<span class="hl sym">];</span>
		<span class="hl sym">}</span>
	<span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwb">float</span> <span class="hl kwd">AtAv</span><span class="hl sym">(</span><span class="hl kwb">int</span> n<span class="hl sym">,</span> <span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> v<span class="hl sym">,</span> <span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> AtAv<span class="hl sym">)</span>
<span class="hl sym">{</span>
	<span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> u <span class="hl sym">=</span> <span class="hl kwa">allocate</span><span class="hl sym">(</span>n<span class="hl sym">);</span>
	<span class="hl kwd">Av</span><span class="hl sym">(</span>n<span class="hl sym">,</span> v<span class="hl sym">,</span> u<span class="hl sym">);</span>
	<span class="hl kwd">Atv</span><span class="hl sym">(</span>n<span class="hl sym">,</span> u<span class="hl sym">,</span> AtAv<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwb">void</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">string</span><span class="hl sym">)</span> argv<span class="hl sym">)</span>
<span class="hl sym">{</span>
	<span class="hl kwb">int</span> n <span class="hl sym">= (</span><span class="hl kwb">int</span><span class="hl sym">)</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span>
	<span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> u <span class="hl sym">=</span> <span class="hl kwa">allocate</span><span class="hl sym">(</span>n<span class="hl sym">,</span> <span class="hl num">1.0</span><span class="hl sym">);</span>
	<span class="hl kwb">array</span><span class="hl sym">(</span><span class="hl kwb">float</span><span class="hl sym">)</span> v <span class="hl sym">=</span> <span class="hl kwa">allocate</span><span class="hl sym">(</span>n<span class="hl sym">);</span>

	<span class="hl kwd">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> <span class="hl num">10</span><span class="hl sym">;</span> i<span class="hl sym">++) {</span>
		<span class="hl kwd">AtAv</span><span class="hl sym">(</span>n<span class="hl sym">,</span> u<span class="hl sym">,</span> v<span class="hl sym">);</span>
		<span class="hl kwd">AtAv</span><span class="hl sym">(</span>n<span class="hl sym">,</span> v<span class="hl sym">,</span> u<span class="hl sym">);</span>
	<span class="hl sym">}</span>

	<span class="hl kwb">float</span> vBv<span class="hl sym">,</span> vv<span class="hl sym">;</span>
	<span class="hl kwd">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> n<span class="hl sym">;</span> i<span class="hl sym">++) {</span>
		vBv <span class="hl sym">+=</span> u<span class="hl sym">[</span>i<span class="hl sym">] *</span> v<span class="hl sym">[</span>i<span class="hl sym">];</span>
		vv <span class="hl sym">+=</span> v<span class="hl sym">[</span>i<span class="hl sym">] *</span> v<span class="hl sym">[</span>i<span class="hl sym">];</span>
	<span class="hl sym">}</span>

	<span class="hl kwa">write</span><span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwa">sqrt</span><span class="hl sym">(</span>vBv <span class="hl sym">/</span> vv<span class="hl sym">));</span>
<span class="hl sym">}</span>
