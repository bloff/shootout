<source>
<def></def><slc>## The Computer Lannguage Shootout</slc><br />
<def></def><slc>## http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>## contributed by Hemang Lavana</slc><br />
<def></def><slc>## modified on advice from Mark Janssen</slc><br />
<def></def><br />
<kwa>proc</kwa> <def>compose</def> <sym>{</sym><def>aQRST bQRST</def><sym>} {</sym><br />
<def></def>    <kwa>foreach</kwa> <def></def><sym>{</sym><def>aQ aR aS aT</def><sym>}</sym> <def></def><kwb>$aQRST</kwb> <def></def><kwa>break</kwa><br />
<def></def>    <kwa>foreach</kwa> <def></def><sym>{</sym><def>bQ bR bS bT</def><sym>}</sym> <def></def><kwb>$bQRST</kwb> <def></def><kwa>break</kwa><br />
<def></def>    <kwa>set</kwa> <def>rQ</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwb>$aQ</kwb> <def></def><sym>*</sym> <def></def><kwb>$bQ</kwb><def></def><sym>}]</sym><br />
<def></def>    <kwa>set</kwa> <def>rR</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwb>$aQ</kwb> <def></def><sym>*</sym> <def></def><kwb>$bR</kwb> <def></def><sym>+</sym> <def></def><kwb>$aR</kwb> <def></def><sym>*</sym> <def></def><kwb>$bT</kwb><def></def><sym>}]</sym><br />
<def></def>    <kwa>set</kwa> <def>rS</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwb>$aS</kwb> <def></def><sym>*</sym> <def></def><kwb>$bQ</kwb> <def></def><sym>+</sym> <def></def><kwb>$aT</kwb> <def></def><sym>*</sym> <def></def><kwb>$bS</kwb><def></def><sym>}]</sym><br />
<def></def>    <kwa>set</kwa> <def>rT</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwb>$aS</kwb> <def></def><sym>*</sym> <def></def><kwb>$bR</kwb> <def></def><sym>+</sym> <def></def><kwb>$aT</kwb> <def></def><sym>*</sym> <def></def><kwb>$bT</kwb><def></def><sym>}]</sym><br />
<def></def>    <kwa>return</kwa> <def></def><sym>[</sym><def></def><kwa>list</kwa> <def></def><kwb>$rQ $rR $rS $rT</kwb><def></def><sym>]</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>produce</def> <sym>{</sym><def>QRST J</def><sym>} {</sym><br />
<def></def>    <kwa>return</kwa> <def></def><sym>[</sym><def>compose</def> <sym>[</sym><def></def><kwa>list</kwa> <def></def><num>10</num> <def></def><sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwc>-10</kwc><def></def><sym>*</sym><def></def><kwb>$J</kwb><def></def><sym>}]</sym> <def></def><num>0 1</num><def></def><sym>]</sym> <def></def><kwb>$QRST</kwb><def></def><sym>]</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>extract</def> <sym>{</sym><def>QRST J</def><sym>} {</sym><br />
<def></def>    <kwa>foreach</kwa> <def></def><sym>{</sym><def>Q R S T</def><sym>}</sym> <def></def><kwb>$QRST</kwb> <def></def><kwa>break</kwa><br />
<def></def>    <kwa>return</kwa> <def></def><sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{(</sym><def></def><kwb>$Q</kwb> <def></def><sym>*</sym> <def></def><kwb>$J</kwb> <def></def><sym>+</sym> <def></def><kwb>$R</kwb><def></def><sym>) / (</sym><def></def><kwb>$S</kwb> <def></def><sym>*</sym> <def></def><kwb>$J</kwb> <def></def><sym>+</sym> <def></def><kwb>$T</kwb><def></def><sym>)}]</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>nextX</def> <sym>{} {</sym><br />
<def></def>    <kwa>global</kwa> <def>pidigit</def><br />
    <kwa>set</kwa> <def>k</def> <sym>[</sym><def></def><kwa>incr</kwa> <def>pidigit</def><sym>(</sym><def>k</def><sym>)]</sym><br />
<def></def>    <kwa>return</kwa> <def></def><sym>[</sym><def></def><kwa>list</kwa> <def></def><kwb>$k</kwb> <def></def><sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><num>4</num><def></def><sym>*</sym><def></def><kwb>$k</kwb><def></def><sym>+</sym><def></def><num>2</num><def></def><sym>}]</sym> <def></def><num>0</num> <def></def><sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><num>2</num><def></def><sym>*</sym><def></def><kwb>$k</kwb><def></def><sym>+</sym><def></def><num>1</num><def></def><sym>}]]</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>nextPidigit</def> <sym>{} {</sym><br />
<def></def>    <kwa>global</kwa> <def>pidigit</def><br />
    <kwa>set</kwa> <def>digit</def> <sym>[</sym><def>extract</def> <kwb>$pidigit</kwb><def></def><sym>(</sym><def>z</def><sym>)</sym> <def></def><num>3</num><def></def><sym>]</sym><br />
<def></def>    <kwa>while</kwa> <def></def><sym>{</sym><def></def><kwb>$digit</kwb> <def></def><sym>!= [</sym><def>extract</def> <kwb>$pidigit</kwb><def></def><sym>(</sym><def>z</def><sym>)</sym> <def></def><num>4</num><def></def><sym>]} {</sym><br />
<def></def>        <kwa>set</kwa> <def>pidigit</def><sym>(</sym><def>z</def><sym>) [</sym><def>compose</def> <kwb>$pidigit</kwb><def></def><sym>(</sym><def>z</def><sym>) [</sym><def>nextX</def><sym>]]</sym><br />
<def></def>        <kwa>set</kwa> <def>digit</def> <sym>[</sym><def>extract</def> <kwb>$pidigit</kwb><def></def><sym>(</sym><def>z</def><sym>)</sym> <def></def><num>3</num><def></def><sym>]</sym><br />
<def></def>    <sym>}</sym><br />
<def></def>    <kwa>set</kwa> <def>pidigit</def><sym>(</sym><def>z</def><sym>) [</sym><def>produce</def> <kwb>$pidigit</kwb><def></def><sym>(</sym><def>z</def><sym>)</sym> <def></def><kwb>$digit</kwb><def></def><sym>]</sym><br />
<def></def>    <kwa>return</kwa> <def></def><kwb>$digit</kwb><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>newPidigit</def> <sym>{} {</sym><br />
<def></def>    <kwa>global</kwa> <def>pidigit</def><br />
    <kwa>set</kwa> <def>pidigit</def><sym>(</sym><def>z</def><sym>) [</sym><def></def><kwa>list</kwa> <def></def><num>1 0 0 1</num><def></def><sym>]</sym><br />
<def></def>    <kwa>set</kwa> <def>pidigit</def><sym>(</sym><def>k</def><sym>)</sym> <def></def><num>0</num><br />
<def></def>    <kwa>return</kwa><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>generatePidigits</def> <sym>{</sym><def>n</def><sym>} {</sym><br />
<def></def>    <kwa>set</kwa> <def>pi_digits</def> <sym>[</sym><def>newPidigit</def><sym>]</sym><br />
<def></def>    <kwa>for</kwa> <def></def><sym>{</sym><def></def><kwa>set</kwa> <def>i</def> <num>0</num><def></def><sym>} {</sym><def></def><kwb>$i</kwb> <def></def><sym>&lt;</sym> <def></def><kwb>$n</kwb><def></def><sym>} {</sym><def></def><kwa>incr</kwa> <def>i</def><sym>} {</sym><def></def><kwa>append</kwa> <def>pi_digits</def> <sym>[</sym><def>nextPidigit</def><sym>]}</sym><br />
<def></def>    <kwa>return</kwa> <def></def><kwb>$pi_digits</kwb><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>proc</kwa> <def>main</def> <sym>{</sym><def>n</def><sym>} {</sym><br />
<def></def>    <kwa>if</kwa> <def></def><sym>{</sym><def></def><kwb>$n</kwb> <def>eq</def> <str>&quot;&quot;</str><def></def> <sym>||</sym> <def></def><kwb>$n</kwb> <def></def><sym>&lt;</sym> <def></def><num>27</num><def></def><sym>} {</sym><def></def><kwa>set</kwa> <def>n</def> <num>27</num><def></def><sym>}</sym><br />
<def></def>    <kwa>set</kwa> <def>width</def> <num>10</num><br />
<def></def>    <kwa>set</kwa> <def>pi_digits</def> <sym>[</sym><def>generatePidigits</def> <kwb>$n</kwb><def></def><sym>]</sym><br />
<def></def><br />
    <kwa>set</kwa> <def>max</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwb>$n</kwb><def></def><sym>-</sym><def></def><kwb>$width</kwb><def></def><sym>}]</sym><br />
<def></def>    <kwa>set</kwa> <def>len</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwb>$width</kwb><def></def><kwc>-1</kwc><def></def><sym>}]</sym><br />
<def></def>    <kwa>for</kwa> <def></def><sym>{</sym><def></def><kwa>set</kwa> <def>i</def> <num>0</num><def></def><sym>} {</sym><def></def><kwb>$i</kwb> <def></def><sym>&lt;</sym> <def></def><kwb>$max</kwb><def></def><sym>} {} {</sym><br />
<def></def>        <kwa>puts</kwa> <def></def><str>&quot;[string range $pi_digits $i [incr i $len]]</str><esc>\t</esc><str>:[incr i]&quot;</str><def></def><br />
    <sym>}</sym><br />
<def></def>    <kwa>if</kwa> <def></def><sym>{</sym><def></def><kwb>$i</kwb> <def></def><sym>&lt;</sym> <def></def><kwb>$n</kwb><def></def><sym>} {</sym><br />
<def></def>        <kwa>puts</kwa> <def></def><sym>[</sym><def></def><kwa>format</kwa> <def></def><str>&quot;%-${width}s</str><esc>\t</esc><str>:%s&quot;</str><def></def> <sym>[</sym><def></def><kwa>string</kwa> <def>range</def> <kwb>$pi_digits $i $n</kwb><def></def><sym>]</sym> <def></def><kwb>$n</kwb><def></def><sym>]</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def>main</def> <sym>[</sym><def></def><kwa>lindex</kwa> <def></def><kwb>$argv</kwb> <def></def><num>0</num><def></def><sym>]</sym><def></def><br />
</source>
