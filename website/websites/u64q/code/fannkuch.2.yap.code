<span class="hl slc">% ----------------------------------------------------------------------</span>
<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>

<span class="hl slc">% Contributed by Anthony Borla</span>
<span class="hl slc">% Modified by Glendon Holst</span>
<span class="hl slc">% ----------------------------------------------------------------------</span>

<span class="hl sym">:-</span> yap_flag<span class="hl sym">(</span>unknown<span class="hl sym">,</span>error<span class="hl sym">).</span>

<span class="hl sym">:-</span> use_module<span class="hl sym">(</span>library<span class="hl sym">(</span>lists<span class="hl sym">)).</span>

<span class="hl sym">:-</span> initialization<span class="hl sym">(</span>main<span class="hl sym">).</span>

main <span class="hl sym">:-</span>
  unix<span class="hl sym">(</span> argv<span class="hl sym">([</span>H<span class="hl sym">|</span>_<span class="hl sym">]) ),</span> number_atom<span class="hl sym">(</span>N<span class="hl sym">,</span>H<span class="hl sym">),</span>

  f_permutations<span class="hl sym">(</span>N<span class="hl sym">,</span> MaxFlips<span class="hl sym">),</span>
  format<span class="hl sym">(</span><span class="hl str">'Pfannkuchen(~d) = ~d~n'</span><span class="hl sym">, [</span>N<span class="hl sym">,</span> MaxFlips<span class="hl sym">]).</span>

<span class="hl slc">% ------------------------------- %</span>

f_permutations<span class="hl sym">(</span>N<span class="hl sym">,</span> MaxFlips<span class="hl sym">) :-</span>
  numlist<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> N<span class="hl sym">,</span> L<span class="hl sym">),</span>
  f_permutations_<span class="hl sym">(</span>L<span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> MaxFlips<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> _<span class="hl sym">).</span>

<span class="hl slc">% ------------- %</span>

f_permutations_<span class="hl sym">(</span>L<span class="hl sym">,</span> N<span class="hl sym">,</span> I<span class="hl sym">,</span> MaxFlips0<span class="hl sym">,</span> MaxFlips<span class="hl sym">,</span> PermN0<span class="hl sym">,</span> PermN<span class="hl sym">) :-</span>
<span class="hl sym">(</span>I <span class="hl sym">&lt;</span> N <span class="hl sym">-&gt;</span>
	<span class="hl sym">(</span>
		N <span class="hl sym">=:=</span> <span class="hl num">1</span> <span class="hl sym">-&gt;</span>
		<span class="hl sym">!,</span> processPerm<span class="hl sym">(</span>L<span class="hl sym">,</span> MaxFlips0<span class="hl sym">,</span> MaxFlips<span class="hl sym">,</span> PermN0<span class="hl sym">,</span> PermN<span class="hl sym">)</span>
	<span class="hl sym">;</span>
		N1 <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>
		f_permutations_<span class="hl sym">(</span>L<span class="hl sym">,</span> N1<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> MaxFlips0<span class="hl sym">,</span> MaxFlips1<span class="hl sym">,</span> PermN0<span class="hl sym">,</span> PermN1<span class="hl sym">),</span>
		split_list<span class="hl sym">(</span>L<span class="hl sym">,</span> N<span class="hl sym">,</span> Lt<span class="hl sym">,</span> Ld<span class="hl sym">),</span>
		rotateLeft<span class="hl sym">(</span>Lt<span class="hl sym">,</span> LtRL<span class="hl sym">),</span> append<span class="hl sym">(</span>LtRL<span class="hl sym">,</span> Ld<span class="hl sym">,</span> La<span class="hl sym">),</span> Ii <span class="hl kwa">is</span> I <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span>
		<span class="hl sym">!,</span> f_permutations_<span class="hl sym">(</span>La<span class="hl sym">,</span> N<span class="hl sym">,</span> Ii<span class="hl sym">,</span> MaxFlips1<span class="hl sym">,</span> MaxFlips<span class="hl sym">,</span> PermN1<span class="hl sym">,</span> PermN<span class="hl sym">)</span>
	<span class="hl sym">)</span>
<span class="hl sym">;</span>
	<span class="hl sym">!,</span> MaxFlips <span class="hl sym">=</span> MaxFlips0<span class="hl sym">,</span> PermN <span class="hl sym">=</span> PermN0
<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

flips<span class="hl sym">(</span>L<span class="hl sym">,</span> Flips<span class="hl sym">) :-</span> flips_<span class="hl sym">(</span>L<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> Flips<span class="hl sym">).</span>

flips_<span class="hl sym">([</span><span class="hl num">1</span><span class="hl sym">|</span>_<span class="hl sym">],</span> Fla<span class="hl sym">,</span> Fla<span class="hl sym">) :- !.</span>

flips_<span class="hl sym">([</span>N<span class="hl sym">|</span>T<span class="hl sym">],</span> Fla<span class="hl sym">,</span> Flips<span class="hl sym">) :-</span>
	take_drop<span class="hl sym">([</span>N<span class="hl sym">|</span>T<span class="hl sym">],</span> N<span class="hl sym">,</span> Lt<span class="hl sym">,</span> Ld<span class="hl sym">),</span> append<span class="hl sym">(</span>Lt<span class="hl sym">,</span> Ld<span class="hl sym">,</span> La<span class="hl sym">),</span>
	Fla1 <span class="hl kwa">is</span> Fla <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">, !,</span> flips_<span class="hl sym">(</span>La<span class="hl sym">,</span> Fla1<span class="hl sym">,</span> Flips<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

rotateLeft<span class="hl sym">([</span>H<span class="hl sym">|</span>T<span class="hl sym">],</span> RL<span class="hl sym">) :-</span> append<span class="hl sym">(</span>T<span class="hl sym">, [</span>H<span class="hl sym">],</span> RL<span class="hl sym">).</span>
rotateLeft<span class="hl sym">([], []).</span>

<span class="hl slc">% ------------------------------- %</span>

numlist<span class="hl sym">(</span>N<span class="hl sym">,</span> M<span class="hl sym">, [</span>N<span class="hl sym">|</span>Ls<span class="hl sym">]) :-</span> N <span class="hl sym">&lt;</span> M<span class="hl sym">, !,</span> N1 <span class="hl kwa">is</span> N <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> numlist<span class="hl sym">(</span>N1<span class="hl sym">,</span> M<span class="hl sym">,</span> Ls<span class="hl sym">).</span>
numlist<span class="hl sym">(</span>M<span class="hl sym">,</span> M<span class="hl sym">, [</span>M<span class="hl sym">]).</span>

<span class="hl slc">% ------------------------------- %</span>

printPerm<span class="hl sym">([</span>L<span class="hl sym">|</span>Ls<span class="hl sym">]) :-</span> <span class="hl kwb">write</span><span class="hl sym">(</span>L<span class="hl sym">),</span> printPerm<span class="hl sym">(</span>Ls<span class="hl sym">).</span>
printPerm<span class="hl sym">([]) :-</span> <span class="hl kwa">nl</span><span class="hl sym">.</span>

<span class="hl slc">% ------------------------------- %</span>

processPerm<span class="hl sym">(</span>L<span class="hl sym">,</span> MaxFlips0<span class="hl sym">,</span> MaxFlips<span class="hl sym">,</span> PermN0<span class="hl sym">,</span> PermN<span class="hl sym">) :-</span>
	flips<span class="hl sym">(</span>L<span class="hl sym">,</span> Flips<span class="hl sym">),</span>
	<span class="hl sym">(</span>
		Flips <span class="hl sym">&gt;</span> MaxFlips0 <span class="hl sym">-&gt;</span>
		MaxFlips <span class="hl sym">=</span> Flips
	<span class="hl sym">;</span>
		MaxFlips <span class="hl sym">=</span> MaxFlips0
	<span class="hl sym">),</span>
	<span class="hl sym">(</span>
		PermN0 <span class="hl sym">&lt;</span> <span class="hl num">30</span> <span class="hl sym">-&gt;</span>
		printPerm<span class="hl sym">(</span>L<span class="hl sym">),</span>
		PermN <span class="hl kwa">is</span> PermN0 <span class="hl sym">+</span> <span class="hl num">1</span>
	<span class="hl sym">;</span>
		PermN <span class="hl sym">=</span> PermN0
	<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

split_list<span class="hl sym">([</span>L<span class="hl sym">|</span>Ls<span class="hl sym">],</span> N<span class="hl sym">, [</span>L<span class="hl sym">|</span>Hs<span class="hl sym">],</span> Ts<span class="hl sym">) :-</span>
	N <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">, !,</span> N1 <span class="hl kwa">is</span> N <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>
	split_list<span class="hl sym">(</span>Ls<span class="hl sym">,</span> N1<span class="hl sym">,</span> Hs<span class="hl sym">,</span> Ts<span class="hl sym">).</span>

split_list<span class="hl sym">(</span>Ls<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">, [],</span> Ls<span class="hl sym">) :- !.</span>

<span class="hl slc">% ------------------------------- %</span>

take_drop<span class="hl sym">(</span>L<span class="hl sym">,</span> N<span class="hl sym">,</span> Taken<span class="hl sym">,</span> Rest<span class="hl sym">) :-</span> take_drop_<span class="hl sym">(</span>L<span class="hl sym">,</span> N<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">, [],</span> Taken<span class="hl sym">,</span> Rest<span class="hl sym">).</span>

take_drop_<span class="hl sym">(</span>L<span class="hl sym">,</span> N<span class="hl sym">,</span> N<span class="hl sym">,</span> Ta<span class="hl sym">,</span> Ta<span class="hl sym">,</span> L<span class="hl sym">) :- !.</span>

take_drop_<span class="hl sym">([</span>H<span class="hl sym">|</span>T<span class="hl sym">],</span> N<span class="hl sym">,</span> Nc<span class="hl sym">,</span> Ta<span class="hl sym">,</span> Taken<span class="hl sym">,</span> Rest<span class="hl sym">) :-</span>
	Nc1 <span class="hl kwa">is</span> Nc <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">, !,</span> take_drop_<span class="hl sym">(</span>T<span class="hl sym">,</span> N<span class="hl sym">,</span> Nc1<span class="hl sym">, [</span>H<span class="hl sym">|</span>Ta<span class="hl sym">],</span> Taken<span class="hl sym">,</span> Rest<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>
