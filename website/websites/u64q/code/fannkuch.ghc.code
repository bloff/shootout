<source>
<def></def><com>{-# OPTIONS -O2 -optc-O3 #-}</com><def></def><br />
<slc>-- The Great Computer Language Shootout</slc><br />
<def></def><slc>-- http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>-- written by Bertram Felgenhauer, Don Stewart, Matthias Neubauer, Josh Goldfoot and David Place.</slc><br />
<def></def><br />
<kwa>import</kwa> <def>System</def><br />
<kwa>import</kwa> <def>Data.List<br />
<br />
rotate</def> <num>2</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>3</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>4</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>5</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>6</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>7</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>8</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>9</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>x9</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>x9</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate</def> <num>10</num> <def></def><sym>(</sym><def>x1</def><sym>:</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>x9</def><sym>:</sym><def>x10</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>x9</def><sym>:</sym><def>x10</def><sym>:</sym><def>x1</def><sym>:</sym><def>xs<br />
rotate n</def> <sym>(</sym><def>x</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>rotate' n xs</def><br />
    <kwa>where</kwa> <def>rotate'</def> <num>1</num> <def>xs</def>     <sym>=</sym> <def>x</def><sym>:</sym><def>xs<br />
          rotate' n</def> <sym>(</sym><def>x</def><sym>:</sym><def>xs</def><sym>) =</sym> <def>x</def><sym>:</sym><def>rotate'</def> <sym>(</sym><def>n</def><sym>-</sym><def></def><num>1</num><def></def><sym>)</sym> <def>xs<br />
<br />
permutations l</def> <sym>=</sym> <def>foldr permutations'</def> <sym>[</sym><def>l</def><sym>] [</sym><def></def><num>2</num><def>..length l</def><sym>]</sym><br />
<def></def>    <kwa>where</kwa> <def>permutations' n</def> <sym>=</sym> <def>foldr</def> <sym>(</sym><def>takeIter n</def> <sym>(</sym><def>rotate n</def><sym>)) []</sym><br />
<def><br />
takeIter</def> <num>0</num> <def>f x rest</def> <sym>=</sym> <def>rest<br />
takeIter n f x rest</def> <sym>=</sym> <def>x</def> <sym>:</sym> <def>takeIter</def> <sym>(</sym><def>n</def><sym>-</sym><def></def><num>1</num><def></def><sym>::</sym><def></def><kwb>Int</kwb><def></def><sym>)</sym> <def>f</def> <sym>(</sym><def>f x</def><sym>)</sym> <def>rest<br />
<br />
flop</def> <sym>::</sym> <def></def><kwb>Int</kwb> <def></def><sym>-&gt; [</sym><def></def><kwb>Int</kwb><def></def><sym>] -&gt; (</sym><def></def><kwb>Int</kwb><def></def><sym>, [</sym><def></def><kwb>Int</kwb><def></def><sym>])</sym><br />
<def>flop</def> <num>2</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x2</def><sym>,</sym> <def></def><num>2</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>3</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x3</def><sym>,</sym> <def>x2</def><sym>:</sym><def></def><num>3</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>4</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x4</def><sym>,</sym> <def>x3</def><sym>:</sym><def>x2</def><sym>:</sym><def></def><num>4</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>5</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x5</def><sym>,</sym> <def>x4</def><sym>:</sym><def>x3</def><sym>:</sym><def>x2</def><sym>:</sym><def></def><num>5</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>6</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x6</def><sym>,</sym> <def>x5</def><sym>:</sym><def>x4</def><sym>:</sym><def>x3</def><sym>:</sym><def>x2</def><sym>:</sym><def></def><num>6</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>7</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x7</def><sym>,</sym> <def>x6</def><sym>:</sym><def>x5</def><sym>:</sym><def>x4</def><sym>:</sym><def>x3</def><sym>:</sym><def>x2</def><sym>:</sym><def></def><num>7</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>8</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x8</def><sym>,</sym> <def>x7</def><sym>:</sym><def>x6</def><sym>:</sym><def>x5</def><sym>:</sym><def>x4</def><sym>:</sym><def>x3</def><sym>:</sym><def>x2</def><sym>:</sym><def></def><num>8</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>9</num>  <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>x9</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x9</def><sym>,</sym> <def>x8</def><sym>:</sym><def>x7</def><sym>:</sym><def>x6</def><sym>:</sym><def>x5</def><sym>:</sym><def>x4</def><sym>:</sym><def>x3</def><sym>:</sym><def>x2</def><sym>:</sym><def></def><num>9</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop</def> <num>10</num> <def></def><sym>(</sym><def>x2</def><sym>:</sym><def>x3</def><sym>:</sym><def>x4</def><sym>:</sym><def>x5</def><sym>:</sym><def>x6</def><sym>:</sym><def>x7</def><sym>:</sym><def>x8</def><sym>:</sym><def>x9</def><sym>:</sym><def>x10</def><sym>:</sym><def>xs</def><sym>) = (</sym><def>x10</def><sym>,</sym><def>x9</def><sym>:</sym><def>x8</def><sym>:</sym><def>x7</def><sym>:</sym><def>x6</def><sym>:</sym><def>x5</def><sym>:</sym><def>x4</def><sym>:</sym><def>x3</def><sym>:</sym><def>x2</def><sym>:</sym><def></def><num>10</num><def></def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>flop n xs</def> <sym>=</sym> <def>rs</def><br />
  <kwa>where</kwa> <def></def><sym>(</sym><def>rs</def><sym>,</sym> <def>ys</def><sym>)          =</sym> <def>flop' n xs ys<br />
        flop'</def> <num>2</num> <def></def><sym>(</sym><def>x</def><sym>:</sym><def>xs</def><sym>)</sym> <def>ys</def> <sym>= ((</sym><def>x</def><sym>,</sym> <def>ys</def><sym>),</sym> <def>n</def><sym>:</sym><def>xs</def><sym>)</sym><br />
<def>        flop' n</def> <sym>(</sym><def>x</def><sym>:</sym><def>xs</def><sym>)</sym> <def>ys</def> <sym>=</sym> <def>flop'</def> <sym>(</sym><def>n</def><sym>-</sym><def></def><num>1</num><def></def><sym>)</sym> <def>xs</def> <sym>(</sym><def>x</def><sym>:</sym><def>ys</def><sym>)</sym><br />
<def><br />
steps</def> <sym>::</sym> <def></def><kwb>Int</kwb> <def></def><sym>-&gt; [</sym><def></def><kwb>Int</kwb><def></def><sym>] -&gt;</sym> <def></def><kwb>Int</kwb><br />
<def>steps n</def>    <sym>(</sym><def>a</def><sym>:</sym><def></def><kwa>as</kwa><def></def><sym>) =</sym> <def>steps' n</def> <sym>(</sym><def>a</def><sym>,</sym><def></def><kwa>as</kwa><def></def><sym>)</sym><br />
<def><br />
steps' n</def> <sym>(</sym><def></def><num>1</num><def></def><sym>,</sym><def>_</def><sym>)  =</sym> <def>n<br />
steps' n</def> <sym>(</sym><def>t</def><sym>,</sym><def>ts</def><sym>) =</sym> <def>steps'</def> <sym>(</sym><def>n</def><sym>+</sym><def></def><num>1</num><def></def><sym>) (</sym><def>flop t ts</def><sym>)</sym><br />
<def><br />
main</def> <sym>=</sym> <def></def><kwa>do</kwa> <def>n</def> <sym>&lt;-</sym> <def>getArgs</def> <sym>&gt;&gt;=</sym> <def>return . read . head</def><br />
          <kwa>let</kwa> <def>p</def> <sym>=</sym> <def>permutations</def> <sym>[</sym><def></def><num>1</num><def>..n</def><sym>]</sym><br />
<def>          mapM_</def> <sym>(</sym><def>putStrLn . concatMap show</def><sym>)</sym> <def>$ take</def> <num>30</num> <def>p<br />
          putStr $</def> <str>&quot;Pfannkuchen(&quot;</str><def></def> <sym>++</sym> <def>show n</def> <sym>++</sym> <def></def><str>&quot;) = &quot;</str><def><br />
          putStrLn . show $ foldl'</def> <sym>(</sym><def>flip</def> <sym>(</sym><def>max . steps</def> <num>0</num><def></def><sym>))</sym> <def></def><num>0</num> <def>p</def><br />
</source>
