<source>
<def></def><slc>;;; The Computer Language Benchmarks Game</slc><br />
<def></def><slc>;;; http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>;;; contributed by Matthew Flatt</slc><br />
<def><br />
#lang scheme</def><sym>/</sym><def>base</def><br />
<sym>(</sym><def>require scheme</def><sym>/</sym><def>cmdline</def><sym>)</sym><br />
<def></def><br />
<slc>;; Each thread runs this loop:</slc><br />
<def></def><sym>(</sym><def>define</def> <sym>(</sym><def>run id next</def><sym>)</sym><br />
<def></def>  <sym>(</sym><def>let</def> <sym>([</sym><def>v</def> <sym>(</sym><def>thread</def><sym>-</sym><def>receive</def><sym>)])</sym><br />
<def></def>    <sym>(</sym><def></def><kwa>cond</kwa><br />
<def></def>     <sym>[(</sym><def>zero? v</def><sym>)</sym> <def></def><slc>;; Done</slc><br />
<def></def>      <sym>(</sym><def>printf</def> <str>&quot;~a</str><esc>\</esc><str>n&quot;</str><def> id</def><sym>)</sym><br />
<def></def>      <sym>(</sym><def></def><kwa>exit</kwa><def></def><sym>)]</sym><br />
<def></def>     <sym>[</sym><def>else</def> <slc>;; Keep going</slc><br />
<def></def>      <sym>(</sym><def>thread</def><sym>-</sym><def>send next</def> <sym>(</sym><def>sub1 v</def><sym>))</sym><br />
<def></def>      <sym>(</sym><def>run id next</def><sym>)])))</sym><br />
<def></def><br />
<br />
<sym>(</sym><def>let</def> <sym>([</sym><def>n</def> <sym>(</sym><def></def><kwa>command</kwa><def></def><sym>-</sym><def></def><kwa>line</kwa> <def>#</def><sym>:</sym><def>args</def> <sym>(</sym><def>n</def><sym>) (</sym><def>string</def><sym>-&gt;</sym><def>number n</def><sym>))])</sym><br />
<def></def>  <slc>;; The original thread is #503. Create the rest:</slc><br />
<def></def>  <sym>(</sym><def>let</def> <sym>([</sym><def>t1</def> <sym>(</sym><def>for</def><sym>/</sym><def>fold</def> <sym>([</sym><def>next</def> <sym>(</sym><def>current</def><sym>-</sym><def>thread</def><sym>)])</sym><br />
<def></def>                      <sym>([</sym><def>id</def> <sym>(</sym><def>in</def><sym>-</sym><def>range</def> <num>502 0</num> <def></def><sym>-</sym><def></def><num>1</num><def></def><sym>)])</sym><br />
<def></def>              <sym>(</sym><def>thread</def> <sym>(</sym><def></def><kwa>lambda</kwa> <def></def><sym>() (</sym><def>run id next</def><sym>))))])</sym><br />
<def></def>    <slc>;; Start:</slc><br />
<def></def>    <sym>(</sym><def>thread</def><sym>-</sym><def>send t1 n</def><sym>)</sym><br />
<def></def>    <sym>(</sym><def>run</def> <num>503</num> <def>t1</def><sym>)))</sym><def></def><br />
</source>
