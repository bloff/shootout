<source>
<def></def><slc># The Computer Language Benchmarks Game</slc><br />
<def></def><slc>#   http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc>#   contributed by Robert Bradshaw</slc><br />
<def></def><slc>#   modified by Ruud H.G.van Tol</slc><br />
<def></def><slc>#   modified by Emanuele Zeppieri</slc><br />
<def></def><slc>#   modified to use Math:GMP by Kuang-che Wu</slc><br />
<def></def><br />
<kwa>use</kwa> <def></def><kwd>strict</kwd><def></def><sym>;</sym><br />
<def></def><kwa>use</kwa> <def>Math</def><sym>::</sym><def></def><kwd>GMP</kwd><def></def><sym>;</sym><br />
<def></def><br />
<kwc>my</kwc><def></def><sym>(</sym><def></def><kwb>$z0</kwb><def></def><sym>,</sym> <def></def><kwb>$z1</kwb><def></def><sym>,</sym> <def></def><kwb>$z2</kwb><def></def><sym>) =</sym> <def>map Math</def><sym>::</sym><def>GMP</def><sym>-&gt;</sym><def></def><kwd>new</kwd><def></def><sym>(</sym><def></def><kwb>$_</kwb><def></def><sym>),</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>extract_digit</def> <sym>{</sym> <def></def><kwa>return</kwa> <def></def><sym>(</sym><def></def><kwb>$z0</kwb><def></def><sym>*</sym><def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]+</sym><def></def><kwb>$z1</kwb><def></def><sym>)/</sym><def></def><kwb>$z2</kwb><def></def><sym>; }</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>compose</def> <sym>{</sym><br />
<def></def>    <kwa>if</kwa> <def></def><sym>(</sym> <def>defined</def> <kwb>$_</kwb><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>] ) {</sym><br />
<def></def>        <kwb>$z1</kwb> <def></def><sym>=</sym> <def></def><kwb>$z1</kwb><def></def><sym>*</sym><def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]+</sym><def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]*</sym><def></def><kwb>$z2</kwb><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym> <def></def><kwa>else</kwa> <def></def><sym>{</sym><br />
<def></def>        <kwb>$z1</kwb> <def></def><sym>=</sym> <def></def><kwb>$z1</kwb><def></def><sym>*</sym><def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>]+</sym><def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]*</sym><def></def><kwb>$z0</kwb><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def>    <kwb>$z0</kwb> <def></def><sym>=</sym> <def></def><kwb>$z0</kwb><def></def><sym>*</sym><def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def></def>    <kwb>$z2</kwb> <def></def><sym>=</sym> <def></def><kwb>$z2</kwb><def></def><sym>*</sym><def></def><kwb>$_</kwb><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>];</sym><br />
<def></def>    <kwa>return</kwa><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>my</kwc> <def></def><kwb>$n</kwb> <def></def><sym>=</sym> <def></def><kwb>$ARGV</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def></def><sym>($,, $</sym><def>\</def><sym>) = (</sym><def></def><str>&quot;</str><esc>\t</esc><str>&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>);</sym><br />
<def></def><kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>$i</kwb><def></def><sym>,</sym> <def></def><kwb>$s</kwb><def></def><sym>,</sym> <def></def><kwb>$d</kwb><def></def><sym>);</sym> <def></def><kwc>my</kwc> <def></def><kwb>$k</kwb> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def><br />
<slc># main loop</slc><br />
<def></def><kwa>for</kwa> <def></def><kwb>$i</kwb> <def></def><sym>(</sym><def></def><num>1</num><def></def><sym>..</sym><def></def><kwb>$n</kwb><def></def><sym>) {</sym><br />
<def></def>    <kwa>while</kwa> <def></def><sym>(</sym><br />
<def></def>        <kwb>$z0</kwb><def></def><sym>&gt;</sym><def></def><kwb>$z2</kwb> <def></def><sym>|| (</sym> <def></def><kwb>$d</kwb> <def></def><sym>=</sym> <def></def><kwd>extract_digit</kwd><def></def><sym>(</sym><def></def><num>3</num><def></def><sym>) ) !=</sym> <def></def><kwd>extract_digit</kwd><def></def><sym>(</sym><def></def><num>4</num><def></def><sym>)</sym><br />
<def></def>    <sym>) {</sym><br />
<def></def>        <slc># y not safe</slc><br />
<def></def>        <kwb>$k</kwb><def></def><sym>++;</sym> <def></def><kwd>compose</kwd><def></def><sym>(</sym><def></def><kwb>$k</kwb><def></def><sym>,</sym> <def></def><num>4</num><def></def><sym>*</sym><def></def><kwb>$k</kwb><def></def><sym>+</sym><def></def><num>2</num><def></def><sym>,</sym> <def></def><num>2</num><def></def><sym>*</sym><def></def><kwb>$k</kwb><def></def><sym>+</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>    <sym>}</sym><br />
<def></def>    <kwd>compose</kwd><def></def><sym>(</sym><def></def><num>10</num><def></def><sym>, -</sym><def></def><num>10</num><def></def><sym>*</sym><def></def><kwb>$d</kwb><def></def><sym>,</sym> <def></def><num>1</num><def></def><sym>,</sym> <def></def><num>1</num><def></def><sym>);</sym><br />
<def></def>    <kwb>$s</kwb> <def></def><sym>.=</sym> <def></def><kwb>$d</kwb><def></def><sym>;</sym><br />
<def></def><br />
    <kwa>unless</kwa> <def></def><sym>(</sym> <def></def><kwb>$i</kwb> <def></def><sym>%</sym> <def></def><num>10</num> <def></def><sym>) {</sym> <def></def><kwc>print</kwc> <def></def><kwb>$s</kwb><def></def><sym>,</sym> <def></def><str>&quot;:$i&quot;</str><def></def><sym>;</sym> <def>undef</def> <kwb>$s</kwb> <def></def><sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>$s</kwb> <def></def><sym>.=</sym> <def></def><str>' '</str><def></def> <kwd>x</kwd> <def></def><sym>(</sym><def></def><num>10</num><def></def><sym>-</sym><def></def><kwb>$i</kwb><def></def><sym>)</sym> <def></def><kwa>if</kwa> <def></def><kwb>$i</kwb> <def></def><sym>=</sym> <def></def><kwb>$n</kwb> <def></def><sym>%</sym> <def></def><num>10</num><def></def><sym>;</sym><br />
<def></def><br />
<kwc>print</kwc> <def></def><kwb>$s</kwb><def></def><sym>,</sym> <def></def><str>&quot;:$n&quot;</str><def></def> <kwa>if</kwa> <def></def><kwb>$s</kwb><def></def><br />
</source>
