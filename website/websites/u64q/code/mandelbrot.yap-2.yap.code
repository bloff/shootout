<span class="hl slc">% ----------------------------------------------------------------------</span>
<span class="hl slc">% The Computer Language Benchmarks Game</span>
<span class="hl slc">% http://shootout.alioth.debian.org/</span>

<span class="hl slc">% Modified to run with YAP by Glendon Holst</span>
<span class="hl slc">% ----------------------------------------------------------------------</span>

<span class="hl sym">:-</span> yap_flag<span class="hl sym">(</span>unknown<span class="hl sym">,</span>error<span class="hl sym">).</span>

<span class="hl sym">:-</span> initialization<span class="hl sym">(</span>main<span class="hl sym">).</span>

main <span class="hl sym">:-</span>
  unix<span class="hl sym">(</span> argv<span class="hl sym">([</span>H<span class="hl sym">|</span>_<span class="hl sym">]) ),</span> number_atom<span class="hl sym">(</span>Height<span class="hl sym">,</span>H<span class="hl sym">),</span> Width <span class="hl sym">=</span> Height<span class="hl sym">,</span>

  format<span class="hl sym">(</span><span class="hl str">'P4~N~d ~d~N'</span><span class="hl sym">,[</span>Height<span class="hl sym">,</span> Width<span class="hl sym">]),</span>
  pointsY<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>

pointsY<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">,</span>
	OUTFLAG0<span class="hl sym">,</span>
	BYTEOUT0<span class="hl sym">,</span>
	BITN0<span class="hl sym">) :-</span>
	Y1 <span class="hl kwa">is</span> Y <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Height <span class="hl sym">&gt;=</span> Y1<span class="hl sym">, !,</span>
	pointsX<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span>
		OUTFLAG0<span class="hl sym">,</span> OUTFLAG<span class="hl sym">,</span>
		BYTEOUT0<span class="hl sym">,</span> BYTEOUT<span class="hl sym">,</span>
		BITN0<span class="hl sym">,</span> BITN<span class="hl sym">),</span>
	pointsY<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y1<span class="hl sym">,</span> X<span class="hl sym">,</span>
		OUTFLAG<span class="hl sym">,</span>
		BYTEOUT<span class="hl sym">,</span>
		BITN<span class="hl sym">).</span>

pointsY<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

<span class="hl slc">% ------------- %</span>

pointsX<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">,</span>
	OUTFLAG0<span class="hl sym">,</span> OUTFLAG<span class="hl sym">,</span>
	BYTEOUT0<span class="hl sym">,</span> BYTEOUT<span class="hl sym">,</span>
	BITN0<span class="hl sym">,</span> BITN<span class="hl sym">) :-</span>

	X1 <span class="hl kwa">is</span> X <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Width <span class="hl sym">&gt;=</span> X1<span class="hl sym">, !,</span>

	<span class="hl sym">(</span>mandel<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">,</span> <span class="hl num">50</span><span class="hl sym">) -&gt;</span> LimitAdj <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl sym">;</span> LimitAdj <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">),</span>

	BITN1 <span class="hl kwa">is</span> BITN0 <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span>
	<span class="hl sym">(</span>BITN1 <span class="hl sym">==</span> <span class="hl num">8</span> <span class="hl sym">-&gt;</span> OUTFLAG1 <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">;</span> OUTFLAG1 <span class="hl sym">=</span> OUTFLAG0<span class="hl sym">),</span>

	BYTEOUT1 <span class="hl kwa">is</span> BYTEOUT0 <span class="hl sym">*</span> <span class="hl num">2</span> <span class="hl sym">+</span> LimitAdj<span class="hl sym">,</span>
	<span class="hl sym">(</span>
		<span class="hl sym">(</span>Width <span class="hl sym">==</span> X1<span class="hl sym">,</span> BITN1 \<span class="hl sym">==</span> <span class="hl num">8</span><span class="hl sym">) -&gt;</span>
		<span class="hl sym">(</span>BYTEOUT2 <span class="hl kwa">is</span> BYTEOUT1 <span class="hl sym">*</span> <span class="hl kwb">integer</span><span class="hl sym">(</span><span class="hl num">2</span> <span class="hl sym">** (</span><span class="hl num">8</span> <span class="hl sym">-</span> Width <span class="hl kwa">mod</span> <span class="hl num">8</span><span class="hl sym">)),</span> OUTFLAG2 <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">)</span>
	<span class="hl sym">;</span>
		<span class="hl sym">(</span>BYTEOUT2 <span class="hl sym">=</span> BYTEOUT1<span class="hl sym">,</span> OUTFLAG2 <span class="hl sym">=</span> OUTFLAG1<span class="hl sym">)</span>
	<span class="hl sym">),</span>

	output<span class="hl sym">(</span>OUTFLAG2<span class="hl sym">,</span> OUTFLAG3<span class="hl sym">,</span> BYTEOUT2<span class="hl sym">,</span> BYTEOUT3<span class="hl sym">,</span> BITN1<span class="hl sym">,</span> BITN2<span class="hl sym">),</span>

	pointsX<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X1<span class="hl sym">,</span>
		OUTFLAG3<span class="hl sym">,</span> OUTFLAG<span class="hl sym">,</span>
		BYTEOUT3<span class="hl sym">,</span> BYTEOUT<span class="hl sym">,</span>
		BITN2<span class="hl sym">,</span> BITN<span class="hl sym">).</span>

pointsX<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> OUTFLAG<span class="hl sym">,</span> OUTFLAG<span class="hl sym">,</span> BYTEOUT<span class="hl sym">,</span> BYTEOUT<span class="hl sym">,</span> BITN<span class="hl sym">,</span> BITN<span class="hl sym">) :- !.</span>

<span class="hl slc">% ------------- %</span>

mandel<span class="hl sym">(</span>Height<span class="hl sym">,</span> Width<span class="hl sym">,</span> Y<span class="hl sym">,</span> X<span class="hl sym">,</span> Repetitions<span class="hl sym">) :-</span>
	Cr <span class="hl kwa">is</span> <span class="hl sym">(</span><span class="hl num">2.0</span> <span class="hl sym">*</span> X <span class="hl sym">/</span> Width <span class="hl sym">-</span> <span class="hl num">1.5</span><span class="hl sym">),</span> Ci <span class="hl kwa">is</span> <span class="hl sym">(</span><span class="hl num">2.0</span> <span class="hl sym">*</span> Y <span class="hl sym">/</span> Height <span class="hl sym">-</span> <span class="hl num">1.0</span><span class="hl sym">),</span>
	mandel_<span class="hl sym">(</span>Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> <span class="hl num">0.0</span><span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">).</span>

mandel_<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> Repetitions<span class="hl sym">) :- !,</span>
	Limit <span class="hl kwa">is</span> Zr <span class="hl sym">*</span> Zr <span class="hl sym">+</span> Zi <span class="hl sym">*</span> Zi<span class="hl sym">,</span> Limit <span class="hl sym">&gt;</span> <span class="hl num">4.0</span><span class="hl sym">.</span>

mandel_<span class="hl sym">(</span>Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Zr<span class="hl sym">,</span> Zi<span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> N<span class="hl sym">) :-</span>
	Zr1 <span class="hl kwa">is</span> Zr <span class="hl sym">*</span> Zr <span class="hl sym">-</span> Zi <span class="hl sym">*</span> Zi <span class="hl sym">+</span> Cr<span class="hl sym">,</span>
	Zi1 <span class="hl kwa">is</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> Zr <span class="hl sym">*</span> Zi <span class="hl sym">+</span> Ci<span class="hl sym">,</span>
	Limit <span class="hl kwa">is</span> Zr1 <span class="hl sym">*</span> Zr1 <span class="hl sym">+</span> Zi1 <span class="hl sym">*</span> Zi1<span class="hl sym">,</span>
	Limit <span class="hl sym">=&lt;</span> <span class="hl num">4.0</span><span class="hl sym">,</span> N1 <span class="hl kwa">is</span> N <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">, !,</span>
	mandel_<span class="hl sym">(</span>Cr<span class="hl sym">,</span> Ci<span class="hl sym">,</span> Zr1<span class="hl sym">,</span> Zi1<span class="hl sym">,</span> Repetitions<span class="hl sym">,</span> N1<span class="hl sym">).</span>

mandel_<span class="hl sym">(</span>_<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">,</span> _<span class="hl sym">) :- !.</span>

<span class="hl slc">% ------------- %</span>

output<span class="hl sym">(</span>OUTFLAG0<span class="hl sym">,</span> OUTFLAG<span class="hl sym">,</span> BYTEOUT0<span class="hl sym">,</span> BYTEOUT<span class="hl sym">,</span> BITN0<span class="hl sym">,</span> BITN<span class="hl sym">) :-</span>
<span class="hl sym">(</span>
	OUTFLAG0 <span class="hl sym">=:=</span> <span class="hl num">1</span> <span class="hl sym">-&gt;</span>
	<span class="hl sym">(</span>
		<span class="hl kwb">put_byte</span><span class="hl sym">(</span>BYTEOUT0<span class="hl sym">),</span>
		BITN <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
		BYTEOUT <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">,</span>
		OUTFLAG <span class="hl sym">=</span> <span class="hl num">0</span>
	<span class="hl sym">)</span>
<span class="hl sym">;</span>
	<span class="hl sym">(</span>
		BYTEOUT <span class="hl sym">=</span> BYTEOUT0<span class="hl sym">,</span>
		BITN <span class="hl sym">=</span> BITN0<span class="hl sym">,</span>
		OUTFLAG <span class="hl sym">=</span> OUTFLAG0
	<span class="hl sym">)</span>
<span class="hl sym">).</span>

<span class="hl slc">% ------------------------------- %</span>
