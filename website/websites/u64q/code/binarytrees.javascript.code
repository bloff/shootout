<source>
<def></def><com>/* The Great Computer Language Shootout</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com>   contributed by Isaac Gouy */</com><def></def><br />
<br />
<kwa>function</kwa> <def></def><kwd>TreeNode</kwd><def></def><sym>(</sym><def>left</def><sym>,</sym><def>right</def><sym>,</sym><def>item</def><sym>){</sym><br />
<def></def>   <kwa>this</kwa><def></def><sym>.</sym><def>left</def> <sym>=</sym> <def>left</def><sym>;</sym><br />
<def></def>   <kwa>this</kwa><def></def><sym>.</sym><def>right</def> <sym>=</sym> <def>right</def><sym>;</sym><br />
<def></def>   <kwa>this</kwa><def></def><sym>.</sym><def>item</def> <sym>=</sym> <def>item</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def><br />
TreeNode</def><sym>.</sym><def></def><kwa>prototype</kwa><def></def><sym>.</sym><def>itemCheck</def> <sym>=</sym> <def></def><kwa>function</kwa><def></def><sym>(){</sym><br />
<def></def>   <kwa>if</kwa> <def></def><sym>(</sym><def></def><kwa>this</kwa><def></def><sym>.</sym><def>left</def><sym>==</sym><def></def><kwa>null</kwa><def></def><sym>)</sym> <def></def><kwa>return this</kwa><def></def><sym>.</sym><def>item</def><sym>;</sym><br />
<def></def>   <kwa>else return this</kwa><def></def><sym>.</sym><def>item</def> <sym>+</sym> <def></def><kwa>this</kwa><def></def><sym>.</sym><def>left</def><sym>.</sym><def></def><kwd>itemCheck</kwd><def></def><sym>() -</sym> <def></def><kwa>this</kwa><def></def><sym>.</sym><def>right</def><sym>.</sym><def></def><kwd>itemCheck</kwd><def></def><sym>();</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>bottomUpTree</kwd><def></def><sym>(</sym><def>item</def><sym>,</sym><def>depth</def><sym>){</sym><br />
<def></def>   <kwa>if</kwa> <def></def><sym>(</sym><def>depth</def><sym>&gt;</sym><def></def><num>0</num><def></def><sym>){</sym><br />
<def></def>      <kwa>return new</kwa> <def></def><kwd>TreeNode</kwd><def></def><sym>(</sym><br />
<def></def>          <kwd>bottomUpTree</kwd><def></def><sym>(</sym><def></def><num>2</num><def></def><sym>*</sym><def>item</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym> <def>depth</def><sym>-</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>         <sym>,</sym><def></def><kwd>bottomUpTree</kwd><def></def><sym>(</sym><def></def><num>2</num><def></def><sym>*</sym><def>item</def><sym>,</sym> <def>depth</def><sym>-</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>         <sym>,</sym><def>item</def><br />
      <sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwa>else</kwa> <def></def><sym>{</sym><br />
<def></def>      <kwa>return new</kwa> <def></def><kwd>TreeNode</kwd><def></def><sym>(</sym><def></def><kwa>null</kwa><def></def><sym>,</sym><def></def><kwa>null</kwa><def></def><sym>,</sym><def>item</def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<br />
<kwa>var</kwa> <def>minDepth</def> <sym>=</sym> <def></def><num>4</num><def></def><sym>;</sym><br />
<def></def><kwa>var</kwa> <def>n</def> <sym>=</sym> <def>arguments</def><sym>[</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def></def><kwa>var</kwa> <def>maxDepth</def> <sym>=</sym> <def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwc>max</kwc><def></def><sym>(</sym><def>minDepth</def> <sym>+</sym> <def></def><num>2</num><def></def><sym>,</sym> <def>n</def><sym>);</sym><br />
<def></def><kwa>var</kwa> <def>stretchDepth</def> <sym>=</sym> <def>maxDepth</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>var</kwa> <def>check</def> <sym>=</sym> <def></def><kwd>bottomUpTree</kwd><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym><def>stretchDepth</def><sym>).</sym><def></def><kwd>itemCheck</kwd><def></def><sym>();</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def></def><str>&quot;stretch tree of depth &quot;</str><def></def> <sym>+</sym> <def>stretchDepth</def> <sym>+</sym> <def></def><str>&quot;</str><esc>\t</esc> <str>check: &quot;</str><def></def> <sym>+</sym> <def>check</def><sym>);</sym><br />
<def></def><br />
<kwa>var</kwa> <def>longLivedTree</def> <sym>=</sym> <def></def><kwd>bottomUpTree</kwd><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym><def>maxDepth</def><sym>);</sym><br />
<def></def><kwa>for</kwa> <def></def><sym>(</sym><def></def><kwa>var</kwa> <def>depth</def><sym>=</sym><def>minDepth</def><sym>;</sym> <def>depth</def><sym>&lt;=</sym><def>maxDepth</def><sym>;</sym> <def>depth</def><sym>+=</sym><def></def><num>2</num><def></def><sym>){</sym><br />
<def></def>   <kwa>var</kwa> <def>iterations</def> <sym>=</sym> <def></def><num>1</num> <def></def><sym>&lt;&lt; (</sym><def>maxDepth</def> <sym>-</sym> <def>depth</def> <sym>+</sym> <def>minDepth</def><sym>);</sym><br />
<def><br />
   check</def> <sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>   <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwa>var</kwa> <def>i</def><sym>=</sym><def></def><num>1</num><def></def><sym>;</sym> <def>i</def><sym>&lt;=</sym><def>iterations</def><sym>;</sym> <def>i</def><sym>++){</sym><br />
<def>      check</def> <sym>+=</sym> <def></def><kwd>bottomUpTree</kwd><def></def><sym>(</sym><def>i</def><sym>,</sym><def>depth</def><sym>).</sym><def></def><kwd>itemCheck</kwd><def></def><sym>();</sym><br />
<def>      check</def> <sym>+=</sym> <def></def><kwd>bottomUpTree</kwd><def></def><sym>(-</sym><def>i</def><sym>,</sym><def>depth</def><sym>).</sym><def></def><kwd>itemCheck</kwd><def></def><sym>();</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwc>print</kwc><def></def><sym>(</sym><def>iterations</def><sym>*</sym><def></def><num>2</num> <def></def><sym>+</sym> <def></def><str>&quot;</str><esc>\t</esc> <str>trees of depth &quot;</str><def></def> <sym>+</sym> <def>depth</def> <sym>+</sym> <def></def><str>&quot;</str><esc>\t</esc> <str>check: &quot;</str><def></def> <sym>+</sym> <def>check</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>print</kwc><def></def><sym>(</sym><def></def><str>&quot;long lived tree of depth &quot;</str><def></def> <sym>+</sym> <def>maxDepth</def> <sym>+</sym> <def></def><str>&quot;</str><esc>\t</esc> <str>check: &quot;</str><def></def><br />
   <sym>+</sym> <def>longLivedTree</def><sym>.</sym><def></def><kwd>itemCheck</kwd><def></def><sym>());</sym><def></def><br />
</source>
