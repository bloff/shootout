<source>
<def></def><slc># The Computer Language Benchmarks Game</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># contributed by Tupteq</slc><br />
<def></def><br />
<kwa>import</kwa> <def>sys</def><br />
<br />
<kwa>def</kwa> <def></def><kwd>main</kwd><def></def><sym>():</sym><br />
<def>    cout</def> <sym>=</sym> <def>sys</def><sym>.</sym><def>stdout</def><sym>.</sym><def>write<br />
    size</def> <sym>=</sym> <def></def><kwb>int</kwb><def></def><sym>(</sym><def>sys</def><sym>.</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>])</sym><br />
<def>    xr_size</def> <sym>=</sym> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def>size</def><sym>)</sym><br />
<def>    xr_iter</def> <sym>=</sym> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def></def><num>50</num><def></def><sym>)</sym><br />
<def>    bit</def> <sym>=</sym> <def></def><num>128</num><br />
<def>    byte_acc</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def><br />
    <kwd>cout</kwd><def></def><sym>(</sym><def></def><str>&quot;P4</str><esc>\n</esc><str>%d %d</str><esc>\n</esc><str>&quot;</str><def></def> <sym>% (</sym><def>size</def><sym>,</sym> <def>size</def><sym>))</sym><br />
<def><br />
    size</def> <sym>=</sym> <def></def><kwb>float</kwb><def></def><sym>(</sym><def>size</def><sym>)</sym><br />
<def></def>    <kwa>for</kwa> <def>y</def> <kwa>in</kwa> <def>xr_size</def><sym>:</sym><br />
<def>        fy</def> <sym>=</sym> <def></def><num>2</num><def>j</def> <sym>*</sym> <def>y</def> <sym>/</sym> <def>size</def> <sym>-</sym> <def></def><num>1</num><def>j</def><br />
        <kwa>for</kwa> <def>x</def> <kwa>in</kwa> <def>xr_size</def><sym>:</sym><br />
<def>            z</def> <sym>=</sym> <def></def><num>0</num><def>j<br />
            c</def> <sym>=</sym> <def></def><num>2</num><def></def><sym>. *</sym> <def>x</def> <sym>/</sym> <def>size</def> <sym>-</sym> <def></def><num>1.5</num> <def></def><sym>+</sym> <def>fy</def><br />
<br />
            <kwa>for</kwa> <def>i</def> <kwa>in</kwa> <def>xr_iter</def><sym>:</sym><br />
<def>                z</def> <sym>=</sym> <def>z</def> <sym>*</sym> <def>z</def> <sym>+</sym> <def>c</def><br />
                <kwa>if</kwa> <def></def><kwb>abs</kwb><def></def><sym>(</sym><def>z</def><sym>) &gt;=</sym> <def></def><num>2.0</num><def></def><sym>:</sym><br />
<def></def>                    <kwa>break</kwa><br />
<def></def>            <kwa>else</kwa><def></def><sym>:</sym><br />
<def>                byte_acc</def> <sym>+=</sym> <def>bit</def><br />
<br />
            <kwa>if</kwa> <def>bit</def> <sym>&gt;</sym> <def></def><num>1</num><def></def><sym>:</sym><br />
<def>                bit</def> <sym>&gt;&gt;=</sym> <def></def><num>1</num><br />
<def></def>            <kwa>else</kwa><def></def><sym>:</sym><br />
<def></def>                <kwd>cout</kwd><def></def><sym>(</sym><def></def><kwb>chr</kwb><def></def><sym>(</sym><def>byte_acc</def><sym>))</sym><br />
<def>                bit</def> <sym>=</sym> <def></def><num>128</num><br />
<def>                byte_acc</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def><br />
        <kwa>if</kwa> <def>bit</def> <sym>!=</sym> <def></def><num>128</num><def></def><sym>:</sym><br />
<def></def>            <kwd>cout</kwd><def></def><sym>(</sym><def></def><kwb>chr</kwb><def></def><sym>(</sym><def>byte_acc</def><sym>))</sym><br />
<def>            bit</def> <sym>=</sym> <def></def><num>128</num><br />
<def>            byte_acc</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>()</sym><def></def><br />
</source>
