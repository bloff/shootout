<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># Contributed by Sokolov Yura</span>
<span class="hl slc"># Modified by Rick Branson</span>
<span class="hl slc"># Modified by YAGUCHI Yuya</span>

<span class="hl kwb">$last</span> <span class="hl sym">=</span> <span class="hl num">42.0</span>

GR_IM <span class="hl sym">=</span> <span class="hl num">139968.0</span>
GR_IA <span class="hl sym">=</span> <span class="hl num">3877.0</span>
GR_IC <span class="hl sym">=</span> <span class="hl num">29573.0</span>

alu <span class="hl sym">=</span>
   <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

iub <span class="hl sym">= [</span>
    <span class="hl sym">[</span><span class="hl str">&quot;a&quot;</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;c&quot;</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;g&quot;</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;t&quot;</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>

    <span class="hl sym">[</span><span class="hl str">&quot;B&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;D&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;H&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;K&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;M&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;N&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;R&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;S&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;V&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;W&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;Y&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
<span class="hl sym">]</span>

homosapiens <span class="hl sym">= [</span>
    <span class="hl sym">[</span><span class="hl str">&quot;a&quot;</span><span class="hl sym">,</span> <span class="hl num">0.3029549426680</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;c&quot;</span><span class="hl sym">,</span> <span class="hl num">0.1979883004921</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;g&quot;</span><span class="hl sym">,</span> <span class="hl num">0.1975473066391</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;t&quot;</span><span class="hl sym">,</span> <span class="hl num">0.3015094502008</span><span class="hl sym">],</span>
<span class="hl sym">]</span>

<span class="hl kwa">def</span> <span class="hl kwd">make_repeat_fasta</span><span class="hl sym">(</span>src<span class="hl sym">,</span> n<span class="hl sym">)</span>
    v <span class="hl sym">=</span> <span class="hl kwa">nil</span>
    width <span class="hl sym">=</span> <span class="hl num">60</span>
    l <span class="hl sym">=</span> src<span class="hl sym">.</span>length
    s <span class="hl sym">=</span> src <span class="hl sym">* ((</span>n <span class="hl sym">/</span> l<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">)</span>
    s<span class="hl sym">.</span>slice<span class="hl sym">!(</span>n<span class="hl sym">,</span> l<span class="hl sym">)</span>
    <span class="hl kwd">puts</span> <span class="hl sym">(</span>s<span class="hl sym">.</span><span class="hl kwd">scan</span><span class="hl sym">(</span><span class="hl kwc">/.{1,#{width}}/</span><span class="hl sym">).</span><span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">))</span>
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span>table<span class="hl sym">,</span> n<span class="hl sym">)</span>
    rand <span class="hl sym">=</span> <span class="hl kwa">nil</span>
    width <span class="hl sym">=</span> <span class="hl num">60</span>
    chunk <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">*</span> width
    prob <span class="hl sym">=</span> <span class="hl num">0.0</span>
    rwidth <span class="hl sym">= (</span><span class="hl num">1</span><span class="hl sym">..</span>width<span class="hl sym">)</span>
    table<span class="hl sym">.</span>each<span class="hl sym">{|</span>v<span class="hl sym">|</span> v<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]= (</span>prob <span class="hl sym">+=</span> v<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])}</span>

    collector <span class="hl sym">=</span> <span class="hl str">&quot;rand = ($last = ($last * GR_IA + GR_IC) % GR_IM) / GR_IM</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
    table<span class="hl sym">.</span>each <span class="hl kwa">do</span> <span class="hl sym">|</span>va<span class="hl sym">,</span> vb<span class="hl sym">|</span>
      collector <span class="hl sym">+=</span> <span class="hl str">&quot;next #{va.inspect} if #{vb.inspect} &gt; rand</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
    <span class="hl kwa">end</span>

    <span class="hl kwa">eval</span> <span class="hl sym">&lt;&lt;-</span>EOF
      <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">..(</span>n<span class="hl sym">/</span>width<span class="hl sym">)).</span>each <span class="hl kwa">do</span> <span class="hl sym">|</span>i<span class="hl sym">|</span>
        puts rwidth<span class="hl sym">.</span>collect<span class="hl sym">{</span><span class="hl slc">#{collector}}.join</span>
      <span class="hl kwa">end</span>
      <span class="hl kwa">if</span> n<span class="hl sym">%</span>width <span class="hl sym">!=</span> <span class="hl num">0</span>
        <span class="hl kwd">puts</span> <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">..(</span>n<span class="hl sym">%</span>width<span class="hl sym">)).</span>collect<span class="hl sym">{</span><span class="hl slc">#{collector}}.join</span>
      <span class="hl kwa">end</span>
    EOF
<span class="hl kwa">end</span>

n <span class="hl sym">= (</span><span class="hl kwc">ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span> <span class="hl kwa">or</span> <span class="hl num">27</span><span class="hl sym">).</span>to_i

puts <span class="hl str">&quot;&gt;ONE Homo sapiens alu&quot;</span>
<span class="hl kwd">make_repeat_fasta</span><span class="hl sym">(</span>alu<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">)</span>

puts <span class="hl str">&quot;&gt;TWO IUB ambiguity codes&quot;</span>
<span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span>iub<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">3</span><span class="hl sym">)</span>

puts <span class="hl str">&quot;&gt;THREE Homo sapiens frequency&quot;</span>
<span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span>homosapiens<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">5</span><span class="hl sym">)</span>

