<span class="hl slc">#</span>
<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># contributed by Klaus Friedel</span>
<span class="hl slc">#</span>

<span class="hl kwa">require</span> <span class="hl str">&quot;thread&quot;</span>

THREAD_COUNT <span class="hl sym">=</span> <span class="hl num">503</span>

<span class="hl kwa">class</span> Receiver
  <span class="hl kwb">&#64;next</span>
  <span class="hl kwb">&#64;mailbox</span>

  <span class="hl kwa">def</span> <span class="hl kwd">initialize</span><span class="hl sym">(</span>name<span class="hl sym">)</span>
    <span class="hl kwb">&#64;name</span> <span class="hl sym">=</span> name
    <span class="hl kwb">&#64;mailbox</span> <span class="hl sym">=</span> Queue<span class="hl sym">.</span>new
  <span class="hl kwa">end</span>

  <span class="hl kwa">def next</span><span class="hl sym">=(</span>n<span class="hl sym">)</span>
    <span class="hl kwb">&#64;next</span> <span class="hl sym">=</span> n
  <span class="hl kwa">end</span>

  <span class="hl kwa">def</span> <span class="hl kwd">put</span><span class="hl sym">(</span>msg<span class="hl sym">)</span>
    <span class="hl kwb">&#64;mailbox</span><span class="hl sym">.</span><span class="hl kwd">push</span><span class="hl sym">(</span>msg<span class="hl sym">)</span>
  <span class="hl kwa">end</span>

  <span class="hl kwa">def</span> messageloop
    <span class="hl kwa">while true</span>
      hopsRemaining <span class="hl sym">=</span> <span class="hl kwb">&#64;mailbox</span><span class="hl sym">.</span>pop
      <span class="hl kwa">if</span><span class="hl sym">(</span>hopsRemaining <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">)</span>
        print <span class="hl kwb">&#64;name</span><span class="hl sym">,</span> <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
        <span class="hl kwd">exit</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>
      <span class="hl kwa">end</span>
      <span class="hl kwb">&#64;next</span><span class="hl sym">.</span><span class="hl kwd">put</span><span class="hl sym">(</span>hopsRemaining <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">end</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>

<span class="hl slc">##########</span>
<span class="hl slc">#  Main  #</span>
<span class="hl slc">##########</span>
receivers <span class="hl sym">= []</span>
<span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span>THREAD_COUNT-1
  receivers<span class="hl sym">[</span>i<span class="hl sym">] =</span> Receiver<span class="hl sym">.</span><span class="hl kwd">new</span><span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
  <span class="hl kwa">if</span><span class="hl sym">(</span>i <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">)</span>
    receivers<span class="hl sym">[</span>i-1<span class="hl sym">].</span><span class="hl kwa">next</span> <span class="hl sym">=</span> receivers<span class="hl sym">[</span>i<span class="hl sym">]</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>
<span class="hl slc">#close the ring</span>
receivers<span class="hl sym">[</span>THREAD_COUNT-1<span class="hl sym">].</span><span class="hl kwa">next</span> <span class="hl sym">=</span> receivers<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>

<span class="hl slc"># start the threads</span>
<span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span>THREAD_COUNT-1
  Thread<span class="hl sym">.</span><span class="hl kwd">start</span><span class="hl sym">(</span>i<span class="hl sym">){|</span>k<span class="hl sym">|</span> receivers<span class="hl sym">[</span>k<span class="hl sym">].</span>messageloop<span class="hl sym">}</span>
<span class="hl kwa">end</span>

receivers<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span><span class="hl kwd">put</span><span class="hl sym">(</span><span class="hl kwc">ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>to_i<span class="hl sym">)</span>

sleep

