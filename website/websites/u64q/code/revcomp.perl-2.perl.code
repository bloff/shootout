<source>
<def></def><slc>#!/usr/bin/perl</slc><br />
<def></def><br />
<slc># The Great Computer Language Shootout</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># Contributed by Bradford Powell</slc><br />
<def></def><slc># Fixed slow print substr-solution, by Kjetil Skotheim</slc><br />
<def></def><br />
<br />
<kwa>use</kwa> <def></def><kwd>strict</kwd><def></def><sym>;</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>print_revcomp</def> <sym>{</sym><br />
<def></def>    <kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>$desc</kwb><def></def><sym>,</sym> <def></def><kwb>$s</kwb><def></def><sym>) =</sym> <def></def><kwb>@_</kwb><def></def><sym>;</sym><br />
<def></def>    <kwa>return if not</kwa> <def></def><kwb>$desc</kwb><def></def><sym>;</sym><br />
<def></def>    <kwc>print</kwc> <def></def><kwb>$desc</kwb><def></def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>    <kwb>$s</kwb> <def></def><sym>=</sym>  <def>reverse</def> <kwb>$s</kwb><def></def><sym>;</sym><br />
<def></def>    <kwb>$s</kwb> <def></def><sym>=~</sym> <def>tr</def><sym>{</sym><def>wsatugcyrkmbdhvnATUGCYRKMBDHVN</def><sym>}</sym><br />
<def></def>            <sym>{</sym><def>WSTAACGRYMKVHDBNTAACGRYMKVHDBN</def><sym>};</sym><br />
<def></def>    <kwc>my</kwc><def></def><sym>(</sym><def></def><kwb>$i</kwb><def></def><sym>,</sym><def></def><kwb>$stop</kwb><def></def><sym>)=(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><kwd>length</kwd><def></def><sym>(</sym><def></def><kwb>$s</kwb><def></def><sym>)/</sym><def></def><num>60</num><def></def><sym>);</sym><br />
<def></def>    <kwc>print</kwc> <def></def><kwd>substr</kwd><def></def><sym>(</sym><def></def><kwb>$s</kwb><def></def><sym>,</sym><def></def><kwb>$i</kwb><def></def><sym>++*</sym><def></def><num>60</num><def></def><sym>,</sym><def></def><num>60</num><def></def><sym>),</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def>  <kwa>while</kwa> <def></def><kwb>$i</kwb><def></def><sym>&lt;</sym><def></def><kwb>$stop</kwb><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>my</kwc><def></def><sym>(</sym><def></def><kwb>$desc</kwb><def></def><sym>,</sym><def></def><kwb>$seq</kwb><def></def><sym>);</sym><br />
<def></def><kwa>while</kwa> <def></def><sym>(&lt;</sym><def>STDIN</def><sym>&gt;) {</sym><br />
<def></def>    <kwd>chomp</kwd><def></def><sym>;</sym><br />
<def></def>    <kwa>if</kwa> <def></def><sym>(/^&gt;/) {</sym><br />
<def></def>        <kwd>print_revcomp</kwd><def></def><sym>(</sym><def></def><kwb>$desc</kwb><def></def><sym>,</sym> <def></def><kwb>$seq</kwb><def></def><sym>);</sym><br />
<def></def>        <kwb>$desc</kwb> <def></def><sym>=</sym> <def></def><kwb>$_</kwb><def></def><sym>;</sym><br />
<def></def>        <kwb>$seq</kwb> <def></def><sym>=</sym> <def></def><str>''</str><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym> <def></def><kwa>else</kwa> <def></def><sym>{</sym><br />
<def></def>        <kwb>$seq</kwb> <def></def><sym>.=</sym> <def></def><kwb>$_</kwb><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwd>print_revcomp</kwd><def></def><sym>(</sym><def></def><kwb>$desc</kwb><def></def><sym>,</sym> <def></def><kwb>$seq</kwb><def></def><sym>);</sym><def></def><br />
</source>
