<source>
<def></def><slc># The Computer Language Benchmarks Game</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># contributed by Daniel Nanz 2008-03-11</slc><br />
<def></def><slc># --------------------------------------------</slc><br />
<def></def><slc># Coroutines via enhanced generators</slc><br />
<def></def><slc># (http://www.python.org/dev/peps/pep-0342/)</slc><br />
<def></def><br />
<kwa>import</kwa> <def>sys</def><br />
<kwa>import</kwa> <def>itertools</def><br />
<br />
<kwa>def</kwa> <def></def><kwd>main</kwd><def></def><sym>(</sym><def>n</def> <sym>=</sym> <def></def><kwb>int</kwb><def></def><sym>(</sym><def>sys</def><sym>.</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>]),</sym> <def>n_threads</def><sym>=</sym><def></def><num>503</num><def></def><sym>,</sym> <def>cycle</def><sym>=</sym><def>itertools</def><sym>.</sym><def>cycle</def><sym>):</sym><br />
<def></def><br />
    <kwa>def</kwa> <def></def><kwd>worker</kwd><def></def><sym>(</sym><def>worker_id</def><sym>):</sym><br />
<def><br />
        n</def> <sym>=</sym> <def></def><num>1</num><br />
<def></def>        <kwa>while True</kwa><def></def><sym>:</sym><br />
<def></def>            <kwa>if</kwa> <def>n</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>:</sym><br />
<def>                n</def> <sym>= (</sym><def></def><kwa>yield</kwa> <def></def><sym>(</sym><def>n</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>))</sym><br />
<def></def>            <kwa>else</kwa><def></def><sym>:</sym><br />
<def></def>                <kwa>print</kwa> <def>worker_id</def><br />
                <kwa>raise</kwa> <def></def><kwc>StopIteration</kwc><br />
<def><br />
<br />
    threadRing</def> <sym>= [</sym><def></def><kwd>worker</kwd><def></def><sym>(</sym><def>w</def><sym>)</sym> <def></def><kwa>for</kwa> <def>w</def> <kwa>in</kwa> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym> <def>n_threads</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>)]</sym><br />
<def></def>    <kwa>for</kwa> <def>t</def> <kwa>in</kwa> <def>threadRing</def><sym>:</sym> <def>foo</def> <sym>=</sym> <def>t</def><sym>.</sym><def></def><kwd>next</kwd><def></def><sym>()</sym>           <def></def><slc># start exec. gen. funcs</slc><br />
<def>    sendFuncRing</def> <sym>= [</sym><def>t</def><sym>.</sym><def>send</def> <kwa>for</kwa> <def>t</def> <kwa>in</kwa> <def>threadRing</def><sym>]</sym>   <def></def><slc># speed...</slc><br />
<def></def>    <kwa>for</kwa> <def>send</def> <kwa>in</kwa> <def></def><kwd>cycle</kwd><def></def><sym>(</sym><def>sendFuncRing</def><sym>):</sym><br />
<def></def>        <kwa>try</kwa><def></def><sym>:</sym><br />
<def>            n</def> <sym>=</sym> <def></def><kwd>send</kwd><def></def><sym>(</sym><def>n</def><sym>)</sym><br />
<def></def>        <kwa>except</kwa> <def></def><kwc>StopIteration</kwc><def></def><sym>:</sym><br />
<def></def>            <kwa>break</kwa><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>()</sym><def></def><br />
</source>
