<source>
<def></def><slc>%% The Computer Language Shootout</slc><br />
<def></def><slc>%% http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>%%</slc><br />
<def></def><slc>%% contributed by Mats Cronqvist</slc><br />
<def></def><br />
<sym>-</sym><def></def><kwa>module</kwa><def></def><sym>(</sym><def>revcomp</def><sym>).</sym><br />
<def></def><br />
<sym>-</sym><def></def><kwa>export</kwa><def></def><sym>([</sym><def>main</def><sym>/</sym><def></def><num>1</num><def></def><sym>]).</sym><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>([</sym><def>_Args</def><sym>]) -&gt;</sym><br />
<def></def>    <kwd>do</kwd><def></def><sym>(</sym><def>io</def><sym>:</sym><def></def><kwd>get_line</kwd><def></def><sym>(</sym><def></def><str>''</str><def></def><sym>),[]),</sym><br />
<def></def>    <kwb>halt</kwb><def></def><sym>().</sym><br />
<def></def><br />
<kwd>do</kwd><def></def><sym>(</sym><def>eof</def><sym>,</sym><def>RevCompSeq</def><sym>) -&gt;</sym><br />
<def></def>    <slc>%% end of file. flush last sequence</slc><br />
<def></def>    <kwd>flush</kwd><def></def><sym>(</sym><def>RevCompSeq</def><sym>);</sym><br />
<def></def><kwd>do</kwd><def></def><sym>(</sym><def></def><str>&quot;&gt;&quot;</str><def></def><sym>++</sym><def>_</def><sym>=</sym><def>Descr</def><sym>,</sym><def>RevCompSeq</def><sym>) -&gt;</sym><br />
<def></def>    <slc>%% description. flush sequence, write description, get next line</slc><br />
<def></def>    <kwd>flush</kwd><def></def><sym>(</sym><def>RevCompSeq</def><sym>),</sym><br />
<def>    io</def><sym>:</sym><def></def><kwd>fwrite</kwd><def></def><sym>(</sym><def></def><str>&quot;~s&quot;</str><def></def><sym>,[</sym><def>Descr</def><sym>]),</sym><br />
<def></def>    <kwd>do</kwd><def></def><sym>(</sym><def>io</def><sym>:</sym><def></def><kwd>get_line</kwd><def></def><sym>(</sym><def></def><str>''</str><def></def><sym>),[]);</sym><br />
<def></def><kwd>do</kwd><def></def><sym>(</sym><def>Str</def><sym>,</sym><def>RevCompSeq</def><sym>) -&gt;</sym><br />
<def></def>    <slc>%% sequence data. reverse-complement it and get next line</slc><br />
<def></def>    <kwd>do</kwd><def></def><sym>(</sym><def>io</def><sym>:</sym><def></def><kwd>get_line</kwd><def></def><sym>(</sym><def></def><str>''</str><def></def><sym>),</sym><def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>Str</def><sym>,</sym><def>RevCompSeq</def><sym>)).</sym><br />
<def></def><br />
<slc>%% take reverse-complemented sequence, insert line-feed char every</slc><br />
<def></def><slc>%% 60th byte, toss to stdout</slc><br />
<def></def><kwd>flush</kwd><def></def><sym>([]) -&gt;</sym> <def>ok</def><sym>;</sym><br />
<def></def><kwd>flush</kwd><def></def><sym>(</sym><def>RevComp</def><sym>) -&gt;</sym> <def></def><kwd>flush</kwd><def></def><sym>(</sym><def>RevComp</def><sym>,</sym><def></def><num>60</num><def></def><sym>,[],[]).</sym><br />
<def></def><br />
<kwd>flush</kwd><def></def><sym>([],</sym><def>_</def><sym>,</sym><def>Lin</def><sym>,</sym><def>Seq</def><sym>) -&gt;</sym> <def>io</def><sym>:</sym><def></def><kwd>put_chars</kwd><def></def><sym>([</sym><def>Seq</def><sym>,</sym><def></def><num>10</num><def></def><sym>,</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>(</sym><def>Lin</def><sym>),</sym><def></def><num>10</num><def></def><sym>]);</sym><br />
<def></def><kwd>flush</kwd><def></def><sym>(</sym><def>RevComp</def><sym>,</sym><def></def><num>0</num><def></def><sym>,</sym><def>Lin</def><sym>,[]) -&gt;</sym> <def></def><kwd>flush</kwd><def></def><sym>(</sym><def>RevComp</def><sym>,</sym><def></def><num>60</num><def></def><sym>,[],[</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>(</sym><def>Lin</def><sym>)]);</sym><br />
<def></def><kwd>flush</kwd><def></def><sym>(</sym><def>RevComp</def><sym>,</sym><def></def><num>0</num><def></def><sym>,</sym><def>Lin</def><sym>,</sym><def>Seq</def><sym>) -&gt;</sym> <def></def><kwd>flush</kwd><def></def><sym>(</sym><def>RevComp</def><sym>,</sym><def></def><num>60</num><def></def><sym>,[],[</sym><def>Seq</def><sym>,</sym><def></def><num>10</num><def></def><sym>,</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>(</sym><def>Lin</def><sym>)]);</sym><br />
<def></def><kwd>flush</kwd><def></def><sym>([</sym><def>H</def><sym>|</sym><def>RevComp</def><sym>],</sym><def>N</def><sym>,</sym><def>Lin</def><sym>,</sym><def>Seq</def><sym>) -&gt;</sym> <def></def><kwd>flush</kwd><def></def><sym>(</sym><def>RevComp</def><sym>,</sym><def>N</def><sym>-</sym><def></def><num>1</num><def></def><sym>,[</sym><def>H</def><sym>|</sym><def>Lin</def><sym>],</sym><def>Seq</def><sym>).</sym><br />
<def></def><br />
<slc>%% reverse-complement sequence data. toss line-feeds</slc><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$A</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$T</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$a</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$T</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$C</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$G</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$c</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$G</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$G</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$C</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$g</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$C</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$T</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$A</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$t</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$A</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$U</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$A</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$u</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$A</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$M</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$K</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$m</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$K</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$R</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$Y</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$r</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$Y</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$W</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$W</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$w</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$W</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$S</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$S</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$s</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$S</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$Y</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$R</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$y</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$R</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$K</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$M</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$k</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$M</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$V</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$B</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$v</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$B</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$H</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$D</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$h</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$D</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$D</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$H</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$d</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$H</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$B</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$V</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$b</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$V</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$N</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$N</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def>$n</def><sym>|</sym><def>T</def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def></def><kwd>rev_comp</kwd><def></def><sym>(</sym><def>T</def><sym>,[</sym><def>$N</def><sym>|</sym><def>A</def><sym>]);</sym><br />
<def></def><kwd>rev_comp</kwd><def></def><sym>([</sym><def></def><num>10</num><def></def><sym>],</sym><def>A</def><sym>) -&gt;</sym> <def>A</def><sym>.</sym><def></def><br />
</source>
