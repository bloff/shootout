<source>
<def></def><slc>%% The Computer Language Benchmarks Game</slc><br />
<def></def><slc>%% http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>%% Contributed by Fredrik Svahn based on Per Gustafsson's mandelbrot program</slc><br />
<def></def><br />
<sym>-</sym><def></def><kwa>module</kwa><def></def><sym>(</sym><def>mandelbrot</def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>export</kwa><def></def><sym>([</sym><def>main</def><sym>/</sym><def></def><num>1</num><def></def><sym>]).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>LIM_SQR</def><sym>,</sym> <def></def><num>4.0</num><def></def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>ITER</def><sym>,</sym> <def></def><num>50</num><def></def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def></def><kwd>F</kwd><def></def><sym>(</sym><def>X</def><sym>),</sym><def></def><kwd>is_float</kwd><def></def><sym>(</sym><def>X</def><sym>)).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>SR</def><sym>, -</sym><def></def><num>1.5</num><def></def><sym>).</sym><br />
<def></def><sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym><def>SI</def><sym>, -</sym><def></def><num>1</num><def></def><sym>).</sym><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>([</sym><def>Arg</def><sym>]) -&gt;</sym><br />
<def>    N</def> <sym>=</sym> <def></def><kwb>list_to_integer</kwb><def></def><sym>(</sym><def>Arg</def><sym>),</sym><br />
<def></def>    <kwb>put</kwb><def></def><sym>(</sym><def>port</def><sym>,</sym> <def></def><kwb>open_port</kwb><def></def><sym>({</sym><def>fd</def><sym>,</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>}, [</sym><def>out</def><sym>])),</sym><br />
<def></def>    <kwd>port_command</kwd><def></def><sym>(</sym><def></def><kwb>get</kwb><def></def><sym>(</sym><def>port</def><sym>),[</sym><def></def><str>&quot;P4</str><esc>\</esc><str>n&quot;</str><def></def><sym>,</sym> <def>Arg</def><sym>,</sym> <def></def><str>&quot; &quot;</str><def></def><sym>,</sym> <def>Arg</def><sym>,</sym> <def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def><sym>]),</sym><br />
<def></def>    <kwd>calc_bits</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>N</def><sym>, []),</sym><br />
<def></def>    <kwb>halt</kwb><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>).</sym><br />
<def></def><br />
<slc>%Loop over all bits to calculate and print</slc><br />
<def></def><kwd>calc_bits</kwd><def></def><sym>(</sym><def>N</def><sym>,</sym> <def>N</def><sym>,</sym> <def>N</def><sym>,</sym> <def>Bits</def><sym>) -&gt;</sym><br />
<def></def>    <kwd>print_bytes</kwd><def></def><sym>(</sym><def>Bits</def><sym>),</sym> <def>done</def><sym>;</sym><br />
<def></def><kwd>calc_bits</kwd><def></def><sym>(</sym><def>N</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>N</def><sym>,</sym> <def>Bits</def><sym>) -&gt;</sym><br />
<def></def>    <kwd>print_bytes</kwd><def></def><sym>(</sym><def>Bits</def><sym>),</sym> <def></def><kwd>calc_bits</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym> <def>Y</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>N</def><sym>, []);</sym><br />
<def></def><kwd>calc_bits</kwd><def></def><sym>(</sym><def>X</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>N</def><sym>,</sym> <def>Bits</def><sym>) -&gt;</sym><br />
<def></def>    <kwd>calc_bits</kwd><def></def><sym>(</sym><def>X</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>Y</def><sym>,</sym> <def>N</def><sym>, [</sym><def></def><kwd>m</kwd><def></def><sym>(?</sym><def>ITER</def><sym>, ?</sym><def>SR</def><sym>+(</sym><def>N</def><sym>-</sym><def>X</def><sym>-</sym><def></def><num>1</num><def></def><sym>)*</sym><def></def><num>2</num><def></def><sym>/</sym><def>N</def><sym>, ?</sym><def>SI</def><sym>+(</sym><def>Y</def><sym>-</sym><def></def><num>1</num><def></def><sym>)*</sym><def></def><num>2</num><def></def><sym>/</sym><def>N</def><sym>) |</sym> <def>Bits</def><sym>]).</sym><br />
<def></def><br />
<slc>%Mandelbrot algorithm</slc><br />
<def></def><kwd>m</kwd><def></def><sym>(</sym><def>Iter</def><sym>,</sym> <def>CR</def><sym>,</sym><def>CI</def><sym>) -&gt;</sym> <def></def><kwd>m</kwd><def></def><sym>(</sym><def>Iter</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>CR</def><sym>,</sym> <def>CI</def><sym>,</sym> <def>CR</def><sym>,</sym> <def>CI</def><sym>).</sym><br />
<def></def><br />
<kwd>m</kwd><def></def><sym>(</sym><def>Iter</def><sym>,</sym> <def>R</def><sym>,</sym> <def>I</def><sym>,</sym> <def>CR</def><sym>,</sym> <def>CI</def><sym>)</sym> <def></def><kwa>when</kwa> <def></def><sym>?</sym><def></def><kwd>F</kwd><def></def><sym>(</sym><def>R</def><sym>), ?</sym><def></def><kwd>F</kwd><def></def><sym>(</sym><def>I</def><sym>), ?</sym><def></def><kwd>F</kwd><def></def><sym>(</sym><def>CR</def><sym>), ?</sym><def></def><kwd>F</kwd><def></def><sym>(</sym><def>CI</def><sym>),</sym> <def>Iter</def> <sym>&gt;</sym> <def></def><num>0</num> <def></def><sym>-&gt;</sym><br />
<def></def>    <kwa>case</kwa> <def></def><sym>(</sym><def>R</def><sym>*</sym><def>R</def><sym>+</sym><def>I</def><sym>*</sym><def>I</def><sym>)</sym> <def></def><kwa>of</kwa><br />
<def>	Lim</def> <kwa>when</kwa> <def>Lim</def> <sym>=&lt; ?</sym><def>LIM_SQR</def> <sym>-&gt;</sym> <def></def><kwd>m</kwd><def></def><sym>(</sym><def>Iter</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym> <def>R</def><sym>*</sym><def>R</def><sym>-</sym><def>I</def><sym>*</sym><def>I</def><sym>+</sym><def>CR</def><sym>,</sym> <def></def><num>2</num><def></def><sym>*</sym><def>R</def><sym>*</sym><def>I</def><sym>+</sym><def>CI</def><sym>,</sym> <def>CR</def><sym>,</sym> <def>CI</def><sym>);</sym><br />
<def>	_</def> <sym>-&gt;</sym> <def></def><num>0</num><br />
<def></def>    <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><kwd>m</kwd><def></def><sym>(</sym><def>_</def><sym>,</sym><def>R</def><sym>,</sym><def>I</def><sym>,</sym><def>_</def><sym>,</sym><def>_</def><sym>)</sym> <def></def><kwa>when</kwa> <def></def><sym>?</sym><def></def><kwd>F</kwd><def></def><sym>(</sym><def>R</def><sym>), ?</sym><def></def><kwd>F</kwd><def></def><sym>(</sym><def>I</def><sym>) -&gt;</sym><br />
<def></def>    <kwa>case</kwa> <def></def><sym>(</sym><def>R</def><sym>*</sym><def>R</def><sym>+</sym><def>I</def><sym>*</sym><def>I</def><sym>)</sym> <def></def><kwa>of</kwa><br />
<def>	Lim</def> <kwa>when</kwa> <def>Lim</def> <sym>=&lt; ?</sym><def>LIM_SQR</def> <sym>-&gt;</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def>	_</def> <sym>-&gt;</sym> <def></def><num>0</num><br />
<def></def>    <kwa>end</kwa><def></def><sym>.</sym><br />
<def></def><br />
<slc>%Print bytes one at a time.</slc><br />
<def></def><kwd>print_bytes</kwd><def></def><sym>(</sym><def>Bytes</def><sym>)-&gt;</sym><br />
<def></def>    <kwd>print_bytes</kwd><def></def><sym>(</sym><def></def><kwb>get</kwb><def></def><sym>(</sym><def>port</def><sym>),</sym> <def>Bytes</def><sym>).</sym><br />
<def></def><kwd>print_bytes</kwd><def></def><sym>(</sym><def>_</def><sym>, []) -&gt;</sym> <def>done</def><sym>;</sym><br />
<def></def><kwd>print_bytes</kwd><def></def><sym>(</sym><def>Port</def><sym>, [</sym><def>B1</def><sym>,</sym> <def>B2</def><sym>,</sym> <def>B3</def><sym>,</sym> <def>B4</def><sym>,</sym> <def>B5</def><sym>,</sym> <def>B6</def><sym>,</sym> <def>B7</def><sym>,</sym> <def>B8</def> <sym>|</sym> <def>RemBytes</def><sym>]) -&gt;</sym><br />
<def></def>    <kwd>port_command</kwd><def></def><sym>(</sym><def>Port</def><sym>, &lt;&lt;</sym><def>B1</def><sym>:</sym><def></def><num>1</num><def></def><sym>,</sym><def>B2</def><sym>:</sym><def></def><num>1</num><def></def><sym>,</sym><def>B3</def><sym>:</sym><def></def><num>1</num><def></def><sym>,</sym><def>B4</def><sym>:</sym><def></def><num>1</num><def></def><sym>,</sym><def>B5</def><sym>:</sym><def></def><num>1</num><def></def><sym>,</sym><def>B6</def><sym>:</sym><def></def><num>1</num><def></def><sym>,</sym><def>B7</def><sym>:</sym><def></def><num>1</num><def></def><sym>,</sym><def>B8</def><sym>:</sym><def></def><num>1</num><def></def><sym>&gt;&gt;),</sym><br />
<def></def>    <kwd>print_bytes</kwd><def></def><sym>(</sym><def>Port</def><sym>,</sym> <def>RemBytes</def><sym>);</sym><br />
<def></def><kwd>print_bytes</kwd><def></def><sym>(</sym><def>Port</def><sym>,</sym> <def>RemBytes</def><sym>) -&gt;</sym><br />
<def></def>    <kwd>print_bytes</kwd><def></def><sym>(</sym><def>Port</def><sym>,</sym> <def>RemBytes</def><sym>++[</sym><def></def><num>0</num><def></def><sym>]).</sym><def></def><br />
</source>
