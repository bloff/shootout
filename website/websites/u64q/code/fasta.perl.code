<source>
<def></def><slc># The Computer Language Shootout</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># contributed by David Pyke</slc><br />
<def></def><slc># tweaked by Danny Sauer</slc><br />
<def></def><slc># Butchered by Jesse Millikan</slc><br />
<def></def><br />
<kwa>use</kwa> <def>constant IM</def> <sym>=&gt;</sym> <def></def><num>139968</num><def></def><sym>;</sym><br />
<def></def><kwa>use</kwa> <def>constant IA</def> <sym>=&gt;</sym> <def></def><num>3877</num><def></def><sym>;</sym><br />
<def></def><kwa>use</kwa> <def>constant IC</def> <sym>=&gt;</sym> <def></def><num>29573</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>use</kwa> <def>constant LINELENGTH</def> <sym>=&gt;</sym> <def></def><num>60</num><def></def><sym>;</sym><br />
<def></def><br />
<kwc>my</kwc> <def></def><kwb>$LAST</kwb> <def></def><sym>=</sym> <def></def><num>42</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>makeCumulative</def> <sym>{</sym><br />
<def></def>    <kwc>my</kwc><def></def><sym>(</sym><def></def><kwb>$genelist</kwb><def></def><sym>) =</sym> <def></def><kwb>@_</kwb><def></def><sym>;</sym><br />
<def></def>    <kwc>my</kwc> <def></def><kwb>$cp</kwb> <def></def><sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def><br />
    <kwa>foreach</kwa> <def></def><sym>(</sym><def>@</def><kwb>$genelist</kwb><def></def><sym>){</sym><br />
<def></def>        <kwb>$_</kwb><def></def><sym>-&gt;[</sym><def></def><num>1</num><def></def><sym>] =</sym> <def></def><kwb>$cp</kwb> <def></def><sym>+=</sym> <def></def><kwb>$_</kwb><def></def><sym>-&gt;[</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>makeRandomFasta</def> <sym>{</sym><br />
<def></def>    <kwc>my</kwc><def></def><sym>(</sym><def></def><kwb>$id</kwb><def></def><sym>,</sym><def></def><kwb>$desc</kwb><def></def><sym>,</sym><def></def><kwb>$n</kwb><def></def><sym>,</sym><def></def><kwb>$genelist</kwb><def></def><sym>) =</sym> <def></def><kwb>@_</kwb><def></def><sym>;</sym><br />
<def></def><br />
    <kwc>print</kwc> <def></def><str>&quot;&gt;$id $desc</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>    <kwc>my</kwc> <def></def><kwb>$pick</kwb><def></def><sym>,</sym> <def></def><kwb>$r</kwb><def></def><sym>;</sym><br />
<def></def><br />
	<kwa>while</kwa><def></def><sym>(</sym><def></def><kwb>$n</kwb> <def></def><sym>&gt;</sym> <def></def><num>0</num><def></def><sym>){</sym><br />
<def></def>		<kwb>$pick</kwb><def></def><sym>=</sym><def></def><str>''</str><def></def><sym>;</sym><br />
<def></def><br />
		<slc># Get LINELENGTH chars or what's left of $n</slc><br />
<def>        CHAR</def><sym>:</sym> <def></def><kwa>foreach</kwa> <def></def><sym>(</sym><def></def><num>1</num> <def></def><sym>.. (</sym><def></def><kwb>$n</kwb> <def></def><sym>&gt;</sym> <def>LINELENGTH ? LINELENGTH</def> <sym>:</sym> <def></def><kwb>$n</kwb><def></def><sym>)){</sym><br />
<def></def>    		<kwb>$rand</kwb> <def></def><sym>= (</sym><def></def><kwb>$LAST</kwb> <def></def><sym>= (</sym><def></def><kwb>$LAST</kwb> <def></def><sym>*</sym> <def>IA</def> <sym>+</sym> <def>IC</def><sym>) %</sym> <def>IM</def><sym>) /</sym> <def></def><kwd>IM</kwd><def></def><sym>;</sym><br />
<def></def><br />
			<slc># Select gene and append it</slc><br />
<def></def>    		<kwa>foreach</kwa> <def></def><sym>(</sym><def>@</def><kwb>$genelist</kwb><def></def><sym>){</sym><br />
<def></def>				<kwa>if</kwa><def></def><sym>(</sym><def></def><kwb>$rand</kwb> <def></def><sym>&lt;</sym> <def></def><kwb>$_</kwb><def></def><sym>-&gt;[</sym><def></def><num>1</num><def></def><sym>]){</sym><br />
<def></def>					<kwb>$pick</kwb> <def></def><sym>.=</sym> <def></def><kwb>$_</kwb><def></def><sym>-&gt;[</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def></def>					<kwa>next</kwa> <def></def><kwd>CHAR</kwd><def></def><sym>;</sym><br />
<def></def>				<sym>}</sym><br />
<def></def>    		<sym>}</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <kwc>print</kwc> <def></def><str>&quot;$pick</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>		<kwb>$n</kwb> <def></def><sym>-=</sym> <def></def><kwd>LINELENGTH</kwd><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<slc># Print $n characters of $s (repeated if nessary) with newlines every LINELENGTH</slc><br />
<def></def><kwa>sub</kwa> <def>makeRepeatFasta</def> <sym>{</sym><br />
<def></def>    <kwc>my</kwc><def></def><sym>(</sym><def></def><kwb>$id</kwb><def></def><sym>,</sym><def></def><kwb>$desc</kwb><def></def><sym>,</sym><def></def><kwb>$s</kwb><def></def><sym>,</sym><def></def><kwb>$n</kwb><def></def><sym>) =</sym> <def></def><kwb>@_</kwb><def></def><sym>;</sym><br />
<def></def><br />
    <kwc>print</kwc> <def></def><str>&quot;&gt;$id $desc</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def><br />
	<kwc>my</kwc> <def></def><kwb>$ss</kwb><def></def><sym>;</sym><br />
<def></def>	<kwa>while</kwa><def></def><sym>(</sym><def></def><kwb>$n</kwb> <def></def><sym>&gt;</sym> <def></def><num>0</num><def></def><sym>){</sym><br />
<def></def>		<slc># Overfill $ss with $s</slc><br />
<def></def>		<kwb>$ss</kwb> <def></def><sym>.=</sym> <def></def><kwb>$s</kwb> <def></def><kwa>while</kwa> <def>length</def> <kwb>$ss</kwb> <def></def><sym>&lt;</sym> <def></def><kwd>LINELENGTH</kwd><def></def><sym>;</sym><br />
<def></def>		<slc># Print LINELENGTH chars or whatever's left of $n</slc><br />
<def></def>        <kwc>print</kwc> <def></def><kwd>substr</kwd><def></def><sym>(</sym><def></def><kwb>$ss</kwb><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><kwb>$n</kwb> <def></def><sym>&gt;</sym> <def>LINELENGTH ? LINELENGTH</def> <sym>:</sym> <def></def><kwb>$n</kwb><def></def><sym>,</sym><def></def><str>&quot;&quot;</str><def></def><sym>),</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>		<kwb>$n</kwb> <def></def><sym>-=</sym> <def></def><kwd>LINELENGTH</kwd><def></def><sym>;</sym><br />
<def></def>	<sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>my</kwc> <def></def><kwb>$iub</kwb> <def></def><sym>= [</sym><br />
<def></def>    <sym>[</sym><def>a</def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>c</def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>g</def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>t</def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>B</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>D</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>H</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>K</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>M</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>N</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>R</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>S</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>V</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>W</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>Y</def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>]</sym><br />
<def></def><sym>];</sym><br />
<def></def><br />
<kwc>my</kwc> <def></def><kwb>$homosapiens</kwb> <def></def><sym>= [</sym><br />
<def></def>    <sym>[</sym><def>a</def><sym>,</sym> <def></def><num>0.3029549426680</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>c</def><sym>,</sym> <def></def><num>0.1979883004921</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>g</def><sym>,</sym> <def></def><num>0.1975473066391</num><def></def><sym>],</sym><br />
<def></def>    <sym>[</sym><def>t</def><sym>,</sym> <def></def><num>0.3015094502008</num><def></def><sym>]</sym><br />
<def></def><sym>];</sym><br />
<def></def><br />
<kwb>$alu</kwb> <def></def><sym>=</sym><br />
<def></def>    <str>'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</str><def></def> <sym>.</sym><br />
<def></def>    <str>'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</str><def></def> <sym>.</sym><br />
<def></def>    <str>'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</str><def></def> <sym>.</sym><br />
<def></def>    <str>'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</str><def></def> <sym>.</sym><br />
<def></def>    <str>'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</str><def></def> <sym>.</sym><br />
<def></def>    <str>'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</str><def></def> <sym>.</sym><br />
<def></def>    <str>'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</str><def></def><sym>;</sym><br />
<def></def><br />
<slc>#main</slc><br />
<def></def><br />
<kwc>my</kwc> <def></def><kwb>$n</kwb> <def></def><sym>= (</sym><def></def><kwb>$ARGV</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>] ||</sym> <def></def><num>1000</num><def></def><sym>) ;</sym><br />
<def><br />
makeCumulative</def> <kwb>$iub</kwb><def></def><sym>;</sym><br />
<def>makeCumulative</def> <kwb>$homosapiens</kwb><def></def><sym>;</sym><br />
<def></def><br />
<kwd>makeRepeatFasta</kwd> <def></def><sym>(</sym><def></def><str>'ONE'</str><def></def><sym>,</sym> <def></def><str>'Homo sapiens alu'</str><def></def><sym>,</sym> <def></def><kwb>$alu</kwb><def></def><sym>,</sym> <def></def><kwb>$n</kwb><def></def><sym>*</sym><def></def><num>2</num><def></def><sym>);</sym><br />
<def></def><kwd>makeRandomFasta</kwd> <def></def><sym>(</sym><def></def><str>'TWO'</str><def></def><sym>,</sym> <def></def><str>'IUB ambiguity codes'</str><def></def><sym>,</sym> <def></def><kwb>$n</kwb><def></def><sym>*</sym><def></def><num>3</num><def></def><sym>,</sym> <def></def><kwb>$iub</kwb><def></def><sym>);</sym><br />
<def></def><kwd>makeRandomFasta</kwd> <def></def><sym>(</sym><def></def><str>'THREE'</str><def></def><sym>,</sym> <def></def><str>'Homo sapiens frequency'</str><def></def><sym>,</sym> <def></def><kwb>$n</kwb><def></def><sym>*</sym><def></def><num>5</num><def></def><sym>,</sym> <def></def><kwb>$homosapiens</kwb><def></def><sym>);</sym><br />
<def></def><br />
</source>
