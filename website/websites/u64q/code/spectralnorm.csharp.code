<source>
<def></def><com>/* The Great Computer Language Shootout</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com></com><br />
<com>   contributed by Isaac Gouy</com><br />
<com>*/</com><def></def><br />
<br />
<kwa>using</kwa> <def>System</def><sym>;</sym><br />
<def></def><br />
<kwa>class</kwa> <def>SpectralNorm</def><br />
<sym>{</sym><br />
<def></def>   <kwa>public static</kwa> <def></def><kwb>void</kwb> <def></def><kwd>Main</kwd><def></def><sym>(</sym><def>String</def><sym>[]</sym> <def>args</def><sym>) {</sym><br />
<def></def>      <kwb>int</kwb> <def>n</def> <sym>=</sym> <def></def><num>100</num><def></def><sym>;</sym><br />
<def></def>      <kwa>if</kwa> <def></def><sym>(</sym><def>args</def><sym>.</sym><def>Length</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>)</sym> <def>n</def> <sym>=</sym> <def>Int32</def><sym>.</sym><def></def><kwd>Parse</kwd><def></def><sym>(</sym><def>args</def><sym>[</sym><def></def><num>0</num><def></def><sym>]);</sym><br />
<def><br />
      Console</def><sym>.</sym><def></def><kwd>WriteLine</kwd><def></def><sym>(</sym><def></def><str>&quot;{0:f9}&quot;</str><def></def><sym>,</sym> <def></def><kwa>new</kwa> <def></def><kwd>SpectralNorm</kwd><def></def><sym>().</sym><def></def><kwd>Approximate</kwd><def></def><sym>(</sym><def>n</def><sym>));</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <kwb>double</kwb> <def></def><kwd>Approximate</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>n</def><sym>) {</sym><br />
<def></def>      <slc>// create unit vector</slc><br />
<def></def>      <kwb>double</kwb><def></def><sym>[]</sym> <def>u</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>double</kwb><def></def><sym>[</sym><def>n</def><sym>];</sym><br />
<def></def>      <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>n</def><sym>;</sym> <def>i</def><sym>++)</sym> <def>u</def><sym>[</sym><def>i</def><sym>] =</sym>  <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def><br />
      <slc>// 20 steps of the power method</slc><br />
<def></def>      <kwb>double</kwb><def></def><sym>[]</sym> <def>v</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>double</kwb><def></def><sym>[</sym><def>n</def><sym>];</sym><br />
<def></def>      <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>n</def><sym>;</sym> <def>i</def><sym>++)</sym> <def>v</def><sym>[</sym><def>i</def><sym>] =</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def><br />
      <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def></def><num>10</num><def></def><sym>;</sym> <def>i</def><sym>++) {</sym><br />
<def></def>         <kwd>MultiplyAtAv</kwd><def></def><sym>(</sym><def>n</def><sym>,</sym><def>u</def><sym>,</sym><def>v</def><sym>);</sym><br />
<def></def>         <kwd>MultiplyAtAv</kwd><def></def><sym>(</sym><def>n</def><sym>,</sym><def>v</def><sym>,</sym><def>u</def><sym>);</sym><br />
<def></def>      <sym>}</sym><br />
<def></def><br />
      <slc>// B=AtA         A multiplied by A transposed</slc><br />
<def></def>      <slc>// v.Bv /(v.v)   eigenvalue of v</slc><br />
<def></def>      <kwb>double</kwb> <def>vBv</def> <sym>=</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>vv</def> <sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>      <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>n</def><sym>;</sym> <def>i</def><sym>++) {</sym><br />
<def>         vBv</def> <sym>+=</sym> <def>u</def><sym>[</sym><def>i</def><sym>]*</sym><def>v</def><sym>[</sym><def>i</def><sym>];</sym><br />
<def>         vv</def>  <sym>+=</sym> <def>v</def><sym>[</sym><def>i</def><sym>]*</sym><def>v</def><sym>[</sym><def>i</def><sym>];</sym><br />
<def></def>      <sym>}</sym><br />
<def></def><br />
      <kwa>return</kwa> <def>Math</def><sym>.</sym><def></def><kwd>Sqrt</kwd><def></def><sym>(</sym><def>vBv</def><sym>/</sym><def>vv</def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
<br />
   <com>/* return element i,j of infinite matrix A */</com><def></def><br />
   <kwb>double</kwb> <def></def><kwd>A</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>,</sym> <def></def><kwb>int</kwb> <def>j</def><sym>){</sym><br />
<def></def>      <kwa>return</kwa> <def></def><num>1.0</num><def></def><sym>/((</sym><def>i</def><sym>+</sym><def>j</def><sym>)*(</sym><def>i</def><sym>+</sym><def>j</def><sym>+</sym><def></def><num>1</num><def></def><sym>)/</sym><def></def><num>2</num> <def></def><sym>+</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <com>/* multiply vector v by matrix A */</com><def></def><br />
   <kwb>void</kwb> <def></def><kwd>MultiplyAv</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>n</def><sym>,</sym> <def></def><kwb>double</kwb><def></def><sym>[]</sym> <def>v</def><sym>,</sym> <def></def><kwb>double</kwb><def></def><sym>[]</sym> <def>Av</def><sym>){</sym><br />
<def></def>      <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>n</def><sym>;</sym> <def>i</def><sym>++){</sym><br />
<def>         Av</def><sym>[</sym><def>i</def><sym>] =</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>         <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>j</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>j</def><sym>&lt;</sym><def>n</def><sym>;</sym> <def>j</def><sym>++)</sym> <def>Av</def><sym>[</sym><def>i</def><sym>] +=</sym> <def></def><kwd>A</kwd><def></def><sym>(</sym><def>i</def><sym>,</sym><def>j</def><sym>)*</sym><def>v</def><sym>[</sym><def>j</def><sym>];</sym><br />
<def></def>      <sym>}</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <com>/* multiply vector v by matrix A transposed */</com><def></def><br />
   <kwb>void</kwb> <def></def><kwd>MultiplyAtv</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>n</def><sym>,</sym> <def></def><kwb>double</kwb><def></def><sym>[]</sym> <def>v</def><sym>,</sym> <def></def><kwb>double</kwb><def></def><sym>[]</sym> <def>Atv</def><sym>){</sym><br />
<def></def>      <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym><def>i</def><sym>&lt;</sym><def>n</def><sym>;</sym><def>i</def><sym>++){</sym><br />
<def>         Atv</def><sym>[</sym><def>i</def><sym>] =</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>         <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>j</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>j</def><sym>&lt;</sym><def>n</def><sym>;</sym> <def>j</def><sym>++)</sym> <def>Atv</def><sym>[</sym><def>i</def><sym>] +=</sym> <def></def><kwd>A</kwd><def></def><sym>(</sym><def>j</def><sym>,</sym><def>i</def><sym>)*</sym><def>v</def><sym>[</sym><def>j</def><sym>];</sym><br />
<def></def>      <sym>}</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <com>/* multiply vector v by matrix A and then by matrix A transposed */</com><def></def><br />
   <kwb>void</kwb> <def></def><kwd>MultiplyAtAv</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>n</def><sym>,</sym> <def></def><kwb>double</kwb><def></def><sym>[]</sym> <def>v</def><sym>,</sym> <def></def><kwb>double</kwb><def></def><sym>[]</sym> <def>AtAv</def><sym>){</sym><br />
<def></def>      <kwb>double</kwb><def></def><sym>[]</sym> <def>u</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>double</kwb><def></def><sym>[</sym><def>n</def><sym>];</sym><br />
<def></def>      <kwd>MultiplyAv</kwd><def></def><sym>(</sym><def>n</def><sym>,</sym><def>v</def><sym>,</sym><def>u</def><sym>);</sym><br />
<def></def>      <kwd>MultiplyAtv</kwd><def></def><sym>(</sym><def>n</def><sym>,</sym><def>u</def><sym>,</sym><def>AtAv</def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
