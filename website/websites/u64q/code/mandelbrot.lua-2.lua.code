<source>
<def></def><slc>-- The Computer Language Shootout</slc><br />
<def></def><slc>-- http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>-- contributed by Mike Pall</slc><br />
<def></def><br />
<kwa>local</kwa> <def>width</def> <sym>=</sym> <def></def><kwb>tonumber</kwb><def></def><sym>(</sym><def>arg</def> <kwa>and</kwa> <def>arg</def><sym>[</sym><def></def><num>1</num><def></def><sym>])</sym> <def></def><kwa>or</kwa> <def></def><num>100</num><br />
<def></def><kwa>local</kwa> <def>height</def><sym>,</sym> <def>wscale</def> <sym>=</sym> <def>width</def><sym>,</sym> <def></def><num>2</num><def></def><sym>/</sym><def>width</def><br />
<kwa>local</kwa> <def>m</def><sym>,</sym> <def>limit2</def> <sym>=</sym> <def></def><num>50</num><def></def><sym>,</sym> <def></def><num>4.0</num><br />
<def></def><kwa>local</kwa> <def></def><kwb>write</kwb><def></def><sym>,</sym> <def>char</def> <sym>=</sym> <def>io</def><sym>.</sym><def></def><kwb>write</kwb><def></def><sym>,</sym> <def></def><kwb>string</kwb><def></def><sym>.</sym><def>char</def><br />
<br />
<kwb>write</kwb><def></def><sym>(</sym><def></def><str>&quot;P4</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>width</def><sym>,</sym> <def></def><str>&quot; &quot;</str><def></def><sym>,</sym> <def>height</def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>)</sym><br />
<def></def><br />
<kwa>for</kwa> <def>y</def><sym>=</sym><def></def><num>0</num><def></def><sym>,</sym><def>height</def><sym>-</sym><def></def><num>1</num> <def></def><kwa>do</kwa><br />
<def></def>  <kwa>local</kwa> <def>Ci</def> <sym>=</sym> <def></def><num>2</num><def></def><sym>*</sym><def>y</def> <sym>/</sym> <def>height</def> <sym>-</sym> <def></def><num>1</num><br />
<def></def>  <kwa>for</kwa> <def>xb</def><sym>=</sym><def></def><num>0</num><def></def><sym>,</sym><def>width</def><sym>-</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>8</num> <def></def><kwa>do</kwa><br />
<def></def>    <kwa>local</kwa> <def>bits</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>    <kwa>local</kwa> <def>xbb</def> <sym>=</sym> <def>xb</def><sym>+</sym><def></def><num>7</num><br />
<def></def>    <kwa>for</kwa> <def>x</def><sym>=</sym><def>xb</def><sym>,</sym><def>xbb</def> <sym>&lt;</sym> <def>width</def> <kwa>and</kwa> <def>xbb</def> <kwa>or</kwa> <def>width</def><sym>-</sym><def></def><num>1</num> <def></def><kwa>do</kwa><br />
<def>      bits</def> <sym>=</sym> <def>bits</def> <sym>+</sym> <def>bits</def><br />
      <kwa>local</kwa> <def>Zr</def><sym>,</sym> <def>Zi</def><sym>,</sym> <def>Zrq</def><sym>,</sym> <def>Ziq</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><br />
<def></def>      <kwa>local</kwa> <def>Cr</def> <sym>=</sym> <def>x</def> <sym>*</sym> <def>wscale</def> <sym>-</sym> <def></def><num>1.5</num><br />
<def></def>      <kwa>for</kwa> <def>i</def><sym>=</sym><def></def><num>1</num><def></def><sym>,</sym><def>m</def> <kwa>do</kwa><br />
<def></def>        <kwa>local</kwa> <def>Zri</def> <sym>=</sym> <def>Zr</def><sym>*</sym><def>Zi<br />
        Zr</def> <sym>=</sym> <def>Zrq</def> <sym>-</sym> <def>Ziq</def> <sym>+</sym> <def>Cr<br />
        Zi</def> <sym>=</sym> <def>Zri</def> <sym>+</sym> <def>Zri</def> <sym>+</sym> <def>Ci<br />
        Zrq</def> <sym>=</sym> <def>Zr</def><sym>*</sym><def>Zr<br />
        Ziq</def> <sym>=</sym> <def>Zi</def><sym>*</sym><def>Zi</def><br />
        <kwa>if</kwa> <def>Zrq</def> <sym>+</sym> <def>Ziq</def> <sym>&gt;</sym> <def>limit2</def> <kwa>then</kwa><br />
<def>          bits</def> <sym>=</sym> <def>bits</def> <sym>+</sym> <def></def><num>1</num><br />
<def></def>          <kwa>break</kwa><br />
<def></def>        <kwa>end</kwa><br />
<def></def>      <kwa>end</kwa><br />
<def></def>    <kwa>end</kwa><br />
<def></def>    <kwa>if</kwa> <def>xbb</def> <sym>&gt;=</sym> <def>width</def> <kwa>then</kwa><br />
<def></def>      <kwa>for</kwa> <def>x</def><sym>=</sym><def>width</def><sym>,</sym><def>xbb</def> <kwa>do</kwa> <def>bits</def> <sym>=</sym> <def>bits</def> <sym>+</sym> <def>bits</def> <sym>+</sym> <def></def><num>1</num> <def></def><kwa>end</kwa><br />
<def></def>    <kwa>end</kwa><br />
<def></def>    <kwb>write</kwb><def></def><sym>(</sym><def></def><kwd>char</kwd><def></def><sym>(</sym><def></def><num>255</num><def></def><sym>-</sym><def>bits</def><sym>))</sym><br />
<def></def>  <kwa>end</kwa><br />
<def></def><kwa>end</kwa><def></def><br />
</source>
