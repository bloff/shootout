<source>
<def></def><com>{-# OPTIONS -O3 #-}</com><def></def><br />
<com>{-</com><br />
<com>	The Computer Language Benchmarks Game</com><br />
<com>   	http://shootout.alioth.debian.org/</com><br />
<com>   	contributed by Bertram Felgenhauer</com><br />
<com>-}</com><def></def><br />
<br />
<kwa>import</kwa> <def>Data.Word</def><br />
<kwa>import</kwa> <def>Data.Array</def><br />
<kwa>import</kwa> <def>Data.Bits</def><br />
<kwa>import</kwa> <def>System<br />
<br />
pieces</def> <sym>= [</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>3</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>3</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>3</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>2</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>2</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>2</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>2</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>3</num><def></def><sym>)],</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>),(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>3</num><def></def><sym>),(</sym><def></def><num>1</num><def></def><sym>,</sym><def></def><num>2</num><def></def><sym>)]]</sym><br />
<def><br />
transform p</def> <sym>=</sym><br />
<def></def>    <sym>[</sym> <def>map</def> <sym>(</sym><def>\</def><sym>(</sym><def>y</def><sym>,</sym><def>x</def><sym>) -&gt; (</sym><def>y</def><sym>-</sym><def>dy</def><sym>,</sym><def>x</def><sym>-</sym><def>dx</def><sym>))</sym> <def>p''</def><br />
    <sym>|</sym> <def>p'</def> <sym>&lt;-</sym> <def>take</def> <num>6</num> <def></def><sym>(</sym><def>iterate</def> <sym>(</sym><def>map</def> <sym>(</sym><def>\</def><sym>(</sym><def>y</def><sym>,</sym><def>x</def><sym>) -&gt; (</sym><def>x</def><sym>+</sym><def>y</def><sym>,-</sym><def>y</def><sym>)))</sym> <def>p</def><sym>),</sym><br />
<def>      p''</def> <sym>&lt;-</sym> <def>take</def> <num>2</num> <def></def><sym>(</sym><def>iterate</def> <sym>(</sym><def>map</def> <sym>(</sym><def>\</def><sym>(</sym><def>y</def><sym>,</sym><def>x</def><sym>) -&gt; (</sym><def>x</def><sym>,</sym><def>y</def><sym>)))</sym> <def>p'</def><sym>),</sym><br />
<def></def>      <kwa>let</kwa> <def></def><sym>(</sym><def>dy</def><sym>,</sym><def>dx</def><sym>) =</sym> <def>minimum p''</def><sym>]</sym><br />
<def><br />
pieceMasks</def> <sym>=</sym> <def>listArray</def> <sym>(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>9</num><def></def><sym>) (</sym><def>map</def> <sym>(</sym><def>pieceMasks' . transform</def><sym>)</sym> <def>pieces</def><sym>)</sym> <def></def><kwa>where</kwa><br />
<def>    pieceMasks' ps</def> <sym>=</sym> <def>listArray</def> <sym>(</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>9</num><def></def><sym>) [</sym><def>pieceMasks'' ps</def> <sym>(</sym><def>y</def><sym>,</sym><def>x</def><sym>) |</sym> <def>y</def> <sym>&lt;- [</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><num>1</num><def></def><sym>],</sym> <def>x</def> <sym>&lt;- [</sym><def></def><num>0</num><def>.</def><num>.4</num><def></def><sym>]]</sym><br />
<def>    pieceMasks'' ps pos</def> <sym>= [</sym><def>m</def> <sym>|</sym> <def>p</def> <sym>&lt;-</sym> <def>ps</def><sym>,</sym> <def>m</def> <sym>&lt;-</sym> <def>mask</def> <num>0</num> <def>pos p</def><sym>]</sym><br />
<def>    mask m</def> <sym>(</sym><def>dy</def><sym>,</sym><def>dx</def><sym>) [] = [</sym><def>m</def><sym>]</sym><br />
<def>    mask m</def> <sym>(</sym><def>dy</def><sym>,</sym><def>dx</def><sym>) ((</sym><def>y</def><sym>,</sym><def>x</def><sym>):</sym><def>ps</def><sym>)</sym><br />
<def></def>        <sym>|</sym> <def>x'</def> <sym>&lt;</sym> <def></def><num>0</num> <def></def><sym>||</sym> <def>x'</def> <sym>&gt;</sym> <def></def><num>4</num> <def></def><sym>= []</sym><br />
<def></def>        <sym>|</sym> <def></def><kwa>True</kwa> <def></def><sym>=</sym> <def>mask</def> <sym>(</sym><def>m .</def><sym>|</sym><def>. shiftL</def> <num>1</num> <def></def><sym>((</sym><def>dy</def><sym>+</sym><def>y</def><sym>)*</sym><def></def><num>5</num><def></def><sym>+</sym><def>x'</def><sym>)) (</sym><def>dy</def><sym>,</sym><def>dx</def><sym>)</sym> <def>ps</def><br />
        <kwa>where</kwa> <def>x'</def> <sym>=</sym> <def>x</def> <sym>+</sym> <def>dx</def> <sym>+</sym> <def>div</def> <sym>(</sym><def>y</def><sym>+</sym><def>dy</def><sym>)</sym> <def></def><num>2</num><br />
<def><br />
search m</def> <num>50</num> <def>p ps</def> <sym>= [</sym><def>ps</def><sym>]</sym><br />
<def>search m i p ps</def> <sym>| (</sym><def>m .</def><sym>&amp;</sym><def>. shiftL</def> <num>1</num> <def>i</def><sym>) &gt;</sym> <def></def><num>0</num> <def></def><sym>=</sym> <def>search m</def> <sym>(</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>)</sym> <def>p ps<br />
search m i p ps</def> <sym>=</sym> <def></def><kwa>let</kwa> <def></def><sym>(</sym><def>q</def><sym>,</sym><def>r</def><sym>) =</sym> <def>divMod i</def> <num>10</num> <def></def><kwa>in</kwa><br />
<def></def>    <sym>[</sym> <def>ps'</def><br />
    <sym>|</sym> <def>p'</def> <sym>&lt;- [</sym><def></def><num>0</num><def>.</def><num>.9</num><def></def><sym>],</sym> <def>p .</def><sym>&amp;</sym><def>. shiftL</def> <num>1</num> <def>p'</def> <sym>==</sym> <def></def><num>0</num><def></def><sym>,</sym><br />
<def>      mask</def> <sym>&lt;-</sym> <def>pieceMasks</def> <sym>!</sym> <def>p'</def> <sym>!</sym> <def>r</def><sym>,</sym><br />
<def></def>      <kwa>let</kwa> <def>mask'</def> <sym>=</sym> <def>shiftL mask</def> <sym>(</sym><def></def><num>10</num><def></def><sym>*</sym><def>q</def><sym>),</sym><br />
<def>      m .</def><sym>&amp;</sym><def>. mask'</def> <sym>==</sym> <def></def><num>0</num><def></def><sym>,</sym><br />
<def>      ps'</def> <sym>&lt;-</sym> <def>search</def> <sym>(</sym><def>m .</def><sym>|</sym><def>. mask'</def><sym>) (</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>) (</sym><def>p .</def><sym>|</sym><def>. shiftL</def> <num>1</num> <def>p'</def><sym>) ((</sym><def>p'</def><sym>,</sym><def>mask'</def><sym>):</sym><def>ps</def><sym>)]</sym><br />
<def><br />
rows ps</def> <sym>= [[</sym><def>i</def> <sym>|</sym> <def>x</def> <sym>&lt;- [</sym><def></def><num>0</num><def>.</def><num>.4</num><def></def><sym>], (</sym><def>i</def><sym>,</sym><def>m</def><sym>) &lt;-</sym> <def>ps</def><sym>,</sym> <def>shiftL</def> <num>1</num> <def></def><sym>(</sym><def>y</def><sym>*</sym><def></def><num>5</num><def></def><sym>+</sym><def>x</def><sym>)</sym> <def>.</def><sym>&amp;</sym><def>. m</def> <sym>/=</sym> <def></def><num>0</num><def></def><sym>] |</sym> <def>y</def> <sym>&lt;- [</sym><def></def><num>0</num><def>.</def><num>.9</num><def></def><sym>]]</sym><br />
<def><br />
main</def> <sym>=</sym> <def></def><kwa>do</kwa><br />
<def>    n</def> <sym>&lt;-</sym> <def>readIO . head</def> <sym>=&lt;&lt;</sym> <def>getArgs</def><br />
    <kwa>let</kwa> <def>sols</def> <sym>=</sym> <def>map rows</def> <sym>(</sym><def>take n</def> <sym>(</sym><def>search</def> <sym>(-</sym><def>shiftL</def> <num>1 50</num> <def></def><sym>::</sym> <def>Word64</def><sym>)</sym> <def></def><num>0</num> <def></def><sym>(</sym><def></def><num>0</num> <def></def><sym>::</sym> <def>Word</def><sym>) []))</sym><br />
<def>    putStrLn</def> <sym>(</sym><def>show</def> <sym>(</sym><def>length sols</def><sym>) ++</sym> <def></def><str>&quot; solutions found\n&quot;</str><def></def><sym>)</sym><br />
<def>    mapM</def> <sym>(</sym><def>putStrLn . unlines .</def> <sym>(</sym><def>zipWith</def> <sym>(++) (</sym><def>cycle</def> <sym>[</sym><def></def><str>&quot;&quot;</str><def></def><sym>,</sym><def></def><str>&quot; &quot;</str><def></def><sym>]))</sym><br />
<def>         . map</def> <sym>((++</sym> <def></def><str>&quot; &quot;</str><def></def><sym>)</sym> <def>. unwords . map show</def><sym>)) [</sym><def>minimum sols</def><sym>,</sym><def>maximum sols</def><sym>]</sym><def></def><br />
</source>
