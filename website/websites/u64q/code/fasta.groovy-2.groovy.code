<source>
<def></def><com>/* The Computer Language Benchmarks Game</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com></com><br />
<com>   originally written by Jochen Hinrichsen</com><br />
<com>   fixed for Groovy 1.5 and refactored by Cedric Hurst</com><br />
<com>*/</com><def></def><br />
<br />
<kwa>public class</kwa> <def>fasta</def> <sym>{</sym><br />
<def></def>   <kwa>static final</kwa> <def>def NEWLINE</def> <sym>=</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>.</sym><def></def><kwd>getBytes</kwd><def></def><sym>()[</sym><def></def><num>0</num><def></def><sym>]</sym><br />
<def></def><br />
   <kwa>static final</kwa> <def>def LINE_LENGTH</def> <sym>=</sym> <def></def><num>60</num><br />
<def></def><br />
   <slc>// Weighted selection from alphabet</slc><br />
<def></def>   <kwa>static final</kwa> <def></def><kwc>String</kwc> <def>ALU</def> <sym>=</sym> <def></def><str>&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</str><def></def> <sym>+</sym><br />
<def></def>   <str>&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</str><def></def> <sym>+</sym><br />
<def></def>   <str>&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</str><def></def> <sym>+</sym><br />
<def></def>   <str>&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</str><def></def> <sym>+</sym><br />
<def></def>   <str>&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</str><def></def> <sym>+</sym><br />
<def></def>   <str>&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</str><def></def> <sym>+</sym><br />
<def></def>   <str>&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</str><def></def><br />
   <kwa>static final</kwa> <def></def><kwb>byte</kwb><def></def><sym>[]</sym> <def>ALUB</def> <sym>=</sym> <def>ALU</def><sym>.</sym><def></def><kwd>getBytes</kwd><def></def><sym>()</sym><br />
<def></def><br />
   <kwa>static</kwa> <def>def</def> <kwd>frequency</kwd><def></def><sym>(</sym><def></def><kwc>String</kwc> <def>s</def><sym>,</sym> <def></def><kwb>double</kwb> <def>p</def><sym>) {</sym><br />
<def></def>      <kwa>return</kwa> <def></def><sym>[</sym><def>p</def><sym>, (</sym><def></def><kwb>byte</kwb><def></def><sym>)</sym><def>s</def><sym>]</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <kwa>static final</kwa> <def>def IUB</def> <sym>= [</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'a'</str><def></def><sym>,</sym> <def></def><num>0.27</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'c'</str><def></def><sym>,</sym> <def></def><num>0.12</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'g'</str><def></def><sym>,</sym> <def></def><num>0.12</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'t'</str><def></def><sym>,</sym> <def></def><num>0.27</num><def>d</def><sym>),</sym><br />
<def></def><br />
           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'B'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'D'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'H'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'K'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'M'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'N'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'R'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'S'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'V'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'W'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'Y'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def>d</def><sym>)</sym><br />
<def></def>   <sym>]</sym><br />
<def></def><br />
   <kwa>static final</kwa> <def>def HomoSapiens</def> <sym>= [</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'a'</str><def></def><sym>,</sym> <def></def><num>0.3029549426680</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'c'</str><def></def><sym>,</sym> <def></def><num>0.1979883004921</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'g'</str><def></def><sym>,</sym> <def></def><num>0.1975473066391</num><def>d</def><sym>),</sym><br />
<def></def>           <kwd>frequency</kwd><def></def><sym>(</sym><def></def><str>'t'</str><def></def><sym>,</sym> <def></def><num>0.3015094502008</num><def>d</def><sym>)</sym><br />
<def></def>   <sym>]</sym><br />
<def></def><br />
   <kwa>static final</kwa> <def>def BUFFER_SIZE</def> <sym>=</sym> <def></def><num>8192</num><br />
<def></def><br />
   <slc>// pseudo-random number generator</slc><br />
<def></def>   <kwa>static</kwa> <def>def IM</def> <sym>=</sym> <def></def><num>139968</num><br />
<def></def>   <kwa>static</kwa> <def>def IA</def> <sym>=</sym> <def></def><num>3877</num><br />
<def></def>   <kwa>static</kwa> <def>def IC</def> <sym>=</sym> <def></def><num>29573</num><br />
<def></def>   <kwa>static</kwa> <def>def last</def> <sym>=</sym> <def></def><num>42</num><br />
<def></def><br />
   <kwa>static</kwa> <def>def</def> <kwd>random</kwd><def></def><sym>(</sym><def>def max</def><sym>) {</sym><br />
<def>       last</def> <sym>= (</sym><def>last</def> <sym>*</sym> <def>IA</def> <sym>+</sym> <def>IC</def><sym>) %</sym> <def>IM<br />
       max</def> <sym>*</sym> <def>last</def> <sym>/</sym> <def>IM</def><br />
   <sym>}</sym><br />
<def></def><br />
   <kwa>static</kwa> <def>def</def> <kwd>makeCumulative</kwd><def></def><sym>(</sym><def>a</def><sym>) {</sym><br />
<def>        def cp</def> <sym>=</sym> <def></def><num>0.0</num><def>d</def><br />
        <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>a</def><sym>.</sym><def></def><kwd>size</kwd><def></def><sym>()) {</sym><br />
<def>            cp</def> <sym>+=</sym> <def>a</def><sym>[</sym><def>i</def><sym>][</sym><def></def><num>0</num><def></def><sym>]</sym><br />
<def>            a</def><sym>[</sym><def>i</def><sym>][</sym><def></def><num>0</num><def></def><sym>] =</sym> <def>cp</def><br />
        <sym>}</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <slc>// select a random frequency.c</slc><br />
<def>   def</def> <kwd>selectRandom</kwd><def></def><sym>() {</sym><br />
<def>       def len</def> <sym>=</sym> <def>a</def><sym>.</sym><def></def><kwd>size</kwd><def></def><sym>()</sym><br />
<def>       def r</def> <sym>=</sym> <def></def><kwd>random</kwd><def></def><sym>(</sym><def></def><num>1.0</num><def>d</def><sym>)</sym><br />
<def></def>       <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>len</def><sym>)</sym><br />
<def></def>           <kwa>if</kwa> <def></def><sym>(</sym><def>r</def> <sym>&lt;</sym> <def>a</def><sym>[</sym><def>i</def><sym>][</sym><def></def><num>0</num><def></def><sym>])</sym><br />
<def></def>               <kwa>return</kwa> <def>a</def><sym>[</sym><def>i</def><sym>][</sym><def></def><num>1</num><def></def><sym>]</sym><br />
<def></def>       <kwa>return</kwa> <def>a</def><sym>[</sym><def>len</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>][</sym><def></def><num>1</num><def></def><sym>]</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <kwc>String</kwc> <def>id</def><sym>,</sym> <def>desc</def><br />
   <kwb>int</kwb> <def>n</def><sym>,</sym> <def>index</def><br />
   <kwc>PrintStream</kwc> <def>writer</def><br />
   <kwb>byte</kwb><def></def><sym>[]</sym> <def>bbuffer<br />
   def a</def><br />
<br />
   <kwa>public</kwa> <def></def><kwd>fasta</kwd><def></def><sym>()</sym><br />
<def></def>   <sym>{</sym><br />
<def></def>      <kwa>this</kwa><def></def><sym>.</sym><def>bbuffer</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>byte</kwb><def></def><sym>[</sym><def>BUFFER_SIZE</def><sym>]</sym><br />
<def></def>      <kwa>this</kwa><def></def><sym>.</sym><def>index</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>   <sym>}</sym><br />
<def><br />
   def</def> <kwd>makeRepeat</kwd><def></def><sym>() {</sym><br />
<def></def>      <kwb>byte</kwb><def></def><sym>[]</sym> <def>bbuffer</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>byte</kwb><def></def><sym>[</sym><def>BUFFER_SIZE</def><sym>]</sym><br />
<def>      index</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwb>int</kwb> <def>m</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwb>int</kwb> <def>k</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwb>int</kwb> <def>kn</def> <sym>=</sym> <def>a</def><sym>.</sym><def></def><kwd>length</kwd><def></def><sym>()</sym><br />
<def>      writer</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;&gt;&quot;</str><def></def> <sym>+</sym> <def>id</def> <sym>+</sym> <def></def><str>&quot; &quot;</str><def></def> <sym>+</sym> <def>desc</def> <sym>+</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><br />
      <kwa>while</kwa> <def></def><sym>(</sym><def>n</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>) {</sym><br />
<def>            m</def> <sym>= (</sym><def>n</def> <sym>&lt;</sym> <def>LINE_LENGTH</def><sym>)</sym> <def>? n</def> <sym>:</sym> <def>LINE_LENGTH</def><br />
            <kwa>if</kwa> <def></def><sym>(</sym><def>BUFFER_SIZE</def> <sym>-</sym> <def>index</def> <sym>&lt;</sym> <def>m</def><sym>){</sym><br />
<def>               writer</def><sym>.</sym><def></def><kwd>write</kwd><def></def><sym>(</sym><def>bbuffer</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>index</def><sym>)</sym><br />
<def>               index</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>            <sym>}</sym><br />
<def></def>            <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>m</def><sym>) {</sym><br />
<def></def>               <kwa>if</kwa> <def></def><sym>(</sym><def>k</def> <sym>==</sym> <def>kn</def><sym>)</sym> <def>k</def> <sym>=</sym> <def></def><num>0</num><br />
<def>               bbuffer</def><sym>[</sym><def>index</def><sym>++] =</sym> <def>ALUB</def><sym>[</sym><def>k</def><sym>++]</sym><br />
<def></def>            <sym>}</sym><br />
<def>            bbuffer</def><sym>[</sym><def>index</def><sym>++] =</sym> <def>NEWLINE<br />
            n</def> <sym>-=</sym> <def>LINE_LENGTH</def><br />
      <sym>}</sym><br />
<def></def>      <kwa>if</kwa><def></def><sym>(</sym><def>index</def> <sym>!=</sym> <def></def><num>0</num><def></def><sym>)</sym> <def>writer</def><sym>.</sym><def></def><kwd>write</kwd><def></def><sym>(</sym><def>bbuffer</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>index</def><sym>)</sym><br />
<def></def>   <sym>}</sym><br />
<def><br />
   def</def> <kwd>makeRandom</kwd><def></def><sym>() {</sym><br />
<def>      index</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwb>int</kwb> <def>m</def> <sym>=</sym> <def></def><num>0</num><br />
<def>      writer</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;&gt;&quot;</str><def></def> <sym>+</sym> <def>id</def> <sym>+</sym> <def></def><str>&quot; &quot;</str><def></def> <sym>+</sym> <def>desc</def> <sym>+</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><br />
      <kwa>while</kwa> <def></def><sym>(</sym><def>n</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>) {</sym><br />
<def>            m</def> <sym>= (</sym><def>n</def> <sym>&lt;</sym> <def>LINE_LENGTH</def><sym>)</sym> <def>? n</def> <sym>:</sym> <def>LINE_LENGTH</def><br />
            <kwa>if</kwa> <def></def><sym>(</sym><def>BUFFER_SIZE</def> <sym>-</sym> <def>index</def> <sym>&lt;=</sym> <def>m</def><sym>){</sym><br />
<def>                  writer</def><sym>.</sym><def></def><kwd>write</kwd><def></def><sym>(</sym><def>bbuffer</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>index</def><sym>)</sym><br />
<def>                  index</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>            <sym>}</sym><br />
<def></def>            <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>m</def><sym>) {</sym><br />
<def>               bbuffer</def><sym>[</sym><def>index</def><sym>++] =</sym> <def></def><kwd>selectRandom</kwd><def></def><sym>()</sym><br />
<def></def>            <sym>}</sym><br />
<def>            bbuffer</def><sym>[</sym><def>index</def><sym>++] =</sym> <def>NEWLINE<br />
            n</def> <sym>-=</sym> <def>LINE_LENGTH</def><br />
      <sym>}</sym><br />
<def></def>      <kwa>if</kwa><def></def><sym>(</sym><def>index</def> <sym>!=</sym> <def></def><num>0</num><def></def><sym>)</sym> <def>writer</def><sym>.</sym><def></def><kwd>write</kwd><def></def><sym>(</sym><def>bbuffer</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>index</def><sym>)</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><br />
   <kwa>public static</kwa> <def></def><kwb>void</kwb> <def></def><kwd>main</kwd><def></def><sym>(</sym><def>args</def><sym>)</sym><br />
<def></def>   <sym>{</sym><br />
<def></def>      <kwd>makeCumulative</kwd><def></def><sym>(</sym><def>HomoSapiens</def><sym>)</sym><br />
<def></def>      <kwd>makeCumulative</kwd><def></def><sym>(</sym><def>IUB</def><sym>)</sym><br />
<def><br />
      def n</def> <sym>= !</sym><def>args ?</def> <num>2500000</num> <def></def><sym>:</sym> <def>args</def><sym>[</sym><def></def><num>0</num><def></def><sym>].</sym><def></def><kwd>toInteger</kwd><def></def><sym>()</sym><br />
<def></def><br />
      <kwa>new</kwa> <def></def><kwd>fasta</kwd><def></def><sym>(</sym><def>id</def><sym>:</sym> <def></def><str>&quot;ONE&quot;</str><def></def><sym>,</sym> <def>desc</def><sym>:</sym> <def></def><str>&quot;Homo sapiens alu&quot;</str><def></def><sym>,</sym><br />
<def>                 a</def><sym>:</sym> <def>ALU</def><sym>,</sym> <def>n</def><sym>:</sym> <def>n</def> <sym>*</sym> <def></def><num>2</num><def></def><sym>,</sym> <def>writer</def><sym>:</sym> <def></def><kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>).</sym><def></def><kwd>makeRepeat</kwd><def></def><sym>()</sym><br />
<def></def><br />
      <kwa>new</kwa> <def></def><kwd>fasta</kwd><def></def><sym>(</sym><def>id</def><sym>:</sym> <def></def><str>&quot;TWO&quot;</str><def></def><sym>,</sym> <def>desc</def><sym>:</sym> <def></def><str>&quot;IUB ambiguity codes&quot;</str><def></def><sym>,</sym><br />
<def>                 a</def><sym>:</sym> <def>IUB</def><sym>,</sym> <def>n</def><sym>:</sym> <def>n</def> <sym>*</sym> <def></def><num>3</num><def></def><sym>,</sym> <def>writer</def><sym>:</sym> <def></def><kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>).</sym><def></def><kwd>makeRandom</kwd><def></def><sym>()</sym><br />
<def></def><br />
      <kwa>new</kwa> <def></def><kwd>fasta</kwd><def></def><sym>(</sym><def>id</def><sym>:</sym> <def></def><str>&quot;THREE&quot;</str><def></def><sym>,</sym> <def>desc</def><sym>:</sym> <def></def><str>&quot;Homo sapiens frequency&quot;</str><def></def><sym>,</sym><br />
<def>                 a</def><sym>:</sym> <def>HomoSapiens</def><sym>,</sym> <def>n</def><sym>:</sym> <def>n</def> <sym>*</sym> <def></def><num>5</num><def></def><sym>,</sym> <def>writer</def><sym>:</sym> <def></def><kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>).</sym><def></def><kwd>makeRandom</kwd><def></def><sym>()</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
