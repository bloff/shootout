<source>
<def></def><com>/* The Computer Language Benchmarks Game</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com>   contributed by Brian Schlining</com><br />
<com>*/</com><def><br />
<br />
def n</def> <sym>=</sym> <def></def><num>7</num><br />
<def></def><kwa>if</kwa> <def></def><sym>(</sym><def>args</def><sym>.</sym><def>length</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>) {</sym><br />
<def>    n</def> <sym>=</sym> <def></def><kwc>Integer</kwc><def></def><sym>.</sym><def></def><kwd>parseInt</kwd><def></def><sym>(</sym><def>args</def><sym>[</sym><def></def><num>0</num><def></def><sym>])</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwd>println</kwd><def></def><sym>(</sym><def></def><str>&quot;Pfannkuchen(&quot;</str><def></def> <sym>+</sym> <def>n</def> <sym>+</sym> <def></def><str>&quot;) = &quot;</str><def></def> <sym>+</sym> <def></def><kwd>fannkuch</kwd><def></def><sym>(</sym><def>n</def><sym>))</sym><br />
<def><br />
<br />
def</def> <kwd>fannkuch</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>n</def><sym>) {</sym><br />
<def></def>    <kwb>int</kwb> <def>check</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>    <kwb>int</kwb><def></def><sym>[]</sym> <def>perm</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>int</kwb><def></def><sym>[</sym><def>n</def><sym>]</sym><br />
<def></def>    <kwb>int</kwb><def></def><sym>[]</sym> <def>perm1</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>int</kwb><def></def><sym>[</sym><def>n</def><sym>]</sym><br />
<def></def>    <kwb>int</kwb><def></def><sym>[]</sym> <def>count</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>int</kwb><def></def><sym>[</sym><def>n</def><sym>]</sym><br />
<def></def>    <kwb>int</kwb><def></def><sym>[]</sym> <def>maxPerm</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwb>int</kwb><def></def><sym>[</sym><def>n</def><sym>]</sym><br />
<def></def>    <kwb>int</kwb> <def>maxFlipsCount</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>    <kwb>int</kwb> <def>m</def> <sym>=</sym> <def>n</def> <sym>-</sym> <def></def><num>1</num><br />
<def></def><br />
    <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>n</def><sym>) {</sym><br />
<def>        perm1</def><sym>[</sym><def>i</def><sym>] =</sym> <def>i</def><br />
    <sym>}</sym><br />
<def></def>    <kwb>int</kwb> <def>r</def> <sym>=</sym> <def>n</def><br />
<br />
    <kwa>while</kwa> <def></def><sym>(</sym><def>true</def><sym>) {</sym><br />
<def></def>        <slc>// write-out the first 30 permutations</slc><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(</sym><def>check</def> <sym>&lt;</sym> <def></def><num>30</num><def></def><sym>){</sym><br />
<def></def>            <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>n</def><sym>) {</sym><br />
<def></def>                <kwd>print</kwd><def></def><sym>(</sym><def>perm1</def><sym>[</sym><def>i</def><sym>] +</sym> <def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>            <sym>}</sym><br />
<def></def>            <kwd>print</kwd><def></def><sym>(</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>)</sym><br />
<def>            check</def><sym>++</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <kwa>while</kwa> <def></def><sym>(</sym><def>r</def> <sym>!=</sym> <def></def><num>1</num><def></def><sym>) {</sym><br />
<def>            count</def><sym>[</sym><def>r</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>] =</sym> <def>r<br />
            r</def><sym>--</sym><br />
<def></def>        <sym>}</sym><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(!(</sym><def>perm1</def><sym>[</sym><def></def><num>0</num><def></def><sym>] ==</sym> <def></def><num>0</num> <def></def><sym>||</sym> <def>perm1</def><sym>[</sym><def>m</def><sym>] ==</sym> <def>m</def><sym>)) {</sym><br />
<def></def>            <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>n</def><sym>) {</sym><br />
<def>                perm</def><sym>[</sym><def>i</def><sym>] =</sym> <def>perm1</def><sym>[</sym><def>i</def><sym>]</sym><br />
<def></def>            <sym>}</sym><br />
<def></def><br />
            <kwb>int</kwb> <def>flipsCount</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>            <kwb>int</kwb> <def>k</def><br />
<br />
            <kwa>while</kwa> <def></def><sym>(!((</sym><def>k</def> <sym>=</sym> <def>perm</def><sym>[</sym><def></def><num>0</num><def></def><sym>]) ==</sym> <def></def><num>0</num><def></def><sym>)) {</sym><br />
<def></def>                <kwb>int</kwb> <def>k2</def> <sym>= (</sym><def>k</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>) &gt;&gt;</sym> <def></def><num>1</num><br />
<def></def>                <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>k2</def><sym>) {</sym><br />
<def></def>                    <kwb>int</kwb> <def>temp</def> <sym>=</sym> <def>perm</def><sym>[</sym><def>i</def><sym>]</sym><br />
<def>                    perm</def><sym>[</sym><def>i</def><sym>] =</sym> <def>perm</def><sym>[</sym><def>k</def> <sym>-</sym> <def>i</def><sym>]</sym><br />
<def>                    perm</def><sym>[</sym><def>k</def> <sym>-</sym> <def>i</def><sym>] =</sym> <def>temp</def><br />
                <sym>}</sym><br />
<def>                flipsCount</def><sym>++</sym><br />
<def></def>            <sym>}</sym><br />
<def></def><br />
            <kwa>if</kwa> <def></def><sym>(</sym><def>flipsCount</def> <sym>&gt;</sym> <def>maxFlipsCount</def><sym>) {</sym><br />
<def>                maxFlipsCount</def> <sym>=</sym> <def>flipsCount</def><br />
                <kwa>for</kwa> <def></def><sym>(</sym><def>i in</def> <num>0</num><def></def><sym>..&lt;</sym><def>n</def><sym>) {</sym><br />
<def>                    maxPerm</def><sym>[</sym><def>i</def><sym>] =</sym> <def>perm1</def><sym>[</sym><def>i</def><sym>]</sym><br />
<def></def>                <sym>}</sym><br />
<def></def>            <sym>}</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <kwa>while</kwa> <def></def><sym>(</sym><def>true</def><sym>) {</sym><br />
<def></def>            <kwa>if</kwa> <def></def><sym>(</sym><def>r</def> <sym>==</sym> <def>n</def><sym>) {</sym><br />
<def></def>                <kwa>return</kwa> <def>maxFlipsCount</def><br />
            <sym>}</sym><br />
<def></def>            <kwb>int</kwb> <def>perm0</def> <sym>=</sym> <def>perm1</def><sym>[</sym><def></def><num>0</num><def></def><sym>]</sym><br />
<def></def>            <kwb>int</kwb> <def>i</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>            <kwa>while</kwa> <def></def><sym>(</sym><def>i</def> <sym>&lt;</sym> <def>r</def><sym>) {</sym><br />
<def></def>                <kwb>int</kwb> <def>j</def> <sym>=</sym> <def>i</def> <sym>+</sym> <def></def><num>1</num><br />
<def>                perm1</def><sym>[</sym><def>i</def><sym>] =</sym> <def>perm1</def><sym>[</sym><def>j</def><sym>]</sym><br />
<def>                i</def> <sym>=</sym> <def>j</def><br />
            <sym>}</sym><br />
<def>            perm1</def><sym>[</sym><def>r</def><sym>] =</sym> <def>perm0<br />
<br />
            count</def><sym>[</sym><def>r</def><sym>] =</sym> <def>count</def><sym>[</sym><def>r</def><sym>] -</sym> <def></def><num>1</num><br />
<def></def>            <kwa>if</kwa> <def></def><sym>(</sym><def>count</def><sym>[</sym><def>r</def><sym>] &gt;</sym> <def></def><num>0</num><def></def><sym>) {</sym><br />
<def></def>                <kwa>break</kwa><br />
<def></def>            <sym>}</sym><br />
<def>            r</def><sym>++</sym><br />
<def></def>        <sym>}</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
