<source>
<def></def><com>{ The Computer Language Shootout</com><br />
<com>  http://shootout.alioth.debian.org</com><br />
<com></com><br />
<com>  contributed by Ian Osgood</com><br />
<com>  modified by Vincent Snijders</com><br />
<com>}</com><def></def><br />
<com>{$mode objfpc}</com><def></def><com>{$inline on}</com><def></def><com>{$I-}</com><def></def><br />
<br />
<kwa>program</kwa> <def>fasta</def><sym>;</sym><br />
<def></def><br />
<kwa>uses</kwa> <def>Math</def><sym>;</sym><br />
<def></def><br />
<kwa>const</kwa> <def>ALU</def> <sym>:</sym> <def>AnsiString</def> <sym>=</sym><br />
<def></def>  <str>'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</str><def></def> <sym>+</sym><br />
<def></def>  <str>'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</str><def></def> <sym>+</sym><br />
<def></def>  <str>'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</str><def></def> <sym>+</sym><br />
<def></def>  <str>'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</str><def></def> <sym>+</sym><br />
<def></def>  <str>'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</str><def></def> <sym>+</sym><br />
<def></def>  <str>'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</str><def></def> <sym>+</sym><br />
<def></def>  <str>'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</str><def></def><sym>;</sym><br />
<def></def><br />
<kwa>const</kwa> <def>codes</def> <sym>=</sym> <def></def><str>'acgtBDHKMNRSVWY'</str><def></def><sym>;</sym><br />
<def></def><br />
<kwa>const</kwa> <def>IUB</def> <sym>:</sym> <def></def><kwa>array</kwa><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>.</sym><def></def><num>.14</num><def></def><sym>]</sym> <def></def><kwa>of</kwa> <def></def><kwb>double</kwb> <def></def><sym>= (</sym> <def></def><num>0.27</num><def></def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>,</sym><br />
<def></def>  <num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>,</sym> <def></def><num>0.02</num> <def></def><sym>);</sym><br />
<def></def><br />
<kwa>const</kwa> <def>HomoSap</def> <sym>:</sym> <def></def><kwa>array</kwa><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>.</sym><def></def><num>.3</num><def></def><sym>]</sym> <def></def><kwa>of</kwa> <def></def><kwb>double</kwb> <def></def><sym>= (</sym><br />
<def></def>  <num>0.3029549426680</num><def></def><sym>,</sym> <def></def><num>0.1979883004921</num><def></def><sym>,</sym> <def></def><num>0.1975473066391</num><def></def><sym>,</sym>  <def></def><num>0.3015094502008</num> <def></def><sym>);</sym><br />
<def></def><br />
<kwa>const</kwa> <def>LineLen</def> <sym>=</sym> <def></def><num>60</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>type</kwa><br />
<def>  TGene</def><sym>=</sym><def></def><kwa>record</kwa><br />
<def>    prob</def><sym>:</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def>    code</def><sym>:</sym> <def></def><kwb>char</kwb><def></def><sym>;</sym><br />
<def>    dummy</def><sym>:</sym> <def></def><kwa>array</kwa><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>.</sym><def></def><num>.7</num><def></def><sym>]</sym> <def></def><kwa>of</kwa> <def></def><kwb>char</kwb><def></def><sym>;</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def>  PGene</def> <sym>= ^</sym><def>TGene</def><sym>;</sym><br />
<def></def><br />
<kwa>var</kwa><br />
<def>  n</def> <sym>:</sym> <def></def><kwb>longint</kwb><def></def><sym>;</sym><br />
<def>  Genes</def><sym>:</sym> <def></def><kwa>array of</kwa> <def>TGene</def><sym>;</sym><br />
<def>  TextBuf</def><sym>:</sym> <def></def><kwa>array</kwa><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>..</sym><def></def><num>$FFF</num><def></def><sym>]</sym> <def></def><kwa>of</kwa> <def></def><kwb>byte</kwb><def></def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def></def><kwd>fastaRepeat</kwd><def></def><sym>(</sym><def>n</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>);</sym><br />
<def></def><kwa>var</kwa><br />
<def>  sourceALU</def><sym>:</sym> <def>ansistring</def><sym>;</sym><br />
<def>  line</def><sym>,</sym> <def>wrapALU</def> <sym>:</sym> <def>pchar</def><sym>;</sym><br />
<def>  nulled</def> <sym>:</sym> <def></def><kwb>char</kwb><def></def><sym>;</sym><br />
<def>  lenALU</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>;</sym><br />
<def></def><kwa>begin</kwa><br />
<def>  sourceALU</def> <sym>:=</sym> <def>ALU</def> <sym>+</sym> <def></def><kwd>copy</kwd><def></def><sym>(</sym><def>ALU</def><sym>,</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>LineLen</def><sym>);</sym><br />
<def>  line</def> <sym>:=</sym> <def></def><kwd>PChar</kwd><def></def><sym>(</sym><def>sourceALU</def><sym>);</sym><br />
<def>  lenALU</def> <sym>:=</sym> <def></def><kwd>length</kwd><def></def><sym>(</sym><def>ALU</def><sym>);</sym><br />
<def>  wrapALU</def> <sym>:= @</sym><def>sourceALU</def><sym>[</sym><def>lenALU</def><sym>];</sym><br />
<def></def>  <kwa>repeat</kwa><br />
<def>    nulled</def> <sym>:=</sym> <def>line</def><sym>[</sym><def>LineLen</def><sym>];</sym><br />
<def>    line</def><sym>[</sym><def>LineLen</def><sym>] :=</sym> <def></def><esc>#0</esc><def></def><sym>;</sym><br />
<def></def>    <kwd>writeln</kwd><def></def><sym>(</sym><def>line</def><sym>);</sym><br />
<def></def>    <kwd>inc</kwd><def></def><sym>(</sym><def>line</def><sym>,</sym> <def>LineLen</def><sym>);</sym><br />
<def>    line</def><sym>^ :=</sym> <def>nulled</def><sym>;</sym><br />
<def></def>    <kwa>if</kwa> <def>line</def><sym>&gt;</sym><def>wrapALU</def> <kwa>then</kwa><br />
<def></def>      <kwd>dec</kwd><def></def><sym>(</sym><def>line</def><sym>,</sym> <def>lenALU</def><sym>);</sym><br />
<def>    n</def> <sym>:=</sym> <def>n</def> <sym>-</sym> <def>LineLen</def><sym>;</sym><br />
<def></def>  <kwa>until</kwa> <def>n</def> <sym>&lt;=</sym> <def>LineLen</def><sym>;</sym><br />
<def>  line</def><sym>[</sym><def>n</def><sym>] :=</sym> <def></def><esc>#0</esc><def></def><sym>;</sym><br />
<def></def>  <kwd>writeln</kwd><def></def><sym>(</sym><def>line</def><sym>);</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>genRandom</kwd><def></def><sym>(</sym><def>limit</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>):</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def></def><kwa>const</kwa><br />
<def>  seed</def> <sym>:</sym> <def></def><kwb>integer</kwb> <def></def><sym>=</sym> <def></def><num>42</num><def></def><sym>;</sym><br />
<def>  IM</def> <sym>=</sym> <def></def><num>139968</num><def></def><sym>;</sym><br />
<def>  IA</def> <sym>=</sym> <def></def><num>3877</num><def></def><sym>;</sym><br />
<def>  IC</def> <sym>=</sym> <def></def><num>29573</num><def></def><sym>;</sym><br />
<def></def><kwa>begin</kwa><br />
<def>  seed</def> <sym>:= (</sym><def>seed</def> <sym>*</sym> <def>IA</def> <sym>+</sym> <def>IC</def><sym>)</sym> <def></def><kwa>mod</kwa> <def>IM</def><sym>;</sym><br />
<def>  genRandom</def> <sym>:=</sym> <def>limit</def> <sym>*</sym> <def>seed</def> <sym>* (</sym><def></def><num>1</num> <def></def><sym>/</sym> <def>IM</def><sym>);</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def></def><kwd>InitGenes</kwd><def></def><sym>(</sym><def></def><kwa>const</kwa> <def>probs</def><sym>:</sym> <def></def><kwa>array of</kwa> <def></def><kwb>double</kwb><def></def><sym>);</sym><br />
<def></def><kwa>var</kwa><br />
<def>  i</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>;</sym><br />
<def>  SumProb</def><sym>:</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def></def><kwa>begin</kwa><br />
<def></def>  <kwd>SetLength</kwd><def></def><sym>(</sym><def>Genes</def><sym>,</sym> <def></def><kwd>length</kwd><def></def><sym>(</sym><def>probs</def><sym>));</sym><br />
<def>  SumProb</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>i</def> <sym>:=</sym> <def></def><kwd>low</kwd><def></def><sym>(</sym><def>probs</def><sym>)</sym> <def></def><kwa>to</kwa> <def></def><kwd>high</kwd><def></def><sym>(</sym><def>probs</def><sym>)</sym> <def></def><kwa>do begin</kwa><br />
<def>    SumProb</def> <sym>:=</sym> <def>SumProb</def> <sym>+</sym> <def>probs</def><sym>[</sym><def>i</def><sym>];</sym><br />
<def>    Genes</def><sym>[</sym><def>i</def><sym>].</sym><def>prob</def> <sym>:=</sym> <def>SumProb</def><sym>;</sym><br />
<def>    Genes</def><sym>[</sym><def>i</def><sym>].</sym><def>code</def> <sym>:=</sym> <def>codes</def><sym>[</sym><def>i</def><sym>-</sym><def></def><kwd>low</kwd><def></def><sym>(</sym><def>probs</def><sym>)+</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def></def><kwd>fastaRandom</kwd><def></def><sym>(</sym><def>n</def> <sym>:</sym> <def></def><kwb>integer</kwb><def></def><sym>;</sym> <def></def><kwa>const</kwa> <def>probs</def><sym>:</sym> <def></def><kwa>array of</kwa> <def></def><kwb>double</kwb><def></def><sym>);</sym><br />
<def></def><kwa>var</kwa><br />
<def>  line</def> <sym>:</sym> <def></def><kwa>string</kwa><def></def><sym>;</sym><br />
<def>  p</def> <sym>:</sym> <def>pchar</def><sym>;</sym><br />
<def></def><br />
  <kwa>function</kwa> <def>chooseCode</def> <sym>:</sym> <def></def><kwb>char</kwb><def></def><sym>;</sym> <def></def><kwa>inline</kwa><def></def><sym>;</sym><br />
<def></def>  <kwa>var</kwa> <def>r</def> <sym>:</sym> <def></def><kwb>double</kwb><def></def><sym>;</sym><br />
<def>      Gene</def><sym>:</sym> <def>PGene</def><sym>;</sym><br />
<def></def>  <kwa>begin</kwa><br />
<def>    r</def> <sym>:=</sym> <def></def><kwd>genRandom</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>);</sym><br />
<def><br />
    Gene</def> <sym>:= @</sym><def>Genes</def><sym>[</sym><def></def><kwd>low</kwd><def></def><sym>(</sym><def>Genes</def><sym>)];</sym><br />
<def></def>    <kwa>while</kwa> <def></def><sym>(</sym><def>r</def><sym>&gt;=</sym><def>Gene</def><sym>^.</sym><def>prob</def><sym>)</sym> <def></def><kwa>do</kwa><br />
<def></def>      <kwd>inc</kwd><def></def><sym>(</sym><def>Gene</def><sym>);</sym><br />
<def>   result</def> <sym>:=</sym> <def>Gene</def><sym>^.</sym><def>Code</def><sym>;</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>begin</kwa><br />
<def></def>  <com>{ make gene array}</com><def></def><br />
  <kwd>InitGenes</kwd><def></def><sym>(</sym><def>probs</def><sym>);</sym><br />
<def></def><br />
  <kwd>SetLength</kwd><def></def><sym>(</sym><def>line</def><sym>,</sym><def>lineLen</def><sym>);</sym><br />
<def></def>  <kwa>while</kwa> <def>n</def> <sym>&gt;</sym> <def>lineLen</def> <kwa>do</kwa><br />
<def></def>  <kwa>begin</kwa><br />
<def>    p</def> <sym>:= @</sym><def>line</def><sym>[</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def>    <kwa>while</kwa> <def></def><sym>(</sym><def>p</def><sym>&lt;=@</sym><def>line</def><sym>[</sym><def>lineLen</def><sym>])</sym> <def></def><kwa>do begin</kwa><br />
<def>      p</def><sym>^ :=</sym> <def>chooseCode</def><sym>;</sym><br />
<def></def>      <kwd>inc</kwd><def></def><sym>(</sym><def>p</def><sym>);</sym><br />
<def></def>    <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def>    <kwd>writeln</kwd><def></def><sym>(</sym><def>line</def><sym>);</sym><br />
<def>    n</def> <sym>:=</sym> <def>n</def> <sym>-</sym> <def>lineLen</def><sym>;</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
  <kwd>SetLength</kwd><def></def><sym>(</sym><def>line</def><sym>,</sym><def>n</def><sym>);</sym><br />
<def>  p</def> <sym>:= @</sym><def>line</def><sym>[</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def>  <kwa>while</kwa> <def></def><sym>(</sym><def>p</def><sym>&lt;=@</sym><def>line</def><sym>[</sym><def>n</def><sym>])</sym> <def></def><kwa>do begin</kwa><br />
<def>    p</def><sym>^ :=</sym> <def>chooseCode</def><sym>;</sym><br />
<def></def>    <kwd>inc</kwd><def></def><sym>(</sym><def>p</def><sym>);</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>;</sym><br />
<def></def>  <kwd>writeln</kwd><def></def><sym>(</sym><def>line</def><sym>);</sym><br />
<def></def><kwa>end</kwa><def></def><sym>;</sym><br />
<def></def><br />
<kwa>begin</kwa><br />
<def></def>  <kwd>SetTextBuf</kwd><def></def><sym>(</sym><def>output</def><sym>,</sym> <def>TextBuf</def><sym>,</sym> <def></def><kwd>sizeof</kwd><def></def><sym>(</sym><def>TextBuf</def><sym>));</sym><br />
<def></def>  <kwd>val</kwd><def></def><sym>(</sym><def></def><kwd>paramstr</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>),</sym> <def>n</def><sym>);</sym><br />
<def></def><br />
  <kwd>writeln</kwd><def></def><sym>(</sym><def></def><str>'&gt;ONE Homo sapiens alu'</str><def></def><sym>);</sym><br />
<def></def>  <kwd>fastaRepeat</kwd><def></def><sym>(</sym><def>n</def><sym>*</sym><def></def><num>2</num><def></def><sym>);</sym><br />
<def></def><br />
  <kwd>writeln</kwd><def></def><sym>(</sym><def></def><str>'&gt;TWO IUB ambiguity codes'</str><def></def><sym>);</sym><br />
<def></def>  <kwd>fastaRandom</kwd><def></def><sym>(</sym><def>n</def><sym>*</sym><def></def><num>3</num><def></def><sym>,</sym> <def>IUB</def><sym>);</sym><br />
<def></def><br />
  <kwd>writeln</kwd><def></def><sym>(</sym><def></def><str>'&gt;THREE Homo sapiens frequency'</str><def></def><sym>);</sym><br />
<def></def>  <kwd>fastaRandom</kwd><def></def><sym>(</sym><def>n</def><sym>*</sym><def></def><num>5</num><def></def><sym>,</sym> <def>HomoSap</def><sym>);</sym><br />
<def></def><kwa>end</kwa><def></def><sym>.</sym><br />
<def></def><br />
</source>
