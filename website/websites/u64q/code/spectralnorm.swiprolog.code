<source>
<def></def><slc>% ----------------------------------------------------------------------</slc><br />
<def></def><slc>% The Great Computer Language Shootout</slc><br />
<def></def><slc>% http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>%</slc><br />
<def></def><slc>% Contributed by Anthony Borla</slc><br />
<def></def><slc>% ----------------------------------------------------------------------</slc><br />
<def><br />
main</def> <sym>:-</sym><br />
<def>  cmdlNumArg</def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym> <def>N</def><sym>),</sym><br />
<def>  approximate</def><sym>(</sym><def>N</def><sym>,</sym> <def>R</def><sym>),</sym><br />
<def>  format</def><sym>(</sym><def></def><str>'~9f~n'</str><def></def><sym>, [</sym><def>R</def><sym>]).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
approximate</def><sym>(</sym><def>N</def><sym>,</sym> <def>R</def><sym>) :-</sym><br />
<def>  make_array</def><sym>(</sym><def>app_u</def><sym>,</sym> <def>N</def><sym>,</sym> <def></def><num>1.0</num><def></def><sym>,</sym> <def>U</def><sym>),</sym> <def>make_array</def><sym>(</sym><def>app_v</def><sym>,</sym> <def>N</def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>V</def><sym>),</sym><br />
<def><br />
  setvar</def><sym>(</sym><def>counter</def><sym>,</sym> <def></def><num>1</num><def></def><sym>),</sym><br />
<def></def>  <kwa>repeat</kwa><def></def><sym>,</sym><br />
<def>    getvar</def><sym>(</sym><def>counter</def><sym>,</sym> <def>I</def><sym>),</sym> <def>I1</def> <kwa>is</kwa> <def>I</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>setvar</def><sym>(</sym><def>counter</def><sym>,</sym> <def>I1</def><sym>),</sym><br />
<def>    mulAtAv</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>),</sym><br />
<def>    mulAtAv</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>U</def><sym>),</sym><br />
<def>  I</def> <sym>&gt;=</sym> <def></def><num>10</num><def></def><sym>,</sym><br />
<def>  dropvar</def><sym>(</sym><def>counter</def><sym>),</sym><br />
<def><br />
  vbv_loop</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VbV</def><sym>),</sym> <def>vv_loop</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Vv</def><sym>),</sym><br />
<def><br />
  drop_array</def><sym>(</sym><def>app_u</def><sym>),</sym> <def>drop_array</def><sym>(</sym><def>app_v</def><sym>),</sym><br />
<def><br />
  Vi</def> <kwa>is</kwa> <def>VbV</def> <sym>/</sym> <def>Vv</def><sym>,</sym> <def>R</def> <kwa>is</kwa> <def></def><kwb>sqrt</kwb><def></def><sym>(</sym><def>Vi</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
vbv_loop</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VbV</def><sym>) :-</sym> <def>vbv_loop_</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>VbV</def><sym>).</sym><br />
<def><br />
vbv_loop_</def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>VAcc</def><sym>,</sym> <def>VAcc</def><sym>) :- !.</sym><br />
<def><br />
vbv_loop_</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VAcc</def><sym>,</sym> <def>VbV</def><sym>) :-</sym><br />
<def>  get_arg</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>UValue</def><sym>),</sym> <def>get_arg</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VValue</def><sym>),</sym><br />
<def>  VAcc1</def> <kwa>is</kwa> <def>VAcc</def> <sym>+</sym> <def>UValue</def> <sym>*</sym> <def>VValue</def><sym>,</sym><br />
<def>  N1</def> <kwa>is</kwa> <def>N</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, !,</sym> <def>vbv_loop_</def><sym>(</sym><def>N1</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VAcc1</def><sym>,</sym> <def>VbV</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
vv_loop</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Vv</def><sym>) :-</sym> <def>vv_loop_</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>Vv</def><sym>).</sym><br />
<def><br />
vv_loop_</def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>VAcc</def><sym>,</sym> <def>VAcc</def><sym>) :- !.</sym><br />
<def><br />
vv_loop_</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VAcc</def><sym>,</sym> <def>Vv</def><sym>) :-</sym><br />
<def>  get_arg</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VValue</def><sym>),</sym><br />
<def>  VAcc1</def> <kwa>is</kwa> <def>VAcc</def> <sym>+</sym> <def>VValue</def> <sym>*</sym> <def>VValue</def><sym>,</sym><br />
<def>  N1</def> <kwa>is</kwa> <def>N</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, !,</sym> <def>vv_loop_</def><sym>(</sym><def>N1</def><sym>,</sym> <def>U</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VAcc1</def><sym>,</sym> <def>Vv</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
a</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>AResult</def><sym>) :-</sym><br />
<def>  Ia</def> <kwa>is</kwa> <def>I</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>Ja</def> <kwa>is</kwa> <def>J</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym><br />
<def>  AResult</def> <kwa>is</kwa> <def></def><num>1.0</num> <def></def><sym>/ ((</sym><def>Ia</def> <sym>+</sym> <def>Ja</def><sym>) * (</sym><def>Ia</def> <sym>+</sym> <def>Ja</def> <sym>+</sym> <def></def><num>1.0</num><def></def><sym>) /</sym> <def></def><num>2.0</num> <def></def><sym>+</sym> <def>Ia</def> <sym>+</sym> <def></def><num>1.0</num><def></def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
mulAv</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Av</def><sym>) :-</sym>  <def>mulAv_</def><sym>(</sym><def>N</def><sym>,</sym> <def>N</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Av</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
mulAv_</def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def><br />
mulAv_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Av</def><sym>) :-</sym><br />
<def>  set_arg</def><sym>(</sym><def>I</def><sym>,</sym> <def>Av</def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>),</sym><br />
<def>  mulAvJ_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Av</def><sym>),</sym><br />
<def>  I1</def> <kwa>is</kwa> <def>I</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, !,</sym> <def>mulAv_</def><sym>(</sym><def>I1</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Av</def><sym>).</sym><br />
<def><br />
mulAvJ_</def><sym>(</sym><def>_</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def><br />
mulAvJ_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Av</def><sym>) :-</sym><br />
<def>  get_arg</def><sym>(</sym><def>I</def><sym>,</sym> <def>Av</def><sym>,</sym> <def>AvValue</def><sym>),</sym> <def>get_arg</def><sym>(</sym><def>J</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VValue</def><sym>),</sym> <def>a</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>AResult</def><sym>),</sym><br />
<def>  AvNew</def> <kwa>is</kwa> <def>AvValue</def> <sym>+</sym> <def>AResult</def> <sym>*</sym> <def>VValue</def><sym>,</sym><br />
<def>  set_arg</def><sym>(</sym><def>I</def><sym>,</sym> <def>Av</def><sym>,</sym> <def>AvNew</def><sym>),</sym><br />
<def>  J1</def> <kwa>is</kwa> <def>J</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, !,</sym> <def>mulAvJ_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J1</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Av</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
mulAtV</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Atv</def><sym>) :-</sym>  <def>mulAtV_</def><sym>(</sym><def>N</def><sym>,</sym> <def>N</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Atv</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
mulAtV_</def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def><br />
mulAtV_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Atv</def><sym>) :-</sym><br />
<def>  set_arg</def><sym>(</sym><def>I</def><sym>,</sym> <def>Atv</def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>),</sym><br />
<def>  mulAtVJ_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Atv</def><sym>),</sym><br />
<def>  I1</def> <kwa>is</kwa> <def>I</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, !,</sym> <def>mulAtV_</def><sym>(</sym><def>I1</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Atv</def><sym>).</sym><br />
<def><br />
mulAtVJ_</def><sym>(</sym><def>_</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def><br />
mulAtVJ_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Atv</def><sym>) :-</sym><br />
<def>  get_arg</def><sym>(</sym><def>I</def><sym>,</sym> <def>Atv</def><sym>,</sym> <def>AtvValue</def><sym>),</sym> <def>get_arg</def><sym>(</sym><def>J</def><sym>,</sym> <def>V</def><sym>,</sym> <def>VValue</def><sym>),</sym> <def>a</def><sym>(</sym><def>J</def><sym>,</sym> <def>I</def><sym>,</sym> <def>AResult</def><sym>),</sym><br />
<def>  AtvNew</def> <kwa>is</kwa> <def>AtvValue</def> <sym>+</sym> <def>AResult</def> <sym>*</sym> <def>VValue</def><sym>,</sym><br />
<def>  set_arg</def><sym>(</sym><def>I</def><sym>,</sym> <def>Atv</def><sym>,</sym> <def>AtvNew</def><sym>),</sym><br />
<def>  J1</def> <kwa>is</kwa> <def>J</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, !,</sym> <def>mulAtVJ_</def><sym>(</sym><def>I</def><sym>,</sym> <def>J1</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Atv</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
mulAtAv</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>AtAv</def><sym>) :-</sym><br />
<def>  make_array</def><sym>(</sym><def>mul_u</def><sym>,</sym> <def>N</def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>U</def><sym>),</sym><br />
<def>  mulAv</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>U</def><sym>),</sym> <def>mulAtV</def><sym>(</sym><def>N</def><sym>,</sym> <def>U</def><sym>,</sym> <def>AtAv</def><sym>),</sym><br />
<def>  drop_array</def><sym>(</sym><def>mul_u</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
make_array</def><sym>(</sym><def>Name</def><sym>,</sym> <def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Array</def><sym>) :-</sym><br />
<def></def>  <kwb>functor</kwb><def></def><sym>(</sym><def>Array</def><sym>,</sym> <def>Name</def><sym>,</sym> <def>N</def><sym>),</sym><br />
<def>  fill_array</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Array</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
fill_array</def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def>_</def><sym>,</sym> <def>_</def><sym>) :- !.</sym><br />
<def><br />
fill_array</def><sym>(</sym><def>N</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Array</def><sym>) :-</sym><br />
<def>  nb_setarg</def><sym>(</sym><def>N</def><sym>,</sym> <def>Array</def><sym>,</sym> <def>V</def><sym>),</sym> <def>N1</def> <kwa>is</kwa> <def>N</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>, !,</sym><br />
<def>  fill_array</def><sym>(</sym><def>N1</def><sym>,</sym> <def>V</def><sym>,</sym> <def>Array</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
drop_array</def><sym>(</sym><def>Name</def><sym>) :-</sym> <def>nb_delete</def><sym>(</sym><def>Name</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
set_arg</def><sym>(</sym><def>N</def><sym>,</sym> <def>Array</def><sym>,</sym> <def>V</def><sym>) :-</sym> <def>nb_setarg</def><sym>(</sym><def>N</def><sym>,</sym> <def>Array</def><sym>,</sym> <def>V</def><sym>).</sym><br />
<def>get_arg</def><sym>(</sym><def>N</def><sym>,</sym> <def>Array</def><sym>,</sym> <def>V</def><sym>) :-</sym> <def></def><kwb>arg</kwb><def></def><sym>(</sym><def>N</def><sym>,</sym> <def>Array</def><sym>,</sym> <def>V</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------- %</slc><br />
<def><br />
getvar</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>) :-</sym> <def>nb_getval</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>).</sym><br />
<def>setvar</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>) :-</sym> <def>nb_setval</def><sym>(</sym><def>Id</def><sym>,</sym> <def>Value</def><sym>).</sym><br />
<def>dropvar</def><sym>(</sym><def>Id</def><sym>) :-</sym> <def>nb_delete</def><sym>(</sym><def>Id</def><sym>).</sym><br />
<def></def><br />
<slc>% ------------------------------- %</slc><br />
<def><br />
argument_value</def><sym>(</sym><def>N</def><sym>,</sym> <def>Arg</def><sym>) :-</sym><br />
<def></def>  <kwb>current_prolog_flag</kwb><def></def><sym>(</sym><def>argv</def><sym>,</sym> <def>Cmdline</def><sym>),</sym> <def>append</def><sym>(</sym><def>_</def><sym>, [--|</sym><def>UserArgs</def><sym>],</sym> <def>Cmdline</def><sym>),</sym><br />
<def>  Nth</def> <kwa>is</kwa> <def>N</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>nth0</def><sym>(</sym><def>Nth</def><sym>,</sym> <def>UserArgs</def><sym>,</sym> <def>Arg</def><sym>).</sym><br />
<def><br />
cmdlNumArg</def><sym>(</sym><def>Nth</def><sym>,</sym> <def>N</def><sym>) :-</sym><br />
<def>  argument_value</def><sym>(</sym><def>Nth</def><sym>,</sym> <def>Arg</def><sym>),</sym> <def></def><kwb>catch</kwb><def></def><sym>(</sym><def>atom_number</def><sym>(</sym><def>Arg</def><sym>,</sym> <def>N</def><sym>),</sym> <def>_</def><sym>,</sym> <def></def><kwa>fail</kwa><def></def><sym>) ;</sym> <def></def><kwa>halt</kwa><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>).</sym><br />
<def></def><br />
</source>
