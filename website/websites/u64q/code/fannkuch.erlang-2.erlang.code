<span class="hl slc">%%%-------------------------------------------------------------------</span>
<span class="hl slc">%%% File    : fannkuch.erl</span>
<span class="hl slc">%%% Author  : Mats Cronqvist &lt;locmacr&#64;mwlx084&gt;</span>
<span class="hl slc">%%% Description :</span>
<span class="hl slc">%%%</span>
<span class="hl slc">%%% Created : 25 Apr 2006 by Mats Cronqvist &lt;locmacr&#64;mwlx084&gt;</span>
<span class="hl slc">%%%-------------------------------------------------------------------</span>
<span class="hl sym">-</span><span class="hl kwa">module</span><span class="hl sym">(</span>fannkuch<span class="hl sym">).</span>

<span class="hl sym">-</span><span class="hl kwa">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">]).</span>

<span class="hl kwd">main</span><span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
    N <span class="hl sym">=</span> <span class="hl kwb">list_to_integer</span><span class="hl sym">(</span>Arg<span class="hl sym">),</span>
    <span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">),</span>
    erlang<span class="hl sym">:</span><span class="hl kwb">halt</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>
<span class="hl kwd">main</span><span class="hl sym">(</span>N<span class="hl sym">)</span> <span class="hl kwa">when</span> N <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl sym">-&gt;</span>
    <span class="hl kwb">put</span><span class="hl sym">(</span>max<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),</span>
    <span class="hl kwb">put</span><span class="hl sym">(</span>print<span class="hl sym">,</span><span class="hl num">30</span><span class="hl sym">),</span>
    <span class="hl kwd">perm</span><span class="hl sym">(</span>N<span class="hl sym">,</span><span class="hl kwd">init</span><span class="hl sym">(</span>N<span class="hl sym">)),</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;Pfannkuchen(~p) = ~p~n&quot;</span><span class="hl sym">, [</span>N<span class="hl sym">,</span> <span class="hl kwb">get</span><span class="hl sym">(</span>max<span class="hl sym">)]).</span>

<span class="hl slc">%% perm and prot generates the permutations in the right order and</span>
<span class="hl slc">%% calls x/1 for each one</span>

<span class="hl kwd">perm</span><span class="hl sym">(</span>N<span class="hl sym">,</span>Data<span class="hl sym">)</span> <span class="hl kwa">when</span> <span class="hl kwb">length</span><span class="hl sym">(</span>Data<span class="hl sym">) &lt;</span> N <span class="hl sym">-&gt;</span> Data<span class="hl sym">;</span>
<span class="hl kwd">perm</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,</span>Data<span class="hl sym">) -&gt;</span> <span class="hl kwd">x</span><span class="hl sym">(</span><span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl kwd">x</span><span class="hl sym">(</span><span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span><span class="hl kwd">x</span><span class="hl sym">(</span><span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl kwd">x</span><span class="hl sym">(</span><span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,</span><span class="hl kwd">x</span><span class="hl sym">(</span><span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl kwd">x</span><span class="hl sym">(</span>Data<span class="hl sym">)))))))))));</span>
<span class="hl kwd">perm</span><span class="hl sym">(</span>N<span class="hl sym">,</span>Data<span class="hl sym">) -&gt;</span> <span class="hl kwd">prot</span><span class="hl sym">(</span>N<span class="hl sym">,</span>N<span class="hl sym">,</span>Data<span class="hl sym">).</span>

<span class="hl kwd">prot</span><span class="hl sym">(</span>_N<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">,</span>Data<span class="hl sym">) -&gt;</span> Data<span class="hl sym">;</span>
<span class="hl kwd">prot</span><span class="hl sym">(</span>N<span class="hl sym">,</span>M<span class="hl sym">,</span>Data<span class="hl sym">) -&gt;</span> <span class="hl kwd">perm</span><span class="hl sym">(</span>N<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span>Data<span class="hl sym">),</span> <span class="hl kwd">prot</span><span class="hl sym">(</span>N<span class="hl sym">,</span>M<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl kwd">rotate</span><span class="hl sym">(</span>N<span class="hl sym">,</span>Data<span class="hl sym">)).</span>

<span class="hl slc">%% x/1 is the action function. called once for each permutation. calls</span>
<span class="hl slc">%% kuch/1 to get the number of flips</span>
<span class="hl kwd">x</span><span class="hl sym">(</span>Data<span class="hl sym">) -&gt;</span>
    <span class="hl kwa">case</span> <span class="hl kwb">get</span><span class="hl sym">(</span>print<span class="hl sym">)</span> <span class="hl kwa">of</span>
 	<span class="hl num">0</span> <span class="hl sym">-&gt;</span> ok<span class="hl sym">;</span>
 	N <span class="hl sym">-&gt;</span> <span class="hl kwd">flush</span><span class="hl sym">(</span>Data<span class="hl sym">),</span><span class="hl kwb">put</span><span class="hl sym">(</span>print<span class="hl sym">,</span>N<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">end</span><span class="hl sym">,</span>
    <span class="hl kwa">case</span> <span class="hl kwb">get</span><span class="hl sym">(</span>max<span class="hl sym">) &lt; (</span>K <span class="hl sym">=</span> <span class="hl kwd">kuch</span><span class="hl sym">(</span>Data<span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">))</span> <span class="hl kwa">of</span>
 	true <span class="hl sym">-&gt;</span> <span class="hl kwb">put</span><span class="hl sym">(</span>max<span class="hl sym">,</span>K<span class="hl sym">);</span>
 	false <span class="hl sym">-&gt;</span> ok
    <span class="hl kwa">end</span><span class="hl sym">,</span>
    Data<span class="hl sym">.</span>

<span class="hl slc">%% this is the actual flipping function. return number of flips</span>
<span class="hl kwd">kuch</span><span class="hl sym">(</span>Data<span class="hl sym">,</span>N<span class="hl sym">) -&gt;</span>
    <span class="hl kwa">case</span> <span class="hl kwd">head</span><span class="hl sym">(</span>Data<span class="hl sym">)</span> <span class="hl kwa">of</span>
	<span class="hl num">1</span> <span class="hl sym">-&gt;</span> N<span class="hl sym">;</span>
	M <span class="hl sym">-&gt;</span> <span class="hl kwd">kuch</span><span class="hl sym">(</span><span class="hl kwd">reverse</span><span class="hl sym">(</span>M<span class="hl sym">,</span>Data<span class="hl sym">),</span>N<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>
    <span class="hl kwa">end</span><span class="hl sym">.</span>


<span class="hl slc">%% primitives for our data model</span>
<span class="hl slc">%%</span>
<span class="hl slc">%% init(Length) - create new struct</span>
<span class="hl slc">%% head(Data) - return first element</span>
<span class="hl slc">%% reverse(N, Data) - reverse first N elements</span>
<span class="hl slc">%% rotate(N, Data) - rotate first N elements</span>
<span class="hl slc">%% flip(N, Data) - exchange N:th and N+1:th element</span>
<span class="hl slc">%% flush(Data) - flush to screen</span>

<span class="hl kwd">init</span><span class="hl sym">(</span>N<span class="hl sym">) -&gt;</span> lists<span class="hl sym">:</span><span class="hl kwd">seq</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span>N<span class="hl sym">).</span>

<span class="hl kwd">head</span><span class="hl sym">(</span>L<span class="hl sym">) -&gt;</span> <span class="hl kwb">hd</span><span class="hl sym">(</span>L<span class="hl sym">).</span>

<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">4</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H4<span class="hl sym">,</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">5</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H5<span class="hl sym">,</span>H4<span class="hl sym">,</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">6</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">,</span>H6<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H6<span class="hl sym">,</span>H5<span class="hl sym">,</span>H4<span class="hl sym">,</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">7</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">,</span>H6<span class="hl sym">,</span>H7<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H7<span class="hl sym">,</span>H6<span class="hl sym">,</span>H5<span class="hl sym">,</span>H4<span class="hl sym">,</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">8</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">,</span>H6<span class="hl sym">,</span>H7<span class="hl sym">,</span>H8<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H8<span class="hl sym">,</span>H7<span class="hl sym">,</span>H6<span class="hl sym">,</span>H5<span class="hl sym">,</span>H4<span class="hl sym">,</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">,</span>H6<span class="hl sym">,</span>H7<span class="hl sym">,</span>H8<span class="hl sym">,</span>H9<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H9<span class="hl sym">,</span>H8<span class="hl sym">,</span>H7<span class="hl sym">,</span>H6<span class="hl sym">,</span>H5<span class="hl sym">,</span>H4<span class="hl sym">,</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">,</span>H6<span class="hl sym">,</span>H7<span class="hl sym">,</span>H8<span class="hl sym">,</span>H9<span class="hl sym">,</span>H0<span class="hl sym">|</span>L<span class="hl sym">]) -&gt;</span>
    <span class="hl sym">[</span>H0<span class="hl sym">,</span>H9<span class="hl sym">,</span>H8<span class="hl sym">,</span>H7<span class="hl sym">,</span>H6<span class="hl sym">,</span>H5<span class="hl sym">,</span>H4<span class="hl sym">,</span>H3<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>L<span class="hl sym">];</span>
<span class="hl kwd">reverse</span><span class="hl sym">(</span>M<span class="hl sym">,</span>L<span class="hl sym">) -&gt;</span>
    <span class="hl sym">{</span>H<span class="hl sym">,</span>T<span class="hl sym">} =</span> lists<span class="hl sym">:</span><span class="hl kwd">split</span><span class="hl sym">(</span>M<span class="hl sym">,</span>L<span class="hl sym">),</span>
    lists<span class="hl sym">:</span><span class="hl kwd">reverse</span><span class="hl sym">(</span>H<span class="hl sym">)++</span>T<span class="hl sym">.</span>

<span class="hl kwd">rotate</span><span class="hl sym">(</span><span class="hl num">4</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">|</span>T<span class="hl sym">]) -&gt; [</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H1<span class="hl sym">|</span>T<span class="hl sym">];</span>
<span class="hl kwd">rotate</span><span class="hl sym">(</span><span class="hl num">5</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">|</span>T<span class="hl sym">]) -&gt; [</span>H2<span class="hl sym">,</span>H3<span class="hl sym">,</span>H4<span class="hl sym">,</span>H5<span class="hl sym">,</span>H1<span class="hl sym">|</span>T<span class="hl sym">];</span>
<span class="hl kwd">rotate</span><span class="hl sym">(</span>N<span class="hl sym">,</span>L<span class="hl sym">) -&gt; {[</span>H<span class="hl sym">|</span>Hs<span class="hl sym">],</span>Ts<span class="hl sym">} =</span> lists<span class="hl sym">:</span><span class="hl kwd">split</span><span class="hl sym">(</span>N<span class="hl sym">,</span>L<span class="hl sym">),</span> Hs<span class="hl sym">++[</span>H<span class="hl sym">|</span>Ts<span class="hl sym">].</span>

<span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,[</span>H1<span class="hl sym">,</span>H2<span class="hl sym">|</span>T<span class="hl sym">]) -&gt; [</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>T<span class="hl sym">];</span>
<span class="hl kwd">flip</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">,[</span>H<span class="hl sym">,</span>H1<span class="hl sym">,</span>H2<span class="hl sym">|</span>T<span class="hl sym">]) -&gt; [</span>H<span class="hl sym">,</span>H2<span class="hl sym">,</span>H1<span class="hl sym">|</span>T<span class="hl sym">].</span>

<span class="hl kwd">flush</span><span class="hl sym">(</span>Data<span class="hl sym">) -&gt;</span>
    lists<span class="hl sym">:</span><span class="hl kwd">foreach</span><span class="hl sym">(</span><span class="hl kwa">fun</span><span class="hl sym">(</span>I<span class="hl sym">)-&gt;</span>io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~p&quot;</span><span class="hl sym">,[</span>I<span class="hl sym">])</span> <span class="hl kwa">end</span><span class="hl sym">,</span> Data<span class="hl sym">),</span>
    io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~n&quot;</span><span class="hl sym">).</span>
