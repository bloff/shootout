<span class="hl slc">#!/usr/bin/tclsh</span>
<span class="hl slc"># $Id: mandelbrot.3.tcl.code,v 1.1 2008-08-05 21:26:16 igouy-guest Exp $</span>
<span class="hl slc"># The Great Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># Contributed by Hemang Lavana</span>

<span class="hl kwa">proc</span> main <span class="hl sym">{</span>argv<span class="hl sym">} {</span>
    <span class="hl kwa">set</span> bit_num  <span class="hl sym">[</span><span class="hl kwa">set</span> byte_acc <span class="hl num">0</span><span class="hl sym">]</span>
    <span class="hl kwa">set</span> H <span class="hl sym">[</span><span class="hl kwa">set</span> W <span class="hl sym">[</span><span class="hl kwa">lindex</span> <span class="hl kwb">$argv</span> <span class="hl num">0</span><span class="hl sym">]]</span>

    <span class="hl kwa">puts</span> stdout <span class="hl str">&quot;P4</span><span class="hl esc">\n</span><span class="hl str">$W $H&quot;</span>
    <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> y <span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwa">set</span> iter <span class="hl num">50</span><span class="hl sym">;</span> <span class="hl kwa">set</span> limit2 <span class="hl num">4.0</span><span class="hl sym">;</span> <span class="hl kwa">set</span> W_1 <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl kwb">$W</span><span class="hl kwc">-1</span><span class="hl sym">}];</span> <span class="hl kwa">set</span> Wshift <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">8</span><span class="hl sym">-</span><span class="hl kwb">$W</span><span class="hl sym">%</span><span class="hl num">8</span><span class="hl sym">}];} {</span><span class="hl kwb">$y</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$H</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> y<span class="hl sym">} {</span>
        <span class="hl kwa">set</span> Ci <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">2.0</span> <span class="hl sym">*</span> <span class="hl kwb">$y</span> <span class="hl sym">/</span> <span class="hl kwb">$H</span> <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">}]</span>
        <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> x <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$x</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$W</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> x<span class="hl sym">} {</span>
            <span class="hl kwa">set</span> Zr <span class="hl sym">[</span><span class="hl kwa">set</span> Zi <span class="hl num">0.0</span><span class="hl sym">]</span>
            <span class="hl kwa">set</span> Cr <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">2.0</span> <span class="hl sym">*</span> <span class="hl kwb">$x</span> <span class="hl sym">/</span> <span class="hl kwb">$W</span> <span class="hl sym">-</span> <span class="hl num">1.5</span><span class="hl sym">}]</span>
            <span class="hl kwa">for</span> <span class="hl sym">{</span><span class="hl kwa">set</span> i <span class="hl num">0</span><span class="hl sym">} {</span><span class="hl kwb">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwb">$iter</span><span class="hl sym">} {</span><span class="hl kwa">incr</span> i<span class="hl sym">} {</span>
                <span class="hl kwa">set</span> Tr <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span> <span class="hl kwb">$Zr</span> <span class="hl sym">*</span> <span class="hl kwb">$Zr</span> <span class="hl sym">-</span> <span class="hl kwb">$Zi</span> <span class="hl sym">*</span> <span class="hl kwb">$Zi</span> <span class="hl sym">+</span> <span class="hl kwb">$Cr</span> <span class="hl sym">}]</span>
                <span class="hl kwa">set</span> Ti <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span> <span class="hl num">2.0</span> <span class="hl sym">*</span> <span class="hl kwb">$Zr</span> <span class="hl sym">*</span> <span class="hl kwb">$Zi</span> <span class="hl sym">+</span> <span class="hl kwb">$Ci</span> <span class="hl sym">}]</span>
                <span class="hl kwa">set</span> Zr <span class="hl kwb">$Tr</span><span class="hl sym">;</span> <span class="hl kwa">set</span> Zi <span class="hl kwb">$Ti</span>
                <span class="hl kwa">if</span> <span class="hl sym">{[</span><span class="hl kwa">set</span> isOverLimit <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{(</span><span class="hl kwb">$Zr</span> <span class="hl sym">*</span> <span class="hl kwb">$Zr</span> <span class="hl sym">+</span> <span class="hl kwb">$Zi</span> <span class="hl sym">*</span> <span class="hl kwb">$Zi</span><span class="hl sym">) &gt;</span> <span class="hl kwb">$limit2</span><span class="hl sym">}]]} {</span><span class="hl kwa">break</span><span class="hl sym">}</span>
            <span class="hl sym">}</span>
            <span class="hl kwa">incr</span> bit_num
            <span class="hl kwa">set</span> byte_acc <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span><span class="hl num">2</span> <span class="hl sym">*</span> <span class="hl kwb">$byte_acc</span> <span class="hl sym">+ (</span><span class="hl kwb">$isOverLimit</span>? <span class="hl num">0</span> <span class="hl sym">:</span> <span class="hl num">1</span><span class="hl sym">)}]</span>
            <span class="hl kwa">if</span> <span class="hl sym">{</span><span class="hl kwb">$bit_num</span> <span class="hl sym">==</span> <span class="hl str">&quot;8&quot;</span><span class="hl sym">} {</span>
                <span class="hl kwa">puts</span> <span class="hl kwc">-nonewline</span> stdout <span class="hl sym">[</span><span class="hl kwa">binary format</span> c <span class="hl kwb">$byte_acc</span><span class="hl sym">]</span>
                <span class="hl kwa">set</span> bit_num <span class="hl sym">[</span><span class="hl kwa">set</span> byte_acc <span class="hl num">0</span><span class="hl sym">]</span>
            <span class="hl sym">}</span> elseif <span class="hl sym">{</span><span class="hl kwb">$x</span> <span class="hl sym">==</span> <span class="hl kwb">$W_1</span><span class="hl sym">} {</span>
                <span class="hl kwa">set</span> byte_acc <span class="hl sym">[</span><span class="hl kwa">expr</span> <span class="hl sym">{</span> <span class="hl kwb">$byte_acc</span> <span class="hl sym">&lt;&lt;</span> <span class="hl kwb">$Wshift</span> <span class="hl sym">}]</span>
                <span class="hl kwa">puts</span> <span class="hl kwc">-nonewline</span> stdout <span class="hl sym">[</span><span class="hl kwa">binary format</span> c <span class="hl kwb">$byte_acc</span><span class="hl sym">]</span>
                <span class="hl kwa">set</span> bit_num <span class="hl sym">[</span><span class="hl kwa">set</span> byte_acc <span class="hl num">0</span><span class="hl sym">]</span>
            <span class="hl sym">}</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>

main <span class="hl kwb">$argv</span>
