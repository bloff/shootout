<source>
<def></def><com>(* nbody.sml</com><br />
<com> *   The Computer Language Shootout</com><br />
<com> *   http://shootout.alioth.debian.org/</com><br />
<com> *   (Loosely based on the Oberon version.)</com><br />
<com> *</com><br />
<com> * Copyright (c) 2004 by The Fellowship of SML/NJ</com><br />
<com> *</com><br />
<com> * Author: Matthias Blume (blume@tti-c.org)</com><br />
<com> * Ported to MLton by Vesa Karvonen.</com><br />
<com> *)</com><def></def><br />
<br />
<kwa>infix</kwa> <def></def><num>8</num> <def>$</def><br />
<kwa>val op</kwa><def>$</def> <sym>=</sym> <def>Array.sub</def><br />
<kwa>infix</kwa> <def></def><num>3</num> <def></def><sym>&lt;-</sym><br />
<def></def><kwa>fun</kwa> <def></def><sym>(</sym><def>a</def><sym>,</sym> <def>i</def><sym>) &lt;-</sym> <def>x</def> <sym>=</sym> <def>Array.update</def> <sym>(</sym><def>a</def><sym>,</sym> <def>i</def><sym>,</sym> <def>x</def><sym>)</sym><br />
<def></def><br />
<kwa>val</kwa> <def>SOLAR_MASS</def> <sym>=</sym> <def></def><num>4.0</num> <def></def><sym>*</sym> <def>Math.pi</def> <sym>*</sym> <def>Math.pi</def><br />
<kwa>val</kwa> <def>DAYS_PER_YEAR</def> <sym>=</sym> <def></def><num>365.24</num><br />
<def></def><br />
<com>(* sun, jupiter, saturn, neptune, uranus *)</com><def></def><br />
<kwa>val</kwa> <def>bodies</def> <sym>=</sym><br />
<def></def>    <sym>[(</sym><def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>1.0</num><def></def><sym>),</sym><br />
<def></def>     <sym>(</sym><def></def><num>4.84143144246472090</num><def></def><sym>,</sym> <def>~</def><num>1.16032004402742839</num><def></def><sym>,</sym> <def>~</def><num>1.03622044471123109</num><def>e~</def><num>1</num><def></def><sym>,</sym><br />
<def></def>      <num>1.66007664274403694</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def></def><num>7.69901118419740425</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def>~</def><num>6.90460016972063023</num><def>e~</def><num>5</num><def></def><sym>,</sym><br />
<def></def>      <num>9.54791938424326609</num><def>e~</def><num>4</num><def></def><sym>),</sym><br />
<def></def>     <sym>(</sym><def></def><num>8.34336671824457987</num><def></def><sym>,</sym> <def></def><num>4.12479856412430479</num><def></def><sym>,</sym> <def>~</def><num>4.03523417114321381</num><def>e~</def><num>1</num><def></def><sym>,</sym><br />
<def>      ~</def><num>2.76742510726862411</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def></def><num>4.99852801234917238</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def></def><num>2.30417297573763929</num><def>e~</def><num>5</num><def></def><sym>,</sym><br />
<def></def>      <num>2.85885980666130812</num><def>e~</def><num>4</num><def></def><sym>),</sym><br />
<def></def>     <sym>(</sym><def></def><num>1.28943695621391310</num><def>e1</def><sym>,</sym> <def>~</def><num>1.51111514016986312</num><def>e1</def><sym>,</sym> <def>~</def><num>2.23307578892655734</num><def>e~</def><num>1</num><def></def><sym>,</sym><br />
<def></def>      <num>2.96460137564761618</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def></def><num>2.37847173959480950</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def>~</def><num>2.96589568540237556</num><def>e~</def><num>5</num><def></def><sym>,</sym><br />
<def></def>      <num>4.36624404335156298</num><def>e~</def><num>5</num><def></def><sym>),</sym><br />
<def></def>     <sym>(</sym><def></def><num>1.53796971148509165</num><def>e1</def><sym>,</sym> <def>~</def><num>2.59193146099879641</num><def>e1</def><sym>,</sym> <def></def><num>1.79258772950371181</num><def>e~</def><num>1</num><def></def><sym>,</sym><br />
<def></def>      <num>2.68067772490389322</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def></def><num>1.62824170038242295</num><def>e~</def><num>3</num><def></def><sym>,</sym> <def>~</def><num>9.51592254519715870</num><def>e~</def><num>5</num><def></def><sym>,</sym><br />
<def></def>      <num>5.15138902046611451</num><def>e~</def><num>5</num><def></def><sym>)]</sym><br />
<def></def><br />
<kwa>val</kwa> <def>N</def> <sym>=</sym> <def>length bodies</def><br />
<kwa>fun</kwa> <def>sm x</def> <sym>=</sym> <def>x</def> <sym>*</sym> <def>SOLAR_MASS</def><br />
<kwa>fun</kwa> <def>dpy x</def> <sym>=</sym> <def>x</def> <sym>*</sym> <def>DAYS_PER_YEAR</def><br />
<kwa>fun</kwa> <def>get sel</def> <sym>=</sym> <def>Array.fromList</def> <sym>(</sym><def>map sel bodies</def><sym>)</sym><br />
<def></def><kwa>val</kwa> <def></def><sym>(</sym><def>x</def><sym>,</sym> <def>y</def><sym>,</sym> <def>z</def><sym>) = (</sym><def>get #</def><num>1</num><def></def><sym>,</sym> <def>get #</def><num>2</num><def></def><sym>,</sym> <def>get #</def><num>3</num><def></def><sym>)</sym><br />
<def></def><kwa>val</kwa> <def></def><sym>(</sym><def>vx</def><sym>,</sym> <def>vy</def><sym>,</sym> <def>vz</def><sym>) = (</sym><def>get</def> <sym>(</sym><def>dpy</def> <kwa>o</kwa> <def>#</def><num>4</num><def></def><sym>),</sym> <def>get</def> <sym>(</sym><def>dpy</def> <kwa>o</kwa> <def>#</def><num>5</num><def></def><sym>),</sym> <def>get</def> <sym>(</sym><def>dpy</def> <kwa>o</kwa> <def>#</def><num>6</num><def></def><sym>))</sym><br />
<def></def><kwa>val</kwa> <def>m</def> <sym>=</sym> <def>get</def> <sym>(</sym><def>sm</def> <kwa>o</kwa> <def>#</def><num>7</num><def></def><sym>)</sym><br />
<def></def><br />
<com>(* one step *)</com><def></def><br />
<kwa>fun</kwa> <def>advance dt</def> <sym>=</sym><br />
<def></def>    <kwa>let fun</kwa> <def>pl i</def> <sym>=</sym> <def></def><kwa>if</kwa> <def>i</def><sym>&gt;=</sym><def>N</def> <kwa>then</kwa> <def></def><sym>()</sym><br />
<def></def>                   <kwa>else</kwa> <def></def><sym>((</sym><def>x</def><sym>,</sym> <def>i</def><sym>) &lt;-</sym> <def>x$i</def><sym>+</sym><def>dt</def><sym>*</sym><def>vx$i</def><br />
                       <sym>; (</sym><def>y</def><sym>,</sym> <def>i</def><sym>) &lt;-</sym> <def>y$i</def><sym>+</sym><def>dt</def><sym>*</sym><def>vy$i</def><br />
                       <sym>; (</sym><def>z</def><sym>,</sym> <def>i</def><sym>) &lt;-</sym> <def>z$i</def><sym>+</sym><def>dt</def><sym>*</sym><def>vz$i</def><br />
                       <sym>;</sym> <def>pl</def> <sym>(</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>))</sym><br />
<def></def>        <kwa>fun</kwa> <def>vl</def> <sym>(</sym><def>i</def><sym>,</sym> <def>j</def><sym>) =</sym><br />
<def></def>            <kwa>if</kwa> <def>i</def><sym>&gt;=</sym><def>N</def> <kwa>then</kwa> <def>pl</def> <num>0</num><br />
<def></def>            <kwa>else if</kwa> <def>j</def><sym>&gt;=</sym><def>N</def> <kwa>then</kwa> <def>vl</def> <sym>(</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>,</sym> <def>i</def><sym>+</sym><def></def><num>2</num><def></def><sym>)</sym><br />
<def></def>            <kwa>else let val</kwa> <def></def><sym>(</sym><def>dx</def><sym>,</sym> <def>dy</def><sym>,</sym> <def>dz</def><sym>) = (</sym><def>x$i</def><sym>-</sym><def>x$j</def><sym>,</sym> <def>y$i</def><sym>-</sym><def>y$j</def><sym>,</sym> <def>z$i</def><sym>-</sym><def>z$j</def><sym>)</sym><br />
<def></def>                     <kwa>val</kwa> <def>dist</def> <sym>=</sym> <def>Math.sqrt</def><sym>(</sym><def>dx</def><sym>*</sym><def>dx</def><sym>+</sym><def>dy</def><sym>*</sym><def>dy</def><sym>+</sym><def>dz</def><sym>*</sym><def>dz</def><sym>)</sym><br />
<def></def>                     <kwa>val</kwa> <def>mag</def> <sym>=</sym> <def>dt</def><sym>/(</sym><def>dist</def><sym>*</sym><def>dist</def><sym>*</sym><def>dist</def><sym>)</sym><br />
<def></def>                     <kwa>val</kwa> <def></def><sym>(</sym><def>mi</def><sym>,</sym> <def>mj</def><sym>) = (</sym><def>m$i</def><sym>*</sym><def>mag</def><sym>,</sym> <def>m$j</def><sym>*</sym><def>mag</def><sym>)</sym><br />
<def></def>                 <kwa>in</kwa> <def></def><sym>(</sym><def>vx</def><sym>,</sym> <def>i</def><sym>) &lt;-</sym> <def>vx$i</def><sym>-</sym><def>dx</def><sym>*</sym><def>mj</def> <sym>; (</sym><def>vx</def><sym>,</sym> <def>j</def><sym>) &lt;-</sym> <def>vx$j</def><sym>+</sym><def>dx</def><sym>*</sym><def>mi</def><br />
                  <sym>; (</sym><def>vy</def><sym>,</sym> <def>i</def><sym>) &lt;-</sym> <def>vy$i</def><sym>-</sym><def>dy</def><sym>*</sym><def>mj</def> <sym>; (</sym><def>vy</def><sym>,</sym> <def>j</def><sym>) &lt;-</sym> <def>vy$j</def><sym>+</sym><def>dy</def><sym>*</sym><def>mi</def><br />
                  <sym>; (</sym><def>vz</def><sym>,</sym> <def>i</def><sym>) &lt;-</sym> <def>vz$i</def><sym>-</sym><def>dz</def><sym>*</sym><def>mj</def> <sym>; (</sym><def>vz</def><sym>,</sym> <def>j</def><sym>) &lt;-</sym> <def>vz$j</def><sym>+</sym><def>dz</def><sym>*</sym><def>mi</def><br />
                  <sym>;</sym> <def>vl</def> <sym>(</sym><def>i</def><sym>,</sym> <def>j</def><sym>+</sym><def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>                 <kwa>end</kwa><br />
<def></def>    <kwa>in</kwa> <def>vl</def> <sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def></def><num>1</num><def></def><sym>)</sym> <def></def><kwa>end</kwa><br />
<def></def><br />
<com>(* calculate initial velocity for the sun *)</com><def></def><br />
<kwa>fun</kwa> <def>offmoment</def> <sym>() =</sym><br />
<def></def>    <kwa>let fun</kwa> <def></def><sym>%</sym><def>v</def> <sym>=</sym> <def>~v</def> <sym>/</sym> <def>SOLAR_MASS</def><br />
        <kwa>fun</kwa> <def>loop</def> <sym>(</sym><def>i</def><sym>,</sym> <def>px</def><sym>,</sym> <def>py</def><sym>,</sym> <def>pz</def><sym>) =</sym><br />
<def></def>            <kwa>if</kwa> <def>i</def><sym>&gt;=</sym><def>N</def> <kwa>then</kwa> <def></def><sym>((</sym><def>vx</def><sym>,</sym> <def></def><num>0</num><def></def><sym>) &lt;- %</sym><def>px</def> <sym>; (</sym><def>vy</def><sym>,</sym> <def></def><num>0</num><def></def><sym>) &lt;- %</sym><def>py</def> <sym>; (</sym><def>vz</def><sym>,</sym> <def></def><num>0</num><def></def><sym>) &lt;- %</sym><def>pz</def><sym>)</sym><br />
<def></def>            <kwa>else</kwa> <def>loop</def> <sym>(</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>,</sym> <def>px</def><sym>+</sym><def>vx$i</def><sym>*</sym><def>m$i</def><sym>,</sym> <def>py</def><sym>+</sym><def>vy$i</def><sym>*</sym><def>m$i</def><sym>,</sym> <def>pz</def><sym>+</sym><def>vz$i</def><sym>*</sym><def>m$i</def><sym>)</sym><br />
<def></def>    <kwa>in</kwa> <def>loop</def> <sym>(</sym><def></def><num>1</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>)</sym> <def></def><kwa>end</kwa><br />
<def></def><br />
<kwa>fun</kwa> <def>energy</def> <sym>() =</sym><br />
<def></def>    <kwa>let fun</kwa> <def>l</def> <sym>(</sym><def>i</def><sym>,</sym> <def>j</def><sym>,</sym> <def>e</def><sym>) =</sym><br />
<def></def>            <kwa>if</kwa> <def>j</def> <sym>&gt;=</sym> <def>N</def> <kwa>then</kwa> <def>l0</def> <sym>(</sym><def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>,</sym> <def>e</def><sym>)</sym><br />
<def></def>            <kwa>else let val</kwa> <def></def><sym>(</sym><def>dx</def><sym>,</sym> <def>dy</def><sym>,</sym> <def>dz</def><sym>) = (</sym><def>x$i</def><sym>-</sym><def>x$j</def><sym>,</sym> <def>y$i</def><sym>-</sym><def>y$j</def><sym>,</sym> <def>z$i</def><sym>-</sym><def>z$j</def><sym>)</sym><br />
<def></def>                     <kwa>val</kwa> <def>dist</def> <sym>=</sym> <def>Math.sqrt</def><sym>(</sym><def>dx</def><sym>*</sym><def>dx</def><sym>+</sym><def>dy</def><sym>*</sym><def>dy</def><sym>+</sym><def>dz</def><sym>*</sym><def>dz</def><sym>)</sym><br />
<def></def>                 <kwa>in</kwa> <def>l</def> <sym>(</sym><def>i</def><sym>,</sym> <def>j</def><sym>+</sym><def></def><num>1</num><def></def><sym>,</sym> <def>e</def><sym>-</sym><def>m$i</def><sym>*</sym><def>m$j</def><sym>/</sym><def>dist</def><sym>)</sym> <def></def><kwa>end</kwa><br />
<def></def>        <kwa>and</kwa> <def>l0</def> <sym>(</sym><def>i</def><sym>,</sym> <def>e</def><sym>) =</sym><br />
<def></def>            <kwa>if</kwa> <def>i</def><sym>&gt;=</sym><def>N</def> <kwa>then</kwa> <def>e</def><br />
            <kwa>else let val</kwa> <def></def><sym>(</sym><def>x</def><sym>,</sym> <def>y</def><sym>,</sym> <def>z</def><sym>) = (</sym><def>vx$i</def><sym>,</sym> <def>vy$i</def><sym>,</sym> <def>vz$i</def><sym>)</sym><br />
<def></def>                 <kwa>in</kwa> <def>l</def> <sym>(</sym><def>i</def><sym>,</sym> <def>i</def><sym>+</sym><def></def><num>1</num><def></def><sym>,</sym> <def>e</def> <sym>+</sym> <def></def><num>0.5</num><def></def><sym>*</sym><def>m$i</def><sym>*(</sym><def>x</def><sym>*</sym><def>x</def><sym>+</sym><def>y</def><sym>*</sym><def>y</def><sym>+</sym><def>z</def><sym>*</sym><def>z</def><sym>))</sym> <def></def><kwa>end</kwa><br />
<def></def>    <kwa>in</kwa> <def>l0</def> <sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0.0</num><def></def><sym>)</sym> <def></def><kwa>end</kwa><br />
<def></def><br />
<kwa>fun</kwa> <def>addloop i</def> <sym>=</sym> <def></def><kwa>if</kwa> <def>i</def> <sym>&gt;</sym> <def></def><num>0</num> <def></def><kwa>then</kwa> <def></def><sym>(</sym><def>advance</def> <num>0.01</num> <def></def><sym>;</sym> <def>addloop</def> <sym>(</sym><def>i</def><sym>-</sym><def></def><num>1</num><def></def><sym>))</sym> <def></def><kwa>else</kwa> <def></def><sym>()</sym><br />
<def></def><br />
<kwa>fun</kwa> <def>pr x</def> <sym>=</sym> <def>app print</def> <sym>[(</sym><def></def><kwa>String</kwa><def>.translate</def> <sym>(</sym><def></def><kwa>fn</kwa> <def>#</def><str>&quot;~&quot;</str><def></def> <sym>=&gt;</sym> <def></def><str>&quot;-&quot;</str><def></def> <sym>|</sym> <def>c</def> <sym>=&gt;</sym> <def>str c</def><sym>)</sym> <def></def><kwa>o</kwa><br />
<def></def>                       <kwa>Real</kwa><def>.fmt</def> <sym>(</sym><def></def><kwa>StringCvt</kwa><def>.FIX</def> <sym>(</sym><def>SOME</def> <num>9</num><def></def><sym>)))</sym> <def>x</def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>]</sym><br />
<def></def><br />
<kwa>val</kwa> <def>n</def> <sym>=</sym> <def>valOf</def> <sym>(</sym><def></def><kwa>Int</kwa><def>.fromString</def> <sym>(</sym><def>hd</def> <sym>(</sym><def>CommandLine.arguments</def> <sym>())))</sym> <def></def><kwa>handle</kwa> <def>_</def> <sym>=&gt;</sym> <def></def><num>1</num><br />
<def></def><br />
<kwa>val</kwa> <def>_</def> <sym>= (</sym><def>offmoment</def> <sym>() ;</sym> <def>pr</def> <sym>(</sym><def>energy</def> <sym>()) ;</sym> <def>addloop n</def> <sym>;</sym> <def>pr</def> <sym>(</sym><def>energy</def> <sym>()))</sym><def></def><br />
</source>
