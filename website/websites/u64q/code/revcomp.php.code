<source>
<def></def><sym>&lt;</sym><def>?php</def><br />
<slc>#</slc><br />
<def></def><slc># TheComputer Language Shootout</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># reverse complement in PHP</slc><br />
<def></def><slc># contributed by Danny Sauer</slc><br />
<def></def><slc>#</slc><br />
<def></def><br />
<slc># We'll need some definitions</slc><br />
<def></def><kwa>define</kwa><def></def><sym>(</sym> <def></def><str>'LINE_LENGTH'</str><def></def><sym>,</sym> <def></def><num>60</num> <def></def><sym>);</sym><br />
<def></def><kwa>define</kwa><def></def><sym>(</sym> <def></def><str>'SRC'</str><def></def><sym>,</sym> <def></def><str>'CGATMKRYVBHD'</str><def></def><sym>);</sym><br />
<def></def><kwa>define</kwa><def></def><sym>(</sym> <def></def><str>'DST'</str><def></def><sym>,</sym> <def></def><str>'GCTAKMYRBVDH'</str><def></def><sym>);</sym><br />
<def></def><kwc>$str</kwc> <def></def><sym>=</sym> <def></def><str>''</str><def></def><sym>;</sym><br />
<def></def><kwc>$seq</kwc> <def></def><sym>=</sym> <def></def><str>''</str><def></def><sym>;</sym><br />
<def></def><br />
<slc># read in the file, a line at a time</slc><br />
<def></def><kwa>while</kwa><def></def><sym>( !</sym><def></def><kwa>feof</kwa><def></def><sym>(</sym><def>STDIN</def><sym>) ) {</sym><br />
<def></def>    <kwc>$str</kwc> <def></def><sym>=</sym> <def></def><kwa>trim</kwa><def></def><sym>(</sym><def></def><kwa>fgets</kwa><def></def><sym>(</sym><def>STDIN</def><sym>));</sym><br />
<def></def>    <kwa>if</kwa><def></def><sym>(</sym> <def></def><kwc>$str</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>] ==</sym> <def></def><str>'&gt;'</str><def></def> <sym>){</sym><br />
<def></def>        <slc># if we're on a comment line, print the previous seq and move on</slc><br />
<def></def>        <kwd>print_seq</kwd><def></def><sym>();</sym><br />
<def></def>        <kwa>echo</kwa> <def></def><kwc>$str</kwc><def></def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><def></def><kwa>else</kwa><def></def><sym>{</sym><br />
<def></def>        <slc># otherwise, just append to the sequence</slc><br />
<def></def>        <kwc>$seq</kwc> <def>.</def><sym>=</sym> <def></def><kwc>$str</kwc><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwd>print_seq</kwd><def></def><sym>();</sym><br />
<def></def><br />
<kwa>exit</kwa><def></def><sym>;</sym><br />
<def></def><br />
<slc># print the sequence out, if it exists</slc><br />
<def></def><kwa>function</kwa> <def></def><kwd>print_seq</kwd><def></def><sym>(){</sym><br />
<def></def>    <kwa>global</kwa> <def></def><kwc>$seq</kwc><def></def><sym>;</sym> <def></def><slc># no time-consuming argument passing for us! :)</slc><br />
<def></def>    <kwa>if</kwa><def></def><sym>(</sym><def></def><kwc>$seq</kwc> <def></def><sym>!=</sym> <def></def><str>''</str><def></def><sym>){</sym><br />
<def></def>        <kwa>echo wordwrap</kwa><def></def><sym>(</sym> <def></def><kwa>strrev</kwa><def></def><sym>(</sym> <def></def><kwa>strtr</kwa><def></def><sym>(</sym><def></def><kwa>strtoupper</kwa><def></def><sym>(</sym><def></def><kwc>$seq</kwc><def></def><sym>),</sym> <def>SRC</def><sym>,</sym> <def>DST</def><sym>) ),</sym><br />
<def>                       LINE_LENGTH</def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>true</def> <sym>),</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def>    <kwc>$seq</kwc> <def></def><sym>=</sym> <def></def><str>''</str><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def>?</def><sym>&gt;</sym><def></def><br />
</source>
