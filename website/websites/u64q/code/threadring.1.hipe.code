<span class="hl slc">%%% The Computer Language Benchmarks Game</span>
<span class="hl slc">%%% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%%% Contributed by Jiri Isa</span>

<span class="hl sym">-</span>module<span class="hl sym">(</span>threadring<span class="hl sym">).</span>
<span class="hl sym">-</span>export<span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">,</span> roundtrip<span class="hl sym">/</span><span class="hl num">2</span><span class="hl sym">]).</span>

<span class="hl sym">-</span>define<span class="hl sym">(</span>RING<span class="hl sym">,</span> <span class="hl num">503</span><span class="hl sym">).</span>

start<span class="hl sym">(</span>Token<span class="hl sym">) -&gt;</span>
   H <span class="hl sym">=</span> lists<span class="hl sym">:</span>foldl<span class="hl sym">(</span>
      fun<span class="hl sym">(</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">) -&gt;</span> spawn<span class="hl sym">(</span>threadring<span class="hl sym">,</span> roundtrip<span class="hl sym">, [</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">])</span> end<span class="hl sym">,</span>
      self<span class="hl sym">(),</span>
      lists<span class="hl sym">:</span>seq<span class="hl sym">(?</span>RING<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">, -</span><span class="hl num">1</span><span class="hl sym">)),</span>
   H <span class="hl sym">!</span> Token<span class="hl sym">,</span>
   roundtrip<span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> H<span class="hl sym">).</span>

roundtrip<span class="hl sym">(</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">) -&gt;</span>
   receive
      <span class="hl num">1</span> <span class="hl sym">-&gt;</span>
         io<span class="hl sym">:</span>fwrite<span class="hl sym">(</span><span class="hl str">&quot;~b~n&quot;</span><span class="hl sym">, [</span>Id<span class="hl sym">]),</span>
         erlang<span class="hl sym">:</span>halt<span class="hl sym">();</span>
      Token <span class="hl sym">-&gt;</span>
         Pid <span class="hl sym">!</span> Token <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>
         roundtrip<span class="hl sym">(</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">)</span>
   end<span class="hl sym">.</span>

main<span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
   Token <span class="hl sym">=</span> list_to_integer<span class="hl sym">(</span>Arg<span class="hl sym">),</span>
   start<span class="hl sym">(</span>Token<span class="hl sym">).</span>
