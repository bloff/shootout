<span class="hl slc">%%% The Computer Language Benchmarks Game</span>
<span class="hl slc">%%% http://shootout.alioth.debian.org/</span>
<span class="hl slc">%%% Contributed by Jiri Isa</span>

<span class="hl sym">-</span><span class="hl kwa">module</span><span class="hl sym">(</span>threadring<span class="hl sym">).</span>
<span class="hl sym">-</span><span class="hl kwa">export</span><span class="hl sym">([</span>main<span class="hl sym">/</span><span class="hl num">1</span><span class="hl sym">,</span> roundtrip<span class="hl sym">/</span><span class="hl num">2</span><span class="hl sym">]).</span>

<span class="hl sym">-</span><span class="hl kwa">define</span><span class="hl sym">(</span>RING<span class="hl sym">,</span> <span class="hl num">503</span><span class="hl sym">).</span>

<span class="hl kwd">start</span><span class="hl sym">(</span>Token<span class="hl sym">) -&gt;</span>
   H <span class="hl sym">=</span> lists<span class="hl sym">:</span><span class="hl kwd">foldl</span><span class="hl sym">(</span>
      <span class="hl kwa">fun</span><span class="hl sym">(</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">) -&gt;</span> <span class="hl kwb">spawn</span><span class="hl sym">(</span>threadring<span class="hl sym">,</span> roundtrip<span class="hl sym">, [</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">])</span> <span class="hl kwa">end</span><span class="hl sym">,</span>
      <span class="hl kwb">self</span><span class="hl sym">(),</span>
      lists<span class="hl sym">:</span><span class="hl kwd">seq</span><span class="hl sym">(?</span>RING<span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">, -</span><span class="hl num">1</span><span class="hl sym">)),</span>
   H <span class="hl sym">!</span> Token<span class="hl sym">,</span>
   <span class="hl kwd">roundtrip</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span> H<span class="hl sym">).</span>

<span class="hl kwd">roundtrip</span><span class="hl sym">(</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">) -&gt;</span>
   <span class="hl kwa">receive</span>
      <span class="hl num">1</span> <span class="hl sym">-&gt;</span>
         io<span class="hl sym">:</span><span class="hl kwd">fwrite</span><span class="hl sym">(</span><span class="hl str">&quot;~b~n&quot;</span><span class="hl sym">, [</span>Id<span class="hl sym">]),</span>
         erlang<span class="hl sym">:</span><span class="hl kwb">halt</span><span class="hl sym">();</span>
      Token <span class="hl sym">-&gt;</span>
         Pid <span class="hl sym">!</span> Token <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">,</span>
         <span class="hl kwd">roundtrip</span><span class="hl sym">(</span>Id<span class="hl sym">,</span> Pid<span class="hl sym">)</span>
   <span class="hl kwa">end</span><span class="hl sym">.</span>

<span class="hl kwd">main</span><span class="hl sym">([</span>Arg<span class="hl sym">]) -&gt;</span>
   Token <span class="hl sym">=</span> <span class="hl kwb">list_to_integer</span><span class="hl sym">(</span>Arg<span class="hl sym">),</span>
   <span class="hl kwd">start</span><span class="hl sym">(</span>Token<span class="hl sym">).</span>
