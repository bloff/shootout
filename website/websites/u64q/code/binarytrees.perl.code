<source>
<def></def><slc>#!/usr/bin/perl</slc><br />
<def></def><slc># The Computer Language Shootout</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># Contributed by Doug King</slc><br />
<def></def><slc># Corrected by Heiner Marxen</slc><br />
<def></def><br />
<kwa>use</kwa> <def></def><kwd>integer</kwd><def></def><sym>;</sym><br />
<def></def><br />
<kwa>sub</kwa> <def>item_check</def> <sym>{</sym><br />
<def></def>    <kwc>my</kwc> <def></def><sym>(</sym><def></def><kwb>$tree</kwb><def></def><sym>) =</sym> <def></def><kwb>@_</kwb><def></def><sym>;</sym><br />
<def></def><br />
    <kwa>return</kwa> <def></def><sym>$</sym><def></def><kwb>$tree</kwb><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>]</sym> <def></def><kwa>unless</kwa> <def></def><sym>(</sym><def>defined</def> <sym>$</sym><def></def><kwb>$tree</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]);</sym><br />
<def></def>    <kwa>return</kwa> <def></def><sym>$</sym><def></def><kwb>$tree</kwb><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>] +</sym> <def></def><kwd>item_check</kwd><def></def><sym>($</sym><def></def><kwb>$tree</kwb><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]) -</sym> <def></def><kwd>item_check</kwd><def></def><sym>($</sym><def></def><kwb>$tree</kwb><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<br />
<kwa>sub</kwa> <def>bottom_up_tree</def> <sym>{</sym><br />
<def></def>    <kwc>my</kwc><def></def><sym>(</sym><def></def><kwb>$item</kwb><def></def><sym>,</sym> <def></def><kwb>$depth</kwb><def></def><sym>) =</sym> <def></def><kwb>@_</kwb><def></def><sym>;</sym><br />
<def></def><br />
    <kwa>return</kwa> <def></def><sym>[</sym> <def>undef</def><sym>,</sym> <def>undef</def><sym>,</sym> <def></def><kwb>$item</kwb> <def></def><sym>]</sym> <def></def><kwa>if</kwa> <def></def><kwb>$depth</kwb> <def></def><sym>&lt;=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>    <kwa>return</kwa> <def></def><sym>[</sym> <def></def><kwd>bottom_up_tree</kwd><def></def><sym>(</sym><def></def><num>2</num> <def></def><sym>*</sym> <def></def><kwb>$item</kwb> <def></def><sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def></def><kwb>$depth</kwb> <def></def><sym>-</sym> <def></def><num>1</num><def></def><sym>),</sym><br />
<def></def>	     <kwd>bottom_up_tree</kwd><def></def><sym>(</sym><def></def><num>2</num> <def></def><sym>*</sym> <def></def><kwb>$item</kwb><def></def><sym>,</sym>     <def></def><kwb>$depth</kwb> <def></def><sym>-</sym> <def></def><num>1</num><def></def><sym>),</sym><br />
<def></def>	     <kwb>$item</kwb> <def></def><sym>];</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<br />
<kwb>$n</kwb> <def></def><sym>=</sym> <def>shift</def> <kwb>@ARGV</kwb><def></def><sym>;</sym><br />
<def></def><br />
<kwb>$min_depth</kwb> <def></def><sym>=</sym> <def></def><num>4</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>if</kwa> <def></def><sym>( (</sym><def></def><kwb>$min_depth</kwb> <def></def><sym>+</sym> <def></def><num>2</num><def></def><sym>) &gt;</sym> <def></def><kwb>$n</kwb><def></def><sym>) {</sym><br />
<def></def>    <kwb>$max_depth</kwb> <def></def><sym>=</sym> <def></def><kwb>$min_depth</kwb> <def></def><sym>+</sym> <def></def><num>2</num><def></def><sym>;</sym><br />
<def></def><sym>}</sym> <def></def><kwa>else</kwa> <def></def><sym>{</sym><br />
<def></def>    <kwb>$max_depth</kwb> <def></def><sym>=</sym> <def></def><kwb>$n</kwb><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>$stretch_depth</kwb> <def></def><sym>=</sym> <def></def><kwb>$max_depth</kwb> <def></def><sym>+</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def><br />
<kwb>$stretch_tree</kwb> <def></def><sym>=</sym> <def></def><kwd>bottom_up_tree</kwd><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def></def><kwb>$stretch_depth</kwb><def></def><sym>);</sym><br />
<def></def><kwc>print</kwc> <def></def><str>&quot;stretch tree of depth $stretch_depth</str><esc>\t</esc> <str>check: &quot;</str><def></def><sym>,</sym> <def></def><kwd>item_check</kwd><def></def><sym>(</sym><def></def><kwb>$stretch_tree</kwb><def></def><sym>),</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def><kwb>$stretch_tree</kwb> <def></def><sym>=</sym> <def></def><kwd>undef</kwd><def></def><sym>;</sym><br />
<def></def><br />
<kwb>$long_lived_tree</kwb> <def></def><sym>=</sym> <def></def><kwd>bottom_up_tree</kwd><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def></def><kwb>$max_depth</kwb><def></def><sym>);</sym><br />
<def></def><br />
<kwb>$depth</kwb> <def></def><sym>=</sym> <def></def><kwb>$min_depth</kwb><def></def><sym>;</sym><br />
<def></def><kwa>while</kwa><def></def><sym>(</sym> <def></def><kwb>$depth</kwb> <def></def><sym>&lt;=</sym> <def></def><kwb>$max_depth</kwb> <def></def><sym>) {</sym><br />
<def></def><br />
    <kwb>$iterations</kwb> <def></def><sym>=</sym> <def></def><num>2</num> <def></def><sym>** (</sym><def></def><kwb>$max_depth</kwb> <def></def><sym>-</sym> <def></def><kwb>$depth</kwb> <def></def><sym>+</sym> <def></def><kwb>$min_depth</kwb><def></def><sym>);</sym><br />
<def></def>    <kwb>$check</kwb> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def><br />
    <kwa>for</kwa> <def></def><kwb>$i</kwb> <def></def><sym>(</sym><def></def><num>1</num><def></def><sym>..</sym><def></def><kwb>$iterations</kwb><def></def><sym>) {</sym><br />
<def></def>	<kwb>$temp_tree</kwb> <def></def><sym>=</sym> <def></def><kwd>bottom_up_tree</kwd><def></def><sym>(</sym><def></def><kwb>$i</kwb><def></def><sym>,</sym> <def></def><kwb>$depth</kwb><def></def><sym>);</sym><br />
<def></def>	<kwb>$check</kwb> <def></def><sym>+=</sym> <def></def><kwd>item_check</kwd><def></def><sym>(</sym><def></def><kwb>$temp_tree</kwb><def></def><sym>);</sym><br />
<def></def>	<kwb>$temp_tree</kwb> <def></def><sym>=</sym> <def></def><kwd>undef</kwd><def></def><sym>;</sym><br />
<def></def><br />
	<kwb>$temp_tree</kwb> <def></def><sym>=</sym> <def></def><kwd>bottom_up_tree</kwd><def></def><sym>(-</sym><def></def><kwb>$i</kwb><def></def><sym>,</sym> <def></def><kwb>$depth</kwb><def></def><sym>);</sym><br />
<def></def>	<kwb>$check</kwb> <def></def><sym>+=</sym> <def></def><kwd>item_check</kwd><def></def><sym>(</sym><def></def><kwb>$temp_tree</kwb><def></def><sym>);</sym><br />
<def></def>	<kwb>$temp_tree</kwb> <def></def><sym>=</sym> <def></def><kwd>undef</kwd><def></def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
    <kwc>print</kwc> <def></def><kwb>$iterations</kwb> <def></def><sym>*</sym> <def></def><num>2</num><def></def><sym>,</sym> <def></def><str>&quot;</str><esc>\t</esc> <str>trees of depth $depth</str><esc>\t</esc> <str>check: &quot;</str><def></def><sym>,</sym> <def></def><kwb>$check</kwb><def></def><sym>,</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>    <kwb>$depth</kwb> <def></def><sym>+=</sym> <def></def><num>2</num><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>print</kwc> <def></def><str>&quot;long lived tree of depth $max_depth</str><esc>\t</esc> <str>check: &quot;</str><def></def><sym>,</sym> <def></def><kwd>item_check</kwd><def></def><sym>(</sym><def></def><kwb>$long_lived_tree</kwb><def></def><sym>),</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><def></def><br />
</source>
