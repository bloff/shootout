<source>
<def></def><com>/*</com><br />
<com>The Computer Language Shootout</com><br />
<com>http://shootout.alioth.debian.org/</com><br />
<com>Contributed by Jesse Millikan</com><br />
<com>*/</com><def></def><br />
<br />
<kwa>var</kwa> <def>keys</def><sym>=</sym><def></def><str>'WSATUGCYRKMBDHVN'</str><def></def><sym>,</sym><br />
<def>    comps</def><sym>=</sym><def></def><str>'WSTAACGRYMKVHDBN'</str><def></def><sym>,</sym><br />
<def>    complement</def><sym>=[],</sym><br />
<def>    seq</def><sym>=</sym><def></def><str>&quot;&quot;</str><def></def><sym>,</sym><def>l</def><sym>,</sym><def>i</def><br />
<br />
<kwa>for</kwa><def></def><sym>(</sym><def>i</def> <kwa>in</kwa> <def>keys</def><sym>)</sym> <def>complement</def><sym>[</sym><def>keys</def><sym>.</sym><def></def><kwc>charCodeAt</kwc><def></def><sym>(</sym><def>i</def><sym>)] =</sym> <def>comps</def><sym>[</sym><def>i</def><sym>]</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>revcomp</kwd><def></def><sym>(</sym><def>seq</def><sym>){</sym><br />
<def></def> <kwa>var</kwa> <def>rseq</def> <sym>=</sym> <def></def><str>&quot;&quot;</str><def></def><sym>,</sym> <def>l</def> <sym>=</sym> <def>seq</def><sym>.</sym><def></def><kwc>length</kwc> <def></def><sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>i</def><br />
<br />
 <kwa>for</kwa><def></def><sym>(</sym><def>i</def> <sym>=</sym> <def>l</def><sym>;</sym> <def>i</def> <sym>&gt;=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>--)</sym><br />
<def>  rseq</def> <sym>+=</sym> <def>complement</def><sym>[</sym><def>seq</def><sym>.</sym><def></def><kwc>charCodeAt</kwc><def></def><sym>(</sym><def>i</def><sym>)]</sym><br />
<def></def><br />
 <kwa>for</kwa><def></def><sym>(</sym><def>i</def> <sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def>i</def> <sym>&lt;</sym> <def>l</def><sym>;</sym> <def>i</def> <sym>+=</sym> <def></def><num>60</num><def></def><sym>)</sym><br />
<def></def>  <kwc>print</kwc><def></def><sym>(</sym><def>rseq</def><sym>.</sym><def></def><kwc>substr</kwc><def></def><sym>(</sym><def>i</def><sym>,</sym> <def></def><num>60</num><def></def><sym>))</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>while</kwa><def></def><sym>(</sym><def>l</def> <sym>=</sym> <def></def><kwd>readline</kwd><def></def><sym>()){</sym><br />
<def></def> <kwa>if</kwa><def></def><sym>(</sym><def>l</def><sym>.</sym><def></def><kwc>match</kwc><def></def><sym>(/&gt;/)){</sym><br />
<def></def>  <kwa>if</kwa><def></def><sym>(</sym><def>seq</def><sym>.</sym><def></def><kwc>length</kwc> <def></def><sym>!=</sym> <def></def><num>0</num><def></def><sym>){</sym><br />
<def></def>   <kwd>revcomp</kwd><def></def><sym>(</sym><def>seq</def><sym>)</sym><br />
<def>   seq</def> <sym>=</sym> <def></def><str>&quot;&quot;</str><def></def><br />
  <sym>}</sym><br />
<def></def>  <kwc>print</kwc><def></def><sym>(</sym><def>l</def><sym>)</sym><br />
<def></def> <sym>}</sym><br />
<def></def> <kwa>else</kwa> <def>seq</def> <sym>+=</sym> <def>l</def><sym>.</sym><def></def><kwc>toUpperCase</kwc><def></def><sym>()</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwd>revcomp</kwd><def></def><sym>(</sym><def>seq</def><sym>)</sym><def></def><br />
</source>
