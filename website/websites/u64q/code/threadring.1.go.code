<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by The Go Authors.</span>
<span class="hl com"> * flag.Arg hack by Isaac Gouy</span>
<span class="hl com"> */</span>

<span class="hl kwa">package</span> main

<span class="hl kwa">import</span> <span class="hl sym">(</span>
   <span class="hl str">&quot;flag&quot;</span><span class="hl sym">;</span>
   <span class="hl str">&quot;fmt&quot;</span><span class="hl sym">;</span>
   <span class="hl str">&quot;os&quot;</span><span class="hl sym">;</span>
   <span class="hl str">&quot;strconv&quot;</span><span class="hl sym">;</span>
<span class="hl sym">)</span>

<span class="hl kwa">var</span> n <span class="hl sym">=</span> <span class="hl num">0</span>

<span class="hl kwa">const</span> Nthread <span class="hl sym">=</span> <span class="hl num">503</span>

<span class="hl kwa">func</span> f<span class="hl sym">(</span>i int<span class="hl sym">,</span> in <span class="hl sym">&lt;-</span><span class="hl kwa">chan</span> int<span class="hl sym">,</span> out <span class="hl kwa">chan</span><span class="hl sym">&lt;-</span> int<span class="hl sym">) {</span>
   <span class="hl kwa">for</span> <span class="hl sym">{</span>
      n <span class="hl sym">:= &lt;-</span>in<span class="hl sym">;</span>
      <span class="hl kwa">if</span> n <span class="hl sym">==</span> <span class="hl num">0</span> <span class="hl sym">{</span>
         fmt<span class="hl sym">.</span>Printf<span class="hl sym">(</span><span class="hl str">&quot;%d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> i<span class="hl sym">);</span>
         os<span class="hl sym">.</span>Exit<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">);</span>
      <span class="hl sym">}</span>
      out <span class="hl sym">&lt;-</span> n <span class="hl sym">-</span> <span class="hl num">1</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwa">func</span> main<span class="hl sym">() {</span>
   flag<span class="hl sym">.</span>Parse<span class="hl sym">();</span>
   <span class="hl kwa">if</span> flag<span class="hl sym">.</span>NArg<span class="hl sym">() &gt;</span> <span class="hl num">0</span> <span class="hl sym">{</span> n<span class="hl sym">,</span>_ <span class="hl sym">=</span> strconv<span class="hl sym">.</span>Atoi<span class="hl sym">(</span> flag<span class="hl sym">.</span>Arg<span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">) ) }</span>

   one <span class="hl sym">:=</span> make<span class="hl sym">(</span><span class="hl kwa">chan</span> int<span class="hl sym">);   //</span> will be input to thread <span class="hl num">1</span>
   <span class="hl kwa">var</span> in<span class="hl sym">,</span> out <span class="hl kwa">chan</span> int <span class="hl sym">=</span> nil<span class="hl sym">,</span> one<span class="hl sym">;</span>
   <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">;</span> i <span class="hl sym">&lt;=</span> Nthread<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">;</span> i<span class="hl sym">++ {</span>
      in<span class="hl sym">,</span> out <span class="hl sym">=</span> out<span class="hl sym">,</span> make<span class="hl sym">(</span><span class="hl kwa">chan</span> int<span class="hl sym">);</span>
      <span class="hl kwa">go</span> f<span class="hl sym">(</span>i<span class="hl sym">,</span> in<span class="hl sym">,</span> out<span class="hl sym">);</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">go</span> f<span class="hl sym">(</span>Nthread<span class="hl sym">,</span> out<span class="hl sym">,</span> one<span class="hl sym">);</span>
   one <span class="hl sym">&lt;-</span> n<span class="hl sym">;</span>
   <span class="hl sym">&lt;-</span>make<span class="hl sym">(</span><span class="hl kwa">chan</span> int<span class="hl sym">);   //</span> hang until ring completes
<span class="hl sym">}</span>
