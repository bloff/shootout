<span class="hl com">/*</span>
<span class="hl com">* The Computer Language Benchmarks Game</span>
<span class="hl com">* http://shootout.alioth.debian.org/</span>
<span class="hl com">*</span>
<span class="hl com">* C version contributed by Christoph Bauer</span>
<span class="hl com">* Slightly improved by Mark Hinds</span>
<span class="hl com">* OpenMP by The Anh Tran</span>
<span class="hl com">*/</span>


<span class="hl dir">#include &lt;math.h&gt;</span>
<span class="hl dir">#include &lt;stdio.h&gt;</span>
<span class="hl dir">#include &lt;stdlib.h&gt;</span>
<span class="hl dir">#include &lt;sched.h&gt;</span>
<span class="hl dir">#include &lt;memory.h&gt;</span>
<span class="hl dir">#include &lt;omp.h&gt;</span>

<span class="hl dir">#define ALG 16</span>


<span class="hl slc">// Reimplement a 'fast' barrier. Spin instead of mutex_lock</span>
<span class="hl kwb">int</span> spin<span class="hl sym">[</span><span class="hl num">2</span><span class="hl sym">] = {</span><span class="hl num">0</span><span class="hl sym">};</span>
<span class="hl kwb">int</span> num_threads <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

<span class="hl kwb">size_t</span>   junk <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>

<span class="hl kwc">template</span><span class="hl sym">&lt;</span><span class="hl kwb">int</span> N<span class="hl sym">&gt;</span>
<span class="hl kwb">static</span> <span class="hl kwc">inline</span>
<span class="hl kwb">void</span> <span class="hl kwd">BarrierSpin</span><span class="hl sym">()</span>
<span class="hl sym">{</span>
   <span class="hl dir">#pragma omp atomic</span>
   <span class="hl sym">--</span>spin<span class="hl sym">[</span>N<span class="hl sym">];</span>

   <span class="hl kwa">while</span> <span class="hl sym">( (</span><span class="hl num">0</span> <span class="hl sym">&lt;</span> spin<span class="hl sym">[</span>N<span class="hl sym">]) &amp;&amp; (</span>spin<span class="hl sym">[</span>N<span class="hl sym">] &lt;</span> num_threads<span class="hl sym">) )</span>
   <span class="hl sym">{</span>
      <span class="hl slc">//sched_yield();   // debug</span>
      <span class="hl slc">// just do something silly while waiting other threads</span>
      <span class="hl sym">++</span>junk<span class="hl sym">;</span>
   <span class="hl sym">}</span>

   spin<span class="hl sym">[</span>N<span class="hl sym">] =</span> num_threads<span class="hl sym">;</span>
<span class="hl sym">}</span>



<span class="hl kwb">const double</span>   SOLAR_MASS   <span class="hl sym">= (</span><span class="hl num">4</span> <span class="hl sym">*</span> M_PI <span class="hl sym">*</span> M_PI<span class="hl sym">);</span>
<span class="hl kwb">const double</span>   DAYS_PER_YEAR   <span class="hl sym">=</span> <span class="hl num">365.24</span><span class="hl sym">;</span>
<span class="hl kwb">const double</span>   ADV_STEP   <span class="hl sym">=</span> <span class="hl num">0.01</span><span class="hl sym">;</span>
<span class="hl kwb">const int</span>   NBODIES      <span class="hl sym">=</span> <span class="hl num">5</span><span class="hl sym">;</span>

<span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwd">aligned</span><span class="hl sym">(</span>ALG<span class="hl sym">)))</span>
<span class="hl kwc">typedef</span> <span class="hl kwb">struct</span> _tag_planet_
<span class="hl sym">{</span>
   <span class="hl kwb">double</span> x<span class="hl sym">,</span> y<span class="hl sym">,</span> z<span class="hl sym">;</span>
   <span class="hl kwb">double</span> vx<span class="hl sym">,</span> vy<span class="hl sym">,</span> vz<span class="hl sym">;</span>
   <span class="hl kwb">double</span> mass<span class="hl sym">;</span>
<span class="hl sym">}</span> Planet<span class="hl sym">;</span>

Planet bodies<span class="hl sym">[] =</span>
<span class="hl sym">{</span>
   <span class="hl sym">{</span>                               <span class="hl com">/* sun */</span>
      <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> SOLAR_MASS
   <span class="hl sym">},</span>

   <span class="hl sym">{</span>                               <span class="hl com">/* jupiter */</span>
      <span class="hl num">4.84143144246472090e+00</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">1.16032004402742839e+00</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">1.03622044471123109e-01</span><span class="hl sym">,</span>
      <span class="hl num">1.66007664274403694e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">7.69901118419740425e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">6.90460016972063023e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">9.54791938424326609e-04</span> <span class="hl sym">*</span> SOLAR_MASS
   <span class="hl sym">},</span>

   <span class="hl sym">{</span>                               <span class="hl com">/* saturn */</span>
      <span class="hl num">8.34336671824457987e+00</span><span class="hl sym">,</span>
      <span class="hl num">4.12479856412430479e+00</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">4.03523417114321381e-01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.76742510726862411e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">4.99852801234917238e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">2.30417297573763929e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">2.85885980666130812e-04</span> <span class="hl sym">*</span> SOLAR_MASS
   <span class="hl sym">},</span>

   <span class="hl sym">{</span>                               <span class="hl com">/* uranus */</span>
      <span class="hl num">1.28943695621391310e+01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">1.51111514016986312e+01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.23307578892655734e-01</span><span class="hl sym">,</span>
      <span class="hl num">2.96460137564761618e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">2.37847173959480950e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.96589568540237556e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">4.36624404335156298e-05</span> <span class="hl sym">*</span> SOLAR_MASS
   <span class="hl sym">},</span>

   <span class="hl sym">{</span>                               <span class="hl com">/* neptune */</span>
      <span class="hl num">1.53796971148509165e+01</span><span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">2.59193146099879641e+01</span><span class="hl sym">,</span>
      <span class="hl num">1.79258772950371181e-01</span><span class="hl sym">,</span>
      <span class="hl num">2.68067772490389322e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">1.62824170038242295e-03</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl sym">-</span><span class="hl num">9.51592254519715870e-05</span> <span class="hl sym">*</span> DAYS_PER_YEAR<span class="hl sym">,</span>
      <span class="hl num">5.15138902046611451e-05</span> <span class="hl sym">*</span> SOLAR_MASS
   <span class="hl sym">}</span>
<span class="hl sym">};</span>


<span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwd">aligned</span><span class="hl sym">(</span>ALG<span class="hl sym">)))</span>
<span class="hl kwc">typedef</span> <span class="hl kwb">struct</span> _tag_inter_multi_
<span class="hl sym">{</span>
   <span class="hl kwb">double</span>   dx<span class="hl sym">;</span>
   <span class="hl kwb">double</span>   dy<span class="hl sym">;</span>
   <span class="hl kwb">double</span>   dz<span class="hl sym">;</span>
<span class="hl sym">}</span> InteractionMultiplier<span class="hl sym">;</span>

<span class="hl slc">// square matrix[N][N], contains interaction multiplier between 2 planets</span>
InteractionMultiplier multiplier<span class="hl sym">[</span>NBODIES<span class="hl sym">][</span>NBODIES<span class="hl sym">];</span>


<span class="hl kwd">__attribute__</span><span class="hl sym">((</span><span class="hl kwd">aligned</span><span class="hl sym">(</span>ALG<span class="hl sym">)))</span>
<span class="hl kwc">typedef</span> <span class="hl kwb">struct</span> _tag_delta_
<span class="hl sym">{</span>
   <span class="hl kwb">int</span>      line<span class="hl sym">;</span>
   <span class="hl kwb">int</span>      column<span class="hl sym">;</span>

   InteractionMultiplier<span class="hl sym">*</span>   upper_matrix<span class="hl sym">;</span>
   InteractionMultiplier<span class="hl sym">*</span>   lower_matrix<span class="hl sym">;</span>
<span class="hl sym">}</span> Delta<span class="hl sym">;</span>

<span class="hl com">/* this 'jobs' array labels the interactive-information of upper triangle matrix</span>
<span class="hl com">So works can be divided easily between N threads. Without this, works is very unbalance</span>
<span class="hl com"></span>
<span class="hl com">Plnt0   1   2   3   4</span>
<span class="hl com">0   _   j0   j1   j2   j3</span>
<span class="hl com">1   j0   _   j4   j5   j6</span>
<span class="hl com">2   j1   j4   _   j7   j8</span>
<span class="hl com">3   j2   j5   j7   _   j9</span>
<span class="hl com">4   j3   j6   j8   j9   _</span>
<span class="hl com"></span>
<span class="hl com">*/</span>

<span class="hl kwb">const int</span> jobs_count <span class="hl sym">= ((</span>NBODIES <span class="hl sym">* (</span>NBODIES <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)) /</span><span class="hl num">2</span><span class="hl sym">);</span> <span class="hl slc">// (5*4/2) = 10</span>
Delta jobs<span class="hl sym">[</span>jobs_count<span class="hl sym">];</span>


<span class="hl kwb">static void</span> <span class="hl kwd">advance_multi_thread</span><span class="hl sym">(</span><span class="hl kwb">int</span> n<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl slc">// labeling the interaction between planet X and planet Y</span>
   <span class="hl kwb">int</span> index <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> ln <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> ln <span class="hl sym">&lt; (</span>NBODIES <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span> ln<span class="hl sym">++)</span>
   <span class="hl sym">{</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span> <span class="hl kwb">int</span> cl <span class="hl sym">=</span> ln <span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">;</span> cl <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> cl<span class="hl sym">++)</span>
      <span class="hl sym">{</span>
         jobs<span class="hl sym">[</span>index<span class="hl sym">].</span>line <span class="hl sym">=</span> ln<span class="hl sym">;</span>
         jobs<span class="hl sym">[</span>index<span class="hl sym">].</span>column <span class="hl sym">=</span> cl<span class="hl sym">;</span>

         <span class="hl slc">// each job calculates a multiplier in the Delta matrix</span>
         <span class="hl slc">// so, just store pointer to its [upper + lower] location</span>
         jobs<span class="hl sym">[</span>index<span class="hl sym">].</span>upper_matrix <span class="hl sym">= &amp;(</span>multiplier<span class="hl sym">[</span>ln<span class="hl sym">][</span>cl<span class="hl sym">]);</span>
         jobs<span class="hl sym">[</span>index<span class="hl sym">].</span>lower_matrix <span class="hl sym">= &amp;(</span>multiplier<span class="hl sym">[</span>cl<span class="hl sym">][</span>ln<span class="hl sym">]);</span>

         index<span class="hl sym">++;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>

   spin<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] =</span> spin<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] =</span> num_threads<span class="hl sym">;</span>
   <span class="hl dir">#pragma omp parallel default(shared) num_threads(num_threads)</span>
   <span class="hl sym">{</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> loop <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> loop <span class="hl sym">&lt;=</span> n<span class="hl sym">;</span> loop<span class="hl sym">++)</span>
      <span class="hl sym">{</span>
         <span class="hl slc">// calculate the multiplier of 2 planets interaction</span>
         <span class="hl dir">#pragma omp for schedule(static) nowait</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> idx <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> idx <span class="hl sym">&lt;</span> jobs_count<span class="hl sym">;</span> idx<span class="hl sym">++)</span>
         <span class="hl sym">{</span>
            <span class="hl kwb">const</span> Planet <span class="hl sym">&amp;</span>pln1 <span class="hl sym">=</span> bodies<span class="hl sym">[</span> jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>line <span class="hl sym">];</span>
            <span class="hl kwb">const</span> Planet <span class="hl sym">&amp;</span>pln2 <span class="hl sym">=</span> bodies<span class="hl sym">[</span> jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>column <span class="hl sym">];</span>

            <span class="hl kwb">double</span> dx <span class="hl sym">=</span> pln1<span class="hl sym">.</span>x <span class="hl sym">-</span> pln2<span class="hl sym">.</span>x<span class="hl sym">;</span>
            <span class="hl kwb">double</span> dy <span class="hl sym">=</span> pln1<span class="hl sym">.</span>y <span class="hl sym">-</span> pln2<span class="hl sym">.</span>y<span class="hl sym">;</span>
            <span class="hl kwb">double</span> dz <span class="hl sym">=</span> pln1<span class="hl sym">.</span>z <span class="hl sym">-</span> pln2<span class="hl sym">.</span>z<span class="hl sym">;</span>

            <span class="hl kwb">double</span> distance2 <span class="hl sym">=</span> dx <span class="hl sym">*</span> dx <span class="hl sym">+</span> dy <span class="hl sym">*</span> dy <span class="hl sym">+</span> dz <span class="hl sym">*</span> dz<span class="hl sym">;</span>
            <span class="hl kwb">double</span> distance <span class="hl sym">=</span> <span class="hl kwd">sqrt</span><span class="hl sym">(</span>distance2<span class="hl sym">);</span>

            <span class="hl kwb">double</span> mag <span class="hl sym">=</span> ADV_STEP <span class="hl sym">/ (</span>distance <span class="hl sym">*</span> distance2<span class="hl sym">);</span>

            dx <span class="hl sym">*=</span> mag<span class="hl sym">;</span>
            dy <span class="hl sym">*=</span> mag<span class="hl sym">;</span>
            dz <span class="hl sym">*=</span> mag<span class="hl sym">;</span>

            jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>lower_matrix<span class="hl sym">-&gt;</span>dx <span class="hl sym">=</span> dx<span class="hl sym">;</span>
            jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>lower_matrix<span class="hl sym">-&gt;</span>dy <span class="hl sym">=</span> dy<span class="hl sym">;</span>
            jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>lower_matrix<span class="hl sym">-&gt;</span>dz <span class="hl sym">=</span> dz<span class="hl sym">;</span>

            jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>upper_matrix<span class="hl sym">-&gt;</span>dx <span class="hl sym">= -</span>dx<span class="hl sym">;</span>
            jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>upper_matrix<span class="hl sym">-&gt;</span>dy <span class="hl sym">= -</span>dy<span class="hl sym">;</span>
            jobs<span class="hl sym">[</span>idx<span class="hl sym">].</span>upper_matrix<span class="hl sym">-&gt;</span>dz <span class="hl sym">= -</span>dz<span class="hl sym">;</span>
         <span class="hl sym">}</span>

         <span class="hl slc">// must sync ~ 50M times -&gt; omp_barrier() cost is too high</span>
         BarrierSpin<span class="hl sym">&lt;</span><span class="hl num">0</span><span class="hl sym">&gt;();</span>

         <span class="hl slc">// Got interaction multiplier, update each planet velocity &amp; coordinate</span>
         <span class="hl dir">#pragma omp for schedule(static) nowait</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> ln <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> ln <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> ln<span class="hl sym">++)</span>
         <span class="hl sym">{</span>
            <span class="hl kwa">for</span> <span class="hl sym">(</span> <span class="hl kwb">int</span> cl <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> cl <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> cl<span class="hl sym">++)</span>
            <span class="hl sym">{</span>
               bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>vx <span class="hl sym">+=</span> multiplier<span class="hl sym">[</span>ln<span class="hl sym">][</span>cl<span class="hl sym">].</span>dx <span class="hl sym">*</span> bodies<span class="hl sym">[</span>cl<span class="hl sym">].</span>mass<span class="hl sym">;</span>
               bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>vy <span class="hl sym">+=</span> multiplier<span class="hl sym">[</span>ln<span class="hl sym">][</span>cl<span class="hl sym">].</span>dy <span class="hl sym">*</span> bodies<span class="hl sym">[</span>cl<span class="hl sym">].</span>mass<span class="hl sym">;</span>
               bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>vz <span class="hl sym">+=</span> multiplier<span class="hl sym">[</span>ln<span class="hl sym">][</span>cl<span class="hl sym">].</span>dz <span class="hl sym">*</span> bodies<span class="hl sym">[</span>cl<span class="hl sym">].</span>mass<span class="hl sym">;</span>
            <span class="hl sym">}</span>

            bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>x <span class="hl sym">+=</span> ADV_STEP <span class="hl sym">*</span> bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>vx<span class="hl sym">;</span>
            bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>y <span class="hl sym">+=</span> ADV_STEP <span class="hl sym">*</span> bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>vy<span class="hl sym">;</span>
            bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>z <span class="hl sym">+=</span> ADV_STEP <span class="hl sym">*</span> bodies<span class="hl sym">[</span>ln<span class="hl sym">].</span>vz<span class="hl sym">;</span>
         <span class="hl sym">}</span>

         BarrierSpin<span class="hl sym">&lt;</span><span class="hl num">1</span><span class="hl sym">&gt;();</span>
      <span class="hl sym">}</span> <span class="hl slc">// end advancing loop</span>
   <span class="hl sym">}</span> <span class="hl slc">// end parallel region</span>
<span class="hl sym">}</span>

<span class="hl kwb">static</span>
<span class="hl kwb">double</span> <span class="hl kwd">energy</span><span class="hl sym">()</span>
<span class="hl sym">{</span>
   <span class="hl kwb">double</span> e <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>

   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> i<span class="hl sym">++)</span>
   <span class="hl sym">{</span>
      Planet <span class="hl sym">*</span>b <span class="hl sym">=</span> bodies <span class="hl sym">+</span> i<span class="hl sym">;</span>
      e <span class="hl sym">+= (</span><span class="hl num">0.5</span> <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>mass<span class="hl sym">) * (</span>b<span class="hl sym">-&gt;</span>vx <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>vx <span class="hl sym">+</span> b<span class="hl sym">-&gt;</span>vy <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>vy <span class="hl sym">+</span> b<span class="hl sym">-&gt;</span>vz <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>vz<span class="hl sym">);</span>

      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> j <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> j<span class="hl sym">++)</span>
      <span class="hl sym">{</span>
         Planet <span class="hl sym">*</span>b2 <span class="hl sym">=</span> bodies <span class="hl sym">+</span> j<span class="hl sym">;</span>

         <span class="hl kwb">double</span> dx <span class="hl sym">=</span> b<span class="hl sym">-&gt;</span>x <span class="hl sym">-</span> b2<span class="hl sym">-&gt;</span>x<span class="hl sym">;</span>
         <span class="hl kwb">double</span> dy <span class="hl sym">=</span> b<span class="hl sym">-&gt;</span>y <span class="hl sym">-</span> b2<span class="hl sym">-&gt;</span>y<span class="hl sym">;</span>
         <span class="hl kwb">double</span> dz <span class="hl sym">=</span> b<span class="hl sym">-&gt;</span>z <span class="hl sym">-</span> b2<span class="hl sym">-&gt;</span>z<span class="hl sym">;</span>

         <span class="hl kwb">double</span> distance <span class="hl sym">=</span> <span class="hl kwd">sqrt</span><span class="hl sym">(</span>dx <span class="hl sym">*</span> dx <span class="hl sym">+</span> dy <span class="hl sym">*</span> dy <span class="hl sym">+</span> dz <span class="hl sym">*</span> dz<span class="hl sym">);</span>

         e <span class="hl sym">-= (</span>b<span class="hl sym">-&gt;</span>mass <span class="hl sym">*</span> b2<span class="hl sym">-&gt;</span>mass<span class="hl sym">) /</span> distance<span class="hl sym">;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">return</span> e<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">static</span>
<span class="hl kwb">void</span> <span class="hl kwd">offset_momentum</span><span class="hl sym">()</span>
<span class="hl sym">{</span>
   <span class="hl kwb">double</span> px <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> py <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">,</span> pz <span class="hl sym">=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>

   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> i<span class="hl sym">++)</span>
   <span class="hl sym">{</span>
      Planet <span class="hl sym">*</span>b <span class="hl sym">=</span> bodies <span class="hl sym">+</span>i<span class="hl sym">;</span>

      px <span class="hl sym">+=</span> b<span class="hl sym">-&gt;</span>vx <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
      py <span class="hl sym">+=</span> b<span class="hl sym">-&gt;</span>vy <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
      pz <span class="hl sym">+=</span> b<span class="hl sym">-&gt;</span>vz <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
   <span class="hl sym">}</span>

   bodies<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>vx <span class="hl sym">= -</span> px <span class="hl sym">/</span> SOLAR_MASS<span class="hl sym">;</span>
   bodies<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>vy <span class="hl sym">= -</span> py <span class="hl sym">/</span> SOLAR_MASS<span class="hl sym">;</span>
   bodies<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>vz <span class="hl sym">= -</span> pz <span class="hl sym">/</span> SOLAR_MASS<span class="hl sym">;</span>
<span class="hl sym">}</span>


<span class="hl slc">// Old singlethread</span>
<span class="hl kwb">void</span> <span class="hl kwd">advance_single_thread</span><span class="hl sym">(</span><span class="hl kwb">int</span> N<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> loop <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">;</span> loop <span class="hl sym">&lt;=</span> N<span class="hl sym">;</span> loop<span class="hl sym">++)</span>
   <span class="hl sym">{</span>
      <span class="hl slc">// calculate multiplier then update velocity</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt; (</span>NBODIES <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">);</span> i<span class="hl sym">++)</span>
      <span class="hl sym">{</span>
         Planet <span class="hl sym">*</span>b <span class="hl sym">=</span> bodies <span class="hl sym">+</span> i<span class="hl sym">;</span>
         <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> j <span class="hl sym">=</span> i <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span> j <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> j<span class="hl sym">++)</span>
         <span class="hl sym">{</span>
            Planet <span class="hl sym">*</span>b2 <span class="hl sym">=</span> bodies <span class="hl sym">+</span> j<span class="hl sym">;</span>

            <span class="hl kwb">double</span> dx <span class="hl sym">=</span> b<span class="hl sym">-&gt;</span>x <span class="hl sym">-</span> b2<span class="hl sym">-&gt;</span>x<span class="hl sym">;</span>
            <span class="hl kwb">double</span> dy <span class="hl sym">=</span> b<span class="hl sym">-&gt;</span>y <span class="hl sym">-</span> b2<span class="hl sym">-&gt;</span>y<span class="hl sym">;</span>
            <span class="hl kwb">double</span> dz <span class="hl sym">=</span> b<span class="hl sym">-&gt;</span>z <span class="hl sym">-</span> b2<span class="hl sym">-&gt;</span>z<span class="hl sym">;</span>

            <span class="hl kwb">double</span> distance2 <span class="hl sym">=</span> dx <span class="hl sym">*</span> dx <span class="hl sym">+</span> dy <span class="hl sym">*</span> dy <span class="hl sym">+</span> dz <span class="hl sym">*</span> dz<span class="hl sym">;</span>
            <span class="hl kwb">double</span> distance <span class="hl sym">=</span> <span class="hl kwd">sqrt</span><span class="hl sym">(</span>distance2<span class="hl sym">);</span>
            <span class="hl kwb">double</span> mag <span class="hl sym">=</span> ADV_STEP <span class="hl sym">/ (</span>distance <span class="hl sym">*</span> distance2<span class="hl sym">);</span>

            dx <span class="hl sym">*=</span> mag<span class="hl sym">;</span>
            dy <span class="hl sym">*=</span> mag<span class="hl sym">;</span>
            dz <span class="hl sym">*=</span> mag<span class="hl sym">;</span>

            b<span class="hl sym">-&gt;</span>vx <span class="hl sym">-=</span> dx <span class="hl sym">*</span> b2<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
            b<span class="hl sym">-&gt;</span>vy <span class="hl sym">-=</span> dy <span class="hl sym">*</span> b2<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
            b<span class="hl sym">-&gt;</span>vz <span class="hl sym">-=</span> dz <span class="hl sym">*</span> b2<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>

            b2<span class="hl sym">-&gt;</span>vx <span class="hl sym">+=</span> dx <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
            b2<span class="hl sym">-&gt;</span>vy <span class="hl sym">+=</span> dy <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
            b2<span class="hl sym">-&gt;</span>vz <span class="hl sym">+=</span> dz <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>mass<span class="hl sym">;</span>
         <span class="hl sym">}</span>
      <span class="hl sym">}</span>

      <span class="hl slc">// update coordinate</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> NBODIES<span class="hl sym">;</span> i<span class="hl sym">++)</span>
      <span class="hl sym">{</span>
         Planet<span class="hl sym">*</span> b <span class="hl sym">=</span> bodies <span class="hl sym">+</span> i<span class="hl sym">;</span>

         b<span class="hl sym">-&gt;</span>x <span class="hl sym">+=</span> ADV_STEP <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>vx<span class="hl sym">;</span>
         b<span class="hl sym">-&gt;</span>y <span class="hl sym">+=</span> ADV_STEP <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>vy<span class="hl sym">;</span>
         b<span class="hl sym">-&gt;</span>z <span class="hl sym">+=</span> ADV_STEP <span class="hl sym">*</span> b<span class="hl sym">-&gt;</span>vz<span class="hl sym">;</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwb">int</span> <span class="hl kwd">GetThread</span><span class="hl sym">()</span>
<span class="hl sym">{</span>
   cpu_set_t cs<span class="hl sym">;</span>
   <span class="hl kwd">CPU_ZERO</span><span class="hl sym">(&amp;</span>cs<span class="hl sym">);</span>
   <span class="hl kwd">sched_getaffinity</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwa">sizeof</span><span class="hl sym">(</span>cs<span class="hl sym">), &amp;</span>cs<span class="hl sym">);</span>

   <span class="hl kwb">int</span> count <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
   <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwb">int</span> i <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> i <span class="hl sym">&lt;</span> <span class="hl num">8</span><span class="hl sym">;</span> i<span class="hl sym">++)</span>
   <span class="hl sym">{</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwd">CPU_ISSET</span><span class="hl sym">(</span>i<span class="hl sym">, &amp;</span>cs<span class="hl sym">))</span>
         count<span class="hl sym">++;</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">return</span> count<span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">char</span> <span class="hl sym">**</span> argv<span class="hl sym">)</span>
<span class="hl sym">{</span>
   <span class="hl kwd">memset</span><span class="hl sym">(</span>jobs<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwa">sizeof</span><span class="hl sym">(</span>jobs<span class="hl sym">));</span>
   <span class="hl kwd">memset</span><span class="hl sym">(</span>multiplier<span class="hl sym">,</span> <span class="hl num">0</span><span class="hl sym">,</span> <span class="hl kwa">sizeof</span><span class="hl sym">(</span>multiplier<span class="hl sym">));</span>

   <span class="hl kwb">int</span> n <span class="hl sym">= (</span>argc <span class="hl sym">==</span> <span class="hl num">2</span><span class="hl sym">)</span>? <span class="hl kwd">atoi</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]) :</span> <span class="hl num">1000</span><span class="hl sym">;</span>

   <span class="hl kwd">offset_momentum</span><span class="hl sym">();</span>
   <span class="hl kwd">printf</span> <span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwd">energy</span><span class="hl sym">());</span>

   num_threads <span class="hl sym">=</span> <span class="hl kwd">GetThread</span><span class="hl sym">();</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span>num_threads <span class="hl sym">&gt;</span> <span class="hl num">1</span><span class="hl sym">)</span>
      <span class="hl kwd">advance_multi_thread</span><span class="hl sym">(</span>n<span class="hl sym">);</span>
   <span class="hl kwa">else</span>
      <span class="hl kwd">advance_single_thread</span><span class="hl sym">(</span>n<span class="hl sym">);</span>

   <span class="hl kwd">printf</span> <span class="hl sym">(</span><span class="hl str">&quot;%.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwd">energy</span><span class="hl sym">());</span>

   <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

