<span class="hl slc">! The Computer Language Shootout</span>
<span class="hl slc">! http://shootout.alioth.debian.org/</span>
<span class="hl slc">!</span>
<span class="hl slc">! contributed by Steve Decker, modified from the version by Simon Geard</span>
<span class="hl slc">! compilation:</span>
<span class="hl slc">!   g95 -O3 reverse.f90</span>
<span class="hl slc">!   ifort -ipo -O3 -static reverse.f90</span>

<span class="hl kwa">program</span> revcomp
  <span class="hl kwa">implicit none</span>

  <span class="hl kwb">character</span><span class="hl sym">,</span> <span class="hl kwa">parameter</span> <span class="hl sym">::</span> EndStr <span class="hl sym">=</span> <span class="hl str">&quot;&gt;&quot;</span>
  <span class="hl kwb">integer</span><span class="hl sym">,</span>   <span class="hl kwa">parameter</span> <span class="hl sym">::</span> LineWidth <span class="hl sym">=</span> <span class="hl num">60</span>

  <span class="hl kwb">character</span><span class="hl sym">(</span>len<span class="hl sym">=</span>LineWidth<span class="hl sym">),</span> <span class="hl kwa">dimension</span><span class="hl sym">(:),</span> allocatable <span class="hl sym">::</span> <span class="hl kwa">data</span><span class="hl sym">,</span> w
  <span class="hl kwb">logical</span>                  <span class="hl sym">::</span> insection <span class="hl sym">= .</span>false<span class="hl sym">.</span>
  <span class="hl kwb">integer</span>                  <span class="hl sym">::</span> stat<span class="hl sym">,</span> bcount
  <span class="hl kwb">character</span><span class="hl sym">(</span>len<span class="hl sym">=</span>LineWidth<span class="hl sym">) ::</span> line<span class="hl sym">,</span> title

  <span class="hl slc">! Read and process</span>
  <span class="hl kwd">allocate</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">(</span><span class="hl num">100</span><span class="hl sym">))</span>  <span class="hl slc">! Allocate enough lines so that we don't have to grow the array for the test</span>
  readFile<span class="hl sym">:</span> <span class="hl kwa">do</span>
     <span class="hl kwa">read</span><span class="hl sym">(*,</span> <span class="hl str">&quot;(a)&quot;</span><span class="hl sym">,</span> iostat<span class="hl sym">=</span>stat<span class="hl sym">)</span> line
     <span class="hl kwa">if</span> <span class="hl sym">(</span>stat <span class="hl sym">/=</span> <span class="hl num">0</span><span class="hl sym">)</span> exit readFile
     <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwd">line</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">:</span><span class="hl num">1</span><span class="hl sym">) ==</span> EndStr<span class="hl sym">)</span> <span class="hl kwa">then</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span>insection<span class="hl sym">)</span> <span class="hl kwa">then</span>
           <span class="hl kwa">write</span><span class="hl sym">(*,</span> <span class="hl str">&quot;(a)&quot;</span><span class="hl sym">)</span> <span class="hl kwd">trim</span><span class="hl sym">(</span>title<span class="hl sym">)</span>
           <span class="hl kwa">call</span> printReverseFasta
        <span class="hl kwa">else</span>
           insection <span class="hl sym">= .</span>true<span class="hl sym">.</span>
        <span class="hl kwa">end if</span>
        title <span class="hl sym">=</span> line
        bcount <span class="hl sym">=</span> <span class="hl num">0</span>
        cycle readFile
     <span class="hl kwa">end if</span>
     bcount <span class="hl sym">=</span> bcount <span class="hl sym">+</span> <span class="hl num">1</span>
     <span class="hl kwa">if</span> <span class="hl sym">(</span>bcount <span class="hl sym">&gt;</span> <span class="hl kwd">size</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">))</span> <span class="hl kwa">then</span> <span class="hl slc">! Included for completeness - it shouldn't be called in the test</span>
        <span class="hl kwd">allocate</span><span class="hl sym">(</span><span class="hl kwd">w</span><span class="hl sym">(</span><span class="hl kwd">size</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">)))</span>
        w <span class="hl sym">=</span> <span class="hl kwa">data</span>
        <span class="hl kwd">deallocate</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">)</span>
        <span class="hl kwd">allocate</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span><span class="hl kwd">size</span><span class="hl sym">(</span>w<span class="hl sym">)))</span>
        <span class="hl kwa">data</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">:</span><span class="hl kwd">size</span><span class="hl sym">(</span>w<span class="hl sym">)) =</span> w
        <span class="hl kwd">deallocate</span><span class="hl sym">(</span>w<span class="hl sym">)</span>
     <span class="hl kwa">end if</span>
     <span class="hl kwa">data</span><span class="hl sym">(</span>bcount<span class="hl sym">) =</span> line
  <span class="hl kwa">end do</span> readFile

  <span class="hl kwa">write</span><span class="hl sym">(*,</span> <span class="hl str">&quot;(a)&quot;</span><span class="hl sym">)</span> <span class="hl kwd">trim</span><span class="hl sym">(</span>title<span class="hl sym">)</span>
  <span class="hl kwa">call</span> printReverseFasta
  
<span class="hl kwa">contains</span>

  <span class="hl kwa">subroutine</span> printReverseFasta
    <span class="hl slc">! Output the data in reverse order and with the complement</span>
    <span class="hl kwb">character</span><span class="hl sym">,</span> <span class="hl kwa">dimension</span><span class="hl sym">(</span><span class="hl num">65</span><span class="hl sym">:</span><span class="hl num">121</span><span class="hl sym">),</span> <span class="hl kwa">parameter</span> <span class="hl sym">::</span> Complement <span class="hl sym">= (/</span> <span class="hl str">&quot;T&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;V&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;G&quot;</span><span class="hl sym">, &amp;</span>
         <span class="hl str">&quot;H&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;E&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;F&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;C&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;D&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;I&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;J&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;M&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;L&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;K&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;N&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;O&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;P&quot;</span><span class="hl sym">,  &amp;</span>
         <span class="hl str">&quot;Q&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Y&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;S&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;B&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;W&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;X&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;R&quot;</span><span class="hl sym">, (</span><span class="hl str">&quot; &quot;</span><span class="hl sym">,</span> stat <span class="hl sym">=</span> <span class="hl num">90</span><span class="hl sym">,</span> <span class="hl num">96</span><span class="hl sym">),  &amp;</span>
         <span class="hl str">&quot;T&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;V&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;G&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;H&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;E&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;F&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;C&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;D&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;I&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;J&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;M&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;L&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;K&quot;</span><span class="hl sym">,  &amp;</span>
         <span class="hl str">&quot;N&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;O&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;P&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Q&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;Y&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;S&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;A&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;B&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;W&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;X&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;R&quot;</span> <span class="hl sym">/)</span>

    <span class="hl kwb">integer</span> <span class="hl sym">::</span> fLine<span class="hl sym">,</span> fChar<span class="hl sym">,</span> bLine<span class="hl sym">,</span> bChar
    <span class="hl kwb">character</span> <span class="hl sym">::</span> c

    fLine <span class="hl sym">=</span> <span class="hl num">1</span>
    fChar <span class="hl sym">=</span> <span class="hl num">1</span>
    bLine <span class="hl sym">=</span> bcount
    bChar <span class="hl sym">=</span> <span class="hl kwd">len_trim</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">(</span>bLine<span class="hl sym">))</span>
    <span class="hl kwa">do</span>
       <span class="hl kwa">if</span> <span class="hl sym">(</span>fLine <span class="hl sym">&gt;</span> bLine <span class="hl sym">.</span>or<span class="hl sym">.</span> fLine <span class="hl sym">==</span> bLine <span class="hl sym">.</span>and<span class="hl sym">.</span> fChar <span class="hl sym">&gt;=</span> bChar<span class="hl sym">)</span> exit
       c <span class="hl sym">=</span> <span class="hl kwa">data</span><span class="hl sym">(</span>fLine<span class="hl sym">)(</span>fChar<span class="hl sym">:</span>fChar<span class="hl sym">)</span>
       <span class="hl kwa">data</span><span class="hl sym">(</span>fLine<span class="hl sym">)(</span>fChar<span class="hl sym">:</span>fChar<span class="hl sym">) =</span> <span class="hl kwd">Complement</span><span class="hl sym">(</span><span class="hl kwd">iachar</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">(</span>bLine<span class="hl sym">)(</span>bChar<span class="hl sym">:</span>bChar<span class="hl sym">)))</span>
       <span class="hl kwa">data</span><span class="hl sym">(</span>bLine<span class="hl sym">)(</span>bChar<span class="hl sym">:</span>bChar<span class="hl sym">) =</span> <span class="hl kwd">Complement</span><span class="hl sym">(</span><span class="hl kwd">iachar</span><span class="hl sym">(</span>c<span class="hl sym">))</span>
       fChar <span class="hl sym">=</span> fChar <span class="hl sym">+</span> <span class="hl num">1</span>
       <span class="hl kwa">if</span> <span class="hl sym">(</span>fChar <span class="hl sym">&gt;</span> LineWidth<span class="hl sym">)</span> <span class="hl kwa">then</span>
          fChar <span class="hl sym">=</span> <span class="hl num">1</span>
          fLine <span class="hl sym">=</span> fLine <span class="hl sym">+</span> <span class="hl num">1</span>
       <span class="hl kwa">end if</span>
       bChar <span class="hl sym">=</span> bChar <span class="hl sym">-</span> <span class="hl num">1</span>
       <span class="hl kwa">if</span> <span class="hl sym">(</span>bChar <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">then</span>
          bChar <span class="hl sym">=</span> LineWidth
          bLine <span class="hl sym">=</span> bLine <span class="hl sym">-</span> <span class="hl num">1</span>
       <span class="hl kwa">end if</span>
    <span class="hl kwa">end do</span>
    <span class="hl kwa">if</span> <span class="hl sym">(</span>fLine <span class="hl sym">==</span> bLine <span class="hl sym">.</span>and<span class="hl sym">.</span> fChar <span class="hl sym">==</span> bChar<span class="hl sym">)  &amp;</span>
         <span class="hl kwa">data</span><span class="hl sym">(</span>fLine<span class="hl sym">)(</span>fChar<span class="hl sym">:</span>fChar<span class="hl sym">) =</span> <span class="hl kwd">Complement</span><span class="hl sym">(</span><span class="hl kwd">iachar</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">(</span>fLine<span class="hl sym">)(</span>fChar<span class="hl sym">:</span>fChar<span class="hl sym">)))</span>
    <span class="hl kwa">do</span> fLine <span class="hl sym">=</span> <span class="hl num">1</span><span class="hl sym">,</span> bcount<span class="hl sym">-</span><span class="hl num">1</span>
       <span class="hl kwa">write</span><span class="hl sym">(*,</span> <span class="hl str">&quot;(a)&quot;</span><span class="hl sym">)</span> <span class="hl kwa">data</span><span class="hl sym">(</span>fLine<span class="hl sym">)</span>
    <span class="hl kwa">end do</span>
    <span class="hl kwa">write</span><span class="hl sym">(*,</span> <span class="hl str">&quot;(a)&quot;</span><span class="hl sym">)</span> <span class="hl kwd">trim</span><span class="hl sym">(</span><span class="hl kwa">data</span><span class="hl sym">(</span>bcount<span class="hl sym">))</span>
  <span class="hl kwa">end subroutine</span> printReverseFasta
<span class="hl kwa">end program</span> revcomp
