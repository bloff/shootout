<source>
<def></def><sym>&lt;</sym><def>?php</def> <com>/* The Great Computer Language Shootout</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com></com><br />
<com>   contributed by Peter Baltruschat</com><br />
<com>*/</com><def></def><br />
<kwa>function</kwa> <def></def><kwd>Transformation_Compose</kwd><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>,</sym> <def></def><kwc>$a</kwc><def></def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return array</kwa><def></def><sym>(</sym><br />
<def></def>      <kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>],</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]),</sym><br />
<def></def>      <kwa>gmp_add</kwa><def></def><sym>(</sym><def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>],</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]),</sym> <def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>],</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>])),</sym><br />
<def></def>      <kwa>gmp_add</kwa><def></def><sym>(</sym><def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>],</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]),</sym> <def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>],</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>])),</sym><br />
<def></def>      <kwa>gmp_add</kwa><def></def><sym>(</sym><def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>],</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]),</sym> <def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>],</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>]))</sym><br />
<def></def>   <sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwa>function</kwa> <def></def><kwd>Transformation_Compose2</kwd><def></def><sym>(</sym><def></def><kwc>$y</kwc><def></def><sym>,</sym> <def></def><kwc>$a</kwc><def></def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return array</kwa><def></def><sym>(</sym><br />
<def></def>      <kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><num>10</num><def></def><sym>,</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]),</sym><br />
<def></def>      <kwa>gmp_add</kwa><def></def><sym>(</sym><def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><num>10</num><def></def><sym>,</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]),</sym> <def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwa>gmp_mul</kwa><def></def><sym>(-</sym><def></def><num>10</num><def></def><sym>,</sym> <def></def><kwc>$y</kwc><def></def><sym>),</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>])),</sym><br />
<def></def>      <kwc>$a</kwc><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>],</sym><br />
<def></def>      <kwc>$a</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>]</sym><br />
<def></def>   <sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwa>function</kwa> <def></def><kwd>Transformation_Extract</kwd><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>,</sym> <def></def><kwc>$j</kwc><def></def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return gmp_div_q</kwa><def></def><sym>(</sym><br />
<def></def>      <kwa>gmp_add</kwa><def></def><sym>(</sym><def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>],</sym> <def></def><kwc>$j</kwc><def></def><sym>),</sym> <def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]),</sym><br />
<def></def>      <kwa>gmp_add</kwa><def></def><sym>(</sym><def></def><kwa>gmp_mul</kwa><def></def><sym>(</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>],</sym> <def></def><kwc>$j</kwc><def></def><sym>),</sym> <def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>])</sym><br />
<def></def>   <sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwa>function</kwa> <def></def><kwd>Transformation_Next</kwd><def></def><sym>(&amp;</sym><def></def><kwc>$tr</kwc><def></def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>] = (++</sym><def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>]&lt;&lt;</sym><def></def><num>1</num><def></def><sym>) +</sym> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>   <kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>] =</sym> <def></def><kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>3</num><def></def><sym>]&lt;&lt;</sym><def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>   <kwc>$tr</kwc><def></def><sym>[</sym><def></def><num>2</num><def></def><sym>] =</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwc>$tr</kwc><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><kwa>function</kwa> <def></def><kwd>Pidigit_Next</kwd><def></def><sym>(&amp;</sym><def></def><kwc>$pd</kwc><def></def><sym>,</sym> <def></def><kwc>$times</kwc><def></def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwc>$digits</kwc> <def></def><sym>=</sym> <def></def><str>''</str><def></def><sym>;</sym><br />
<def></def>   <kwc>$z</kwc> <def></def><sym>=</sym> <def></def><kwc>$pd</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def>   do</def><br />
   <sym>{</sym><br />
<def></def>      <kwc>$y</kwc> <def></def><sym>=</sym> <def></def><kwd>Transformation_Extract</kwd><def></def><sym>(</sym><def></def><kwc>$z</kwc><def></def><sym>,</sym> <def></def><num>3</num><def></def><sym>);</sym><br />
<def>      do</def><br />
      <sym>{</sym><br />
<def></def>         <kwc>$z</kwc> <def></def><sym>=</sym> <def></def><kwd>Transformation_Compose</kwd><def></def><sym>(</sym><def></def><kwc>$z</kwc><def></def><sym>,</sym> <def></def><kwd>Transformation_Next</kwd><def></def><sym>(</sym><def></def><kwc>$pd</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>]));</sym><br />
<def></def>         <kwc>$y</kwc> <def></def><sym>=</sym> <def></def><kwd>Transformation_Extract</kwd><def></def><sym>(</sym><def></def><kwc>$z</kwc><def></def><sym>,</sym> <def></def><num>3</num><def></def><sym>);</sym><br />
<def></def>      <sym>}</sym><br />
<def></def>      <kwa>while</kwa><def></def><sym>(</sym><def></def><num>0</num> <def></def><sym>!=</sym> <def></def><kwa>gmp_cmp</kwa><def></def><sym>(</sym><def></def><kwd>Transformation_Extract</kwd><def></def><sym>(</sym><def></def><kwc>$z</kwc><def></def><sym>,</sym> <def></def><num>4</num><def></def><sym>),</sym> <def></def><kwc>$y</kwc><def></def><sym>));</sym><br />
<def></def>      <kwc>$z</kwc> <def></def><sym>=</sym> <def></def><kwd>Transformation_Compose2</kwd><def></def><sym>(</sym><def></def><kwc>$y</kwc><def></def><sym>,</sym> <def></def><kwc>$z</kwc><def></def><sym>);</sym><br />
<def></def>      <kwc>$digits</kwc> <def>.</def><sym>=</sym> <def></def><kwa>gmp_strval</kwa><def></def><sym>(</sym><def></def><kwc>$y</kwc><def></def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwa>while</kwa><def></def><sym>(--</sym><def></def><kwc>$times</kwc><def></def><sym>);</sym><br />
<def></def>   <kwc>$pd</kwc><def></def><sym>[</sym><def></def><num>0</num><def></def><sym>] =</sym> <def></def><kwc>$z</kwc><def></def><sym>;</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwc>$digits</kwc><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>$n</kwc> <def></def><sym>= (</sym><def></def><kwb>int</kwb><def></def><sym>)</sym> <def></def><kwc>$argv</kwc><def></def><sym>[</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def><kwc>$i</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def><kwc>$pidigit</kwc> <def></def><sym>=</sym> <def></def><kwa>array</kwa><def></def><sym>(</sym><def></def><kwa>array</kwa><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>1</num><def></def><sym>),</sym> <def></def><kwa>array</kwa><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>));</sym><br />
<def></def><br />
<kwa>while</kwa><def></def><sym>(</sym><def></def><kwc>$n</kwc><def></def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>if</kwa><def></def><sym>(</sym><def></def><kwc>$n</kwc> <def></def><sym>&lt;</sym> <def></def><num>10</num><def></def><sym>)</sym><br />
<def></def>   <sym>{</sym><br />
<def></def>      <kwa>printf</kwa><def></def><sym>(</sym><def></def><str>&quot;%s%s</str><esc>\t</esc><str>:%d</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def></def><kwd>Pidigit_Next</kwd><def></def><sym>(</sym><def></def><kwc>$pidigit</kwc><def></def><sym>,</sym> <def></def><kwc>$n</kwc><def></def><sym>),</sym> <def></def><kwa>str_repeat</kwa><def></def><sym>(</sym><def></def><str>' '</str><def></def><sym>,</sym> <def></def><num>10</num> <def></def><sym>-</sym> <def></def><kwc>$n</kwc><def></def><sym>),</sym> <def></def><kwc>$i</kwc> <def></def><sym>+</sym> <def></def><kwc>$n</kwc><def></def><sym>);</sym><br />
<def></def>      <kwa>break</kwa><def></def><sym>;</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwa>else</kwa><br />
<def></def>   <sym>{</sym><br />
<def></def>      <kwa>printf</kwa><def></def><sym>(</sym><def></def><str>&quot;%s</str><esc>\t</esc><str>:%d</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def></def><kwd>Pidigit_Next</kwd><def></def><sym>(</sym><def></def><kwc>$pidigit</kwc><def></def><sym>,</sym> <def></def><num>10</num><def></def><sym>),</sym> <def></def><kwc>$i</kwc> <def></def><sym>+=</sym> <def></def><num>10</num><def></def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwc>$n</kwc> <def></def><sym>-=</sym> <def></def><num>10</num><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def>?</def><sym>&gt;</sym><def></def><br />
</source>
