<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by anon</span>
<span class="hl slc"># modified by Pilho Kim (first GMP version)</span>
<span class="hl slc"># modified by 2to3 and Daniel Nanz</span>

<span class="hl kwa">import</span> sys
<span class="hl kwa">from</span> itertools <span class="hl kwa">import</span> islice
<span class="hl kwa">from</span> gmpy <span class="hl kwa">import</span> mpz

 
<span class="hl sym">(</span>MPZ0<span class="hl sym">,</span> MPZ1<span class="hl sym">,</span> MPZ2<span class="hl sym">,</span> MPZ3<span class="hl sym">,</span> MPZ4<span class="hl sym">,</span> MPZ10<span class="hl sym">) = (</span><span class="hl kwd">mpz</span><span class="hl sym">(</span>i<span class="hl sym">)</span> <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span> <span class="hl num">1</span><span class="hl sym">,</span> <span class="hl num">2</span><span class="hl sym">,</span> <span class="hl num">3</span><span class="hl sym">,</span> <span class="hl num">4</span><span class="hl sym">,</span> <span class="hl num">10</span><span class="hl sym">))</span>


<span class="hl kwa">def</span> <span class="hl kwd">gen_x</span><span class="hl sym">(</span>zero<span class="hl sym">=</span>MPZ0<span class="hl sym">,</span> one<span class="hl sym">=</span>MPZ1<span class="hl sym">,</span> two<span class="hl sym">=</span>MPZ2<span class="hl sym">,</span> four<span class="hl sym">=</span>MPZ4<span class="hl sym">):</span>

    a<span class="hl sym">,</span> b<span class="hl sym">,</span> d <span class="hl sym">=</span> zero<span class="hl sym">,</span> two<span class="hl sym">,</span> one
    <span class="hl kwa">while True</span><span class="hl sym">:</span>
        a <span class="hl sym">+=</span> one
        b <span class="hl sym">+=</span> four
        d <span class="hl sym">+=</span> two
        <span class="hl kwa">yield</span> <span class="hl sym">(</span>a<span class="hl sym">,</span> b<span class="hl sym">,</span> zero<span class="hl sym">,</span> d<span class="hl sym">)</span>


<span class="hl kwa">def</span> <span class="hl kwd">compose</span><span class="hl sym">(</span>q1<span class="hl sym">,</span> q2<span class="hl sym">):</span>

    a<span class="hl sym">,</span> b<span class="hl sym">,</span> c<span class="hl sym">,</span> d <span class="hl sym">=</span> q1
    e<span class="hl sym">,</span> f<span class="hl sym">,</span> g<span class="hl sym">,</span> h <span class="hl sym">=</span> q2
    <span class="hl kwa">return</span> <span class="hl sym">(</span>a <span class="hl sym">*</span> e<span class="hl sym">,</span>  a <span class="hl sym">*</span> f <span class="hl sym">+</span> b <span class="hl sym">*</span> h<span class="hl sym">,</span>  c <span class="hl sym">*</span> e <span class="hl sym">+</span> d <span class="hl sym">*</span> g<span class="hl sym">,</span>  c <span class="hl sym">*</span> f <span class="hl sym">+</span> d <span class="hl sym">*</span> h<span class="hl sym">)</span>


<span class="hl kwa">def</span> <span class="hl kwd">extract</span><span class="hl sym">(</span>q<span class="hl sym">,</span> j<span class="hl sym">):</span>
    
    a<span class="hl sym">,</span> b<span class="hl sym">,</span> c<span class="hl sym">,</span> d <span class="hl sym">=</span> q
    <span class="hl kwa">return</span> <span class="hl sym">(</span>a <span class="hl sym">*</span> j <span class="hl sym">+</span> b<span class="hl sym">) // (</span>c <span class="hl sym">*</span> j <span class="hl sym">+</span> d<span class="hl sym">)</span>


<span class="hl kwa">def</span> <span class="hl kwd">pi_digits</span><span class="hl sym">(</span>x<span class="hl sym">=</span><span class="hl kwd">gen_x</span><span class="hl sym">(),</span> extr<span class="hl sym">=</span>extract<span class="hl sym">,</span> comp<span class="hl sym">=</span>compose<span class="hl sym">,</span> zero<span class="hl sym">=</span>MPZ0<span class="hl sym">,</span> 
              one<span class="hl sym">=</span>MPZ1<span class="hl sym">,</span> three<span class="hl sym">=</span>MPZ3<span class="hl sym">,</span> four<span class="hl sym">=</span>MPZ4<span class="hl sym">,</span> ten<span class="hl sym">=</span>MPZ10<span class="hl sym">,</span> mten<span class="hl sym">=-</span>MPZ10<span class="hl sym">):</span>

    z <span class="hl sym">= (</span>one<span class="hl sym">,</span> zero<span class="hl sym">,</span> zero<span class="hl sym">,</span> one<span class="hl sym">)</span>
    <span class="hl kwa">while True</span><span class="hl sym">:</span>
        y <span class="hl sym">=</span> <span class="hl kwd">extr</span><span class="hl sym">(</span>z<span class="hl sym">,</span> three<span class="hl sym">)</span>
        <span class="hl kwa">while</span> y <span class="hl sym">!=</span> <span class="hl kwd">extr</span><span class="hl sym">(</span>z<span class="hl sym">,</span> four<span class="hl sym">):</span>
            z <span class="hl sym">=</span> <span class="hl kwd">comp</span><span class="hl sym">(</span>z<span class="hl sym">,</span> <span class="hl kwd">next</span><span class="hl sym">(</span>x<span class="hl sym">))</span>
            y <span class="hl sym">=</span> <span class="hl kwd">extr</span><span class="hl sym">(</span>z<span class="hl sym">,</span> three<span class="hl sym">)</span>
        z <span class="hl sym">=</span> <span class="hl kwd">comp</span><span class="hl sym">((</span>ten<span class="hl sym">,</span> mten <span class="hl sym">*</span> y<span class="hl sym">,</span> zero<span class="hl sym">,</span> one<span class="hl sym">),</span> z<span class="hl sym">)</span>
        <span class="hl kwa">yield</span> <span class="hl kwb">str</span><span class="hl sym">(</span>y<span class="hl sym">)</span>


<span class="hl kwa">def</span> <span class="hl kwd">main</span><span class="hl sym">(</span>n<span class="hl sym">,</span> digits<span class="hl sym">=</span><span class="hl kwd">pi_digits</span><span class="hl sym">(),</span> width<span class="hl sym">=</span><span class="hl num">10</span><span class="hl sym">,</span> line<span class="hl sym">=</span><span class="hl str">'{}</span><span class="hl esc">\t</span><span class="hl str">:{}'</span><span class="hl sym">):</span>

    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl sym">(</span>width<span class="hl sym">,</span> n<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span> width<span class="hl sym">):</span>
        <span class="hl kwa">print</span><span class="hl sym">(</span>line<span class="hl sym">.</span><span class="hl kwd">format</span><span class="hl sym">(</span><span class="hl str">''</span><span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl kwd">islice</span><span class="hl sym">(</span>digits<span class="hl sym">,</span> width<span class="hl sym">)),</span> i<span class="hl sym">))</span>
    <span class="hl kwa">if</span> n <span class="hl sym">%</span> width <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">:</span>
        <span class="hl kwa">print</span><span class="hl sym">(</span>line<span class="hl sym">.</span><span class="hl kwd">format</span><span class="hl sym">(</span><span class="hl str">''</span><span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl kwd">islice</span><span class="hl sym">(</span>digits<span class="hl sym">,</span> n <span class="hl sym">%</span> width<span class="hl sym">)).</span><span class="hl kwd">ljust</span><span class="hl sym">(</span>width<span class="hl sym">),</span> n<span class="hl sym">))</span>


<span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]))</span>
