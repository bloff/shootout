<source>
<def></def><com>/* The Computer Language Benchmarks Game</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com></com><br />
<com>   Contributed by Vincent Kraeutler</com><br />
<com>*/</com><def></def><br />
<br />
<kwa>import</kwa> <def>scala</def><sym>.</sym><def>actors</def><sym>.</sym><def>Actor</def><br />
<kwa>import</kwa> <def>scala</def><sym>.</sym><def>actors</def><sym>.</sym><def>Actor</def><sym>.</sym><def>_</def><br />
<kwa>import</kwa> <def>scala</def><sym>.</sym><def>actors</def><sym>.</sym><def>Exit</def><br />
<br />
<kwa>object</kwa> <def>chameneosredux</def> <sym>{</sym><br />
<def></def><br />
    <kwa>case object</kwa> <def></def><kwc>Color</kwc> <def></def><kwa>extends</kwa> <def></def><kwc>Enumeration</kwc> <def></def><sym>{</sym>  <def></def><kwa>val</kwa> <def>Blue</def><sym>,</sym> <def>Red</def><sym>,</sym> <def>Yellow</def> <sym>=</sym> <def>Value</def> <sym>}</sym><br />
<def></def><br />
    <slc>// the input sets of creatures defined by the benchmark</slc><br />
<def></def>    <kwa>val</kwa> <def>firstCreatures</def> <sym>=</sym> <def></def><kwc>List</kwc><def></def><sym>(</sym><def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def><sym>)</sym><br />
<def></def>    <kwa>val</kwa> <def>secondCreatures</def> <sym>=</sym> <def></def><kwc>List</kwc><def></def><sym>(</sym><def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><sym>,</sym><br />
<def></def>            <kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def><sym>)</sym><br />
<def></def><br />
    <kwa>def</kwa> <def>complement</def><sym>(</sym><def>a</def><sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>,</sym> <def>b</def><sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>) :</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def> <sym>= {</sym><br />
<def></def>        <slc>// the complement of two identical colors is defined to be that color</slc><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(</sym><def>a</def> <sym>==</sym> <def>b</def><sym>)</sym> <def>a</def><br />
        <kwa>else if</kwa> <def></def><sym>(</sym><def>a</def> <sym>&gt;</sym> <def>b</def><sym>)</sym> <def>complement</def><sym>(</sym><def>b</def><sym>,</sym> <def>a</def><sym>)</sym><br />
<def></def>        <kwa>else</kwa> <def></def><sym>{</sym><br />
<def>            Pair</def><sym>(</sym><def>a</def><sym>,</sym> <def>b</def><sym>)</sym> <def>match</def> <sym>{</sym><br />
<def></def>                <kwa>case</kwa> <def>Pair</def><sym>(</sym><def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><sym>) =&gt;</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def><br />
                <kwa>case</kwa> <def>Pair</def><sym>(</sym><def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def><sym>) =&gt;</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><br />
                <kwa>case</kwa> <def>Pair</def><sym>(</sym><def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def><sym>) =&gt;</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def><br />
                <sym>}</sym><br />
<def></def>        <sym>}</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
    <kwa>def</kwa> <def>creature</def><sym>(</sym><def>id</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>initialColor</def> <sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>,</sym> <def>meetingPlace</def> <sym>:</sym> <def>Actor</def><sym>) =</sym> <def>actor</def> <sym>{</sym><br />
<def><br />
        self</def><sym>.</sym><def>trapExit</def> <sym>=</sym> <def>true<br />
        self</def><sym>.</sym><def>link</def><sym>(</sym><def>meetingPlace</def><sym>)</sym><br />
<def></def><br />
        <kwa>def</kwa> <def>compareIds</def><sym>(</sym><def>ido</def><sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) :</sym> <def></def><kwb>int</kwb> <def></def><sym>= {</sym> <def></def><kwa>if</kwa> <def></def><sym>(</sym><def>id</def> <sym>==</sym> <def>ido</def><sym>)</sym> <def></def><num>1</num> <def></def><kwa>else</kwa> <def></def><num>0</num> <def></def><sym>}</sym><br />
<def></def><br />
        <kwa>def</kwa> <def>visit</def><sym>(</sym><def>color</def> <sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>,</sym> <def>nMeetings</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>nMetSelf</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) {</sym><br />
<def></def><br />
            <slc>// go for a visit</slc><br />
<def>            meetingPlace</def> <sym>!</sym> <def>Triple</def><sym>(</sym><def>self</def><sym>,</sym> <def>color</def><sym>,</sym> <def>id</def><sym>)</sym><br />
<def></def><br />
            <slc>// then handle the response</slc><br />
<def>            react</def> <sym>{</sym><br />
<def></def>                <kwa>case</kwa> <def>Pair</def><sym>(</sym><def>c</def> <sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>,</sym> <def>ido</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) =&gt; {</sym><br />
<def>                    visit</def><sym>(</sym><def>c</def><sym>,</sym> <def>nMeetings</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>nMetSelf</def> <sym>+</sym> <def>compareIds</def><sym>(</sym><def>ido</def><sym>))</sym><br />
<def></def>                <sym>}</sym><br />
<def></def>                <kwa>case</kwa> <def>Exit</def><sym>(</sym><def>a</def><sym>,</sym> <def>b</def><sym>) =&gt; {</sym><br />
<def></def>                    <slc>// meeting place has exited, report final status</slc><br />
<def>                    exit</def><sym>(</sym><def>Pair</def><sym>(</sym><def>nMeetings</def><sym>,</sym> <def>nMetSelf</def><sym>))</sym><br />
<def></def>                <sym>}</sym><br />
<def></def>            <sym>}</sym><br />
<def></def>        <sym>}</sym><br />
<def><br />
        visit</def><sym>(</sym><def>initialColor</def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>)</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
<br />
    <kwa>def</kwa> <def>meetingPlace</def><sym>(</sym><def>nMaxMatch</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) =</sym> <def>actor</def> <sym>{</sym><br />
<def></def><br />
        <kwa>type</kwa> <def>Visit</def> <sym>=</sym> <def>Triple</def><sym>[</sym><def>Actor</def><sym>,</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>,</sym> <def></def><kwb>int</kwb><def></def><sym>]</sym><br />
<def></def><br />
        <kwa>def</kwa> <def>makeMatch</def><sym>(</sym><def>first</def> <sym>:</sym> <def>Visit</def><sym>,</sym> <def>second</def> <sym>:</sym> <def>Visit</def><sym>) {</sym><br />
<def></def>            <kwa>val</kwa> <def>cc</def> <sym>=</sym> <def>complement</def><sym>(</sym><def>first</def><sym>.</sym><def>_2</def><sym>,</sym> <def>second</def><sym>.</sym><def>_2</def><sym>)</sym><br />
<def>            first</def><sym>.</sym><def>_1</def> <sym>!</sym> <def>Pair</def><sym>(</sym><def>cc</def><sym>,</sym> <def>second</def><sym>.</sym><def>_3</def><sym>)</sym><br />
<def>            second</def><sym>.</sym><def>_1</def> <sym>!</sym> <def>Pair</def><sym>(</sym><def>cc</def><sym>,</sym> <def>first</def><sym>.</sym><def>_3</def><sym>)</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <kwa>def</kwa> <def>waitForTwoCreatures</def><sym>(</sym><def>n</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) {</sym><br />
<def>            react</def> <sym>{</sym><br />
<def></def>                <kwa>case</kwa> <def></def><sym>(</sym><def>first</def> <sym>:</sym> <def>Visit</def><sym>) =&gt; {</sym><br />
<def>                    react</def> <sym>{</sym><br />
<def></def>                        <kwa>case</kwa> <def></def><sym>(</sym><def>second</def> <sym>:</sym> <def>Visit</def><sym>) =&gt; {</sym><br />
<def>                            makeMatch</def><sym>(</sym><def>first</def><sym>,</sym> <def>second</def><sym>)</sym><br />
<def></def>                            <kwa>if</kwa> <def></def><sym>(</sym><def></def><num>0</num> <def></def><sym>==</sym> <def>n</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>)</sym> <def>exit</def><br />
                            <kwa>else</kwa> <def>waitForTwoCreatures</def><sym>(</sym><def>n</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>                            <sym>}}}}}</sym><br />
<def><br />
        waitForTwoCreatures</def><sym>(</sym><def>nMaxMatch</def><sym>)</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
    <kwa>def</kwa> <def>chameneosredux</def><sym>(</sym><def>nMeetings</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) =</sym> <def>actor</def> <sym>{</sym><br />
<def><br />
        self</def><sym>.</sym><def>trapExit</def> <sym>=</sym> <def>true</def><br />
<br />
        <kwa>def</kwa> <def>spellNumber</def><sym>(</sym><def>n</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) :</sym> <def></def><kwc>String</kwc> <def></def><sym>= {</sym><br />
<def></def>            <kwa>val</kwa> <def>numbers</def> <sym>=</sym> <def></def><kwc>Array</kwc><def></def><sym>(</sym><def></def><str>&quot;zero&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;one&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;two&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;three&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;four&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;five&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;six&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;seven&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;eight&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;nine&quot;</str><def></def><sym>)</sym><br />
<def></def><br />
            <kwa>def</kwa> <def>spellDigits</def><sym>(</sym><def>m</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) :</sym> <def></def><kwc>String</kwc> <def></def><sym>= {</sym><br />
<def></def>                <kwa>if</kwa> <def></def><sym>(</sym><def>m</def> <sym>&lt;</sym> <def></def><num>10</num><def></def><sym>) {</sym><br />
<def>                    numbers</def><sym>(</sym><def>m</def> <sym>%</sym> <def></def><num>10</num><def></def><sym>)</sym><br />
<def></def>                <sym>}</sym> <def></def><kwa>else</kwa> <def></def><sym>{</sym><br />
<def>                    spellDigits</def><sym>(</sym><def>m</def> <sym>/</sym> <def></def><num>10</num><def></def><sym>) +</sym> <def></def><str>&quot; &quot;</str><def></def> <sym>+</sym> <def>numbers</def><sym>(</sym><def>m</def> <sym>%</sym> <def></def><num>10</num><def></def><sym>)</sym><br />
<def></def>                <sym>}</sym><br />
<def></def>            <sym>}</sym><br />
<def><br />
            spellDigits</def><sym>(</sym><def>n</def><sym>)</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <kwa>def</kwa> <def>collect</def><sym>(</sym><def>nCreatures</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>total</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) :</sym> <def></def><kwc>String</kwc> <def></def><sym>= {</sym><br />
<def></def>            <kwa>if</kwa> <def></def><sym>(</sym><def></def><num>0</num> <def></def><sym>==</sym> <def>nCreatures</def><sym>)</sym> <def>spellNumber</def><sym>(</sym><def>total</def><sym>)</sym><br />
<def></def>            <kwa>else</kwa> <def></def><sym>{</sym><br />
<def>                receive</def> <sym>{</sym> <def></def><slc>// wait for all creatures to exit</slc><br />
<def></def>                    <kwa>case</kwa> <def>Exit</def><sym>(</sym><def>a</def><sym>,</sym> <def>Pair</def><sym>(</sym><def>n</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>,</sym> <def>m</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>)) =&gt; {</sym><br />
<def>                        println</def><sym>(</sym><def>n</def> <sym>+</sym> <def></def><str>&quot; &quot;</str><def></def> <sym>+</sym> <def>spellNumber</def><sym>(</sym><def>m</def><sym>))</sym><br />
<def>                        collect</def><sym>(</sym><def>nCreatures</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>total</def> <sym>+</sym> <def>n</def><sym>)</sym><br />
<def></def>                    <sym>}}}}</sym><br />
<def></def><br />
        <kwa>def</kwa> <def>go</def><sym>(</sym><def>maxMeetings</def> <sym>:</sym> <def></def><kwb>int</kwb><def></def><sym>) {</sym><br />
<def></def>            <kwa>val</kwa> <def>s</def> <sym>=</sym> <def>meetingPlace</def><sym>(</sym><def>maxMeetings</def><sym>)</sym><br />
<def></def><br />
            <kwa>def</kwa> <def>launch</def><sym>(</sym><def>colors</def> <sym>:</sym> <def></def><kwc>List</kwc><def></def><sym>[</sym><def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>]) {</sym><br />
<def>                println</def> <sym>((</sym><def>colors map showColor</def><sym>)</sym> <def>mkString</def><sym>(</sym><def></def><str>&quot; &quot;</str><def></def><sym>,</sym> <def></def><str>&quot; &quot;</str><def></def><sym>,</sym> <def></def><str>&quot;&quot;</str><def></def><sym>))</sym><br />
<def></def>                <kwa>for</kwa> <def></def><sym>{ (</sym><def>color</def><sym>,</sym> <def>id</def><sym>) &lt;-</sym> <def>colors</def><sym>.</sym><def>zipWithIndex</def> <sym>}</sym> <def></def><kwa>yield</kwa> <def></def><sym>{</sym><br />
<def>                    self</def><sym>.</sym><def>link</def><sym>(</sym><def>creature</def><sym>(</sym><def>id</def><sym>,</sym> <def>color</def><sym>,</sym> <def>s</def><sym>))</sym><br />
<def></def>                    <sym>}}</sym><br />
<def><br />
            receive</def> <sym>{</sym><br />
<def></def>                <kwa>case</kwa> <def>colors</def> <sym>:</sym> <def></def><kwc>List</kwc><def></def><sym>[</sym><def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>] =&gt; {</sym><br />
<def>                    launch</def><sym>(</sym><def>colors</def><sym>)</sym><br />
<def>                    println</def><sym>(</sym><def></def><str>&quot; &quot;</str><def></def> <sym>+</sym> <def>collect</def><sym>(</sym><def>colors</def><sym>.</sym><def>length</def><sym>,</sym> <def></def><num>0</num><def></def><sym>))</sym><br />
<def>                    println</def><sym>(</sym><def></def><str>&quot;&quot;</str><def></def><sym>)</sym><br />
<def>                    sender</def> <sym>!</sym> <def></def><num>0</num><br />
<def></def>                <sym>}}}</sym><br />
<def><br />
        go</def><sym>(</sym><def>nMeetings</def><sym>)</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
<br />
    <kwa>def</kwa> <def>showColor</def><sym>(</sym><def>c</def> <sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>) = {</sym><br />
<def>        c match</def> <sym>{</sym><br />
<def></def>            <kwa>case</kwa> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Red</def> <sym>=&gt;</sym> <def></def><str>&quot;red&quot;</str><def></def><br />
            <kwa>case</kwa> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Yellow</def> <sym>=&gt;</sym> <def></def><str>&quot;yellow&quot;</str><def></def><br />
            <kwa>case</kwa> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Blue</def> <sym>=&gt;</sym> <def></def><str>&quot;blue&quot;</str><def></def><br />
    <sym>}}</sym><br />
<def></def><br />
    <kwa>def</kwa> <def>showComplements</def><sym>() {</sym><br />
<def></def><br />
        <kwa>def</kwa> <def>showComplement</def><sym>(</sym><def>a</def> <sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>,</sym> <def>b</def> <sym>:</sym> <def></def><kwc>Color</kwc><def></def><sym>.</sym><def>Value</def><sym>) {</sym><br />
<def>            println</def><sym>(</sym><def>showColor</def><sym>(</sym><def>a</def><sym>)  +</sym> <def></def><str>&quot; + &quot;</str><def></def>  <sym>+</sym> <def>showColor</def><sym>(</sym><def>b</def><sym>) +</sym> <def></def><str>&quot; -&gt; &quot;</str><def></def> <sym>+</sym> <def>showColor</def><sym>(</sym><def>complement</def><sym>(</sym><def>a</def><sym>,</sym> <def>b</def><sym>)))</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <kwc>Color</kwc><def></def><sym>.</sym><def>elements</def><sym>.</sym><def>foreach</def><sym>{</sym> <def>a</def> <sym>=&gt;</sym><br />
<def></def>            <kwc>Color</kwc><def></def><sym>.</sym><def>elements</def><sym>.</sym><def>foreach</def><sym>{</sym> <def>b</def> <sym>=&gt;</sym><br />
<def>                showComplement</def><sym>(</sym><def>a</def><sym>,</sym> <def>b</def><sym>) }}</sym><br />
<def><br />
        println</def><sym>(</sym><def></def><str>&quot;&quot;</str><def></def><sym>)</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
    <kwa>def</kwa> <def>main</def><sym>(</sym><def>args</def> <sym>:</sym> <def></def><kwc>Array</kwc><def></def><sym>[</sym><def></def><kwc>String</kwc><def></def><sym>]) :</sym> <def>Unit</def> <sym>= {</sym><br />
<def>        showComplements</def><br />
        <kwa>val</kwa> <def>nMeetings</def> <sym>=</sym> <def></def><kwc>Integer</kwc><def></def><sym>.</sym><def>parseInt</def><sym>(</sym><def>args</def><sym>(</sym><def></def><num>0</num><def></def><sym>))</sym><br />
<def>        chameneosredux</def><sym>(</sym><def>nMeetings</def><sym>) !</sym><def>? firstCreatures<br />
        chameneosredux</def><sym>(</sym><def>nMeetings</def><sym>) !</sym><def>? secondCreatures</def><br />
    <sym>}</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
