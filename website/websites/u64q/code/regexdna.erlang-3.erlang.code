<source>
<def></def><slc>% The Computer Language Benchmarks Game</slc><br />
<def></def><slc>% http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>% Contributed by: Sergei Matusevich 2007</slc><br />
<def></def><br />
<sym>-</sym><def></def><kwa>module</kwa><def></def><sym>(</sym><def>regexdna</def><sym>).</sym><br />
<def></def><br />
<sym>-</sym><def></def><kwa>export</kwa><def></def><sym>([</sym><def>main</def><sym>/</sym><def></def><num>1</num><def></def><sym>]).</sym><br />
<def></def><br />
<sym>-</sym><def></def><kwa>define</kwa><def></def><sym>(</sym> <def>VARIANTS</def><sym>,</sym><br />
<def></def>  <sym>[</sym> <def></def><str>&quot;agggtaaa|tttaccct&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;a[act]ggtaaa|tttacc[agt]t&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;ag[act]gtaaa|tttac[agt]ct&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;agg[act]taaa|ttta[agt]cct&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;agggt[cgt]aa|tt[acg]accct&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;agggta[cgt]a|t[acg]taccct&quot;</str><def></def><sym>,</sym><br />
<def></def>    <str>&quot;agggtaa[cgt]|[acg]ttaccct&quot;</str><def></def> <sym>] ).</sym><br />
<def></def><br />
<kwd>read_lines</kwd><def></def><sym>(</sym><def>File</def><sym>,</sym> <def>SzTotal</def><sym>, [</sym><def>Seg</def><sym>|</sym><def>Segz</def><sym>]) -&gt;</sym><br />
<def></def>  <kwa>case</kwa> <def>io</def><sym>:</sym><def></def><kwd>get_line</kwd><def></def><sym>(</sym><def>File</def><sym>,</sym> <def></def><str>''</str><def></def><sym>)</sym> <def></def><kwa>of</kwa><br />
<def>    eof</def> <sym>-&gt; {</sym><def>SzTotal</def><sym>, [</sym><def>Seg</def><sym>|</sym><def>Segz</def><sym>]};</sym><br />
<def>    Str</def> <sym>-&gt;</sym><br />
<def>      Len</def> <sym>=</sym> <def></def><kwb>size</kwb><def></def><sym>(</sym><def>Str</def><sym>),</sym><br />
<def>      Eol</def> <sym>=</sym> <def>Len</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym><br />
<def></def>      <kwd>read_lines</kwd><def></def><sym>(</sym> <def>File</def><sym>,</sym> <def>SzTotal</def> <sym>+</sym> <def>Len</def><sym>,</sym><br />
<def></def>        <kwa>case</kwa> <def>Str</def> <kwa>of</kwa><br />
<def></def>          <sym>&lt;&lt;</sym><def></def><str>&quot;&gt;&quot;</str><def></def><sym>,</sym><def>_</def><sym>/</sym><def></def><kwb>binary</kwb><def></def><sym>&gt;&gt;         -&gt;     [[],</sym><def>Seg</def><sym>|</sym><def>Segz</def><sym>];</sym><br />
<def></def>          <sym>&lt;&lt;</sym><def>Trim</def><sym>:</sym><def>Eol</def><sym>/</sym><def></def><kwb>binary</kwb><def></def><sym>,</sym><def></def><str>&quot;</str><esc>\</esc><str>n&quot;</str><def></def><sym>&gt;&gt; -&gt; [[</sym><def>Trim</def><sym>|</sym><def>Seg</def><sym>]|</sym><def>Segz</def><sym>];</sym><br />
<def>          _</def>                        <sym>-&gt;  [[</sym><def>Str</def><sym>|</sym><def>Seg</def><sym>]|</sym><def>Segz</def><sym>]</sym><br />
<def></def>        <kwa>end</kwa> <def></def><sym>)</sym><br />
<def></def>  <kwa>end</kwa><def></def><sym>.</sym><br />
<def></def><br />
<kwd>main</kwd><def></def><sym>(</sym><def>_</def><sym>) -&gt;</sym><br />
<def>  io</def><sym>:</sym><def></def><kwd>setopts</kwd><def></def><sym>(</sym><def>standard_io</def><sym>, [</sym><def></def><kwb>binary</kwb><def></def><sym>]),</sym><br />
<def></def>  <sym>{</sym><def>SzTotal</def><sym>, [</sym><def>S3Raw</def><sym>,</sym><def>S2Raw</def><sym>,</sym><def>S1Raw</def><sym>|</sym><def>_</def><sym>]} =</sym> <def></def><kwd>read_lines</kwd><def></def><sym>(</sym><def>standard_io</def><sym>,</sym> <def></def><num>0</num><def></def><sym>, [[]]),</sym><br />
<def>  B1</def> <sym>=</sym> <def></def><kwb>list_to_binary</kwb><def></def><sym>(</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>(</sym><def>S1Raw</def><sym>)),</sym><br />
<def>  B2</def> <sym>=</sym> <def></def><kwb>list_to_binary</kwb><def></def><sym>(</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>(</sym><def>S2Raw</def><sym>)),</sym><br />
<def>  B3</def> <sym>=</sym> <def></def><kwb>list_to_binary</kwb><def></def><sym>(</sym><def>lists</def><sym>:</sym><def></def><kwd>reverse</kwd><def></def><sym>(</sym><def>S3Raw</def><sym>)),</sym><br />
<def>  S2</def> <sym>=</sym> <def></def><kwb>binary_to_list</kwb><def></def><sym>(</sym><def>B2</def><sym>),</sym><br />
<def>  S3</def> <sym>=</sym> <def></def><kwb>binary_to_list</kwb><def></def><sym>(</sym><def>B3</def><sym>),</sym><br />
<def>  L2</def>  <sym>=</sym> <def></def><kwb>size</kwb><def></def><sym>(</sym><def>B2</def><sym>),</sym><br />
<def>  L13</def> <sym>=</sym> <def></def><kwb>size</kwb><def></def><sym>(</sym><def>B1</def><sym>) +</sym> <def></def><kwb>size</kwb><def></def><sym>(</sym><def>B3</def><sym>),</sym><br />
<def>  lists</def><sym>:</sym><def></def><kwd>foreach</kwd><def></def><sym>(</sym><br />
<def></def>    <kwa>fun</kwa><def></def><sym>(</sym><def>Re</def><sym>) -&gt;</sym><br />
<def></def>      <sym>{</sym><def>match</def><sym>,</sym> <def>M2</def><sym>} =</sym> <def>regexp</def><sym>:</sym><def></def><kwd>matches</kwd><def></def><sym>(</sym><def>S2</def><sym>,</sym> <def>Re</def><sym>),</sym><br />
<def></def>      <sym>{</sym><def>match</def><sym>,</sym> <def>M3</def><sym>} =</sym> <def>regexp</def><sym>:</sym><def></def><kwd>matches</kwd><def></def><sym>(</sym><def>S3</def><sym>,</sym> <def>Re</def><sym>),</sym><br />
<def>      io</def><sym>:</sym><def></def><kwd>format</kwd><def></def><sym>(</sym><def></def><str>&quot;~s ~w~n&quot;</str><def></def><sym>, [</sym><def>Re</def><sym>,</sym> <def></def><kwb>length</kwb><def></def><sym>(</sym><def>M2</def><sym>) +</sym> <def></def><kwb>length</kwb><def></def><sym>(</sym><def>M3</def><sym>)])</sym><br />
<def></def>    <kwa>end</kwa><def></def><sym>, ?</sym><def>VARIANTS</def> <sym>),</sym><br />
<def>  L2Subst</def> <sym>=</sym> <def></def><kwb>length</kwb><def></def><sym>(</sym> <def>lists</def><sym>:</sym><def></def><kwd>flatmap</kwd><def></def><sym>(</sym><br />
<def></def>    <kwa>fun</kwa><def></def><sym>(</sym><def>Ch</def><sym>) -&gt;</sym><br />
<def></def>      <kwa>case</kwa> <def>Ch</def> <kwa>of</kwa><br />
<def>        $B</def> <sym>-&gt;</sym> <def></def><str>&quot;(c|g|t)&quot;</str><def></def><sym>;</sym><br />
<def>        $D</def> <sym>-&gt;</sym> <def></def><str>&quot;(a|g|t)&quot;</str><def></def><sym>;</sym><br />
<def>        $H</def> <sym>-&gt;</sym> <def></def><str>&quot;(a|c|t)&quot;</str><def></def><sym>;</sym><br />
<def>        $K</def> <sym>-&gt;</sym> <def></def><str>&quot;(g|t)&quot;</str><def></def><sym>;</sym><br />
<def>        $M</def> <sym>-&gt;</sym> <def></def><str>&quot;(a|c)&quot;</str><def></def><sym>;</sym><br />
<def>        $N</def> <sym>-&gt;</sym> <def></def><str>&quot;(a|c|g|t)&quot;</str><def></def><sym>;</sym><br />
<def>        $R</def> <sym>-&gt;</sym> <def></def><str>&quot;(a|g)&quot;</str><def></def><sym>;</sym><br />
<def>        $S</def> <sym>-&gt;</sym> <def></def><str>&quot;(c|g)&quot;</str><def></def><sym>;</sym><br />
<def>        $V</def> <sym>-&gt;</sym> <def></def><str>&quot;(a|c|g)&quot;</str><def></def><sym>;</sym><br />
<def>        $W</def> <sym>-&gt;</sym> <def></def><str>&quot;(a|t)&quot;</str><def></def><sym>;</sym><br />
<def>        $Y</def> <sym>-&gt;</sym> <def></def><str>&quot;(c|t)&quot;</str><def></def><sym>;</sym><br />
<def>        XX</def> <sym>-&gt; [</sym><def>XX</def><sym>]</sym><br />
<def></def>      <kwa>end</kwa><br />
<def></def>    <kwa>end</kwa><def></def><sym>,</sym> <def>S2</def> <sym>) ),</sym><br />
<def>  io</def><sym>:</sym><def></def><kwd>format</kwd><def></def><sym>(</sym><def></def><str>&quot;~n~w~n~w~n~w~n&quot;</str><def></def><sym>, [</sym><def>SzTotal</def><sym>,</sym> <def>L13</def> <sym>+</sym> <def>L2</def><sym>,</sym> <def>L13</def> <sym>+</sym> <def>L2Subst</def><sym>]),</sym><br />
<def></def>  <kwb>halt</kwb><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>).</sym><br />
<def></def><br />
</source>
