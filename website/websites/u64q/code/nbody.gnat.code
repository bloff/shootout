<source>
<def></def><slc>-- The Great Computer Language Shootout</slc><br />
<def></def><slc>-- http://shootout.alioth.debian.org</slc><br />
<def></def><slc>--</slc><br />
<def></def><slc>-- Contributed by Pascal Obry on 2005/03/21</slc><br />
<def></def><br />
<kwa>with</kwa> <def>Ada.Numerics</def><sym>;</sym> <def></def><kwa>use</kwa> <def>Ada.Numerics</def><sym>;</sym><br />
<def></def><kwa>with</kwa> <def>Ada.Numerics.Generic_Elementary_Functions</def><sym>;</sym><br />
<def></def><br />
<kwa>package</kwa> <def>Nbody_Pck</def> <kwa>is</kwa><br />
<def></def><br />
   <kwa>type</kwa> <def>Real</def> <kwa>is Digits</kwa> <def></def><num>15</num><def></def><sym>;</sym><br />
<def></def><br />
   <kwa>package</kwa> <def>Math</def> <kwa>is new</kwa> <def>Ada.Numerics.Generic_Elementary_Functions</def> <sym>(</sym><def>Real</def><sym>);</sym><br />
<def><br />
   Solar_Mass</def>    <sym>:</sym> <def></def><kwa>constant</kwa> <def>Real</def> <sym>:=</sym> <def></def><num>4.0</num> <def></def><sym>*</sym> <def>Pi</def> <sym>*</sym> <def>Pi</def><sym>;</sym><br />
<def>   Days_Per_Year</def> <sym>:</sym> <def></def><kwa>constant</kwa> <def>Real</def> <sym>:=</sym> <def></def><num>365.24</num><def></def><sym>;</sym><br />
<def></def><br />
   <kwa>type</kwa> <def>Data</def> <kwa>is record</kwa><br />
<def>      X</def><sym>,</sym> <def>Y</def><sym>,</sym> <def>Z</def>    <sym>:</sym> <def>Real</def><sym>;</sym><br />
<def>      Vx</def><sym>,</sym> <def>Vy</def><sym>,</sym> <def>Vz</def> <sym>:</sym> <def>Real</def><sym>;</sym><br />
<def>      Mass</def>       <sym>:</sym> <def>Real</def><sym>;</sym><br />
<def></def>   <kwa>end record</kwa><def></def><sym>;</sym><br />
<def></def><br />
   <kwa>type</kwa> <def>Body_Name</def> <kwa>is</kwa> <def></def><sym>(</sym><def>Sun</def><sym>,</sym> <def>Jupiter</def><sym>,</sym> <def>Saturn</def><sym>,</sym> <def>Uranus</def><sym>,</sym> <def>Neptune</def><sym>);</sym><br />
<def><br />
   Bodies</def> <sym>:</sym> <def></def><kwa>array</kwa> <def></def><sym>(</sym><def>Body_Name</def><sym>)</sym> <def></def><kwa>of</kwa> <def>Data</def> <sym>:=</sym><br />
<def></def>              <sym>(</sym><def>Jupiter</def> <sym>=&gt; (</sym><def>X</def>    <sym>=&gt;</sym> <def></def><num>4.84143144246472090e+00</num><def></def><sym>,</sym><br />
<def>                           Y</def>    <sym>=&gt; -</sym><def></def><num>1.16032004402742839e+00</num><def></def><sym>,</sym><br />
<def>                           Z</def>    <sym>=&gt; -</sym><def></def><num>1.03622044471123109e-01</num><def></def><sym>,</sym><br />
<def>                           Vx</def>   <sym>=&gt;</sym> <def></def><num>1.66007664274403694e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vy</def>   <sym>=&gt;</sym> <def></def><num>7.69901118419740425e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vz</def>   <sym>=&gt; -</sym><def></def><num>6.90460016972063023e-05</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Mass</def> <sym>=&gt;</sym> <def></def><num>9.54791938424326609e-04</num> <def></def><sym>*</sym> <def>Solar_Mass</def><sym>),</sym><br />
<def><br />
               Saturn</def>  <sym>=&gt; (</sym><def>X</def>    <sym>=&gt;</sym> <def></def><num>8.34336671824457987e+00</num><def></def><sym>,</sym><br />
<def>                           Y</def>    <sym>=&gt;</sym> <def></def><num>4.12479856412430479e+00</num><def></def><sym>,</sym><br />
<def>                           Z</def>    <sym>=&gt; -</sym><def></def><num>4.03523417114321381e-01</num><def></def><sym>,</sym><br />
<def>                           Vx</def>   <sym>=&gt; -</sym><def></def><num>2.76742510726862411e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vy</def>   <sym>=&gt;</sym> <def></def><num>4.99852801234917238e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vz</def>   <sym>=&gt;</sym> <def></def><num>2.30417297573763929e-05</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Mass</def> <sym>=&gt;</sym> <def></def><num>2.85885980666130812e-04</num> <def></def><sym>*</sym> <def>Solar_Mass</def><sym>),</sym><br />
<def><br />
               Uranus</def>  <sym>=&gt; (</sym><def>X</def>    <sym>=&gt;</sym> <def></def><num>1.28943695621391310e+01</num><def></def><sym>,</sym><br />
<def>                           y</def>    <sym>=&gt; -</sym><def></def><num>1.51111514016986312e+01</num><def></def><sym>,</sym><br />
<def>                           Z</def>    <sym>=&gt; -</sym><def></def><num>2.23307578892655734e-01</num><def></def><sym>,</sym><br />
<def>                           Vx</def>   <sym>=&gt;</sym> <def></def><num>2.96460137564761618e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vy</def>   <sym>=&gt;</sym> <def></def><num>2.37847173959480950e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vz</def>   <sym>=&gt; -</sym><def></def><num>2.96589568540237556e-05</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Mass</def> <sym>=&gt;</sym> <def></def><num>4.36624404335156298e-05</num> <def></def><sym>*</sym> <def>Solar_Mass</def><sym>),</sym><br />
<def><br />
               Neptune</def> <sym>=&gt; (</sym><def>X</def>    <sym>=&gt;</sym> <def></def><num>1.53796971148509165e+01</num><def></def><sym>,</sym><br />
<def>                           Y</def>    <sym>=&gt; -</sym><def></def><num>2.59193146099879641e+01</num><def></def><sym>,</sym><br />
<def>                           Z</def>    <sym>=&gt;</sym> <def></def><num>1.79258772950371181e-01</num><def></def><sym>,</sym><br />
<def>                           Vx</def>   <sym>=&gt;</sym> <def></def><num>2.68067772490389322e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vy</def>   <sym>=&gt;</sym> <def></def><num>1.62824170038242295e-03</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Vz</def>   <sym>=&gt; -</sym><def></def><num>9.51592254519715870e-05</num> <def></def><sym>*</sym> <def>Days_Per_Year</def><sym>,</sym><br />
<def>                           Mass</def> <sym>=&gt;</sym> <def></def><num>5.15138902046611451e-05</num> <def></def><sym>*</sym> <def>Solar_Mass</def><sym>),</sym><br />
<def><br />
               Sun</def>     <sym>=&gt; (</sym><def>X</def>    <sym>=&gt;</sym> <def></def><num>0.0</num><def></def><sym>,</sym><br />
<def>                           Y</def>    <sym>=&gt;</sym> <def></def><num>0.0</num><def></def><sym>,</sym><br />
<def>                           Z</def>    <sym>=&gt;</sym> <def></def><num>0.0</num><def></def><sym>,</sym><br />
<def>                           Vx</def>   <sym>=&gt;</sym> <def></def><num>0.0</num><def></def><sym>,</sym><br />
<def>                           Vy</def>   <sym>=&gt;</sym> <def></def><num>0.0</num><def></def><sym>,</sym><br />
<def>                           Vz</def>   <sym>=&gt;</sym> <def></def><num>0.0</num><def></def><sym>,</sym><br />
<def>                           Mass</def> <sym>=&gt;</sym> <def>Solar_Mass</def><sym>));</sym><br />
<def></def><br />
   <kwa>procedure</kwa> <def>Offset_Momentum</def><br />
     <sym>(</sym><def>Planet</def>     <sym>:</sym> <def></def><kwa>in out</kwa> <def>Data</def><sym>;</sym><br />
<def>      Px</def><sym>,</sym> <def>Py</def><sym>,</sym> <def>Pz</def> <sym>:</sym> <def></def><kwa>in</kwa>     <def>Real</def><sym>);</sym><br />
<def></def><br />
   <kwa>function</kwa> <def>Energy</def> <kwa>return</kwa> <def>Real</def><sym>;</sym><br />
<def></def><br />
   <kwa>procedure</kwa> <def>Advance</def> <sym>(</sym><def>Dt</def> <sym>:</sym> <def></def><kwa>in</kwa> <def>Real</def><sym>);</sym><br />
<def></def><br />
<kwa>end</kwa> <def>Nbody_Pck</def><sym>;</sym><br />
<def></def><br />
<slc>-- The Great Computer Language Shootout</slc><br />
<def></def><slc>-- http://shootout.alioth.debian.org</slc><br />
<def></def><slc>--</slc><br />
<def></def><slc>-- Contributed by Pascal Obry on 2005/03/21</slc><br />
<def></def><br />
<kwa>package body</kwa> <def>Nbody_Pck</def> <kwa>is</kwa><br />
<def></def><br />
   <kwa>procedure</kwa> <def>Offset_Momentum</def><br />
     <sym>(</sym><def>Planet</def>     <sym>:</sym> <def></def><kwa>in out</kwa> <def>Data</def><sym>;</sym><br />
<def>      Px</def><sym>,</sym> <def>Py</def><sym>,</sym> <def>Pz</def> <sym>:</sym> <def></def><kwa>in</kwa>     <def>Real</def><sym>)</sym> <def></def><kwa>is</kwa><br />
<def></def>   <kwa>begin</kwa><br />
<def>      Planet.Vx</def> <sym>:= -</sym><def>Px</def> <sym>/</sym> <def>Solar_Mass</def><sym>;</sym><br />
<def>      Planet.Vy</def> <sym>:= -</sym><def>Py</def> <sym>/</sym> <def>Solar_Mass</def><sym>;</sym><br />
<def>      Planet.Vz</def> <sym>:= -</sym><def>Pz</def> <sym>/</sym> <def>Solar_Mass</def><sym>;</sym><br />
<def></def>   <kwa>end</kwa> <def>Offset_Momentum</def><sym>;</sym><br />
<def></def><br />
   <kwa>function</kwa> <def>Energy</def> <kwa>return</kwa> <def>Real</def> <kwa>is</kwa><br />
<def>      Dx</def><sym>,</sym> <def>Dy</def><sym>,</sym> <def>Dz</def><sym>,</sym> <def>Distance</def> <sym>:</sym> <def>Real</def><sym>;</sym><br />
<def>      E</def>                    <sym>:</sym> <def>Real</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>   <kwa>begin</kwa><br />
<def></def>      <kwa>for</kwa> <def>I</def> <kwa>in</kwa> <def>Bodies</def><sym>'</sym><def></def><kwa>Range loop</kwa><br />
<def>        E</def> <sym>:=</sym> <def>E</def> <sym>+</sym> <def></def><num>0.5</num> <def></def><sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def><br />
          <sym>* (</sym><def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vx</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vx</def><br />
               <sym>+</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vy</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vy</def><br />
               <sym>+</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vz</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vz</def><sym>);</sym><br />
<def></def><br />
        <kwa>if</kwa> <def>I</def> <sym>/=</sym> <def>Body_Name</def><sym>'</sym><def>Last</def> <kwa>then</kwa><br />
<def></def>           <kwa>for</kwa> <def>J</def> <kwa>in</kwa> <def>Body_Name</def><sym>'</sym><def>Succ</def> <sym>(</sym><def>I</def><sym>)</sym> <def>.. Body_Name</def><sym>'</sym><def>Last</def> <kwa>loop</kwa><br />
<def>              Dx</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.X</def> <sym>-</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.X</def><sym>;</sym><br />
<def>              Dy</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Y</def> <sym>-</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Y</def><sym>;</sym><br />
<def>              Dz</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Z</def> <sym>-</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Z</def><sym>;</sym><br />
<def><br />
              Distance</def> <sym>:=</sym> <def>Math.Sqrt</def> <sym>(</sym><def>Dx</def> <sym>*</sym> <def>Dx</def> <sym>+</sym> <def>Dy</def> <sym>*</sym> <def>Dy</def> <sym>+</sym> <def>Dz</def> <sym>*</sym> <def>Dz</def><sym>);</sym><br />
<def>              E</def> <sym>:=</sym> <def>E</def> <sym>- (</sym><def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Mass</def><sym>) /</sym> <def>Distance</def><sym>;</sym><br />
<def></def>           <kwa>end loop</kwa><def></def><sym>;</sym><br />
<def></def>        <kwa>end if</kwa><def></def><sym>;</sym><br />
<def></def>      <kwa>end loop</kwa><def></def><sym>;</sym><br />
<def></def>      <kwa>return</kwa> <def>E</def><sym>;</sym><br />
<def></def>   <kwa>end</kwa> <def>Energy</def><sym>;</sym><br />
<def></def><br />
   <kwa>procedure</kwa> <def>Advance</def> <sym>(</sym><def>Dt</def> <sym>:</sym> <def></def><kwa>in</kwa> <def>Real</def><sym>)</sym> <def></def><kwa>is</kwa><br />
<def>      Dx</def><sym>,</sym> <def>Dy</def><sym>,</sym> <def>Dz</def><sym>,</sym> <def>Distance</def><sym>,</sym> <def>Mag</def> <sym>:</sym> <def>Real</def><sym>;</sym><br />
<def></def>   <kwa>begin</kwa><br />
<def></def>      <kwa>for</kwa> <def>I</def> <kwa>in</kwa> <def>Body_Name</def><sym>'</sym><def></def><kwa>Range loop</kwa><br />
<def></def>         <kwa>if</kwa> <def>I</def> <sym>/=</sym> <def>Body_Name</def><sym>'</sym><def>Last</def> <kwa>then</kwa><br />
<def></def>            <kwa>for</kwa> <def>J</def> <kwa>in</kwa> <def>Body_Name</def><sym>'</sym><def>Succ</def> <sym>(</sym><def>I</def><sym>)</sym> <def>.. Body_Name</def><sym>'</sym><def>Last</def> <kwa>loop</kwa><br />
<def>               Dx</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.X</def> <sym>-</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.X</def><sym>;</sym><br />
<def>               Dy</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Y</def> <sym>-</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Y</def><sym>;</sym><br />
<def>               Dz</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Z</def> <sym>-</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Z</def><sym>;</sym><br />
<def><br />
               Distance</def> <sym>:=</sym> <def>Math.Sqrt</def> <sym>(</sym><def>Dx</def> <sym>*</sym> <def>Dx</def> <sym>+</sym> <def>Dy</def> <sym>*</sym> <def>Dy</def> <sym>+</sym> <def>Dz</def> <sym>*</sym> <def>Dz</def><sym>);</sym><br />
<def>               Mag</def> <sym>:=</sym> <def>Dt</def> <sym>/ (</sym><def>Distance</def> <sym>**</sym> <def></def><num>3</num><def></def><sym>);</sym><br />
<def><br />
               Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vx</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vx</def> <sym>-</sym> <def>Dx</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Mass</def> <sym>*</sym> <def>Mag</def><sym>;</sym><br />
<def>               Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vy</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vy</def> <sym>-</sym> <def>Dy</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Mass</def> <sym>*</sym> <def>Mag</def><sym>;</sym><br />
<def>               Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vz</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vz</def> <sym>-</sym> <def>Dz</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Mass</def> <sym>*</sym> <def>Mag</def><sym>;</sym><br />
<def><br />
               Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Vx</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Vx</def> <sym>+</sym> <def>Dx</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def> <sym>*</sym> <def>Mag</def><sym>;</sym><br />
<def>               Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Vy</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Vy</def> <sym>+</sym> <def>Dy</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def> <sym>*</sym> <def>Mag</def><sym>;</sym><br />
<def>               Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Vz</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>J</def><sym>)</sym><def>.Vz</def> <sym>+</sym> <def>Dz</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def> <sym>*</sym> <def>Mag</def><sym>;</sym><br />
<def></def>            <kwa>end loop</kwa><def></def><sym>;</sym><br />
<def></def>         <kwa>end if</kwa><def></def><sym>;</sym><br />
<def></def>      <kwa>end loop</kwa><def></def><sym>;</sym><br />
<def></def><br />
      <kwa>for</kwa> <def>I</def> <kwa>in</kwa> <def>Body_Name</def><sym>'</sym><def></def><kwa>Range loop</kwa><br />
<def>         Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.X</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.X</def> <sym>+</sym> <def>Dt</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vx</def><sym>;</sym><br />
<def>         Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Y</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Y</def> <sym>+</sym> <def>Dt</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vy</def><sym>;</sym><br />
<def>         Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Z</def> <sym>:=</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Z</def> <sym>+</sym> <def>Dt</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vz</def><sym>;</sym><br />
<def></def>      <kwa>end loop</kwa><def></def><sym>;</sym><br />
<def></def>   <kwa>end</kwa> <def>Advance</def><sym>;</sym><br />
<def></def><br />
<kwa>end</kwa> <def>Nbody_Pck</def><sym>;</sym><br />
<def></def><br />
<slc>-- The Great Computer Language Shootout</slc><br />
<def></def><slc>-- http://shootout.alioth.debian.org</slc><br />
<def></def><slc>--</slc><br />
<def></def><slc>-- Contributed by Pascal Obry on 2005/03/21</slc><br />
<def></def><br />
<kwa>with</kwa> <def>Ada.Command_Line</def><sym>;</sym> <def></def><kwa>use</kwa> <def>Ada.Command_Line</def><sym>;</sym><br />
<def></def><kwa>with</kwa> <def>Ada.Text_IO</def><sym>;</sym>      <def></def><kwa>use</kwa> <def>Ada.Text_IO</def><sym>;</sym><br />
<def></def><kwa>with</kwa> <def>Nbody_Pck</def><sym>;</sym>        <def></def><kwa>use</kwa> <def>Nbody_Pck</def><sym>;</sym><br />
<def></def><br />
<kwa>procedure</kwa> <def>Nbody</def> <kwa>is</kwa><br />
<def></def><br />
   <kwa>package</kwa> <def>RIO</def> <kwa>is new</kwa> <def>Float_Io</def> <sym>(</sym><def>Real</def><sym>);</sym><br />
<def></def><br />
   <kwa>procedure</kwa> <def>Put</def><br />
     <sym>(</sym><def>Item</def> <sym>:</sym> <def>Real</def><sym>;</sym> <def>Fore</def> <sym>:</sym> <def>Field</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def>Aft</def> <sym>:</sym> <def>Field</def> <sym>:=</sym> <def></def><num>9</num><def></def><sym>;</sym><br />
<def>      Exp</def>  <sym>:</sym> <def>Field</def> <sym>:=</sym> <def></def><num>0</num><def></def><sym>)</sym> <def></def><kwa>renames</kwa> <def>RIO.Put</def><sym>;</sym><br />
<def><br />
   N</def> <sym>:</sym> <def></def><kwa>constant</kwa> <def></def><kwb>Integer</kwb> <def></def><sym>:=</sym> <def></def><kwb>Integer</kwb><def></def><sym>'</sym><def>Value</def> <sym>(</sym><def>Argument</def> <sym>(</sym><def></def><num>1</num><def></def><sym>));</sym><br />
<def><br />
   Px</def><sym>,</sym> <def>Py</def><sym>,</sym> <def>Pz</def> <sym>:</sym> <def>Real</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>begin</kwa><br />
<def></def>   <kwa>for</kwa> <def>I</def> <kwa>in</kwa> <def>Body_Name</def><sym>'</sym><def></def><kwa>Range loop</kwa><br />
<def>      Px</def> <sym>:=</sym> <def>Px</def> <sym>+</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vx</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def><sym>;</sym><br />
<def>      Py</def> <sym>:=</sym> <def>Py</def> <sym>+</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vy</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def><sym>;</sym><br />
<def>      Pz</def> <sym>:=</sym> <def>Pz</def> <sym>+</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Vz</def> <sym>*</sym> <def>Bodies</def> <sym>(</sym><def>I</def><sym>)</sym><def>.Mass</def><sym>;</sym><br />
<def></def>   <kwa>end loop</kwa><def></def><sym>;</sym><br />
<def><br />
   Offset_Momentum</def> <sym>(</sym><def>Bodies</def> <sym>(</sym><def>Sun</def><sym>),</sym> <def>Px</def><sym>,</sym> <def>Py</def><sym>,</sym> <def>Pz</def><sym>);</sym><br />
<def><br />
   Put</def> <sym>(</sym><def>Energy</def><sym>);</sym><br />
<def>   New_Line</def><sym>;</sym><br />
<def></def><br />
   <kwa>for</kwa> <def>K</def> <kwa>in</kwa> <def></def><num>1</num> <def>.. N</def> <kwa>loop</kwa><br />
<def>      Advance</def> <sym>(</sym><def></def><num>0.01</num><def></def><sym>);</sym><br />
<def></def>   <kwa>end loop</kwa><def></def><sym>;</sym><br />
<def><br />
   Put</def> <sym>(</sym><def>Energy</def><sym>);</sym><br />
<def>   New_Line</def><sym>;</sym><br />
<def></def><kwa>end</kwa> <def>Nbody</def><sym>;</sym><def></def><br />
</source>
