<source>
<def></def><slc># The Computer Language Benchmarks Game</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc># contributed by Daniel Nanz 2008-04-10</slc><br />
<def></def><br />
<kwa>import</kwa> <def>sys</def><br />
<kwa>import</kwa> <def>thread</def><br />
<kwa>import</kwa> <def>time</def><br />
<br />
<slc># colors and matching</slc><br />
<def>creature_colors</def> <sym>= [</sym><def></def><str>'blue'</str><def></def><sym>,</sym> <def></def><str>'red'</str><def></def><sym>,</sym> <def></def><str>'yellow'</str><def></def><sym>]</sym><br />
<def></def><br />
<kwa>def</kwa> <def></def><kwd>complement</kwd><def></def><sym>(</sym><def>c1</def><sym>,</sym> <def>c2</def><sym>):</sym><br />
<def></def><br />
    <kwa>if</kwa> <def>c1</def> <sym>==</sym> <def>c2</def><sym>:</sym> <def></def><kwa>return</kwa> <def>c1</def><br />
    <kwa>if</kwa> <def>c1</def> <sym>==</sym> <def></def><str>'blue'</str><def></def><sym>:</sym><br />
<def></def>        <kwa>if</kwa> <def>c2</def> <sym>==</sym> <def></def><str>'red'</str><def></def><sym>:</sym> <def></def><kwa>return</kwa> <def></def><str>'yellow'</str><def></def><br />
        <kwa>return</kwa> <def></def><str>'red'</str><def></def><br />
    <kwa>if</kwa> <def>c1</def> <sym>==</sym> <def></def><str>'red'</str><def></def><sym>:</sym><br />
<def></def>        <kwa>if</kwa> <def>c2</def> <sym>==</sym> <def></def><str>'blue'</str><def></def><sym>:</sym> <def></def><kwa>return</kwa> <def></def><str>'yellow'</str><def></def><br />
        <kwa>return</kwa> <def></def><str>'blue'</str><def></def><br />
    <kwa>if</kwa> <def>c2</def> <sym>==</sym> <def></def><str>'blue'</str><def></def><sym>:</sym> <def></def><kwa>return</kwa> <def></def><str>'red'</str><def></def><br />
    <kwa>return</kwa> <def></def><str>'blue'</str><def><br />
<br />
<br />
compl_dict</def> <sym>=</sym> <def></def><kwb>dict</kwb><def></def><sym>(((</sym><def>c1</def><sym>,</sym> <def>c2</def><sym>),</sym> <def></def><kwd>complement</kwd><def></def><sym>(</sym><def>c1</def><sym>,</sym> <def>c2</def><sym>))</sym><br />
<def></def>                  <kwa>for</kwa> <def>c1</def> <kwa>in</kwa> <def>creature_colors</def><br />
                  <kwa>for</kwa> <def>c2</def> <kwa>in</kwa> <def>creature_colors</def><sym>)</sym><br />
<def></def><br />
<br />
<kwa>def</kwa> <def></def><kwd>check_complement</kwd><def></def><sym>(</sym><def>colors</def><sym>=</sym><def>creature_colors</def><sym>,</sym> <def>compl</def><sym>=</sym><def>compl_dict</def><sym>):</sym><br />
<def></def><br />
    <kwa>for</kwa> <def>c1</def> <kwa>in</kwa> <def>colors</def><sym>:</sym><br />
<def></def>        <kwa>for</kwa> <def>c2</def> <kwa>in</kwa> <def>colors</def><sym>:</sym><br />
<def></def>            <kwa>print</kwa> <def></def><str>'%s + %s -&gt; %s'</str><def></def> <sym>% (</sym><def>c1</def><sym>,</sym> <def>c2</def><sym>,</sym> <def>compl</def><sym>[(</sym><def>c1</def><sym>,</sym> <def>c2</def><sym>)])</sym><br />
<def></def>    <kwa>print</kwa> <def></def><str>''</str><def></def><br />
<br />
<br />
<slc># reporting</slc><br />
<def></def><kwa>def</kwa> <def></def><kwd>spellout</kwd><def></def><sym>(</sym><def>n</def><sym>):</sym><br />
<def><br />
    numbers</def> <sym>= [</sym><def></def><str>'zero'</str><def></def><sym>,</sym> <def></def><str>'one'</str><def></def><sym>,</sym> <def></def><str>'two'</str><def></def><sym>,</sym> <def></def><str>'three'</str><def></def><sym>,</sym> <def></def><str>'four'</str><def></def><sym>,</sym><br />
<def></def>               <str>'five'</str><def></def><sym>,</sym> <def></def><str>'six'</str><def></def><sym>,</sym> <def></def><str>'seven'</str><def></def><sym>,</sym> <def></def><str>'eight'</str><def></def><sym>,</sym> <def></def><str>'nine'</str><def></def><sym>]</sym><br />
<def></def>    <kwa>return</kwa> <def></def><str>' '</str><def></def> <sym>+</sym> <def></def><str>' '</str><def></def><sym>.</sym><def></def><kwd>join</kwd><def></def><sym>(</sym><def>numbers</def><sym>[</sym><def></def><kwb>int</kwb><def></def><sym>(</sym><def>c</def><sym>)]</sym> <def></def><kwa>for</kwa> <def>c</def> <kwa>in</kwa> <def></def><kwb>str</kwb><def></def><sym>(</sym><def>n</def><sym>))</sym><br />
<def></def><br />
<br />
<kwa>def</kwa> <def></def><kwd>report</kwd><def></def><sym>(</sym><def>input_zoo</def><sym>,</sym> <def>met</def><sym>,</sym> <def>self_met</def><sym>):</sym><br />
<def></def><br />
    <kwa>print</kwa> <def></def><str>' '</str><def></def> <sym>+</sym> <def></def><str>' '</str><def></def><sym>.</sym><def></def><kwd>join</kwd><def></def><sym>(</sym><def>input_zoo</def><sym>)</sym><br />
<def></def>    <kwa>for</kwa> <def>m</def><sym>,</sym> <def>sm</def> <kwa>in</kwa> <def></def><kwb>zip</kwb><def></def><sym>(</sym><def>met</def><sym>,</sym> <def>self_met</def><sym>):</sym><br />
<def></def>        <kwa>print</kwa> <def></def><kwb>str</kwb><def></def><sym>(</sym><def>m</def><sym>) +</sym> <def></def><kwd>spellout</kwd><def></def><sym>(</sym><def>sm</def><sym>)</sym><br />
<def></def>    <kwa>print</kwa> <def></def><kwd>spellout</kwd><def></def><sym>(</sym><def></def><kwb>sum</kwb><def></def><sym>(</sym><def>met</def><sym>)) +</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><br />
<br />
<br />
<slc># the zoo</slc><br />
<def></def><kwa>def</kwa> <def></def><kwd>creature</kwd><def></def><sym>(</sym><def>my_id</def><sym>,</sym> <def>venue</def><sym>,</sym> <def>my_lock_acquire</def><sym>,</sym> <def>in_lock_acquire</def><sym>,</sym> <def>out_lock_release</def><sym>):</sym><br />
<def></def><br />
    <kwa>while True</kwa><def></def><sym>:</sym><br />
<def></def>        <kwd>my_lock_acquire</kwd><def></def><sym>()</sym>   <def></def><slc># only proceed if not already at meeting place</slc><br />
<def></def>        <kwd>in_lock_acquire</kwd><def></def><sym>()</sym>   <def></def><slc># only proceed when holding in_lock</slc><br />
<def>        venue</def><sym>[</sym><def></def><num>0</num><def></def><sym>] =</sym> <def>my_id</def>    <slc># register at meeting place</slc><br />
<def></def>        <kwd>out_lock_release</kwd><def></def><sym>()</sym>  <def></def><slc># signal &quot;registration ok&quot;</slc><br />
<def></def><br />
<br />
<kwa>def</kwa> <def></def><kwd>let_them_meet</kwd><def></def><sym>(</sym><def>meetings_left</def><sym>,</sym> <def>input_zoo</def><sym>,</sym><br />
<def>                  compl</def><sym>=</sym><def>compl_dict</def><sym>,</sym> <def>allocate</def><sym>=</sym><def>thread</def><sym>.</sym><def>allocate_lock</def><sym>):</sym><br />
<def></def>    <slc># prepare</slc><br />
<def>    c_no</def> <sym>=</sym> <def></def><kwb>len</kwb><def></def><sym>(</sym><def>input_zoo</def><sym>)</sym><br />
<def>    venue</def> <sym>= [-</sym><def></def><num>1</num><def></def><sym>]</sym><br />
<def>    met</def> <sym>= [</sym><def></def><num>0</num><def></def><sym>] *</sym> <def>c_no<br />
    self_met</def> <sym>= [</sym><def></def><num>0</num><def></def><sym>] *</sym> <def>c_no<br />
    colors</def> <sym>=</sym> <def>input_zoo</def><sym>[:]</sym><br />
<def><br />
    in_lock</def> <sym>=</sym> <def></def><kwd>allocate</kwd><def></def><sym>()</sym><br />
<def>    in_lock_acquire</def> <sym>=</sym> <def>in_lock</def><sym>.</sym><def>acquire</def>     <slc># function aliases</slc><br />
<def>    in_lock_release</def> <sym>=</sym> <def>in_lock</def><sym>.</sym><def>release</def>     <slc># (minor performance gain)</slc><br />
<def></def>    <kwd>in_lock_acquire</kwd><def></def><sym>()</sym><br />
<def>    out_lock</def> <sym>=</sym> <def></def><kwd>allocate</kwd><def></def><sym>()</sym><br />
<def>    out_lock_release</def> <sym>=</sym> <def>out_lock</def><sym>.</sym><def>release<br />
    out_lock_acquire</def> <sym>=</sym> <def>out_lock</def><sym>.</sym><def>acquire</def><br />
    <kwd>out_lock_acquire</kwd><def></def><sym>()</sym><br />
<def>    locks</def> <sym>= [</sym><def></def><kwd>allocate</kwd><def></def><sym>()</sym> <def></def><kwa>for</kwa> <def>c</def> <kwa>in</kwa> <def>input_zoo</def><sym>]</sym><br />
<def></def><br />
    <slc># let creatures wild</slc><br />
<def></def>    <kwa>for</kwa> <def>ci</def> <kwa>in</kwa> <def></def><kwb>xrange</kwb><def></def><sym>(</sym><def>c_no</def><sym>):</sym><br />
<def>        args</def> <sym>= (</sym><def>ci</def><sym>,</sym> <def>venue</def><sym>,</sym> <def>locks</def><sym>[</sym><def>ci</def><sym>].</sym><def>acquire</def><sym>,</sym> <def>in_lock_acquire</def><sym>,</sym> <def>out_lock_release</def><sym>)</sym><br />
<def>        new</def> <sym>=</sym> <def>thread</def><sym>.</sym><def></def><kwd>start_new_thread</kwd><def></def><sym>(</sym><def>creature</def><sym>,</sym> <def>args</def><sym>)</sym><br />
<def>    time</def><sym>.</sym><def></def><kwd>sleep</kwd><def></def><sym>(</sym><def></def><num>0.05</num><def></def><sym>)</sym>     <def></def><slc># to reduce work-load imbalance</slc><br />
<def></def><br />
    <kwd>in_lock_release</kwd><def></def><sym>()</sym>   <def></def><slc># signal &quot;meeting_place open for registration&quot;</slc><br />
<def></def>    <kwd>out_lock_acquire</kwd><def></def><sym>()</sym>  <def></def><slc># only proceed with a &quot;registration ok&quot; signal</slc><br />
<def>    id1</def> <sym>=</sym> <def>venue</def><sym>[</sym><def></def><num>0</num><def></def><sym>]</sym><br />
<def></def>    <kwa>while</kwa> <def>meetings_left</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>:</sym><br />
<def></def>        <kwd>in_lock_release</kwd><def></def><sym>()</sym><br />
<def></def>        <kwd>out_lock_acquire</kwd><def></def><sym>()</sym><br />
<def>        id2</def> <sym>=</sym> <def>venue</def><sym>[</sym><def></def><num>0</num><def></def><sym>]</sym><br />
<def></def>        <kwa>if</kwa> <def>id1</def> <sym>!=</sym> <def>id2</def><sym>:</sym><br />
<def>            new_color</def> <sym>=</sym> <def>compl</def><sym>[(</sym><def>colors</def><sym>[</sym><def>id1</def><sym>],</sym> <def>colors</def><sym>[</sym><def>id2</def><sym>])]</sym><br />
<def>            colors</def><sym>[</sym><def>id1</def><sym>] =</sym> <def>new_color<br />
            colors</def><sym>[</sym><def>id2</def><sym>] =</sym> <def>new_color<br />
            met</def><sym>[</sym><def>id1</def><sym>] +=</sym> <def></def><num>1</num><br />
<def>            met</def><sym>[</sym><def>id2</def><sym>] +=</sym> <def></def><num>1</num><br />
<def></def>        <kwa>else</kwa><def></def><sym>:</sym><br />
<def>            self_met</def><sym>[</sym><def>id1</def><sym>] +=</sym> <def></def><num>1</num><br />
<def>            met</def><sym>[</sym><def>id1</def><sym>] +=</sym> <def></def><num>1</num><br />
<def>        meetings_left</def> <sym>-=</sym> <def></def><num>1</num><br />
<def></def>        <kwa>if</kwa> <def>meetings_left</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>:</sym><br />
<def>            locks</def><sym>[</sym><def>id1</def><sym>].</sym><def></def><kwd>release</kwd><def></def><sym>()</sym>  <def></def><slc># signal &quot;you were kicked from meeting place&quot;</slc><br />
<def>            id1</def> <sym>=</sym> <def>id2</def><br />
        <kwa>else</kwa><def></def><sym>:</sym><br />
<def></def>            <kwd>report</kwd><def></def><sym>(</sym><def>input_zoo</def><sym>,</sym> <def>met</def><sym>,</sym> <def>self_met</def><sym>)</sym><br />
<def></def><br />
<br />
<kwa>def</kwa> <def></def><kwd>chameneosiate</kwd><def></def><sym>(</sym><def>n</def><sym>):</sym><br />
<def></def><br />
    <kwd>check_complement</kwd><def></def><sym>()</sym><br />
<def></def>    <kwd>let_them_meet</kwd><def></def><sym>(</sym><def>n</def><sym>, [</sym><def></def><str>'blue'</str><def></def><sym>,</sym> <def></def><str>'red'</str><def></def><sym>,</sym> <def></def><str>'yellow'</str><def></def><sym>])</sym><br />
<def></def>    <kwd>let_them_meet</kwd><def></def><sym>(</sym><def>n</def><sym>, [</sym><def></def><str>'blue'</str><def></def><sym>,</sym> <def></def><str>'red'</str><def></def><sym>,</sym> <def></def><str>'yellow'</str><def></def><sym>,</sym> <def></def><str>'red'</str><def></def><sym>,</sym> <def></def><str>'yellow'</str><def></def><sym>,</sym><br />
<def></def>                      <str>'blue'</str><def></def><sym>,</sym> <def></def><str>'red'</str><def></def><sym>,</sym> <def></def><str>'yellow'</str><def></def><sym>,</sym> <def></def><str>'red'</str><def></def><sym>,</sym> <def></def><str>'blue'</str><def></def><sym>])</sym><br />
<def></def>    <slc>#print ''</slc><br />
<def></def><br />
<br />
<kwd>chameneosiate</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb><def></def><sym>(</sym><def>sys</def><sym>.</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>]))</sym><def></def><br />
</source>
