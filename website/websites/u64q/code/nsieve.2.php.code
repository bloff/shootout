<span class="hl sym">&lt;</span>?php

<span class="hl com">/* The Computer Language Shootout</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * contributed by Charles G.</span>
<span class="hl com"> * modified by Isaac Gouy</span>
<span class="hl com"> */</span>

<span class="hl kwa">function</span> <span class="hl kwd">nsieve</span><span class="hl sym">(</span><span class="hl kwc">$m</span><span class="hl sym">)</span>
<span class="hl sym">{</span>
    <span class="hl kwc">$flags</span> <span class="hl sym">=</span> <span class="hl str">' '</span><span class="hl sym">;</span>
    <span class="hl kwc">$flags</span><span class="hl sym">[</span><span class="hl kwc">$m</span><span class="hl sym">] =</span> <span class="hl str">' '</span><span class="hl sym">;</span>

    <span class="hl kwc">$count</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">2</span><span class="hl sym">;</span> <span class="hl kwc">$i</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$m</span><span class="hl sym">; ++</span><span class="hl kwc">$i</span><span class="hl sym">)</span>
        <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$flags</span><span class="hl sym">[</span><span class="hl kwc">$i</span><span class="hl sym">] ==</span> <span class="hl str">' '</span><span class="hl sym">) {</span>
            <span class="hl sym">++</span><span class="hl kwc">$count</span><span class="hl sym">;</span>
            <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$j</span> <span class="hl sym">=</span> <span class="hl kwc">$i</span> <span class="hl sym">&lt;&lt;</span> <span class="hl num">1</span><span class="hl sym">;</span> <span class="hl kwc">$j</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$m</span><span class="hl sym">;</span> <span class="hl kwc">$j</span> <span class="hl sym">+=</span> <span class="hl kwc">$i</span><span class="hl sym">)</span>
                <span class="hl kwc">$flags</span><span class="hl sym">[</span><span class="hl kwc">$j</span><span class="hl sym">] =</span> <span class="hl str">'x'</span><span class="hl sym">;</span>
        <span class="hl sym">}</span>

    <span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Primes up to %8d %8d</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span> <span class="hl kwc">$m</span><span class="hl sym">,</span> <span class="hl kwc">$count</span><span class="hl sym">);</span>

<span class="hl sym">}</span>

<span class="hl kwc">$m</span> <span class="hl sym">=</span> <span class="hl kwc">$argv</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span>
<span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwc">$i</span> <span class="hl sym">&lt;</span> <span class="hl num">3</span><span class="hl sym">;</span> <span class="hl kwc">$i</span><span class="hl sym">++)</span>
    <span class="hl kwd">nsieve</span><span class="hl sym">(</span><span class="hl num">10000</span> <span class="hl sym">&lt;&lt; (</span><span class="hl kwc">$m</span><span class="hl sym">-</span><span class="hl kwc">$i</span><span class="hl sym">));</span>
?<span class="hl sym">&gt;</span>
