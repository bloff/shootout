<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Daniel Nanz 2008-03-18</span>

<span class="hl kwa">import</span> sys
<span class="hl kwa">import</span> numpy

<span class="hl kwa">def</span> <span class="hl kwd">doit</span><span class="hl sym">(</span>n<span class="hl sym">,</span> buf_size<span class="hl sym">=</span><span class="hl num">50000</span><span class="hl sym">,</span> np<span class="hl sym">=</span>numpy<span class="hl sym">):</span>

    n_low <span class="hl sym">=</span> <span class="hl num">1</span>
    <span class="hl kwa">if</span> buf_size <span class="hl sym">&lt;=</span> n<span class="hl sym">:</span>
        todo <span class="hl sym">=</span> buf_size
    <span class="hl kwa">else</span><span class="hl sym">:</span>
        todo <span class="hl sym">=</span> n
    sums <span class="hl sym">=</span> np<span class="hl sym">.</span><span class="hl kwd">zeros</span><span class="hl sym">(</span><span class="hl num">9</span><span class="hl sym">,</span> dtype<span class="hl sym">=</span>np<span class="hl sym">.</span>double<span class="hl sym">)</span>
    sums<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">] +=</span> <span class="hl num">1</span><span class="hl sym">.</span>
    <span class="hl kwa">while</span> todo <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">:</span>
        n_high <span class="hl sym">=</span> n_low <span class="hl sym">+</span> todo
        k <span class="hl sym">=</span> np<span class="hl sym">.</span><span class="hl kwd">arange</span><span class="hl sym">(</span>n_low<span class="hl sym">,</span> n_high<span class="hl sym">,</span> dtype<span class="hl sym">=</span>np<span class="hl sym">.</span>int8<span class="hl sym">)</span>
        alt <span class="hl sym">= (</span><span class="hl num">2</span> <span class="hl sym">* (</span>k <span class="hl sym">&amp;</span> <span class="hl num">1</span><span class="hl sym">)) -</span> <span class="hl num">1</span>
        k <span class="hl sym">=</span> np<span class="hl sym">.</span><span class="hl kwd">arange</span><span class="hl sym">(</span>n_low<span class="hl sym">,</span> n_high<span class="hl sym">,</span> dtype<span class="hl sym">=</span>np<span class="hl sym">.</span>double<span class="hl sym">)</span>
        k2 <span class="hl sym">=</span> k <span class="hl sym">*</span> k
        k3 <span class="hl sym">=</span> k <span class="hl sym">*</span> k2
        ks <span class="hl sym">=</span> np<span class="hl sym">.</span><span class="hl kwd">sin</span><span class="hl sym">(</span>k<span class="hl sym">)</span>
        kc <span class="hl sym">=</span> np<span class="hl sym">.</span><span class="hl kwd">cos</span><span class="hl sym">(</span>k<span class="hl sym">)</span>
        sums <span class="hl sym">+=</span> <span class="hl kwb">map</span><span class="hl sym">(</span>np<span class="hl sym">.</span><span class="hl kwb">sum</span><span class="hl sym">,</span>
                    <span class="hl sym">((</span><span class="hl num">2</span><span class="hl sym">. /</span> <span class="hl num">3</span><span class="hl sym">.) **</span> k<span class="hl sym">,</span>
                     k <span class="hl sym">** -</span><span class="hl num">.5</span><span class="hl sym">,</span>
                     <span class="hl num">1</span><span class="hl sym">. / (</span>k <span class="hl sym">* (</span>k <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">.)),</span>
                     <span class="hl num">1</span><span class="hl sym">. / (</span>k3 <span class="hl sym">*</span> ks <span class="hl sym">*</span> ks<span class="hl sym">),</span>
                     <span class="hl num">1</span><span class="hl sym">. / (</span>k3 <span class="hl sym">*</span> kc <span class="hl sym">*</span> kc<span class="hl sym">),</span>
                     <span class="hl num">1</span><span class="hl sym">. /</span> k<span class="hl sym">,</span>
                     <span class="hl num">1</span><span class="hl sym">. /</span> k2<span class="hl sym">,</span>
                     alt <span class="hl sym">/</span> k<span class="hl sym">,</span>
                     alt <span class="hl sym">/ (</span>k <span class="hl sym">+</span> k <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">.)))</span>
        n_low <span class="hl sym">=</span> n_high
        <span class="hl kwa">if</span> <span class="hl sym">(</span>n <span class="hl sym">-</span> buf_size<span class="hl sym">) &gt;</span> n_low<span class="hl sym">:</span>
            todo <span class="hl sym">=</span> buf_size
        <span class="hl kwa">else</span><span class="hl sym">:</span>
            todo <span class="hl sym">=</span> n <span class="hl sym">-</span> n_low <span class="hl sym">+</span> <span class="hl num">1</span>

    fmt <span class="hl sym">=</span> <span class="hl str">'</span><span class="hl esc">\n</span><span class="hl str">%0.9f</span><span class="hl esc">\t</span><span class="hl str">'</span>
    nms <span class="hl sym">= [</span><span class="hl str">'(2/3)^k'</span><span class="hl sym">,</span> <span class="hl str">'k^-0.5'</span><span class="hl sym">,</span> <span class="hl str">'1/k(k+1)'</span><span class="hl sym">,</span> <span class="hl str">'Flint Hills'</span><span class="hl sym">,</span> <span class="hl str">'Cookson Hills'</span><span class="hl sym">,</span>
           <span class="hl str">'Harmonic'</span><span class="hl sym">,</span> <span class="hl str">'Riemann Zeta'</span><span class="hl sym">,</span> <span class="hl str">'Alternating Harmonic'</span><span class="hl sym">,</span> <span class="hl str">'Gregory'</span><span class="hl sym">]</span>
    <span class="hl kwa">print</span> <span class="hl sym">(</span>fmt<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">:] +</span> fmt<span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">(</span>nms<span class="hl sym">)) %</span> <span class="hl kwb">tuple</span><span class="hl sym">(</span>sums<span class="hl sym">)</span>

<span class="hl kwd">doit</span><span class="hl sym">(</span><span class="hl kwb">int</span><span class="hl sym">(</span>sys<span class="hl sym">.</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]))</span>
