<source>
<def></def><slc>#!/usr/bin/tclsh</slc><br />
<def></def><slc># $Id: mandelbrot.tcl-3.tcl.code,v 1.1 2008-08-05 04:40:17 igouy-guest Exp $</slc><br />
<def></def><slc># The Great Computer Language Shootout</slc><br />
<def></def><slc># http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>#</slc><br />
<def></def><slc># Contributed by Hemang Lavana</slc><br />
<def></def><br />
<kwa>proc</kwa> <def>main</def> <sym>{</sym><def>argv</def><sym>} {</sym><br />
<def></def>    <kwa>set</kwa> <def>bit_num</def>  <sym>[</sym><def></def><kwa>set</kwa> <def>byte_acc</def> <num>0</num><def></def><sym>]</sym><br />
<def></def>    <kwa>set</kwa> <def>H</def> <sym>[</sym><def></def><kwa>set</kwa> <def>W</def> <sym>[</sym><def></def><kwa>lindex</kwa> <def></def><kwb>$argv</kwb> <def></def><num>0</num><def></def><sym>]]</sym><br />
<def></def><br />
    <kwa>puts</kwa> <def>stdout</def> <str>&quot;P4</str><esc>\n</esc><str>$W $H&quot;</str><def></def><br />
    <kwa>for</kwa> <def></def><sym>{</sym><def></def><kwa>set</kwa> <def>y</def> <num>0</num><def></def><sym>;</sym> <def></def><kwa>set</kwa> <def>iter</def> <num>50</num><def></def><sym>;</sym> <def></def><kwa>set</kwa> <def>limit2</def> <num>4.0</num><def></def><sym>;</sym> <def></def><kwa>set</kwa> <def>W_1</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><kwb>$W</kwb><def></def><kwc>-1</kwc><def></def><sym>}];</sym> <def></def><kwa>set</kwa> <def>Wshift</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><num>8</num><def></def><sym>-</sym><def></def><kwb>$W</kwb><def></def><sym>%</sym><def></def><num>8</num><def></def><sym>}];} {</sym><def></def><kwb>$y</kwb> <def></def><sym>&lt;</sym> <def></def><kwb>$H</kwb><def></def><sym>} {</sym><def></def><kwa>incr</kwa> <def>y</def><sym>} {</sym><br />
<def></def>        <kwa>set</kwa> <def>Ci</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><num>2.0</num> <def></def><sym>*</sym> <def></def><kwb>$y</kwb> <def></def><sym>/</sym> <def></def><kwb>$H</kwb> <def></def><sym>-</sym> <def></def><num>1</num><def></def><sym>}]</sym><br />
<def></def>        <kwa>for</kwa> <def></def><sym>{</sym><def></def><kwa>set</kwa> <def>x</def> <num>0</num><def></def><sym>} {</sym><def></def><kwb>$x</kwb> <def></def><sym>&lt;</sym> <def></def><kwb>$W</kwb><def></def><sym>} {</sym><def></def><kwa>incr</kwa> <def>x</def><sym>} {</sym><br />
<def></def>            <kwa>set</kwa> <def>Zr</def> <sym>[</sym><def></def><kwa>set</kwa> <def>Zi</def> <num>0.0</num><def></def><sym>]</sym><br />
<def></def>            <kwa>set</kwa> <def>Cr</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><num>2.0</num> <def></def><sym>*</sym> <def></def><kwb>$x</kwb> <def></def><sym>/</sym> <def></def><kwb>$W</kwb> <def></def><sym>-</sym> <def></def><num>1.5</num><def></def><sym>}]</sym><br />
<def></def>            <kwa>for</kwa> <def></def><sym>{</sym><def></def><kwa>set</kwa> <def>i</def> <num>0</num><def></def><sym>} {</sym><def></def><kwb>$i</kwb> <def></def><sym>&lt;</sym> <def></def><kwb>$iter</kwb><def></def><sym>} {</sym><def></def><kwa>incr</kwa> <def>i</def><sym>} {</sym><br />
<def></def>                <kwa>set</kwa> <def>Tr</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym> <def></def><kwb>$Zr</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zr</kwb> <def></def><sym>-</sym> <def></def><kwb>$Zi</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zi</kwb> <def></def><sym>+</sym> <def></def><kwb>$Cr</kwb> <def></def><sym>}]</sym><br />
<def></def>                <kwa>set</kwa> <def>Ti</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym> <def></def><num>2.0</num> <def></def><sym>*</sym> <def></def><kwb>$Zr</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zi</kwb> <def></def><sym>+</sym> <def></def><kwb>$Ci</kwb> <def></def><sym>}]</sym><br />
<def></def>                <kwa>set</kwa> <def>Zr</def> <kwb>$Tr</kwb><def></def><sym>;</sym> <def></def><kwa>set</kwa> <def>Zi</def> <kwb>$Ti</kwb><br />
<def></def>                <kwa>if</kwa> <def></def><sym>{[</sym><def></def><kwa>set</kwa> <def>isOverLimit</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{(</sym><def></def><kwb>$Zr</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zr</kwb> <def></def><sym>+</sym> <def></def><kwb>$Zi</kwb> <def></def><sym>*</sym> <def></def><kwb>$Zi</kwb><def></def><sym>) &gt;</sym> <def></def><kwb>$limit2</kwb><def></def><sym>}]]} {</sym><def></def><kwa>break</kwa><def></def><sym>}</sym><br />
<def></def>            <sym>}</sym><br />
<def></def>            <kwa>incr</kwa> <def>bit_num</def><br />
            <kwa>set</kwa> <def>byte_acc</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym><def></def><num>2</num> <def></def><sym>*</sym> <def></def><kwb>$byte_acc</kwb> <def></def><sym>+ (</sym><def></def><kwb>$isOverLimit</kwb><def>?</def> <num>0</num> <def></def><sym>:</sym> <def></def><num>1</num><def></def><sym>)}]</sym><br />
<def></def>            <kwa>if</kwa> <def></def><sym>{</sym><def></def><kwb>$bit_num</kwb> <def></def><sym>==</sym> <def></def><str>&quot;8&quot;</str><def></def><sym>} {</sym><br />
<def></def>                <kwa>puts</kwa> <def></def><kwc>-nonewline</kwc> <def>stdout</def> <sym>[</sym><def></def><kwa>binary format</kwa> <def>c</def> <kwb>$byte_acc</kwb><def></def><sym>]</sym><br />
<def></def>                <kwa>set</kwa> <def>bit_num</def> <sym>[</sym><def></def><kwa>set</kwa> <def>byte_acc</def> <num>0</num><def></def><sym>]</sym><br />
<def></def>            <sym>}</sym> <def>elseif</def> <sym>{</sym><def></def><kwb>$x</kwb> <def></def><sym>==</sym> <def></def><kwb>$W_1</kwb><def></def><sym>} {</sym><br />
<def></def>                <kwa>set</kwa> <def>byte_acc</def> <sym>[</sym><def></def><kwa>expr</kwa> <def></def><sym>{</sym> <def></def><kwb>$byte_acc</kwb> <def></def><sym>&lt;&lt;</sym> <def></def><kwb>$Wshift</kwb> <def></def><sym>}]</sym><br />
<def></def>                <kwa>puts</kwa> <def></def><kwc>-nonewline</kwc> <def>stdout</def> <sym>[</sym><def></def><kwa>binary format</kwa> <def>c</def> <kwb>$byte_acc</kwb><def></def><sym>]</sym><br />
<def></def>                <kwa>set</kwa> <def>bit_num</def> <sym>[</sym><def></def><kwa>set</kwa> <def>byte_acc</def> <num>0</num><def></def><sym>]</sym><br />
<def></def>            <sym>}</sym><br />
<def></def>        <sym>}</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def><br />
main</def> <kwb>$argv</kwb><def></def><br />
</source>
