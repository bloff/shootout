<source>
<def></def><com>/*</com><br />
<com>The Computer Language Shootout</com><br />
<com>http://shootout.alioth.debian.org/</com><br />
<com>Contributed by Jesse Millikan</com><br />
<com>*/</com><def></def><br />
<br />
<slc>// Return hash t with frequency in &quot;n&quot;</slc><br />
<def></def><kwa>function</kwa> <def></def><kwd>frequency</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def></def><kwc>length</kwc><def></def><sym>){</sym><br />
<def></def> <kwa>var</kwa> <def>m</def><sym>,</sym> <def>i</def><sym>,</sym> <def>t</def> <sym>= {},</sym> <def>n</def> <sym>=</sym> <def>seq</def><sym>.</sym><def></def><kwc>length</kwc> <def></def><sym>-</sym> <def></def><kwc>length</kwc> <def></def><sym>+</sym> <def></def><num>1</num><br />
<def></def><br />
 <kwa>for</kwa><def></def><sym>(</sym><def>i</def> <sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def>i</def> <sym>&lt;</sym> <def>n</def><sym>;</sym> <def>i</def><sym>++){</sym><br />
<def>  m</def> <sym>=</sym> <def>seq</def><sym>.</sym><def></def><kwc>substr</kwc><def></def><sym>(</sym><def>i</def><sym>,</sym> <def></def><kwc>length</kwc><def></def><sym>)</sym><br />
<def>  t</def><sym>[</sym><def>m</def><sym>] = (</sym><def>t</def><sym>[</sym><def>m</def><sym>] ||</sym> <def></def><num>0</num><def></def><sym>) +</sym> <def></def><num>1</num><br />
<def></def> <sym>}</sym><br />
<def><br />
 t</def><sym>.</sym><def>n</def> <sym>=</sym> <def>n</def><br />
 <kwa>return</kwa> <def>t</def><br />
<sym>}</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwc>sort</kwc><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def></def><kwc>length</kwc><def></def><sym>){</sym><br />
<def></def> <kwa>var</kwa> <def>f</def> <sym>=</sym> <def></def><kwd>frequency</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def></def><kwc>length</kwc><def></def><sym>),</sym> <def>keys</def> <sym>= [],</sym> <def>k</def><sym>,</sym> <def>i</def><br />
<br />
 <slc>// Put all keys in key array in reverse</slc><br />
<def></def> <kwa>for</kwa><def></def><sym>(</sym><def>k</def> <kwa>in</kwa> <def>f</def><sym>)</sym><br />
<def></def>  <kwa>if</kwa><def></def><sym>(</sym><def>k</def> <sym>!=</sym> <def></def><str>'n'</str><def></def><sym>)</sym> <def>keys</def><sym>.</sym><def></def><kwd>unshift</kwd><def></def><sym>(</sym><def>k</def><sym>)</sym><br />
<def><br />
 keys</def><sym>.</sym><def></def><kwc>sort</kwc><def></def><sym>(</sym><def></def><kwa>function</kwa><def></def><sym>(</sym><def>a</def><sym>,</sym> <def>b</def><sym>){</sym> <def></def><kwa>return</kwa> <def>f</def><sym>[</sym><def>b</def><sym>] -</sym> <def>f</def><sym>[</sym><def>a</def><sym>] })</sym><br />
<def></def><br />
 <kwa>for</kwa><def></def><sym>(</sym><def>i</def> <kwa>in</kwa> <def>keys</def><sym>)</sym><br />
<def></def>  <kwc>print</kwc><def></def><sym>(</sym><def>keys</def><sym>[</sym><def>i</def><sym>].</sym><def></def><kwc>toUpperCase</kwc><def></def><sym>(), (</sym><def>f</def><sym>[</sym><def>keys</def><sym>[</sym><def>i</def><sym>]] *</sym> <def></def><num>100</num> <def></def><sym>/</sym> <def>f</def><sym>.</sym><def>n</def><sym>).</sym><def></def><kwd>toFixed</kwd><def></def><sym>(</sym><def></def><num>3</num><def></def><sym>))</sym><br />
<def></def><br />
 <kwc>print</kwc><def></def><sym>()</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>find</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def>s</def><sym>){</sym><br />
<def></def> <kwa>var</kwa> <def>f</def> <sym>=</sym> <def></def><kwd>frequency</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def>s</def><sym>.</sym><def></def><kwc>length</kwc><def></def><sym>)</sym><br />
<def></def> <kwc>print</kwc><def></def><sym>((</sym><def>f</def><sym>[</sym><def>s</def><sym>] ||</sym> <def></def><num>0</num><def></def><sym>) +</sym> <def></def><str>&quot;</str><esc>\t</esc><str>&quot;</str><def></def> <sym>+</sym> <def>s</def><sym>.</sym><def></def><kwc>toUpperCase</kwc><def></def><sym>())</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwa>var</kwa> <def>seq</def><sym>=</sym><def></def><str>&quot;&quot;</str><def></def><sym>,</sym> <def>l</def><sym>,</sym> <def>others</def> <sym>= [</sym><def></def><str>&quot;ggt&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;ggta&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;ggtatt&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;ggtattttaatt&quot;</str><def></def><sym>,</sym> <def></def><str>&quot;ggtattttaatttatagt&quot;</str><def></def><sym>]</sym><br />
<def></def><br />
<kwa>while</kwa><def></def><sym>(!</sym><def></def><kwd>readline</kwd><def></def><sym>().</sym><def></def><kwc>match</kwc><def></def><sym>(/</sym><def>^</def><sym>&gt;</sym><def>THREE</def><sym>/));</sym> <def></def><slc>// no body</slc><br />
<def></def><br />
<kwa>while</kwa><def></def><sym>((</sym><def>l</def> <sym>=</sym> <def></def><kwd>readline</kwd><def></def><sym>()) &amp;&amp; !</sym><def>l</def><sym>.</sym><def></def><kwc>match</kwc><def></def><sym>(/</sym><def>^</def><sym>&gt;/))</sym><br />
<def> seq</def> <sym>+=</sym> <def>l</def><br />
<br />
<kwc>sort</kwc><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def></def><num>1</num><def></def><sym>)</sym><br />
<def></def><kwc>sort</kwc><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def></def><num>2</num><def></def><sym>)</sym><br />
<def></def><br />
<kwa>for</kwa><def></def><sym>(</sym><def>i</def> <kwa>in</kwa> <def>others</def><sym>)</sym><br />
<def></def> <kwd>find</kwd><def></def><sym>(</sym><def>seq</def><sym>,</sym> <def>others</def><sym>[</sym><def>i</def><sym>])</sym><br />
<def></def><br />
</source>
