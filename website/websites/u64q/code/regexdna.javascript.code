<source>
<def></def><slc>// The Computer Language Shootout</slc><br />
<def></def><slc>// http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>//</slc><br />
<def></def><slc>// contributed by Jesse Millikan</slc><br />
<def></def><slc>// Base on the Ruby version by jose fco. gonzalez</slc><br />
<def></def><br />
<kwa>var</kwa> <def>l</def><sym>,</sym> <def></def><kwc>input</kwc> <def></def><sym>=</sym> <def></def><str>&quot;&quot;</str><def></def><sym>,</sym> <def>ilen</def><sym>,</sym> <def>clen</def><sym>,</sym><br />
<def> seqs</def> <sym>= [</sym><br />
<def></def>  <sym>/</sym><def>agggtaaa</def><sym>|</sym><def>tttaccct</def><sym>/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/[</sym><def>cgt</def><sym>]</sym><def>gggtaaa</def><sym>|</sym><def>tttaccc</def><sym>[</sym><def>acg</def><sym>]/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/</sym><def>a</def><sym>[</sym><def>act</def><sym>]</sym><def>ggtaaa</def><sym>|</sym><def>tttacc</def><sym>[</sym><def>agt</def><sym>]</sym><def>t</def><sym>/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/</sym><def>ag</def><sym>[</sym><def>act</def><sym>]</sym><def>gtaaa</def><sym>|</sym><def>tttac</def><sym>[</sym><def>agt</def><sym>]</sym><def>ct</def><sym>/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/</sym><def>agg</def><sym>[</sym><def>act</def><sym>]</sym><def>taaa</def><sym>|</sym><def>ttta</def><sym>[</sym><def>agt</def><sym>]</sym><def>cct</def><sym>/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/</sym><def>aggg</def><sym>[</sym><def>acg</def><sym>]</sym><def>aaa</def><sym>|</sym><def>ttt</def><sym>[</sym><def>cgt</def><sym>]</sym><def>ccct</def><sym>/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/</sym><def>agggt</def><sym>[</sym><def>cgt</def><sym>]</sym><def>aa</def><sym>|</sym><def>tt</def><sym>[</sym><def>acg</def><sym>]</sym><def>accct</def><sym>/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/</sym><def>agggta</def><sym>[</sym><def>cgt</def><sym>]</sym><def>a</def><sym>|</sym><def>t</def><sym>[</sym><def>acg</def><sym>]</sym><def>taccct</def><sym>/</sym><def>ig</def><sym>,</sym><br />
<def></def>  <sym>/</sym><def>agggtaa</def><sym>[</sym><def>cgt</def><sym>]|[</sym><def>acg</def><sym>]</sym><def>ttaccct</def><sym>/</sym><def>ig</def><sym>],</sym><br />
<def> subs</def> <sym>= {</sym><br />
<def>  B</def><sym>:</sym> <def></def><str>'(c|g|t)'</str><def></def><sym>,</sym> <def>D</def><sym>:</sym> <def></def><str>'(a|g|t)'</str><def></def><sym>,</sym> <def>H</def><sym>:</sym> <def></def><str>'(a|c|t)'</str><def></def><sym>,</sym> <def>K</def><sym>:</sym> <def></def><str>'(g|t)'</str><def></def><sym>,</sym><br />
<def>  M</def><sym>:</sym> <def></def><str>'(a|c)'</str><def></def><sym>,</sym> <def>N</def><sym>:</sym> <def></def><str>'(a|c|g|t)'</str><def></def><sym>,</sym> <def>R</def><sym>:</sym> <def></def><str>'(a|g)'</str><def></def><sym>,</sym> <def>S</def><sym>:</sym> <def></def><str>'(c|t)'</str><def></def><sym>,</sym><br />
<def>  V</def><sym>:</sym> <def></def><str>'(a|c|g)'</str><def></def><sym>,</sym> <def>W</def><sym>:</sym> <def></def><str>'(a|t)'</str><def></def><sym>,</sym> <def>Y</def><sym>:</sym> <def></def><str>'(c|t)'</str><def></def> <sym>}</sym><br />
<def></def><br />
<slc>// readline strips the newline...</slc><br />
<def></def><kwa>while</kwa><def></def><sym>(</sym><def>l</def> <sym>=</sym> <def></def><kwd>readline</kwd><def></def><sym>())</sym> <def></def><kwc>input</kwc> <def></def><sym>+=</sym> <def>l</def> <sym>+</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def><br />
ilen</def> <sym>=</sym> <def></def><kwc>input</kwc><def></def><sym>.</sym><def></def><kwc>length</kwc><br />
<def></def><br />
<slc>// There is no in-place substitution</slc><br />
<def></def><kwc>input</kwc> <def></def><sym>=</sym> <def></def><kwc>input</kwc><def></def><sym>.</sym><def></def><kwc>replace</kwc><def></def><sym>(/&gt;.*</sym><def>\n</def><sym>|</sym><def>\n</def><sym>/</sym><def>g</def><sym>,</sym><def></def><str>&quot;&quot;</str><def></def><sym>)</sym><br />
<def>clen</def> <sym>=</sym> <def></def><kwc>input</kwc><def></def><sym>.</sym><def></def><kwc>length</kwc><br />
<def></def><br />
<kwa>for</kwa><def></def><sym>(</sym><def>i</def> <kwa>in</kwa> <def>seqs</def><sym>)</sym><br />
<def></def> <kwc>print</kwc><def></def><sym>(</sym><def>seqs</def><sym>[</sym><def>i</def><sym>].</sym><def></def><kwc>source</kwc><def></def><sym>, (</sym><def></def><kwc>input</kwc><def></def><sym>.</sym><def></def><kwc>match</kwc><def></def><sym>(</sym><def>seqs</def><sym>[</sym><def>i</def><sym>]) || []).</sym><def></def><kwc>length</kwc><def></def><sym>)</sym><br />
<def></def> <slc>// match returns null if no matches, so replace with empty</slc><br />
<def></def><br />
<kwa>for</kwa><def></def><sym>(</sym><def>k</def> <kwa>in</kwa> <def>subs</def><sym>)</sym><br />
<def></def> <kwc>input</kwc> <def></def><sym>=</sym> <def></def><kwc>input</kwc><def></def><sym>.</sym><def></def><kwc>replace</kwc><def></def><sym>(</sym><def>k</def><sym>,</sym> <def>subs</def><sym>[</sym><def>k</def><sym>],</sym> <def></def><str>&quot;g&quot;</str><def></def><sym>)</sym><br />
<def></def> <slc>// search string, replacement string, flags</slc><br />
<def></def><br />
<kwc>print</kwc><def></def><sym>()</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def>ilen</def><sym>)</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def>clen</def><sym>)</sym><br />
<def></def><kwc>print</kwc><def></def><sym>(</sym><def></def><kwc>input</kwc><def></def><sym>.</sym><def></def><kwc>length</kwc><def></def><sym>)</sym><br />
<def></def><br />
</source>
