<source>
<def></def><com>/**</com><br />
<com> * The Computer Language Benchmarks Game</com><br />
<com> * Based on the CAL Open Quark version</com><br />
<com> * Contributed by Magnus Byne.</com><br />
<com> */</com><def></def><br />
<kwa>module</kwa> <def>Partialsums</def><sym>;</sym><br />
<def></def><br />
<kwa>import</kwa> <def>Cal</def><sym>.</sym><def>Core</def><sym>.</sym><def>Prelude</def> <kwa>using</kwa><br />
<def></def>    <kwa>typeConstructor</kwa> <def></def><sym>=</sym> <def>Double</def><sym>,</sym> <def>Int</def><sym>,</sym> <def>String</def><sym>;</sym><br />
<def></def>    <kwa>function</kwa> <def></def><sym>=</sym> <def>eager</def><sym>,</sym> <def>fromInt</def><sym>,</sym> <def>stringToInt</def><sym>;</sym><br />
<def></def>    <sym>;</sym><br />
<def></def><br />
<br />
<br />
<kwa>import</kwa> <def>Cal</def><sym>.</sym><def>Collections</def><sym>.</sym><def>List</def> <kwa>using</kwa><br />
<def></def>    <kwa>function</kwa> <def></def><sym>=</sym> <def>head</def><sym>;</sym><br />
<def></def>    <sym>;</sym><br />
<def></def><br />
<kwa>import</kwa> <def>Cal</def><sym>.</sym><def>Utilities</def><sym>.</sym><def>MessageFormat</def> <kwa>using</kwa><br />
<def></def>    <kwa>function</kwa> <def></def><sym>=</sym> <def>formatWithPattern</def><sym>;</sym><br />
<def></def>    <sym>;</sym><br />
<def></def><br />
<kwa>import</kwa> <def>Cal</def><sym>.</sym><def>Utilities</def><sym>.</sym><def>Locale</def> <kwa>using</kwa><br />
<def></def>    <kwa>function</kwa> <def></def><sym>=</sym> <def>invariantLocale</def><sym>;</sym><br />
<def></def>    <sym>;</sym><br />
<def></def><br />
<kwa>import</kwa> <def>Cal</def><sym>.</sym><def>Utilities</def><sym>.</sym><def>Math</def> <kwa>using</kwa><br />
<def></def>    <kwa>function</kwa> <def></def><sym>=</sym> <def>cos</def><sym>,</sym> <def>power</def><sym>,</sym> <def>sin</def><sym>,</sym> <def>sqrt</def><sym>;</sym><br />
<def></def>    <sym>;</sym><br />
<def></def><br />
<kwa>import</kwa> <def>Cal</def><sym>.</sym><def>IO</def><sym>.</sym><def>Console</def> <kwa>using</kwa><br />
<def></def>    <kwa>function</kwa> <def></def><sym>=</sym> <def>print</def><sym>;</sym><br />
<def></def>    <sym>;</sym><br />
<def><br />
main</def> <sym>:: [</sym><def>String</def><sym>] -&gt; ();</sym><br />
<def></def><kwa>public</kwa> <def>main</def> <sym>!</sym><def>args</def> <sym>=</sym><br />
<def></def>    <kwa>let</kwa><br />
<def>        n</def> <sym>=</sym> <def>eager $ stringToInt</def> <sym>(</sym><def>head args</def><sym>);</sym><br />
<def></def>    <kwa>in</kwa><br />
<def>        computeSums n</def> <num>1 1 0 0 0 0 0 0 0 0 0</num><br />
<def></def>    <sym>;</sym><br />
<def><br />
computeSums</def> <sym>::</sym><br />
<def>    Int</def> <sym>-&gt;</sym> <def>Int</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def><br />
    <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt;</sym> <def>Double</def> <sym>-&gt; ();</sym><br />
<def>computeSums</def> <sym>!</sym><def>maxIterations</def> <sym>!</sym><def>iteration</def> <sym>!</sym><def>alt</def> <sym>!</sym><def>a1</def> <sym>!</sym><def>a2</def> <sym>!</sym><def>a3</def> <sym>!</sym><def>a4</def> <sym>!</sym><def>a5</def> <sym>!</sym><def>a6</def> <sym>!</sym><def>a7</def> <sym>!</sym><def>a8</def> <sym>!</sym><def>a9</def><sym>=</sym><br />
<def></def>    <kwa>if</kwa> <def>iteration</def> <sym>&lt;=</sym> <def>maxIterations</def> <kwa>then</kwa><br />
<def></def>        <kwa>let</kwa><br />
<def>            k</def> <sym>=</sym> <def>eager $ fromInt iteration</def> <sym>::</sym> <def>Double</def><sym>;</sym><br />
<def>            k3</def> <sym>=</sym> <def>eager $ k</def> <sym>*</sym> <def>k</def> <sym>*</sym> <def>k</def> <sym>::</sym> <def>Double</def><sym>;</sym><br />
<def>            dk</def> <sym>=</sym> <def>eager $</def> <num>1</num> <def></def><sym>/</sym> <def>k</def> <sym>::</sym> <def>Double</def><sym>;</sym><br />
<def>            sk</def> <sym>=</sym> <def>eager $ sin k</def><sym>;</sym><br />
<def>            ck</def> <sym>=</sym> <def>eager $ cos k</def><sym>;</sym><br />
<def></def>        <kwa>in</kwa><br />
<def>            computeSums<br />
                maxIterations</def><br />
                <sym>(</sym><def>iteration</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>)</sym><br />
<def></def>                <sym>(-</sym><def>alt</def><sym>)</sym><br />
<def></def>                <sym>(</sym><def>a1</def> <sym>+</sym> <def>power</def> <sym>(</sym><def></def><num>2</num> <def></def><sym>/</sym> <def></def><num>3</num><def></def><sym>) (</sym><def>k</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>))</sym><br />
<def></def>                <sym>(</sym><def>a2</def> <sym>+</sym> <def>sqrt dk</def><sym>)</sym><br />
<def></def>                <sym>(</sym><def>a3</def> <sym>+</sym> <def></def><num>1</num> <def></def><sym>/ (</sym><def>k</def> <sym>* (</sym><def>k</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>)))</sym><br />
<def></def>                <sym>(</sym><def>a4</def> <sym>+</sym> <def></def><num>1</num> <def></def><sym>/ (</sym><def>k3</def> <sym>*</sym> <def>sk</def> <sym>*</sym> <def>sk</def><sym>))</sym><br />
<def></def>                <sym>(</sym><def>a5</def> <sym>+</sym> <def></def><num>1</num> <def></def><sym>/ (</sym><def>k3</def> <sym>*</sym> <def>ck</def> <sym>*</sym> <def>ck</def><sym>))</sym><br />
<def></def>                <sym>(</sym><def>a6</def> <sym>+</sym> <def>dk</def><sym>)</sym><br />
<def></def>                <sym>(</sym><def>a7</def> <sym>+</sym> <def>dk</def> <sym>*</sym> <def>dk</def><sym>)</sym><br />
<def></def>                <sym>(</sym><def>a8</def> <sym>+</sym> <def>alt</def> <sym>*</sym> <def>dk</def><sym>)</sym><br />
<def></def>                <sym>(</sym><def>a9</def> <sym>+</sym> <def>alt</def> <sym>/ (</sym><def></def><num>2</num> <def></def><sym>*</sym> <def>k</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>))</sym><br />
<def></def>    <kwa>else</kwa><br />
<def>        print</def><br />
            <sym>(</sym><def>List</def><sym>.</sym><def>foldLeftStrict</def><br />
                <sym>(</sym><br />
<def>                    \</def><sym>!</sym><def>acc</def> <sym>!</sym><def>elem</def> <sym>-&gt;</sym><br />
<def>                        acc</def><br />
                        <sym>++</sym> <def>formatWithPattern</def><br />
                            <str>&quot;{0,number,0.000000000}</str><esc>\t</esc><str>{1}</str><esc>\n</esc><str>&quot;</str><def><br />
                            invariantLocale<br />
                            elem</def><br />
                <sym>)</sym><br />
<def></def>                <str>&quot;&quot;</str><def></def><br />
                <sym>[</sym><br />
<def></def>                    <sym>(</sym><def>a1</def><sym>,</sym> <def></def><str>&quot;(2/3)^k&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a2</def><sym>,</sym> <def></def><str>&quot;k^-0.5&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a3</def><sym>,</sym> <def></def><str>&quot;1/k(k+1)&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a4</def><sym>,</sym> <def></def><str>&quot;Flint Hills&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a5</def><sym>,</sym> <def></def><str>&quot;Cookson Hills&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a6</def><sym>,</sym> <def></def><str>&quot;Harmonic&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a7</def><sym>,</sym> <def></def><str>&quot;Riemann Zeta&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a8</def><sym>,</sym> <def></def><str>&quot;Alternating Harmonic&quot;</str><def></def><sym>),</sym><br />
<def></def>                    <sym>(</sym><def>a9</def><sym>,</sym> <def></def><str>&quot;Gregory&quot;</str><def></def><sym>)</sym><br />
<def></def>                <sym>]</sym><br />
<def></def>            <sym>)</sym><br />
<def></def>    <sym>;</sym><br />
<def></def><br />
</source>
