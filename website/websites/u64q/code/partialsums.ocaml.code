<source>
<def></def><com>(* partialsums.ml</com><br />
<com> *</com><br />
<com> * The Great Computer Language Shootout</com><br />
<com> * http://shootout.alioth.debian.org/</com><br />
<com> *</com><br />
<com> * Contributed by Christophe TROESTLER</com><br />
<com> *)</com><def></def><br />
<br />
<kwa>let</kwa> <def>n</def> <sym>=</sym> <def></def><kwa>try</kwa> <def>int_of_string</def> <sym>(</sym><def></def><kwc>Array</kwc><def></def><sym>.</sym><def>get</def> <kwc>Sys</kwc><def></def><sym>.</sym><def>argv</def> <num>1</num><def></def><sym>)</sym> <def></def><kwa>with</kwa> <def>_</def> <sym>-&gt;</sym> <def></def><num>25000</num><br />
<def></def><br />
<kwa>let</kwa> <def></def><sym>() =</sym><br />
<def></def>  <kwa>let</kwa> <def>sum</def> <sym>=</sym> <def></def><kwb>ref</kwb> <def></def><num>0.0</num> <def></def><kwa>in</kwa><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>0</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do</kwa> <def>sum</def> <sym>:= !</sym><def>sum</def> <sym>+. (</sym><def></def><num>2</num><def></def><sym>. /.</sym> <def></def><num>3</num><def></def><sym>.)**(</sym><def></def><kwb>float</kwb> <def>k</def><sym>)</sym> <def></def><kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>(2/3)^k</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do</kwa> <def>sum</def> <sym>:= !</sym><def>sum</def> <sym>+.</sym> <def></def><num>1</num><def></def><sym>. /.</sym> <def>sqrt</def><sym>(</sym><def></def><kwb>float</kwb> <def>k</def><sym>)</sym> <def></def><kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>k^-0.5</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do let</kwa> <def>k</def> <sym>=</sym> <def></def><kwb>float</kwb> <def>k</def> <kwa>in</kwa> <def>sum</def> <sym>:= !</sym><def>sum</def> <sym>+.</sym> <def></def><num>1.0</num><def></def><sym>/.(</sym><def>k</def><sym>*.(</sym><def>k</def><sym>+</sym><def></def><num>.1.0</num><def></def><sym>))</sym> <def></def><kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>1/k(k+1)</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do</kwa><br />
<def></def>    <kwa>let</kwa> <def>k</def> <sym>=</sym> <def></def><kwb>float</kwb> <def>k</def> <kwa>in let</kwa>  <def>sk</def> <sym>=</sym> <def>sin</def><sym>(</sym><def>k</def><sym>)</sym> <def></def><kwa>in</kwa><br />
<def>    sum</def> <sym>:= !</sym><def>sum</def> <sym>+.</sym> <def></def><num>1.0</num> <def></def><sym>/. (</sym><def>k</def> <sym>*.</sym> <def>k</def> <sym>*.</sym> <def>k</def> <sym>*.</sym> <def>sk</def> <sym>*.</sym> <def>sk</def><sym>)</sym><br />
<def></def>  <kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>Flint Hills</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do</kwa><br />
<def></def>    <kwa>let</kwa> <def>k</def> <sym>=</sym> <def></def><kwb>float</kwb> <def>k</def> <kwa>in let</kwa> <def>ck</def> <sym>=</sym> <def>cos</def><sym>(</sym><def>k</def><sym>)</sym> <def></def><kwa>in</kwa><br />
<def>    sum</def> <sym>:= !</sym><def>sum</def> <sym>+.</sym> <def></def><num>1.0</num> <def></def><sym>/. (</sym><def>k</def> <sym>*.</sym> <def>k</def> <sym>*.</sym> <def>k</def> <sym>*.</sym> <def>ck</def> <sym>*.</sym> <def>ck</def><sym>)</sym><br />
<def></def>  <kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>Cookson Hills</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do</kwa> <def>sum</def> <sym>:= !</sym><def>sum</def> <sym>+.</sym> <def></def><num>1</num><def></def><sym>. /.</sym> <def></def><kwb>float</kwb> <def>k</def> <kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>Harmonic</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do let</kwa> <def>k</def> <sym>=</sym> <def></def><kwb>float</kwb> <def>k</def> <kwa>in</kwa> <def>sum</def> <sym>:= !</sym><def>sum</def> <sym>+.</sym> <def></def><num>1</num><def></def><sym>. /. (</sym><def>k</def> <sym>*.</sym> <def>k</def><sym>)</sym> <def></def><kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>Riemann Zeta</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym>  <def></def><kwa>let</kwa> <def>a</def> <sym>=</sym> <def></def><kwb>ref</kwb><def></def><sym>(-</sym><def></def><num>1.0</num><def></def><sym>)</sym> <def></def><kwa>in</kwa><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do</kwa> <def>a</def> <sym>:= -. !</sym><def>a</def><sym>;</sym> <def>sum</def> <sym>:= !</sym><def>sum</def> <sym>+. !</sym><def>a</def> <sym>/.</sym> <def></def><kwb>float</kwb> <def>k</def> <kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>Alternating Harmonic</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><sym>;</sym><br />
<def><br />
  sum</def> <sym>:=</sym> <def></def><num>0.0</num><def></def><sym>;</sym>  <def>a</def> <sym>:= -</sym><def></def><num>1.0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa> <def>k</def> <sym>=</sym> <def></def><num>1</num> <def></def><kwa>to</kwa> <def>n</def> <kwa>do</kwa> <def>a</def> <sym>:= -. !</sym><def>a</def><sym>;</sym> <def>sum</def> <sym>:= !</sym><def>sum</def> <sym>+. !</sym><def>a</def> <sym>/. (</sym><def></def><num>2</num><def></def><sym>. *.</sym> <def></def><kwb>float</kwb> <def>k</def> <sym>-.</sym> <def></def><num>1</num><def></def><sym>.)</sym> <def></def><kwa>done</kwa><def></def><sym>;</sym><br />
<def></def>  <kwc>Printf</kwc><def></def><sym>.</sym><def>printf</def> <str>&quot;%.9f</str><esc>\t</esc><str>Gregory</str><esc>\n</esc><str>&quot;</str><def></def> <sym>!</sym><def>sum</def><br />
</source>
