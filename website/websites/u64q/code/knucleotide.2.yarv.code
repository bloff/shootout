<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by jose fco. gonzalez</span>
<span class="hl slc"># modified by Sokolov Yura</span>

seq <span class="hl sym">=</span> String<span class="hl sym">.</span>new

<span class="hl kwa">def</span> <span class="hl kwd">frecuency</span><span class="hl sym">(</span> seq<span class="hl sym">,</span>length <span class="hl sym">)</span>
    n<span class="hl sym">,</span> table <span class="hl sym">=</span> seq<span class="hl sym">.</span>length <span class="hl sym">-</span> length <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">,</span> Hash<span class="hl sym">.</span><span class="hl kwd">new</span><span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">)</span>
    f<span class="hl sym">,</span> i <span class="hl sym">=</span> <span class="hl kwa">nil</span><span class="hl sym">,</span> <span class="hl kwa">nil</span>
    <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">...</span> length<span class="hl sym">).</span>each <span class="hl kwa">do</span> <span class="hl sym">|</span>f<span class="hl sym">|</span>
        <span class="hl sym">(</span>f <span class="hl sym">...</span> n<span class="hl sym">).</span><span class="hl kwd">step</span><span class="hl sym">(</span>length<span class="hl sym">)</span> <span class="hl kwa">do</span> <span class="hl sym">|</span>i<span class="hl sym">|</span>
            table<span class="hl sym">[</span>seq<span class="hl sym">[</span>i<span class="hl sym">,</span>length<span class="hl sym">]] +=</span> <span class="hl num">1</span>
        <span class="hl kwa">end</span>
    <span class="hl kwa">end</span>
    <span class="hl sym">[</span>n<span class="hl sym">,</span>table<span class="hl sym">]</span>

<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">sort_by_freq</span><span class="hl sym">(</span> seq<span class="hl sym">,</span>length <span class="hl sym">)</span>
    n<span class="hl sym">,</span>table <span class="hl sym">=</span> <span class="hl kwd">frecuency</span><span class="hl sym">(</span> seq<span class="hl sym">,</span>length <span class="hl sym">)</span>
    a<span class="hl sym">,</span> b<span class="hl sym">,</span> v <span class="hl sym">=</span> <span class="hl kwa">nil</span><span class="hl sym">,</span> <span class="hl kwa">nil</span><span class="hl sym">,</span> <span class="hl kwa">nil</span>
    table<span class="hl sym">.</span>sort<span class="hl sym">{|</span>a<span class="hl sym">,</span>b<span class="hl sym">|</span> b<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] &lt;=&gt;</span> a<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]}.</span>each <span class="hl kwa">do</span> <span class="hl sym">|</span>v<span class="hl sym">|</span>
        puts <span class="hl str">&quot;%s %.3f&quot;</span> <span class="hl sym">% [</span>v<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">].</span>upcase<span class="hl sym">,((</span>v<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]*</span><span class="hl num">100</span><span class="hl sym">).</span>to_f<span class="hl sym">/</span>n<span class="hl sym">)]</span>
    <span class="hl kwa">end</span>
    puts
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">find_seq</span><span class="hl sym">(</span> seq<span class="hl sym">,</span>s <span class="hl sym">)</span>
    n<span class="hl sym">,</span>table <span class="hl sym">=</span> <span class="hl kwd">frecuency</span><span class="hl sym">(</span> seq<span class="hl sym">,</span>s<span class="hl sym">.</span>length <span class="hl sym">)</span>
    puts <span class="hl str">&quot;#{table[s].to_s}</span><span class="hl esc">\t</span><span class="hl str">#{s.upcase}&quot;</span>
<span class="hl kwa">end</span>

line <span class="hl sym">=</span> <span class="hl kwc">STDIN</span><span class="hl sym">.</span>gets <span class="hl kwa">while</span> line <span class="hl sym">!</span>~ <span class="hl kwc">/^&gt;THREE/</span>
line <span class="hl sym">=</span> <span class="hl kwc">STDIN</span><span class="hl sym">.</span>gets
<span class="hl kwa">while</span> <span class="hl sym">(</span>line <span class="hl sym">!</span>~ <span class="hl kwc">/^&gt;/</span><span class="hl sym">) &amp;</span> line <span class="hl kwa">do</span>
    seq <span class="hl sym">&lt;&lt;</span> line<span class="hl sym">.</span>chomp
    line <span class="hl sym">=</span> <span class="hl kwc">STDIN</span><span class="hl sym">.</span>gets
<span class="hl kwa">end</span>

<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">].</span>each <span class="hl sym">{|</span>i<span class="hl sym">|</span> <span class="hl kwd">sort_by_freq</span><span class="hl sym">(</span> seq<span class="hl sym">,</span>i <span class="hl sym">) }</span>

<span class="hl sym">%</span><span class="hl kwd">w</span><span class="hl sym">(</span>ggt ggta ggtatt ggtattttaatt ggtattttaatttatagt<span class="hl sym">).</span>each<span class="hl sym">{|</span>s<span class="hl sym">|</span> <span class="hl kwd">find_seq</span><span class="hl sym">(</span> seq<span class="hl sym">,</span>s<span class="hl sym">) }</span>
