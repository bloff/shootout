<source>
<def></def><sym>&lt;</sym><def>?php</def><br />
<com>/* The Computer Language Shootout</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com></com><br />
<com>   contributed by Wing-Chung Leung</com><br />
<com>   modified by Isaac Gouy</com><br />
<com>*/</com><def></def><br />
<br />
<slc># error_reporting(E_STRICT);</slc><br />
<def></def><br />
<kwa>define</kwa> <def></def><sym>(</sym><def></def><str>'IM'</str><def></def><sym>,</sym> <def></def><num>139968</num><def></def><sym>);</sym><br />
<def></def><kwa>define</kwa> <def></def><sym>(</sym><def></def><str>'IA'</str><def></def><sym>,</sym> <def></def><num>3877</num><def></def><sym>);</sym><br />
<def></def><kwa>define</kwa> <def></def><sym>(</sym><def></def><str>'IC'</str><def></def><sym>,</sym> <def></def><num>29573</num><def></def><sym>);</sym><br />
<def></def><br />
<kwa>function</kwa> <def></def><kwd>gen_random</kwd><def></def><sym>(</sym><def></def><kwc>$max</kwc><def></def><sym>) {</sym><br />
<def>   static</def> <kwc>$last</kwc> <def></def><sym>=</sym> <def></def><num>42</num><def></def><sym>;</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwc>$max</kwc> <def></def><sym>* (</sym><def></def><kwc>$last</kwc> <def></def><sym>= (</sym><def></def><kwc>$last</kwc> <def></def><sym>*</sym> <def>IA</def> <sym>+</sym> <def>IC</def><sym>)</sym> <def>% IM</def><sym>) /</sym> <def>IM</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<com>/* Weighted selection from alphabet */</com><def></def><br />
<br />
<kwa>function</kwa> <def></def><kwd>makeCumulative</kwd><def></def><sym>(&amp;</sym><def></def><kwc>$genelist</kwc><def></def><sym>) {</sym><br />
<def></def>   <kwc>$count</kwc> <def></def><sym>=</sym> <def></def><kwa>count</kwa><def></def><sym>(</sym><def></def><kwc>$genelist</kwc><def></def><sym>);</sym><br />
<def></def>   <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwc>$i</kwc><def></def><sym>=</sym><def></def><num>1</num><def></def><sym>;</sym> <def></def><kwc>$i</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$count</kwc><def></def><sym>;</sym> <def></def><kwc>$i</kwc><def></def><sym>++) {</sym><br />
<def></def>      <kwc>$genelist</kwc><def></def><sym>[</sym><def></def><kwc>$i</kwc><def></def><sym>][</sym><def></def><num>1</num><def></def><sym>] +=</sym> <def></def><kwc>$genelist</kwc><def></def><sym>[</sym><def></def><kwc>$i</kwc><def></def><sym>-</sym><def></def><num>1</num><def></def><sym>][</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<br />
<kwa>function</kwa> <def></def><kwd>selectRandom</kwd><def></def><sym>(&amp;</sym><def></def><kwc>$a</kwc><def></def><sym>) {</sym><br />
<def></def>   <kwc>$r</kwc> <def></def><sym>=</sym> <def></def><kwd>gen_random</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>);</sym><br />
<def></def>   <kwc>$hi</kwc> <def></def><sym>=</sym> <def></def><kwa>sizeof</kwa><def></def><sym>(</sym><def></def><kwc>$a</kwc><def></def><sym>);</sym><br />
<def></def><br />
   <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwc>$i</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$i</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$hi</kwc><def></def><sym>;</sym> <def></def><kwc>$i</kwc><def></def><sym>++) {</sym><br />
<def></def>      <kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>$r</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><kwc>$i</kwc><def></def><sym>][</sym><def></def><num>1</num><def></def><sym>])</sym> <def></def><kwa>return</kwa> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><kwc>$i</kwc><def></def><sym>][</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwc>$a</kwc><def></def><sym>[</sym><def></def><kwc>$hi</kwc><def></def><sym>-</sym><def></def><num>1</num><def></def><sym>][</sym><def></def><num>0</num><def></def><sym>];</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<com>/* Generate and write FASTA format */</com><def></def><br />
<br />
<kwa>define</kwa> <def></def><sym>(</sym><def></def><str>'LINE_LENGTH'</str><def></def><sym>,</sym> <def></def><num>60</num><def></def><sym>);</sym><br />
<def></def><br />
<br />
<kwa>function</kwa> <def></def><kwd>makeRandomFasta</kwd><def></def><sym>(</sym><def></def><kwc>$id</kwc><def></def><sym>,</sym> <def></def><kwc>$desc</kwc><def></def><sym>, &amp;</sym><def></def><kwc>$genelist</kwc><def></def><sym>,</sym> <def></def><kwc>$n</kwc><def></def><sym>) {</sym><br />
<def></def>   <kwa>print</kwa><def></def><sym>(</sym><def></def><str>&quot;&gt;$id $desc</str><esc>\n</esc><str>&quot;</str><def></def><sym>);</sym><br />
<def></def><br />
   <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwc>$todo</kwc> <def></def><sym>=</sym> <def></def><kwc>$n</kwc><def></def><sym>;</sym> <def></def><kwc>$todo</kwc> <def></def><sym>&gt;</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$todo</kwc> <def></def><sym>-=</sym> <def>LINE_LENGTH</def><sym>) {</sym><br />
<def></def>      <kwc>$pick</kwc> <def></def><sym>=</sym> <def></def><str>''</str><def></def><sym>;</sym><br />
<def></def>      <kwc>$m</kwc> <def></def><sym>=</sym> <def></def><kwc>$todo</kwc> <def></def><sym>&lt;</sym> <def>LINE_LENGTH ?</def> <kwc>$todo</kwc> <def></def><sym>:</sym> <def>LINE_LENGTH</def><sym>;</sym><br />
<def></def>      <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwc>$i</kwc><def></def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$i</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$m</kwc><def></def><sym>;</sym> <def></def><kwc>$i</kwc><def></def><sym>++)</sym> <def></def><kwc>$pick</kwc> <def>.</def><sym>=</sym> <def></def><kwd>selectRandom</kwd><def></def><sym>(&amp;</sym><def></def><kwc>$genelist</kwc><def></def><sym>);</sym><br />
<def></def>      <kwc>$pick</kwc> <def>.</def><sym>=</sym> <def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>      <kwa>print</kwa><def></def><sym>(</sym> <def></def><kwc>$pick</kwc> <def></def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<br />
<kwa>function</kwa> <def></def><kwd>makeRepeatFasta</kwd><def></def><sym>(</sym><def></def><kwc>$id</kwc><def></def><sym>,</sym> <def></def><kwc>$desc</kwc><def></def><sym>,</sym> <def></def><kwc>$s</kwc><def></def><sym>,</sym> <def></def><kwc>$n</kwc><def></def><sym>) {</sym><br />
<def></def>   <kwa>echo</kwa> <def></def><str>&quot;&gt;$id $desc</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>   <kwc>$i</kwc> <def></def><sym>=</sym> <def></def><num>0</num><def></def><sym>;</sym> <def></def><kwc>$sLength</kwc> <def></def><sym>=</sym> <def></def><kwa>strlen</kwa><def></def><sym>(</sym><def></def><kwc>$s</kwc><def></def><sym>);</sym> <def></def><kwc>$lineLength</kwc> <def></def><sym>=</sym> <def>LINE_LENGTH</def><sym>;</sym><br />
<def></def>   <kwa>while</kwa> <def></def><sym>(</sym><def></def><kwc>$n</kwc> <def></def><sym>&gt;</sym> <def></def><num>0</num><def></def><sym>) {</sym><br />
<def></def>      <kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>$n</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$lineLength</kwc><def></def><sym>)</sym> <def></def><kwc>$lineLength</kwc> <def></def><sym>=</sym> <def></def><kwc>$n</kwc><def></def><sym>;</sym><br />
<def></def>      <kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>$i</kwc> <def></def><sym>+</sym> <def></def><kwc>$lineLength</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>$sLength</kwc><def></def><sym>){</sym><br />
<def></def>         <kwa>print</kwa><def></def><sym>(</sym><def></def><kwa>substr</kwa><def></def><sym>(</sym><def></def><kwc>$s</kwc><def></def><sym>,</sym><def></def><kwc>$i</kwc><def></def><sym>,</sym><def></def><kwc>$lineLength</kwc><def></def><sym>));</sym> <def></def><kwa>print</kwa><def></def><sym>(</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>);</sym><br />
<def></def>         <kwc>$i</kwc> <def></def><sym>+=</sym> <def></def><kwc>$lineLength</kwc><def></def><sym>;</sym><br />
<def></def>      <sym>}</sym> <def></def><kwa>else</kwa> <def></def><sym>{</sym><br />
<def></def>         <kwa>print</kwa><def></def><sym>(</sym><def></def><kwa>substr</kwa><def></def><sym>(</sym><def></def><kwc>$s</kwc><def></def><sym>,</sym><def></def><kwc>$i</kwc><def></def><sym>));</sym><br />
<def></def>         <kwc>$i</kwc> <def></def><sym>=</sym> <def></def><kwc>$lineLength</kwc> <def></def><sym>- (</sym><def></def><kwc>$sLength</kwc> <def></def><sym>-</sym> <def></def><kwc>$i</kwc><def></def><sym>);</sym><br />
<def></def>         <kwa>print</kwa><def></def><sym>(</sym><def></def><kwa>substr</kwa><def></def><sym>(</sym><def></def><kwc>$s</kwc><def></def><sym>,</sym><def></def><num>0</num><def></def><sym>,</sym><def></def><kwc>$i</kwc><def></def><sym>));</sym> <def></def><kwa>print</kwa><def></def><sym>(</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>);</sym><br />
<def></def>      <sym>}</sym><br />
<def></def>      <kwc>$n</kwc> <def></def><sym>-=</sym> <def></def><kwc>$lineLength</kwc><def></def><sym>;</sym><br />
<def></def>   <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<br />
<com>/* Main -- define alphabets, make 3 fragments */</com><def></def><br />
<br />
<kwc>$iub</kwc><def></def><sym>=</sym><def></def><kwa>array</kwa><def></def><sym>(</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'a'</str><def></def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'c'</str><def></def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'g'</str><def></def><sym>,</sym> <def></def><num>0.12</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'t'</str><def></def><sym>,</sym> <def></def><num>0.27</num><def></def><sym>),</sym><br />
<def></def><br />
   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'B'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'D'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'H'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'K'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'M'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'N'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'R'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'S'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'V'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'W'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'Y'</str><def></def><sym>,</sym> <def></def><num>0.02</num><def></def><sym>)</sym><br />
<def></def><sym>);</sym><br />
<def></def><br />
<kwc>$homosapiens</kwc> <def></def><sym>=</sym> <def></def><kwa>array</kwa><def></def><sym>(</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'a'</str><def></def><sym>,</sym> <def></def><num>0.3029549426680</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'c'</str><def></def><sym>,</sym> <def></def><num>0.1979883004921</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'g'</str><def></def><sym>,</sym> <def></def><num>0.1975473066391</num><def></def><sym>),</sym><br />
<def></def>   <kwa>array</kwa><def></def><sym>(</sym><def></def><str>'t'</str><def></def><sym>,</sym> <def></def><num>0.3015094502008</num><def></def><sym>)</sym><br />
<def></def><sym>);</sym><br />
<def></def><br />
<kwc>$alu</kwc> <def></def><sym>=</sym><br />
<def></def>   <str>'GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG'</str><def> .</def><br />
   <str>'GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA'</str><def> .</def><br />
   <str>'CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT'</str><def> .</def><br />
   <str>'ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA'</str><def> .</def><br />
   <str>'GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG'</str><def> .</def><br />
   <str>'AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC'</str><def> .</def><br />
   <str>'AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA'</str><def></def><sym>;</sym><br />
<def></def><br />
<kwc>$n</kwc> <def></def><sym>=</sym> <def></def><num>1000</num><def></def><sym>;</sym><br />
<def></def><br />
<kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>$_SERVER</kwc><def></def><sym>[</sym><def></def><str>'argc'</str><def></def><sym>] &gt;</sym> <def></def><num>1</num><def></def><sym>)</sym> <def></def><kwc>$n</kwc> <def></def><sym>=</sym> <def></def><kwc>$_SERVER</kwc><def></def><sym>[</sym><def></def><str>'argv'</str><def></def><sym>][</sym><def></def><num>1</num><def></def><sym>];</sym><br />
<def></def><br />
   <kwd>makeCumulative</kwd><def></def><sym>(&amp;</sym><def></def><kwc>$iub</kwc><def></def><sym>);</sym><br />
<def></def>   <kwd>makeCumulative</kwd><def></def><sym>(&amp;</sym><def></def><kwc>$homosapiens</kwc><def></def><sym>);</sym><br />
<def></def><br />
   <kwd>makeRepeatFasta</kwd><def></def><sym>(</sym><def></def><str>'ONE'</str><def></def><sym>,</sym> <def></def><str>'Homo sapiens alu'</str><def></def><sym>,</sym> <def></def><kwc>$alu</kwc><def></def><sym>,</sym> <def></def><kwc>$n</kwc><def></def><sym>*</sym><def></def><num>2</num><def></def><sym>);</sym><br />
<def></def>   <kwd>makeRandomFasta</kwd><def></def><sym>(</sym><def></def><str>'TWO'</str><def></def><sym>,</sym> <def></def><str>'IUB ambiguity codes'</str><def></def><sym>,</sym> <def></def><kwc>$iub</kwc><def></def><sym>,</sym> <def></def><kwc>$n</kwc><def></def><sym>*</sym><def></def><num>3</num><def></def><sym>);</sym><br />
<def></def>   <kwd>makeRandomFasta</kwd><def></def><sym>(</sym><def></def><str>'THREE'</str><def></def><sym>,</sym> <def></def><str>'Homo sapiens frequency'</str><def></def><sym>,</sym> <def></def><kwc>$homosapiens</kwc><def></def><sym>,</sym> <def></def><kwc>$n</kwc><def></def><sym>*</sym><def></def><num>5</num><def></def><sym>);</sym><br />
<def>?</def><sym>&gt;</sym><def></def><br />
</source>
