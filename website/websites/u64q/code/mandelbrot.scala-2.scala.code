<source>
<def></def><com>/* The Computer Language Shootout</com><br />
<com>   http://shootout.alioth.debian.org/</com><br />
<com>   contributed by Isaac Gouy</com><br />
<com>*/</com><def></def><br />
<br />
<kwa>import</kwa> <def>java</def><sym>.</sym><def>io</def><sym>.</sym><def></def><kwc>BufferedOutputStream</kwc><br />
<def></def><br />
<kwa>object</kwa> <def>mandelbrot</def> <sym>{</sym><br />
<def></def>   <kwa>def</kwa> <def>main</def><sym>(</sym><def>args</def><sym>:</sym> <def></def><kwc>Array</kwc><def></def><sym>[</sym><def></def><kwc>String</kwc><def></def><sym>]) = {</sym><br />
<def></def>      <kwa>val</kwa> <def>side</def> <sym>=</sym> <def></def><kwc>Integer</kwc><def></def><sym>.</sym><def>parseInt</def><sym>(</sym><def>args</def><sym>(</sym><def></def><num>0</num><def></def><sym>))</sym><br />
<def></def>      <kwa>val</kwa> <def>limitSquared</def> <sym>=</sym> <def></def><num>4.0</num><br />
<def></def>      <kwa>val</kwa> <def>max</def> <sym>=</sym> <def></def><num>50</num><br />
<def></def>      <kwa>var</kwa> <def>bits</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwa>var</kwa> <def>bitnum</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwa>val</kwa> <def>w</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwc>BufferedOutputStream</kwc><def></def><sym>(</sym><def></def><kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>)</sym><br />
<def><br />
      Console</def><sym>.</sym><def>println</def><sym>(</sym><def></def><str>&quot;P4</str><esc>\n</esc><str>&quot;</str><def></def> <sym>+</sym> <def>side</def> <sym>+</sym> <def></def><str>&quot; &quot;</str><def></def> <sym>+</sym> <def>side</def><sym>)</sym><br />
<def></def><br />
      <kwa>var</kwa> <def>y</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>      <kwa>while</kwa> <def></def><sym>(</sym><def>y</def> <sym>&lt;</sym> <def>side</def><sym>){</sym><br />
<def></def><br />
         <kwa>var</kwa> <def>x</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>         <kwa>while</kwa> <def></def><sym>(</sym><def>x</def> <sym>&lt;</sym> <def>side</def><sym>){</sym><br />
<def></def><br />
            <kwa>val</kwa> <def>cr</def> <sym>=</sym> <def></def><num>2.0</num> <def></def><sym>*</sym> <def>x</def> <sym>/</sym> <def>side</def> <sym>-</sym> <def></def><num>1.5</num><br />
<def></def>            <kwa>val</kwa> <def>ci</def> <sym>=</sym> <def></def><num>2.0</num> <def></def><sym>*</sym> <def>y</def> <sym>/</sym> <def>side</def> <sym>-</sym> <def></def><num>1.0</num><br />
<def></def><br />
            <kwa>var</kwa> <def>zr</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym> <def></def><kwa>var</kwa> <def>zi</def> <sym>=</sym> <def></def><num>0.0</num><br />
<def></def>            <kwa>var</kwa> <def>tr</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym> <def></def><kwa>var</kwa> <def>ti</def> <sym>=</sym> <def></def><num>0.0</num><br />
<def></def><br />
            <kwa>var</kwa> <def>j</def> <sym>=</sym> <def>max</def><br />
            <kwa>do</kwa> <def></def><sym>{</sym><br />
<def>               zi</def> <sym>=</sym> <def></def><num>2.0</num> <def></def><sym>*</sym> <def>zr</def> <sym>*</sym> <def>zi</def> <sym>+</sym> <def>ci<br />
               zr</def> <sym>=</sym> <def>tr</def> <sym>-</sym> <def>ti</def> <sym>+</sym> <def>cr<br />
               ti</def> <sym>=</sym> <def>zi</def><sym>*</sym><def>zi<br />
               tr</def> <sym>=</sym> <def>zr</def><sym>*</sym><def>zr<br />
<br />
               j</def> <sym>=</sym> <def>j</def> <sym>-</sym> <def></def><num>1</num><br />
<def></def>            <sym>}</sym> <def></def><kwa>while</kwa> <def></def><sym>(!(</sym><def>tr</def> <sym>+</sym> <def>ti</def> <sym>&gt;</sym> <def>limitSquared</def><sym>) &amp;&amp;</sym> <def>j</def> <sym>&gt;</sym> <def></def><num>0</num><def></def><sym>)</sym><br />
<def><br />
<br />
            bits</def> <sym>=</sym> <def>bits</def> <sym>&lt;&lt;</sym> <def></def><num>1</num><br />
<def></def>            <kwa>if</kwa> <def></def><sym>(!(</sym><def>tr</def> <sym>+</sym> <def>ti</def> <sym>&gt;</sym> <def>limitSquared</def><sym>))</sym> <def>bits</def> <sym>=</sym> <def>bits</def> <sym>+</sym> <def></def><num>1</num><br />
<def>            bitnum</def> <sym>=</sym> <def>bitnum</def> <sym>+</sym> <def></def><num>1</num><br />
<def></def><br />
            <kwa>if</kwa> <def></def><sym>(</sym><def>x</def> <sym>==</sym> <def>side</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>){</sym><br />
<def>               bits</def> <sym>=</sym> <def>bits</def> <sym>&lt;&lt; (</sym><def></def><num>8</num> <def></def><sym>-</sym> <def>bitnum</def><sym>)</sym><br />
<def>               bitnum</def> <sym>=</sym> <def></def><num>8</num><br />
<def></def>            <sym>}</sym><br />
<def></def><br />
            <kwa>if</kwa> <def></def><sym>(</sym><def>bitnum</def> <sym>==</sym> <def></def><num>8</num><def></def><sym>){</sym><br />
<def>               w</def><sym>.</sym><def>write</def><sym>(</sym><def>bits</def><sym>.</sym><def>toByte</def><sym>)</sym><br />
<def>               bits</def> <sym>=</sym> <def></def><num>0</num><br />
<def>               bitnum</def> <sym>=</sym> <def></def><num>0</num><br />
<def></def>            <sym>}</sym><br />
<def><br />
            x</def> <sym>=</sym> <def>x</def> <sym>+</sym> <def></def><num>1</num><br />
<def></def>         <sym>}</sym><br />
<def>         y</def> <sym>=</sym> <def>y</def> <sym>+</sym> <def></def><num>1</num><br />
<def></def>      <sym>}</sym><br />
<def>      w</def><sym>.</sym><def>close</def><br />
   <sym>}</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
