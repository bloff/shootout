<span class="hl com">{ The Computer Language Benchmarks Game</span>
<span class="hl com">  http://shootout.alioth.debian.org</span>
<span class="hl com"></span>
<span class="hl com">  contributed by Ian Osgood</span>
<span class="hl com">  modified by Vincent Snijders</span>
<span class="hl com">}</span>

<span class="hl kwa">program</span> spectralNorm<span class="hl sym">;</span>

<span class="hl kwa">var</span> n<span class="hl sym">,</span>i <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
    u<span class="hl sym">,</span>v<span class="hl sym">,</span>tmp <span class="hl sym">:</span> <span class="hl kwa">array of</span> <span class="hl kwb">double</span><span class="hl sym">;</span>
    vBv<span class="hl sym">,</span>vv <span class="hl sym">:</span> <span class="hl kwb">double</span><span class="hl sym">;</span>

<span class="hl kwa">function</span> <span class="hl kwd">A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">):</span> <span class="hl kwb">double</span><span class="hl sym">;</span> <span class="hl kwa">inline</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
  A <span class="hl sym">:=</span> <span class="hl num">1</span> <span class="hl sym">/ ((</span>i<span class="hl sym">+</span>j<span class="hl sym">)*(</span>i<span class="hl sym">+</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">div</span> <span class="hl num">2</span> <span class="hl sym">+</span> i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">);</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mulAv</span><span class="hl sym">(</span><span class="hl kwa">var</span> v<span class="hl sym">,</span> Av <span class="hl sym">:</span> <span class="hl kwa">array of</span> <span class="hl kwb">double</span><span class="hl sym">);</span>
<span class="hl kwa">var</span> i<span class="hl sym">,</span>j <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
  <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl kwd">low</span><span class="hl sym">(</span>Av<span class="hl sym">)</span> <span class="hl kwa">to</span> <span class="hl kwd">high</span><span class="hl sym">(</span>Av<span class="hl sym">)</span> <span class="hl kwa">do</span>
  <span class="hl kwa">begin</span>
    Av<span class="hl sym">[</span>i<span class="hl sym">] :=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> j <span class="hl sym">:=</span> <span class="hl kwd">low</span><span class="hl sym">(</span>v<span class="hl sym">)</span> <span class="hl kwa">to</span> <span class="hl kwd">high</span><span class="hl sym">(</span>v<span class="hl sym">)</span> <span class="hl kwa">do</span>
      Av<span class="hl sym">[</span>i<span class="hl sym">] :=</span> Av<span class="hl sym">[</span>i<span class="hl sym">] +</span> <span class="hl kwd">A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">) *</span> v<span class="hl sym">[</span>j<span class="hl sym">];</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mulAtv</span><span class="hl sym">(</span><span class="hl kwa">var</span> v<span class="hl sym">,</span> Atv <span class="hl sym">:</span> <span class="hl kwa">array of</span> <span class="hl kwb">double</span><span class="hl sym">);</span>
<span class="hl kwa">var</span> i<span class="hl sym">,</span>j <span class="hl sym">:</span> <span class="hl kwb">integer</span><span class="hl sym">;</span>
<span class="hl kwa">begin</span>
  <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl kwd">low</span><span class="hl sym">(</span>Atv<span class="hl sym">)</span> <span class="hl kwa">to</span> <span class="hl kwd">high</span><span class="hl sym">(</span>Atv<span class="hl sym">)</span> <span class="hl kwa">do</span>
  <span class="hl kwa">begin</span>
    Atv<span class="hl sym">[</span>i<span class="hl sym">] :=</span> <span class="hl num">0.0</span><span class="hl sym">;</span>
    <span class="hl kwa">for</span> j <span class="hl sym">:=</span> <span class="hl kwd">low</span><span class="hl sym">(</span>v<span class="hl sym">)</span> <span class="hl kwa">to</span> <span class="hl kwd">high</span><span class="hl sym">(</span>v<span class="hl sym">)</span> <span class="hl kwa">do</span>
      Atv<span class="hl sym">[</span>i<span class="hl sym">] :=</span> Atv<span class="hl sym">[</span>i<span class="hl sym">] +</span> <span class="hl kwd">A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">) *</span> v<span class="hl sym">[</span>j<span class="hl sym">];</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl kwa">procedure</span> <span class="hl kwd">mulAtAv</span><span class="hl sym">(</span><span class="hl kwa">var</span> v<span class="hl sym">,</span> AtAv <span class="hl sym">:</span> <span class="hl kwa">array of</span> <span class="hl kwb">double</span><span class="hl sym">);</span>
<span class="hl kwa">begin</span>
  <span class="hl kwd">mulAv</span><span class="hl sym">(</span>v<span class="hl sym">,</span> tmp<span class="hl sym">);</span>
  <span class="hl kwd">mulAtv</span><span class="hl sym">(</span>tmp<span class="hl sym">,</span> AtAv<span class="hl sym">);</span>
<span class="hl kwa">end</span><span class="hl sym">;</span>

<span class="hl kwa">begin</span>
  <span class="hl kwd">Val</span><span class="hl sym">(</span><span class="hl kwd">paramstr</span><span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">),</span> n<span class="hl sym">,</span> i<span class="hl sym">);</span>
  <span class="hl kwd">SetLength</span><span class="hl sym">(</span>u<span class="hl sym">,</span> n<span class="hl sym">);</span>
  <span class="hl kwd">SetLength</span><span class="hl sym">(</span>v<span class="hl sym">,</span> n<span class="hl sym">);</span>
  <span class="hl kwd">SetLength</span><span class="hl sym">(</span>tmp<span class="hl sym">,</span> n<span class="hl sym">);</span>

  <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl kwd">low</span><span class="hl sym">(</span>u<span class="hl sym">)</span> <span class="hl kwa">to</span> <span class="hl kwd">high</span><span class="hl sym">(</span>u<span class="hl sym">)</span> <span class="hl kwa">do</span> u<span class="hl sym">[</span>i<span class="hl sym">] :=</span> <span class="hl num">1.0</span><span class="hl sym">;</span>

  <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl num">1</span> <span class="hl kwa">to</span> <span class="hl num">10</span> <span class="hl kwa">do begin</span> <span class="hl kwd">mulAtAv</span><span class="hl sym">(</span>u<span class="hl sym">,</span>v<span class="hl sym">);</span> <span class="hl kwd">mulAtAv</span><span class="hl sym">(</span>v<span class="hl sym">,</span>u<span class="hl sym">)</span> <span class="hl kwa">end</span><span class="hl sym">;</span>

  <span class="hl kwa">for</span> i <span class="hl sym">:=</span> <span class="hl kwd">low</span><span class="hl sym">(</span>u<span class="hl sym">)</span> <span class="hl kwa">to</span> <span class="hl kwd">high</span><span class="hl sym">(</span>u<span class="hl sym">)</span> <span class="hl kwa">do</span>
  <span class="hl kwa">begin</span>
    vBv <span class="hl sym">:=</span> vBv <span class="hl sym">+</span> u<span class="hl sym">[</span>i<span class="hl sym">]*</span>v<span class="hl sym">[</span>i<span class="hl sym">];</span>
    vv  <span class="hl sym">:=</span> vv  <span class="hl sym">+</span> v<span class="hl sym">[</span>i<span class="hl sym">]*</span>v<span class="hl sym">[</span>i<span class="hl sym">];</span>
  <span class="hl kwa">end</span><span class="hl sym">;</span>

  <span class="hl kwd">writeln</span><span class="hl sym">(</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>vBv<span class="hl sym">/</span>vv<span class="hl sym">):</span><span class="hl num">0</span><span class="hl sym">:</span><span class="hl num">9</span><span class="hl sym">);</span>
<span class="hl kwa">end</span><span class="hl sym">.</span>
