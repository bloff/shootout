<source>
<def></def><slc>//   The Computer Language Benchmarks Game</slc><br />
<def></def><slc>//   http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>//   contributed by Razzi</slc><br />
<def></def><br />
<kwa>class</kwa> <def>partialsums</def> <sym>{</sym><br />
<def></def>    <kwa>static final</kwa> <def></def><kwb>double</kwb> <def>twothirds</def> <sym>=</sym> <def></def><num>2.0</num><def></def><sym>/</sym><def></def><num>3.0</num><def></def><sym>;</sym><br />
<def></def><br />
    <kwa>public static</kwa> <def></def><kwb>void</kwb> <def></def><kwd>main</kwd><def></def><sym>(</sym><def></def><kwc>String</kwc><def></def><sym>[]</sym> <def>args</def><sym>) {</sym><br />
<def></def><br />
        <kwb>int</kwb> <def>n</def> <sym>=</sym> <def></def><kwc>Integer</kwc><def></def><sym>.</sym><def></def><kwd>parseInt</kwd><def></def><sym>(</sym><def>args</def><sym>[</sym><def></def><num>0</num><def></def><sym>]);</sym><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(</sym><def>n</def> <sym>&lt;</sym> <def></def><num>1000</num><def></def><sym>)</sym> <def>n</def> <sym>=</sym> <def></def><num>1000</num><def></def><sym>;</sym><br />
<def></def>        <kwb>double</kwb> <def>a1</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>a2</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>a3</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>a4</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>a5</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>        <kwb>double</kwb> <def>a6</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>a7</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>a8</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>a9</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>,</sym> <def>alt</def> <sym>= -</sym><def></def><num>1.0</num><def></def><sym>;</sym><br />
<def></def><br />
        <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>int</kwb> <def>k</def><sym>=</sym><def></def><num>1</num><def></def><sym>;</sym> <def>k</def><sym>&lt;=</sym><def>n</def><sym>;</sym> <def>k</def><sym>++) {</sym><br />
<def></def>            <kwb>double</kwb> <def>k2</def> <sym>= (</sym><def></def><kwb>double</kwb><def></def><sym>)</sym><def>k</def> <sym>* (</sym><def></def><kwb>double</kwb><def></def><sym>)</sym><def>k</def><sym>,</sym> <def>k3</def> <sym>=</sym> <def>k2</def> <sym>* (</sym><def></def><kwb>double</kwb><def></def><sym>)</sym><def>k</def><sym>;</sym><br />
<def></def>            <kwb>double</kwb> <def>sk</def> <sym>=</sym> <def>FastMath</def><sym>.</sym><def></def><kwd>sin</kwd><def></def><sym>(</sym><def>k</def><sym>),</sym> <def>ck</def> <sym>=</sym> <def>FastMath</def><sym>.</sym><def></def><kwd>cos</kwd><def></def><sym>(</sym><def>k</def><sym>);</sym><br />
<def>            alt</def> <sym>= -</sym><def>alt</def><sym>;</sym><br />
<def><br />
            a1</def> <sym>+=</sym> <def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwd>pow</kwd><def></def><sym>(</sym><def>twothirds</def><sym>,</sym><def>k</def><sym>-</sym><def></def><num>1</num><def></def><sym>);</sym><br />
<def>            a2</def> <sym>+=</sym> <def></def><num>1.0</num><def></def><sym>/</sym><def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwd>sqrt</kwd><def></def><sym>(</sym><def>k</def><sym>);</sym><br />
<def>            a3</def> <sym>+=</sym> <def></def><num>1.0</num><def></def><sym>/(</sym><def>k</def><sym>*(</sym><def>k</def><sym>+</sym><def></def><num>1.0</num><def></def><sym>));</sym><br />
<def>            a4</def> <sym>+=</sym> <def></def><num>1.0</num><def></def><sym>/(</sym><def>k3</def> <sym>*</sym> <def>sk</def><sym>*</sym><def>sk</def><sym>);</sym><br />
<def>            a5</def> <sym>+=</sym> <def></def><num>1.0</num><def></def><sym>/(</sym><def>k3</def> <sym>*</sym> <def>ck</def><sym>*</sym><def>ck</def><sym>);</sym><br />
<def>            a6</def> <sym>+=</sym> <def></def><num>1.0</num><def></def><sym>/</sym><def>k</def><sym>;</sym><br />
<def>            a7</def> <sym>+=</sym> <def></def><num>1.0</num><def></def><sym>/</sym><def>k2</def><sym>;</sym><br />
<def>            a8</def> <sym>+=</sym> <def>alt</def><sym>/</sym><def>k</def><sym>;</sym><br />
<def>            a9</def> <sym>+=</sym> <def>alt</def><sym>/(</sym><def></def><num>2.0</num><def></def><sym>*</sym><def>k</def> <sym>-</sym><def></def><num>1.0</num><def></def><sym>);</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <slc>//correct rounding error.</slc><br />
<def></def>        <slc>// this can probably be improved with a good algorithm.</slc><br />
<def>        a4</def> <sym>*=</sym> <def></def><num>1.00000000079206574</num><def></def><sym>;</sym><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(</sym><def>n</def>  <sym>&gt;=</sym> <def></def><num>574000</num><def></def><sym>)</sym><br />
<def>            a5</def> <sym>*=</sym> <def></def><num>1.0000000007508676</num><def></def><sym>;</sym><br />
<def></def><br />
        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>(2/3)^k</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a1</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>k^-0.5</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a2</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>1/k(k+1)</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a3</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>Flint Hills</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a4</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>Cookson Hills</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a5</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>Harmonic</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a6</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>Riemann Zeta</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a7</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>Alternating Harmonic</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a8</def><sym>);</sym><br />
<def></def>        <kwc>System</kwc><def></def><sym>.</sym><def>out</def><sym>.</sym><def></def><kwd>printf</kwd><def></def><sym>(</sym><def></def><str>&quot;%.9f</str><esc>\t</esc><str>Gregory</str><esc>\n</esc><str>&quot;</str><def></def><sym>,</sym> <def>a9</def><sym>);</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<com>/*</com><br />
<com>If the angle is not within the range of +45 to -45 degrees,</com><br />
<com>java doesn't use hardware for sin and cos;   the number is</com><br />
<com>calculated in software. That's because the x86 family of</com><br />
<com>processors return incorrect results at the accuracy that Java</com><br />
<com>requires.</com><br />
<com></com><br />
<com>the following class reduces the angle to be within the range</com><br />
<com>of +45 to -45 degrees and then call Math.sin() and Math.cos()</com><br />
<com>*/</com><def></def><br />
<br />
<kwa>class</kwa> <def>FastMath</def><br />
<sym>{</sym><br />
<def></def>    <kwa>public static final</kwa> <def></def><kwb>double</kwb> <def>PI</def> <sym>=</sym> <def></def><kwc>Math</kwc><def></def><sym>.</sym><def>PI</def><sym>;</sym><br />
<def></def>    <kwa>public static final</kwa> <def></def><kwb>double</kwb> <def>TWOPI</def> <sym>=</sym> <def>PI</def> <sym>*</sym> <def></def><num>2</num><def></def><sym>;</sym><br />
<def></def>    <kwa>public static final</kwa> <def></def><kwb>double</kwb> <def>HalfPI</def> <sym>=</sym> <def>PI</def> <sym>/</sym> <def></def><num>2</num><def></def><sym>;</sym><br />
<def></def>    <kwa>public static final</kwa> <def></def><kwb>double</kwb> <def>OneFourthPI</def> <sym>=</sym> <def>PI</def> <sym>/</sym> <def></def><num>4</num><def></def><sym>;</sym><br />
<def></def><br />
    <com>/**</com><br />
<com>    * This forces the trig functiosn to stay</com><br />
<com>    * within the safe area on the x86 processor</com><br />
<com>    *(-45 degrees to +45 degrees)</com><br />
<com>    * The results may be very slightly off from</com><br />
<com>     * what the Math and StrictMath trig functions</com><br />
<com>     * give due to rounding in the angle reduction</com><br />
<com>     * but it will be very very close.</com><br />
<com>     */</com><def></def><br />
    <kwa>public static</kwa> <def></def><kwb>double</kwb> <def></def><kwd>reduceSinAngle</kwd><def></def><sym>(</sym><def></def><kwb>double</kwb> <def>radians</def><sym>) {</sym><br />
<def>        radians</def> <sym>%=</sym> <def>TWOPI</def><sym>;</sym> <def></def><slc>// put us in -2PI to +2PI space</slc><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwd>abs</kwd><def></def><sym>(</sym><def>radians</def><sym>)&gt;</sym><def>PI</def><sym>) {</sym> <def></def><slc>// put us in -PI to +PI space</slc><br />
<def>            radians</def> <sym>=</sym> <def>radians</def><sym>-(</sym><def>TWOPI</def><sym>);</sym><br />
<def></def>        <sym>}</sym><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwd>abs</kwd><def></def><sym>(</sym><def>radians</def><sym>)&gt;</sym><def>HalfPI</def><sym>) {</sym><def></def><slc>// put us in -PI/2 to +PI/2 space</slc><br />
<def>            radians</def> <sym>=</sym> <def>PI</def> <sym>-</sym> <def>radians</def><sym>;</sym><br />
<def></def>        <sym>}</sym><br />
<def></def><br />
        <kwa>return</kwa> <def>radians</def><sym>;</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
    <kwa>public static</kwa> <def></def><kwb>double</kwb> <def></def><kwd>sin</kwd> <def></def><sym>(</sym><def></def><kwb>double</kwb> <def>radians</def><sym>) {</sym><br />
<def><br />
        radians</def> <sym>=</sym> <def></def><kwd>reduceSinAngle</kwd><def></def><sym>(</sym><def>radians</def><sym>);</sym> <def></def><slc>// limits angle to between -PI/2 and +PI/2</slc><br />
<def></def>        <kwa>if</kwa> <def></def><sym>(</sym><def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwd>abs</kwd><def></def><sym>(</sym><def>radians</def><sym>)&lt;=</sym><def>OneFourthPI</def><sym>) {</sym><br />
<def></def>            <kwa>return</kwa> <def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwd>sin</kwd><def></def><sym>(</sym><def>radians</def><sym>);</sym><br />
<def></def>        <sym>}</sym> <def></def><kwa>else</kwa> <def></def><sym>{</sym><br />
<def></def>            <kwa>return</kwa> <def></def><kwc>Math</kwc><def></def><sym>.</sym><def></def><kwd>cos</kwd><def></def><sym>(</sym><def>HalfPI</def><sym>-</sym><def>radians</def><sym>);</sym><br />
<def></def>        <sym>}</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><br />
    <kwa>public static</kwa> <def></def><kwb>double</kwb> <def></def><kwd>cos</kwd> <def></def><sym>(</sym><def></def><kwb>double</kwb> <def>radians</def><sym>) {</sym><br />
<def></def><br />
        <kwa>return</kwa> <def></def><kwd>sin</kwd> <def></def><sym>(</sym><def>radians</def><sym>+</sym><def>HalfPI</def><sym>);</sym><br />
<def></def>    <sym>}</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
