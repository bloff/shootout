<source>
<def></def><slc>// The Computer Language Benchmark Games</slc><br />
<def></def><slc>// http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>//</slc><br />
<def></def><slc>// contributed by James Durbin</slc><br />
<def></def><slc>// based very closely on Ruby version by jose fco. gonzalez</slc><br />
<def><br />
<br />
def seq</def> <sym>=</sym> <def></def><kwa>new</kwa> <def></def><kwc>StringBuffer</kwc><def></def><sym>();</sym><br />
<def>seq</def> <sym>=</sym> <def></def><kwc>System</kwc><def></def><sym>.</sym><def>in</def><sym>.</sym><def></def><kwd>readLines</kwd><def></def><sym>().</sym><def></def><kwd>join</kwd><def></def><sym>(</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>)+</sym><def></def><str>&quot;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def><br />
initialLength</def> <sym>=</sym> <def>seq</def><sym>.</sym><def></def><kwd>length</kwd><def></def><sym>();</sym><br />
<def>seq</def> <sym>= (</sym><def>seq</def> <sym>=</sym><def>~</def><str>&quot;&gt;.*</str><esc>\n</esc><str>|</str><esc>\n</esc><str>&quot;</str><def></def><sym>).</sym><def></def><kwd>replaceAll</kwd><def></def><sym>(</sym><def></def><str>&quot;&quot;</str><def></def><sym>);</sym><br />
<def>codeLength</def> <sym>=</sym> <def>seq</def><sym>.</sym><def></def><kwd>length</kwd><def></def><sym>();</sym><br />
<def></def><br />
<sym>[</sym><br />
<def></def>   <str>&quot;agggtaaa|tttaccct&quot;</str><def></def> <sym>,</sym><br />
<def></def>   <str>&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</str><def></def><sym>,</sym><br />
<def></def>   <str>&quot;a[act]ggtaaa|tttacc[agt]t&quot;</str><def></def><sym>,</sym><br />
<def></def>   <str>&quot;ag[act]gtaaa|tttac[agt]ct&quot;</str><def></def><sym>,</sym><br />
<def></def>   <str>&quot;agg[act]taaa|ttta[agt]cct&quot;</str><def></def><sym>,</sym><br />
<def></def>   <str>&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</str><def></def><sym>,</sym><br />
<def></def>   <str>&quot;agggt[cgt]aa|tt[acg]accct&quot;</str><def></def><sym>,</sym><br />
<def></def>   <str>&quot;agggta[cgt]a|t[acg]taccct&quot;</str><def></def><sym>,</sym><br />
<def></def>   <str>&quot;agggtaa[cgt]|[acg]ttaccct&quot;</str><def></def><br />
<sym>].</sym><def>each</def><sym>{</sym><br />
<def>   println</def> <str>&quot;$it &quot;</str><def></def><sym>+(</sym><def>seq</def> <sym>=</sym><def>~it</def><sym>).</sym><def></def><kwd>getCount</kwd><def></def><sym>();</sym><br />
<def></def><sym>};</sym><br />
<def></def><br />
<br />
<sym>[</sym><br />
<def></def>   <str>'B'</str><def></def><sym>:</sym><def></def><str>'(c|g|t)'</str><def></def><sym>,</sym> <def></def><str>'D'</str><def></def><sym>:</sym><def></def><str>'(a|g|t)'</str><def></def><sym>,</sym> <def></def><str>'H'</str><def></def><sym>:</sym><def></def><str>'(a|c|t)'</str><def></def><sym>,</sym> <def></def><str>'K'</str><def></def><sym>:</sym><def></def><str>'(g|t)'</str><def></def><sym>,</sym><br />
<def></def>   <str>'M'</str><def></def><sym>:</sym><def></def><str>'(a|c)'</str><def></def><sym>,</sym> <def></def><str>'N'</str><def></def><sym>:</sym><def></def><str>'(a|c|g|t)'</str><def></def><sym>,</sym> <def></def><str>'R'</str><def></def><sym>:</sym><def></def><str>'(a|g)'</str><def></def><sym>,</sym> <def></def><str>'S'</str><def></def><sym>:</sym><def></def><str>'(c|t)'</str><def></def><sym>,</sym><br />
<def></def>   <str>'V'</str><def></def><sym>:</sym><def></def><str>'(a|c|g)'</str><def></def><sym>,</sym> <def></def><str>'W'</str><def></def><sym>:</sym><def></def><str>'(a|t)'</str><def></def><sym>,</sym> <def></def><str>'Y'</str><def></def><sym>:</sym><def></def><str>'(c|t)'</str><def></def><br />
<sym>].</sym><def>each</def> <sym>{</sym> <def>f</def><sym>,</sym><def>r</def> <sym>-&gt;</sym><br />
<def>   seq</def> <sym>= (</sym><def>seq</def> <sym>=</sym><def>~ f</def><sym>).</sym><def></def><kwd>replaceAll</kwd><def></def><sym>(</sym><def>r</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def><br />
println</def> <str>&quot;&quot;</str><def></def><sym>;</sym><br />
<def>println initialLength</def><sym>;</sym><br />
<def>println codeLength</def><sym>;</sym><br />
<def>println seq</def><sym>.</sym><def></def><kwd>length</kwd><def></def><sym>();</sym><br />
<def></def><br />
<br />
</source>
