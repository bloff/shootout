<source>
<def></def><slc>// The Computer Language Shootout</slc><br />
<def></def><slc>// http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>// by bearophile, Jan 24 2006</slc><br />
<def></def><slc>// converted to C++ by Greg Buchholz</slc><br />
<def></def><slc>// modified by Paul Kitchin</slc><br />
<def></def><br />
<dir>#include &lt;iomanip&gt;</dir><br />
<def></def><dir>#include &lt;iostream&gt;</dir><br />
<def></def><dir>#include &lt;sstream&gt;</dir><br />
<def></def><br />
<kwc>template</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>class</kwc> <def>N</def> <sym>&gt;</sym><br />
<def>N</def> <kwd>Ack</kwd><def></def><sym>(</sym><def>N x</def><sym>,</sym> <def>N y</def><sym>)</sym> <def></def><kwd>__attribute__</kwd><def></def><sym>((</sym><def>fastcall</def><sym>,</sym> <def></def><kwb>const</kwb><def></def><sym>,</sym> <def>nothrow</def><sym>));</sym><br />
<def></def><br />
<kwc>template</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>class</kwc> <def>N</def> <sym>&gt;</sym><br />
<def>N</def> <kwd>Ack</kwd><def></def><sym>(</sym><def>N x</def><sym>,</sym> <def>N y</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwd>__builtin_expect</kwd><def></def><sym>(</sym><def>x</def> <sym>==</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>)</sym> <def>? y</def> <sym>+</sym> <def></def><num>1</num> <def></def><sym>: ((</sym><def>y</def> <sym>==</sym> <def></def><num>0</num><def></def><sym>)</sym> <def>?</def> <kwd>Ack</kwd><def></def><sym>(</sym><def>x</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def></def><num>1</num><def></def><sym>) :</sym> <def></def><kwd>Ack</kwd><def></def><sym>(</sym><def>x</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def></def><kwd>Ack</kwd><def></def><sym>(</sym><def>x</def><sym>,</sym> <def>y</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>)));</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>template</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>class</kwc> <def>N</def> <sym>&gt;</sym><br />
<def>N</def> <kwd>Fib</kwd><def></def><sym>(</sym><def>N n</def><sym>)</sym> <def></def><kwd>__attribute__</kwd><def></def><sym>((</sym><def>fastcall</def><sym>,</sym> <def></def><kwb>const</kwb><def></def><sym>,</sym> <def>nothrow</def><sym>));</sym><br />
<def></def><br />
<kwc>template</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>class</kwc> <def>N</def> <sym>&gt;</sym><br />
<def>N</def> <kwd>Fib</kwd><def></def><sym>(</sym><def>N n</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwd>__builtin_expect</kwd><def></def><sym>(</sym><def>n</def> <sym>&lt;</sym> <def></def><num>2</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>)</sym> <def>?</def> <num>1</num> <def></def><sym>:</sym> <def></def><kwd>Fib</kwd><def></def><sym>(</sym><def>n</def> <sym>-</sym> <def></def><num>2</num><def></def><sym>) +</sym> <def></def><kwd>Fib</kwd><def></def><sym>(</sym><def>n</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>template</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>class</kwc> <def>N</def> <sym>&gt;</sym><br />
<def>N</def> <kwd>Tak</kwd><def></def><sym>(</sym><def>N x</def><sym>,</sym> <def>N y</def><sym>,</sym> <def>N z</def><sym>)</sym> <def></def><kwd>__attribute__</kwd><def></def><sym>((</sym><def>fastcall</def><sym>,</sym> <def></def><kwb>const</kwb><def></def><sym>,</sym> <def>nothrow</def><sym>));</sym><br />
<def></def><br />
<kwc>template</kwc> <def></def><sym>&lt;</sym> <def></def><kwc>class</kwc> <def>N</def> <sym>&gt;</sym><br />
<def>N</def> <kwd>Tak</kwd><def></def><sym>(</sym><def>N x</def><sym>,</sym> <def>N y</def><sym>,</sym> <def>N z</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>    <kwa>return</kwa> <def></def><kwd>__builtin_expect</kwd><def></def><sym>(</sym><def>y</def> <sym>&lt;</sym> <def>x</def><sym>,</sym> <def></def><num>0</num><def></def><sym>)</sym> <def>?</def> <kwd>Tak</kwd><def></def><sym>(</sym><def></def><kwd>Tak</kwd><def></def><sym>(</sym><def>x</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>y</def><sym>,</sym> <def>z</def><sym>),</sym> <def></def><kwd>Tak</kwd><def></def><sym>(</sym><def>y</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>z</def><sym>,</sym> <def>x</def><sym>),</sym> <def></def><kwd>Tak</kwd><def></def><sym>(</sym><def>z</def> <sym>-</sym> <def></def><num>1</num><def></def><sym>,</sym> <def>x</def><sym>,</sym> <def>y</def><sym>)) :</sym> <def>z</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>int</kwb> <def></def><kwd>main</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>argc</def><sym>,</sym> <def></def><kwb>char</kwb> <def></def><sym>* *</sym> <def>argv</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>if</kwa> <def></def><sym>(</sym><def>argc</def> <sym>!=</sym> <def></def><num>2</num><def></def><sym>)</sym><br />
<def></def>   <sym>{</sym><br />
<def>      std</def><sym>::</sym><def>cerr</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;usage: nsieve &lt;n&gt;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>      <kwa>return</kwa> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwb>int</kwb> <def>n</def><sym>;</sym><br />
<def></def>   <sym>{</sym><br />
<def>      std</def><sym>::</sym><def>istringstream</def> <kwd>convertor</kwd><def></def><sym>(</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>]);</sym><br />
<def></def>      <kwa>if</kwa> <def></def><sym>(!(</sym><def>convertor</def> <sym>&gt;&gt;</sym> <def>n</def><sym>) || !</sym><def>convertor</def><sym>.</sym><def></def><kwd>eof</kwd><def></def><sym>())</sym><br />
<def></def>      <sym>{</sym><br />
<def>         std</def><sym>::</sym><def>cerr</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;usage: nsieve &lt;n&gt;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def>         std</def><sym>::</sym><def>cerr</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;   n must be an integer</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>         <kwa>return</kwa> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>      <sym>}</sym><br />
<def></def>   <sym>}</sym><br />
<def>   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def>std</def><sym>::</sym><def></def><kwd>setprecision</kwd><def></def><sym>(</sym><def></def><num>1</num><def></def><sym>) &lt;&lt;</sym> <def>std</def><sym>::</sym><def></def><kwd>setiosflags</kwd><def></def><sym>(</sym><def>std</def><sym>::</sym><def>ios_base</def><sym>::</sym><def>fixed</def><sym>);</sym><br />
<def>   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;Ack(3,&quot;</str><def></def> <sym>&lt;&lt;</sym> <def>n</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;): &quot;</str><def></def> <sym>&lt;&lt;</sym> <def></def><kwd>Ack</kwd><def></def><sym>(</sym><def></def><num>3</num><def></def><sym>,</sym> <def>n</def><sym>) &lt;&lt;</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>;</sym><br />
<def>   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;Fib(&quot;</str><def></def> <sym>&lt;&lt; (</sym><def></def><num>27.0</num> <def></def><sym>+</sym> <def>n</def><sym>) &lt;&lt;</sym> <def></def><str>&quot;): &quot;</str><def></def> <sym>&lt;&lt;</sym> <def></def><kwd>Fib</kwd><def></def><sym>(</sym><def></def><num>27.0</num> <def></def><sym>+</sym> <def>n</def><sym>) &lt;&lt;</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>;</sym><br />
<def></def>   <sym>--</sym><def>n</def><sym>;</sym><br />
<def>   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;Tak(&quot;</str><def></def> <sym>&lt;&lt; (</sym><def></def><num>3</num> <def></def><sym>*</sym> <def>n</def><sym>) &lt;&lt;</sym> <def></def><str>','</str><def></def> <sym>&lt;&lt; (</sym><def></def><num>2</num> <def></def><sym>*</sym> <def>n</def><sym>) &lt;&lt;</sym> <def></def><str>','</str><def></def> <sym>&lt;&lt;</sym> <def>n</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;): &quot;</str><def></def> <sym>&lt;&lt;</sym> <def></def><kwd>Tak</kwd><def></def><sym>(</sym><def></def><num>3</num> <def></def><sym>*</sym> <def>n</def><sym>,</sym> <def></def><num>2</num> <def></def><sym>*</sym> <def>n</def><sym>,</sym> <def>n</def><sym>) &lt;&lt;</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>;</sym><br />
<def>   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;Fib(3): &quot;</str><def></def> <sym>&lt;&lt;</sym> <def></def><kwd>Fib</kwd><def></def><sym>(</sym><def></def><num>3</num><def></def><sym>) &lt;&lt;</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>;</sym><br />
<def>   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;Tak(3.0,2.0,1.0): &quot;</str><def></def> <sym>&lt;&lt;</sym> <def></def><kwd>Tak</kwd><def></def><sym>(</sym><def></def><num>3.0</num><def></def><sym>,</sym> <def></def><num>2.0</num><def></def><sym>,</sym> <def></def><num>1.0</num><def></def><sym>) &lt;&lt;</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
</source>
