<source>
<def></def><slc>// -*- mode: c++ -*-</slc><br />
<def></def><slc>//</slc><br />
<def></def><slc>// The Great Computer Language Shootout</slc><br />
<def></def><slc>// http://shootout.alioth.debian.org/</slc><br />
<def></def><slc>//</slc><br />
<def></def><slc>// Original C contributed by Sebastien Loisel</slc><br />
<def></def><slc>// Conversion to C++ by Jon Harrop</slc><br />
<def></def><slc>// Compile: g++ -O3 -o spectralnorm spectralnorm.cpp</slc><br />
<def></def><br />
<dir>#include &lt;cmath&gt;</dir><br />
<def></def><dir>#include &lt;vector&gt;</dir><br />
<def></def><dir>#include &lt;iostream&gt;</dir><br />
<def></def><dir>#include &lt;iomanip&gt;</dir><br />
<def></def><br />
<kwa>using namespace</kwa> <def>std</def><sym>;</sym><br />
<def></def><br />
<kwb>double</kwb> <def></def><kwd>eval_A</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>,</sym> <def></def><kwb>int</kwb> <def>j</def><sym>) {</sym> <def></def><kwa>return</kwa> <def></def><num>1.0</num> <def></def><sym>/ ((</sym><def>i</def><sym>+</sym><def>j</def><sym>)*(</sym><def>i</def><sym>+</sym><def>j</def><sym>+</sym><def></def><num>1</num><def></def><sym>)/</sym><def></def><num>2</num> <def></def><sym>+</sym> <def>i</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>); }</sym><br />
<def></def><br />
<kwb>void</kwb> <def></def><kwd>eval_A_times_u</kwd><def></def><sym>(</sym><def></def><kwb>const</kwb> <def>vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt; &amp;</sym><def>u</def><sym>,</sym> <def>vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt; &amp;</sym><def>Au</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>  <kwa>for</kwa><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>u</def><sym>.</sym><def></def><kwd>size</kwd><def></def><sym>();</sym> <def>i</def><sym>++)</sym><br />
<def></def>    <kwa>for</kwa><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>j</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>j</def><sym>&lt;</sym><def>u</def><sym>.</sym><def></def><kwd>size</kwd><def></def><sym>();</sym> <def>j</def><sym>++)</sym> <def>Au</def><sym>[</sym><def>i</def><sym>] +=</sym> <def></def><kwd>eval_A</kwd><def></def><sym>(</sym><def>i</def><sym>,</sym><def>j</def><sym>) *</sym> <def>u</def><sym>[</sym><def>j</def><sym>];</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>void</kwb> <def></def><kwd>eval_At_times_u</kwd><def></def><sym>(</sym><def></def><kwb>const</kwb> <def>vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt; &amp;</sym><def>u</def><sym>,</sym> <def>vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt; &amp;</sym><def>Au</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>  <kwa>for</kwa><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>u</def><sym>.</sym><def></def><kwd>size</kwd><def></def><sym>();</sym> <def>i</def><sym>++)</sym><br />
<def></def>    <kwa>for</kwa><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>j</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>j</def><sym>&lt;</sym><def>u</def><sym>.</sym><def></def><kwd>size</kwd><def></def><sym>();</sym> <def>j</def><sym>++)</sym> <def>Au</def><sym>[</sym><def>i</def><sym>] +=</sym> <def></def><kwd>eval_A</kwd><def></def><sym>(</sym><def>j</def><sym>,</sym><def>i</def><sym>) *</sym> <def>u</def><sym>[</sym><def>j</def><sym>];</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwb>void</kwb> <def></def><kwd>eval_AtA_times_u</kwd><def></def><sym>(</sym><def></def><kwb>const</kwb> <def>vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt; &amp;</sym><def>u</def><sym>,</sym> <def>vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt; &amp;</sym><def>AtAu</def><sym>)</sym><br />
<def></def><sym>{</sym> <def>vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt;</sym> <def></def><kwd>v</kwd><def></def><sym>(</sym><def>u</def><sym>.</sym><def></def><kwd>size</kwd><def></def><sym>());</sym> <def></def><kwd>eval_A_times_u</kwd><def></def><sym>(</sym><def>u</def><sym>,</sym> <def>v</def><sym>);</sym> <def></def><kwd>eval_At_times_u</kwd><def></def><sym>(</sym><def>v</def><sym>,</sym> <def>AtAu</def><sym>); }</sym><br />
<def></def><br />
<kwb>int</kwb> <def></def><kwd>main</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>argc</def><sym>,</sym> <def></def><kwb>char</kwb> <def></def><sym>*</sym><def>argv</def><sym>[])</sym><br />
<def></def><sym>{</sym><br />
<def></def>  <kwb>int</kwb> <def>N</def> <sym>= ((</sym><def>argc</def> <sym>==</sym> <def></def><num>2</num><def></def><sym>)</sym> <def>?</def> <kwd>atoi</kwd><def></def><sym>(</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>]) :</sym> <def></def><num>2000</num><def></def><sym>);</sym><br />
<def>  vector</def><sym>&lt;</sym><def></def><kwb>double</kwb><def></def><sym>&gt;</sym> <def></def><kwd>u</kwd><def></def><sym>(</sym><def>N</def><sym>),</sym> <def></def><kwd>v</kwd><def></def><sym>(</sym><def>N</def><sym>);</sym><br />
<def></def><br />
  <kwd>fill</kwd><def></def><sym>(</sym><def>u</def><sym>.</sym><def></def><kwd>begin</kwd><def></def><sym>(),</sym> <def>u</def><sym>.</sym><def></def><kwd>end</kwd><def></def><sym>(),</sym> <def></def><num>1</num><def></def><sym>);</sym><br />
<def></def><br />
  <kwa>for</kwa><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def></def><num>10</num><def></def><sym>;</sym> <def>i</def><sym>++) {</sym><br />
<def></def>    <kwd>eval_AtA_times_u</kwd><def></def><sym>(</sym><def>u</def><sym>,</sym> <def>v</def><sym>);</sym><br />
<def></def>    <kwd>fill</kwd><def></def><sym>(</sym><def>u</def><sym>.</sym><def></def><kwd>begin</kwd><def></def><sym>(),</sym> <def>u</def><sym>.</sym><def></def><kwd>end</kwd><def></def><sym>(),</sym> <def></def><num>0</num><def></def><sym>);</sym><br />
<def></def>    <kwd>eval_AtA_times_u</kwd><def></def><sym>(</sym><def>v</def><sym>,</sym> <def>u</def><sym>);</sym><br />
<def></def>  <sym>}</sym><br />
<def></def><br />
  <kwb>double</kwb> <def>vBv</def><sym>=</sym><def></def><num>0</num><def></def><sym>,</sym> <def>vv</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym><br />
<def></def>  <kwa>for</kwa><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>i</def><sym>=</sym><def></def><num>0</num><def></def><sym>;</sym> <def>i</def><sym>&lt;</sym><def>N</def><sym>;</sym> <def>i</def><sym>++) {</sym> <def>vBv</def> <sym>+=</sym> <def>u</def><sym>[</sym><def>i</def><sym>]*</sym><def>v</def><sym>[</sym><def>i</def><sym>];</sym> <def>vv</def> <sym>+=</sym> <def>v</def><sym>[</sym><def>i</def><sym>]*</sym><def>v</def><sym>[</sym><def>i</def><sym>]; }</sym><br />
<def><br />
  cout</def> <sym>&lt;&lt;</sym> <def></def><kwd>setprecision</kwd><def></def><sym>(</sym><def></def><num>10</num><def></def><sym>) &lt;&lt;</sym> <def></def><kwd>sqrt</kwd><def></def><sym>(</sym><def>vBv</def><sym>/</sym><def>vv</def><sym>) &lt;&lt;</sym> <def>endl</def><sym>;</sym><br />
<def></def><br />
  <kwa>return</kwa> <def></def><num>0</num><def></def><sym>;</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
