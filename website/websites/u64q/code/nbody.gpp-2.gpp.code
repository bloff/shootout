<source>
<def></def><com>/*</com><br />
<com> * The Great Computer Language Shootout</com><br />
<com> * http://shootout.alioth.debian.org/</com><br />
<com> *</com><br />
<com> * C version contributed by Christoph Bauer</com><br />
<com> * converted to C++ and modified by Paul Kitchin</com><br />
<com> */</com><def></def><br />
<br />
<dir>#include &lt;cmath&gt;</dir><br />
<def></def><dir>#include &lt;iostream&gt;</dir><br />
<def></def><dir>#include &lt;iomanip&gt;</dir><br />
<def></def><dir>#include &lt;sstream&gt;</dir><br />
<def></def><br />
<kwb>struct</kwb> <def>Vector3</def><br />
<sym>{</sym><br />
<def></def>   <kwd>Vector3</kwd><def></def><sym>(</sym><def></def><kwb>double</kwb> <def>x</def><sym>,</sym> <def></def><kwb>double</kwb> <def>y</def><sym>,</sym> <def></def><kwb>double</kwb> <def>z</def><sym>)</sym><br />
<def></def>      <sym>:</sym><br />
<def></def>      <kwd>x</kwd><def></def><sym>(</sym><def>x</def><sym>),</sym><br />
<def></def>      <kwd>y</kwd><def></def><sym>(</sym><def>y</def><sym>),</sym><br />
<def></def>      <kwd>z</kwd><def></def><sym>(</sym><def>z</def><sym>)</sym><br />
<def></def>   <sym>{</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwb>double</kwb> <def>x</def><sym>;</sym><br />
<def></def>   <kwb>double</kwb> <def>y</def><sym>;</sym><br />
<def></def>   <kwb>double</kwb> <def>z</def><sym>;</sym><br />
<def></def><sym>};</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <sym>&amp;</sym> <def></def><kwc>operator</kwc><def></def><sym>-=(</sym><def>Vector3</def> <sym>&amp;</sym> <def>lhs</def><sym>,</sym> <def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def>   lhs</def><sym>.</sym><def>x</def> <sym>-=</sym> <def>rhs</def><sym>.</sym><def>x</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>y</def> <sym>-=</sym> <def>rhs</def><sym>.</sym><def>y</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>z</def> <sym>-=</sym> <def>rhs</def><sym>.</sym><def>z</def><sym>;</sym><br />
<def></def>   <kwa>return</kwa> <def>lhs</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <kwc>operator</kwc><def></def><sym>-(</sym><def>Vector3 lhs</def><sym>,</sym> <def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><sym>(</sym><def>lhs</def> <sym>-=</sym> <def>rhs</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <kwc>operator</kwc><def></def><sym>-(</sym><def>Vector3 lhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><kwd>Vector3</kwd><def></def><sym>(-</sym><def>lhs</def><sym>.</sym><def>x</def><sym>, -</sym><def>lhs</def><sym>.</sym><def>y</def><sym>, -</sym><def>lhs</def><sym>.</sym><def>z</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <sym>&amp;</sym> <def></def><kwc>operator</kwc><def></def><sym>+=(</sym><def>Vector3</def> <sym>&amp;</sym> <def>lhs</def><sym>,</sym> <def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def>   lhs</def><sym>.</sym><def>x</def> <sym>+=</sym> <def>rhs</def><sym>.</sym><def>x</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>y</def> <sym>+=</sym> <def>rhs</def><sym>.</sym><def>y</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>z</def> <sym>+=</sym> <def>rhs</def><sym>.</sym><def>z</def><sym>;</sym><br />
<def></def>   <kwa>return</kwa> <def>lhs</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <kwc>operator</kwc><def></def><sym>+(</sym><def>Vector3 lhs</def><sym>,</sym> <def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><sym>(</sym><def>lhs</def> <sym>+=</sym> <def>rhs</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <sym>&amp;</sym> <def></def><kwc>operator</kwc><def></def><sym>*=(</sym><def>Vector3</def> <sym>&amp;</sym> <def>lhs</def><sym>,</sym> <def></def><kwb>double</kwb> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def>   lhs</def><sym>.</sym><def>x</def> <sym>*=</sym> <def>rhs</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>y</def> <sym>*=</sym> <def>rhs</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>z</def> <sym>*=</sym> <def>rhs</def><sym>;</sym><br />
<def></def>   <kwa>return</kwa> <def>lhs</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <kwc>operator</kwc><def></def><sym>*(</sym><def>Vector3 lhs</def><sym>,</sym> <def></def><kwb>double</kwb> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><sym>(</sym><def>lhs</def> <sym>*=</sym> <def>rhs</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <kwc>operator</kwc><def></def><sym>*(</sym><def></def><kwb>double</kwb> <def>lhs</def><sym>,</sym> <def>Vector3 rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><sym>(</sym><def>rhs</def> <sym>*=</sym> <def>lhs</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <sym>&amp;</sym> <def></def><kwc>operator</kwc><def></def><sym>/=(</sym><def>Vector3</def> <sym>&amp;</sym> <def>lhs</def><sym>,</sym> <def></def><kwb>double</kwb> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def>   lhs</def><sym>.</sym><def>x</def> <sym>/=</sym> <def>rhs</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>y</def> <sym>/=</sym> <def>rhs</def><sym>;</sym><br />
<def>   lhs</def><sym>.</sym><def>z</def> <sym>/=</sym> <def>rhs</def><sym>;</sym><br />
<def></def>   <kwa>return</kwa> <def>lhs</def><sym>;</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def>Vector3</def> <kwc>operator</kwc><def></def><sym>/(</sym><def>Vector3 lhs</def><sym>,</sym> <def></def><kwb>double</kwb> <def>rhs</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><sym>(</sym><def>lhs</def> <sym>/=</sym> <def>rhs</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def></def><kwb>double</kwb> <def></def><kwd>magnitude_squared</kwd><def></def><sym>(</sym><def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>vector</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def></def><sym>((</sym><def>vector</def><sym>.</sym><def>x</def> <sym>*</sym> <def>vector</def><sym>.</sym><def>x</def><sym>) + (</sym><def>vector</def><sym>.</sym><def>y</def> <sym>*</sym> <def>vector</def><sym>.</sym><def>y</def><sym>)) + (</sym><def>vector</def><sym>.</sym><def>z</def> <sym>*</sym> <def>vector</def><sym>.</sym><def>z</def><sym>);</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>inline</kwc> <def></def><kwb>double</kwb> <def></def><kwd>magnitude</kwd><def></def><sym>(</sym><def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>vector</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>return</kwa> <def>std</def><sym>::</sym><def></def><kwd>sqrt</kwd><def></def><sym>(</sym><def></def><kwd>magnitude_squared</kwd><def></def><sym>(</sym><def>vector</def><sym>));</sym><br />
<def></def><sym>}</sym><br />
<def></def><br />
<kwc>class</kwc> <def>Planet</def><br />
<sym>{</sym><br />
<def></def><br />
   <kwc>public</kwc><def></def><sym>:</sym><br />
<def></def><br />
      <kwd>Planet</kwd><def></def><sym>(</sym><def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>position</def><sym>,</sym> <def>Vector3</def> <kwb>const</kwb> <def></def><sym>&amp;</sym> <def>velocity</def><sym>,</sym> <def></def><kwb>double</kwb> <def>mass</def><sym>)</sym><br />
<def></def>         <sym>:</sym><br />
<def></def>         <kwd>position</kwd><def></def><sym>(</sym><def>position</def><sym>),</sym><br />
<def></def>         <kwd>velocity</kwd><def></def><sym>(</sym><def>velocity</def><sym>),</sym><br />
<def></def>         <kwd>mass</kwd><def></def><sym>(</sym><def>mass</def><sym>)</sym><br />
<def></def>      <sym>{</sym><br />
<def></def>      <sym>}</sym><br />
<def><br />
      Vector3 position</def><sym>;</sym><br />
<def>      Vector3 velocity</def><sym>;</sym><br />
<def></def>      <kwb>double</kwb> <def>mass</def><sym>;</sym><br />
<def></def><br />
<sym>};</sym><br />
<def></def><br />
<kwc>class</kwc> <def>Bodies</def><br />
<sym>{</sym><br />
<def></def><br />
   <kwc>public</kwc><def></def><sym>:</sym><br />
<def></def><br />
      <kwb>static unsigned int const</kwb> <def>number_of_bodies</def> <sym>=</sym> <def></def><num>5</num><def></def><sym>;</sym><br />
<def></def>      <kwb>static double const</kwb> <def>days_per_year</def> <sym>=</sym> <def></def><num>365.24</num><def></def><sym>;</sym><br />
<def></def>      <kwb>static double const</kwb> <def>solar_mass</def> <sym>=</sym> <def></def><num>4</num> <def></def><sym>*</sym> <def>M_PI</def> <sym>*</sym> <def>M_PI</def><sym>;</sym><br />
<def></def>      <kwb>static</kwb> <def>Planet bodies</def><sym>[</sym><def>number_of_bodies</def><sym>];</sym><br />
<def></def><br />
<br />
      <kwb>static void</kwb> <def></def><kwd>advance</kwd><def></def><sym>(</sym><def></def><kwb>double</kwb> <def>delta_time</def><sym>)</sym><br />
<def></def>      <sym>{</sym><br />
<def></def>         <kwa>for</kwa> <def></def><sym>(</sym><def>Planet</def> <sym>*</sym> <def>planet1</def> <sym>=</sym> <def>bodies</def><sym>;</sym> <def>planet1</def> <sym>!=</sym> <def>bodies</def> <sym>+</sym> <def>number_of_bodies</def><sym>; ++</sym><def>planet1</def><sym>)</sym><br />
<def></def>         <sym>{</sym><br />
<def></def>            <kwa>for</kwa> <def></def><sym>(</sym><def>Planet</def> <sym>*</sym> <def>planet2</def> <sym>=</sym> <def>planet1</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>;</sym> <def>planet2</def> <sym>!=</sym> <def>bodies</def> <sym>+</sym> <def>number_of_bodies</def><sym>; ++</sym><def>planet2</def><sym>)</sym><br />
<def></def>            <sym>{</sym><br />
<def>               Vector3 difference</def> <sym>=</sym> <def>planet1</def><sym>-&gt;</sym><def>position</def> <sym>-</sym> <def>planet2</def><sym>-&gt;</sym><def>position</def><sym>;</sym><br />
<def></def>               <kwb>double</kwb> <def>distance_squared</def> <sym>=</sym> <def></def><kwd>magnitude_squared</kwd><def></def><sym>(</sym><def>difference</def><sym>);</sym><br />
<def></def>               <kwb>double</kwb> <def>distance</def> <sym>=</sym> <def>std</def><sym>::</sym><def></def><kwd>sqrt</kwd><def></def><sym>(</sym><def>distance_squared</def><sym>);</sym><br />
<def></def>               <kwb>double</kwb> <def>magnitude</def> <sym>=</sym> <def>delta_time</def> <sym>/ (</sym><def>distance</def> <sym>*</sym> <def>distance_squared</def><sym>);</sym><br />
<def></def>               <kwb>double</kwb> <def>planet2_mass_magnitude</def> <sym>=</sym> <def>planet2</def><sym>-&gt;</sym><def>mass</def> <sym>*</sym> <def>magnitude</def><sym>;</sym><br />
<def></def>               <kwb>double</kwb> <def>planet1_mass_magnitude</def> <sym>=</sym> <def>planet1</def><sym>-&gt;</sym><def>mass</def> <sym>*</sym> <def>magnitude</def><sym>;</sym><br />
<def>               planet1</def><sym>-&gt;</sym><def>velocity</def> <sym>-=</sym> <def>difference</def> <sym>*</sym> <def>planet2_mass_magnitude</def><sym>;</sym><br />
<def>               planet2</def><sym>-&gt;</sym><def>velocity</def> <sym>+=</sym> <def>difference</def> <sym>*</sym> <def>planet1_mass_magnitude</def><sym>;</sym><br />
<def></def>            <sym>}</sym><br />
<def></def>         <sym>}</sym><br />
<def></def>         <kwa>for</kwa> <def></def><sym>(</sym><def>Planet</def> <sym>*</sym> <def>planet</def> <sym>=</sym> <def>bodies</def><sym>;</sym> <def>planet</def> <sym>!=</sym> <def>bodies</def> <sym>+</sym> <def>number_of_bodies</def><sym>; ++</sym><def>planet</def><sym>)</sym><br />
<def></def>         <sym>{</sym><br />
<def>            planet</def><sym>-&gt;</sym><def>position</def> <sym>+=</sym> <def>delta_time</def> <sym>*</sym> <def>planet</def><sym>-&gt;</sym><def>velocity</def><sym>;</sym><br />
<def></def>         <sym>}</sym><br />
<def></def>      <sym>}</sym><br />
<def></def><br />
      <kwb>static double</kwb> <def></def><kwd>energy</kwd><def></def><sym>()</sym><br />
<def></def>      <sym>{</sym><br />
<def></def>         <kwb>double</kwb> <def>total_energy</def> <sym>=</sym> <def></def><num>0.0</num><def></def><sym>;</sym><br />
<def></def>         <kwa>for</kwa> <def></def><sym>(</sym><def>Planet</def> <sym>*</sym> <def>planet1</def> <sym>=</sym> <def>bodies</def><sym>;</sym> <def>planet1</def> <sym>!=</sym> <def>bodies</def> <sym>+</sym> <def>number_of_bodies</def><sym>; ++</sym><def>planet1</def><sym>)</sym><br />
<def></def>         <sym>{</sym><br />
<def>            total_energy</def> <sym>+=</sym> <def></def><num>0.5</num> <def></def><sym>*</sym> <def>planet1</def><sym>-&gt;</sym><def>mass</def> <sym>*</sym> <def></def><kwd>magnitude_squared</kwd><def></def><sym>(</sym><def>planet1</def><sym>-&gt;</sym><def>velocity</def><sym>);</sym><br />
<def></def>            <kwa>for</kwa> <def></def><sym>(</sym><def>Planet</def> <sym>*</sym> <def>planet2</def> <sym>=</sym> <def>planet1</def> <sym>+</sym> <def></def><num>1</num><def></def><sym>;</sym> <def>planet2</def> <sym>!=</sym> <def>bodies</def> <sym>+</sym> <def>number_of_bodies</def><sym>; ++</sym><def>planet2</def><sym>)</sym><br />
<def></def>            <sym>{</sym><br />
<def>               Vector3 difference</def> <sym>=</sym> <def>planet1</def><sym>-&gt;</sym><def>position</def> <sym>-</sym> <def>planet2</def><sym>-&gt;</sym><def>position</def><sym>;</sym><br />
<def></def>               <kwb>double</kwb> <def>distance</def> <sym>=</sym> <def></def><kwd>magnitude</kwd><def></def><sym>(</sym><def>difference</def><sym>);</sym><br />
<def>               total_energy</def> <sym>-= (</sym><def>planet1</def><sym>-&gt;</sym><def>mass</def> <sym>*</sym> <def>planet2</def><sym>-&gt;</sym><def>mass</def><sym>) /</sym> <def>distance</def><sym>;</sym><br />
<def></def>            <sym>}</sym><br />
<def></def>         <sym>}</sym><br />
<def></def>         <kwa>return</kwa> <def>total_energy</def><sym>;</sym><br />
<def></def>      <sym>}</sym><br />
<def></def><br />
      <kwb>static void</kwb> <def></def><kwd>offset_momentum</kwd><def></def><sym>()</sym><br />
<def></def>      <sym>{</sym><br />
<def>         Vector3</def> <kwd>momentum</kwd><def></def><sym>(</sym><def>bodies</def><sym>[</sym><def></def><num>1</num><def></def><sym>].</sym><def>velocity</def> <sym>*</sym> <def>bodies</def><sym>[</sym><def></def><num>1</num><def></def><sym>].</sym><def>mass</def><sym>);</sym><br />
<def></def>         <kwa>for</kwa> <def></def><sym>(</sym><def>Planet</def> <sym>*</sym> <def>planet</def> <sym>=</sym> <def>bodies</def> <sym>+</sym> <def></def><num>2</num><def></def><sym>;</sym> <def>planet</def> <sym>!=</sym> <def>bodies</def> <sym>+</sym> <def>number_of_bodies</def><sym>; ++</sym><def>planet</def><sym>)</sym><br />
<def></def>         <sym>{</sym><br />
<def>            momentum</def> <sym>+=</sym> <def>planet</def><sym>-&gt;</sym><def>velocity</def> <sym>*</sym> <def>planet</def><sym>-&gt;</sym><def>mass</def><sym>;</sym><br />
<def></def>         <sym>}</sym><br />
<def>         bodies</def><sym>[</sym><def></def><num>0</num><def></def><sym>].</sym><def>velocity</def> <sym>= -</sym><def>momentum</def> <sym>/</sym> <def>solar_mass</def><sym>;</sym><br />
<def></def>      <sym>}</sym><br />
<def></def><br />
<sym>};</sym><br />
<def><br />
Planet Bodies</def><sym>::</sym><def>bodies</def><sym>[</sym><def></def><num>5</num><def></def><sym>] =</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwd>Planet</kwd><def></def><sym>(</sym><def></def><kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym> <def></def><kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>,</sym> <def></def><num>0</num><def></def><sym>),</sym> <def>solar_mass</def><sym>),</sym><br />
<def></def>   <kwd>Planet</kwd><def></def><sym>(</sym><def></def><kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>4.84143144246472090e+00</num><def></def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>1.16032004402742839e+00</num><def></def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>1.03622044471123109e-01</num><def></def><sym>),</sym><br />
<def></def>         <kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>1.66007664274403694e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <num>7.69901118419740425e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>6.90460016972063023e-05</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>),</sym><br />
<def></def>         <num>9.54791938424326609e-04</num> <def></def><sym>*</sym> <def>solar_mass</def><sym>),</sym><br />
<def></def>   <kwd>Planet</kwd><def></def><sym>(</sym><def></def><kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>8.34336671824457987e+00</num><def></def><sym>,</sym><br />
<def></def>         <num>4.12479856412430479e+00</num><def></def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>4.03523417114321381e-01</num><def></def><sym>),</sym><br />
<def></def>         <kwd>Vector3</kwd><def></def><sym>(-</sym><def></def><num>2.76742510726862411e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <num>4.99852801234917238e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <num>2.30417297573763929e-05</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>),</sym><br />
<def></def>         <num>2.85885980666130812e-04</num> <def></def><sym>*</sym> <def>solar_mass</def><sym>),</sym><br />
<def></def>   <kwd>Planet</kwd><def></def><sym>(</sym><def></def><kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>1.28943695621391310e+01</num><def></def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>1.51111514016986312e+01</num><def></def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>2.23307578892655734e-01</num><def></def><sym>),</sym><br />
<def></def>         <kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>2.96460137564761618e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <num>2.37847173959480950e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>2.96589568540237556e-05</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>),</sym><br />
<def></def>         <num>4.36624404335156298e-05</num> <def></def><sym>*</sym> <def>solar_mass</def><sym>),</sym><br />
<def></def>   <kwd>Planet</kwd><def></def><sym>(</sym><def></def><kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>1.53796971148509165e+01</num><def></def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>2.59193146099879641e+01</num><def></def><sym>,</sym><br />
<def></def>         <num>1.79258772950371181e-01</num><def></def><sym>),</sym><br />
<def></def>         <kwd>Vector3</kwd><def></def><sym>(</sym><def></def><num>2.68067772490389322e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <num>1.62824170038242295e-03</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>,</sym><br />
<def></def>         <sym>-</sym><def></def><num>9.51592254519715870e-05</num> <def></def><sym>*</sym> <def>days_per_year</def><sym>),</sym><br />
<def></def>         <num>5.15138902046611451e-05</num> <def></def><sym>*</sym> <def>solar_mass</def><sym>)</sym><br />
<def></def><sym>};</sym><br />
<def></def><br />
<kwb>int</kwb> <def></def><kwd>main</kwd><def></def><sym>(</sym><def></def><kwb>int</kwb> <def>argc</def><sym>,</sym> <def></def><kwb>char</kwb> <def></def><sym>* *</sym> <def>argv</def><sym>)</sym><br />
<def></def><sym>{</sym><br />
<def></def>   <kwa>if</kwa> <def></def><sym>(</sym><def>argc</def> <sym>!=</sym> <def></def><num>2</num><def></def><sym>)</sym><br />
<def></def>   <sym>{</sym><br />
<def>      std</def><sym>::</sym><def>cerr</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;usage: nbody &lt;n&gt;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>      <kwa>return</kwa> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>   <sym>}</sym><br />
<def></def>   <kwb>unsigned int</kwb> <def>n</def><sym>;</sym><br />
<def></def>   <sym>{</sym><br />
<def>      std</def><sym>::</sym><def>stringstream</def> <kwd>convertor</kwd><def></def><sym>(</sym><def>argv</def><sym>[</sym><def></def><num>1</num><def></def><sym>]);</sym><br />
<def></def>      <kwa>if</kwa> <def></def><sym>(!(</sym><def>convertor</def> <sym>&gt;&gt;</sym> <def>n</def><sym>) || !</sym><def>convertor</def><sym>.</sym><def></def><kwd>eof</kwd><def></def><sym>())</sym><br />
<def></def>      <sym>{</sym><br />
<def>         std</def><sym>::</sym><def>cerr</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;usage: nbody &lt;n&gt;</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def>         std</def><sym>::</sym><def>cerr</def> <sym>&lt;&lt;</sym> <def></def><str>&quot;   n must be an integer</str><esc>\n</esc><str>&quot;</str><def></def><sym>;</sym><br />
<def></def>         <kwa>return</kwa> <def></def><num>1</num><def></def><sym>;</sym><br />
<def></def>      <sym>}</sym><br />
<def></def>   <sym>}</sym><br />
<def><br />
   Bodies</def><sym>::</sym><def></def><kwd>offset_momentum</kwd><def></def><sym>();</sym><br />
<def><br />
   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def>std</def><sym>::</sym><def></def><kwd>setprecision</kwd><def></def><sym>(</sym><def></def><num>9</num><def></def><sym>) &lt;&lt;</sym> <def>std</def><sym>::</sym><def></def><kwd>setiosflags</kwd><def></def><sym>(</sym><def>std</def><sym>::</sym><def>ios_base</def><sym>::</sym><def>fixed</def><sym>) &lt;&lt;</sym> <def>Bodies</def><sym>::</sym><def></def><kwd>energy</kwd><def></def><sym>() &lt;&lt;</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>;</sym><br />
<def></def><br />
   <kwa>for</kwa> <def></def><sym>(</sym><def></def><kwb>unsigned int</kwb> <def>i</def> <sym>=</sym> <def></def><num>1</num><def></def><sym>;</sym> <def>i</def> <sym>&lt;=</sym> <def>n</def><sym>; ++</sym><def>i</def><sym>)</sym><br />
<def></def>   <sym>{</sym><br />
<def>      Bodies</def><sym>::</sym><def></def><kwd>advance</kwd><def></def><sym>(</sym><def></def><num>0.01</num><def></def><sym>);</sym><br />
<def></def>   <sym>}</sym><br />
<def><br />
   std</def><sym>::</sym><def>cout</def> <sym>&lt;&lt;</sym> <def>Bodies</def><sym>::</sym><def></def><kwd>energy</kwd><def></def><sym>() &lt;&lt;</sym> <def></def><str>'</str><esc>\n</esc><str>'</str><def></def><sym>;</sym><br />
<def></def><sym>}</sym><def></def><br />
</source>
