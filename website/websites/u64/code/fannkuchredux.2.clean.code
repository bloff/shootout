<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   swap and copy2 contributed by John van Groningen</span>
<span class="hl com">   contributed by Isaac Gouy (Clean novice)</span>
<span class="hl com">   based on the Lua program by Mike Pall</span>
<span class="hl com">*/</span>

module fannkuchredux

import StdEnv<span class="hl sym">,</span>LanguageShootout

swap i j a <span class="hl sym">:==</span> let <span class="hl sym">(</span>ai<span class="hl sym">,</span>a1<span class="hl sym">)=</span>a<span class="hl sym">![</span>i<span class="hl sym">]</span>; <span class="hl sym">(</span>aj1<span class="hl sym">,</span>a2<span class="hl sym">)=</span>a1<span class="hl sym">![</span>j<span class="hl sym">]</span> in <span class="hl sym">{</span>a2 <span class="hl sym">&amp; [</span>i<span class="hl sym">]=</span>aj1<span class="hl sym">,[</span>j<span class="hl sym">]=</span>ai<span class="hl sym">}</span>

flop p<span class="hl sym">=:{[</span><span class="hl num">0</span><span class="hl sym">]=</span>q0<span class="hl sym">}</span> q n sign chksum maxflips      <span class="hl slc">// Cache 0th element</span>
   <span class="hl sym">|</span> q0 <span class="hl sym">==</span> <span class="hl num">0</span>
      <span class="hl sym">= (</span>p<span class="hl sym">,</span>q<span class="hl sym">,</span>chksum<span class="hl sym">,</span>maxflips<span class="hl sym">)</span>
      <span class="hl sym"># (</span>p<span class="hl sym">,</span>q<span class="hl sym">) =</span> copy2 <span class="hl num">1</span> n p q                  <span class="hl slc">// Work on a copy</span>
      <span class="hl sym">=</span> count p q0 q <span class="hl num">1</span>

   where

   copy2 i n a a2
      <span class="hl sym">|</span> i &lt; n
         <span class="hl sym">#!</span> e <span class="hl sym">=</span> a<span class="hl sym">.[</span>i<span class="hl sym">]</span>
         <span class="hl sym">=</span> copy2 <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> n a <span class="hl sym">{</span>a2 <span class="hl sym">&amp; [</span>i<span class="hl sym">] =</span> e<span class="hl sym">}</span>
         <span class="hl sym">= (</span>a<span class="hl sym">,</span>a2<span class="hl sym">)</span>

   count p q0 q<span class="hl sym">=:{[</span>q0<span class="hl sym">]=</span>qq<span class="hl sym">}</span> flips
      <span class="hl sym">|</span> qq <span class="hl sym">==</span> <span class="hl num">0</span>                                <span class="hl slc">// ... until 0th element is 0</span>
         <span class="hl sym">|</span> flips &gt; maxflips                    <span class="hl slc">// New maximum?</span>
            <span class="hl sym">= (</span>p <span class="hl sym">,</span>q <span class="hl sym">,</span>chksum` <span class="hl sym">,</span>flips<span class="hl sym">)</span>
            <span class="hl sym">= (</span>p <span class="hl sym">,</span>q <span class="hl sym">,</span>chksum` <span class="hl sym">,</span>maxflips<span class="hl sym">)</span>
      <span class="hl sym">#</span> q <span class="hl sym">= {</span>q <span class="hl sym">&amp; [</span>q0<span class="hl sym">] =</span> q0<span class="hl sym">}</span>
        q <span class="hl sym">=</span> if <span class="hl sym">(</span>q0 &gt;<span class="hl sym">=</span> <span class="hl num">3</span><span class="hl sym">) (</span>flop2 <span class="hl num">1</span> <span class="hl sym">(</span>q0<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> q<span class="hl sym">)</span> q
      <span class="hl sym">=</span> count p qq q <span class="hl sym">(</span>flips<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span>

      where

      chksum` <span class="hl sym">=</span> chksum <span class="hl sym">+ (</span>sign <span class="hl sym">*</span> flips<span class="hl sym">)</span>

   flop2 i j a
      <span class="hl sym">|</span> i &lt; j
         <span class="hl sym">=</span> flop2 <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) (</span>j<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">) (</span>swap i j a<span class="hl sym">)</span>
         <span class="hl sym">=</span> a

permute <span class="hl sym">:: !*{#</span>Int<span class="hl sym">} !*{#</span>Int<span class="hl sym">} !</span>Int <span class="hl sym">-&gt; (!*{#</span>Int<span class="hl sym">},!*{#</span>Int<span class="hl sym">},!</span>Int<span class="hl sym">)</span>
permute p s sign
   <span class="hl sym">|</span> sign <span class="hl sym">==</span> <span class="hl num">1</span>
      <span class="hl sym">= ((</span>swap <span class="hl num">0 1</span> p<span class="hl sym">),</span> s<span class="hl sym">, -</span><span class="hl num">1</span><span class="hl sym">)</span>                 <span class="hl slc">// Rotate 0&lt;-1</span>
      <span class="hl sym">=</span> perm <span class="hl sym">(</span>swap <span class="hl num">1 2</span> p<span class="hl sym">)</span> <span class="hl num">2</span> s <span class="hl num">1</span>               <span class="hl slc">// Rotate 0&lt;-1 and 0&lt;-1&lt;-2</span>

   where

   perm p<span class="hl sym">=:{[</span><span class="hl num">0</span><span class="hl sym">]=</span>t<span class="hl sym">}</span> i s<span class="hl sym">=:{[</span>i<span class="hl sym">]=</span>sx<span class="hl sym">}</span> sign
      <span class="hl sym">|</span> sx &lt;&gt; <span class="hl num">0</span>
         <span class="hl sym">= (</span>p<span class="hl sym">, {</span>s<span class="hl sym">&amp;[</span>i<span class="hl sym">]=</span>sx<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">},</span> sign<span class="hl sym">)</span>            <span class="hl slc">// Next permutation</span>
         <span class="hl sym">=</span> perm <span class="hl sym">(</span>rotate <span class="hl num">0</span> i p t<span class="hl sym">) (</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) {</span>s<span class="hl sym">&amp;[</span>i<span class="hl sym">]=</span>i<span class="hl sym">}</span> sign

   rotate j i p t
      <span class="hl sym"># (</span>pj1<span class="hl sym">,</span>p<span class="hl sym">) =</span> p<span class="hl sym">![</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">]</span>
      <span class="hl sym">#!</span> p <span class="hl sym">= {</span>p <span class="hl sym">&amp; [</span>j<span class="hl sym">]=</span>pj1<span class="hl sym">}</span>
      <span class="hl sym">|</span> j &lt; i   <span class="hl sym">=</span> rotate <span class="hl sym">(</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> i p t
                <span class="hl sym">= {</span>p <span class="hl sym">&amp; [</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">]=</span>t<span class="hl sym">}</span>

pfannkuchen <span class="hl sym">:: !</span>Int <span class="hl sym">!*{#</span>Int<span class="hl sym">} !*{#</span>Int<span class="hl sym">} !*{#</span>Int<span class="hl sym">} !</span>Int <span class="hl sym">!</span>Int <span class="hl sym">!</span>Int <span class="hl sym">!</span>Int <span class="hl sym">-&gt; (!</span>Int<span class="hl sym">,!</span>Int<span class="hl sym">)</span>
pfannkuchen i p q s n sign chksum maxflips
   <span class="hl sym"># (</span>p<span class="hl sym">,</span>q<span class="hl sym">,</span>chksum<span class="hl sym">,</span>maxflips<span class="hl sym">) =</span> flop p q n sign chksum maxflips
   <span class="hl sym">|</span> i &gt; <span class="hl num">0</span>
      <span class="hl sym"># (</span>p<span class="hl sym">,</span>s<span class="hl sym">,</span>sign<span class="hl sym">) =</span> permute p s sign
      <span class="hl sym">=</span> pfannkuchen <span class="hl sym">(</span>i<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">)</span> p q s n sign chksum maxflips
      <span class="hl sym">= (</span>chksum<span class="hl sym">,</span>maxflips<span class="hl sym">)</span>


Start world
   <span class="hl sym"># (</span>chksum<span class="hl sym">,</span>maxflips<span class="hl sym">) =</span> pfannkuchen <span class="hl sym">((</span>fac n<span class="hl sym">)-</span><span class="hl num">1</span><span class="hl sym">)</span> p q s n <span class="hl num">1 0 0</span>

   <span class="hl sym">=</span> toString chksum <span class="hl sym">+++</span> <span class="hl str">&quot;\n&quot;</span> <span class="hl sym">+++</span>
     <span class="hl str">&quot;Pfannkuchen(&quot;</span> <span class="hl sym">+++</span> toString n <span class="hl sym">+++</span> <span class="hl str">&quot;) = &quot;</span> <span class="hl sym">+++</span> toString maxflips <span class="hl sym">+++</span> <span class="hl str">&quot;\n&quot;</span>

   where

   n <span class="hl sym">=</span> argi
   fac n <span class="hl sym">=</span> prod <span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">..</span>n<span class="hl sym">]</span>
   p <span class="hl sym">= {</span>i<span class="hl sym">\\</span>i<span class="hl sym">&lt;-[</span><span class="hl num">0</span><span class="hl sym">..</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">]}</span>; q <span class="hl sym">= {</span>i<span class="hl sym">\\</span>i<span class="hl sym">&lt;-[</span><span class="hl num">0</span><span class="hl sym">..</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">]}</span>; s <span class="hl sym">= {</span>i<span class="hl sym">\\</span>i<span class="hl sym">&lt;-[</span><span class="hl num">0</span><span class="hl sym">..</span>n<span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">]}</span>
