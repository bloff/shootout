<span class="hl com">/* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Rik Hemsley</span>
<span class="hl com">*/</span>



<span class="hl kwa">using</span> System<span class="hl sym">;</span>
<span class="hl kwa">using</span> System<span class="hl sym">.</span>Text<span class="hl sym">.</span>RegularExpressions<span class="hl sym">;</span>

<span class="hl kwa">internal class</span> RegexDna
<span class="hl sym">{</span>
    <span class="hl kwa">private</span> <span class="hl kwb">const</span> RegexOptions regexOptions <span class="hl sym">=</span> RegexOptions<span class="hl sym">.</span>IgnoreCase <span class="hl sym">|</span> RegexOptions<span class="hl sym">.</span>Compiled <span class="hl sym">|</span> RegexOptions<span class="hl sym">.</span>CultureInvariant<span class="hl sym">;</span>

    <span class="hl kwa">private static readonly</span> IUB<span class="hl sym">[]</span> Codes <span class="hl sym">= {</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;B&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(c|g|t)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;D&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|g|t)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;H&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c|t)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;K&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(g|t)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;M&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;N&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c|g|t)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;R&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|g)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;S&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(c|g)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;V&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c|g)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;W&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|t)&quot;</span><span class="hl sym">),</span>
                                       <span class="hl kwa">new</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl str">&quot;Y&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(c|t)&quot;</span><span class="hl sym">)</span>
                                   <span class="hl sym">};</span>

    <span class="hl kwa">private static readonly</span> Regex<span class="hl sym">[]</span> Variants <span class="hl sym">= {</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;agggtaaa|tttaccct&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;a[act]ggtaaa|tttacc[agt]t&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;ag[act]gtaaa|tttac[agt]ct&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;agg[act]taaa|ttta[agt]cct&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;agggt[cgt]aa|tt[acg]accct&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;agggta[cgt]a|t[acg]taccct&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                             <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;agggtaa[cgt]|[acg]ttaccct&quot;</span><span class="hl sym">,</span> regexOptions<span class="hl sym">),</span>
                                         <span class="hl sym">};</span>

    <span class="hl kwa">private static readonly</span> Regex Strip <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span><span class="hl str">&quot;&gt;.*|</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">);</span>

    <span class="hl kwa">private static</span> <span class="hl kwb">void</span> <span class="hl kwd">Main</span><span class="hl sym">()</span>
    <span class="hl sym">{</span>
        var sequence <span class="hl sym">=</span> Console<span class="hl sym">.</span>In<span class="hl sym">.</span><span class="hl kwd">ReadToEnd</span><span class="hl sym">();</span>

        <span class="hl kwb">int</span> initialLength <span class="hl sym">=</span> sequence<span class="hl sym">.</span>Length<span class="hl sym">;</span>

        sequence <span class="hl sym">=</span> Strip<span class="hl sym">.</span><span class="hl kwd">Replace</span><span class="hl sym">(</span>sequence<span class="hl sym">,</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">);</span>

        <span class="hl kwb">int</span> codeLength <span class="hl sym">=</span> sequence<span class="hl sym">.</span>Length<span class="hl sym">;</span>

        <span class="hl kwa">foreach</span> <span class="hl sym">(</span>var variant <span class="hl kwa">in</span> Variants<span class="hl sym">)</span>
        <span class="hl sym">{</span>
            Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span><span class="hl sym">(</span><span class="hl str">&quot;{0} {1}&quot;</span><span class="hl sym">,</span> variant<span class="hl sym">,</span> variant<span class="hl sym">.</span><span class="hl kwd">Matches</span><span class="hl sym">(</span>sequence<span class="hl sym">).</span>Count<span class="hl sym">);</span>
        <span class="hl sym">}</span>

        <span class="hl kwa">foreach</span> <span class="hl sym">(</span>var iub <span class="hl kwa">in</span> Codes<span class="hl sym">)</span>
        <span class="hl sym">{</span>
            sequence <span class="hl sym">=</span> iub<span class="hl sym">.</span>expression<span class="hl sym">.</span><span class="hl kwd">Replace</span><span class="hl sym">(</span>sequence<span class="hl sym">,</span> iub<span class="hl sym">.</span>alternatives<span class="hl sym">);</span>
        <span class="hl sym">}</span>

        Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span><span class="hl sym">();</span>
        Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span><span class="hl sym">(</span>initialLength<span class="hl sym">);</span>
        Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span><span class="hl sym">(</span>codeLength<span class="hl sym">);</span>
        Console<span class="hl sym">.</span><span class="hl kwd">WriteLine</span><span class="hl sym">(</span>sequence<span class="hl sym">.</span>Length<span class="hl sym">);</span>
    <span class="hl sym">}</span>

    <span class="hl kwa">private</span> <span class="hl kwb">struct</span> IUB
    <span class="hl sym">{</span>
        <span class="hl kwa">public readonly</span> <span class="hl kwb">string</span> alternatives<span class="hl sym">;</span>
        <span class="hl kwa">public readonly</span> Regex expression<span class="hl sym">;</span>

        <span class="hl kwa">public</span> <span class="hl kwd">IUB</span><span class="hl sym">(</span><span class="hl kwb">string</span> expression<span class="hl sym">,</span> <span class="hl kwb">string</span> alternatives<span class="hl sym">)</span>
        <span class="hl sym">{</span>
            <span class="hl kwa">this</span><span class="hl sym">.</span>expression <span class="hl sym">=</span> <span class="hl kwa">new</span> <span class="hl kwd">Regex</span><span class="hl sym">(</span>expression<span class="hl sym">,</span> regexOptions<span class="hl sym">);</span>
            <span class="hl kwa">this</span><span class="hl sym">.</span>alternatives <span class="hl sym">=</span> alternatives<span class="hl sym">;</span>
        <span class="hl sym">}</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>
