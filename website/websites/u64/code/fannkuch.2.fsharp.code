<span class="hl com">(*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> * contributed by Alex Peake</span>
<span class="hl com"> * Single Threaded Version</span>
<span class="hl com"> *)</span>


#light
<span class="hl kwa">open</span> <span class="hl kwd">System</span>

<span class="hl kwa">let</span> swap n m <span class="hl sym">(</span>arr <span class="hl sym">:</span> <span class="hl kwb">int</span><span class="hl sym">[]) =</span>
    <span class="hl kwa">let</span> temp <span class="hl sym">=</span> arr<span class="hl sym">.[</span>n<span class="hl sym">]</span>
    arr<span class="hl sym">.[</span>n<span class="hl sym">] &lt;-</span> arr<span class="hl sym">.[</span>m<span class="hl sym">]</span>
    arr<span class="hl sym">.[</span>m<span class="hl sym">] &lt;-</span> temp
    arr

<span class="hl kwa">let</span> flip n <span class="hl sym">(</span>arr <span class="hl sym">:</span> <span class="hl kwb">int</span><span class="hl sym">[]) =</span>
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span>n <span class="hl sym">/</span> <span class="hl num">2</span> <span class="hl kwa">do</span>
        swap i <span class="hl sym">(</span>n <span class="hl sym">-</span> i<span class="hl sym">)</span> arr <span class="hl sym">|&gt;</span> ignore
    arr

<span class="hl kwa">let</span> fannkuch <span class="hl kwd">N</span> <span class="hl sym">=</span>
    <span class="hl kwa">let</span>  a <span class="hl sym">= [|</span> <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">1</span><span class="hl sym">..</span><span class="hl kwd">N</span> <span class="hl sym">-&gt;</span> i <span class="hl sym">|]</span>
    <span class="hl kwa">let</span>  p <span class="hl sym">= [|</span> <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span><span class="hl kwd">N</span> <span class="hl sym">-&gt;</span> i <span class="hl sym">|]</span>

    <span class="hl kwa">for</span> e <span class="hl kwa">in</span> a <span class="hl kwa">do</span> printf <span class="hl str">&quot;%d&quot;</span> e
    <span class="hl kwa">do</span> printfn <span class="hl str">&quot;&quot;</span>

    <span class="hl kwa">let mutable</span> print <span class="hl sym">=</span> <span class="hl num">30</span>
    <span class="hl kwa">let mutable</span> i <span class="hl sym">=</span> <span class="hl num">1</span>
    <span class="hl kwa">let mutable</span> j <span class="hl sym">=</span> <span class="hl num">0</span>
    <span class="hl kwa">let mutable</span> tmp <span class="hl sym">=</span> <span class="hl num">0</span>
    <span class="hl kwa">let mutable</span> maxFlips <span class="hl sym">=</span> <span class="hl num">0</span>
    <span class="hl kwa">let mutable</span> numberFlips <span class="hl sym">=</span> <span class="hl num">0</span>
    <span class="hl kwa">let</span> flipper <span class="hl sym">=</span> <span class="hl kwc">Array</span><span class="hl sym">.</span>create <span class="hl kwd">N</span> <span class="hl num">0</span>

    <span class="hl kwa">while</span><span class="hl sym">(</span>i <span class="hl sym">&lt;</span> <span class="hl kwd">N</span><span class="hl sym">)</span> <span class="hl kwa">do</span>
        p<span class="hl sym">.[</span>i<span class="hl sym">] &lt;-</span> p<span class="hl sym">.[</span>i<span class="hl sym">] -</span> <span class="hl num">1</span>
        j <span class="hl sym">&lt;-</span> i <span class="hl sym">%</span> <span class="hl num">2</span> <span class="hl sym">*</span> p<span class="hl sym">.[</span>i<span class="hl sym">]</span>
        tmp <span class="hl sym">&lt;-</span> a<span class="hl sym">.[</span>j<span class="hl sym">]</span>
        a<span class="hl sym">.[</span>j<span class="hl sym">] &lt;-</span> a<span class="hl sym">.[</span>i<span class="hl sym">]</span>
        a<span class="hl sym">.[</span>i<span class="hl sym">] &lt;-</span> tmp
        i <span class="hl sym">&lt;-</span> <span class="hl num">1</span>
        <span class="hl kwa">while</span> <span class="hl sym">(</span>p<span class="hl sym">.[</span>i<span class="hl sym">] =</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">do</span>
            p<span class="hl sym">.[</span>i<span class="hl sym">] &lt;-</span> i
            i <span class="hl sym">&lt;-</span> i <span class="hl sym">+</span> <span class="hl num">1</span>

        <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl num">0</span><span class="hl sym">..</span><span class="hl kwd">N</span><span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
            flipper<span class="hl sym">.[</span>i<span class="hl sym">] &lt;-</span> a<span class="hl sym">.[</span>i<span class="hl sym">]</span>

        numberFlips <span class="hl sym">&lt;-</span> <span class="hl num">0</span>
        <span class="hl kwa">while</span> <span class="hl sym">(</span>flipper<span class="hl sym">.[</span><span class="hl num">0</span><span class="hl sym">] &lt;&gt;</span> <span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">do</span>
            flip <span class="hl sym">(</span>flipper<span class="hl sym">.[</span><span class="hl num">0</span><span class="hl sym">] -</span> <span class="hl num">1</span><span class="hl sym">)</span> flipper <span class="hl sym">|&gt;</span> ignore
            numberFlips <span class="hl sym">&lt;-</span> numberFlips <span class="hl sym">+</span> <span class="hl num">1</span>
        <span class="hl kwa">if</span> numberFlips <span class="hl sym">&gt;</span> maxFlips <span class="hl kwa">then</span> maxFlips <span class="hl sym">&lt;-</span> numberFlips

        <span class="hl kwa">if</span> <span class="hl sym">(</span>print <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">)</span> <span class="hl kwa">then</span>
            <span class="hl kwa">for</span> e <span class="hl kwa">in</span> a <span class="hl kwa">do</span> printf <span class="hl str">&quot;%d&quot;</span> e
            <span class="hl kwa">do</span> printfn <span class="hl str">&quot;&quot;</span>
            print <span class="hl sym">&lt;-</span> print <span class="hl sym">-</span> <span class="hl num">1</span>

    maxFlips

<span class="hl sym">[&lt;</span><span class="hl kwd">EntryPoint</span><span class="hl sym">&gt;]</span>
<span class="hl kwa">let</span> main<span class="hl sym">(</span>args<span class="hl sym">) =</span>
    <span class="hl kwa">let</span> x <span class="hl sym">=</span> <span class="hl kwa">if</span> args<span class="hl sym">.</span><span class="hl kwd">Length</span> <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> <span class="hl kwb">int</span> args<span class="hl sym">.[</span><span class="hl num">0</span><span class="hl sym">]</span> <span class="hl kwa">else</span> <span class="hl num">7</span>
    printfn <span class="hl str">&quot;Pfannkuchen(%d) = %d&quot;</span> x <span class="hl sym">(</span>fannkuch x<span class="hl sym">)</span>
    <span class="hl num">0</span>




