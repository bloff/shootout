<span class="hl sym">&lt;</span>? <span class="hl com">/* The Great Computer Language Shootout</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com"></span>
<span class="hl com">   contributed by Isaac Gouy</span>
<span class="hl com"></span>
<span class="hl com">   php -q pidigits.php 27</span>
<span class="hl com">*/</span>


<span class="hl kwa">class</span> Transformation <span class="hl sym">{</span>
   var <span class="hl kwc">$q</span><span class="hl sym">,</span> <span class="hl kwc">$r</span><span class="hl sym">,</span> <span class="hl kwc">$s</span><span class="hl sym">,</span> <span class="hl kwc">$t</span><span class="hl sym">,</span> <span class="hl kwc">$k</span><span class="hl sym">;</span>

   <span class="hl kwa">function</span> <span class="hl kwd">Transformation</span><span class="hl sym">(</span><span class="hl kwc">$q</span><span class="hl sym">,</span> <span class="hl kwc">$r</span><span class="hl sym">,</span> <span class="hl kwc">$s</span><span class="hl sym">,</span> <span class="hl kwc">$t</span><span class="hl sym">){</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>q <span class="hl sym">=</span> <span class="hl kwc">$q</span><span class="hl sym">;</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>r <span class="hl sym">=</span> <span class="hl kwc">$r</span><span class="hl sym">;</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>s <span class="hl sym">=</span> <span class="hl kwc">$s</span><span class="hl sym">;</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>t <span class="hl sym">=</span> <span class="hl kwc">$t</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function</span> <span class="hl kwd">Unity</span><span class="hl sym">(){</span>
      <span class="hl kwa">return</span> new <span class="hl kwd">Transformation</span><span class="hl sym">(</span><span class="hl str">&quot;1&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;0&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;0&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;1&quot;</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function</span> <span class="hl kwd">Zero</span><span class="hl sym">(){</span>
      <span class="hl kwa">return</span> new <span class="hl kwd">Transformation</span><span class="hl sym">(</span><span class="hl str">&quot;0&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;0&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;0&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;0&quot;</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>


   <span class="hl kwa">function</span> <span class="hl kwd">Compose</span><span class="hl sym">(</span><span class="hl kwc">$a</span><span class="hl sym">){</span>
      <span class="hl kwc">$qq</span> <span class="hl sym">=</span> <span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> <span class="hl kwc">$a</span><span class="hl sym">-&gt;</span>q<span class="hl sym">);</span>
      <span class="hl kwc">$qrrt</span> <span class="hl sym">=</span> <span class="hl kwa">bcadd</span><span class="hl sym">(</span><span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> <span class="hl kwc">$a</span><span class="hl sym">-&gt;</span>r<span class="hl sym">),</span> <span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>r<span class="hl sym">,</span> <span class="hl kwc">$a</span><span class="hl sym">-&gt;</span>t<span class="hl sym">));</span>
      <span class="hl kwc">$sqts</span> <span class="hl sym">=</span> <span class="hl kwa">bcadd</span><span class="hl sym">(</span><span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> <span class="hl kwc">$a</span><span class="hl sym">-&gt;</span>q<span class="hl sym">),</span> <span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> <span class="hl kwc">$a</span><span class="hl sym">-&gt;</span>s<span class="hl sym">));</span>
      <span class="hl kwc">$srtt</span> <span class="hl sym">=</span> <span class="hl kwa">bcadd</span><span class="hl sym">(</span><span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> <span class="hl kwc">$a</span><span class="hl sym">-&gt;</span>r<span class="hl sym">),</span> <span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>t<span class="hl sym">,</span> <span class="hl kwc">$a</span><span class="hl sym">-&gt;</span>t<span class="hl sym">));</span>
      <span class="hl kwa">return</span> new <span class="hl kwd">Transformation</span><span class="hl sym">(</span><span class="hl kwc">$qq</span><span class="hl sym">,</span> <span class="hl kwc">$qrrt</span><span class="hl sym">,</span> <span class="hl kwc">$sqts</span><span class="hl sym">,</span> <span class="hl kwc">$srtt</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function Extract</span><span class="hl sym">(</span><span class="hl kwc">$j</span><span class="hl sym">){</span>
      <span class="hl kwc">$bigj</span> <span class="hl sym">=</span> <span class="hl kwa">strval</span><span class="hl sym">(</span><span class="hl kwc">$j</span><span class="hl sym">);</span>
      <span class="hl kwc">$qjr</span> <span class="hl sym">=</span> <span class="hl kwa">bcadd</span><span class="hl sym">(</span><span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>q<span class="hl sym">,</span> <span class="hl kwc">$bigj</span><span class="hl sym">),</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>r<span class="hl sym">);</span>
      <span class="hl kwc">$sjt</span> <span class="hl sym">=</span> <span class="hl kwa">bcadd</span><span class="hl sym">(</span><span class="hl kwa">bcmul</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>s<span class="hl sym">,</span> <span class="hl kwc">$bigj</span><span class="hl sym">),</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>t<span class="hl sym">);</span>
      <span class="hl kwc">$d</span> <span class="hl sym">=</span> <span class="hl kwa">bcdiv</span><span class="hl sym">(</span><span class="hl kwc">$qjr</span><span class="hl sym">,</span> <span class="hl kwc">$sjt</span><span class="hl sym">);</span>
      <span class="hl kwa">return floor</span><span class="hl sym">(</span><span class="hl kwc">$d</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function Next</span><span class="hl sym">(){</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>k <span class="hl sym">=</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>k <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>q <span class="hl sym">=</span> <span class="hl kwa">strval</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>k<span class="hl sym">);</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>r <span class="hl sym">=</span> <span class="hl kwa">strval</span><span class="hl sym">(</span><span class="hl num">4</span><span class="hl sym">*</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>k <span class="hl sym">+</span> <span class="hl num">2</span><span class="hl sym">);</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>s <span class="hl sym">=</span> <span class="hl str">&quot;0&quot;</span><span class="hl sym">;</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>t <span class="hl sym">=</span> <span class="hl kwa">strval</span><span class="hl sym">(</span><span class="hl num">2</span><span class="hl sym">*</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>k <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">);</span>
      <span class="hl kwa">return</span> <span class="hl kwc">$this</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>



<span class="hl kwa">class</span> PiDigitStream <span class="hl sym">{</span>
   var <span class="hl kwc">$z</span><span class="hl sym">,</span> <span class="hl kwc">$x</span><span class="hl sym">,</span> <span class="hl kwc">$inverse</span><span class="hl sym">;</span>

   <span class="hl kwa">function</span> <span class="hl kwd">PiDigitStream</span><span class="hl sym">(){</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>z <span class="hl sym">=</span> Transformation<span class="hl sym">::</span><span class="hl kwd">Unity</span><span class="hl sym">();</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>x <span class="hl sym">=</span> Transformation<span class="hl sym">::</span><span class="hl kwd">Zero</span><span class="hl sym">();</span>
      <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>inverse <span class="hl sym">=</span> Transformation<span class="hl sym">::</span><span class="hl kwd">Zero</span><span class="hl sym">();</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function</span> <span class="hl kwd">Produce</span><span class="hl sym">(</span><span class="hl kwc">$j</span><span class="hl sym">){</span>
      <span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>inverse<span class="hl sym">;</span>
      <span class="hl kwc">$i</span><span class="hl sym">-&gt;</span>q <span class="hl sym">=</span> <span class="hl str">&quot;10&quot;</span><span class="hl sym">;</span>
      <span class="hl kwc">$i</span><span class="hl sym">-&gt;</span>r <span class="hl sym">=</span> <span class="hl kwa">strval</span><span class="hl sym">(-</span><span class="hl num">10</span><span class="hl sym">*</span><span class="hl kwc">$j</span><span class="hl sym">);</span>
      <span class="hl kwc">$i</span><span class="hl sym">-&gt;</span>s <span class="hl sym">=</span> <span class="hl str">&quot;0&quot;</span><span class="hl sym">;</span>
      <span class="hl kwc">$i</span><span class="hl sym">-&gt;</span>t <span class="hl sym">=</span> <span class="hl str">&quot;1&quot;</span><span class="hl sym">;</span>
      <span class="hl kwa">return</span> <span class="hl kwc">$i</span><span class="hl sym">-&gt;</span><span class="hl kwd">Compose</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>z<span class="hl sym">);</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function</span> <span class="hl kwd">Consume</span><span class="hl sym">(</span><span class="hl kwc">$a</span><span class="hl sym">){</span>
      <span class="hl kwa">return</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>z <span class="hl sym">-&gt;</span><span class="hl kwd">Compose</span><span class="hl sym">(</span><span class="hl kwc">$a</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function</span> <span class="hl kwd">Digit</span><span class="hl sym">(){</span>
      <span class="hl kwa">return</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>z <span class="hl sym">-&gt;</span><span class="hl kwa">Extract</span><span class="hl sym">(</span><span class="hl num">3</span><span class="hl sym">);</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function</span> <span class="hl kwd">IsSafe</span><span class="hl sym">(</span><span class="hl kwc">$j</span><span class="hl sym">){</span>
      <span class="hl kwa">return</span> <span class="hl kwc">$j</span> <span class="hl sym">== (</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>z <span class="hl sym">-&gt;</span><span class="hl kwa">Extract</span><span class="hl sym">(</span><span class="hl num">4</span><span class="hl sym">));</span>
   <span class="hl sym">}</span>

   <span class="hl kwa">function Next</span><span class="hl sym">(){</span>
      <span class="hl kwc">$y</span> <span class="hl sym">=</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span><span class="hl kwd">Digit</span><span class="hl sym">();</span>
      <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span><span class="hl kwd">IsSafe</span><span class="hl sym">(</span><span class="hl kwc">$y</span><span class="hl sym">)){</span>
         <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>z <span class="hl sym">=</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span><span class="hl kwd">Produce</span><span class="hl sym">(</span><span class="hl kwc">$y</span><span class="hl sym">);</span>
         <span class="hl kwa">return</span> <span class="hl kwc">$y</span><span class="hl sym">;</span>
      <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
         <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>z <span class="hl sym">=</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span><span class="hl kwd">Consume</span><span class="hl sym">(</span><span class="hl kwc">$this</span><span class="hl sym">-&gt;</span>x <span class="hl sym">-&gt;</span><span class="hl kwa">Next</span><span class="hl sym">());</span>
         <span class="hl kwa">return</span> <span class="hl kwc">$this</span><span class="hl sym">-&gt;</span><span class="hl kwa">Next</span><span class="hl sym">();</span>
      <span class="hl sym">}</span>
   <span class="hl sym">}</span>
<span class="hl sym">}</span>


<span class="hl kwc">$n</span> <span class="hl sym">=</span> <span class="hl kwc">$argv</span><span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">];</span>
<span class="hl kwc">$i</span> <span class="hl sym">=</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl kwc">$length</span> <span class="hl sym">=</span> <span class="hl num">10</span><span class="hl sym">;</span>
<span class="hl kwc">$pidigit</span> <span class="hl sym">=</span> new PiDigitStream<span class="hl sym">;</span>

<span class="hl kwa">while</span> <span class="hl sym">(</span><span class="hl kwc">$n</span> <span class="hl sym">&gt;</span> <span class="hl num">0</span><span class="hl sym">){</span>
   <span class="hl kwa">if</span> <span class="hl sym">(</span><span class="hl kwc">$n</span> <span class="hl sym">&lt;</span> <span class="hl kwc">$length</span><span class="hl sym">){</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$j</span><span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwc">$j</span><span class="hl sym">&lt;</span><span class="hl kwc">$n</span><span class="hl sym">;</span> <span class="hl kwc">$j</span><span class="hl sym">++)</span> <span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%d&quot;</span><span class="hl sym">,</span><span class="hl kwc">$pidigit</span><span class="hl sym">-&gt;</span><span class="hl kwa">Next</span><span class="hl sym">());</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$j</span><span class="hl sym">=</span><span class="hl kwc">$n</span><span class="hl sym">;</span> <span class="hl kwc">$j</span><span class="hl sym">&lt;</span><span class="hl kwc">$length</span><span class="hl sym">;</span> <span class="hl kwc">$j</span><span class="hl sym">++)</span>  <span class="hl kwa">print</span> <span class="hl str">&quot; &quot;</span><span class="hl sym">;</span>
      <span class="hl kwc">$i</span> <span class="hl sym">+=</span> <span class="hl kwc">$n</span><span class="hl sym">;</span>
   <span class="hl sym">}</span> <span class="hl kwa">else</span> <span class="hl sym">{</span>
      <span class="hl kwa">for</span> <span class="hl sym">(</span><span class="hl kwc">$j</span><span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span> <span class="hl kwc">$j</span><span class="hl sym">&lt;</span><span class="hl kwc">$length</span><span class="hl sym">;</span> <span class="hl kwc">$j</span><span class="hl sym">++)</span> <span class="hl kwa">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%d&quot;</span><span class="hl sym">,</span><span class="hl kwc">$pidigit</span><span class="hl sym">-&gt;</span><span class="hl kwa">Next</span><span class="hl sym">());</span>
      <span class="hl kwc">$i</span> <span class="hl sym">+=</span> <span class="hl kwc">$length</span><span class="hl sym">;</span>
   <span class="hl sym">}</span>
   <span class="hl kwa">print</span> <span class="hl str">&quot;</span><span class="hl esc">\t</span><span class="hl str">:$i</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">;</span>
   <span class="hl kwc">$n</span> <span class="hl sym">-=</span> <span class="hl kwc">$length</span><span class="hl sym">;</span>
<span class="hl sym">}</span>
?<span class="hl sym">&gt;</span>
