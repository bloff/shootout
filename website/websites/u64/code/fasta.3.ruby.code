<span class="hl slc"># The Computer Language Shootout</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc"># Contributed by Sokolov Yura</span>
<span class="hl slc"># Modified by Wesley Moxam</span>

<span class="hl kwb">$last</span> <span class="hl sym">=</span> <span class="hl num">42.0</span>
<span class="hl kwa">def</span> <span class="hl kwd">gen_random</span> <span class="hl sym">(</span>max<span class="hl sym">,</span>im<span class="hl sym">=</span><span class="hl num">139968</span><span class="hl sym">,</span>ia<span class="hl sym">=</span><span class="hl num">3877</span><span class="hl sym">,</span>ic<span class="hl sym">=</span><span class="hl num">29573</span><span class="hl sym">)</span>
  <span class="hl sym">(</span>max <span class="hl sym">* (</span><span class="hl kwb">$last</span> <span class="hl sym">= (</span><span class="hl kwb">$last</span> <span class="hl sym">*</span> ia <span class="hl sym">+</span> ic<span class="hl sym">) %</span> im<span class="hl sym">)) /</span> im
<span class="hl kwa">end</span>

alu <span class="hl sym">=</span>
   <span class="hl str">&quot;GGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;GAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGA&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;CCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;ACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCA&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;GCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGG&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;AGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC&quot;</span><span class="hl sym">+</span>
   <span class="hl str">&quot;AGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAA&quot;</span>

iub <span class="hl sym">= [</span>
    <span class="hl sym">[</span><span class="hl str">&quot;a&quot;</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;c&quot;</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;g&quot;</span><span class="hl sym">,</span> <span class="hl num">0.12</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;t&quot;</span><span class="hl sym">,</span> <span class="hl num">0.27</span><span class="hl sym">],</span>

    <span class="hl sym">[</span><span class="hl str">&quot;B&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;D&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;H&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;K&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;M&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;N&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;R&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;S&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;V&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;W&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;Y&quot;</span><span class="hl sym">,</span> <span class="hl num">0.02</span><span class="hl sym">],</span>
<span class="hl sym">]</span>
homosapiens <span class="hl sym">= [</span>
    <span class="hl sym">[</span><span class="hl str">&quot;a&quot;</span><span class="hl sym">,</span> <span class="hl num">0.3029549426680</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;c&quot;</span><span class="hl sym">,</span> <span class="hl num">0.1979883004921</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;g&quot;</span><span class="hl sym">,</span> <span class="hl num">0.1975473066391</span><span class="hl sym">],</span>
    <span class="hl sym">[</span><span class="hl str">&quot;t&quot;</span><span class="hl sym">,</span> <span class="hl num">0.3015094502008</span><span class="hl sym">],</span>
<span class="hl sym">]</span>

<span class="hl kwa">def</span> <span class="hl kwd">make_repeat_fasta</span><span class="hl sym">(</span>id<span class="hl sym">,</span> desc<span class="hl sym">,</span> src<span class="hl sym">,</span> n<span class="hl sym">)</span>
    <span class="hl kwb">$out</span><span class="hl sym">.</span>write <span class="hl str">&quot;&gt;#{id} #{desc}&quot;</span>
    v <span class="hl sym">=</span> <span class="hl kwa">nil</span>
    width <span class="hl sym">=</span> <span class="hl num">60</span>
    l <span class="hl sym">=</span> src<span class="hl sym">.</span>length
    s <span class="hl sym">=</span> src <span class="hl sym">* ((</span>n <span class="hl sym">/</span> l<span class="hl sym">) +</span> <span class="hl num">1</span><span class="hl sym">)</span>
    s<span class="hl sym">.</span>slice<span class="hl sym">!(</span>n<span class="hl sym">,</span> l<span class="hl sym">)</span>
    <span class="hl kwb">$out</span><span class="hl sym">.</span><span class="hl kwd">write</span><span class="hl sym">(</span>s<span class="hl sym">.</span><span class="hl kwd">scan</span><span class="hl sym">(/.{</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl slc">#{width}}/).join(&quot;\n&quot;))</span>
<span class="hl kwa">end</span>

<span class="hl kwa">def</span> <span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span>id<span class="hl sym">,</span> desc<span class="hl sym">,</span> table<span class="hl sym">,</span> n<span class="hl sym">)</span>
  <span class="hl kwb">$out</span><span class="hl sym">.</span>write <span class="hl str">&quot;&gt;#{id} #{desc}&quot;</span>
  rand<span class="hl sym">,</span> v <span class="hl sym">=</span> <span class="hl kwa">nil</span><span class="hl sym">,</span><span class="hl kwa">nil</span>
  width <span class="hl sym">=</span> <span class="hl num">60</span>
  chunk <span class="hl sym">=</span> <span class="hl num">1</span> <span class="hl sym">*</span> width
  prob <span class="hl sym">=</span> <span class="hl num">0.0</span>
  table<span class="hl sym">.</span>each<span class="hl sym">{|</span>v<span class="hl sym">|</span> v<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]= (</span>prob <span class="hl sym">+=</span> v<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">])}</span>
  <span class="hl num">1</span><span class="hl sym">.</span><span class="hl kwd">upto</span><span class="hl sym">(</span>n <span class="hl sym">/</span> width<span class="hl sym">) {|</span>i<span class="hl sym">|</span>
      <span class="hl num">1</span><span class="hl sym">.</span><span class="hl kwd">upto</span><span class="hl sym">(</span>width<span class="hl sym">) {</span>
          rand <span class="hl sym">=</span> <span class="hl kwd">gen_random</span><span class="hl sym">(</span><span class="hl num">1.0</span><span class="hl sym">)</span>
          table<span class="hl sym">.</span>each <span class="hl sym">{|</span>e<span class="hl sym">|</span>
              <span class="hl kwa">if</span> e<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] &gt;</span> rand
                <span class="hl kwb">$out</span><span class="hl sym">.</span>write e<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>
                <span class="hl kwa">break</span>
              <span class="hl kwa">end</span>
          <span class="hl sym">}</span>
      <span class="hl sym">}</span>
      <span class="hl kwb">$out</span><span class="hl sym">.</span>write <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
  <span class="hl sym">}</span>
  <span class="hl kwa">if</span> n <span class="hl sym">%</span> width <span class="hl sym">!=</span> <span class="hl num">0</span>
    <span class="hl num">1</span><span class="hl sym">.</span><span class="hl kwd">upto</span><span class="hl sym">(</span>n <span class="hl sym">%</span> width<span class="hl sym">) {</span>
      rand <span class="hl sym">=</span> <span class="hl kwd">gen_random</span><span class="hl sym">(</span><span class="hl num">1.0</span><span class="hl sym">)</span>
      table<span class="hl sym">.</span>each <span class="hl sym">{|</span>e<span class="hl sym">|</span>
        <span class="hl kwa">if</span> e<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">] &gt;</span> rand
          <span class="hl kwb">$out</span><span class="hl sym">.</span>write e<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span>
          <span class="hl kwa">break</span>
        <span class="hl kwa">end</span>
      <span class="hl sym">}</span>
    <span class="hl sym">}</span>
    <span class="hl kwb">$out</span><span class="hl sym">.</span>write <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>
  <span class="hl kwa">end</span>
<span class="hl kwa">end</span>


n <span class="hl sym">= (</span><span class="hl kwc">ARGV</span><span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">]</span> <span class="hl kwa">or</span> <span class="hl num">27</span><span class="hl sym">).</span>to_i

<span class="hl slc"># Ruby's stdout isn't fast. Buffering in a file helps a lot</span>
output_file_name <span class="hl sym">=</span> <span class="hl str">'fasta.txt'</span>
<span class="hl kwb">$out</span> <span class="hl sym">=</span> File<span class="hl sym">.</span><span class="hl kwd">open</span><span class="hl sym">(</span>output_file_name<span class="hl sym">,</span> <span class="hl str">'w'</span><span class="hl sym">)</span>
<span class="hl kwd">make_repeat_fasta</span><span class="hl sym">(</span><span class="hl str">'ONE'</span><span class="hl sym">,</span> <span class="hl str">'Homo sapiens alu'</span><span class="hl sym">,</span> alu<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">2</span><span class="hl sym">)</span>
<span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span><span class="hl str">'TWO'</span><span class="hl sym">,</span> <span class="hl str">'IUB ambiguity codes'</span><span class="hl sym">,</span> iub<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">3</span><span class="hl sym">)</span>
<span class="hl kwd">make_random_fasta</span><span class="hl sym">(</span><span class="hl str">'THREE'</span><span class="hl sym">,</span> <span class="hl str">'Homo sapiens frequency'</span><span class="hl sym">,</span> homosapiens<span class="hl sym">,</span> n<span class="hl sym">*</span><span class="hl num">5</span><span class="hl sym">)</span>
<span class="hl kwb">$out</span><span class="hl sym">.</span>close

out <span class="hl sym">=</span> File<span class="hl sym">.</span><span class="hl kwd">open</span><span class="hl sym">(</span>output_file_name<span class="hl sym">,</span> <span class="hl str">'r'</span><span class="hl sym">)</span>
<span class="hl kwa">while</span> <span class="hl sym">!</span> out<span class="hl sym">.</span>eof<span class="hl sym">?</span>
  print out<span class="hl sym">.</span><span class="hl kwd">read</span><span class="hl sym">(</span><span class="hl num">1048576</span><span class="hl sym">)</span> <span class="hl slc"># read 1 MB at a time</span>
<span class="hl kwa">end</span>
out<span class="hl sym">.</span>close

File<span class="hl sym">.</span>unlink output_file_name

