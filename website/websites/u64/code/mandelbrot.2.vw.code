<span class="hl com">&quot;* The Computer Language Benchmarks Game</span>
<span class="hl com">    http://shootout.alioth.debian.org/</span>
<span class="hl com">    contributed by Paolo Bonzini *&quot;</span>!

!<span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmarking'</span>!<span class="hl kwb">mandelbrot2:</span> extent <span class="hl kwb">to:</span> output   <span class="hl kwd">| limit2 m bits zr zi cr ci i tr stepr stepi |</span>   limit2 <span class="hl sym">:=</span> <span class="hl num">4.0</span>d0<span class="hl sym">.</span>
   m <span class="hl sym">:=</span> <span class="hl num">50</span><span class="hl sym">.</span>
   stepr <span class="hl sym">:=</span> <span class="hl num">2.0</span>d0 <span class="hl kwb">/</span> extent<span class="hl sym">.</span>
   stepi <span class="hl sym">:=</span> <span class="hl num">2.0</span>d0 <span class="hl kwb">/</span> extent<span class="hl sym">.</span>

   <span class="hl num">0</span> <span class="hl kwb">to:</span> extent <span class="hl kwb">-</span> <span class="hl num">1</span> <span class="hl kwb">do:</span> <span class="hl sym">[</span> <span class="hl kwd">:y</span> <span class="hl sym">|</span>
       bits <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>
       ci <span class="hl sym">:=</span> stepi <span class="hl kwb">*</span> y <span class="hl kwb">asFloat -</span> <span class="hl num">1.0</span>d0<span class="hl sym">.</span>
       <span class="hl num">0</span> <span class="hl kwb">to:</span> extent <span class="hl kwb">-</span> <span class="hl num">1</span> <span class="hl kwb">do:</span> <span class="hl sym">[</span> <span class="hl kwd">:x</span> <span class="hl sym">|</span>
           cr <span class="hl sym">:=</span> stepr <span class="hl kwb">*</span> x <span class="hl kwb">asFloat -</span> <span class="hl num">1.5</span>d0<span class="hl sym">.</span>
           zr <span class="hl sym">:=</span> cr<span class="hl sym">.</span> zi <span class="hl sym">:=</span> ci<span class="hl sym">.</span>

           bits <span class="hl sym">:=</span> bits <span class="hl kwb">bitShift:</span> <span class="hl num">1</span><span class="hl sym">.</span>
           i <span class="hl sym">:=</span> <span class="hl num">1</span><span class="hl sym">.</span>
           <span class="hl sym">[</span>
               tr <span class="hl sym">:= (</span>zr<span class="hl kwb">*</span>zr<span class="hl sym">)</span> <span class="hl kwb">-</span> <span class="hl sym">(</span>zi<span class="hl kwb">*</span>zi<span class="hl sym">)</span> <span class="hl kwb">+</span> cr<span class="hl sym">.</span>
               zi <span class="hl sym">:=</span> <span class="hl num">2.0</span>d0 <span class="hl kwb">*</span> zr <span class="hl kwb">*</span> zi <span class="hl kwb">+</span> ci<span class="hl sym">.</span>
               zr <span class="hl sym">:=</span> tr<span class="hl sym">.</span>
               <span class="hl sym">(</span>zr<span class="hl kwb">*</span>zr<span class="hl sym">)</span> <span class="hl kwb">+</span> <span class="hl sym">(</span>zi<span class="hl kwb">*</span>zi<span class="hl sym">)</span> &lt; <span class="hl kwb">limit</span><span class="hl num">2</span> <span class="hl kwb">and:</span> <span class="hl sym">[ (</span>i <span class="hl sym">:=</span> i <span class="hl kwb">+</span> <span class="hl num">1</span><span class="hl sym">)</span> &lt; <span class="hl kwb">m</span> <span class="hl sym">]</span>
           <span class="hl sym">]</span> <span class="hl kwb">whileTrue</span><span class="hl sym">.</span>

           i <span class="hl kwb">=</span> m <span class="hl kwb">ifTrue:</span> <span class="hl sym">[</span> bits <span class="hl sym">:=</span> bits <span class="hl kwb">+</span> <span class="hl num">1</span> <span class="hl sym">].</span>
           <span class="hl sym">(</span>x <span class="hl kwb">bitAnd:</span> <span class="hl num">7</span><span class="hl sym">)</span> <span class="hl kwb">==</span> <span class="hl num">7</span> <span class="hl kwb">ifTrue:</span> <span class="hl sym">[</span>
               output <span class="hl kwb">nextPut:</span> bits<span class="hl sym">.</span>
               bits <span class="hl sym">:=</span> <span class="hl num">0</span><span class="hl sym">.</span>
           <span class="hl sym">]</span>
       <span class="hl sym">].</span>
       <span class="hl sym">(</span>extent <span class="hl kwb">bitAnd:</span> <span class="hl num">7</span><span class="hl sym">)</span> <span class="hl kwb">==</span> <span class="hl num">0</span> <span class="hl kwb">ifFalse:</span> <span class="hl sym">[</span>
           bits <span class="hl sym">:=</span> bits <span class="hl kwb">bitShift:</span> <span class="hl num">8</span> <span class="hl kwb">-</span> <span class="hl sym">(</span>extent <span class="hl kwb">bitAnd:</span> <span class="hl num">7</span><span class="hl sym">).</span>
           output <span class="hl kwb">nextPut:</span> bits<span class="hl sym">.</span>
       <span class="hl sym">]</span>
   <span class="hl sym">]</span>! !

!<span class="hl kwc">Tests</span> <span class="hl kwb">class methodsFor:</span> <span class="hl str">'benchmark scripts'</span>!mandelbrot2   <span class="hl kwd">| n output |</span>   n <span class="hl sym">:=</span> <span class="hl kwa">self</span> <span class="hl kwb">arg</span><span class="hl sym">.   (</span>output <span class="hl sym">:=</span> <span class="hl kwa">self</span> <span class="hl kwb">stdout</span><span class="hl sym">)</span>      <span class="hl kwb">nextPutAll:</span> <span class="hl str">'P4'</span><span class="hl sym">;</span> <span class="hl kwb">nl</span><span class="hl sym">;</span> <span class="hl kwb">print:</span> n<span class="hl sym">;</span> <span class="hl kwb">space</span><span class="hl sym">;</span> <span class="hl kwb">print:</span> n<span class="hl sym">;</span> <span class="hl kwb">nl</span><span class="hl sym">;</span>
      binary<span class="hl sym">.</span>   <span class="hl kwa">self</span> <span class="hl kwb">mandelbrot2:</span> n <span class="hl kwb">to:</span> output<span class="hl sym">.   ^</span><span class="hl str">''</span>! !
