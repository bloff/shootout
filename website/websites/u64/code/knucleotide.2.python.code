<span class="hl slc"># The Computer Language Benchmarks Game</span>
<span class="hl slc"># http://shootout.alioth.debian.org/</span>
<span class="hl slc">#</span>
<span class="hl slc"># contributed by Todd Smith</span>

<span class="hl kwa">import</span> itertools
<span class="hl kwa">import</span> collections
<span class="hl kwa">import</span> sys

<span class="hl kwa">def</span> <span class="hl kwd">count</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> sz<span class="hl sym">):</span>
    freq <span class="hl sym">=</span> collections<span class="hl sym">.</span><span class="hl kwd">defaultdict</span><span class="hl sym">(</span><span class="hl kwb">int</span><span class="hl sym">)</span>
    <span class="hl kwa">for</span> i <span class="hl kwa">in</span> <span class="hl kwb">range</span><span class="hl sym">(</span><span class="hl kwb">len</span><span class="hl sym">(</span>seq<span class="hl sym">)+</span><span class="hl num">1</span><span class="hl sym">-</span>sz<span class="hl sym">):</span>
        freq<span class="hl sym">[</span>seq<span class="hl sym">[</span>i<span class="hl sym">:</span>i<span class="hl sym">+</span>sz<span class="hl sym">]] +=</span> <span class="hl num">1</span>
    <span class="hl kwa">return</span> freq

<span class="hl slc"># read input line-by-line</span>
<span class="hl kwb">input</span> <span class="hl sym">=</span> itertools<span class="hl sym">.</span><span class="hl kwd">dropwhile</span><span class="hl sym">(</span><span class="hl kwa">lambda</span> ln<span class="hl sym">:</span> ln<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">:</span><span class="hl num">3</span><span class="hl sym">] !=</span> <span class="hl str">&quot;&gt;TH&quot;</span><span class="hl sym">,</span> sys<span class="hl sym">.</span>stdin<span class="hl sym">)</span>
<span class="hl kwd">next</span><span class="hl sym">(</span><span class="hl kwb">input</span><span class="hl sym">)</span>
seq <span class="hl sym">=</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">(</span>ln<span class="hl sym">[:-</span><span class="hl num">1</span><span class="hl sym">]</span> <span class="hl kwa">for</span> ln <span class="hl kwa">in</span> <span class="hl kwb">input</span><span class="hl sym">).</span><span class="hl kwd">upper</span><span class="hl sym">()</span>

<span class="hl kwa">for</span> sz <span class="hl kwa">in</span> <span class="hl sym">(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">):</span>
    x <span class="hl sym">=</span> <span class="hl num">100.0</span><span class="hl sym">/(</span><span class="hl kwb">len</span><span class="hl sym">(</span>seq<span class="hl sym">)+</span><span class="hl num">1</span><span class="hl sym">-</span>sz<span class="hl sym">)</span>
    <span class="hl kwa">print</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">.</span><span class="hl kwd">join</span><span class="hl sym">(</span><span class="hl str">&quot;%s %.3f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">% (</span>s<span class="hl sym">,</span>f<span class="hl sym">*</span>x<span class="hl sym">)</span> <span class="hl kwa">for</span> s<span class="hl sym">,</span>f <span class="hl kwa">in</span>
                  <span class="hl kwb">sorted</span><span class="hl sym">(</span><span class="hl kwd">count</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> sz<span class="hl sym">).</span><span class="hl kwd">items</span><span class="hl sym">(),</span> key<span class="hl sym">=</span><span class="hl kwa">lambda</span> sf<span class="hl sym">:(-</span>sf<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">],</span>sf<span class="hl sym">[</span><span class="hl num">0</span><span class="hl sym">])))</span>

<span class="hl kwa">for</span> p <span class="hl kwa">in</span> <span class="hl sym">(</span><span class="hl str">'GGT'</span><span class="hl sym">,</span> <span class="hl str">'GGTA'</span><span class="hl sym">,</span> <span class="hl str">'GGTATT'</span><span class="hl sym">,</span> <span class="hl str">'GGTATTTTAATT'</span><span class="hl sym">,</span> <span class="hl str">'GGTATTTTAATTTATAGT'</span><span class="hl sym">):</span>
    <span class="hl kwa">print</span> <span class="hl str">&quot;%d</span><span class="hl esc">\t</span><span class="hl str">%s&quot;</span> <span class="hl sym">% (</span><span class="hl kwd">count</span><span class="hl sym">(</span>seq<span class="hl sym">,</span> <span class="hl kwb">len</span><span class="hl sym">(</span>p<span class="hl sym">))[</span>p<span class="hl sym">],</span> p<span class="hl sym">)</span>
