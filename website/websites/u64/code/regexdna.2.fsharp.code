<span class="hl sym">//</span> <span class="hl kwd">The Computer Language Benchmarks Game</span>
<span class="hl sym">//</span> http<span class="hl sym">://</span>shootout<span class="hl sym">.</span>alioth<span class="hl sym">.</span>debian<span class="hl sym">.</span>org<span class="hl sym">/</span>
<span class="hl sym">//</span>
<span class="hl sym">//</span> <span class="hl kwd">Contributed</span> by <span class="hl kwd">Valentin Kraevskiy</span>

<span class="hl kwa">open</span> <span class="hl kwc">System</span><span class="hl sym">.</span><span class="hl kwc">Text</span><span class="hl sym">.</span><span class="hl kwd">RegularExpressions</span>

<span class="hl kwa">let</span> regex s <span class="hl sym">=</span> <span class="hl kwd">Regex</span> <span class="hl sym">(</span>s<span class="hl sym">,</span> <span class="hl kwc">RegexOptions</span><span class="hl sym">.</span><span class="hl kwd">Compiled</span><span class="hl sym">)</span>
<span class="hl kwa">let</span> input <span class="hl sym">=</span> stdin<span class="hl sym">.</span><span class="hl kwd">ReadToEnd</span> <span class="hl sym">()</span>
<span class="hl kwa">let</span> text <span class="hl sym">= (</span>regex <span class="hl str">&quot;&gt;.*</span><span class="hl esc">\n</span><span class="hl str">|</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">).</span><span class="hl kwd">Replace</span> <span class="hl sym">(</span>input<span class="hl sym">,</span> <span class="hl str">&quot;&quot;</span><span class="hl sym">)</span>

<span class="hl sym">[</span><span class="hl str">&quot;agggtaaa|tttaccct&quot;</span>
 <span class="hl str">&quot;[cgt]gggtaaa|tttaccc[acg]&quot;</span>
 <span class="hl str">&quot;a[act]ggtaaa|tttacc[agt]t&quot;</span>
 <span class="hl str">&quot;ag[act]gtaaa|tttac[agt]ct&quot;</span>
 <span class="hl str">&quot;agg[act]taaa|ttta[agt]cct&quot;</span>
 <span class="hl str">&quot;aggg[acg]aaa|ttt[cgt]ccct&quot;</span>
 <span class="hl str">&quot;agggt[cgt]aa|tt[acg]accct&quot;</span>
 <span class="hl str">&quot;agggta[cgt]a|t[acg]taccct&quot;</span>
 <span class="hl str">&quot;agggtaa[cgt]|[acg]ttaccct&quot;</span><span class="hl sym">]</span>
<span class="hl sym">|&gt;</span> <span class="hl kwc">List</span><span class="hl sym">.</span>iter <span class="hl sym">(</span><span class="hl kwa">fun</span> s <span class="hl sym">-&gt;</span>
         printf <span class="hl str">&quot;%s %i</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> s <span class="hl sym">((</span>regex s<span class="hl sym">).</span><span class="hl kwd">Matches</span> text<span class="hl sym">).</span><span class="hl kwd">Count</span><span class="hl sym">)</span>

<span class="hl kwa">let</span> newText <span class="hl sym">=</span>
    <span class="hl sym">[</span><span class="hl str">&quot;B&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(c|g|t)&quot;</span>
     <span class="hl str">&quot;D&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|g|t)&quot;</span>
     <span class="hl str">&quot;H&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c|t)&quot;</span>
     <span class="hl str">&quot;K&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(g|t)&quot;</span>
     <span class="hl str">&quot;M&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c)&quot;</span>
     <span class="hl str">&quot;N&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c|g|t)&quot;</span>
     <span class="hl str">&quot;R&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|g)&quot;</span>
     <span class="hl str">&quot;S&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(c|g)&quot;</span>
     <span class="hl str">&quot;V&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|c|g)&quot;</span>
     <span class="hl str">&quot;W&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(a|t)&quot;</span>
     <span class="hl str">&quot;Y&quot;</span><span class="hl sym">,</span> <span class="hl str">&quot;(c|t)&quot;</span><span class="hl sym">]</span>
     <span class="hl sym">|&gt;</span> <span class="hl kwc">List</span><span class="hl sym">.</span>fold <span class="hl sym">(</span><span class="hl kwa">fun</span> s <span class="hl sym">(</span>code<span class="hl sym">,</span> alt<span class="hl sym">) -&gt;</span> 
            <span class="hl sym">(</span>regex code<span class="hl sym">).</span><span class="hl kwd">Replace</span> <span class="hl sym">(</span>s<span class="hl sym">,</span> alt<span class="hl sym">))</span> text

printf <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">%i</span><span class="hl esc">\n</span><span class="hl str">%i</span><span class="hl esc">\n</span><span class="hl str">%i</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> input<span class="hl sym">.</span><span class="hl kwd">Length</span> text<span class="hl sym">.</span><span class="hl kwd">Length</span> newText<span class="hl sym">.</span><span class="hl kwd">Length</span>
