<span class="hl com">{-</span>
<span class="hl com">   	The Computer Language Benchmarks Game</span>
<span class="hl com">   	http://shootout.alioth.debian.org/</span>
<span class="hl com">   	contributed by Bertram Felgenhauer</span>
<span class="hl com">-}</span>

import Data.Word
import Data.Array
import Data.Bits
import System

pieces <span class="hl sym">= [</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">3</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">3</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">3</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">2</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">2</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">2</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">2</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">3</span><span class="hl sym">)],</span>
    <span class="hl sym">[(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">0</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">),(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">3</span><span class="hl sym">),(</span><span class="hl num">1</span><span class="hl sym">,</span><span class="hl num">2</span><span class="hl sym">)]]</span>

transform p <span class="hl sym">=</span>
    <span class="hl sym">[</span> map <span class="hl sym">(</span>\<span class="hl sym">(</span>y<span class="hl sym">,</span>x<span class="hl sym">) -&gt; (</span>y<span class="hl sym">-</span>dy<span class="hl sym">,</span>x<span class="hl sym">-</span>dx<span class="hl sym">))</span> p''
    <span class="hl sym">|</span> p' <span class="hl sym">&lt;-</span> take <span class="hl num">6</span> <span class="hl sym">(</span>iterate <span class="hl sym">(</span>map <span class="hl sym">(</span>\<span class="hl sym">(</span>y<span class="hl sym">,</span>x<span class="hl sym">) -&gt; (</span>x<span class="hl sym">+</span>y<span class="hl sym">,-</span>y<span class="hl sym">)))</span> p<span class="hl sym">),</span>
      p'' <span class="hl sym">&lt;-</span> take <span class="hl num">2</span> <span class="hl sym">(</span>iterate <span class="hl sym">(</span>map <span class="hl sym">(</span>\<span class="hl sym">(</span>y<span class="hl sym">,</span>x<span class="hl sym">) -&gt; (</span>x<span class="hl sym">,</span>y<span class="hl sym">)))</span> p'<span class="hl sym">),</span>
      let <span class="hl sym">(</span>dy<span class="hl sym">,</span>dx<span class="hl sym">) =</span> minimum p''<span class="hl sym">]</span>

pieceMasks <span class="hl sym">=</span> listArray <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">9</span><span class="hl sym">) (</span>map <span class="hl sym">(</span>pieceMasks' . transform<span class="hl sym">)</span> pieces<span class="hl sym">)</span> where
    pieceMasks' ps <span class="hl sym">=</span> listArray <span class="hl sym">(</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">9</span><span class="hl sym">) [</span>pieceMasks'' ps <span class="hl sym">(</span>y<span class="hl sym">,</span>x<span class="hl sym">) |</span> y <span class="hl sym">&lt;- [</span><span class="hl num">0</span><span class="hl sym">,</span><span class="hl num">1</span><span class="hl sym">],</span> x <span class="hl sym">&lt;- [</span><span class="hl num">0</span>.<span class="hl num">.4</span><span class="hl sym">]]</span>
    pieceMasks'' ps pos <span class="hl sym">= [</span>m <span class="hl sym">|</span> p <span class="hl sym">&lt;-</span> ps<span class="hl sym">,</span> m <span class="hl sym">&lt;-</span> mask <span class="hl num">0</span> pos p<span class="hl sym">]</span>
    mask m <span class="hl sym">(</span>dy<span class="hl sym">,</span>dx<span class="hl sym">) [] = [</span>m<span class="hl sym">]</span>
    mask m <span class="hl sym">(</span>dy<span class="hl sym">,</span>dx<span class="hl sym">) ((</span>y<span class="hl sym">,</span>x<span class="hl sym">):</span>ps<span class="hl sym">)</span>
        <span class="hl sym">|</span> x' <span class="hl sym">&lt;</span> <span class="hl num">0</span> <span class="hl sym">||</span> x' <span class="hl sym">&gt;</span> <span class="hl num">4</span> <span class="hl sym">= []</span>
        <span class="hl sym">|</span> True <span class="hl sym">=</span> mask <span class="hl sym">(</span>m .<span class="hl sym">|</span>. shiftL <span class="hl num">1</span> <span class="hl sym">((</span>dy<span class="hl sym">+</span>y<span class="hl sym">)*</span><span class="hl num">5</span><span class="hl sym">+</span>x'<span class="hl sym">)) (</span>dy<span class="hl sym">,</span>dx<span class="hl sym">)</span> ps
        where x' <span class="hl sym">=</span> x <span class="hl sym">+</span> dx <span class="hl sym">+</span> div <span class="hl sym">(</span>y<span class="hl sym">+</span>dy<span class="hl sym">)</span> <span class="hl num">2</span>

search m <span class="hl num">50</span> p ps <span class="hl sym">= [</span>ps<span class="hl sym">]</span>
search m i p ps <span class="hl sym">| (</span>m .<span class="hl sym">&amp;</span>. shiftL <span class="hl num">1</span> i<span class="hl sym">) &gt;</span> <span class="hl num">0</span> <span class="hl sym">=</span> search m <span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)</span> p ps
search m i p ps <span class="hl sym">=</span> let <span class="hl sym">(</span>q<span class="hl sym">,</span>r<span class="hl sym">) =</span> divMod i <span class="hl num">10</span> in
    <span class="hl sym">[</span> ps'
    <span class="hl sym">|</span> p' <span class="hl sym">&lt;- [</span><span class="hl num">0</span>.<span class="hl num">.9</span><span class="hl sym">],</span> p .<span class="hl sym">&amp;</span>. shiftL <span class="hl num">1</span> p' <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">,</span>
      mask <span class="hl sym">&lt;-</span> pieceMasks <span class="hl sym">!</span> p' <span class="hl sym">!</span> r<span class="hl sym">,</span>
      let mask' <span class="hl sym">=</span> shiftL mask <span class="hl sym">(</span><span class="hl num">10</span><span class="hl sym">*</span>q<span class="hl sym">),</span>
      m .<span class="hl sym">&amp;</span>. mask' <span class="hl sym">==</span> <span class="hl num">0</span><span class="hl sym">,</span>
      ps' <span class="hl sym">&lt;-</span> search <span class="hl sym">(</span>m .<span class="hl sym">|</span>. mask'<span class="hl sym">) (</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">) (</span>p .<span class="hl sym">|</span>. shiftL <span class="hl num">1</span> p'<span class="hl sym">) ((</span>p'<span class="hl sym">,</span>mask'<span class="hl sym">):</span>ps<span class="hl sym">)]</span>

rows ps <span class="hl sym">= [[</span>i <span class="hl sym">|</span> x <span class="hl sym">&lt;- [</span><span class="hl num">0</span>.<span class="hl num">.4</span><span class="hl sym">], (</span>i<span class="hl sym">,</span>m<span class="hl sym">) &lt;-</span> ps<span class="hl sym">,</span> shiftL <span class="hl num">1</span> <span class="hl sym">(</span>y<span class="hl sym">*</span><span class="hl num">5</span><span class="hl sym">+</span>x<span class="hl sym">)</span> .<span class="hl sym">&amp;</span>. m <span class="hl sym">/=</span> <span class="hl num">0</span><span class="hl sym">] |</span> y <span class="hl sym">&lt;- [</span><span class="hl num">0</span>.<span class="hl num">.9</span><span class="hl sym">]]</span>

main <span class="hl sym">=</span> do
    n <span class="hl sym">&lt;-</span> readIO . head <span class="hl sym">=&lt;&lt;</span> getArgs
    let sols <span class="hl sym">=</span> map rows <span class="hl sym">(</span>take n <span class="hl sym">(</span>search <span class="hl sym">(-</span>shiftL <span class="hl num">1 50</span> <span class="hl sym">::</span> Word64<span class="hl sym">)</span> <span class="hl num">0</span> <span class="hl sym">(</span><span class="hl num">0</span> <span class="hl sym">::</span> Word<span class="hl sym">) []))</span>
    putStrLn <span class="hl sym">(</span>show <span class="hl sym">(</span>length sols<span class="hl sym">) ++</span> <span class="hl str">&quot; solutions found\n&quot;</span><span class="hl sym">)</span>
    mapM <span class="hl sym">(</span>putStrLn . unlines . <span class="hl sym">(</span>zipWith <span class="hl sym">(++) (</span>cycle <span class="hl sym">[</span><span class="hl str">&quot;&quot;</span><span class="hl sym">,</span><span class="hl str">&quot; &quot;</span><span class="hl sym">]))</span>
         . map <span class="hl sym">((++</span> <span class="hl str">&quot; &quot;</span><span class="hl sym">)</span> . unwords . map show<span class="hl sym">)) [</span>minimum sols<span class="hl sym">,</span>maximum sols<span class="hl sym">]</span>
