<span class="hl com">/*</span>
<span class="hl com"> * The Computer Language Benchmarks Game</span>
<span class="hl com"> * http://shootout.alioth.debian.org/</span>
<span class="hl com"> *</span>
<span class="hl com"> * Contributed by Sebastien Loisel</span>
<span class="hl com"> * Modified by Alex Belits</span>
<span class="hl com"> */</span>

<span class="hl dir">#include &lt;stdio.h&gt;</span>
<span class="hl dir">#include &lt;stdlib.h&gt;</span>
<span class="hl dir">#include &lt;math.h&gt;</span>

<span class="hl kwb">double</span> <span class="hl sym">*</span>A_global<span class="hl sym">=</span>NULL<span class="hl sym">;</span>
<span class="hl kwb">int</span> N_global<span class="hl sym">;</span>

<span class="hl kwb">double</span> <span class="hl kwd">eval_A</span><span class="hl sym">(</span><span class="hl kwb">int</span> i<span class="hl sym">,</span> <span class="hl kwb">int</span> j<span class="hl sym">) {</span> <span class="hl kwa">return</span> <span class="hl num">1.0</span><span class="hl sym">/((</span>i<span class="hl sym">+</span>j<span class="hl sym">)*(</span>i<span class="hl sym">+</span>j<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)/</span><span class="hl num">2</span><span class="hl sym">+</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">); }</span>

<span class="hl kwb">int</span> <span class="hl kwd">prepare_A</span><span class="hl sym">(</span><span class="hl kwb">int</span> N<span class="hl sym">)</span>
<span class="hl sym">{</span>
  <span class="hl kwb">int</span> i<span class="hl sym">,</span>j<span class="hl sym">;</span>

  N_global<span class="hl sym">=</span>N<span class="hl sym">;</span>
  A_global<span class="hl sym">=(</span><span class="hl kwb">double</span><span class="hl sym">*)</span><span class="hl kwd">malloc</span><span class="hl sym">(</span>N<span class="hl sym">*</span>N<span class="hl sym">*</span><span class="hl kwa">sizeof</span><span class="hl sym">(</span><span class="hl kwb">double</span><span class="hl sym">));</span>

  <span class="hl kwa">if</span><span class="hl sym">(</span>A_global<span class="hl sym">==</span>NULL<span class="hl sym">)</span> <span class="hl kwa">return</span> <span class="hl sym">-</span><span class="hl num">1</span><span class="hl sym">;</span>

  <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>i<span class="hl sym">++)</span>
    <span class="hl sym">{</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>j<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>j<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>j<span class="hl sym">++)</span>
	<span class="hl sym">{</span>
	  A_global<span class="hl sym">[</span>i<span class="hl sym">*</span>N<span class="hl sym">+</span>j<span class="hl sym">]=</span><span class="hl kwd">eval_A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">);</span>
	<span class="hl sym">}</span>
    <span class="hl sym">}</span>
  <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

<span class="hl kwb">double</span> <span class="hl kwd">get_A</span><span class="hl sym">(</span><span class="hl kwb">int</span> i<span class="hl sym">,</span> <span class="hl kwb">int</span> j<span class="hl sym">) {</span> <span class="hl kwa">return</span> A_global<span class="hl sym">[</span>i<span class="hl sym">*</span>N_global<span class="hl sym">+</span>j<span class="hl sym">]; }</span>

<span class="hl kwb">void</span> <span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span><span class="hl kwb">int</span> N<span class="hl sym">,</span> <span class="hl kwb">const double</span> u<span class="hl sym">[],</span> <span class="hl kwb">double</span> Au<span class="hl sym">[])</span>
<span class="hl sym">{</span>
  <span class="hl kwb">int</span> i<span class="hl sym">,</span>j<span class="hl sym">,</span>n2<span class="hl sym">;</span>
  <span class="hl kwb">double</span> t0<span class="hl sym">,</span>t1<span class="hl sym">;</span>

  n2<span class="hl sym">=</span>N<span class="hl sym">&amp;~</span><span class="hl num">1</span><span class="hl sym">;</span>
  <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span>n2<span class="hl sym">;</span>i<span class="hl sym">+=</span><span class="hl num">2</span><span class="hl sym">)</span>
    <span class="hl sym">{</span>
      t0<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      t1<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>j<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>j<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>j<span class="hl sym">++)</span>
	<span class="hl sym">{</span>
	  t0<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
	  t1<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">,</span>j<span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
	<span class="hl sym">}</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">]=</span>t0<span class="hl sym">;</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">]=</span>t1<span class="hl sym">;</span>
    <span class="hl sym">}</span>

  <span class="hl kwa">if</span><span class="hl sym">(</span>i<span class="hl sym">!=</span>N<span class="hl sym">)</span>
    <span class="hl sym">{</span>
      t0<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>j<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>j<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>j<span class="hl sym">++)</span>
        <span class="hl sym">{</span>
	  t0<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>i<span class="hl sym">,</span>j<span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
	<span class="hl sym">}</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">]=</span>t0<span class="hl sym">;</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwb">void</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span><span class="hl kwb">int</span> N<span class="hl sym">,</span> <span class="hl kwb">const double</span> u<span class="hl sym">[],</span> <span class="hl kwb">double</span> Au<span class="hl sym">[])</span>
<span class="hl sym">{</span>
  <span class="hl kwb">int</span> i<span class="hl sym">,</span>j<span class="hl sym">,</span>n4<span class="hl sym">;</span>
  <span class="hl kwb">double</span> t0<span class="hl sym">,</span>t1<span class="hl sym">,</span>t2<span class="hl sym">,</span>t3<span class="hl sym">;</span>

  n4<span class="hl sym">=</span>N<span class="hl sym">&amp;~</span><span class="hl num">3</span><span class="hl sym">;</span>
  <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span>n4<span class="hl sym">;</span>i<span class="hl sym">+=</span><span class="hl num">4</span><span class="hl sym">)</span>
    <span class="hl sym">{</span>
      t0<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      t1<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      t2<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      t3<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>j<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>j<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>j<span class="hl sym">++)</span>
        <span class="hl sym">{</span>
	  t0<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
	  t1<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
	  t2<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
	  t3<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">+</span><span class="hl num">3</span><span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
        <span class="hl sym">}</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">]=</span>t0<span class="hl sym">;</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">+</span><span class="hl num">1</span><span class="hl sym">]=</span>t1<span class="hl sym">;</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">+</span><span class="hl num">2</span><span class="hl sym">]=</span>t2<span class="hl sym">;</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">+</span><span class="hl num">3</span><span class="hl sym">]=</span>t3<span class="hl sym">;</span>
    <span class="hl sym">}</span>

  <span class="hl kwa">for</span><span class="hl sym">(;</span>i<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>i<span class="hl sym">++)</span>
    <span class="hl sym">{</span>
      t0<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
      <span class="hl kwa">for</span><span class="hl sym">(</span>j<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>j<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>j<span class="hl sym">++)</span>
        <span class="hl sym">{</span>
	  t0<span class="hl sym">+=</span><span class="hl kwd">get_A</span><span class="hl sym">(</span>j<span class="hl sym">,</span>i<span class="hl sym">)*</span>u<span class="hl sym">[</span>j<span class="hl sym">];</span>
	<span class="hl sym">}</span>
      Au<span class="hl sym">[</span>i<span class="hl sym">]=</span>t0<span class="hl sym">;</span>
    <span class="hl sym">}</span>
<span class="hl sym">}</span>

<span class="hl kwb">void</span> <span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span><span class="hl kwb">int</span> N<span class="hl sym">,</span> <span class="hl kwb">const double</span> u<span class="hl sym">[],</span> <span class="hl kwb">double</span> AtAu<span class="hl sym">[])</span>
<span class="hl sym">{</span> <span class="hl kwb">double</span> v<span class="hl sym">[</span>N<span class="hl sym">];</span> <span class="hl kwd">eval_A_times_u</span><span class="hl sym">(</span>N<span class="hl sym">,</span>u<span class="hl sym">,</span>v<span class="hl sym">);</span> <span class="hl kwd">eval_At_times_u</span><span class="hl sym">(</span>N<span class="hl sym">,</span>v<span class="hl sym">,</span>AtAu<span class="hl sym">); }</span>

<span class="hl kwb">int</span> <span class="hl kwd">main</span><span class="hl sym">(</span><span class="hl kwb">int</span> argc<span class="hl sym">,</span> <span class="hl kwb">char</span> <span class="hl sym">*</span>argv<span class="hl sym">[])</span>
<span class="hl sym">{</span>
  <span class="hl kwb">int</span> i<span class="hl sym">;</span>
  <span class="hl kwb">int</span> N <span class="hl sym">= ((</span>argc <span class="hl sym">==</span> <span class="hl num">2</span><span class="hl sym">)</span> ? <span class="hl kwd">atoi</span><span class="hl sym">(</span>argv<span class="hl sym">[</span><span class="hl num">1</span><span class="hl sym">]) :</span> <span class="hl num">2000</span><span class="hl sym">);</span>
  <span class="hl kwb">double</span> u<span class="hl sym">[</span>N<span class="hl sym">],</span>v<span class="hl sym">[</span>N<span class="hl sym">],</span>vBv<span class="hl sym">,</span>vv<span class="hl sym">;</span>

  <span class="hl kwa">if</span><span class="hl sym">(</span><span class="hl kwd">prepare_A</span><span class="hl sym">(</span>N<span class="hl sym">)){</span>
    <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;Insufficient memory</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">);</span>
    <span class="hl kwa">return</span> <span class="hl num">1</span><span class="hl sym">;</span>
  <span class="hl sym">}</span>

  <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>i<span class="hl sym">++)</span> u<span class="hl sym">[</span>i<span class="hl sym">]=</span><span class="hl num">1</span><span class="hl sym">;</span>
  <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span><span class="hl num">10</span><span class="hl sym">;</span>i<span class="hl sym">++)</span>
    <span class="hl sym">{</span>
      <span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>N<span class="hl sym">,</span>u<span class="hl sym">,</span>v<span class="hl sym">);</span>
      <span class="hl kwd">eval_AtA_times_u</span><span class="hl sym">(</span>N<span class="hl sym">,</span>v<span class="hl sym">,</span>u<span class="hl sym">);</span>
    <span class="hl sym">}</span>
  vBv<span class="hl sym">=</span>vv<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>
  <span class="hl kwa">for</span><span class="hl sym">(</span>i<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span>i<span class="hl sym">&lt;</span>N<span class="hl sym">;</span>i<span class="hl sym">++) {</span> vBv<span class="hl sym">+=</span>u<span class="hl sym">[</span>i<span class="hl sym">]*</span>v<span class="hl sym">[</span>i<span class="hl sym">];</span> vv<span class="hl sym">+=</span>v<span class="hl sym">[</span>i<span class="hl sym">]*</span>v<span class="hl sym">[</span>i<span class="hl sym">]; }</span>
  <span class="hl kwd">printf</span><span class="hl sym">(</span><span class="hl str">&quot;%0.9f</span><span class="hl esc">\n</span><span class="hl str">&quot;</span><span class="hl sym">,</span><span class="hl kwd">sqrt</span><span class="hl sym">(</span>vBv<span class="hl sym">/</span>vv<span class="hl sym">));</span>
  <span class="hl kwd">free</span><span class="hl sym">(</span>A_global<span class="hl sym">);</span>
  <span class="hl kwa">return</span> <span class="hl num">0</span><span class="hl sym">;</span>
<span class="hl sym">}</span>

