<span class="hl com">(* The Computer Language Benchmarks Game</span>
<span class="hl com">   http://shootout.alioth.debian.org/</span>
<span class="hl com">   contributed by Milan Stanojevic, Jul 12 2009</span>
<span class="hl com">   modified to use event channels by Otto Bommer</span>
<span class="hl com">*)</span>

<span class="hl kwa">open</span> <span class="hl kwd">Printf</span>

<span class="hl kwa">let</span> str2list s <span class="hl sym">=</span> <span class="hl kwa">let</span> l<span class="hl sym">=</span><span class="hl kwb">ref</span> <span class="hl sym">[]</span> <span class="hl kwa">in</span> <span class="hl kwc">String</span><span class="hl sym">.</span>iter <span class="hl sym">(</span><span class="hl kwa">fun</span> c <span class="hl sym">-&gt;</span> l<span class="hl sym">:=!</span>l&#64;<span class="hl sym">[</span>c<span class="hl sym">])</span> s<span class="hl sym">; !</span>l

<span class="hl kwa">let</span> spell_char <span class="hl sym">=</span> <span class="hl kwa">function</span>
  <span class="hl sym">|</span> <span class="hl kwb">'0'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;zero&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'1'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;one&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'2'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;two&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'3'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;three&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'4'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;four&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'5'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;five&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'6'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;six&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'7'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;seven&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'8'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;eight&quot;</span>
  <span class="hl sym">|</span> <span class="hl kwb">'9'</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;nine&quot;</span>
  <span class="hl sym">|</span> x <span class="hl sym">-&gt;</span> failwith <span class="hl str">&quot;unexpected char&quot;</span>

<span class="hl kwa">let</span> spell_int i <span class="hl sym">=</span> <span class="hl kwc">String</span><span class="hl sym">.</span>concat <span class="hl str">&quot; &quot;</span> <span class="hl sym">(</span><span class="hl kwc">List</span><span class="hl sym">.</span>map spell_char <span class="hl sym">(</span>str2list <span class="hl sym">(</span>string_of_int i<span class="hl sym">)))</span>

<span class="hl kwa">module</span> <span class="hl kwd">Color</span> <span class="hl sym">=</span> <span class="hl kwa">struct</span>
<span class="hl kwa">type</span> t <span class="hl sym">=</span> <span class="hl kwd">B</span> <span class="hl sym">|</span> <span class="hl kwd">R</span> <span class="hl sym">|</span> <span class="hl kwd">Y</span>

<span class="hl kwa">let</span> complement a b <span class="hl sym">=</span>
<span class="hl kwa">match</span> a<span class="hl sym">,</span> b <span class="hl kwa">with</span>
  <span class="hl sym">|</span> <span class="hl kwd">B</span><span class="hl sym">,</span> <span class="hl kwd">B</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">B</span>
  <span class="hl sym">|</span> <span class="hl kwd">B</span><span class="hl sym">,</span> <span class="hl kwd">R</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">Y</span>
  <span class="hl sym">|</span> <span class="hl kwd">B</span><span class="hl sym">,</span> <span class="hl kwd">Y</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">R</span>
  <span class="hl sym">|</span> <span class="hl kwd">R</span><span class="hl sym">,</span> <span class="hl kwd">B</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">Y</span>
  <span class="hl sym">|</span> <span class="hl kwd">R</span><span class="hl sym">,</span> <span class="hl kwd">R</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">R</span>
  <span class="hl sym">|</span> <span class="hl kwd">R</span><span class="hl sym">,</span> <span class="hl kwd">Y</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">B</span>
  <span class="hl sym">|</span> <span class="hl kwd">Y</span><span class="hl sym">,</span> <span class="hl kwd">B</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">R</span>
  <span class="hl sym">|</span> <span class="hl kwd">Y</span><span class="hl sym">,</span> <span class="hl kwd">R</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">B</span>
  <span class="hl sym">|</span> <span class="hl kwd">Y</span><span class="hl sym">,</span> <span class="hl kwd">Y</span> <span class="hl sym">-&gt;</span> <span class="hl kwd">Y</span>

<span class="hl kwa">let</span> to_string <span class="hl sym">=</span> <span class="hl kwa">function</span> <span class="hl kwd">B</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;blue&quot;</span> <span class="hl sym">|</span> <span class="hl kwd">R</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;red&quot;</span> <span class="hl sym">|</span> <span class="hl kwd">Y</span> <span class="hl sym">-&gt;</span> <span class="hl str">&quot;yellow&quot;</span>

<span class="hl kwa">let</span> all <span class="hl sym">= [</span> <span class="hl kwd">B</span><span class="hl sym">;</span> <span class="hl kwd">R</span><span class="hl sym">;</span> <span class="hl kwd">Y</span> <span class="hl sym">]</span>
<span class="hl kwa">end</span>

<span class="hl kwa">module</span> <span class="hl kwd">Game</span> <span class="hl sym">=</span> <span class="hl kwa">struct</span>
<span class="hl kwa">type</span> place <span class="hl sym">= {</span>
  <span class="hl kwa">mutable</span> meetings_left <span class="hl sym">:</span> <span class="hl kwb">int</span><span class="hl sym">;</span>
  meet <span class="hl sym">: (</span>chameneos <span class="hl kwc">Event</span><span class="hl sym">.</span>channel<span class="hl sym">)</span>
<span class="hl sym">}</span>

<span class="hl kwa">and</span> chameneos <span class="hl sym">= {</span>
  <span class="hl kwa">mutable</span> color <span class="hl sym">:</span> <span class="hl kwc">Color</span><span class="hl sym">.</span>t<span class="hl sym">;</span>
  <span class="hl kwa">mutable</span> meetings <span class="hl sym">:</span> <span class="hl kwb">int</span><span class="hl sym">;</span>
  <span class="hl kwa">mutable</span> self_meetings <span class="hl sym">:</span> <span class="hl kwb">int</span><span class="hl sym">;</span>
  morph <span class="hl sym">: ((</span>chameneos <span class="hl sym">*</span> <span class="hl kwb">bool</span><span class="hl sym">)</span> <span class="hl kwc">Event</span><span class="hl sym">.</span>channel<span class="hl sym">);</span>
<span class="hl sym">}</span>

<span class="hl kwa">let</span> create_place n <span class="hl sym">= {</span> meetings_left<span class="hl sym">=</span>n<span class="hl sym">;</span> meet<span class="hl sym">=</span><span class="hl kwc">Event</span><span class="hl sym">.</span>new_channel <span class="hl sym">() }</span>

<span class="hl kwa">let</span> create_chameneos color <span class="hl sym">=</span>
  <span class="hl sym">{</span> color<span class="hl sym">=</span>color<span class="hl sym">;</span> meetings<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span> self_meetings<span class="hl sym">=</span><span class="hl num">0</span><span class="hl sym">;</span> morph<span class="hl sym">=</span><span class="hl kwc">Event</span><span class="hl sym">.</span>new_channel <span class="hl sym">() }</span>

<span class="hl kwa">let</span> send chn v <span class="hl sym">=</span> <span class="hl kwc">Event</span><span class="hl sym">.</span>sync <span class="hl sym">(</span><span class="hl kwc">Event</span><span class="hl sym">.</span>send chn v<span class="hl sym">)</span>
<span class="hl kwa">let</span> receive chn <span class="hl sym">=</span> <span class="hl kwc">Event</span><span class="hl sym">.</span>sync <span class="hl sym">(</span><span class="hl kwc">Event</span><span class="hl sym">.</span>receive chn<span class="hl sym">)</span>

<span class="hl kwa">let rec</span> run_place place players <span class="hl sym">() =</span> 
  <span class="hl kwa">if</span> place<span class="hl sym">.</span>meetings_left <span class="hl sym">&gt;</span> <span class="hl num">0</span> <span class="hl kwa">then</span> 
    <span class="hl kwa">begin</span> 
    <span class="hl kwa">let</span> ch1 <span class="hl sym">=</span> receive place<span class="hl sym">.</span>meet <span class="hl kwa">in</span>
    <span class="hl kwa">let</span> ch2 <span class="hl sym">=</span> receive place<span class="hl sym">.</span>meet <span class="hl kwa">in</span>
    send ch1<span class="hl sym">.</span>morph <span class="hl sym">(</span>ch2<span class="hl sym">,</span> <span class="hl kwa">true</span><span class="hl sym">);</span>
    send ch2<span class="hl sym">.</span>morph <span class="hl sym">(</span>ch1<span class="hl sym">,</span> <span class="hl kwa">true</span><span class="hl sym">);</span>
    place<span class="hl sym">.</span>meetings_left <span class="hl sym">&lt;-</span> place<span class="hl sym">.</span>meetings_left <span class="hl sym">-</span> <span class="hl num">1</span><span class="hl sym">;</span> 
    run_place place players <span class="hl sym">()</span>
    <span class="hl kwa">end</span>
  <span class="hl kwa">else</span>
    <span class="hl kwa">for</span> i <span class="hl sym">=</span> <span class="hl num">0</span> <span class="hl kwa">to</span> players<span class="hl sym">-</span><span class="hl num">1</span> <span class="hl kwa">do</span>
      <span class="hl kwa">let</span> ch <span class="hl sym">=</span> receive place<span class="hl sym">.</span>meet <span class="hl kwa">in</span> 
      send ch<span class="hl sym">.</span>morph <span class="hl sym">(</span>ch<span class="hl sym">,</span> <span class="hl kwa">false</span><span class="hl sym">)</span>
    <span class="hl kwa">done</span>

<span class="hl kwa">let rec</span> run_chameneos ch place <span class="hl sym">() =</span>
  send place<span class="hl sym">.</span>meet ch<span class="hl sym">;</span>
  <span class="hl kwa">let</span> <span class="hl sym">(</span>other<span class="hl sym">,</span> continue<span class="hl sym">) =</span> receive ch<span class="hl sym">.</span>morph <span class="hl kwa">in</span>
  <span class="hl kwa">if</span> continue <span class="hl kwa">then</span> 
    <span class="hl kwa">begin</span>
    ch<span class="hl sym">.</span>meetings <span class="hl sym">&lt;-</span> ch<span class="hl sym">.</span>meetings <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    <span class="hl kwa">if</span> ch <span class="hl sym">==</span> other <span class="hl kwa">then</span> ch<span class="hl sym">.</span>self_meetings <span class="hl sym">&lt;-</span> ch<span class="hl sym">.</span>self_meetings <span class="hl sym">+</span> <span class="hl num">1</span><span class="hl sym">;</span>
    ch<span class="hl sym">.</span>color <span class="hl sym">&lt;-</span> <span class="hl kwc">Color</span><span class="hl sym">.</span>complement ch<span class="hl sym">.</span>color other<span class="hl sym">.</span>color<span class="hl sym">;</span>
    run_chameneos ch place <span class="hl sym">()</span>
    <span class="hl kwa">end</span>

<span class="hl kwa">let</span> play colors max_meetings <span class="hl sym">=</span>
  <span class="hl kwc">List</span><span class="hl sym">.</span>iter <span class="hl sym">(</span><span class="hl kwa">fun</span> c <span class="hl sym">-&gt;</span> printf <span class="hl str">&quot; %s&quot;</span> <span class="hl sym">(</span><span class="hl kwc">Color</span><span class="hl sym">.</span>to_string c<span class="hl sym">))</span> colors<span class="hl sym">;</span> printf <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">%!&quot;</span><span class="hl sym">;</span>

  <span class="hl kwa">let</span> place <span class="hl sym">=</span> create_place max_meetings <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> pthread <span class="hl sym">=</span> <span class="hl kwc">Thread</span><span class="hl sym">.</span>create <span class="hl sym">(</span>run_place place <span class="hl sym">(</span><span class="hl kwc">List</span><span class="hl sym">.</span>length colors<span class="hl sym">)) ()</span> <span class="hl kwa">in</span>

  <span class="hl kwa">let</span> chs <span class="hl sym">=</span> <span class="hl kwc">List</span><span class="hl sym">.</span>map create_chameneos colors <span class="hl kwa">in</span>
  <span class="hl kwa">let</span> chthreads <span class="hl sym">=</span> <span class="hl kwc">List</span><span class="hl sym">.</span>map <span class="hl sym">(</span><span class="hl kwa">fun</span> ch <span class="hl sym">-&gt;</span> <span class="hl kwc">Thread</span><span class="hl sym">.</span>create <span class="hl sym">(</span>run_chameneos ch place<span class="hl sym">) ())</span> chs <span class="hl kwa">in</span>

  <span class="hl kwc">List</span><span class="hl sym">.</span>iter <span class="hl sym">(</span><span class="hl kwa">fun</span> cht <span class="hl sym">-&gt;</span> <span class="hl kwc">Thread</span><span class="hl sym">.</span>join cht<span class="hl sym">) (</span>pthread<span class="hl sym">::</span>chthreads<span class="hl sym">);</span>

  <span class="hl kwc">List</span><span class="hl sym">.</span>iter <span class="hl sym">(</span><span class="hl kwa">fun</span> ch <span class="hl sym">-&gt;</span> printf <span class="hl str">&quot;%d %s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> ch<span class="hl sym">.</span>meetings <span class="hl sym">(</span>spell_int ch<span class="hl sym">.</span>self_meetings<span class="hl sym">))</span> chs<span class="hl sym">;</span>
  <span class="hl kwa">let</span> meetings <span class="hl sym">=</span> <span class="hl kwc">List</span><span class="hl sym">.</span>fold_left <span class="hl sym">(+)</span> <span class="hl num">0</span> <span class="hl sym">(</span><span class="hl kwc">List</span><span class="hl sym">.</span>map <span class="hl sym">(</span><span class="hl kwa">fun</span> chs <span class="hl sym">-&gt;</span> chs<span class="hl sym">.</span>meetings<span class="hl sym">)</span> chs<span class="hl sym">)</span> <span class="hl kwa">in</span> 
  printf <span class="hl str">&quot; %s</span><span class="hl esc">\n\n</span><span class="hl str">%!&quot;</span> <span class="hl sym">(</span>spell_int meetings<span class="hl sym">)</span>
<span class="hl kwa">end</span>

<span class="hl kwa">open</span> <span class="hl kwd">Color</span>

<span class="hl kwa">let</span> print_complements <span class="hl sym">() =</span> <span class="hl kwc">List</span><span class="hl sym">.</span>iter <span class="hl sym">(</span><span class="hl kwa">fun</span> c1 <span class="hl sym">-&gt;</span> <span class="hl kwc">List</span><span class="hl sym">.</span>iter <span class="hl sym">(</span><span class="hl kwa">fun</span> c2 <span class="hl sym">-&gt;</span>
  printf <span class="hl str">&quot;%s + %s -&gt; %s</span><span class="hl esc">\n</span><span class="hl str">&quot;</span> <span class="hl sym">(</span>to_string c1<span class="hl sym">) (</span>to_string c2<span class="hl sym">)</span>
    <span class="hl sym">(</span>to_string <span class="hl sym">(</span>complement c1 c2<span class="hl sym">)) )</span> all<span class="hl sym">)</span> all<span class="hl sym">;</span>
  printf <span class="hl str">&quot;</span><span class="hl esc">\n</span><span class="hl str">&quot;</span>

<span class="hl kwa">let</span> _ <span class="hl sym">=</span>
  <span class="hl kwa">let</span> max_meetings <span class="hl sym">=</span> <span class="hl kwa">try</span> int_of_string <span class="hl kwc">Sys</span><span class="hl sym">.</span>argv<span class="hl sym">.(</span><span class="hl num">1</span><span class="hl sym">)</span> <span class="hl kwa">with</span> _ <span class="hl sym">-&gt;</span> <span class="hl num">600</span> <span class="hl kwa">in</span>
  print_complements <span class="hl sym">();</span>
  <span class="hl kwc">Game</span><span class="hl sym">.</span>play <span class="hl sym">[</span><span class="hl kwd">B</span><span class="hl sym">;</span> <span class="hl kwd">R</span><span class="hl sym">;</span> <span class="hl kwd">Y</span><span class="hl sym">]</span> max_meetings<span class="hl sym">;</span>
  <span class="hl kwc">Game</span><span class="hl sym">.</span>play <span class="hl sym">[</span><span class="hl kwd">B</span><span class="hl sym">;</span> <span class="hl kwd">R</span><span class="hl sym">;</span> <span class="hl kwd">Y</span><span class="hl sym">;</span> <span class="hl kwd">R</span><span class="hl sym">;</span> <span class="hl kwd">Y</span><span class="hl sym">;</span> <span class="hl kwd">B</span><span class="hl sym">;</span> <span class="hl kwd">R</span><span class="hl sym">;</span> <span class="hl kwd">Y</span><span class="hl sym">;</span> <span class="hl kwd">R</span><span class="hl sym">;</span> <span class="hl kwd">B</span><span class="hl sym">]</span> max_meetings<span class="hl sym">;</span>

